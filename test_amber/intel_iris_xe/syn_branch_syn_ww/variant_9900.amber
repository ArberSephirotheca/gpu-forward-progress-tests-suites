#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 do
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, false, false, false)), (bool(bvec4(true, false, false, false))) || false), ! (! (bool(bvec4(true, false, false, false))))))))), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, false, false)), ! (! (bool(bvec4(true, false, false, false))))))))))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-9.6)), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(float(-12645))), bool(false)))) && _GLF_IDENTITY(true, ! (! (true)))))))) || false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(faceforward(injectionSwitch, vec2(440.790, -88.73), vec2(7.8, -4.9))))).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), (bool(bvec4(false, true, true, false))) || false)))), ! (! (bool(bvec4(true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false)))))))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, ! (! (true)))))))) || false), true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, false, false)), ! (! (bool(bvec4(true, false, false, false))))))))), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, false, false)), ! (! (bool(bvec4(true, false, false, false))))))))))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(float(-12645))), bool(false)))) && _GLF_IDENTITY(true, ! (! (true)))))))) || false), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, false, false)), ! (! (bool(bvec4(true, false, false, false))))))))), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), false)), ! (! (bool(bvec4(true, false, false, false))))))))))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(float(-12645))), bool(false)))) && _GLF_IDENTITY(true, ! (! (true)))))))) || false)))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, false, false)), ! (! (bool(bvec4(true, false, false, false)))))))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, ! (! (true))), ((injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, ! (! (true)))) || false)))))) || false), true, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / 1.0, clamp((injectionSwitch.x) / 1.0, (injectionSwitch.x) / 1.0, _GLF_IDENTITY((injectionSwitch.x) / 1.0, 0.0 + ((injectionSwitch.x) / 1.0))))))), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, 1.0)), _GLF_IDENTITY((float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), 1.0, cos(0.0), 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), cos(0.0), 1.0, 0.0, 1.0, 0.0, 0.0), mat3(1.0) * (mat4x3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), 1.0, cos(0.0), 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), cos(0.0), 1.0, 0.0, 1.0, 0.0, 0.0))))), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, 1.0))), clamp((float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), 1.0, cos(0.0), 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), cos(0.0), 1.0, 0.0, 1.0, 0.0, 0.0), mat3(1.0) * (mat4x3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), 1.0, cos(0.0), 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), cos(0.0), 1.0, 0.0, 1.0, 0.0, 0.0))))), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, 1.0))), (float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), 1.0, cos(0.0), 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), cos(0.0), 1.0, 0.0, 1.0, 0.0, 0.0), mat3(1.0) * (mat4x3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), 1.0, cos(0.0), 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), cos(0.0), 1.0, 0.0, 1.0, 0.0, 0.0))))), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, 1.0))), _GLF_IDENTITY((float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), 1.0, cos(0.0), 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), cos(0.0), 1.0, 0.0, 1.0, 0.0, 0.0), mat3(1.0) * (mat4x3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), 1.0, cos(0.0), 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), cos(0.0), 1.0, 0.0, 1.0, 0.0, 0.0))))), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, 1.0))), min((float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), 1.0, cos(0.0), 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), cos(0.0), 1.0, 0.0, 1.0, 0.0, 0.0), mat3(1.0) * (mat4x3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), 1.0, cos(0.0), 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), cos(0.0), 1.0, 0.0, 1.0, 0.0, 0.0))))), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, 1.0))), (float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), 1.0, cos(0.0), 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), cos(0.0), 1.0, 0.0, 1.0, 0.0, 0.0), mat3(1.0) * (mat4x3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), 1.0, cos(0.0), 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), cos(0.0), 1.0, 0.0, 1.0, 0.0, 0.0))))), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, 1.0))))))) - abs(0.0))) > injectionSwitch.y) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, false, false)), ! (! (bool(bvec4(true, false, false, false))))))))), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, false, false)), ! _GLF_IDENTITY(_GLF_IDENTITY((! (bool(bvec4(true, false, false, false)))), ((! (bool(bvec4(true, false, false, false))))) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY((! (bool(bvec4(true, false, false, false)))), ((! (bool(bvec4(true, false, false, false))))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (bool(bvec4(true, false, false, false)))), ((! (bool(bvec4(true, false, false, false))))) || false)), true && (! (_GLF_IDENTITY((! (bool(bvec4(true, false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))))))), false)))), ((! (bool(bvec4(true, false, false, false))))) || false)))))))))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, false, false)), ! _GLF_IDENTITY(_GLF_IDENTITY((! (bool(bvec4(true, false, false, false)))), ((! (bool(bvec4(true, false, false, false))))) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY((! (bool(bvec4(true, false, false, false)))), ((! (bool(bvec4(true, false, false, false))))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (bool(bvec4(true, false, false, false)))), ((! (bool(bvec4(true, false, false, false))))) || false)), true && (! (_GLF_IDENTITY((! (bool(bvec4(true, false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))))))), false)))), ((! (bool(bvec4(true, false, false, false))))) || false)))))))))))))))), (_GLF_IDENTITY(bool(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, false, false)), ! _GLF_IDENTITY(_GLF_IDENTITY((! (bool(bvec4(true, false, false, false)))), ((! (bool(bvec4(true, false, false, false))))) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY((! (bool(bvec4(true, false, false, false)))), ((! (bool(bvec4(true, false, false, false))))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (bool(bvec4(true, false, false, false)))), ((! (bool(bvec4(true, false, false, false))))) || false)), true && (! (_GLF_IDENTITY((! (bool(bvec4(true, false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))))))), false)))), ((! (bool(bvec4(true, false, false, false))))) || false)))))))))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, false, false)), ! _GLF_IDENTITY(_GLF_IDENTITY((! (bool(bvec4(true, false, false, false)))), ((! (bool(bvec4(true, false, false, false))))) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY((! (bool(bvec4(true, false, false, false)))), ((! (bool(bvec4(true, false, false, false))))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (bool(bvec4(true, false, false, false)))), ((! (bool(bvec4(true, false, false, false))))) || false)), true && (! (_GLF_IDENTITY((! (bool(bvec4(true, false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))))))), false)))), ((! (bool(bvec4(true, false, false, false))))) || false)))))))))))))))), (bool(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, false, false)), ! _GLF_IDENTITY(_GLF_IDENTITY((! (bool(bvec4(true, false, false, false)))), ((! (bool(bvec4(true, false, false, false))))) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY((! (bool(bvec4(true, false, false, false)))), ((! (bool(bvec4(true, false, false, false))))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (bool(bvec4(true, false, false, false)))), ((! (bool(bvec4(true, false, false, false))))) || false)), true && (! (_GLF_IDENTITY((! (bool(bvec4(true, false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))))))), false)))), ((! (bool(bvec4(true, false, false, false))))) || false)))))))))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, false, false)), ! _GLF_IDENTITY(_GLF_IDENTITY((! (bool(bvec4(true, false, false, false)))), ((! (bool(bvec4(true, false, false, false))))) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY((! (bool(bvec4(true, false, false, false)))), ((! (bool(bvec4(true, false, false, false))))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (bool(bvec4(true, false, false, false)))), ((! (bool(bvec4(true, false, false, false))))) || false)), true && (! (_GLF_IDENTITY((! (bool(bvec4(true, false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))))))), false)))), ((! (bool(bvec4(true, false, false, false))))) || false))))))))))))))))) && true)) && true)))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(float(-12645), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(float(-12645), (float(-12645)) - 0.0) : _GLF_FUZZED(abs(2.9)))))), min(float(_GLF_FUZZED(_GLF_IDENTITY(float(-12645), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(float(-12645), (float(-12645)) - 0.0) : _GLF_FUZZED(abs(2.9)))))), float(_GLF_FUZZED(_GLF_IDENTITY(float(-12645), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(float(-12645), (float(-12645)) - 0.0) : _GLF_FUZZED(abs(2.9)))))))), bool(false)))) && _GLF_IDENTITY(true, ! (! (true)))))))) || false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, _GLF_IDENTITY(false, ! (! (false))), false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(true, false, false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bvec4(true, false, false, false)), ! (! (_GLF_IDENTITY(bool(bvec4(true, false, false, false)), (bool(bvec4(true, false, false, false))) || false))))))), false || ((_GLF_IDENTITY(bool(bvec4(true, false, false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bvec4(true, false, false, false)), ! (! (_GLF_IDENTITY(bool(bvec4(true, false, false, false)), (bool(bvec4(true, false, false, false))) || false)))))))))))))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (true)))))))) || false), true, true))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ 0))) != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        return;
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    continue;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) || false), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) || false), (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), (bool(injectionSwitch.x < injectionSwitch.y)) || false)))))))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)))))));
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))) && true)))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), false, _GLF_IDENTITY(true, true && (true))), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, false || (false)), false, true))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || _GLF_IDENTITY((false), ((false)) && true)), false, true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || _GLF_IDENTITY((false), ((false)) && true)), false, true)), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || _GLF_IDENTITY((false), ((false)) && true)), false, true)), true)), false))))))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))))), false, true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))))), false, true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))))), false, true)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))))), false, true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))) && true))))))))
        {
        }
       else
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false || (_GLF_DEAD(false))))
          return;
         return;
        }
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << (0u | 0u));
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u))), uvec3(0u, 0u, 0u) ^ (gl_WorkGroupSize)), min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupSize)), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupSize)))), gl_WorkGroupSize)).x, (gl_WorkGroupSize.x) | (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / _GLF_IDENTITY(1u, (1u) * 1u))));
 for(int _injected_loop_counter = (0 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > (1 ^ 1)); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    break;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    break;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         break;
        }
       return;
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(true, (true) && true) && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
    return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (workgroup_size) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(uint(7u), uint(7u)))), (~ (~ (_GLF_IDENTITY(uint(7u), uint(7u))))) | (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))) >> _GLF_IDENTITY(uint(7u), uint(7u)))) * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(subgroup_id)), max(uint(uint(subgroup_id)), uint(uint(subgroup_id)))), 0u + (uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), subgroup_id)))), _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_size) : uint(uint(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))))), clamp(_GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_size) : uint(uint(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))))), min((false ? _GLF_FUZZED(workgroup_size) : uint(uint(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))))), (false ? _GLF_FUZZED(workgroup_size) : uint(uint(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))))))), (false ? _GLF_FUZZED(workgroup_size) : uint(uint(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))))), (false ? _GLF_FUZZED(workgroup_size) : uint(uint(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))))))))), min(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), subgroup_id)))), _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_size) : uint(uint(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))))), clamp(_GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_size) : uint(uint(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))))), min((false ? _GLF_FUZZED(workgroup_size) : uint(uint(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))))), (false ? _GLF_FUZZED(workgroup_size) : uint(uint(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))))))), (false ? _GLF_FUZZED(workgroup_size) : uint(uint(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))))), (false ? _GLF_FUZZED(workgroup_size) : uint(uint(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))))))))), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), subgroup_id)))), _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_size) : uint(uint(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))))), clamp(_GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_size) : uint(uint(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))))), min((false ? _GLF_FUZZED(workgroup_size) : uint(uint(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))))), (false ? _GLF_FUZZED(workgroup_size) : uint(uint(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))))))), (false ? _GLF_FUZZED(workgroup_size) : uint(uint(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))))), (false ? _GLF_FUZZED(workgroup_size) : uint(uint(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))))))))))))))))), min(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))), ((_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)))) | ((_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))), min((_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))), (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))))))), max((_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))), ~ (~ ((_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)))))))) / 1u), subgroup_id)) * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), true && ((false))), true, true, true)))))))) || false)), true && (_GLF_DEAD(false))))
  {
   do
    {
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_id) : workgroup_base)), clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)))) + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = (1 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) / 1.0), injectionSwitch.x))); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) >> 0))
    {
     for(int _injected_loop_counter = _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, min(0, 0))))) ^ (1)), _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) | ((1))) / 1, min(_GLF_IDENTITY((1), ((1)) | ((1))) / 1, _GLF_IDENTITY((1), ((1)) | ((1))) / 1))))), 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, _GLF_IDENTITY(max(0, 0), min(max(0, 0), max(0, 0))))); _injected_loop_counter --)
      {
       return;
      }
    }
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base + ((_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(117388u) : subgroup_local_id)), subgroup_local_id, subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(117388u) : subgroup_local_id)), subgroup_local_id, subgroup_local_id))) ^ 0u) : _GLF_FUZZED(packSnorm4x8(vec4(17.24, -577.109, 14.86, -81.20))))) + 1) % subgroup_size), min(_GLF_IDENTITY(workgroup_base + subgroup_base + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(117388u) : subgroup_local_id)), subgroup_local_id, subgroup_local_id)) : _GLF_FUZZED(packSnorm4x8(vec4(17.24, -577.109, 14.86, -81.20))))), 0u | (_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(117388u) : subgroup_local_id)), subgroup_local_id, subgroup_local_id)) : _GLF_FUZZED(packSnorm4x8(vec4(17.24, -577.109, 14.86, -81.20))))))) + 1) % subgroup_size), (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_base + ((_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(117388u) : subgroup_local_id)), subgroup_local_id, subgroup_local_id)) : _GLF_FUZZED(packSnorm4x8(_GLF_IDENTITY(vec4(17.24, -577.109, 14.86, -81.20), _GLF_IDENTITY((vec4(17.24, -577.109, 14.86, -81.20)), vec4(mat2x4((vec4(17.24, -577.109, 14.86, -81.20)), 1.0, 0.0, 1.0, 0.0))) * mat4(1.0)))))) + 1) % subgroup_size)) | (_GLF_IDENTITY(workgroup_base + subgroup_base + ((_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((false ? _GLF_FUZZED(117388u) : subgroup_local_id), min(_GLF_IDENTITY((false ? _GLF_FUZZED(117388u) : subgroup_local_id), max((false ? _GLF_FUZZED(117388u) : subgroup_local_id), _GLF_IDENTITY((false ? _GLF_FUZZED(117388u) : subgroup_local_id), min((false ? _GLF_FUZZED(117388u) : subgroup_local_id), (false ? _GLF_FUZZED(117388u) : subgroup_local_id))))), (false ? _GLF_FUZZED(117388u) : subgroup_local_id)))), subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u))) : _GLF_FUZZED(packSnorm4x8(vec4(17.24, -577.109, 14.86, -81.20))))) + 1) % subgroup_size), _GLF_IDENTITY(0u, ~ (~ (0u))) + (workgroup_base + subgroup_base + ((_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(117388u) : subgroup_local_id)), subgroup_local_id, subgroup_local_id)) : _GLF_FUZZED(packSnorm4x8(vec4(17.24, -577.109, 14.86, -81.20))))) + 1) % subgroup_size))))), workgroup_base + subgroup_base + ((_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(false ? _GLF_FUZZED(117388u) : _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), (false ? _GLF_FUZZED(117388u) : _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) >> 0u))), subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (0u | 0u) | (subgroup_local_id)))) : _GLF_FUZZED(packSnorm4x8(vec4(17.24, -577.109, 14.86, -81.20))))) + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) >> (0u | 0u)))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false || (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0]))), float(_GLF_FUZZED(-8.4)), bool(false))), injectionSwitch[1])), vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, sqrt(0.0), 0.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, sqrt(0.0), 0.0))), max(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(sqrt(0.0), (false ? _GLF_FUZZED(69.17) : _GLF_IDENTITY(sqrt(0.0), min(sqrt(0.0), sqrt(0.0))))), 0.0))), _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, sqrt(0.0), 0.0))))), _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, sqrt(0.0), 0.0))))).y)), ! (_GLF_IDENTITY(! (false || _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((! (injectionSwitch.x > injectionSwitch.y))) && true)), ! (! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(false || (! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(6.3), _GLF_FUZZED(9.1)), bvec2(false, false))).y)), _GLF_IDENTITY(true, true && (true)) && (false || (! (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))), ((_GLF_IDENTITY(false || (! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true && (false || (! (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))) || false)), (_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(false || (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (true ? max(injectionSwitch.x, injectionSwitch.x) : _GLF_FUZZED(-6.4))), 0.0, 0.0), min(vec3(_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (true ? max(injectionSwitch.x, injectionSwitch.x) : _GLF_FUZZED(-6.4))), 0.0, 0.0), vec3(_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (true ? max(injectionSwitch.x, injectionSwitch.x) : _GLF_FUZZED(-6.4))), 0.0, 0.0)))), (false ? _GLF_FUZZED(-77.27) : float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (true ? max(injectionSwitch.x, injectionSwitch.x) : _GLF_FUZZED(-6.4))), 0.0, 0.0), min(vec3(_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (true ? max(injectionSwitch.x, injectionSwitch.x) : _GLF_FUZZED(-6.4))), 0.0, 0.0), vec3(_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (true ? max(injectionSwitch.x, injectionSwitch.x) : _GLF_FUZZED(-6.4))), 0.0, 0.0)))))))) > injectionSwitch.y)), true && (false || (! (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))), ((_GLF_IDENTITY(false || (! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true && (false || (! (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))) || false)), bool(bool((! _GLF_IDENTITY((_GLF_IDENTITY(false || (! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true && (false || (! (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))), ((_GLF_IDENTITY(false || (! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true && (false || _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mat2(1.0) * ((injectionSwitch) * mat2(1.0)))), min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), false || ((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mat2(1.0) * ((injectionSwitch) * mat2(1.0)))), min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))) || false)))))) && true))))))))) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false || (! (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) ^ 0)))])).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, sqrt(0.0), 0.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, sqrt(0.0), 0.0))), max(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, sqrt(0.0), 0.0))), _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, sqrt(0.0), 0.0))))), _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, sqrt(0.0), 0.0))))).y)), ! (_GLF_IDENTITY(! (false || (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2.0) : injectionSwitch.y))))))), ! (! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(false || _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), log(1.0), 0.0, exp(0.0), 0.0, 1.0, exp(tan(0.0))))) > injectionSwitch.y)), bool(bvec3((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), log(1.0), 0.0, exp(0.0), 0.0, 1.0, exp(tan(0.0))))) > injectionSwitch.y)), false, false))), true && (false || (! (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))), ((_GLF_IDENTITY(false || (! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true && (false || (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y)))))) || false)), (_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(false || (! (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, injectionSwitch.x)) > injectionSwitch.y)), true && (false || (! (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))), ((_GLF_IDENTITY(false || (! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)), true && (false || (! (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))) || false)), bool(bool((! _GLF_IDENTITY((_GLF_IDENTITY(false || (! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true && (false || (! (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))), ((_GLF_IDENTITY(false || (! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true && (false || (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))) || false)))))) && true))))))))) || false)), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(length(vec4(396.985, 530.694, 54.83, -125.639))))) > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false || (! (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, sqrt(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / 1.0)) + 0.0)))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, sqrt(0.0), 0.0))), max(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, sqrt(0.0), 0.0))), _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, sqrt(0.0), 0.0))))), _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, sqrt(0.0), 0.0))))).y)), ! (_GLF_IDENTITY(! (false || (! (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(false || (! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true && (false || (! (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))), ((_GLF_IDENTITY(false || (! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true && (false || (! (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))) || false)), (_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(false || (! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true && (false || (! (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))), ((_GLF_IDENTITY(false || (! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true && (false || (! (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))) || false)), bool(bool((! _GLF_IDENTITY((_GLF_IDENTITY(false || (! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true && (false || (! (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))), ((_GLF_IDENTITY(false || (! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true && (false || (! (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))) || false)))))) && true), bool(bvec4(_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(false || (! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true && (false || (! (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))), ((_GLF_IDENTITY(false || (! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true && (false || (! (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))) || false)), (_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(false || (! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true && (false || (! (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))), ((_GLF_IDENTITY(false || (! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true && (false || (! (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))) || false)), bool(bool((! _GLF_IDENTITY((_GLF_IDENTITY(false || (! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true && (false || (! (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))), ((_GLF_IDENTITY(false || (! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true && (false || (! (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))) || false)))))) && true), false, true, true))))))))))) || false)))))), (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(false || (! (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, sqrt(0.0), 0.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, sqrt(0.0), 0.0))), max(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, sqrt(0.0), 0.0))), _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, sqrt(0.0), 0.0))))), _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, sqrt(0.0), 0.0))))).y)), bool(bool(false || (! (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, sqrt(0.0), 0.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, sqrt(0.0), 0.0))), max(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, sqrt(0.0), 0.0))), _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, sqrt(0.0), 0.0))))), _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, sqrt(0.0), 0.0))))).y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (! (injectionSwitch.x > injectionSwitch.y)), true && (false || (! (injectionSwitch.x > injectionSwitch.y))))), ! (! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(false || (! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true && (false || (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, (false ? _GLF_FUZZED(5041.5083) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)))) > injectionSwitch.y))))), _GLF_IDENTITY(((_GLF_IDENTITY(false || (! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true && (false || (! (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))) || false, ! (! (_GLF_IDENTITY(((_GLF_IDENTITY(false || (! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true && (false || (! (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))) || false, ! (! (((_GLF_IDENTITY(false || (! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY(true, true && (true)) && (false || (! (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) + 0.0)), float(_GLF_FUZZED(72.30)), bool(false))))))))) || false)))))))), (_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(false || (! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true && (false || (! (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))), ((_GLF_IDENTITY(false || (! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true && (false || (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x : _GLF_FUZZED(-2104.0955))) > injectionSwitch.y)))))) || false)), bool(bool((! _GLF_IDENTITY((_GLF_IDENTITY(false || (! (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(1.6, 3.3)))), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x, injectionSwitch.x)) > injectionSwitch.y)), true && (false || (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, mix(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x), float(_GLF_FUZZED(-0.6)), bool(false))) > injectionSwitch.y))))), ((_GLF_IDENTITY(false || (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))), true && (false || (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(7.8, -520.581)) : injectionSwitch)), min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))) || false)))))) && true))))))))) || false)), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false || (! (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, 0.0, sqrt(0.0), 0.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, sqrt(0.0), 0.0))), max(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, sqrt(0.0), 0.0))), _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, sqrt(0.0), 0.0))))), _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, sqrt(0.0), 0.0))))).y)), ! (_GLF_IDENTITY(! (false || (! (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false || (! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true && _GLF_IDENTITY((false || (! (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), false || (_GLF_IDENTITY((false || (! (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), true && ((false || (! (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))))), ((_GLF_IDENTITY(false || (! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true && _GLF_IDENTITY((false || (! (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), false || (_GLF_IDENTITY((false || (! (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), true && ((false || (! (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))))) || false), ((_GLF_IDENTITY(false || (! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, false || (true)), false, true, false))) && (false || (! (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))) || false)), (_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false || (! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false || (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true && (! (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x, injectionSwitch.x)) > injectionSwitch.y)))))), true && (false || (! (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))), ((_GLF_IDENTITY(false || (! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true && (false || (! (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))) || false)), bool(bool((! _GLF_IDENTITY((_GLF_IDENTITY(false || (! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true && (false || (! (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))), ((_GLF_IDENTITY(false || (! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true && (false || (! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), vec2(0.0, 0.0) + (_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), min(min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch)))))).x > injectionSwitch.y)))))) || false)))))) && true))))))))) || false))))))) && true))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-22.34, 393.129)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-22.34, 393.129)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-22.34, 393.129)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y))) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-22.34, 393.129)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-22.34, 393.129)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-22.34, 393.129)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y, true, false)))) && true)))), _GLF_IDENTITY(false || (! (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec2(39.92, -59.66) / -3.6)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch)))))).y)), true && (false || (! (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-22.34, _GLF_IDENTITY(393.129, clamp(393.129, 393.129, _GLF_IDENTITY(393.129, min(393.129, _GLF_IDENTITY(393.129, float(mat3x4(393.129, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))))))) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-22.34, 393.129), vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(-22.34, 393.129), (false ? _GLF_FUZZED(injectionSwitch) : vec2(-22.34, 393.129)))), (vec2(_GLF_IDENTITY(vec2(-22.34, 393.129), (false ? _GLF_FUZZED(injectionSwitch) : vec2(-22.34, 393.129))))) * vec2(1.0, 1.0))))) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y))), _GLF_IDENTITY(false || (! (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x)) > injectionSwitch.y)), true && (false || (! (injectionSwitch.x > injectionSwitch.y)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-22.34, 393.129)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) ? _GLF_FUZZED(vec2(-22.34, 393.129)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), _GLF_IDENTITY(false || (! (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)), true && (false || (! (injectionSwitch.x > injectionSwitch.y))))))) || false)))))) || _GLF_IDENTITY(false, ! (! (false)))))))) && true))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       return;
      }
     else
      {
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))) || false)))
    break;
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, false || (false)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))))))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_injected_loop_counter)) != (1 ^ 1)); _injected_loop_counter --)
        {
         return;
         if(_GLF_DEAD(false))
          return;
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-9.0, -3122.4864)))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-9.0, -3122.4864)))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (injectionSwitch) - vec2(0.0, 0.0)).y), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-9.0, -3122.4864)))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (injectionSwitch) - vec2(0.0, 0.0)).y), true), bvec2(bvec4(bvec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-9.0, -3122.4864)))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (injectionSwitch) - vec2(0.0, 0.0)).y), true), true, false)))))))) || false))
      break;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))))))))
    break;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / 1.0, clamp(_GLF_IDENTITY((injectionSwitch.x) / 1.0, (false ? _GLF_FUZZED(8.5) : (injectionSwitch.x) / 1.0)), (injectionSwitch.x) / 1.0, _GLF_IDENTITY((injectionSwitch.x) / 1.0, min((injectionSwitch.x) / 1.0, (injectionSwitch.x) / 1.0))))) > injectionSwitch.y))))
    return;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, false || (false)) || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(_GLF_IDENTITY(dot(vec2(72.69, -4461.0900), vec2(-30.97, -14.33)), clamp(dot(vec2(72.69, -4461.0900), vec2(-30.97, -14.33)), dot(vec2(72.69, -4461.0900), vec2(-30.97, -14.33)), dot(vec2(72.69, -4461.0900), vec2(-30.97, -14.33)))))))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4(injectionSwitch.y, sqrt(1.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), cos(0.0), 0.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0)), float(_GLF_IDENTITY(vec3(float(mat4(injectionSwitch.y, sqrt(1.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), cos(0.0), 0.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 0.0), min(vec3(float(mat4(injectionSwitch.y, sqrt(1.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), cos(0.0), 0.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 0.0), vec3(float(mat4(injectionSwitch.y, sqrt(1.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), cos(0.0), 0.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 0.0))))))))))
  return;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false)))), bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true)), (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true))) && true))) || (_GLF_DEAD(false))))))))))))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       return;
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
    }
  }
 else
  {
  }
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    continue;
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec3(cos(0.0), 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(cos(0.0), 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 1.0, 1.0, 1.0, 0.0, 0.0))))), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)), injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
    break;
   if(_GLF_DEAD(false))
    break;
   if((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (false ? _GLF_FUZZED(packHalf2x16(injectionSwitch)) : _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), min(_GLF_IDENTITY(0u, min(0u, 0u)), _GLF_IDENTITY(0u, min(0u, 0u))))))), subgroup_local_id, subgroup_local_id)) % _GLF_IDENTITY(2, (2) * 1), 1u * (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec2(subgroup_local_id, 1u)), (uint(_GLF_IDENTITY(uvec2(subgroup_local_id, 1u), clamp(_GLF_IDENTITY(uvec2(subgroup_local_id, 1u), ~ (~ (_GLF_IDENTITY(uvec2(subgroup_local_id, 1u), ~ (~ (uvec2(subgroup_local_id, 1u))))))), _GLF_IDENTITY(uvec2(subgroup_local_id, 1u), uvec2(0u, 0u) | (uvec2(subgroup_local_id, 1u))), uvec2(subgroup_local_id, 1u))))) / 1u)) % _GLF_IDENTITY(2, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 2 : _GLF_IDENTITY(_GLF_FUZZED(-50634), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(-50634) : _GLF_FUZZED(10345)))))))) == _GLF_IDENTITY(0, (0) >> 0))
    {
     if(_GLF_DEAD(false))
      continue;
     do
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        continue;
       atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(28.11), _GLF_FUZZED(1849.2831)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))) * vec2(1.0, 1.0)).x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(28.11), _GLF_FUZZED(1849.2831)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))) * vec2(1.0, 1.0)).x > injectionSwitch.y)), true, true)))))));
    }
   else
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       atomicStore(buf[next_virtual_gid], uint(2), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((true ? 64 : _GLF_FUZZED(-93865)), ((true ? 64 : _GLF_FUZZED(-93865))) << 0)), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(64, 1), clamp(ivec2(64, 1), _GLF_IDENTITY(ivec2(64, 1), max(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(64, (64) >> 0), 1), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((ivec2(64, 1)), _GLF_IDENTITY(clamp((ivec2(64, 1)), (_GLF_IDENTITY(ivec2(64, _GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) << 0)))), 1)), 0)))), max(ivec2(64, _GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) << 0)))), 1)), 0)))), ivec2(64, _GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) << 0)))), 1)), 0))))))), (ivec2(64, 1))), ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (clamp((ivec2(64, 1)), (_GLF_IDENTITY(ivec2(64, _GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) << 0)))), 1)), 0)))), max(ivec2(64, _GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) << 0)))), 1)), 0)))), ivec2(64, _GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) << 0)))), 1)), 0))))))), (ivec2(64, 1)))))), ivec2(0, 0) ^ (~ _GLF_IDENTITY((ivec2(64, 1)), clamp((ivec2(64, 1)), (_GLF_IDENTITY(ivec2(64, _GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) << 0)))), 1)), 0)))), max(ivec2(64, _GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (1) << 0)), (~ (_GLF_IDENTITY(1, (1) << 0))) | 0))), 1)), 0)))), ivec2(64, _GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (1) << 0), 1, 1, ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))), (ivec4(_GLF_IDENTITY(1, (1) << 0), 1, 1, ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))))) - ivec4(0, 0, 0, 0))), ~ (~ (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (1) << 0), 1, 1, ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))), (ivec4(_GLF_IDENTITY(1, (1) << 0), 1, 1, ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))))) - ivec4(0, 0, 0, 0))), 0 | (int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (1) << 0), 1, 1, ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))), (ivec4(_GLF_IDENTITY(1, (1) << 0), 1, 1, ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))))) - ivec4(0, 0, 0, 0)))))))))))), 1)), 0))))))), (ivec2(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) / 1)) * 1), 1)))))))), ivec2(64, 1))), ivec2(64, 1))), (_GLF_IDENTITY(ivec2(64, 1), clamp(ivec2(64, 1), _GLF_IDENTITY(ivec2(64, 1), max(_GLF_IDENTITY(ivec2(64, 1), ~ (~ _GLF_IDENTITY((ivec2(64, 1)), clamp((_GLF_IDENTITY(ivec2(64, 1), (true ? ivec2(64, 1) : _GLF_FUZZED((-73197 % ivec2(41406, 65798)))))), (ivec2(64, 1)), (ivec2(64, 1)))))), ivec2(64, 1))), ivec2(_GLF_IDENTITY(64, min(64, 64)), _GLF_IDENTITY(1, max(1, 1)))))) << ivec2(_GLF_IDENTITY(0, 0 | (0)), 0)))), _GLF_IDENTITY(4, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (4), (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, int(ivec4(4, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)))), 0 ^ (~ (4)))) ^ 0), max(_GLF_IDENTITY(~ (4), (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, int(ivec4(4, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(~ (4), (true ? _GLF_IDENTITY(~ (4), min(~ (4), ~ (4))) : _GLF_FUZZED(11842))), (~ (4)) * 1)))) ^ 0), _GLF_IDENTITY(~ (4), (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, int(ivec4(4, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)))), 0 ^ (~ (4)))) ^ 0))))));
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true, true, true))))
    break;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) || false)), (injectionSwitch.x > injectionSwitch.y))))
    continue;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))))
    continue;
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), true && (bool(false)))), true && (bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))))) || false)));
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec4(bvec2(_GLF_DEAD(false), true), false, _GLF_IDENTITY(false, true && (false)))))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec4(bvec2(_GLF_DEAD(false), true), false, false))))))))
  return;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, max(0, 0)))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))) || false)), false || (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) || false)))))); _injected_loop_counter ++)
    {
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
