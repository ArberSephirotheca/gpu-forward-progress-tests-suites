#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_0 {
 mat4x2 _f0;
 mat4x3 _f1;
 uint subgroup_local_id;
 uvec3 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false || (_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false) || _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), true, false, true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))) : _GLF_FUZZED(7.6)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(mat4x2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) - 0.0, ((1.0) - 0.0) + 0.0))))), mat4x3(1.0), gl_SubgroupInvocationID, _GLF_IDENTITY(uvec3(1u), (uvec3(1u)) ^ uvec3(0u, 0u, 0u)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), bool(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, false, false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), bool(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, false, false)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), bool(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, false, false)))))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), bool(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, false, false)))))))), false, false)))), bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), bool(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, false, false)))))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), bool(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, false, false)))))))), false, false)))))))))) && true))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, true && (true)), true)))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(6047.4521, (6047.4521) + tan(0.0)), 8614.5831, 490.653), min(vec3(_GLF_IDENTITY(6047.4521, (6047.4521) + tan(0.0)), 8614.5831, 490.653), vec3(_GLF_IDENTITY(6047.4521, (6047.4521) + tan(0.0)), 8614.5831, 490.653))))) : injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, sqrt(1.0)))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)), false || (_GLF_IDENTITY(_GLF_IDENTITY((bool(false)), false || ((bool(false)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((bool(false)), false || ((bool(false)))), ! (! (_GLF_IDENTITY((bool(false)), false || ((bool(false))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))))), _GLF_IDENTITY(_GLF_IDENTITY((false) || false, false || ((false) || false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2((false) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, true && (false)))), true)))))), false)), ! (! (bool(bvec2((false) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), false))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2((false) || _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (! (_GLF_IDENTITY(false, true && (false)))), false)), false || (bool(bvec2(! (! (_GLF_IDENTITY(false, true && (false)))), false)))), ! (! (bool(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false))))))), false), bvec2(bvec3(bvec2(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false))))))), false), true))))))))), false)), ! (! (bool(bvec2((false) || _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), ! (! (! (! (_GLF_IDENTITY(false, true && (false))))))))) || false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), false, true)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y)) && (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (false))))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))) || false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1503.7261)), bool(false))))) < injectionSwitch.y)), false, true))))), false))))), (_GLF_IDENTITY(bool(bvec2((false) || _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) || false)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) || false)), false || ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) || false))))))))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((false), true && ((false))), false)), _GLF_IDENTITY(bool(bool(bool(bvec2(_GLF_IDENTITY((false), true && ((false))), false)))), (bool(bool(bool(bvec2(_GLF_IDENTITY((false), true && ((false))), false))))) && true))) || _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (false)))), bool(bvec4((! (_GLF_IDENTITY(false, true && (false)))), false, true, true)))), false)))))) || false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2((false) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))))))), ! (_GLF_IDENTITY(! (bool(bvec2((false) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), false))), (! (bool(bvec2((false) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), false)))) && true))), (_GLF_IDENTITY(bool(bvec2((false) || _GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), ! (! (_GLF_IDENTITY(false, true && (false))))), false)), ! (! (bool(bvec2((false) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), false)))))) || false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((-6180.3881 + -5026.0409))), vec2(_GLF_FUZZED(-2.3), _GLF_IDENTITY((injectionSwitch)[1], 1.0 * ((injectionSwitch)[1]))), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), false)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 1.0, 0.0, 1.0, abs(1.0), 0.0, 0.0, 0.0))) > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 0.0, abs(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y)), (mat2x3(injectionSwitch, 0.0, abs(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))).y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(! (! (injectionSwitch.x > injectionSwitch.y)), false, false, false)), (bool(bvec4(! (! (injectionSwitch.x > injectionSwitch.y)), false, false, false))) || false)))), false || _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), clamp((injectionSwitch) / vec2(1.0, 1.0), (injectionSwitch) / vec2(1.0, 1.0), (injectionSwitch) / vec2(1.0, 1.0)))))).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (! (! (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, sqrt(1.0), 0.0))))) > injectionSwitch.y))) && true))) || false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), false, true, true)), true && (bool(bvec4((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), false, true, true)))), ! (! (bool(bvec4((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (injectionSwitch.x > injectionSwitch.y)))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), false, true, true))))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED((subgroup_id | uvec3(7750u, 44067u, 49733u))))), (_GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED((subgroup_id | uvec3(7750u, 44067u, 49733u)))))) | uvec3(0u, 0u, 0u)).x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))), gl_WorkGroupSize)).x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), true && (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), true && (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, clamp(workgroup_size * workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(83397u) : workgroup_size)) * workgroup_id, 0u ^ (_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_id) : workgroup_size * _GLF_IDENTITY(workgroup_id, 0u | (_GLF_IDENTITY(workgroup_id, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (workgroup_id))))), 0u | ((false ? _GLF_FUZZED(workgroup_id) : workgroup_size * _GLF_IDENTITY(workgroup_id, 0u | (_GLF_IDENTITY(workgroup_id, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (workgroup_id)))))))))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) || false)) ? _GLF_FUZZED(83397u) : workgroup_size)) * workgroup_id, 0u ^ (_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_id) : workgroup_size * _GLF_IDENTITY(workgroup_id, 0u | (_GLF_IDENTITY(workgroup_id, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (workgroup_id))))), _GLF_IDENTITY(0u, (0u) | (0u)) | ((false ? _GLF_FUZZED(workgroup_id) : workgroup_size * _GLF_IDENTITY(workgroup_id, 0u | (_GLF_IDENTITY(workgroup_id, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (workgroup_id)))))))))))), workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))) >> ((_GLF_IDENTITY(0u | 0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : 0u | 0u))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))), (uint(1u)) + 0u)))) * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))) >> ((_GLF_IDENTITY(0u | 0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : 0u | 0u))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))), (uint(1u)) + 0u)))) * subgroup_size, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))) >> ((_GLF_IDENTITY(0u | 0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : 0u | 0u))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))), (uint(1u)) + 0u)))) * subgroup_size, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))) >> ((_GLF_IDENTITY(0u | 0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : 0u | 0u))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))), (uint(1u)) + 0u)))) * subgroup_size));
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(workgroup_base + subgroup_base), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(workgroup_base + subgroup_base), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(workgroup_base + subgroup_base), 0u | (uint(workgroup_base + subgroup_base)))), (~ (_GLF_IDENTITY(uint(workgroup_base + subgroup_base), 0u | (_GLF_IDENTITY(uint(workgroup_base + subgroup_base), 0u + (_GLF_IDENTITY(uint(workgroup_base + subgroup_base), (_GLF_IDENTITY(uint(workgroup_base + subgroup_base), clamp(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base)))) ^ 0u))))))) | (~ (_GLF_IDENTITY(uint(workgroup_base + subgroup_base), 0u | (_GLF_IDENTITY(uint(workgroup_base + subgroup_base), (_GLF_IDENTITY(uint(workgroup_base + subgroup_base), clamp(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base)))) << 0u)))))))), max(uint(workgroup_base + subgroup_base), uint(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) >> 0u)) << 0u) + subgroup_base)))), (_GLF_IDENTITY(true, true && (true)) ? ~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(workgroup_base + subgroup_base), uint(uint(uint(workgroup_base + subgroup_base)))), _GLF_IDENTITY(max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base)), max(_GLF_IDENTITY(_GLF_IDENTITY(max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base)), (max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base))) ^ 0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base)), (max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base))) ^ 0u), clamp(_GLF_IDENTITY(max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base)), (max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base))) ^ 0u), _GLF_IDENTITY(max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base)), _GLF_IDENTITY((max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base))) ^ 0u, ((max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base))) ^ 0u) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(max(uint(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(uint(uvec4(workgroup_base + subgroup_base, 1u, 1u, 1u)), 0u | (uint(uvec4(workgroup_base + subgroup_base, 1u, 1u, 1u)))))), uint(workgroup_base + subgroup_base)), _GLF_IDENTITY((max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base))), (_GLF_IDENTITY((max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base))), ((max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base)))) * 1u)) | ((max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base))))) ^ _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, (0u) | (0u)), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 1u, 1u), (true ? uvec4(_GLF_IDENTITY(0u, (0u) | (0u)), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 1u, 1u) : _GLF_FUZZED(uvec4(151855u, 43036u, 72575u, 41171u)))))))))) | 0u, max(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base)), (max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base))) ^ 0u), clamp(_GLF_IDENTITY(max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base)), (max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base))) ^ 0u), _GLF_IDENTITY(max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base)), (max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base))) ^ 0u), _GLF_IDENTITY(max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base)), (max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base))) ^ 0u)))) | 0u, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base)), (max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base))) ^ 0u), clamp(_GLF_IDENTITY(max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base)), (max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base))) ^ 0u), _GLF_IDENTITY(max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base)), (max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base))) ^ 0u), _GLF_IDENTITY(max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base)), (max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base))) ^ 0u)))) | 0u, ((_GLF_IDENTITY(_GLF_IDENTITY(max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base)), (max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base))) ^ 0u), clamp(_GLF_IDENTITY(max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base)), (max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base))) ^ 0u), _GLF_IDENTITY(max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base)), (max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base))) ^ 0u), _GLF_IDENTITY(max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base)), (max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base))) ^ 0u)))) | 0u) ^ 0u)) >> 0u), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base)), (max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base))) ^ 0u), clamp(_GLF_IDENTITY(max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base)), (max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base))) ^ 0u), _GLF_IDENTITY(max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base)), (max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base))) ^ 0u), _GLF_IDENTITY(max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base)), (max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base))) ^ 0u)))) | 0u, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base)), (max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base))) ^ 0u), clamp(_GLF_IDENTITY(max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base)), (max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base))) ^ 0u), _GLF_IDENTITY(max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base)), (max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base))) ^ 0u), _GLF_IDENTITY(max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base)), (max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base))) ^ 0u)))) | 0u, ((_GLF_IDENTITY(_GLF_IDENTITY(max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base)), (max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base))) ^ 0u), clamp(_GLF_IDENTITY(max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base)), (max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base))) ^ 0u), _GLF_IDENTITY(max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base)), (max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base))) ^ 0u), _GLF_IDENTITY(max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base)), (max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base))) ^ 0u)))) | 0u) ^ 0u)) >> 0u)) ^ 0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base)), (max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base))) ^ 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base)), min(max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base)), max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base)))), (max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base))) ^ 0u), _GLF_IDENTITY(max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base)), (max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base))) ^ 0u), _GLF_IDENTITY(max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base)), (max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base))) ^ 0u)))) | 0u, (true ? (_GLF_IDENTITY(_GLF_IDENTITY(max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base)), (max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base))) ^ 0u), clamp(_GLF_IDENTITY(max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base)), (max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base))) ^ 0u), _GLF_IDENTITY(max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base)), (max(_GLF_IDENTITY(uint(workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec2(subgroup_base, uint(_GLF_ONE(1.0, injectionSwitch.y)))))), (uint(workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec2(subgroup_base, uint(_GLF_ONE(1.0, injectionSwitch.y))))))) >> 0u), uint(_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + subgroup_base)), workgroup_base + subgroup_base))))) ^ 0u), _GLF_IDENTITY(max(uint(_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u) + subgroup_base), uint(workgroup_base + subgroup_base)), (max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base))) ^ 0u)))) | 0u : _GLF_FUZZED(workgroup_base)))))), max(uint(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(min(workgroup_base, workgroup_base), min(min(workgroup_base, workgroup_base), min(workgroup_base, workgroup_base)))), workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_base, 0u | (_GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(44280u) : subgroup_base))))), uint(_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(workgroup_id))))) + subgroup_base)))))), max((_GLF_IDENTITY(uint(workgroup_base + subgroup_base), _GLF_IDENTITY(max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base)), (max(_GLF_IDENTITY(uint(workgroup_base + subgroup_base), clamp(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base))), uint(workgroup_base + subgroup_base))) | (_GLF_IDENTITY(max(uint(workgroup_base + subgroup_base), uint(_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, workgroup_base + subgroup_base)))))), (max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base))) | 0u))))), (_GLF_IDENTITY(uint(workgroup_base + subgroup_base), max(uint(workgroup_base + _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))), uint(workgroup_base + subgroup_base)))))) : _GLF_FUZZED(bitfieldExtract(workgroup_id, _GLF_IDENTITY(-76561, (-76561) / _GLF_IDENTITY(1, (1) * 1)), 12628))))))), max(uint(_GLF_IDENTITY(uint(workgroup_base + subgroup_base), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(workgroup_base + subgroup_base), max(uint(workgroup_base + subgroup_base), _GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base + subgroup_base, 1u * (workgroup_base + subgroup_base))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(workgroup_base + subgroup_base), min(_GLF_IDENTITY(uint(workgroup_base + subgroup_base), max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base))), uint(workgroup_base + subgroup_base))), max(_GLF_IDENTITY(uint(workgroup_base + subgroup_base), min(_GLF_IDENTITY(uint(workgroup_base + subgroup_base), max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base))), uint(workgroup_base + subgroup_base))), _GLF_IDENTITY(uint(workgroup_base + subgroup_base), min(_GLF_IDENTITY(uint(workgroup_base + subgroup_base), max(uint(workgroup_base + _GLF_IDENTITY(subgroup_base, clamp(_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)), subgroup_base, subgroup_base))), uint(workgroup_base + subgroup_base))), uint(_GLF_IDENTITY(workgroup_base + subgroup_base, max(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + subgroup_base)))))))))), max((_GLF_IDENTITY(_GLF_IDENTITY(uint(workgroup_base + subgroup_base), min(_GLF_IDENTITY(uint(workgroup_base + subgroup_base), max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base))), uint(workgroup_base + subgroup_base))), max(_GLF_IDENTITY(uint(workgroup_base + subgroup_base), min(_GLF_IDENTITY(uint(workgroup_base + subgroup_base), max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base))), uint(workgroup_base + subgroup_base))), _GLF_IDENTITY(uint(workgroup_base + subgroup_base), min(_GLF_IDENTITY(uint(workgroup_base + subgroup_base), max(uint(workgroup_base + _GLF_IDENTITY(subgroup_base, clamp(_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)), subgroup_base, subgroup_base))), uint(workgroup_base + subgroup_base))), uint(_GLF_IDENTITY(workgroup_base + subgroup_base, max(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + subgroup_base)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(workgroup_base + subgroup_base), min(_GLF_IDENTITY(uint(workgroup_base + subgroup_base), max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base))), uint(workgroup_base + subgroup_base))), max(_GLF_IDENTITY(uint(workgroup_base + subgroup_base), min(_GLF_IDENTITY(uint(workgroup_base + subgroup_base), max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base))), uint(workgroup_base + subgroup_base))), _GLF_IDENTITY(uint(workgroup_base + subgroup_base), min(_GLF_IDENTITY(uint(workgroup_base + subgroup_base), max(uint(workgroup_base + _GLF_IDENTITY(subgroup_base, clamp(_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)), subgroup_base, subgroup_base))), uint(workgroup_base + subgroup_base))), uint(_GLF_IDENTITY(workgroup_base + subgroup_base, max(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + subgroup_base)))))))))))))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base + subgroup_base, max(workgroup_base + subgroup_base, workgroup_base + subgroup_base))), max(uint(workgroup_base + subgroup_base), _GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base + subgroup_base, 1u * (workgroup_base + subgroup_base))), _GLF_IDENTITY(~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(workgroup_base + subgroup_base), min(_GLF_IDENTITY(uint(workgroup_base + subgroup_base), max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base))), uint(workgroup_base + subgroup_base))), max(_GLF_IDENTITY(uint(workgroup_base + subgroup_base), min(_GLF_IDENTITY(uint(workgroup_base + subgroup_base), max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base))), uint(workgroup_base + subgroup_base))), _GLF_IDENTITY(uint(workgroup_base + subgroup_base), min(_GLF_IDENTITY(uint(workgroup_base + subgroup_base), max(uint(workgroup_base + _GLF_IDENTITY(subgroup_base, clamp(_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)), subgroup_base, subgroup_base))), uint(workgroup_base + subgroup_base))), uint(_GLF_IDENTITY(workgroup_base + subgroup_base, max(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + subgroup_base)))))))))), max((_GLF_IDENTITY(_GLF_IDENTITY(uint(workgroup_base + subgroup_base), min(_GLF_IDENTITY(uint(workgroup_base + subgroup_base), max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base))), uint(workgroup_base + subgroup_base))), max(_GLF_IDENTITY(uint(workgroup_base + subgroup_base), min(_GLF_IDENTITY(uint(workgroup_base + subgroup_base), max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base))), uint(workgroup_base + subgroup_base))), _GLF_IDENTITY(uint(workgroup_base + subgroup_base), min(_GLF_IDENTITY(uint(workgroup_base + subgroup_base), max(uint(workgroup_base + _GLF_IDENTITY(subgroup_base, clamp(_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)), subgroup_base, subgroup_base))), uint(workgroup_base + subgroup_base))), uint(_GLF_IDENTITY(workgroup_base + subgroup_base, max(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + subgroup_base)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(workgroup_base + subgroup_base), min(_GLF_IDENTITY(uint(workgroup_base + subgroup_base), max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base))), uint(workgroup_base + subgroup_base))), max(_GLF_IDENTITY(uint(workgroup_base + subgroup_base), min(_GLF_IDENTITY(uint(workgroup_base + subgroup_base), max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base))), uint(workgroup_base + subgroup_base))), _GLF_IDENTITY(uint(workgroup_base + subgroup_base), min(_GLF_IDENTITY(uint(workgroup_base + subgroup_base), max(uint(workgroup_base + _GLF_IDENTITY(subgroup_base, clamp(_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)), subgroup_base, subgroup_base))), uint(workgroup_base + subgroup_base))), uint(_GLF_IDENTITY(workgroup_base + subgroup_base, max(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + subgroup_base))))))))))))), uint(uint(~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(workgroup_base + subgroup_base), min(_GLF_IDENTITY(uint(workgroup_base + subgroup_base), max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base))), uint(workgroup_base + subgroup_base))), max(_GLF_IDENTITY(uint(workgroup_base + subgroup_base), min(_GLF_IDENTITY(uint(workgroup_base + subgroup_base), max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base))), uint(workgroup_base + subgroup_base))), _GLF_IDENTITY(uint(workgroup_base + subgroup_base), min(_GLF_IDENTITY(uint(workgroup_base + subgroup_base), max(uint(workgroup_base + _GLF_IDENTITY(subgroup_base, clamp(_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)), subgroup_base, subgroup_base))), uint(workgroup_base + subgroup_base))), uint(_GLF_IDENTITY(workgroup_base + subgroup_base, max(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + subgroup_base)))))))))), max((_GLF_IDENTITY(_GLF_IDENTITY(uint(workgroup_base + subgroup_base), min(_GLF_IDENTITY(uint(workgroup_base + subgroup_base), max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base))), uint(workgroup_base + subgroup_base))), max(_GLF_IDENTITY(uint(workgroup_base + subgroup_base), min(_GLF_IDENTITY(uint(workgroup_base + subgroup_base), max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base))), uint(workgroup_base + subgroup_base))), _GLF_IDENTITY(uint(workgroup_base + subgroup_base), min(_GLF_IDENTITY(uint(workgroup_base + subgroup_base), max(uint(workgroup_base + _GLF_IDENTITY(subgroup_base, clamp(_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)), subgroup_base, subgroup_base))), uint(workgroup_base + subgroup_base))), uint(_GLF_IDENTITY(workgroup_base + subgroup_base, max(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + subgroup_base)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(workgroup_base + subgroup_base), min(_GLF_IDENTITY(uint(workgroup_base + subgroup_base), max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base))), uint(workgroup_base + subgroup_base))), max(_GLF_IDENTITY(uint(workgroup_base + subgroup_base), min(_GLF_IDENTITY(uint(workgroup_base + subgroup_base), max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base))), uint(workgroup_base + subgroup_base))), _GLF_IDENTITY(uint(workgroup_base + subgroup_base), min(_GLF_IDENTITY(uint(workgroup_base + subgroup_base), max(uint(workgroup_base + _GLF_IDENTITY(subgroup_base, clamp(_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)), subgroup_base, subgroup_base))), uint(workgroup_base + subgroup_base))), uint(_GLF_IDENTITY(workgroup_base + subgroup_base, max(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + subgroup_base)))))))))))))))))))) - 0u)), ((_GLF_IDENTITY(uint(workgroup_base + subgroup_base), max(uint(workgroup_base + subgroup_base), _GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base + subgroup_base, 1u * (workgroup_base + subgroup_base))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(workgroup_base + subgroup_base), min(_GLF_IDENTITY(uint(workgroup_base + subgroup_base), max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base))), uint(workgroup_base + subgroup_base))), (_GLF_IDENTITY(uint(workgroup_base + subgroup_base), min(_GLF_IDENTITY(uint(workgroup_base + subgroup_base), max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base))), uint(workgroup_base + subgroup_base)))) + (0u ^ (1u ^ 1u))), max(_GLF_IDENTITY(uint(workgroup_base + subgroup_base), min(_GLF_IDENTITY(uint(workgroup_base + subgroup_base), max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base))), uint(workgroup_base + subgroup_base))), _GLF_IDENTITY(uint(workgroup_base + subgroup_base), min(_GLF_IDENTITY(uint(workgroup_base + subgroup_base), max(uint(workgroup_base + _GLF_IDENTITY(subgroup_base, clamp(_GLF_IDENTITY(subgroup_base, 0u | (_GLF_IDENTITY(subgroup_base, 1u * (subgroup_base)))), subgroup_base, subgroup_base))), uint(workgroup_base + subgroup_base))), uint(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, max(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + subgroup_base)))), 0u + (_GLF_IDENTITY(workgroup_base + subgroup_base, max(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u), _GLF_IDENTITY(workgroup_base + subgroup_base, clamp(_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, workgroup_base + subgroup_base)), workgroup_base + subgroup_base, workgroup_base + subgroup_base)))))))))))), max((_GLF_IDENTITY(_GLF_IDENTITY(uint(workgroup_base + subgroup_base), min(_GLF_IDENTITY(uint(workgroup_base + subgroup_base), max(uint(workgroup_base + subgroup_base), _GLF_IDENTITY(uint(workgroup_base + subgroup_base), max(uint(workgroup_base + subgroup_base), _GLF_IDENTITY(uint(workgroup_base + subgroup_base), max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base))))))), uint(workgroup_base + subgroup_base))), max(_GLF_IDENTITY(uint(workgroup_base + subgroup_base), min(_GLF_IDENTITY(uint(workgroup_base + subgroup_base), max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base))), uint(workgroup_base + subgroup_base))), _GLF_IDENTITY(uint(workgroup_base + subgroup_base), min(_GLF_IDENTITY(uint(workgroup_base + subgroup_base), max(uint(workgroup_base + _GLF_IDENTITY(subgroup_base, clamp(_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)), subgroup_base, subgroup_base))), uint(workgroup_base + subgroup_base))), uint(_GLF_IDENTITY(workgroup_base + subgroup_base, max(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(uint(uint(workgroup_base + subgroup_base)), (false ? _GLF_FUZZED(workgroup_size) : uint(uint(workgroup_base + subgroup_base))))), workgroup_base + subgroup_base)))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(workgroup_base + subgroup_base), min(_GLF_IDENTITY(uint(workgroup_base + subgroup_base), max(uint(workgroup_base + _GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(num_workgroup)))), uint(workgroup_base + subgroup_base))), uint(workgroup_base + subgroup_base))), max(_GLF_IDENTITY(uint(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)), min(_GLF_IDENTITY(uint(workgroup_base + subgroup_base), max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base))), uint(workgroup_base + subgroup_base))), _GLF_IDENTITY(uint(workgroup_base + subgroup_base), min(_GLF_IDENTITY(uint(workgroup_base + subgroup_base), max(uint(workgroup_base + _GLF_IDENTITY(subgroup_base, clamp(_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)), subgroup_base, subgroup_base))), uint(workgroup_base + subgroup_base))), uint(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(max(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + subgroup_base))), min(max(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + subgroup_base))), max(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + subgroup_base)))))))))))), 0u | ((_GLF_IDENTITY(_GLF_IDENTITY(uint(workgroup_base + subgroup_base), min(_GLF_IDENTITY(uint(workgroup_base + subgroup_base), max(uint(workgroup_base + _GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(num_workgroup)))), uint(workgroup_base + subgroup_base))), uint(workgroup_base + subgroup_base))), max(_GLF_IDENTITY(uint(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)), min(_GLF_IDENTITY(uint(workgroup_base + subgroup_base), max(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base))), uint(workgroup_base + subgroup_base))), _GLF_IDENTITY(uint(workgroup_base + subgroup_base), min(_GLF_IDENTITY(uint(workgroup_base + subgroup_base), max(uint(workgroup_base + _GLF_IDENTITY(subgroup_base, clamp(_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)), subgroup_base, subgroup_base))), uint(workgroup_base + subgroup_base))), uint(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(max(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + subgroup_base))), min(max(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + subgroup_base))), max(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + subgroup_base)))))))))))))))))))))) | 0u)))), uint(_GLF_IDENTITY(uint(workgroup_base + subgroup_base), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), clamp((workgroup_base), (workgroup_base), _GLF_IDENTITY((workgroup_base), clamp((workgroup_base), (workgroup_base), (workgroup_base))))) ^ 0u)) << 0u) + subgroup_base), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), clamp((workgroup_base), (workgroup_base), _GLF_IDENTITY((workgroup_base), clamp((workgroup_base), (workgroup_base), (workgroup_base))))) ^ 0u)) << 0u) + subgroup_base)), max(~ (uint(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), clamp((workgroup_base), (workgroup_base), _GLF_IDENTITY((workgroup_base), clamp((workgroup_base), (workgroup_base), (workgroup_base))))) ^ 0u)) << 0u) + subgroup_base)), _GLF_IDENTITY(~ (uint(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), clamp((workgroup_base), (workgroup_base), _GLF_IDENTITY((workgroup_base), clamp((workgroup_base), (workgroup_base), (workgroup_base))))) ^ 0u)) << 0u) + subgroup_base)), (~ (uint(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), clamp((workgroup_base), (workgroup_base), _GLF_IDENTITY((workgroup_base), clamp((workgroup_base), (workgroup_base), (workgroup_base))))) ^ 0u)) << 0u) + subgroup_base))) | (~ (uint(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), clamp((workgroup_base), (workgroup_base), _GLF_IDENTITY((workgroup_base), clamp((workgroup_base), (workgroup_base), (workgroup_base))))) ^ 0u)) << 0u) + subgroup_base)))))))), max(uint(_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) + subgroup_base, 0u + (workgroup_base + subgroup_base))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(workgroup_base + subgroup_base), uint(uvec3(uint(workgroup_base + subgroup_base), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (uint(workgroup_base + subgroup_base)) - 0u)))), max(_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u)) << 0u, (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u)) << 0u, max((_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u)) << 0u, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u)) << 0u, min((_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u)) << 0u, (_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u)) << 0u))))) | ((_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u)) << 0u))) + subgroup_base), max(uint(_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base + subgroup_base), (~ (workgroup_base + subgroup_base)) - 0u))), _GLF_IDENTITY(0u + (workgroup_base + subgroup_base), min(0u + (workgroup_base + subgroup_base), _GLF_IDENTITY(0u + (workgroup_base + subgroup_base), 0u ^ (0u + (workgroup_base + subgroup_base))))))))), _GLF_IDENTITY(uint(workgroup_base + subgroup_base), _GLF_IDENTITY((uint(workgroup_base + subgroup_base)), 0u ^ (_GLF_IDENTITY((uint(workgroup_base + subgroup_base)), ((uint(workgroup_base + subgroup_base))) - 0u))) - 0u)))), ((_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u)) << 0u) + subgroup_base), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base))) ^ 0u), clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, 0u + (workgroup_base + subgroup_base))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base))) ^ 0u), clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, 0u + (workgroup_base + subgroup_base))))), (false ? _GLF_FUZZED(atomicOr(workgroup_base, subgroup_id)) : uint(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base))) ^ 0u), clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, 0u + (workgroup_base + subgroup_base)))))))) | (uint(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base))) ^ 0u), clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, 0u + (workgroup_base + subgroup_base)))))), (_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base))) ^ 0u), clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, 0u + (workgroup_base + subgroup_base))))), (false ? _GLF_FUZZED(atomicOr(workgroup_base, subgroup_id)) : uint(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base))) ^ 0u), clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, 0u + (workgroup_base + subgroup_base)))))))) | (uint(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base))) ^ 0u), clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, 0u + (workgroup_base + subgroup_base)))))), ((_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base))) ^ 0u), clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) / ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)))), 0u + (workgroup_base + subgroup_base))))), (false ? _GLF_FUZZED(atomicOr(workgroup_base, subgroup_id)) : uint(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base))) ^ 0u), clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) | (0u)), 0u)) + (workgroup_base + subgroup_base)))))))) | (uint(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base))) ^ 0u), clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, 0u + (workgroup_base + subgroup_base))))))) - 0u)) * 1u)), _GLF_IDENTITY(uint(workgroup_base + subgroup_base), (uint(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_base)) - 0u))))) - 0u), (_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u)) << 0u) + subgroup_base), max(uint(_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, 0u + (workgroup_base + subgroup_base))))), _GLF_IDENTITY(uint(workgroup_base + subgroup_base), (uint(workgroup_base + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(subgroup_base, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec3(subgroup_base, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec3(subgroup_base, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec3(subgroup_base, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec3(subgroup_base, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) * 1u)))) - 0u)))))))))))) + _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_local_id, (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, mix(float(_GLF_FUZZED(-44.81)), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), bool(true)))), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, mix(float(_GLF_FUZZED(-44.81)), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), bool(true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) ? _GLF_FUZZED(_GLF_IDENTITY((~ workgroup_size), (_GLF_IDENTITY((~ workgroup_size), clamp((~ workgroup_size), _GLF_IDENTITY((~ workgroup_size), ((~ workgroup_size)) / 1u), (~ workgroup_size)))) | 0u)) : _GLF_struct_replacement_0.subgroup_local_id));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (1u ^ _GLF_IDENTITY(1u, (1u) << 0u))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), min((workgroup_base), (workgroup_base))) | (1u ^ 1u)), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(workgroup_base, (workgroup_base) | (1u ^ 1u)))) : _GLF_FUZZED(workgroup_size))) + subgroup_base + _GLF_IDENTITY(((_GLF_struct_replacement_0.subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (((_GLF_struct_replacement_0.subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if((_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_local_id % 2, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_local_id % 2, uint(uvec4(_GLF_struct_replacement_0.subgroup_local_id % 2, 0u, 1u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_local_id % 2, uint(uvec4(_GLF_struct_replacement_0.subgroup_local_id % 2, 0u, 1u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_local_id, ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_local_id, min(_GLF_struct_replacement_0.subgroup_local_id, _GLF_struct_replacement_0.subgroup_local_id))))) % 2, uint(uvec4(_GLF_struct_replacement_0.subgroup_local_id % 2, 0u, 1u, 0u)))) - (0u | 0u))) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_local_id, min(_GLF_struct_replacement_0.subgroup_local_id, _GLF_struct_replacement_0.subgroup_local_id)) % 2, (_GLF_struct_replacement_0.subgroup_local_id % 2) | 0u), _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_local_id % 2, (_GLF_struct_replacement_0.subgroup_local_id % 2) * 1u)))) == 0)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))))), (injectionSwitch.x > injectionSwitch.y))) || false)))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
      barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, (4) - 0), 64, _GLF_IDENTITY(4, (4) ^ 0));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, _GLF_IDENTITY(4, (4) * 1));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
