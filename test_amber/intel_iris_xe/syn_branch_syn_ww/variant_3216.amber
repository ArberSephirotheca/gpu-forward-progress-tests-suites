#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, false || (false)))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false), true, true)), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false), true, true)), (bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false), true, true))) || false), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false), true, true)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false), true, true)), false, false, true)))) || false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, ! (! (true)))), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, ! (! (true)))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, ! (! (true)))), false)))), true)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true))), true && (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, (true) && true), true, false)), bool(bool(bool(bvec3(_GLF_IDENTITY(true, (true) && true), true, false))))))))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, (true) && true), false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true))), true && (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, (true) && true), true, false)), bool(bool(bool(bvec3(_GLF_IDENTITY(true, (true) && true), true, false))))))))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, (true) && true), false)))), false)))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true))), true && (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, (true) && true), true, false)), bool(bool(bool(bvec3(_GLF_IDENTITY(true, (true) && true), true, false))))))))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, (true) && true), false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true))), true && (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, (true) && true), true, false)), bool(bool(bool(bvec3(_GLF_IDENTITY(true, (true) && true), true, false))))))))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, (true) && true), false)))), false))))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))))) && (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, (true) && true), false))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))))) && (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, (true) && true), false))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), ! (! (bool(bvec4(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))))) && (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, (true) && true), false))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))))) && (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, (true) && true), false))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), ! (! (bool(bvec4(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))))) && (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, (true) && true), false))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), ! (! (! (_GLF_IDENTITY(bool(bvec4(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))))) && (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, (true) && true), false))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), ! (! (bool(bvec4(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))))) && (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, (true) && true), false))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))))), bool(bvec3(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))))) && (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, (true) && true), false))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), ! (! (bool(bvec4(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))))) && (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, (true) && true), false))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), ! (! (! (_GLF_IDENTITY(bool(bvec4(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))))) && (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, (true) && true), false))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), ! (! (bool(bvec4(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))))) && (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, (true) && true), false))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))))), false, false))))))), bool(bvec3(bool(bvec4(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-8.7) : _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(0.9) : injectionSwitch.y)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / determinant(mat4(1.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, sqrt(1.0), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / determinant(mat4(1.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, sqrt(1.0), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))) + 0.0) > injectionSwitch.y)))), _GLF_IDENTITY(true, (true) && true), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch)).x, (injectionSwitch.x) / determinant(mat4(1.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, _GLF_IDENTITY(sqrt(1.0), min(sqrt(1.0), _GLF_IDENTITY(sqrt(1.0), (sqrt(1.0)) - 0.0))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(4635.1708))))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))) > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / determinant(mat4(1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(0.0, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9187.8386)), float(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x, injectionSwitch.x))), bool(true)))))), (float(vec3(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))) / 1.0)), 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, sqrt(1.0), 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(7188.5709) : 1.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))) > injectionSwitch.y))))))), _GLF_IDENTITY(true, (true) && true), false)))))))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), vec2(_GLF_FUZZED(-7.7), _GLF_FUZZED((+ -6537.9411))), bvec2(false, false))).x < injectionSwitch.y)), false)), false, true)))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), ! (! (true && (injectionSwitch.x > injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(true && (injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec4(bvec3(true && (injectionSwitch.x > injectionSwitch.y), false, false), false)))))), (! (_GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(true && (injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec4(bvec3(true && (injectionSwitch.x > injectionSwitch.y), false, false), false))))))) && true))))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(true && (injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec4(bvec3(true && (injectionSwitch.x > injectionSwitch.y), false, false), false)))))), (! (_GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(true && (injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec4(bvec3(true && (injectionSwitch.x > injectionSwitch.y), false, false), false))))))) && true)))))) || false))), (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), bool(bool(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))))) && true))), _GLF_IDENTITY(true, (true) && true), false)))), true && ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-6.9)), float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), min(max(injectionSwitch.y, injectionSwitch.y), max(injectionSwitch.y, injectionSwitch.y))), mix(float(_GLF_FUZZED(533.370)), float(max(injectionSwitch.y, injectionSwitch.y)), bool(true))))), _GLF_IDENTITY(bool(true), true && (_GLF_IDENTITY(bool(true), (bool(true)) && true))))), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true && (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), true && ((_GLF_IDENTITY(true, true && (true))))) && true), false)))))), true)), ! (! (bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)), false)))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(cos(0.0), float(mat4x3(cos(0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, sqrt(1.0), 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), log(1.0), 1.0))) * (_GLF_IDENTITY(injectionSwitch.x, sin(0.0) + (injectionSwitch.x)))) > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), bool(bool(true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))), true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-0.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, clamp(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED((-67.00 * vec2(-9.8, 66.08))))).x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(772.745))))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))))) > injectionSwitch.y)))), _GLF_IDENTITY(true, (true) && true), false)))))), true)))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))), (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))))) || false), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))), (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), (! (_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))) || false))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-8582.0731) : injectionSwitch.y))) + length(vec4(0.0, 0.0, 0.0, 0.0))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))))) || false), false), false)))))) && true), bool(bvec3(_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) * vec2(1.0, 1.0)).y)))), true && ((! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) * vec2(1.0, 1.0)).y))))))) && _GLF_IDENTITY(true, ! (! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), ((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))))) && true)))))), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), true))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (workgroup_size) + (0u | 0u)) * workgroup_id;
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(1.0) : injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(1.0) : injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)) : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), false, false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || false) || false, (_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || false) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))))))))), true && (_GLF_IDENTITY((false), ((false)) || false) || false))) || false))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) ^ 0u));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[virtual_gid], _GLF_IDENTITY(uint(1), max(uint(1), uint(1))), 4, 64, 4);
 if(_GLF_IDENTITY((subgroup_local_id % 2), (_GLF_IDENTITY((subgroup_local_id % 2), ((subgroup_local_id % 2)) / 1u)) - 0u) == 0)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x4(injectionSwitch.y, abs(determinant(mat2(0.0, 1.0, 0.0, 0.0))), 1.0, exp(0.0), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY(float(mat4(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, log(1.0), 0.0, 0.0, 0.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(-6.9)), float(float(mat4(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, log(1.0), 0.0, 0.0, 0.0, 1.0, 1.0))), bool(true))))), float(_GLF_FUZZED((0.4 * -93.98))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0)), 0.0 + _GLF_IDENTITY((_GLF_IDENTITY(float(mat3x4(injectionSwitch.y, abs(determinant(mat2(0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), clamp(max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), _GLF_IDENTITY(max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), 1.0 * (_GLF_IDENTITY(max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), clamp(max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))))), max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) / 1.0))))), 0.0))), 1.0, exp(0.0), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0)), sin(0.0) + (float(mat3x4(injectionSwitch.y, abs(determinant(mat2(0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), clamp(max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), _GLF_IDENTITY(max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), 1.0 * (_GLF_IDENTITY(max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), clamp(max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))))), max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) / 1.0))))), 0.0))), 1.0, exp(0.0), _GLF_ONE(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((true ? -15.27 : -41.44))), bool(false))), injectionSwitch.y), _GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-5.5) : 1.0))), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((47.43 - 7964.8756))), bool(false)))), 0.0, 1.0))))), min((float(mat3x4(injectionSwitch.y, abs(determinant(mat2(0.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), clamp(max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), min(0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) + _GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 0.0, 0.0, 1.0, 0.0))), injectionSwitch.x))), _GLF_IDENTITY(max(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-0.2))))), 0.0), 1.0 * (_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) + 0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, 1.0 * (0.0))) / 1.0))), min(0.0, 0.0)), 0.0), _GLF_IDENTITY(clamp(max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), max(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0), max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), (clamp(max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), max(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0), max(_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), (min(0.0, 0.0)) / 1.0)), 0.0))) / 1.0)))), max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)))), 0.0))), 1.0, exp(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0))), (float(mat3x4(injectionSwitch.y, abs(_GLF_IDENTITY(determinant(mat2(0.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), clamp(max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), _GLF_IDENTITY(max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), 1.0 * (_GLF_IDENTITY(max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), clamp(max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), max(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), 0.0))))), max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)))), 0.0)), _GLF_IDENTITY((false ? _GLF_FUZZED(9.3) : _GLF_IDENTITY(determinant(mat2(0.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), clamp(max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), _GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), 1.0 * (_GLF_IDENTITY(max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), max(max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))))), 1.0 * (_GLF_IDENTITY(max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), clamp(max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0), max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))))), max(_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), float(mat2x4(_GLF_IDENTITY(min(0.0, 0.0), mix(float(_GLF_FUZZED(4.0)), float(min(0.0, 0.0)), bool(true))), 1.0, 0.0, 0.0, length(vec2(0.0, 0.0)), round(length(normalize(cos(vec2(0.0, 0.0))))), 1.0, 0.0)))), 0.0)))), 0.0)), float(mat2x3(determinant(mat2(0.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), clamp(max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), _GLF_IDENTITY(max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), 1.0 * (_GLF_IDENTITY(max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), clamp(_GLF_IDENTITY(max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), mix(float(_GLF_FUZZED(164.649)), float(max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), bool(true))), max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))))), max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)))), 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0)))), ((false ? _GLF_FUZZED(9.3) : _GLF_IDENTITY(determinant(mat2(0.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), clamp(max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), _GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), 1.0 * (_GLF_IDENTITY(max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), max(max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))))), 1.0 * (_GLF_IDENTITY(max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), clamp(max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0), max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))))), max(_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), float(mat2x4(_GLF_IDENTITY(min(0.0, 0.0), mix(float(_GLF_FUZZED(4.0)), float(min(0.0, 0.0)), bool(true))), 1.0, 0.0, 0.0, length(vec2(0.0, 0.0)), round(length(normalize(cos(vec2(0.0, 0.0))))), 1.0, 0.0)))), 0.0)))), 0.0)), float(mat2x3(determinant(mat2(0.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), clamp(max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), _GLF_IDENTITY(max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), 1.0 * (_GLF_IDENTITY(max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), clamp(_GLF_IDENTITY(max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), mix(float(_GLF_FUZZED(164.649)), float(max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), bool(true))), max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))))), max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)))), 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0))))) - 0.0))), 1.0, exp(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, round(length(normalize(vec3(1.0, _GLF_IDENTITY(1.0, float(mat3x2(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 1.0))), 1.0)))), 0.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(-77.19)), float(_GLF_ONE(1.0, injectionSwitch.y)), bool(true)))), float(_GLF_FUZZED(8466.6643)), bool(false))), 0.0, 1.0))))))))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x4(injectionSwitch.y, _GLF_IDENTITY(abs(determinant(mat2(0.0, 1.0, 0.0, 0.0))), (_GLF_IDENTITY(abs(determinant(mat2(0.0, 1.0, 0.0, 0.0))), mix(float(abs(determinant(mat2(0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)))), float(_GLF_FUZZED(607.625)), bool(false)))) - 0.0), 1.0, exp(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2(_GLF_FUZZED(-8.1), (vec2(1.0, 0.0))[1]), vec2((vec2(1.0, 0.0))[0], _GLF_FUZZED(_GLF_IDENTITY(-9.7, 1.0 * (-9.7)))), bvec2(true, false))), (_GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2(_GLF_FUZZED(-8.1), (vec2(1.0, 0.0))[1]), vec2((vec2(1.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(5562.1810) : 0.0)))), abs(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0), mat3(mat4x3(_GLF_IDENTITY(mat3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), abs(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0), (mat3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), abs(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))))))[0], _GLF_FUZZED(-9.7)), bvec2(true, false)))) * vec2(1.0, 1.0)))))))))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0)), 0.0 + (float(mat3x4(injectionSwitch.y, abs(determinant(mat2(0.0, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 0.0))), 1.0, exp(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0)))))))) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(983.486, 3.4)) : injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, (2) << 0)), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), injectionSwitch.y)), injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(! (! (! (false))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! (! (! (false))), _GLF_IDENTITY(! (! (! (! (! (false))))), _GLF_IDENTITY((! (! (! (! (! (false)))))), ! (! ((! (! (! (! (! (false))))))))) || false))), _GLF_IDENTITY(false, false || (false)) || ((_GLF_IDENTITY(! (! (! (false))), _GLF_IDENTITY(! (! (! (! (! (false))))), (! (! (! (! (! (false)))))) || false))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))), ! (! (false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).x, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x) - length(0.0), max(_GLF_IDENTITY((injectionSwitch.x) - length(0.0), ((injectionSwitch.x) - length(0.0)) + 0.0), (injectionSwitch.x) - length(0.0))), (false ? _GLF_FUZZED(3796.5825) : _GLF_IDENTITY((injectionSwitch.x) - length(0.0), max(_GLF_IDENTITY((injectionSwitch.x) - length(0.0), ((injectionSwitch.x) - length(0.0)) + _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-7139.5076)), bool(false)))), (injectionSwitch.x) - length(0.0)))))) > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, (injectionSwitch.x) - length(0.0)) > injectionSwitch.y)), true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
