#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), true, false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) || false))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y) && true)) && true))), true, false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))), false), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))) && true)), bool(bvec4(bool(false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))), injectionSwitch)).x > injectionSwitch.y)), true, false)))), false), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, true, true))), true)))), _GLF_IDENTITY(false || (bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))), false), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec4(bool(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), (bool(bvec4(bool(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))) || false))), false), true, true))))), bool(bool(false || (bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))), false), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))), false), true, true))))))))))) || false))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(false, (false) || false), false)))), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * round(length(normalize(cos(0.0))))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), (true && (_GLF_IDENTITY(false, ! (! (false))))) || false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), mix(vec2((vec2(_GLF_IDENTITY(vec2(injectionSwitch), _GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(vec2(injectionSwitch), max(vec2(injectionSwitch), vec2(injectionSwitch))), _GLF_IDENTITY(dot(vec2(round(length(normalize(vec2(1.0, 1.0)))), 0.0), vec2(1.0, 0.0)), dot(vec2(round(length(normalize(vec2(1.0, 1.0)))), 0.0), vec2(1.0, 0.0))))), mat2(1.0) * (vec2(vec3(_GLF_IDENTITY(_GLF_IDENTITY(vec2(injectionSwitch), max(vec2(injectionSwitch), vec2(injectionSwitch))), mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(float(-80293), clamp(float(-80293), _GLF_IDENTITY(float(-80293), (_GLF_IDENTITY(float(-80293), clamp(float(-80293), float(-80293), float(-80293)))) - 0.0), float(-80293)))), (_GLF_IDENTITY(vec2(injectionSwitch), max(vec2(injectionSwitch), vec2(injectionSwitch))))[1]), vec2((_GLF_IDENTITY(vec2(injectionSwitch), max(vec2(injectionSwitch), vec2(injectionSwitch))))[0], _GLF_FUZZED(-5.9)), bvec2(true, _GLF_IDENTITY(false, (false) && true)))), _GLF_IDENTITY(dot(vec2(round(length(normalize(vec2(1.0, 1.0)))), 0.0), vec2(1.0, 0.0)), dot(vec2(round(length(normalize(vec2(1.0, 1.0)))), 0.0), vec2(1.0, 0.0))))))))))[0], (vec2(vec2(injectionSwitch)))[1]), vec2(_GLF_FUZZED(float(false)), _GLF_FUZZED(-84.78)), bvec2(false, false)))).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, max(0, 0))], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))[1])).y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, true))))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, true))))), true, false, false))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true), ! (! (! ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true))))))))))
    return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), cos(0.0), 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-2.8)), float(injectionSwitch.y), bool(true)))) + 0.0)), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-2.8)), float(injectionSwitch.y), bool(true)))) + 0.0)), true), bvec2(bvec4(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-2.8)), float(injectionSwitch.y), bool(true)))) + 0.0)), true), false, true))))))))
    return;
   return;
  }
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u), _GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec3(gl_WorkGroupSize.x, 0u, (0u | 0u)))), _GLF_IDENTITY(gl_WorkGroupSize.x, 0u ^ (gl_WorkGroupSize.x)))), ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), min(~ (gl_WorkGroupSize.x), _GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u))) ^ uvec3(0u, 0u, 0u)).x)) * 1u))))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(1u, 1u, 1u) * (gl_WorkGroupSize)).x), uint(uvec4(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize)))) | (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))))).x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ _GLF_IDENTITY((~ (gl_WorkGroupSize)), ((~ (gl_WorkGroupSize))) / uvec3(1u, 1u, 1u)))) | (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))))).x) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize)))) | (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))))).x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize)))) | (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))))).x) + 0u)))), _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(5u))), ((0u >> _GLF_IDENTITY(uint(5u), uint(5u)))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, clamp(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), workgroup_size * workgroup_id, workgroup_size * workgroup_id))) | (workgroup_size * workgroup_id));
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), false))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), ! (! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true)))))))
    return;
   return;
  }
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u) : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), uint(_GLF_IDENTITY(uvec4(_GLF_FUZZED(num_workgroup), 1u, 0u, 0u), max(uvec4(_GLF_FUZZED(num_workgroup), 1u, 0u, 0u), uvec4(_GLF_FUZZED(num_workgroup), 1u, 0u, 0u)))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(_GLF_IDENTITY(true && (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec3(true && (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y))))), false, false))), true && (true && (! _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))
    return;
  }
 uint virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(workgroup_id)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
  return;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base)) + ((subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 0, (_GLF_IDENTITY(((1 | 1) << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), 0 | (((1 | 1) << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))))), _GLF_IDENTITY((ivec3(1, 0, (((1 | 1) << _GLF_IDENTITY(_GLF_IDENTITY(int(1), ~ (_GLF_IDENTITY(~ (int(1)), (~ (int(1))) >> 0))), int(1))) >> _GLF_IDENTITY(int(1), int(1))))) - (_GLF_IDENTITY(ivec3(0, 0, 0) | ivec3(0, 0, 0), _GLF_IDENTITY(clamp(ivec3(0, _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, int(int(0))))))), 0) | ivec3(0, 0, 0), ivec3(0, 0, 0) | ivec3(0, 0, 0), ivec3(0, 0, 0) | ivec3(0, 0, 0)), max(clamp(ivec3(0, 0, 0) | ivec3(0, 0, 0), ivec3(0, 0, 0) | ivec3(0, 0, 0), ivec3(0, 0, 0) | ivec3(0, 0, 0)), clamp(ivec3(0, 0, _GLF_IDENTITY(0, int(ivec3(0, _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-55256))), 1)), 0)))) | ivec3(0, 0, 0), ivec3(0, 0, 0) | ivec3(0, 0, 0), ivec3(0, 0, 0) | _GLF_IDENTITY(ivec3(0, 0, _GLF_IDENTITY(0, _GLF_IDENTITY(1 * (0), 1 * (_GLF_IDENTITY(1 * (0), (_GLF_IDENTITY(1 * (0), max(1 * (0), 1 * (0)))) - 0))))), (true ? ivec3(0, 0, _GLF_IDENTITY(0, 1 * (0))) : _GLF_FUZZED(ivec3(32586, 42745, -25356))))))))), (true ? (_GLF_IDENTITY(ivec3(1, 0, (((_GLF_IDENTITY(1 | 1, (1 | _GLF_IDENTITY(1, ~ (~ (1)))) | 0)) << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) >> 0)))) | 0), 1)), 1))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(int(_GLF_IDENTITY(1, max(1, 1))), min(int(_GLF_IDENTITY(1, max(1, 1))), int(_GLF_IDENTITY(1, max(1, 1))))), 0, 1), (true ? ivec3(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(1, max(1, 1))), min(int(_GLF_IDENTITY(1, max(1, 1))), int(_GLF_IDENTITY(1, max(1, 1))))), ~ (~ (_GLF_IDENTITY(int(_GLF_IDENTITY(1, max(1, 1))), min(int(_GLF_IDENTITY(1, max(1, 1))), int(_GLF_IDENTITY(1, max(1, 1)))))))), 0, 1) : _GLF_FUZZED(ivec3(-93685, -95020, 80470))))), (false ? _GLF_FUZZED(-56999) : int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(int(_GLF_IDENTITY(1, max(1, 1))), min(int(_GLF_IDENTITY(1, max(1, 1))), int(_GLF_IDENTITY(1, max(1, 1))))), 0, 1), (true ? ivec3(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (1)))), 1))), min(int(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, min(1, 1))))), int(_GLF_IDENTITY(1, max(1, 1))))), max(_GLF_IDENTITY(int(_GLF_IDENTITY(1, max(1, 1))), min(int(_GLF_IDENTITY(1, max(1, 1))), int(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(1, max(1, 1))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), max(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), ~ (~ (_GLF_IDENTITY(1, max(1, 1))))), _GLF_IDENTITY(1, max(1, 1))))))))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(1, max(1, 1))), min(int(_GLF_IDENTITY(1, max(1, 1))), int(_GLF_IDENTITY(1, max(1, 1))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(1, max(1, 1))), min(int(_GLF_IDENTITY(1, max(1, 1))), int(_GLF_IDENTITY(1, max(1, 1)))))) | 0))), 0, 1) : _GLF_FUZZED(ivec3(-93685, -95020, 80470))))))), min(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(int(_GLF_IDENTITY(1, max(1, 1))), min(int(_GLF_IDENTITY(1, max(1, 1))), int(_GLF_IDENTITY(1, max(1, 1))))), 0, 1), (true ? ivec3(_GLF_IDENTITY(int(_GLF_IDENTITY(1, max(1, 1))), min(int(_GLF_IDENTITY(1, max(1, 1))), int(_GLF_IDENTITY(1, max(1, 1))))), 0, 1) : _GLF_FUZZED(ivec3(-93685, -95020, 80470))))), (false ? _GLF_FUZZED(-56999) : int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(int(_GLF_IDENTITY(1, max(1, 1))), min(int(_GLF_IDENTITY(1, max(1, 1))), int(_GLF_IDENTITY(1, max(1, 1))))), 0, 1), (true ? ivec3(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(1, max(1, 1))), min(int(_GLF_IDENTITY(1, max(1, 1))), int(_GLF_IDENTITY(1, max(1, 1))))), max(_GLF_IDENTITY(int(_GLF_IDENTITY(1, max(1, 1))), min(int(_GLF_IDENTITY(1, max(1, 1))), int(_GLF_IDENTITY(1, max(1, 1))))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), (max(1, 1)) ^ 0))), min(int(_GLF_IDENTITY(1, max(1, 1))), int(_GLF_IDENTITY(1, max(1, 1))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(1, max(1, 1))), min(int(_GLF_IDENTITY(1, max(1, 1))), int(_GLF_IDENTITY(1, max(1, 1)))))) | 0))), 0, 1) : _GLF_FUZZED(ivec3(-93685, -95020, 80470))))))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(int(_GLF_IDENTITY(1, max(1, 1))), min(int(_GLF_IDENTITY(1, max(1, 1))), int(_GLF_IDENTITY(1, max(1, 1))))), 0, 1), (true ? ivec3(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(1, max(1, 1))), min(int(_GLF_IDENTITY(1, max(1, 1))), _GLF_IDENTITY(int(_GLF_IDENTITY(1, max(1, 1))), (false ? _GLF_FUZZED(19767) : int(_GLF_IDENTITY(1, max(1, 1))))))), min(int(_GLF_IDENTITY(1, max(1, 1))), int(_GLF_IDENTITY(1, max(1, 1))))), 0, 1) : _GLF_FUZZED(ivec3(-93685, -95020, 80470))))), (false ? _GLF_FUZZED(-56999) : int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(int(_GLF_IDENTITY(1, max(1, 1))), min(int(_GLF_IDENTITY(1, max(1, 1))), int(_GLF_IDENTITY(1, max(1, 1))))), 0, 1), (true ? ivec3(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(1, max(1, 1))), min(int(_GLF_IDENTITY(1, max(1, 1))), int(_GLF_IDENTITY(1, max(1, 1))))), max(_GLF_IDENTITY(int(_GLF_IDENTITY(1, max(1, 1))), min(int(_GLF_IDENTITY(1, max(1, 1))), int(_GLF_IDENTITY(1, max(1, 1))))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(1, max(1, 1))), min(int(_GLF_IDENTITY(1, max(1, 1))), int(_GLF_IDENTITY(1, max(1, 1))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(1, max(1, 1))), min(int(_GLF_IDENTITY(1, max(1, 1))), int(_GLF_IDENTITY(1, max(1, 1)))))) | 0))), 0, 1) : _GLF_FUZZED(ivec3(-93685, -95020, 80470)))))))))), int(1))) >> _GLF_IDENTITY(int(1), int(1)))), ivec3(ivec4(ivec3(_GLF_IDENTITY(1, (1) | (1)), 0, (((_GLF_IDENTITY(1, (false ? _GLF_FUZZED(findMSB(virtual_gid)) : _GLF_IDENTITY(1, (1) - 0))) | 1) << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))), 1)))) - (_GLF_IDENTITY(ivec3(0, 0, 0) | ivec3(0, 0, 0), (_GLF_IDENTITY(ivec3(0, 0, 0) | ivec3(0, 0, 0), ivec3(ivec4(ivec3(0, 0, _GLF_IDENTITY(0, max(0, 0))) | _GLF_IDENTITY(ivec3(0, 0, 0), _GLF_IDENTITY((ivec3(0, 0, 0)) * ivec3(1, 1, 1), ((ivec3(0, 0, 0)) * ivec3(1, 1, 1)) << ivec3(0, 0, 0))), 0)))) - ivec3(0, 0, 0))) : _GLF_FUZZED((_GLF_IDENTITY(~ ivec3(_GLF_IDENTITY(38157, (_GLF_IDENTITY(38157, (false ? _GLF_IDENTITY(_GLF_FUZZED(-57672), (_GLF_FUZZED(-57672)) | 0) : 38157))) ^ 0), 76539, -20085), (_GLF_IDENTITY(~ ivec3(38157, 76539, -20085), max(~ _GLF_IDENTITY(ivec3(38157, 76539, -20085), (ivec3(38157, 76539, -20085)) * ivec3(1, 1, 1)), _GLF_IDENTITY(~ ivec3(38157, 76539, -20085), (~ ivec3(38157, 76539, -20085)) | ivec3(0, 0, 0))))) ^ ivec3(0, 0, 0)))))))))) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 atomicStore(buf[virtual_gid], uint(1), _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) >> 0), 4)), 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % 2, ~ (~ (_GLF_IDENTITY(subgroup_local_id % 2, _GLF_IDENTITY(uint(uint(subgroup_local_id % 2)), _GLF_IDENTITY(0u + _GLF_IDENTITY((uint(uint(subgroup_local_id % 2))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY((uint(uint(subgroup_local_id % 2))), max((uint(uint(subgroup_local_id % 2))), (uint(uint(subgroup_local_id % 2))))), 1u)), clamp(uint(uvec2(_GLF_IDENTITY((uint(uint(subgroup_local_id % 2))), max((uint(uint(subgroup_local_id % 2))), (uint(uint(subgroup_local_id % 2))))), 1u)), uint(uvec2(_GLF_IDENTITY((uint(uint(subgroup_local_id % 2))), max((uint(uint(subgroup_local_id % 2))), (uint(uint(subgroup_local_id % 2))))), 1u)), uint(uvec2(_GLF_IDENTITY((uint(uint(subgroup_local_id % 2))), max((uint(uint(subgroup_local_id % 2))), (uint(uint(subgroup_local_id % 2))))), 1u))))), (0u + (uint(uint(subgroup_local_id % 2)))) >> _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))))), ((_GLF_IDENTITY(subgroup_local_id % 2, ~ (~ (_GLF_IDENTITY(subgroup_local_id % 2, _GLF_IDENTITY(uint(uint(subgroup_local_id % 2)), _GLF_IDENTITY(0u + (uint(uint(subgroup_local_id % 2))), _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) | (0u)) + (uint(uint(subgroup_local_id % 2)))) >> 0u, ((0u + (uint(uint(subgroup_local_id % 2)))) >> 0u) * 1u))))))))) >> 0u), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % 2, ~ (~ (_GLF_IDENTITY(subgroup_local_id % 2, _GLF_IDENTITY(uint(uint(subgroup_local_id % 2)), _GLF_IDENTITY(0u + _GLF_IDENTITY((uint(uint(subgroup_local_id % 2))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY((uint(uint(subgroup_local_id % 2))), max((uint(uint(subgroup_local_id % 2))), (uint(uint(subgroup_local_id % 2))))), 1u)), clamp(uint(uvec2(_GLF_IDENTITY((uint(uint(subgroup_local_id % 2))), max((uint(uint(subgroup_local_id % 2))), (uint(uint(subgroup_local_id % 2))))), 1u)), uint(uvec2(_GLF_IDENTITY((uint(uint(subgroup_local_id % 2))), max((uint(uint(subgroup_local_id % 2))), (uint(uint(subgroup_local_id % 2))))), 1u)), uint(uvec2(_GLF_IDENTITY((uint(uint(subgroup_local_id % 2))), max((uint(uint(subgroup_local_id % 2))), (uint(uint(subgroup_local_id % 2))))), 1u))))), (0u + (uint(uint(subgroup_local_id % 2)))) >> _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))))), ((_GLF_IDENTITY(subgroup_local_id % 2, ~ (~ (_GLF_IDENTITY(subgroup_local_id % 2, _GLF_IDENTITY(uint(uint(subgroup_local_id % 2)), _GLF_IDENTITY(0u + (uint(uint(subgroup_local_id % 2))), _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) | (0u)) + (uint(uint(subgroup_local_id % 2)))) >> 0u, ((0u + (uint(uint(subgroup_local_id % 2)))) >> 0u) * 1u))))))))) >> 0u), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % 2, ~ (~ (_GLF_IDENTITY(subgroup_local_id % 2, _GLF_IDENTITY(uint(uint(subgroup_local_id % 2)), _GLF_IDENTITY(0u + _GLF_IDENTITY((uint(uint(subgroup_local_id % 2))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY((uint(uint(subgroup_local_id % 2))), max((uint(uint(subgroup_local_id % 2))), (uint(uint(subgroup_local_id % 2))))), 1u)), clamp(uint(uvec2(_GLF_IDENTITY((uint(uint(subgroup_local_id % 2))), max((uint(uint(subgroup_local_id % 2))), (uint(uint(subgroup_local_id % 2))))), 1u)), uint(uvec2(_GLF_IDENTITY((uint(uint(subgroup_local_id % 2))), max((uint(uint(subgroup_local_id % 2))), (uint(uint(subgroup_local_id % 2))))), 1u)), uint(uvec2(_GLF_IDENTITY((uint(uint(subgroup_local_id % 2))), max((uint(uint(subgroup_local_id % 2))), (uint(uint(subgroup_local_id % 2))))), 1u))))), (0u + (uint(uint(subgroup_local_id % 2)))) >> _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))))), ((_GLF_IDENTITY(subgroup_local_id % 2, ~ (~ (_GLF_IDENTITY(subgroup_local_id % 2, _GLF_IDENTITY(uint(uint(subgroup_local_id % 2)), _GLF_IDENTITY(0u + (uint(uint(subgroup_local_id % 2))), _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) | (0u)) + (uint(uint(subgroup_local_id % 2)))) >> 0u, ((0u + (uint(uint(subgroup_local_id % 2)))) >> 0u) * 1u))))))))) >> 0u))), min((_GLF_IDENTITY(subgroup_local_id % 2, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_local_id % 2, _GLF_IDENTITY(uint(uint(subgroup_local_id % 2)), _GLF_IDENTITY(0u + (uint(uint(subgroup_local_id % 2))), (0u + (uint(_GLF_IDENTITY(uint(subgroup_local_id % 2), (false ? _GLF_FUZZED(subgroup_size) : uint(subgroup_local_id % 2)))))) >> 0u))))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_local_id % 2, _GLF_IDENTITY(uint(uint(subgroup_local_id % 2)), _GLF_IDENTITY(0u + (uint(uint(subgroup_local_id % 2))), (0u + (uint(uint(subgroup_local_id % 2)))) >> 0u))))), clamp((~ (_GLF_IDENTITY(subgroup_local_id % 2, _GLF_IDENTITY(uint(uint(subgroup_local_id % 2)), _GLF_IDENTITY(0u + (uint(uint(subgroup_local_id % 2))), (0u + (uint(uint(subgroup_local_id % 2)))) >> 0u))))), (~ (_GLF_IDENTITY(subgroup_local_id % 2, _GLF_IDENTITY(uint(uint(subgroup_local_id % 2)), _GLF_IDENTITY(0u + (uint(uint(subgroup_local_id % 2))), (0u + (uint(uint(subgroup_local_id % 2)))) >> 0u))))), (~ (_GLF_IDENTITY(subgroup_local_id % 2, _GLF_IDENTITY(uint(uint(subgroup_local_id % 2)), _GLF_IDENTITY(0u + (uint(uint(_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(subgroup_local_id % 2, 0u | (subgroup_local_id % 2))) + 0u)))), (0u + (uint(uint(subgroup_local_id % 2)))) >> 0u)))))))) << 0u))), (_GLF_IDENTITY(subgroup_local_id % 2, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (2) << 0), _GLF_IDENTITY(uint(uint(subgroup_local_id % 2)), _GLF_IDENTITY(0u + (uint(uint(subgroup_local_id % 2))), (0u + (uint(uint(subgroup_local_id % 2)))) >> 0u))))), clamp(~ (~ (_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (2) << 0), _GLF_IDENTITY(uint(uint(subgroup_local_id % 2)), _GLF_IDENTITY(0u + (uint(uint(subgroup_local_id % 2))), (0u + (uint(uint(subgroup_local_id % 2)))) >> 0u))))), ~ (~ (_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (2) << 0), _GLF_IDENTITY(uint(uint(subgroup_local_id % 2)), _GLF_IDENTITY(0u + (uint(uint(subgroup_local_id % 2))), (0u + (uint(uint(subgroup_local_id % 2)))) >> 0u))))), ~ (~ (_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (2) << 0), _GLF_IDENTITY(uint(uint(subgroup_local_id % 2)), _GLF_IDENTITY(0u + (uint(uint(subgroup_local_id % 2))), (0u + (uint(uint(subgroup_local_id % 2)))) >> 0u))))))))))) == 0)
  {
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, min(_GLF_IDENTITY(2, (2) ^ 0), _GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY((true ? 2 : _GLF_FUZZED(85504)), 1 * _GLF_IDENTITY(((true ? 2 : _GLF_IDENTITY(_GLF_FUZZED(85504), (_GLF_FUZZED(85504)) ^ 0))), (((true ? 2 : _GLF_IDENTITY(_GLF_FUZZED(85504), (_GLF_FUZZED(85504)) ^ 0)))) * 1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((true ? 2 : _GLF_FUZZED(85504)), 1 * _GLF_IDENTITY(((true ? 2 : _GLF_IDENTITY(_GLF_FUZZED(85504), (_GLF_FUZZED(85504)) ^ 0))), (((true ? 2 : _GLF_IDENTITY(_GLF_FUZZED(85504), (_GLF_FUZZED(85504)) ^ 0)))) * 1))), ~ (~ (~ (_GLF_IDENTITY((true ? 2 : _GLF_FUZZED(85504)), 1 * _GLF_IDENTITY(((true ? 2 : _GLF_IDENTITY(_GLF_FUZZED(85504), (_GLF_FUZZED(85504)) ^ 0))), (((true ? 2 : _GLF_IDENTITY(_GLF_FUZZED(85504), (_GLF_FUZZED(85504)) ^ 0)))) * 1)))))))))))), 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(false, true, false, _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x < injectionSwitch.y))))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(6863.9373, -9.9)) : injectionSwitch)).y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))) - vec2(0.0, 0.0)).x > injectionSwitch.y) || false, bool(bool((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))) - vec2(0.0, 0.0)).x > injectionSwitch.y) || false))))))), (_GLF_IDENTITY(true && _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, 0.0, 1.0, sin(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))), 1.0, sqrt(1.0)), _GLF_IDENTITY((mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, 0.0, 1.0, sin(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))), 1.0, sqrt(1.0))) * mat2(1.0), mat4(1.0) * ((mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, 0.0, 1.0, sin(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))), 1.0, sqrt(1.0))) * mat2(1.0))))), max(vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, 0.0, 1.0, sin(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))), 1.0, sqrt(1.0)), _GLF_IDENTITY((mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, 0.0, 1.0, sin(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))), 1.0, sqrt(1.0))) * mat2(1.0), mat4(1.0) * ((mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, 0.0, 1.0, sin(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))), 1.0, sqrt(1.0))) * mat2(1.0))))), vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, 0.0, 1.0, sin(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))), 1.0, sqrt(1.0)), _GLF_IDENTITY((mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, 0.0, 1.0, sin(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))), 1.0, sqrt(1.0))) * mat2(1.0), mat4(1.0) * ((mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, 0.0, 1.0, sin(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))), 1.0, sqrt(1.0))) * mat2(1.0)))))))), (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))) - vec2(0.0, 0.0)), mix(vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))) - vec2(0.0, 0.0)))[0], (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))) - vec2(0.0, 0.0)))[1]), vec2(_GLF_FUZZED(7.4), _GLF_FUZZED(6110.7184)), bvec2(false, false))).x > injectionSwitch.y) || false)))), ! (! (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, 0.0, 1.0, sin(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))), 1.0, sqrt(1.0)), _GLF_IDENTITY((mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, 0.0, 1.0, sin(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))), 1.0, sqrt(1.0))) * mat2(1.0), mat4(1.0) * ((mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, 0.0, 1.0, sin(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))), 1.0, sqrt(1.0))) * mat2(1.0))))), max(vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, 0.0, 1.0, sin(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))), 1.0, sqrt(1.0)), _GLF_IDENTITY((mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, 0.0, 1.0, sin(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))), 1.0, sqrt(1.0))) * mat2(1.0), mat4(1.0) * ((mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, 0.0, 1.0, sin(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))), 1.0, sqrt(1.0))) * mat2(1.0))))), vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, 0.0, 1.0, sin(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))), 1.0, sqrt(1.0)), _GLF_IDENTITY((mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, 0.0, 1.0, sin(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))), 1.0, sqrt(1.0))) * mat2(1.0), mat4(1.0) * ((mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, 0.0, 1.0, sin(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))), 1.0, sqrt(1.0))) * mat2(1.0)))))))), (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))) - vec2(0.0, 0.0)), mix(vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))) - vec2(0.0, 0.0)))[0], (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))) - vec2(0.0, 0.0)))[1]), vec2(_GLF_FUZZED(7.4), _GLF_FUZZED(6110.7184)), bvec2(false, false))).x > injectionSwitch.y) || false)))), ! (! ((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, 0.0, 1.0, sin(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))), 1.0, sqrt(1.0)), _GLF_IDENTITY((mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, 0.0, 1.0, sin(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))), 1.0, sqrt(1.0))) * mat2(1.0), mat4(1.0) * ((mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, 0.0, 1.0, sin(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))), 1.0, sqrt(1.0))) * mat2(1.0))))), max(vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, 0.0, 1.0, sin(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))), 1.0, sqrt(1.0)), _GLF_IDENTITY((mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, 0.0, 1.0, sin(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))), 1.0, sqrt(1.0))) * mat2(1.0), mat4(1.0) * ((mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, 0.0, 1.0, sin(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))), 1.0, sqrt(1.0))) * mat2(1.0))))), vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, 0.0, 1.0, sin(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))), 1.0, sqrt(1.0)), _GLF_IDENTITY((mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, 0.0, 1.0, sin(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))), 1.0, sqrt(1.0))) * mat2(1.0), mat4(1.0) * ((mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, 0.0, 1.0, sin(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))), 1.0, sqrt(1.0))) * mat2(1.0)))))))), (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))) - vec2(0.0, 0.0)), mix(vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))) - vec2(0.0, 0.0)))[0], (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))) - vec2(0.0, 0.0)))[1]), vec2(_GLF_FUZZED(7.4), _GLF_FUZZED(6110.7184)), bvec2(false, false))).x > injectionSwitch.y) || false)))))))))), true && (true && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))) - vec2(0.0, 0.0)).x > injectionSwitch.y) || false))))))) || false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((vec2(-4.8, 210.822) - vec2(-2148.1109, 5.9))))).y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) && true)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)) || false)) && true)))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
