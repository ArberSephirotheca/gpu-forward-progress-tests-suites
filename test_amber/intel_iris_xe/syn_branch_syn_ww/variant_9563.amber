#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   switch(_GLF_SWITCH(0))
    {
     case 68:
     uvec2 _GLF_SWITCH_5_0v, _GLF_SWITCH_5_1v;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(61.57)), float(injectionSwitch.y), bool(true))), (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(61.57)), _GLF_IDENTITY(float(injectionSwitch.y), max(float(injectionSwitch.y), float(injectionSwitch.y))), bool(true))) : _GLF_FUZZED(-2.8)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     case 52:
     smoothstep(atan(vec3(1.4, -59.68, -9980.2889), vec3(-1.8, 40.28, -1.5)), (faceforward(92.23, 8022.7685, 162.637) / vec3(-0.3, -96.90, -2.6)), vec3(-7239.5912, -7465.5318, 5.8));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     case 0:
     case 98:
     case 24:
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), ! (! (bool(bvec2(_GLF_DEAD(false), true)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
     break;
     case 6:
     isnan(vec4(-19.87, 4.2, 3.6, 3685.7212));
     default:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true, false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))), true, true, true)), (bool(bvec4(! (false), true, true, true))) && true), bool(bvec4(_GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))), true, true, true)), (bool(bvec4(! (false), true, true, true))) && true), true, true, true))))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     1;
    }
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), true, true))), ! (! (_GLF_IDENTITY(false, true && (false)))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_base = _GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u + (subgroup_id), uint(uvec2(_GLF_IDENTITY(0u + (subgroup_id), max(0u + (subgroup_id), _GLF_IDENTITY(0u + (subgroup_id), 0u ^ (0u + (subgroup_id))))), 1u)))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))) + (subgroup_id)))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)), clamp(_GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)), _GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)), _GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)))))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), 0u + (subgroup_id))))) | 0u), _GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, 0u + (subgroup_id))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, max(0u, 0u)) + (subgroup_id)))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)), clamp(_GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, ~ (~ (0u))) + (subgroup_id)), _GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)))))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), 0u + (subgroup_id))))) | 0u), _GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)))))))) + 0u) - (0u | 0u), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, max(0u, 0u)) + (subgroup_id)))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)), clamp(_GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)), _GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)), _GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)))))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), 0u + (subgroup_id))))) | 0u), _GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, 0u + (subgroup_id))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, max(0u, 0u)) + _GLF_IDENTITY((subgroup_id), ((subgroup_id)) | ((subgroup_id)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)), clamp(_GLF_IDENTITY(subgroup_id, 0u + (_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))))), _GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)), _GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), (subgroup_id) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), 0u + (subgroup_id))))) | 0u), _GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)))))))) + 0u) - (0u | 0u)) | 0u)))) * subgroup_size;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, bool(bool(true))) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base, clamp(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | 0u), workgroup_base + subgroup_base, workgroup_base + subgroup_base)) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), min(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), max((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec2(subgroup_local_id, 1u)), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(uvec2(subgroup_local_id, 1u)), uint(uint(uint(uvec2(subgroup_local_id, 1u)))))), 0u | _GLF_IDENTITY((uint(_GLF_IDENTITY(uint(uvec2(subgroup_local_id, 1u)), uint(uint(uint(uvec2(subgroup_local_id, 1u))))))), (true ? _GLF_IDENTITY((uint(_GLF_IDENTITY(uint(uvec2(subgroup_local_id, 1u)), uint(uint(uint(uvec2(subgroup_local_id, 1u))))))), clamp((uint(_GLF_IDENTITY(uint(uvec2(subgroup_local_id, 1u)), uint(uint(uint(uvec2(subgroup_local_id, 1u))))))), (uint(_GLF_IDENTITY(uint(uvec2(subgroup_local_id, 1u)), uint(uint(uint(uvec2(subgroup_local_id, 1u))))))), (uint(_GLF_IDENTITY(uint(uvec2(subgroup_local_id, 1u)), uint(uint(uint(uvec2(subgroup_local_id, 1u))))))))) : _GLF_FUZZED(156929u))))))) + 1), 0u + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec2(subgroup_local_id, 1u)), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(uvec2(subgroup_local_id, 1u)), uint(uint(uint(uvec2(subgroup_local_id, 1u)))))), 0u | (uint(_GLF_IDENTITY(uint(uvec2(subgroup_local_id, 1u)), uint(uint(uint(uvec2(subgroup_local_id, 1u))))))))))) + 1), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec2(subgroup_local_id, 1u)), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(uvec2(subgroup_local_id, 1u)), uint(uint(uint(uvec2(subgroup_local_id, 1u)))))), 0u | (uint(_GLF_IDENTITY(uint(uvec2(subgroup_local_id, 1u)), uint(uint(uint(uvec2(subgroup_local_id, 1u))))))))))) + 1), ~ (~ ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec2(subgroup_local_id, 1u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(uvec2(subgroup_local_id, 1u)), uint(uint(uint(uvec2(subgroup_local_id, 1u)))))), 0u | (uint(_GLF_IDENTITY(uint(uvec2(subgroup_local_id, 1u)), uint(uint(uint(uvec2(subgroup_local_id, 1u))))))))), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(uvec2(subgroup_local_id, 1u)), uint(uint(uint(uvec2(subgroup_local_id, 1u)))))), 0u | (uint(_GLF_IDENTITY(uint(uvec2(subgroup_local_id, 1u)), uint(uint(uint(uvec2(subgroup_local_id, 1u))))))))), max(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(uvec2(subgroup_local_id, 1u)), uint(uint(uint(uvec2(subgroup_local_id, 1u)))))), 0u | (uint(_GLF_IDENTITY(uint(uvec2(subgroup_local_id, 1u)), uint(uint(uint(uvec2(subgroup_local_id, 1u))))))))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(uvec2(subgroup_local_id, 1u)), uint(uint(uint(uvec2(subgroup_local_id, 1u)))))), 0u | (uint(_GLF_IDENTITY(uint(uvec2(subgroup_local_id, 1u)), uint(uint(uint(uvec2(subgroup_local_id, 1u))))))))))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(uvec2(subgroup_local_id, 1u)), uint(uint(uint(uvec2(subgroup_local_id, 1u)))))), 0u | (uint(_GLF_IDENTITY(uint(uvec2(subgroup_local_id, 1u)), uint(uint(uint(uvec2(subgroup_local_id, 1u))))))))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(uvec2(subgroup_local_id, 1u)), uint(uint(uint(uvec2(subgroup_local_id, 1u)))))), 0u | (uint(_GLF_IDENTITY(uint(uvec2(subgroup_local_id, 1u)), uint(uint(uint(uvec2(subgroup_local_id, 1u))))))))))))) + 1))))) << 0u))) % subgroup_size), (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (true ? (subgroup_local_id + 1) % subgroup_size : _GLF_FUZZED(subgroup_size)))) / 1u))))) | (((subgroup_local_id + 1) % subgroup_size))), _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) / 1u)));
 atomicStore(buf[_GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uvec4(virtual_gid, 1u, 1u, 0u), ~ (~ (uvec4(virtual_gid, 1u, 1u, 0u))))))], uint(1), 4, 64, 4);
 if(_GLF_IDENTITY((subgroup_local_id % 2), ((subgroup_local_id % 2)) | ((subgroup_local_id % 2))) == 0)
  {
   switch(_GLF_SWITCH(0))
    {
     case 77:
     if(_GLF_DEAD(false))
      return;
     vec3(4.2, -1.0, 282.757);
     case 27:
     {
      uint _GLF_SWITCH_0_0v;
      {
       uvec3(_GLF_IDENTITY(47410u, 0u + (_GLF_IDENTITY(47410u, uint(uvec4(47410u, 0u, 1u, 1u))))), _GLF_IDENTITY(13164u, max(_GLF_IDENTITY(13164u, ~ (~ (13164u))), 13164u)), 131240u);
       for(mat3x4 _GLF_SWITCH_0_1v, _GLF_SWITCH_0_2v, _GLF_SWITCH_0_3v[3]; false; ivec3(96946, 67762, 69963))
        {
         switch(_GLF_SWITCH(0))
          {
           case 49:
           (ivec3(-79443, -12436, -96880) * ivec3(31467, -40458, -66519));
           case 0:
           ivec3 _GLF_SWITCH_0_4v, _GLF_SWITCH_0_5v;
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
            continue;
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
              continue;
             break;
            }
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              continue;
             break;
            }
           mat4x3 _GLF_SWITCH_0_6v, _GLF_SWITCH_0_7v[1];
           case 99:
           ;
           bvec3 _GLF_SWITCH_0_8v;
           case 84:
           if(_GLF_DEAD(false))
            return;
           case 43:
           mat3x2 _GLF_SWITCH_0_9v;
           break;
           case 88:
           mat4 _GLF_SWITCH_3_0v[45], _GLF_SWITCH_3_1v;
           case 33:
           _GLF_IDENTITY(log2(vec4(0.1, 0.5, -3494.7292, -6.3)), max(log2(vec4(0.1, 0.5, -3494.7292, -6.3)), _GLF_IDENTITY(log2(vec4(0.1, _GLF_IDENTITY(0.5, max(0.5, 0.5)), -3494.7292, -6.3)), _GLF_IDENTITY((log2(vec4(0.1, 0.5, -3494.7292, -6.3))) * mat4(1.0), clamp((log2(vec4(0.1, 0.5, -3494.7292, -6.3))) * mat4(1.0), (log2(vec4(0.1, 0.5, -3494.7292, -6.3))) * mat4(1.0), (log2(vec4(0.1, 0.5, -3494.7292, -6.3))) * mat4(1.0))))));
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             continue;
            }
           if(_GLF_DEAD(false))
            break;
           default:
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             break;
            }
           1;
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          continue;
        }
       mat4x2(2.4, 2.2, -0.5, 9647.7141, _GLF_IDENTITY(80.15, clamp(80.15, 80.15, _GLF_IDENTITY(80.15, (true ? 80.15 : _GLF_FUZZED(4810.5620))))), -357.472, 0.5, -418.357);
       if(_GLF_DEAD(false))
        return;
       int _GLF_SWITCH_0_10v, _GLF_SWITCH_0_11v, _GLF_SWITCH_0_12v[95];
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
          return;
         return;
        }
       vec2(-3769.4376, -2770.0008);
       if(_GLF_DEAD(false))
        return;
       _GLF_IDENTITY(atomicAdd(workgroup_size, _GLF_SWITCH_0_0v), (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) | (atomicAdd(workgroup_size, _GLF_SWITCH_0_0v)));
       bool _GLF_SWITCH_0_13v;
      }
      if(_GLF_DEAD(false))
       return;
      (step(-8.9, vec3(-2061.0468, 99.20, _GLF_IDENTITY(-556.772, _GLF_IDENTITY((-556.772) * 1.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-4.2)), (true ? _GLF_IDENTITY(float(_GLF_FUZZED(-4.2)), _GLF_IDENTITY((float(_GLF_FUZZED(-4.2))), mix(float(_GLF_FUZZED((true ? 5.9 : -3.1))), float((float(_GLF_FUZZED(-4.2)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) - 0.0) : _GLF_FUZZED(-5.3))), float((-556.772) * 1.0), bool(true)))))) + -968.788);
      if(true)
       {
        if(false)
         {
          ivec2 _GLF_SWITCH_0_14v, _GLF_SWITCH_0_15v;
          ivec3(64709, 54176, 66058);
          if(_GLF_DEAD(false))
           return;
          if(_GLF_DEAD(false))
           return;
         }
        else
         {
          if(_GLF_DEAD(false))
           return;
          ((-658.530 - mat3x4(-43.19, -4646.0746, -0.5, _GLF_IDENTITY(-8.9, max(-8.9, -8.9)), 2.6, _GLF_IDENTITY(_GLF_IDENTITY(-1258.2974, (_GLF_IDENTITY(-1258.2974, min(_GLF_IDENTITY(-1258.2974, 0.0 + (-1258.2974)), -1258.2974))) + 0.0), (-1258.2974) - 0.0), _GLF_IDENTITY(8.8, 1.0 * (8.8)), 9.1, -699.219, -95.04, -6.9, 5621.9791)) * mat3(71.51, 8145.8816, 32.83, 4.0, _GLF_IDENTITY(_GLF_IDENTITY(-0.2, min(_GLF_IDENTITY(-0.2, (-0.2) + determinant(mat4(0.0, 1.0, log(1.0), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))), -0.2)), min(_GLF_IDENTITY(-0.2, clamp(-0.2, -0.2, _GLF_IDENTITY(-0.2, float(mat2x4(-0.2, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0))))), _GLF_IDENTITY(-0.2, clamp(-0.2, _GLF_IDENTITY(-0.2, max(-0.2, -0.2)), -0.2)))), -79.70, 262.363, 5.1, _GLF_IDENTITY(47.82, mix(float(_GLF_FUZZED(-9.9)), float(_GLF_IDENTITY(47.82, min(_GLF_IDENTITY(47.82, clamp(47.82, _GLF_IDENTITY(_GLF_IDENTITY(47.82, float(vec4(47.82, 0.0, 1.0, 1.0))), (47.82) * abs(1.0)), _GLF_IDENTITY(47.82, max(_GLF_IDENTITY(47.82, (_GLF_IDENTITY(47.82, 1.0 * (47.82))) * 1.0), 47.82)))), 47.82))), bool(true)))));
          ivec3 _GLF_SWITCH_0_16v, _GLF_SWITCH_0_17v;
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             return;
            return;
           }
          vec3(719.662, 627.747, -4.3);
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           return;
          injectionSwitch;
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           return;
          ivec2 _GLF_SWITCH_0_18v[54], _GLF_SWITCH_0_19v, _GLF_SWITCH_0_20v[66];
          if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), ! (! (false)))))
           return;
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           return;
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           return;
          bvec3 _GLF_SWITCH_0_21v;
          mat2 _GLF_SWITCH_0_22v[46], _GLF_SWITCH_0_23v[10];
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           return;
         }
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         return;
        {
         mat3x4 _GLF_SWITCH_0_24v;
         mat4x2 _GLF_SWITCH_0_25v, _GLF_SWITCH_0_26v;
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, abs(0.0))), float(vec3(float(vec3(injectionSwitch.y, 0.0, abs(0.0))), 1.0, 0.0))))))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          return;
         ivec4 _GLF_SWITCH_0_27v;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
        }
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         return;
        ((mat4x3(-0.5, 3.3, 16.23, -978.451, _GLF_IDENTITY(-8070.2084, max(_GLF_IDENTITY(-8070.2084, (true ? -8070.2084 : _GLF_FUZZED(7.4))), -8070.2084)), -2.2, 6065.1132, _GLF_IDENTITY(-551.883, min(-551.883, -551.883)), -1259.1313, -6.7, -8822.6485, -99.92) - mat4x3(-29.80, -39.24, 854.563, -456.414, -513.168, -714.600, 8.1, 2.0, 74.04, 19.40, -9.4, -11.74)) + 50.83);
        (ivec2(-43999, -54777) | -88702);
        if(_GLF_DEAD(false))
         return;
        mat4x3(-77.00, 1.8, 5063.6185, 6.0, _GLF_IDENTITY(-7.1, (-7.1) / 1.0), -120.170, -730.171, 564.847, -8.1, 44.12, -3443.8040, _GLF_IDENTITY(5307.5020, (5307.5020) - 0.0));
        {
         mat2x4(24.39);
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), true && (_GLF_DEAD(false))))
          return;
         uvec4 _GLF_SWITCH_0_28v[15], _GLF_SWITCH_0_29v[43], _GLF_SWITCH_0_30v;
         ivec2 _GLF_SWITCH_0_31v, _GLF_SWITCH_0_32v;
         subgroup_size;
         uint _GLF_SWITCH_0_33v[65], _GLF_SWITCH_0_34v;
         _GLF_SWITCH_0_32v;
         if(_GLF_DEAD(false))
          return;
        }
        if(_GLF_DEAD(false))
         return;
        if(isinf(_GLF_IDENTITY(-21.91, clamp(_GLF_IDENTITY(-21.91, max(_GLF_IDENTITY(-21.91, 0.0 + (-21.91)), -21.91)), -21.91, _GLF_IDENTITY(-21.91, _GLF_IDENTITY(_GLF_IDENTITY((true ? -21.91 : _GLF_FUZZED(6.4)), max((true ? -21.91 : _GLF_FUZZED(6.4)), _GLF_IDENTITY((true ? -21.91 : _GLF_FUZZED(6.4)), max((true ? -21.91 : _GLF_FUZZED(6.4)), (true ? -21.91 : _GLF_FUZZED(6.4)))))), clamp((true ? -21.91 : _GLF_FUZZED(6.4)), (true ? -21.91 : _GLF_FUZZED(6.4)), (true ? -21.91 : _GLF_FUZZED(6.4)))))))))
         {
          if(_GLF_DEAD(false))
           return;
          switch(_GLF_SWITCH((0 | _GLF_IDENTITY(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, clamp(0, 0, 0)))), max(0, 0)))))
           {
            case 77:
            (mat4x2(212.574, 0.1, -4541.5354, 69.28, 1.5, 1936.6607, -1520.7116, 6.0) - mat4x2(807.320, 8.1, -214.867, -20.61, 7.4, _GLF_IDENTITY(-58.81, min(_GLF_IDENTITY(-58.81, clamp(-58.81, -58.81, -58.81)), -58.81)), -3653.3998, 381.902));
            if(_GLF_DEAD(false))
             return;
            if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) && true))
             return;
            case 68:
            vec3 _GLF_SWITCH_2_0v[68], _GLF_SWITCH_2_1v;
            if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
             return;
            case 0:
            case 1:
            case 17:
            _GLF_IDENTITY(uvec3(_GLF_IDENTITY(69293u, min(69293u, 69293u)), _GLF_IDENTITY(83960u, max(83960u, 83960u)), 66931u)[1], max(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(69293u, ~ (~ (69293u))), 83960u, 66931u)[1], (_GLF_IDENTITY(uvec3(69293u, 83960u, 66931u), uvec3(uvec3(uvec3(_GLF_IDENTITY(69293u, 0u | (69293u)), 83960u, 66931u))))[1]) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec3(_GLF_IDENTITY(69293u, (_GLF_IDENTITY(69293u, (69293u) / _GLF_IDENTITY(1u, uint(uint(1u))))) | (69293u)), 83960u, 66931u)[1]));
            if(_GLF_DEAD(false))
             return;
            ivec3 _GLF_SWITCH_0_35v[67], _GLF_SWITCH_0_36v;
            if(_GLF_DEAD(false))
             return;
            mat3x2 _GLF_SWITCH_0_37v, _GLF_SWITCH_0_38v, _GLF_SWITCH_0_39v;
            if(_GLF_DEAD(false))
             return;
            case 28:
            ivec4 _GLF_SWITCH_0_40v, _GLF_SWITCH_0_41v;
            case 86:
            if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
             {
              if(_GLF_DEAD(false))
               return;
              return;
             }
            case 56:
            _GLF_IDENTITY((_GLF_IDENTITY(sign(ivec2(40088, 26245)), clamp(sign(ivec2(40088, 26245)), sign(ivec2(40088, 26245)), sign(ivec2(40088, 26245)))) * 53208), ((sign(ivec2(_GLF_IDENTITY(40088, 0 ^ (40088)), 26245)) * 53208)) ^ ivec2(0, 0));
            if(_GLF_DEAD(false))
             return;
            case 52:
            if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec4((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), true, true, false)))))))))
             return;
            if(_GLF_DEAD(false))
             return;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             return;
            if(_GLF_DEAD(false))
             return;
            case 18:
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             return;
            if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)), false || (bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))))))), true)))))))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) : injectionSwitch)).x > injectionSwitch.y))))))
             {
              if(_GLF_DEAD(false))
               return;
              return;
             }
            subgroup_size;
            if(_GLF_DEAD(false))
             return;
            case 26:
            uvec3(133096u, 196152u, 15131u);
            vec3(29.07, -8.5, -908.647);
            if(_GLF_DEAD(false))
             return;
            break;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             return;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 0.0, 0.0, 0.0, 0.0)), (vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 0.0, 0.0, 0.0, 0.0))) / vec2(1.0, 1.0))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))) - vec2(0.0, 0.0)) : _GLF_IDENTITY(_GLF_FUZZED(vec2(6939.7553, 28.23)), (_GLF_FUZZED(vec2(6939.7553, 28.23))) + vec2(0.0, 0.0)))))), (true ? vec2(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), max(_GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), clamp((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0), (injectionSwitch) * vec2(1.0, 1.0), _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-6942.4219), _GLF_FUZZED(5074.5971)), clamp(vec2(_GLF_FUZZED(-6942.4219), _GLF_FUZZED(5074.5971)), _GLF_IDENTITY(vec2(_GLF_FUZZED(-6942.4219), _GLF_FUZZED(5074.5971)), max(vec2(_GLF_FUZZED(-6942.4219), _GLF_FUZZED(5074.5971)), vec2(_GLF_FUZZED(-6942.4219), _GLF_FUZZED(5074.5971)))), vec2(_GLF_FUZZED(-6942.4219), _GLF_FUZZED(5074.5971)))), vec2(((injectionSwitch) * vec2(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-23.53)), float(1.0), bool(true)))) / 1.0)))[0], ((injectionSwitch) * vec2(1.0, 1.0))[1]), bvec2(true, true))))), (injectionSwitch) * vec2(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))))), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))) - vec2(0.0, 0.0)) : _GLF_FUZZED(vec2(6939.7553, 28.23)))))) : _GLF_FUZZED(injectionSwitch)))))), vec2(1.0, 1.0) * (injectionSwitch)).y))))
             {
              if(_GLF_DEAD(false))
               return;
              return;
             }
            default:
            if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), false || (bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))))
             {
              if(_GLF_DEAD(false))
               return;
              if(_GLF_DEAD(false))
               return;
              return;
             }
            if(_GLF_DEAD(false))
             return;
            1;
           }
         }
       }
      while(all(_GLF_IDENTITY(bvec3(true, true, _GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bool(true && (false)))))), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(true, true, false))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(true, true, false))), bvec3(bvec3(bvec3(bvec3(bvec3(true, true, false))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(true, true, false))), bvec3(bvec3(bvec3(bvec3(bvec3(true, true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, true))), false, true, true)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, true))), false, true, true)), true))))))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bvec3(bvec3(bvec3(bvec3(bvec3(true, true, false)))))))))), true))))), bvec3(bvec3(bvec3(bvec3(bvec3(true, true, false)))))))))
       {
        if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && _GLF_IDENTITY(true, _GLF_IDENTITY(! _GLF_IDENTITY((! (true)), ((! (true))) && true), (! (! (true))) || false))))))
         break;
        true;
        if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), (injectionSwitch.x > injectionSwitch.y))))
         continue;
        if(_GLF_DEAD(false))
         {
          if(_GLF_DEAD(false))
           continue;
          if(_GLF_DEAD(false))
           break;
          return;
         }
        while(true)
         {
          bvec4 _GLF_SWITCH_0_42v, _GLF_SWITCH_0_43v, _GLF_SWITCH_0_44v[24];
          ivec3(-95672, _GLF_IDENTITY(32159, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(32159, (32159) ^ 0), 0, 1), ivec3(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(32159, (32159) ^ 0), 0, 1), _GLF_IDENTITY((ivec3(_GLF_IDENTITY(32159, (32159) ^ 0), 0, 1)), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(ivec4((ivec3(_GLF_IDENTITY(32159, (32159) ^ _GLF_IDENTITY(0, min(0, 0))), 0, 1)), 1), ~ (~ (ivec4((ivec3(_GLF_IDENTITY(32159, (32159) ^ 0), 0, 1)), 1))))), (false ? _GLF_FUZZED(ivec3(-76702, 84047, 5235)) : ivec3(_GLF_IDENTITY(ivec4((ivec3(_GLF_IDENTITY(32159, (32159) ^ 0), 0, 1)), 1), ~ (~ (ivec4((ivec3(_GLF_IDENTITY(32159, (32159) ^ 0), 0, 1)), 1)))))))) + ivec3(0, 0, 0))), (ivec3(0, 0, 0) ^ ivec3(0, 0, 0)) | (ivec3(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(32159, (32159) ^ 0), 0, 1), (ivec3(_GLF_IDENTITY(32159, (32159) ^ _GLF_IDENTITY(0, (false ? _GLF_FUZZED(89033) : 0))), 0, 1)) + ivec3(0, 0, 0)))))))), 0 ^ (int(ivec3(_GLF_IDENTITY(32159, _GLF_IDENTITY((32159), min((32159), (_GLF_IDENTITY(32159, min(32159, 32159))))) ^ 0), 0, 1))))), 93125);
         }
        if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
         continue;
        uvec3 _GLF_SWITCH_0_45v;
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         return;
        ivec4(-4084, -12190, -8846, 69435);
        if(((~ uvec2(199446u, 183570u)) != max(_GLF_IDENTITY(uvec2(59880u, 20762u), min(uvec2(59880u, 20762u), _GLF_IDENTITY(uvec2(59880u, 20762u), clamp(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(59880u, (59880u) / uint(_GLF_ONE(1.0, injectionSwitch.y))), 20762u), min(uvec2(59880u, 20762u), uvec2(59880u, 20762u))), uvec2(59880u, 20762u), uvec2(59880u, 20762u))))), uvec2(145772u, 79512u))))
         {
         }
        if(_GLF_DEAD(false))
         {
          if(_GLF_DEAD(false))
           return;
          if(_GLF_DEAD(false))
           break;
          continue;
         }
        mat2(-363.652, _GLF_IDENTITY(499.259, clamp(499.259, 499.259, 499.259)), -3.9, 70.12);
        _GLF_IDENTITY(false, (false) && true);
        bitfieldReverse(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_local_id)));
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         continue;
        {
         vec3 _GLF_SWITCH_0_46v, _GLF_SWITCH_0_47v[91], _GLF_SWITCH_0_48v;
         ;
         if(_GLF_DEAD(false))
          break;
         vec2 _GLF_SWITCH_0_49v, _GLF_SWITCH_0_50v;
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(319.283, (_GLF_IDENTITY(319.283, (false ? _GLF_FUZZED(-7753.3280) : 319.283))) - 0.0)))) > injectionSwitch.y))))
          continue;
         if(_GLF_DEAD(false))
          continue;
         vec4 _GLF_SWITCH_0_51v, _GLF_SWITCH_0_52v[49];
         if(_GLF_DEAD(false))
          return;
        }
       }
      if(_GLF_DEAD(false))
       return;
      if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))))))
       return;
      if(_GLF_DEAD(false))
       {
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         return;
        return;
       }
      mat4x3(mat4x2(-2250.6490, _GLF_IDENTITY(36.03, min(36.03, 36.03)), 8897.6448, -1.9, 8.8, -5.1, 92.99, -444.718));
      if(_GLF_DEAD(false))
       return;
      ivec3 _GLF_SWITCH_0_53v, _GLF_SWITCH_0_54v[57];
      (uvec3(118206u, 7822u, _GLF_IDENTITY(72997u, (72997u) >> 0u)) / uvec3(190467u, 38678u, 30711u));
      if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-6391.6693, min(_GLF_IDENTITY(-6391.6693, max(_GLF_IDENTITY(-6391.6693, (-6391.6693) * 1.0), -6391.6693)), -6391.6693))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(92.25)), _GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, bool(bool(false)))))))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
       return;
      if(_GLF_DEAD(false))
       {
        if(_GLF_DEAD(false))
         return;
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         return;
        return;
        if(_GLF_DEAD(false))
         return;
       }
      {
       if(_GLF_DEAD(false))
        return;
       switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(2), int(2)))))
        {
         case 0:
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         case 38:
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         case 10:
         case 22:
         case 45:
         float _GLF_SWITCH_0_55v;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         break;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         default:
         1;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
      }
      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
       return;
     }
     case 0:
     case 19:
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     case 59:
     case 13:
     case 62:
     if(_GLF_DEAD(false))
      return;
     case 6:
     if(_GLF_DEAD(false))
      return;
     case 34:
     case 24:
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     case 96:
     case 45:
     atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (_GLF_IDENTITY(next_virtual_gid, 0u | (next_virtual_gid))))], uint(2), 4, 64, 4);
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     break;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     case 23:
     ;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     default:
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     1;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8.6)), float(injectionSwitch.x), bool(true)))))))
    {
     case 71:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     {
      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
       return;
      while(true)
       {
        if(_GLF_DEAD(false))
         continue;
        if(_GLF_DEAD(false))
         {
          if(_GLF_DEAD(false))
           return;
          return;
         }
        if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y))))
         continue;
        if(_GLF_DEAD(false))
         return;
        bvec4(false, true, true, false);
        (true ? vec4(9733.9567, 3.3, _GLF_IDENTITY(29.73, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 29.73 : _GLF_FUZZED(-7886.6970))), 341.308) : vec4(-92.96, -758.966, 8.1, _GLF_IDENTITY(-3754.8572, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-4.6), max(_GLF_IDENTITY(_GLF_FUZZED(-4.6), (_GLF_FUZZED(-4.6)) / determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))), _GLF_FUZZED(-4.6)))), float(-3754.8572), bool(true)))));
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         break;
        if(_GLF_DEAD(false))
         break;
        {
         _GLF_IDENTITY(_GLF_IDENTITY(mat3(21.72, 3716.2707, 25.24, -4729.9844, -49.05, -676.248, 3.5, 77.08, 1551.3127), _GLF_IDENTITY(mat3(mat3(mat3(21.72, 3716.2707, 25.24, -4729.9844, -49.05, -676.248, 3.5, 77.08, 1551.3127))), (mat3(mat3(mat3(21.72, 3716.2707, 25.24, -4729.9844, -49.05, -676.248, 3.5, 77.08, 1551.3127)))) * mat3(1.0))), _GLF_IDENTITY(mat3(_GLF_IDENTITY(mat3(mat3(21.72, 3716.2707, 25.24, -4729.9844, -49.05, -676.248, 3.5, 77.08, 1551.3127)), (true ? mat3(mat3(21.72, 3716.2707, 25.24, -4729.9844, -49.05, -676.248, 3.5, 77.08, 1551.3127)) : _GLF_FUZZED(mat3(mat3x2(-2830.4892, 28.49, -245.828, 754.703, -2.1, -40.57)))))), transpose(transpose(mat3(mat3(_GLF_IDENTITY(mat3(21.72, 3716.2707, 25.24, -4729.9844, -49.05, -676.248, 3.5, 77.08, 1551.3127), transpose(transpose(mat3(21.72, 3716.2707, 25.24, -4729.9844, -49.05, -676.248, _GLF_IDENTITY(3.5, max(_GLF_IDENTITY(3.5, (false ? _GLF_FUZZED(1.9) : 3.5)), 3.5)), 77.08, 1551.3127))))))))));
         if(_GLF_DEAD(false))
          continue;
         ;
         vec3 _GLF_SWITCH_1_0v, _GLF_SWITCH_1_1v[62];
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         (- mat4x2(9689.1962, -76.51, -0.4, 99.34, -854.946, 4.8, 7.6, -909.554));
         mat3x4 _GLF_SWITCH_1_2v;
         bvec2 _GLF_SWITCH_1_3v[68];
         mat4 _GLF_SWITCH_1_4v[27], _GLF_SWITCH_1_5v;
         ivec4(_GLF_IDENTITY(-13636, _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(22559), ~ (~ (_GLF_FUZZED(22559)))) : -13636), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(22559), ~ (~ (_GLF_FUZZED(22559)))) : -13636)) | 0)), 63878, -11417, 39626);
         uvec2 _GLF_SWITCH_1_6v, _GLF_SWITCH_1_7v;
         if(_GLF_DEAD(false))
          return;
        }
        if(_GLF_DEAD(false))
         continue;
        float _GLF_SWITCH_1_8v[3], _GLF_SWITCH_1_9v[81];
        while(true)
         {
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           {
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               continue;
              return;
             }
            break;
           }
          if(_GLF_DEAD(false))
           continue;
          if(_GLF_DEAD(false))
           return;
          (_GLF_IDENTITY(uvec4(101390u, 98850u, 76407u, 20120u), (uvec4(101390u, 98850u, 76407u, 20120u)) | uvec4(0u, 0u, 0u, 0u)) << workgroup_base);
          bitCount(-16367);
          ivec4(71588, 58062, 44601, 16614);
          _GLF_IDENTITY(ivec2(-46180, -30911), (true ? _GLF_IDENTITY(ivec2(-46180, -30911), (_GLF_IDENTITY(ivec2(-46180, _GLF_IDENTITY(-30911, (-30911) | (_GLF_IDENTITY(-30911, 0 ^ (-30911))))), (ivec2(-46180, -30911)) >> ivec2(0, 0))) / ivec2(1, 1)) : _GLF_FUZZED(ivec2(48874, -94408))));
          if(_GLF_DEAD(false))
           break;
          if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
           continue;
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             return;
            continue;
            if(_GLF_DEAD(false))
             return;
           }
          if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
           return;
          if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false))), (false) && _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, false, false, false)), ! (! _GLF_IDENTITY((bool(bvec4(true, false, false, false))), false || ((bool(bvec4(true, false, false, false))))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)) / 1.0))) || _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(true, false, _GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))) || false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))) || false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))) || false)), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))) || false)), false))))))) && true)))), false)), ! (! _GLF_IDENTITY((bool(bvec4(true, false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))), bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))), false))))), false))), bool(bvec4((bool(bvec4(true, false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))))), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))), ((_GLF_IDENTITY(bool(bvec4(true, false, _GLF_IDENTITY(false, bool(bvec3(false, false, false))), false)), ! (! (bool(bvec4(true, false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))))), false))))))) && true))))))
           {
            if(_GLF_DEAD(false))
             continue;
            break;
           }
          if(_GLF_DEAD(false))
           break;
          uvec4 _GLF_SWITCH_1_10v;
          bool _GLF_SWITCH_1_11v, _GLF_SWITCH_1_12v, _GLF_SWITCH_1_13v;
          mat2x3(6.8, -354.230, -3528.2716, -762.626, -8.8, -2.4);
          mat3x4 _GLF_SWITCH_1_14v[78];
          if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false)))))
           break;
          if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
           return;
         }
        int _GLF_SWITCH_1_15v, _GLF_SWITCH_1_16v, _GLF_SWITCH_1_17v;
        if((mat4(1191.1777, _GLF_IDENTITY(-43.82, mix(float(-43.82), float(_GLF_FUZZED(-376.318)), bool(false))), 8.7, -364.440, _GLF_IDENTITY(-1080.1834, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -1080.1834 : _GLF_FUZZED(4.3))), -417.343, -30.01, -439.440, -315.093, _GLF_IDENTITY(-869.780, round(length(normalize(vec3(1.0, 1.0, 1.0)))) * (_GLF_IDENTITY(-869.780, min(-869.780, _GLF_IDENTITY(-869.780, max(-869.780, _GLF_IDENTITY(-869.780, mix(float(_GLF_FUZZED(_GLF_IDENTITY(43.48, (_GLF_IDENTITY(43.48, (_GLF_IDENTITY(43.48, max(43.48, 43.48))) - 0.0)) * 1.0))), _GLF_IDENTITY(float(-869.780), clamp(float(-869.780), _GLF_IDENTITY(float(-869.780), 0.0 + (_GLF_IDENTITY(float(-869.780), (true ? float(-869.780) : _GLF_FUZZED(7.3))))), _GLF_IDENTITY(float(-869.780), max(float(-869.780), _GLF_IDENTITY(float(-869.780), 0.0 + (float(-869.780))))))), bool(true))))))))), 76.17, _GLF_IDENTITY(_GLF_IDENTITY(316.237, max(316.237, 316.237)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(316.237, max(316.237, 316.237)), (true ? _GLF_IDENTITY(316.237, max(_GLF_IDENTITY(316.237, (316.237) * 1.0), 316.237)) : _GLF_FUZZED(5.8))), max(_GLF_IDENTITY(_GLF_IDENTITY(316.237, max(316.237, 316.237)), (true ? _GLF_IDENTITY(316.237, max(_GLF_IDENTITY(316.237, (316.237) * 1.0), 316.237)) : _GLF_FUZZED(5.8))), _GLF_IDENTITY(_GLF_IDENTITY(316.237, max(316.237, 316.237)), (true ? _GLF_IDENTITY(316.237, max(_GLF_IDENTITY(316.237, (316.237) * 1.0), 316.237)) : _GLF_FUZZED(5.8)))))) - sin(0.0)), 0.0, -444.256, 4.9, -1360.7229) != mat4(-38.17, 6.0, 5.1, -78.04, _GLF_IDENTITY(_GLF_IDENTITY(-8.3, (-8.3) * 1.0), float(vec4(-8.3, 0.0, 1.0, 1.0))), -76.09, 381.108, 44.48, -59.60, 0.9, -2412.5871, -0.3, -5.7, _GLF_IDENTITY(-355.885, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(-355.885, _GLF_IDENTITY(float(mat3x2(-355.885, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(1.8))))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0)), clamp(float(mat2x3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0)), float(mat2x3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0)), float(mat2x3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0))))), 0.0, log(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), (true ? min(1.0, 1.0) : _GLF_FUZZED(-6.4)))), clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), (true ? min(1.0, 1.0) : _GLF_FUZZED(-6.4)))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), (true ? min(1.0, 1.0) : _GLF_FUZZED(-6.4)))), mix(float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), (true ? min(1.0, 1.0) : _GLF_FUZZED(-6.4))))), float(_GLF_FUZZED(352.049)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), (true ? min(1.0, 1.0) : _GLF_FUZZED(-6.4)))), clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), (true ? min(1.0, 1.0) : _GLF_FUZZED(-6.4)))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), (true ? min(1.0, 1.0) : _GLF_FUZZED(-6.4)))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), (true ? min(1.0, 1.0) : _GLF_FUZZED(-6.4)))))))), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + sqrt(0.0))), transpose(transpose(mat3x2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)), 0.0, 1.0, 0.0, 1.0, 1.0)))))))))), 0.0, 1.0)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(float(mat3x2(-355.885, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(1.8))))), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0)), 1.0, 0.0)), clamp(float(mat2x3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) * 1.0)), float(_GLF_FUZZED(6.6)), bool(false))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(7371.2547)))) / 1.0))), 0.0, 0.0, 1.0, 0.0)), mix(float(float(mat2x3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) * 1.0)), float(_GLF_FUZZED(6.6)), bool(false))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(7371.2547)))) / 1.0))), 0.0, 0.0, 1.0, 0.0))), float(_GLF_FUZZED(-6694.5249)), bool(false))), float(mat2x3(1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0))))), 0.0, log(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), (true ? min(1.0, 1.0) : _GLF_FUZZED(-6.4)))), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + sqrt(0.0))), transpose(transpose(mat3x2(1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))))))))), 0.0, 1.0)), (false ? _GLF_FUZZED(6.3) : float(mat3x2(-355.885, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(1.8))))), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0)), 1.0, 0.0)), clamp(float(mat2x3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) * 1.0)), float(_GLF_FUZZED(6.6)), bool(false))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(7371.2547)))) / 1.0))), 0.0, 0.0, 1.0, 0.0)), mix(float(float(mat2x3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) * 1.0)), float(_GLF_FUZZED(6.6)), bool(false))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(7371.2547)))) / 1.0))), 0.0, 0.0, 1.0, 0.0))), float(_GLF_FUZZED(-6694.5249)), bool(false))), float(mat2x3(1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0))))), 0.0, log(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), (true ? min(1.0, 1.0) : _GLF_FUZZED(-6.4)))), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + sqrt(0.0))), transpose(transpose(mat3x2(1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))))))))), 0.0, 1.0)))), clamp(float(mat3x2(-355.885, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(239.161))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(1.8))))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0)), clamp(float(mat2x3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0)), float(mat2x3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0)), float(mat2x3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0))))), 0.0, log(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), (true ? min(1.0, 1.0) : _GLF_FUZZED(-6.4)))), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(4.4) : 1.0)), _GLF_IDENTITY(1.0, (1.0) + sqrt(0.0))), transpose(transpose(mat3x2(1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))))))))), 0.0, 1.0)), float(mat3x2(-355.885, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(1.8))))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0)), clamp(float(mat2x3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0)), float(mat2x3(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-1.6)), float(1.0), bool(true))), 0.0, 0.0, 1.0, 0.0)), float(mat2x3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0))))), 0.0, log(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8783.1861) : 1.0)), 1.0)), 1.0))), (true ? min(1.0, 1.0) : _GLF_FUZZED(-6.4)))), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + sqrt(0.0))), transpose(transpose(mat3x2(1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))))))))), 0.0, 1.0)), float(mat3x2(-355.885, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)) ? 0.0 : _GLF_FUZZED(1.8))))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0)), clamp(float(mat2x3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0)), float(mat2x3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0)), float(mat2x3(1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0))))), 0.0, log(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(min(1.0, 1.0), mix(float(min(1.0, 1.0)), float(_GLF_FUZZED(932.293)), bool(false))), (true ? min(1.0, 1.0) : _GLF_FUZZED(-6.4)))), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + sqrt(0.0))), transpose(transpose(mat3x2(1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0))), 1.0)))))))))), 0.0, 1.0))))), min((_GLF_IDENTITY(float(mat3x2(-355.885, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(1.8))))), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), ((0.0)) / 1.0) / 1.0), 0.0, 0.0)), 1.0, 0.0)), clamp(float(mat2x3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0)), float(mat2x3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 0.0)), float(mat2x3(1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0))))), 0.0, log(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-3.9) : 1.0))) + 0.0)), (true ? min(1.0, 1.0) : _GLF_FUZZED(-6.4)))), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + sqrt(0.0))), transpose(transpose(mat3x2(1.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0))) * (_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x2(1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, 0.0)), max(float(mat4x2(1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, 0.0)), float(mat4x2(1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, 0.0))))))), 0.0, 1.0, 1.0)))))))))), 0.0, 1.0)), clamp(float(mat3x2(-355.885, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(1.8))))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0)), clamp(float(mat2x3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0)), float(mat2x3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0)), float(mat2x3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0))))), 0.0, log(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), (true ? min(1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))) : _GLF_FUZZED(-6.4)))), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + sqrt(0.0))), transpose(transpose(mat3x2(1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))))))))), 0.0, 1.0)), float(mat3x2(-355.885, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(1.8))))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0)), clamp(float(mat2x3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0)), float(mat2x3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0)), float(mat2x3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0))))), 0.0, log(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), (true ? min(1.0, 1.0) : _GLF_FUZZED(-6.4)))), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + sqrt(0.0))), transpose(transpose(mat3x2(1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))))))))), 0.0, 1.0)), float(mat3x2(-355.885, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(4.1)), float(1.0), bool(true))), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)) ? 0.0 : _GLF_FUZZED(1.8))))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0)), clamp(float(mat2x3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0)), float(mat2x3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0)), float(mat2x3(1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0))))), 0.0, log(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(min(1.0, 1.0), mix(float(min(1.0, 1.0)), float(_GLF_FUZZED(932.293)), bool(false))), (true ? min(1.0, 1.0) : _GLF_FUZZED(-6.4)))), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + sqrt(0.0))), transpose(transpose(mat3x2(1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))))))))), 0.0, 1.0))))), (_GLF_IDENTITY(float(mat3x2(-355.885, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(1.8))))), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 1.0, 0.0)), clamp(float(mat2x3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0)), float(mat2x3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 0.0)), float(mat2x3(1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0))))), 0.0, log(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), (true ? min(1.0, 1.0) : _GLF_FUZZED(-6.4)))), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + sqrt(0.0))), transpose(transpose(mat3x2(1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))))))))), 0.0, 1.0)), clamp(float(mat3x2(-355.885, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(1.8))))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0)), clamp(float(mat2x3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0)), float(mat2x3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0)), float(mat2x3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0))))), 0.0, log(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), (true ? min(1.0, 1.0) : _GLF_FUZZED(-6.4)))), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + sqrt(0.0))), transpose(transpose(mat3x2(1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))))))))), 0.0, 1.0)), float(mat3x2(-355.885, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(1.8))))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0)), clamp(float(mat2x3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0)), float(mat2x3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0)), float(mat2x3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0))))), 0.0, log(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), (true ? min(1.0, 1.0) : _GLF_FUZZED(-6.4)))), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + sqrt(0.0))), transpose(transpose(mat3x2(1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))))))))), 0.0, 1.0)), float(mat3x2(-355.885, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)) ? 0.0 : _GLF_FUZZED(1.8))))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0)), clamp(float(mat2x3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0)), float(mat2x3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0)), float(mat2x3(1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0))))), 0.0, log(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0))) / _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(min(1.0, 1.0), float(vec3(min(1.0, 1.0), 0.0, 1.0))), mix(float(min(1.0, 1.0)), float(_GLF_FUZZED(932.293)), _GLF_IDENTITY(bool(false), (bool(false)) || false))), (true ? min(1.0, 1.0) : _GLF_FUZZED(-6.4)))), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + sqrt(0.0))), transpose(transpose(mat3x2(1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))))))))), 0.0, 1.0))))))) / sqrt(1.0))), 0.0, tan(0.0), 0.0, sqrt(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0), mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x3(_GLF_IDENTITY(-355.885, float(mat3x2(-355.885, 1.0, 0.0, log(1.0), 0.0, 1.0))), 0.0, tan(0.0), 0.0, sqrt(0.0), 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - sin(0.0))), float(_GLF_FUZZED(float(true))), bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))), 1.0, 0.0))))), _GLF_IDENTITY(4289.8912, (_GLF_IDENTITY(4289.8912, min(4289.8912, 4289.8912))) + sqrt(0.0)), 0.8)))
         {
          switch(_GLF_SWITCH(0))
           {
            case 61:
            uvec2(72327u, 16140u);
            case 0:
            if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true)))))
             return;
            if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
             break;
            case 19:
            case 58:
            ivec2 _GLF_SWITCH_1_18v, _GLF_SWITCH_1_19v;
            -4403.3587;
            case 14:
            case 99:
            case 33:
            bvec2 _GLF_SWITCH_1_20v[71];
            break;
            if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
             {
              if(_GLF_DEAD(false))
               continue;
              return;
             }
            case 28:
            uvec3 _GLF_SWITCH_4_0v[24];
            default:
            1;
           }
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             return;
            break;
           }
         }
        mat2x3(462.176, _GLF_IDENTITY(581.186, mix(float(_GLF_FUZZED(float(66350u))), float(581.186), bool(true))), -9895.4074, -45.12, _GLF_IDENTITY(_GLF_IDENTITY(-4.7, mix(float(_GLF_IDENTITY(-4.7, (_GLF_IDENTITY(_GLF_IDENTITY(-4.7, _GLF_IDENTITY((-4.7) - 0.0, min((-4.7) - 0.0, (-4.7) - 0.0))), (false ? _GLF_FUZZED(-95.71) : -4.7))) - _GLF_IDENTITY(sin(0.0), max(sin(0.0), sin(0.0))))), float(_GLF_FUZZED(29.22)), bool(false))), (true ? _GLF_IDENTITY(-4.7, mix(float(_GLF_IDENTITY(-4.7, (_GLF_IDENTITY(_GLF_IDENTITY(-4.7, _GLF_IDENTITY((-4.7) - 0.0, min((-4.7) - 0.0, (-4.7) - 0.0))), (false ? _GLF_FUZZED(-95.71) : -4.7))) - _GLF_IDENTITY(sin(0.0), max(_GLF_IDENTITY(sin(0.0), (sin(0.0)) - 0.0), sin(0.0))))), float(_GLF_FUZZED(29.22)), bool(false))) : _GLF_FUZZED((-95.34 - 52.90)))), -1.4);
        ivec3(-28463, -79997, 78106);
        if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
         return;
       }
      if(((_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base))))), workgroup_base, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), ((workgroup_base)) << 0u) + 0u))) << num_workgroup) >= subgroup_local_id))
       {
       }
      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
       {
        if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
         return;
        return;
       }
      for(mat2x3 _GLF_SWITCH_1_21v; false; uvec3(179987u, 44657u, 97589u))
       {
        switch(_GLF_SWITCH(0))
         {
          case 98:
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           break;
          max(uvec4(184986u, 65665u, 145362u, 143786u), uvec4(127269u, 122521u, 160441u, 156033u));
          if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
           return;
          case 37:
          if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
           continue;
          subgroup_local_id;
          if(_GLF_DEAD(false))
           return;
          case 0:
          case 42:
          case 8:
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec3(! ((false)), false, false))))))) && true))))))))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              break;
             continue;
            }
          }
          if(_GLF_DEAD(false))
           continue;
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
             break;
            continue;
           }
          if(_GLF_DEAD(false))
           continue;
          case 59:
          case 84:
          if(_GLF_DEAD(false))
           break;
          {
           if(_GLF_DEAD(false))
            break;
          }
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           continue;
          case 70:
          if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), clamp(vec2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), vec2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), vec2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))))).x > injectionSwitch.y))))
           return;
          vec4 _GLF_SWITCH_1_22v[49];
          case 7:
          mat3(1296.1402, 4.6, -0.3, -376.654, -883.514, -8.8, 2184.2920, 89.86, _GLF_IDENTITY(5.9, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(5.9, (5.9) * 1.0), max(_GLF_IDENTITY(5.9, (5.9) * 1.0), _GLF_IDENTITY(5.9, (5.9) * 1.0)))), float(_GLF_FUZZED(-68.43)), bool(false))));
          if(_GLF_DEAD(false))
           return;
          if(_GLF_DEAD(false))
           continue;
          findLSB(ivec3(ivec2(-16198, 33590), 89332));
          if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))
           break;
          break;
          if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), true, true)), _GLF_IDENTITY((bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), true, true))), bool(bvec3((bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), true, true))), false, true))) || false)), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), true, true)), _GLF_IDENTITY((bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), true, true))), bool(bvec3((bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), true, true))), false, true))) || false)))))
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7.4)), bool(false))) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4114.5796), _GLF_FUZZED(227.323)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], float(mat4((injectionSwitch)[1], round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0, 0.0, 1.0, determinant(mat4(cos(0.0), 1.0, sqrt(1.0), 0.0, 0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, tan(0.0), 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, round(length(normalize(1.0))))))), bvec2(true, true))).y))))
             {
              if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
               continue;
              break;
             }
            break;
           }
          if(_GLF_DEAD(false))
           break;
          if(_GLF_DEAD(false))
           return;
          default:
          if(_GLF_DEAD(false))
           return;
          1;
         }
       }
      bvec2(true, false);
      if(_GLF_DEAD(false))
       return;
      _GLF_IDENTITY(mat3(-24.91, 0.0, 7301.3298, 7.9, 970.734, -0.4, -7.5, 9.5, -2.4), transpose(transpose(mat3(-24.91, 0.0, 7301.3298, 7.9, 970.734, -0.4, -7.5, 9.5, -2.4))));
      (mat2x4(-4.2, _GLF_IDENTITY(0.4, mix(float(_GLF_FUZZED(9.9)), float(0.4), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), -5.9, -507.622, -0.1, -354.219, _GLF_IDENTITY(15.74, max(15.74, _GLF_IDENTITY(15.74, (true ? 15.74 : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(1333.4743, clamp(1333.4743, 1333.4743, 1333.4743))), (_GLF_FUZZED(_GLF_IDENTITY(1333.4743, clamp(1333.4743, 1333.4743, 1333.4743)))) * 1.0))))), 77.17) == mat2x4(_GLF_IDENTITY(-63.16, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -63.16 : _GLF_FUZZED(length(vec4(4.4, 7.7, -7.1, -9264.0274))))), -82.75, -72.60, -3.8, -0.1, 77.48, 12.82, 118.418));
      if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
       {
        if(_GLF_DEAD(false))
         return;
        return;
       }
      bvec2 _GLF_SWITCH_1_23v, _GLF_SWITCH_1_24v;
      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
       return;
      ivec2 _GLF_SWITCH_1_25v[80];
      ;
     }
     case 0:
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     case 65:
     case 56:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     case 95:
     case 75:
     if(_GLF_DEAD(false))
      return;
     atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, max(_GLF_IDENTITY(next_virtual_gid, 0u ^ (next_virtual_gid)), next_virtual_gid))], uint(2), 4, 64, 4);
     if(_GLF_DEAD(false))
      return;
     break;
     if(_GLF_DEAD(false))
      return;
     default:
     1;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))), true && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0), mat4x3(mat4x3(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat3x4(1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(4871.4749) : 0.0)), 0.0)), determinant(mat2(_GLF_IDENTITY(determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), float(mat3(determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), 0.0, exp(_GLF_IDENTITY(0.0, (0.0) * _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), 0.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, 1.0)))))))))) - log(1.0)) > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0), mat4x3(mat4x3(mat4x3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, determinant(mat2(determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), 0.0, exp(0.0), 0.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, 1.0)))))))))) - log(1.0)) > injectionSwitch.y), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), (_GLF_IDENTITY(1.0, (1.0) / 1.0)) * 1.0)), float(_GLF_FUZZED(((-7.5) / -7007.9316))), bool(false))))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0), mat4x3(mat4x3(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, determinant(_GLF_IDENTITY(mat2(determinant(mat3(1.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-913.225))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0), (mat2(determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)) / mat2(1.0, 1.0, 1.0, 1.0))), 0.0, exp(0.0), 0.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, 1.0)))))))))) - log(1.0)) > injectionSwitch.y)), true && (bool((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0), mat4x3(mat4x3(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, determinant(mat2(determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), 0.0, exp(0.0), 0.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, 1.0)))))))), clamp(float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0), mat4x3(mat4x3(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, determinant(mat2(determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), 0.0, exp(0.0), 0.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, 1.0)))))))), float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0), mat4x3(mat4x3(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, determinant(mat2(determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), 0.0, exp(0.0), 0.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, 1.0)))))))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0), mat4x3(mat4x3(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, determinant(mat2(determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), 0.0, exp(0.0), 0.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, 1.0)))))))), float(mat3(float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0), mat4x3(mat4x3(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, determinant(mat2(determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), 0.0, exp(0.0), 0.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, 1.0)))))))), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))))))) - log(1.0)) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0)))) - 0.0)))))))) || false))))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
