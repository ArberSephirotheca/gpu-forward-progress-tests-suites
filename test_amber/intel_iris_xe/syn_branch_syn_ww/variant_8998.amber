#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uvec4 GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idnext_virtual_gidnum_workgroup;
 if(_GLF_DEAD(false))
  barrier();
 uvec2 GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, int(int(0)))); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(2.5)), bool(false)))))))
      barrier();
    }
   _GLF_IDENTITY(GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idnext_virtual_gidnum_workgroup.xy = GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_id, uvec2(0u, 0u) | (_GLF_IDENTITY(GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idnext_virtual_gidnum_workgroup.xy = _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_id, uvec2(0u, 0u) | (GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_id)), (false ? _GLF_FUZZED(uvec2(79113u, 189637u)) : _GLF_IDENTITY(GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idnext_virtual_gidnum_workgroup.xy = GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_id, (GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idnext_virtual_gidnum_workgroup.xy = GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_id) + uvec2(0u, 0u))))));
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat4x2(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat4x2(7.6, -8189.6938, -182.000, -26.62, -1.2, 94.22, 7.3, -3.5))))), min(float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat4x2(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat4x2(7.6, -8189.6938, -182.000, -26.62, -1.2, 94.22, 7.3, -3.5))))), float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat4x2(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat4x2(7.6, -8189.6938, -182.000, -26.62, -1.2, 94.22, 7.3, -3.5)))))))), bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)) : _GLF_FUZZED(2450.0546)))), mat2(mat3(mat2(injectionSwitch, 0.0, 1.0)))))).x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, false || (true)) ? injectionSwitch.x : _GLF_FUZZED((false ? 5941.1620 : 1.8)))) > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(-67.17))) > injectionSwitch.y))))
          barrier();
         for(int _injected_loop_counter = _GLF_IDENTITY(1, clamp(1, 1, 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           barrier();
          }
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, ~ (~ (4)))))))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), clamp(int(4), int(4), _GLF_IDENTITY(int(4), (int(4)) ^ 0)))))); _injected_loop_counter ++)
        {
         barrier();
        }
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y) + 0.0)))))
              {
              }
             else
              {
               barrier();
              }
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-93319))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 barrier();
                }
              }
            }
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 _GLF_IDENTITY(GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idnext_virtual_gidnum_workgroup.w = num_workgroup, (GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idnext_virtual_gidnum_workgroup.w = num_workgroup) ^ 0u);
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < (0 ^ 1)); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), false), true)))))))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)) != 1); _injected_loop_counter ++)
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, bool(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 & _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (1 & 1) * (int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(unpackUnorm2x16(78269u)), vec2(1.0, 1.0) * (_GLF_FUZZED(unpackUnorm2x16(78269u)))) : injectionSwitch)).y))))) & 1)); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter ++)
              {
               barrier();
              }
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idnext_virtual_gidnum_workgroup.xy.x = GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idnext_virtual_gidnum_workgroup.w;
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (true ? _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)) : _GLF_FUZZED(uvec3(174283u, 39846u, 90812u))))) / uvec3(1u, 1u, 1u)).x, _GLF_IDENTITY((gl_WorkGroupSize.x) * 1u, min((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) * uvec3(1u, 1u, 1u))) * ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(1u), uvec3(1u))) >> _GLF_IDENTITY(uvec3(1u), uvec3(1u)))).x) * 1u, (gl_WorkGroupSize.x) * 1u)));
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))), (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true)))
        {
         barrier();
        }
       else
        {
        }
      }
    }
   else
    {
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
  {
   GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idnext_virtual_gidnum_workgroup.xy.y = workgroup_id;
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true) ? _GLF_FUZZED(9.4) : injectionSwitch.y)))), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9.4, max(9.4, 9.4)), (_GLF_IDENTITY(_GLF_IDENTITY(9.4, max(9.4, 9.4)), min(_GLF_IDENTITY(9.4, max(9.4, 9.4)), _GLF_IDENTITY(9.4, max(9.4, 9.4))))) / 1.0)) : injectionSwitch.y)))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, cos(0.0), exp(sqrt(0.0)), 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0))), exp(_GLF_IDENTITY(0.0, (0.0) - 0.0)), sin(0.0)), (mat2(injectionSwitch, exp(0.0), _GLF_IDENTITY(sin(0.0), (sin(0.0)) - 0.0))) * mat2(1.0))), min(vec2(_GLF_IDENTITY(mat2(injectionSwitch, exp(0.0), sin(0.0)), (mat2(injectionSwitch, exp(0.0), sin(0.0))) * mat2(1.0))), vec2(_GLF_IDENTITY(mat2(injectionSwitch, exp(0.0), sin(0.0)), (mat2(injectionSwitch, exp(0.0), sin(0.0))) * mat2(1.0)))))).x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch, exp(0.0), sin(0.0)), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(injectionSwitch, exp(0.0), sin(0.0)))), _GLF_IDENTITY(_GLF_IDENTITY((mat2(injectionSwitch, exp(0.0), sin(0.0))) * mat2(1.0), ((mat2(injectionSwitch, exp(0.0), sin(0.0))) * mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(mat2(mat3(_GLF_IDENTITY((mat2(injectionSwitch, exp(0.0), sin(0.0))) * mat2(1.0), ((mat2(injectionSwitch, exp(0.0), sin(0.0))) * mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)))), transpose(transpose(mat2(mat3(_GLF_IDENTITY((mat2(injectionSwitch, exp(0.0), sin(0.0))) * mat2(1.0), ((mat2(injectionSwitch, exp(0.0), sin(0.0))) * mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)))))))))), min(vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)) * (injectionSwitch)), exp(0.0), sin(0.0)), (mat2(injectionSwitch, exp(0.0), sin(0.0))) * mat2(1.0))), vec2(_GLF_IDENTITY(mat2(injectionSwitch, exp(0.0), sin(0.0)), _GLF_IDENTITY((mat2(injectionSwitch, exp(0.0), sin(0.0))), transpose(transpose(_GLF_IDENTITY((mat2(injectionSwitch, exp(0.0), sin(0.0))), mat2(mat4x3((mat2(injectionSwitch, exp(0.0), sin(0.0))))))))) * mat2(1.0)))))).x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(injectionSwitch, exp(0.0), sin(0.0)), (mat2(injectionSwitch, exp(0.0), sin(0.0))) * mat2(1.0))), min(vec2(_GLF_IDENTITY(mat2(injectionSwitch, exp(0.0), sin(0.0)), (mat2(injectionSwitch, exp(0.0), sin(0.0))) * mat2(1.0))), vec2(_GLF_IDENTITY(mat2(injectionSwitch, exp(0.0), sin(0.0)), (mat2(injectionSwitch, exp(0.0), sin(0.0))) * mat2(1.0)))))).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(injectionSwitch, exp(0.0), sin(0.0)), _GLF_IDENTITY((mat2(injectionSwitch, exp(0.0), sin(0.0))) * mat2(1.0), mat2(_GLF_IDENTITY(mat3((mat2(injectionSwitch, exp(0.0), sin(0.0))) * mat2(1.0)), mat3(mat4(mat3((mat2(injectionSwitch, exp(0.0), sin(0.0))) * mat2(1.0))))))))), min(vec2(_GLF_IDENTITY(mat2(injectionSwitch, exp(0.0), _GLF_IDENTITY(sin(0.0), max(sin(0.0), _GLF_IDENTITY(sin(0.0), mix(float(_GLF_FUZZED(-951.837)), float(sin(0.0)), bool(true)))))), (mat2(injectionSwitch, exp(0.0), sin(0.0))) * mat2(1.0))), vec2(_GLF_IDENTITY(mat2(injectionSwitch, exp(0.0), sin(0.0)), (mat2(injectionSwitch, exp(0.0), sin(0.0))) * mat2(1.0)))))).x > injectionSwitch.y) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(injectionSwitch, exp(0.0), sin(0.0)), (mat2(injectionSwitch, exp(0.0), sin(0.0))) * mat2(1.0))), min(vec2(_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch, exp(0.0), sin(0.0)), (mat2(injectionSwitch, exp(0.0), sin(0.0))) * mat2(1.0)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch, exp(0.0), sin(0.0)), (mat2(injectionSwitch, exp(0.0), sin(0.0))) * mat2(1.0)), transpose(transpose(_GLF_IDENTITY(mat2(injectionSwitch, exp(0.0), sin(0.0)), (mat2(injectionSwitch, exp(0.0), sin(0.0))) * mat2(1.0)))))))), vec2(_GLF_IDENTITY(mat2(injectionSwitch, exp(0.0), sin(0.0)), (mat2(injectionSwitch, _GLF_IDENTITY(exp(0.0), min(exp(0.0), _GLF_IDENTITY(exp(0.0), mix(float(_GLF_FUZZED(8.7)), float(_GLF_IDENTITY(exp(0.0), (exp(0.0)) / 1.0)), bool(true))))), sin(0.0))) * mat2(1.0)))))).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(injectionSwitch, exp(0.0), sin(0.0)), _GLF_IDENTITY((mat2(injectionSwitch, exp(0.0), sin(0.0))) * mat2(1.0), mat2(_GLF_IDENTITY(mat3((mat2(injectionSwitch, exp(0.0), sin(0.0))) * mat2(1.0)), mat3(mat4(mat3((mat2(injectionSwitch, exp(0.0), sin(0.0))) * mat2(1.0))))))))), min(vec2(_GLF_IDENTITY(mat2(injectionSwitch, exp(0.0), _GLF_IDENTITY(sin(0.0), max(sin(0.0), _GLF_IDENTITY(sin(0.0), mix(float(_GLF_FUZZED(-951.837)), float(sin(0.0)), bool(true)))))), (mat2(injectionSwitch, exp(0.0), sin(0.0))) * mat2(1.0))), vec2(_GLF_IDENTITY(mat2(injectionSwitch, exp(0.0), sin(0.0)), (_GLF_IDENTITY(mat2(injectionSwitch, exp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8.0)))), sin(0.0)), (_GLF_IDENTITY(mat2(injectionSwitch, exp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8.0)))), sin(0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat2(injectionSwitch, exp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8.0)))), sin(0.0)) : _GLF_FUZZED(mat2(9.4, -38.77, 4346.2656, -5584.8016))))) / mat2(1.0, 1.0, 1.0, 1.0))) * mat2(1.0)))))).x > injectionSwitch.y) || false))))))))), ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch, exp(0.0), sin(0.0)), mat2(0.0, _GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))), 0.0, 0.0) + (mat2(injectionSwitch, exp(0.0), sin(0.0)))), _GLF_IDENTITY((mat2(injectionSwitch, exp(0.0), sin(0.0))) * mat2(1.0), ((mat2(injectionSwitch, exp(0.0), sin(0.0))) * mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)))), min(vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), exp(0.0), sin(0.0)), (mat2(injectionSwitch, exp(0.0), sin(0.0))) * mat2(1.0))), vec2(_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch, exp(0.0), sin(0.0)), (mat2(injectionSwitch, exp(0.0), sin(0.0))) * mat2(1.0)), (_GLF_IDENTITY(mat2(injectionSwitch, exp(0.0), sin(0.0)), (mat2(injectionSwitch, exp(0.0), sin(0.0))) * mat2(1.0))) - mat2(0.0, 0.0, 0.0, 0.0)))))).x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(injectionSwitch, exp(0.0), sin(0.0)), (mat2(injectionSwitch, exp(0.0), sin(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(1.9)), bool(false)))))) * mat2(1.0))), min(vec2(_GLF_IDENTITY(mat2(injectionSwitch, exp(0.0), sin(0.0)), (_GLF_IDENTITY(mat2(injectionSwitch, exp(0.0), sin(_GLF_IDENTITY(0.0, 1.0 * (0.0)))), (true ? mat2(injectionSwitch, exp(0.0), sin(_GLF_IDENTITY(0.0, 1.0 * (0.0)))) : _GLF_FUZZED(mat2(-6.3, -4.9, 6.0, -6.9))))) * mat2(1.0))), vec2(_GLF_IDENTITY(mat2(injectionSwitch, exp(0.0), sin(0.0)), (mat2(injectionSwitch, exp(0.0), sin(0.0))) * mat2(1.0)))))).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(injectionSwitch, exp(0.0), sin(0.0)), _GLF_IDENTITY((mat2(injectionSwitch, exp(0.0), sin(0.0))) * mat2(1.0), mat2(_GLF_IDENTITY(mat3((mat2(injectionSwitch, exp(0.0), sin(0.0))) * _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0))))), mat3(mat4(mat3((_GLF_IDENTITY(mat2(injectionSwitch, exp(0.0), sin(0.0)), (true ? mat2(injectionSwitch, exp(0.0), sin(0.0)) : _GLF_FUZZED(mat2(-6.7, -2.8, -510.764, 6.6))))) * mat2(1.0))))))))), min(vec2(_GLF_IDENTITY(mat2(injectionSwitch, exp(0.0), _GLF_IDENTITY(sin(0.0), max(sin(0.0), _GLF_IDENTITY(sin(0.0), mix(float(_GLF_FUZZED(-951.837)), float(sin(0.0)), bool(true)))))), (_GLF_IDENTITY(mat2(injectionSwitch, exp(0.0), sin(0.0)), _GLF_IDENTITY(mat2(_GLF_IDENTITY(mat4x2(mat2(injectionSwitch, exp(0.0), sin(0.0))), (mat4x2(mat2(injectionSwitch, exp(0.0), sin(0.0)))) * mat4(1.0))), mat2(mat3x2(mat2(_GLF_IDENTITY(mat4x2(mat2(injectionSwitch, exp(0.0), sin(0.0))), (mat4x2(mat2(injectionSwitch, exp(0.0), sin(0.0)))) * mat4(1.0)))))))) * mat2(1.0))), vec2(_GLF_IDENTITY(mat2(injectionSwitch, _GLF_IDENTITY(exp(0.0), clamp(exp(0.0), exp(0.0), _GLF_IDENTITY(exp(0.0), min(exp(0.0), exp(0.0))))), sin(0.0)), (mat2(injectionSwitch, exp(0.0), sin(0.0))) * mat2(1.0)))))).x > injectionSwitch.y) || false)))))))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, ~ _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u)))) + (workgroup_size))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u)))) + (workgroup_size))) : _GLF_FUZZED(num_workgroup)))), uint(uvec3((~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u)))) + (workgroup_size))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u)))) + (workgroup_size))) : _GLF_FUZZED(num_workgroup)))), 0u, 1u)))) * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idnext_virtual_gidnum_workgroup, (_GLF_IDENTITY(GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idnext_virtual_gidnum_workgroup, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((_GLF_IDENTITY(uvec4(124603u, 20703u, 37402u, 178589u) / (workgroup_size), (_GLF_IDENTITY(uvec4(124603u, 20703u, 37402u, 178589u) / (workgroup_size), (uvec4(124603u, 20703u, 37402u, 178589u) / (workgroup_size)) | (uvec4(124603u, 20703u, 37402u, 178589u) / (workgroup_size)))) | uvec4(0u, 0u, 0u, 0u)))) : _GLF_IDENTITY(GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idnext_virtual_gidnum_workgroup, _GLF_IDENTITY(max(GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idnext_virtual_gidnum_workgroup, GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idnext_virtual_gidnum_workgroup), max(_GLF_IDENTITY(max(GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idnext_virtual_gidnum_workgroup, GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idnext_virtual_gidnum_workgroup), min(max(GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idnext_virtual_gidnum_workgroup, GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idnext_virtual_gidnum_workgroup), max(GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idnext_virtual_gidnum_workgroup, GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idnext_virtual_gidnum_workgroup))), _GLF_IDENTITY(max(GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idnext_virtual_gidnum_workgroup, GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idnext_virtual_gidnum_workgroup), max(max(GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idnext_virtual_gidnum_workgroup, GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idnext_virtual_gidnum_workgroup), max(GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idnext_virtual_gidnum_workgroup, GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idnext_virtual_gidnum_workgroup))))))))) / ((uvec4(1u, _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 1u, 0u))))))), 1u, 1u) << _GLF_IDENTITY(uvec4(3u), uvec4(3u))) >> _GLF_IDENTITY(uvec4(_GLF_IDENTITY(3u, (3u) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uvec4(3u)))).xy.y, max(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idnext_virtual_gidnum_workgroup, (_GLF_IDENTITY(GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idnext_virtual_gidnum_workgroup, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((uvec4(124603u, 20703u, 37402u, 178589u) / (workgroup_size))) : _GLF_IDENTITY(GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idnext_virtual_gidnum_workgroup, max(GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idnext_virtual_gidnum_workgroup, GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idnext_virtual_gidnum_workgroup))))) / ((uvec4(1u, 1u, 1u, 1u) << _GLF_IDENTITY(uvec4(_GLF_IDENTITY(3u, 0u | (_GLF_IDENTITY(3u, (3u) << 0u)))), uvec4(3u))) >> _GLF_IDENTITY(uvec4(3u), uvec4(3u)))).xy.y, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idnext_virtual_gidnum_workgroup, (_GLF_IDENTITY(GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idnext_virtual_gidnum_workgroup, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((uvec4(124603u, 20703u, 37402u, 178589u) / (workgroup_size))) : _GLF_IDENTITY(GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idnext_virtual_gidnum_workgroup, max(GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idnext_virtual_gidnum_workgroup, GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idnext_virtual_gidnum_workgroup))))) / ((uvec4(1u, 1u, 1u, 1u) << _GLF_IDENTITY(uvec4(3u), uvec4(3u))) >> _GLF_IDENTITY(uvec4(3u), uvec4(3u)))), uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idnext_virtual_gidnum_workgroup, (_GLF_IDENTITY(GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idnext_virtual_gidnum_workgroup, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((uvec4(124603u, 20703u, 37402u, 178589u) / (workgroup_size))) : _GLF_IDENTITY(GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idnext_virtual_gidnum_workgroup, max(GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idnext_virtual_gidnum_workgroup, GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idnext_virtual_gidnum_workgroup))))) / ((uvec4(1u, 1u, 1u, 1u) << _GLF_IDENTITY(uvec4(3u), uvec4(3u))) >> _GLF_IDENTITY(uvec4(3u), uvec4(3u)))))).xy.y))), _GLF_IDENTITY(GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idnext_virtual_gidnum_workgroup, (_GLF_IDENTITY(GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idnext_virtual_gidnum_workgroup, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((uvec4(124603u, 20703u, 37402u, 178589u) / (workgroup_size))) : _GLF_IDENTITY(GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idnext_virtual_gidnum_workgroup, max(GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idnext_virtual_gidnum_workgroup, GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idnext_virtual_gidnum_workgroup))))) / (_GLF_IDENTITY((uvec4(1u, 1u, 1u, 1u) << _GLF_IDENTITY(uvec4(3u), uvec4(3u))), ((uvec4(1u, 1u, 1u, 1u) << _GLF_IDENTITY(uvec4(3u), uvec4(3u)))) | _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) ^ uvec4(0u, 0u, 0u, 0u))) >> _GLF_IDENTITY(uvec4(3u), uvec4(3u)))).xy.y)), (_GLF_IDENTITY(GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idnext_virtual_gidnum_workgroup, (GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idnext_virtual_gidnum_workgroup) / (_GLF_IDENTITY(_GLF_IDENTITY((uvec4(1u, 1u, 1u, 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec4(3u), uvec4(3u)), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(3u), uvec4(3u)), uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(uvec4(3u), uvec4(3u))))))) >> _GLF_IDENTITY(uvec4(3u), uvec4(3u)), min((uvec4(1u, 1u, 1u, 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec4(3u), uvec4(3u)), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(3u), uvec4(3u)), uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(uvec4(3u), uvec4(3u))))))) >> _GLF_IDENTITY(uvec4(3u), uvec4(3u)), (uvec4(1u, 1u, 1u, 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec4(3u), uvec4(3u)), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(3u), uvec4(3u)), uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(uvec4(3u), uvec4(3u))))))) >> _GLF_IDENTITY(uvec4(3u), uvec4(3u)))), (false ? _GLF_FUZZED(GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idnext_virtual_gidnum_workgroup) : (uvec4(1u, 1u, 1u, 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec4(3u), uvec4(3u)), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(3u), uvec4(3u)), uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(uvec4(3u), uvec4(3u))))))) >> _GLF_IDENTITY(uvec4(3u), uvec4(3u)))))).xy.y) | (_GLF_IDENTITY(GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idnext_virtual_gidnum_workgroup, (_GLF_IDENTITY(GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idnext_virtual_gidnum_workgroup, clamp(GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idnext_virtual_gidnum_workgroup, GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idnext_virtual_gidnum_workgroup, _GLF_IDENTITY(GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idnext_virtual_gidnum_workgroup, (false ? _GLF_FUZZED(GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idnext_virtual_gidnum_workgroup) : GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idnext_virtual_gidnum_workgroup))))) / (_GLF_IDENTITY((uvec4(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), 1u, 1u, _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, (1u) - 0u)))) << _GLF_IDENTITY(_GLF_IDENTITY(uvec4(3u), (_GLF_IDENTITY(uvec4(3u), uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(uvec4(3u), (uvec4(3u)) | (_GLF_IDENTITY(uvec4(3u), (_GLF_IDENTITY(uvec4(3u), uvec4(0u, 0u, 0u, 0u) | (uvec4(3u)))) ^ uvec4(0u, 0u, 0u, 0u))))))) << uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_id))))), uvec4(3u))), (true ? (uvec4(1u, 1u, _GLF_IDENTITY(1u, (1u) - (0u << _GLF_IDENTITY(uint(5u), uint(5u)))), 1u) << _GLF_IDENTITY(uvec4(3u), uvec4(3u))) : _GLF_FUZZED((GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idnext_virtual_gidnum_workgroup | subgroup_id)))) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec4(3u), uvec4(3u)), (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(3u), uvec4(3u)), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec4(3u), uvec4(3u))))) | uvec4(0u, 0u, 0u, 0u)))).xy.y));
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))) && true), true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) - (0 << _GLF_IDENTITY(int(3), int(3))))) / (1 & 1)) >> _GLF_IDENTITY(int(8), int(8)))), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), 0 + (int(8)))))), (_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(8), (false ? _GLF_FUZZED((-- _injected_loop_counter)) : int(8))), int(8))), (_GLF_IDENTITY((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(8), (false ? _GLF_FUZZED((-- _injected_loop_counter)) : int(8))), int(8))), (_GLF_IDENTITY((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(8), (false ? _GLF_FUZZED((-- _injected_loop_counter)) : int(8))), int(8))), ((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(8), _GLF_IDENTITY((false ? _GLF_FUZZED((-- _injected_loop_counter)) : int(8)), (_GLF_IDENTITY((false ? _GLF_FUZZED((-- _injected_loop_counter)) : int(8)), 0 ^ ((false ? _GLF_FUZZED((-- _injected_loop_counter)) : int(8))))) ^ 0)), int(8)))) >> 0)) << 0)) / _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), 1))))) || false))); _injected_loop_counter --)
    {
     barrier();
    }
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       barrier();
      }
    }
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + _GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))) * 1u) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)); _injected_loop_counter ++)
      {
       barrier();
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_base + ((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size);
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, false))))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, false))))))))))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), ! (! (! (_GLF_IDENTITY(false, bool(bool(false))))))), true, true, false)))))))))
  barrier();
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   _GLF_IDENTITY(GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idnext_virtual_gidnum_workgroup.z = next_virtual_gid, (true ? GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idnext_virtual_gidnum_workgroup.z = next_virtual_gid : _GLF_FUZZED(72217u)));
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), ! (_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), false || (! (false))))))))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-4.8)), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(8.7)), bool(false)))), bool(true))) > injectionSwitch.y))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))))) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))), true && (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))) && true)), bool(bvec2(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))) && true, false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))) && true, ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))) && true) && true))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))))))))))) || false))) && _GLF_IDENTITY(((false)), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)) || (((false))))) || _GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), ! _GLF_IDENTITY((! (false)), false || ((! (false))))))))
  barrier();
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(0u | (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u), clamp(virtual_gid, virtual_gid, virtual_gid)), _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY((virtual_gid) | 0u, (_GLF_IDENTITY((virtual_gid) | 0u, (_GLF_IDENTITY((virtual_gid) | 0u, ((virtual_gid) | 0u) / 1u)) >> (0u | 0u))) << 0u), ~ (~ (_GLF_IDENTITY((virtual_gid) | 0u, (_GLF_IDENTITY((virtual_gid) | 0u, (_GLF_IDENTITY((virtual_gid) | 0u, ((virtual_gid) | 0u) / 1u)) >> (0u | 0u))) << 0u))))))), clamp(virtual_gid, virtual_gid, virtual_gid))), uint(uvec2(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) | (0u)), 0u)) | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), 1u))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), (true ? _GLF_IDENTITY((0u), min((0u), _GLF_IDENTITY((0u), max((0u), (0u))))) : _GLF_FUZZED(num_workgroup))) << 0u) | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), _GLF_IDENTITY((true ? 0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))) : _GLF_FUZZED(workgroup_size)), uint(uvec4((true ? 0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))) : _GLF_FUZZED(workgroup_size)), 0u, 1u, 0u)))), uint(uvec2(0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), 1u))), (1u ^ 1u) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), (true ? 0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))) : _GLF_FUZZED(workgroup_size))), uint(uvec2(0u | (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), ! (! (bool(bvec4(false, false, false, false)))))) ? _GLF_FUZZED(uint(789.212)) : virtual_gid)), _GLF_IDENTITY(clamp(virtual_gid, virtual_gid, virtual_gid), 0u | (clamp(virtual_gid, virtual_gid, virtual_gid))))), 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))) ? 0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))) : _GLF_FUZZED(workgroup_size))), uint(uvec2(0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), _GLF_IDENTITY(1u, (1u) / 1u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), (true ? 0u | _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)))), ~ (~ (~ ((_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))))))))) : _GLF_FUZZED(workgroup_size))), uint(uvec2(_GLF_IDENTITY(0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, _GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))))))), (0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, _GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)))))))) - 0u), 1u))))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), uint(uvec2(0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), 1u))), _GLF_IDENTITY(_GLF_IDENTITY(0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), _GLF_IDENTITY((0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)))) ^ 0u, (_GLF_IDENTITY((0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)))) ^ 0u, ((0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)))) ^ 0u) | ((0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)))) ^ 0u))) << 0u)), uint(uvec2(0u | (_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)), virtual_gid, virtual_gid)), (0u << _GLF_IDENTITY(uint(2u), uint(2u))) + (_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)), virtual_gid, virtual_gid)))), _GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u), virtual_gid))), 1u))), _GLF_IDENTITY(0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), ~ (~ (0u))) | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), 1u)))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), uint(uvec2(0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), 1u))), _GLF_IDENTITY(_GLF_IDENTITY(0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)), virtual_gid))), (0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)))) ^ 0u), uint(uvec2(0u | (_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, _GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u))), virtual_gid))) | (virtual_gid)), virtual_gid, virtual_gid)), virtual_gid, virtual_gid))), 1u))), _GLF_IDENTITY(0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 0u))))), _GLF_IDENTITY(~ (~ (0u)), min(~ (~ (0u)), ~ (~ (0u))))) | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), 1u)))), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), (0u | (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)), _GLF_IDENTITY(clamp(virtual_gid, virtual_gid, virtual_gid), (0u & 167323u) | (clamp(virtual_gid, virtual_gid, virtual_gid)))))) - 0u), uint(uvec2(0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), 1u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), min(0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), 0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))))), (0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)))) ^ 0u), uint(uvec2(_GLF_IDENTITY(0u | (_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)), virtual_gid, virtual_gid)), virtual_gid, virtual_gid))), clamp(_GLF_IDENTITY(0u | (_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)), virtual_gid, virtual_gid)), virtual_gid, virtual_gid))), 0u ^ (_GLF_IDENTITY(0u | (_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)), virtual_gid, virtual_gid)), virtual_gid, virtual_gid))), (0u | (_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)), virtual_gid, virtual_gid)), virtual_gid, virtual_gid)))) | (0u | (_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)), virtual_gid, virtual_gid)), virtual_gid, virtual_gid))))))), 0u | (_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)), virtual_gid, virtual_gid)), virtual_gid, virtual_gid))), 0u | (_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)), virtual_gid, virtual_gid)), virtual_gid, virtual_gid))))), 1u))), _GLF_IDENTITY(0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), uint(uvec2(_GLF_IDENTITY(0u, ~ (~ (0u))) | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), 1u))))) | (clamp(_GLF_IDENTITY(0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), uint(uvec2(0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), 1u))), _GLF_IDENTITY(_GLF_IDENTITY(0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), (0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, _GLF_IDENTITY(virtual_gid, (virtual_gid) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) ^ 0u), uint(uvec2(0u | (_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)), virtual_gid, virtual_gid)), virtual_gid, virtual_gid))), 1u))), _GLF_IDENTITY(0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), uint(uvec2(_GLF_IDENTITY(0u, ~ (~ (0u))) | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), 1u))))))) >> 0u)), _GLF_IDENTITY(0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), uint(_GLF_IDENTITY(uvec2(0u | (_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idnext_virtual_gidnum_workgroup[1]) : _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)))), virtual_gid, virtual_gid))), 1u), (true ? uvec2(0u | (_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idnext_virtual_gidnum_workgroup[1]) : _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)))), virtual_gid, virtual_gid))), 1u) : _GLF_FUZZED(GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_id)))))))), ~ (~ (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u | (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)), _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) | 0u, (_GLF_IDENTITY((virtual_gid) | 0u, (_GLF_IDENTITY((virtual_gid) | 0u, ((virtual_gid) | 0u) / 1u)) >> (_GLF_IDENTITY(0u | 0u, max(_GLF_IDENTITY(0u | 0u, 0u ^ (0u | 0u)), 0u | 0u))))) << 0u)))), clamp(virtual_gid, virtual_gid, virtual_gid))), min(0u | (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)), _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) | 0u, (_GLF_IDENTITY((virtual_gid) | 0u, (_GLF_IDENTITY((virtual_gid) | 0u, ((virtual_gid) | 0u) / 1u)) >> (_GLF_IDENTITY(0u | 0u, max(_GLF_IDENTITY(0u | 0u, 0u ^ (0u | 0u)), 0u | 0u))))) << 0u)))), clamp(virtual_gid, virtual_gid, virtual_gid))), _GLF_IDENTITY(0u | (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)), _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) | 0u, (_GLF_IDENTITY((virtual_gid) | 0u, (_GLF_IDENTITY((virtual_gid) | 0u, ((virtual_gid) | 0u) / 1u)) >> (_GLF_IDENTITY(0u | 0u, max(_GLF_IDENTITY(0u | 0u, 0u ^ (0u | 0u)), 0u | 0u))))) << 0u)))), clamp(virtual_gid, virtual_gid, virtual_gid))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0u | (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)), _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) | 0u, (_GLF_IDENTITY((virtual_gid) | 0u, (_GLF_IDENTITY((virtual_gid) | 0u, ((virtual_gid) | 0u) / 1u)) >> (_GLF_IDENTITY(0u | 0u, max(_GLF_IDENTITY(0u | 0u, 0u ^ (0u | 0u)), 0u | 0u))))) << 0u)))), clamp(virtual_gid, virtual_gid, virtual_gid))), max(0u | (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)), _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) | 0u, (_GLF_IDENTITY((virtual_gid) | 0u, (_GLF_IDENTITY((virtual_gid) | 0u, ((virtual_gid) | 0u) / 1u)) >> (_GLF_IDENTITY(0u | 0u, max(_GLF_IDENTITY(0u | 0u, 0u ^ (0u | 0u)), 0u | 0u))))) << 0u)))), clamp(virtual_gid, virtual_gid, virtual_gid))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)), _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) | 0u, (_GLF_IDENTITY((virtual_gid) | 0u, (_GLF_IDENTITY((virtual_gid) | 0u, ((virtual_gid) | 0u) / 1u)) >> (_GLF_IDENTITY(0u | 0u, max(_GLF_IDENTITY(0u | 0u, 0u ^ (0u | 0u)), 0u | 0u))))) << 0u)))), clamp(virtual_gid, virtual_gid, virtual_gid))))) : _GLF_FUZZED(num_workgroup))))), uint(uvec2(0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), 1u))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u) | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? 0u | _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), (0u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) * 1u))) + ((_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))))) : _GLF_FUZZED(workgroup_size)), uint(uvec4((_GLF_IDENTITY(true ? 0u | (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (virtual_gid))) ^ (11088u & 0u)), clamp(virtual_gid, virtual_gid, virtual_gid))) : _GLF_FUZZED(workgroup_size), 1u * (true ? 0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))) : _GLF_FUZZED(workgroup_size)))), 0u, 1u, 0u)))), uint(uvec2(_GLF_IDENTITY(0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), ~ (~ (0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)))))), 1u))), (1u ^ 1u) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), (true ? 0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))) : _GLF_FUZZED(workgroup_size))), uint(uvec2(0u | (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(uint(789.212)) : virtual_gid)), clamp(virtual_gid, virtual_gid, virtual_gid))), 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), bool(bvec2(true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))) ? 0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))) : _GLF_FUZZED(workgroup_size))), uint(uvec2(0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), 1u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), bool(bvec2(true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))) ? 0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))) : _GLF_FUZZED(workgroup_size))), uint(uvec2(0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), 1u))), _GLF_IDENTITY(_GLF_IDENTITY(0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), bool(bvec2(true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))) ? 0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))) : _GLF_FUZZED(workgroup_size))), uint(uvec2(0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), 1u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), bool(bvec2(true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))) ? 0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))) : _GLF_FUZZED(workgroup_size))), uint(uvec2(0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), 1u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), bool(bvec2(true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))) ? 0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))) : _GLF_FUZZED(workgroup_size))), uint(uvec2(0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), bool(bvec2(true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))) ? 0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))) : _GLF_FUZZED(workgroup_size))), uint(uvec2(0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), 1u)))) * 1u))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), (true ? 0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (workgroup_size) >> 0u)))), uint(uvec2(0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, _GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))))))), 1u))))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, _GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))))), uint(uvec2(0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, _GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid))))), 1u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), (0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)))) ^ 0u), (_GLF_IDENTITY(0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ (~ (uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) + ((0u << _GLF_IDENTITY(uint(0u), uint(0u))) ^ 0u)), (0u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))) | _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))))), uint(uvec4((_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))))), 0u, 1u, 0u))))))) ^ 0u)) + 0u), uint(uvec2(0u | (_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)), virtual_gid, virtual_gid)), virtual_gid, virtual_gid))), 1u))), _GLF_IDENTITY(0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)), (virtual_gid) | (virtual_gid)), clamp(virtual_gid, virtual_gid, virtual_gid))), uint(uvec2(_GLF_IDENTITY(0u, ~ (~ (0u))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)), 0u ^ _GLF_IDENTITY((virtual_gid), (false ? _GLF_FUZZED(virtual_gid) : (virtual_gid)))), _GLF_IDENTITY(virtual_gid, ~ _GLF_IDENTITY((~ (virtual_gid)), 0u ^ ((~ (virtual_gid))))))), clamp(virtual_gid, virtual_gid, virtual_gid))), ((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)), 0u ^ _GLF_IDENTITY((virtual_gid), (false ? _GLF_FUZZED(virtual_gid) : (virtual_gid)))), _GLF_IDENTITY(virtual_gid, ~ _GLF_IDENTITY((~ (virtual_gid)), 0u ^ ((~ (virtual_gid))))))), clamp(virtual_gid, virtual_gid, virtual_gid)))) - 0u), 1u)))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), uint(uvec2(0u | (_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)), _GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(subgroup_size) : virtual_gid)), (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(subgroup_size) : virtual_gid)), 0u | (_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(subgroup_size) : virtual_gid))))) ^ 0u), virtual_gid)), virtual_gid))), 1u))), _GLF_IDENTITY(_GLF_IDENTITY(0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), (0u | _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), min((_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)))))) ^ 0u), uint(uvec2(0u | (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec2(virtual_gid, 0u)), (uint(uvec2(virtual_gid, 0u))) - 0u)), clamp(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(clamp(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) | (virtual_gid), max((virtual_gid) | (virtual_gid), _GLF_IDENTITY((virtual_gid) | (virtual_gid), ((virtual_gid) | (virtual_gid)) + 0u)))), virtual_gid, virtual_gid), (clamp(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)), virtual_gid, virtual_gid)) - 0u)), virtual_gid, virtual_gid))), 1u))), _GLF_IDENTITY(_GLF_IDENTITY(0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), uint(uvec2(_GLF_IDENTITY(0u, _GLF_IDENTITY(~ (~ (0u)), (~ (~ _GLF_IDENTITY((0u), ((0u)) * 1u))) * 1u)) | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), 1u))), min(_GLF_IDENTITY(0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), uint(uvec2(_GLF_IDENTITY(0u, _GLF_IDENTITY(~ (~ (0u)), (~ (~ _GLF_IDENTITY((0u), ((0u)) * 1u))) * 1u)) | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), 1u))), _GLF_IDENTITY(_GLF_IDENTITY(0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), uint(uvec2(_GLF_IDENTITY(0u, _GLF_IDENTITY(~ (~ (0u)), (~ (~ _GLF_IDENTITY((0u), ((0u)) * 1u))) * 1u)) | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), uint(uvec2(_GLF_IDENTITY(0u, _GLF_IDENTITY(~ (~ (0u)), (~ (~ _GLF_IDENTITY((0u), ((0u)) * 1u))) * 1u)) | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), 1u))), (_GLF_IDENTITY(0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), uint(uvec2(_GLF_IDENTITY(0u, _GLF_IDENTITY(~ (~ (0u)), (~ (~ _GLF_IDENTITY((0u), ((0u)) * 1u))) * 1u)) | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), 1u)))) | (_GLF_IDENTITY(0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), uint(uvec2(_GLF_IDENTITY(0u, _GLF_IDENTITY(~ (~ (0u)), (~ (~ _GLF_IDENTITY((0u), ((0u)) * 1u))) * 1u)) | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), 1u)))))) | (_GLF_IDENTITY(0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), uint(uvec2(_GLF_IDENTITY(0u, _GLF_IDENTITY(~ (~ (0u)), (~ (~ _GLF_IDENTITY((0u), ((0u)) * 1u))) * 1u)) | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), 1u)))))))), (clamp(_GLF_IDENTITY(0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), uint(uvec2(0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, _GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 1u)))))))), 1u))), _GLF_IDENTITY(_GLF_IDENTITY(0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), (0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)))) ^ 0u), uint(uvec2(0u | (_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)), virtual_gid, virtual_gid)), virtual_gid, virtual_gid))), 1u))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) >> 0u))) | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), uint(uvec2(_GLF_IDENTITY(0u, ~ (~ (0u))) | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), 1u))))) | (clamp(_GLF_IDENTITY(0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), uint(uvec2(0u | (_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)), virtual_gid, virtual_gid))), 1u))), _GLF_IDENTITY(_GLF_IDENTITY(0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), (0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)))) ^ 0u), uint(uvec2(0u | (_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)), virtual_gid, virtual_gid)), virtual_gid, virtual_gid))), 1u))), _GLF_IDENTITY(0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), uint(uvec2(_GLF_IDENTITY(0u, ~ (~ (0u))) | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), 1u))))))) >> 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), max(0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), 0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))))), uint(uvec2(0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), 1u)))))))))], _GLF_IDENTITY(uint(1), clamp(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), 0u ^ (uint(1)))) / uint(_GLF_ONE(1.0, injectionSwitch.y))), uint(1), uint(1))), 4, 64, _GLF_IDENTITY(4, clamp(4, 4, 4)));
  }
 while(_GLF_WRAPPED_LOOP(false));
 do
  {
   if(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) << 0u)) >> (20658u & 0u))), (_GLF_IDENTITY((subgroup_local_id % 2), min(_GLF_IDENTITY((subgroup_local_id % 2), _GLF_IDENTITY(uint(uvec2((subgroup_local_id % 2), 0u)), min(uint(uvec2((subgroup_local_id % 2), 0u)), uint(uvec2((subgroup_local_id % 2), 0u))))), (subgroup_local_id % 2)))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) == 0)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(2.3, 0.8)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-474.198), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((+ 4619.8908))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), mat2(1.0) * (clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) + vec2(0.0, 0.0))))).x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0, 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0, 0.0, 1.0, 0.0, 0.0))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0, 0.0, 1.0, 0.0, 0.0)))) && true))))), true, false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))), true && (bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false))
        {
         barrier();
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), false), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), false), true, false))), false)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), false), true, false))), false)))))))))) && true), true, true, false))))
      barrier();
     atomicStore(buf[GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idnext_virtual_gidnum_workgroup.z], uint(2), 4, 64, 4);
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
       barrier();
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(0, 0, 1, 0), max(ivec4(0, _GLF_IDENTITY(0, max(0, 0)), 1, 0), ivec4(0, 0, _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1))) + int(_GLF_ZERO(0.0, injectionSwitch.x)), ((_GLF_IDENTITY(1, max(1, 1))) + int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) + vec2(0.0, 0.0))).x))) * 1)), 0)))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(0, 0, 1, 0), max(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0 : _GLF_FUZZED(_injected_loop_counter))), (false ? _GLF_FUZZED(-84987) : _GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0 : _GLF_FUZZED(_injected_loop_counter))))), 0, _GLF_IDENTITY(1, (1) >> 0), 0), ivec4(0, 0, 1, 0)))), min(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(0, 0, 1, 0), _GLF_IDENTITY(max(ivec4(0, 0, 1, 0), ivec4(_GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 1, 0)), min(max(ivec4(0, 0, 1, 0), ivec4(_GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 1, 0)), max(ivec4(0, 0, 1, 0), ivec4(_GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 1, 0))))), (_GLF_IDENTITY(ivec4(0, 0, 1, 0), max(ivec4(0, 0, 1, 0), ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), (false ? _GLF_FUZZED(96024) : _GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))))), 0, 1, 0)))) << ivec4(0, 0, 0, 0))), int(_GLF_IDENTITY(ivec4(0, 0, 1, 0), max(ivec4(0, 0, _GLF_IDENTITY(1, (1) | 0), 0), ivec4(0, 0, 1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, max(0, 0)))))) | (0)))))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(0, 0, 1, 0), max(ivec4(_GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0 : _GLF_FUZZED(_injected_loop_counter))), 0, _GLF_IDENTITY(1, (1) >> 0), 0), ivec4(0, 0, 1, 0)))), min(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(0, _GLF_IDENTITY(0, ~ (~ (0))), 1, 0), ivec4(0, 0, 0, 0) ^ (ivec4(0, 0, 1, 0))), max(_GLF_IDENTITY(ivec4(0, 0, 1, 0), (ivec4(0, 0, 1, 0)) >> ivec4(0, 0, 0, 0)), ivec4(_GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 1, 0))), (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(0, _GLF_IDENTITY(0, ~ (~ (0))), 1, 0), ivec4(0, 0, 0, 0) ^ (ivec4(0, 0, 1, 0))), max(_GLF_IDENTITY(ivec4(0, 0, 1, 0), (ivec4(0, 0, 1, 0)) >> ivec4(0, 0, 0, 0)), ivec4(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))))) ^ int(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) + 0.0), injectionSwitch.x))), 0, _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter))), 1, _GLF_IDENTITY(1, min(1, 1)))), 0)))) - ivec4(0, 0, 0, 0)), (_GLF_IDENTITY(ivec4(0, 0, 1, 0), max(ivec4(0, 0, 1, 0), ivec4(_GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 1, 0)))) << ivec4(0, 0, 0, 0))), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(0, 0, 1, 0), max(ivec4(0, 0, _GLF_IDENTITY(1, (1) | 0), 0), ivec4(0, 0, 1, 0))), max(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(0, _GLF_IDENTITY(0, 0 ^ (0)), 1, 0), max(ivec4(0, 0, _GLF_IDENTITY(1, (1) | 0), 0), ivec4(0, 0, 1, 0))), min(_GLF_IDENTITY(ivec4(0, 0, 1, 0), max(ivec4(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, max(0, 0)), 0)), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, 0))) | (0)), _GLF_IDENTITY(1, _GLF_IDENTITY((1), ~ (~ ((1)))) | 0), 0), ivec4(0, 0, 1, 0))), _GLF_IDENTITY(_GLF_IDENTITY(ivec4(0, 0, 1, 0), clamp(ivec4(0, 0, 1, 0), _GLF_IDENTITY(ivec4(0, 0, 1, 0), (ivec4(0, 0, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (false ? _GLF_FUZZED(-74098) : ~ (1))))), 0)) << ivec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), ivec4(0, 0, 1, 0))), max(ivec4(_GLF_IDENTITY(0, (0) / 1), 0, _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, ~ (~ (1))), 1, 1))), (1) | 0), 0), ivec4(0, 0, 1, 0))))), _GLF_IDENTITY(_GLF_IDENTITY(ivec4(0, 0, 1, 0), (ivec4(0, 0, 1, 0)) + ivec4(0, 0, 0, 0)), max(ivec4(0, 0, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (true ? _GLF_IDENTITY(1, (1) | 0) : _GLF_FUZZED(int(61.09)))), 0), ivec4(0, 0, 1, 0))))))))) * 1), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), (0) | 0), 0, 1, 0), _GLF_IDENTITY(max(ivec4(0, 0, 1, 0), ivec4(0, 0, 1, 0)), ivec4(1, 1, 1, 1) * (max(ivec4(0, 0, _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (1) << (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (false ? _GLF_FUZZED(clamp(_injected_loop_counter, 98971, _GLF_IDENTITY(-86434, (true ? -86434 : _GLF_FUZZED(86197))))) : _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), 0 | (int(4)))) - 0))))))), ((_GLF_IDENTITY(1, (1) << (_GLF_IDENTITY(0 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (false ? _GLF_FUZZED(clamp(_injected_loop_counter, 98971, -86434)) : _GLF_IDENTITY(int(4), int(4)))), (_GLF_IDENTITY(0 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (false ? _GLF_FUZZED(clamp(_injected_loop_counter, 98971, -86434)) : _GLF_IDENTITY(int(4), int(4)))), (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (false ? _GLF_FUZZED(clamp(_injected_loop_counter, 98971, -86434)) : _GLF_IDENTITY(int(4), int(4))))) / int(_GLF_ONE(1.0, injectionSwitch.y)))) + 0))))) | ((_GLF_IDENTITY(1, (1) << (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (false ? _GLF_FUZZED(clamp(_injected_loop_counter, 98971, -86434)) : _GLF_IDENTITY(int(4), int(4))))))))) | (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(15273) : 1)))), _GLF_IDENTITY(0, (0) >> int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(vec3(7.2, -910.205, 23.34).s, mix(float(_GLF_IDENTITY(vec3(7.2, -910.205, 23.34).s, mix(float(_GLF_FUZZED(-47.58)), float(vec3(7.2, -910.205, 23.34).s), bool(true)))), float(_GLF_FUZZED((+ 5.2))), bool(false)))) : injectionSwitch.x)))))), ivec4(0, 0, 1, 0)))))))))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), false || (! (_GLF_IDENTITY(true, false || (true)))))))))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           atomicStore(buf[GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idnext_virtual_gidnum_workgroup.z], uint(2), 4, 64, 4);
          }
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               barrier();
              }
            }
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
              {
              }
             else
              {
               barrier();
              }
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! (bool((injectionSwitch.x > injectionSwitch.y))))))))))
              {
              }
             else
              {
               barrier();
              }
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             else
              {
              }
            }
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))); _injected_loop_counter ++)
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                }
               else
                {
                }
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                }
               else
                {
                }
              }
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = (((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), clamp(int(4), _GLF_IDENTITY(int(4), min(_GLF_IDENTITY(int(4), 0 | (int(4))), int(4))), _GLF_IDENTITY(int(4), 0 | (int(4))))), int(4))) ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 barrier();
                }
              }
            }
          }
         else
          {
          }
        }
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3.6)), vec2(_GLF_FUZZED(7526.1700), (injectionSwitch)[1]), bvec2(false, true))), 0.0, 0.0)))) / vec2(1.0, 1.0)).y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, true)), (bool(bvec4(false, false, true, true))) || false))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) | 0))) >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
        }
       else
        {
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
            {
             do
              {
               barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
