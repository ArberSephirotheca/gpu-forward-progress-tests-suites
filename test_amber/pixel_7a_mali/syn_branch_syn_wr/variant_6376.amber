#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)), false || (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)), true && (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)), ! (! (bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))))))))), (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)), (bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))) && true)), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)), (bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))) && true)), true, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true && (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))), true, false)), ! (! (bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)))))))))) && true)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, true && (false))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))) || (_GLF_DEAD(false))), false)), true && (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), ! (! (bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))) && true))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)), ! (! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))))))) && true))) || (_GLF_DEAD(false))), false)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), ! (! (bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), false, true, true)))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, 0.0, 0.0, abs(1.0), cos(0.0), sqrt(1.0), cos(0.0), 1.0, 0.0)), clamp(float(mat3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, 0.0, 0.0, abs(1.0), cos(0.0), sqrt(1.0), cos(0.0), 1.0, 0.0)), float(mat3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, 0.0, 0.0, abs(1.0), cos(0.0), sqrt(1.0), cos(0.0), 1.0, 0.0)), float(mat3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, 0.0, 0.0, abs(1.0), cos(0.0), sqrt(1.0), cos(0.0), 1.0, 0.0))))), ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, float(mat3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, 0.0, 0.0, abs(1.0), cos(_GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), clamp(_GLF_IDENTITY(max(0.0, 0.0), min(max(0.0, 0.0), max(0.0, 0.0))), max(0.0, 0.0), max(0.0, 0.0))))), sqrt(1.0), cos(0.0), 1.0, _GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0)))))))), _GLF_IDENTITY(true, bool(bvec4(true, false, false, true))) && (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-822.823, -39.20)), clamp(_GLF_IDENTITY(_GLF_FUZZED(vec2(-822.823, -39.20)), (_GLF_FUZZED(vec2(-822.823, -39.20))) * mat2(1.0)), _GLF_FUZZED(vec2(-822.823, -39.20)), _GLF_IDENTITY(_GLF_FUZZED(vec2(-822.823, -39.20)), (_GLF_FUZZED(vec2(-822.823, -39.20))) * mat2(1.0)))) : injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), (vec2((injectionSwitch)[0], (injectionSwitch)[1])) - vec2(0.0, 0.0)), vec2(_GLF_FUZZED(-8282.7648), _GLF_FUZZED(3754.0632)), bvec2(false, false)))) + vec2(0.0, 0.0)), injectionSwitch)).y, float(mat3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, 0.0, 0.0, _GLF_IDENTITY(abs(1.0), min(abs(1.0), _GLF_IDENTITY(abs(1.0), max(abs(1.0), abs(1.0))))), cos(0.0), sqrt(1.0), cos(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(7580.4038)), float(0.0), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-223.666) : injectionSwitch.x)), 1.0, 1.0))) < injectionSwitch.y)))))), 1.0, 0.0)))))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-7733.8726))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0)), (vec2(mat3x4(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0))) + vec2(0.0, 0.0))).y)), ! (! (! (! (injectionSwitch.x > injectionSwitch.y)))))))) && true))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) && true), true), false)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) && true), true), false))))))))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec2(false, true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, true)), ! (! (bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))), true, false, true))))))), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, (true) && true), false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(vec4(9563.8013, -8076.2352, -2154.1553, -3.7)[1]) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-5331.1897)), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)) + (mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))))).y), bool(true)))))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(58.07)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), true, false, false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 uint subgroup_base = _GLF_IDENTITY(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(workgroup_size))))) * subgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_base, (false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY((workgroup_base), 1u * ((workgroup_base)))), min(_GLF_IDENTITY(_GLF_FUZZED((workgroup_base)), (_GLF_FUZZED((workgroup_base))) * 1u), _GLF_FUZZED((workgroup_base)))) : _GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), max(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))) + subgroup_base) | 0u))), 1u, 1u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY((uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), ! (! (bool(bvec4(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))) ? _GLF_FUZZED((workgroup_base)) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)))) + _GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base)), (workgroup_base + subgroup_base) | 0u)), ~ (~ ((false ? _GLF_FUZZED(_GLF_IDENTITY((workgroup_base), (((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_base) : 0u))))) | 1u) * ((workgroup_base)))) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u, uint(uint(0u))) | (workgroup_base)) + subgroup_base, (workgroup_base + subgroup_base) | 0u)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, workgroup_base + subgroup_base))) | 0u), _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), ! (! (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))) ? _GLF_FUZZED((workgroup_base)) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + _GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base)), (workgroup_base + subgroup_base) | 0u)), ~ (~ ((false ? _GLF_FUZZED(_GLF_IDENTITY((workgroup_base), (((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) | 1u) * ((workgroup_base)))) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | _GLF_IDENTITY((workgroup_base), (false ? _GLF_FUZZED(floatBitsToUint(9.4)) : (workgroup_base)))) + subgroup_base, (workgroup_base + subgroup_base) | 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y) || false))), true, false)), ! (! (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))) ? _GLF_FUZZED((workgroup_base)) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + _GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base)), (workgroup_base + subgroup_base) | _GLF_IDENTITY(0u, (0u) | 0u))), ~ (~ ((false ? _GLF_FUZZED(_GLF_IDENTITY((workgroup_base), (((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) | 1u) * ((workgroup_base)))) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + subgroup_base, (workgroup_base + subgroup_base) | 0u)))))), (_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) && true)), true, false)), (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) && true)), true, false))) && true))))) ? _GLF_FUZZED((workgroup_base)) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + _GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base)), (workgroup_base + subgroup_base) | 0u)), ~ (~ ((false ? _GLF_FUZZED(_GLF_IDENTITY((workgroup_base), (((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) | 1u) * ((workgroup_base)))) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + subgroup_base, (workgroup_base + subgroup_base) | 0u))))))) + 0u))), _GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 0u ^ (1u)), 1u, 0u))), (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))) ? (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, false)), ! (_GLF_IDENTITY(! (bool(bvec4(false, _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, true, false))), (injectionSwitch.x > injectionSwitch.y)), true, false))), (! (bool(bvec4(false, _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, true, false))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)), true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) ? _GLF_FUZZED((workgroup_base)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + _GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base)), (workgroup_base + subgroup_base) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + _GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base)), (_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec3(workgroup_base + subgroup_base, 1u, 0u)))) - 0u)) | 0u)) / 1u)), ~ (~ ((false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY((workgroup_base), (((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) | 1u) * ((workgroup_base)))), (_GLF_FUZZED(_GLF_IDENTITY((workgroup_base), (((1u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u) * 1u)))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), uint(uint(_GLF_IDENTITY(uint(0u), uint(0u)))))) | 1u) * ((workgroup_base))))) + 0u) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)) | (workgroup_base)) + subgroup_base, (workgroup_base + subgroup_base) | 0u)))))), 1u, 1u, 0u), (uvec4(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), ! (! (bool(bvec4(false, _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false), true, true, false))), (injectionSwitch.x > injectionSwitch.y)), true, false)))))) ? _GLF_FUZZED((workgroup_base)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + _GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base)), (workgroup_base + subgroup_base) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + _GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base)), (_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec3(workgroup_base + subgroup_base, 1u, 0u)))) - 0u)) | 0u)) / 1u)), ~ (~ ((false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY((workgroup_base), (((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) | 1u) * ((workgroup_base)))), (_GLF_FUZZED(_GLF_IDENTITY((workgroup_base), (((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) | 1u) * ((workgroup_base))))) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY((workgroup_base), (((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) | 1u) * ((workgroup_base)))), (_GLF_FUZZED(_GLF_IDENTITY((workgroup_base), (((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) | 1u) * ((workgroup_base))))) + 0u), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY((workgroup_base), (((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) | 1u) * ((workgroup_base)))), (_GLF_FUZZED(_GLF_IDENTITY((workgroup_base), (((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) | 1u) * ((workgroup_base))))) + 0u))))) >> 0u) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)) | (workgroup_base)) + subgroup_base, _GLF_IDENTITY((workgroup_base + subgroup_base) | 0u, (_GLF_IDENTITY((workgroup_base + subgroup_base) | 0u, min((workgroup_base + subgroup_base) | 0u, (workgroup_base + subgroup_base) | 0u))) >> 0u))))))), 1u, 1u, 0u)) + (uvec4(0u, 0u, 0u, 0u) ^ uvec4(0u, 0u, 0u, 0u))))) : _GLF_FUZZED(workgroup_base))), _GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_IDENTITY((uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) || false), false, false, true))))), ! (! (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))) ? _GLF_FUZZED((workgroup_base)) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + _GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base)), (workgroup_base + subgroup_base) | 0u)), ~ (_GLF_IDENTITY(~ ((false ? _GLF_FUZZED(_GLF_IDENTITY((workgroup_base), (((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) | 1u) * ((workgroup_base)))) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + subgroup_base, (workgroup_base + subgroup_base) | 0u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ~ ((false ? _GLF_FUZZED(_GLF_IDENTITY((workgroup_base), (((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) | 1u) * ((workgroup_base)))) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + subgroup_base, (workgroup_base + subgroup_base) | 0u))) : _GLF_FUZZED(bitfieldReverse(subgroup_base))))))), (_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, _GLF_IDENTITY(false, false || (false)))), ! (! (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y)), true, false)))))) ? _GLF_FUZZED((workgroup_base)) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + _GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base)), (workgroup_base + subgroup_base) | 0u)), ~ (~ ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false)))), true, true), bvec3(bvec3(bvec3(bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false)))), true, true)))))))))) ? _GLF_FUZZED(_GLF_IDENTITY((workgroup_base), (((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) | 1u) * ((workgroup_base)))) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + subgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u) + subgroup_base) | 0u))))))) / 1u), 1u, 1u, 0u))), (true ? (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) ^ 0u), _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), ! (! (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))) ? _GLF_FUZZED((workgroup_base)) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base), (_GLF_IDENTITY((subgroup_base), 0u ^ ((subgroup_base)))) << 0u) | (subgroup_base)), (workgroup_base + subgroup_base) | 0u)), ~ (~ ((false ? _GLF_FUZZED(_GLF_IDENTITY((workgroup_base), (((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) | 1u) * ((workgroup_base)))) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + subgroup_base, (workgroup_base + subgroup_base) | 0u)))))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) ^ 0u), _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), ! (! (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))) ? _GLF_FUZZED((workgroup_base)) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base), (_GLF_IDENTITY((subgroup_base), 0u ^ ((subgroup_base)))) << 0u) | (subgroup_base)), (workgroup_base + subgroup_base) | 0u)), ~ (~ ((false ? _GLF_FUZZED(_GLF_IDENTITY((workgroup_base), (((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) | 1u) * ((workgroup_base)))) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + subgroup_base, (workgroup_base + subgroup_base) | 0u)))))))), (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) ^ 0u), _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), ! (! (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))) ? _GLF_FUZZED((workgroup_base)) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base), (_GLF_IDENTITY((subgroup_base), 0u ^ ((subgroup_base)))) << 0u) | (subgroup_base)), (workgroup_base + subgroup_base) | 0u)), ~ (~ ((false ? _GLF_FUZZED(_GLF_IDENTITY((workgroup_base), (((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) | 1u) * ((workgroup_base)))) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + subgroup_base, (workgroup_base + subgroup_base) | 0u)))))))), (uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) ^ 0u), _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), ! (! (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))) ? _GLF_FUZZED((workgroup_base)) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base), (_GLF_IDENTITY((subgroup_base), 0u ^ ((subgroup_base)))) << 0u) | (subgroup_base)), (workgroup_base + subgroup_base) | 0u)), ~ (~ ((false ? _GLF_FUZZED(_GLF_IDENTITY((workgroup_base), (((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) | 1u) * ((workgroup_base)))) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + subgroup_base, (workgroup_base + subgroup_base) | 0u))))))))) >> 0u)) ^ 0u)), _GLF_IDENTITY(1u, 1u * (1u)), 1u, 0u))) : _GLF_FUZZED(workgroup_base))), uint(uvec3(_GLF_IDENTITY((uint(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), ! (! (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))) ? _GLF_FUZZED((workgroup_base)) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + _GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base)), (workgroup_base + subgroup_base) | 0u)), ~ (_GLF_IDENTITY(~ ((false ? _GLF_FUZZED(_GLF_IDENTITY((workgroup_base), (((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) | 1u) * ((workgroup_base)))) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + subgroup_base, (workgroup_base + subgroup_base) | 0u))), (~ ((false ? _GLF_FUZZED(_GLF_IDENTITY((workgroup_base), (((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) | 1u) * ((workgroup_base)))) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + subgroup_base, (workgroup_base + subgroup_base) | 0u)))) | (_GLF_IDENTITY(~ ((false ? _GLF_FUZZED(_GLF_IDENTITY((workgroup_base), (((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) | 1u) * ((workgroup_base)))) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + subgroup_base, (workgroup_base + subgroup_base) | 0u))), (~ ((false ? _GLF_FUZZED(_GLF_IDENTITY((workgroup_base), (((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) | 1u) * ((workgroup_base)))) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + subgroup_base, (workgroup_base + subgroup_base) | 0u)))) << 0u)))))), 1u, 1u, 0u))), (true ? (uint(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), ! (! (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))) ? _GLF_FUZZED((_GLF_IDENTITY(workgroup_base, (workgroup_base) >> (0u | 0u)))) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u | (workgroup_base), (false ? _GLF_FUZZED(packHalf2x16(injectionSwitch)) : 0u | (workgroup_base)))) + _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)) | (subgroup_base)), _GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) - 0u) | 0u)), ~ (~ ((false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), (((_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec3(1u, 0u, 1u), clamp(uvec3(1u, 0u, 1u), uvec3(1u, 0u, 1u), uvec3(1u, 0u, 1u))))) << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) | 1u) * ((workgroup_base))), max(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), (((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), min(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), uint(0u))))))) | 1u) * ((workgroup_base))), _GLF_IDENTITY((_GLF_IDENTITY((workgroup_base), (((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) | 1u) * ((workgroup_base)))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY((_GLF_IDENTITY((workgroup_base), (((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) | 1u) * ((workgroup_base)))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp((_GLF_IDENTITY((workgroup_base), (((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) | 1u) * ((workgroup_base)))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY((workgroup_base), (((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) | 1u) * ((workgroup_base)))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY((workgroup_base), (((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) | 1u) * ((workgroup_base)))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | ((_GLF_IDENTITY((workgroup_base), (((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) | 1u) * ((workgroup_base)))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY((workgroup_base), (((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), max(uint(0u), uint(0u))), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) | 1u) * ((workgroup_base)))))) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) >> (0u ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | 0u)))))), 1u, 1u, 0u))) : _GLF_FUZZED(workgroup_base))), 1u, 0u)))), min((false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_IDENTITY((uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) || false), false, false, true))))), ! (! (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))) ? _GLF_FUZZED((workgroup_base)) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + _GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base)), (workgroup_base + subgroup_base) | 0u)), ~ (_GLF_IDENTITY(~ ((false ? _GLF_FUZZED(_GLF_IDENTITY((workgroup_base), (((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) | 1u) * ((workgroup_base)))) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + subgroup_base, (workgroup_base + subgroup_base) | 0u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ~ ((false ? _GLF_FUZZED(_GLF_IDENTITY((workgroup_base), (((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) | 1u) * ((workgroup_base)))) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + subgroup_base, (workgroup_base + subgroup_base) | 0u))) : _GLF_FUZZED(bitfieldReverse(subgroup_base))))))), (_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, _GLF_IDENTITY(false, false || (false)))), ! (! (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y)), true, false)))))) ? _GLF_FUZZED((workgroup_base)) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + _GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base)), (workgroup_base + subgroup_base) | 0u)), ~ (~ ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false)))), true, true), bvec3(bvec3(bvec3(bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false)))), true, true)))))))))) ? _GLF_FUZZED(_GLF_IDENTITY((workgroup_base), (((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) | 1u) * ((workgroup_base)))) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + subgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u) + subgroup_base) | 0u))))))) / 1u), 1u, 1u, 0u))), (true ? (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) ^ 0u), _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), ! (! (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))) ? _GLF_FUZZED((workgroup_base)) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base), (_GLF_IDENTITY((subgroup_base), 0u ^ ((subgroup_base)))) << 0u) | (subgroup_base)), (workgroup_base + subgroup_base) | 0u)), ~ (~ ((false ? _GLF_FUZZED(_GLF_IDENTITY((workgroup_base), (((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) | 1u) * ((workgroup_base)))) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + subgroup_base, (workgroup_base + subgroup_base) | 0u)))))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) ^ 0u), _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), ! (! (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))) ? _GLF_FUZZED((workgroup_base)) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base), (_GLF_IDENTITY((subgroup_base), 0u ^ ((subgroup_base)))) << 0u) | (subgroup_base)), (workgroup_base + subgroup_base) | 0u)), ~ (~ ((false ? _GLF_FUZZED(_GLF_IDENTITY((workgroup_base), (((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) | 1u) * ((workgroup_base)))) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + subgroup_base, (workgroup_base + subgroup_base) | 0u)))))))), (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) ^ 0u), _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), ! (! (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))) ? _GLF_FUZZED((workgroup_base)) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base), (_GLF_IDENTITY((subgroup_base), 0u ^ ((subgroup_base)))) << 0u) | (subgroup_base)), (workgroup_base + subgroup_base) | 0u)), ~ (~ ((false ? _GLF_FUZZED(_GLF_IDENTITY((workgroup_base), (((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) | 1u) * ((workgroup_base)))) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + subgroup_base, (workgroup_base + subgroup_base) | 0u)))))))), (uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) ^ 0u), _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), ! (! (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))) ? _GLF_FUZZED((workgroup_base)) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base), (_GLF_IDENTITY((subgroup_base), 0u ^ ((subgroup_base)))) << 0u) | (subgroup_base)), (workgroup_base + subgroup_base) | 0u)), ~ (~ ((false ? _GLF_FUZZED(_GLF_IDENTITY((workgroup_base), (((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) | 1u) * ((workgroup_base)))) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + subgroup_base, (workgroup_base + subgroup_base) | 0u))))))))) >> 0u)) ^ 0u)), _GLF_IDENTITY(1u, 1u * (1u)), 1u, 0u))) : _GLF_FUZZED(workgroup_base))), uint(uvec3(_GLF_IDENTITY((uint(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), ! (! (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))) ? _GLF_FUZZED((workgroup_base)) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + _GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base)), (workgroup_base + subgroup_base) | 0u)), ~ (_GLF_IDENTITY(~ ((false ? _GLF_FUZZED(_GLF_IDENTITY((workgroup_base), (((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) | 1u) * ((workgroup_base)))) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + subgroup_base, (workgroup_base + subgroup_base) | 0u))), (~ ((false ? _GLF_FUZZED(_GLF_IDENTITY((workgroup_base), (((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) | 1u) * ((workgroup_base)))) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + subgroup_base, (workgroup_base + subgroup_base) | 0u)))) | (_GLF_IDENTITY(~ ((false ? _GLF_FUZZED(_GLF_IDENTITY((workgroup_base), (((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) | 1u) * ((workgroup_base)))) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + subgroup_base, (workgroup_base + subgroup_base) | 0u))), (~ ((false ? _GLF_FUZZED(_GLF_IDENTITY((workgroup_base), (((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) | 1u) * ((workgroup_base)))) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + subgroup_base, (workgroup_base + subgroup_base) | 0u)))) << 0u)))))), 1u, 1u, 0u))), (true ? (uint(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), ! (! (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))) ? _GLF_FUZZED((_GLF_IDENTITY(workgroup_base, (workgroup_base) >> (0u | 0u)))) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u | (workgroup_base), (false ? _GLF_FUZZED(packHalf2x16(injectionSwitch)) : 0u | (workgroup_base)))) + _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)) | (subgroup_base)), _GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) - 0u) | 0u)), ~ (~ ((false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), (((_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec3(1u, 0u, 1u), clamp(uvec3(1u, 0u, 1u), uvec3(1u, 0u, 1u), uvec3(1u, 0u, 1u))))) << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) | 1u) * ((workgroup_base))), max(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), (((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), min(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), uint(0u))))))) | 1u) * ((workgroup_base))), _GLF_IDENTITY((_GLF_IDENTITY((workgroup_base), (((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) | 1u) * ((workgroup_base)))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY((_GLF_IDENTITY((workgroup_base), (((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) | 1u) * ((workgroup_base)))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp((_GLF_IDENTITY((workgroup_base), (((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) | 1u) * ((workgroup_base)))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY((workgroup_base), (((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) | 1u) * ((workgroup_base)))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY((workgroup_base), (((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) | 1u) * ((workgroup_base)))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | ((_GLF_IDENTITY((workgroup_base), (((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) | 1u) * ((workgroup_base)))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY((workgroup_base), (((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), max(uint(0u), uint(0u))), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) | 1u) * ((workgroup_base)))))) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) >> (0u ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | 0u)))))), 1u, 1u, 0u))) : _GLF_FUZZED(workgroup_base))), 1u, 0u)))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_IDENTITY((uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) || false), false, false, true))))), ! (! (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))) ? _GLF_FUZZED((workgroup_base)) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + _GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base)), (workgroup_base + subgroup_base) | 0u)), ~ (_GLF_IDENTITY(~ ((false ? _GLF_FUZZED(_GLF_IDENTITY((workgroup_base), (((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) | 1u) * ((workgroup_base)))) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + subgroup_base, (workgroup_base + subgroup_base) | 0u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ~ ((false ? _GLF_FUZZED(_GLF_IDENTITY((workgroup_base), (((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) | 1u) * ((workgroup_base)))) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + subgroup_base, (workgroup_base + subgroup_base) | 0u))) : _GLF_FUZZED(bitfieldReverse(subgroup_base))))))), (_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, _GLF_IDENTITY(false, false || (false)))), ! (! (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y)), true, false)))))) ? _GLF_FUZZED((workgroup_base)) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + _GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base)), (workgroup_base + subgroup_base) | 0u)), ~ (~ ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false)))), true, true), bvec3(bvec3(bvec3(bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false)))), true, true)))))))))) ? _GLF_FUZZED(_GLF_IDENTITY((workgroup_base), (((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) | 1u) * ((workgroup_base)))) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + subgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u) + subgroup_base) | 0u))))))) / 1u), 1u, 1u, 0u))), (true ? (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) ^ 0u), _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), ! (! (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))) ? _GLF_FUZZED((workgroup_base)) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base), (_GLF_IDENTITY((subgroup_base), 0u ^ ((subgroup_base)))) << 0u) | (subgroup_base)), (workgroup_base + subgroup_base) | 0u)), ~ (~ ((false ? _GLF_FUZZED(_GLF_IDENTITY((workgroup_base), (((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) | 1u) * ((workgroup_base)))) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + subgroup_base, (workgroup_base + subgroup_base) | 0u)))))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) ^ 0u), _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), ! (! (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))) ? _GLF_FUZZED((workgroup_base)) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base), (_GLF_IDENTITY((subgroup_base), 0u ^ ((subgroup_base)))) << 0u) | (subgroup_base)), (workgroup_base + subgroup_base) | 0u)), ~ (~ ((false ? _GLF_FUZZED(_GLF_IDENTITY((workgroup_base), (((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) | 1u) * ((workgroup_base)))) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + subgroup_base, (workgroup_base + subgroup_base) | 0u)))))))), (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) ^ 0u), _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), ! (! (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))) ? _GLF_FUZZED((workgroup_base)) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base), (_GLF_IDENTITY((subgroup_base), 0u ^ ((subgroup_base)))) << 0u) | (subgroup_base)), (workgroup_base + subgroup_base) | 0u)), ~ (~ ((false ? _GLF_FUZZED(_GLF_IDENTITY((workgroup_base), (((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) | 1u) * ((workgroup_base)))) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + subgroup_base, (workgroup_base + subgroup_base) | 0u)))))))), (uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) ^ 0u), _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), ! (! (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))) ? _GLF_FUZZED((workgroup_base)) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base), (_GLF_IDENTITY((subgroup_base), 0u ^ ((subgroup_base)))) << 0u) | (subgroup_base)), (workgroup_base + subgroup_base) | 0u)), ~ (~ ((false ? _GLF_FUZZED(_GLF_IDENTITY((workgroup_base), (((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) | 1u) * ((workgroup_base)))) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + subgroup_base, (workgroup_base + subgroup_base) | 0u))))))))) >> 0u)) ^ 0u)), _GLF_IDENTITY(1u, 1u * (1u)), 1u, 0u))) : _GLF_FUZZED(workgroup_base))), uint(uvec3(_GLF_IDENTITY((uint(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), ! (! (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))) ? _GLF_FUZZED((workgroup_base)) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + _GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base)), (workgroup_base + subgroup_base) | 0u)), ~ (_GLF_IDENTITY(~ ((false ? _GLF_FUZZED(_GLF_IDENTITY((workgroup_base), (((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) | 1u) * ((workgroup_base)))) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + subgroup_base, (workgroup_base + subgroup_base) | 0u))), (~ ((false ? _GLF_FUZZED(_GLF_IDENTITY((workgroup_base), (((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) | 1u) * ((workgroup_base)))) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + subgroup_base, (workgroup_base + subgroup_base) | 0u)))) | (_GLF_IDENTITY(~ ((false ? _GLF_FUZZED(_GLF_IDENTITY((workgroup_base), (((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) | 1u) * ((workgroup_base)))) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + subgroup_base, (workgroup_base + subgroup_base) | 0u))), (~ ((false ? _GLF_FUZZED(_GLF_IDENTITY((workgroup_base), (((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) | 1u) * ((workgroup_base)))) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + subgroup_base, (workgroup_base + subgroup_base) | 0u)))) << 0u)))))), 1u, 1u, 0u))), (true ? (uint(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), ! (! (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))) ? _GLF_FUZZED((_GLF_IDENTITY(workgroup_base, (workgroup_base) >> (0u | 0u)))) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u | (workgroup_base), (false ? _GLF_FUZZED(packHalf2x16(injectionSwitch)) : 0u | (workgroup_base)))) + _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)) | (subgroup_base)), _GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) - 0u) | 0u)), ~ (~ ((false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), (((_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec3(1u, 0u, 1u), clamp(uvec3(1u, 0u, 1u), uvec3(1u, 0u, 1u), uvec3(1u, 0u, 1u))))) << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) | 1u) * ((workgroup_base))), max(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), (((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), min(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), uint(0u))))))) | 1u) * ((workgroup_base))), _GLF_IDENTITY((_GLF_IDENTITY((workgroup_base), (((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) | 1u) * ((workgroup_base)))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY((_GLF_IDENTITY((workgroup_base), (((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) | 1u) * ((workgroup_base)))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp((_GLF_IDENTITY((workgroup_base), (((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) | 1u) * ((workgroup_base)))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY((workgroup_base), (((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) | 1u) * ((workgroup_base)))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY((workgroup_base), (((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) | 1u) * ((workgroup_base)))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | ((_GLF_IDENTITY((workgroup_base), (((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) | 1u) * ((workgroup_base)))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY((workgroup_base), (((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), max(uint(0u), uint(0u))), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) | 1u) * ((workgroup_base)))))) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) >> (0u ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | 0u)))))), 1u, 1u, 0u))) : _GLF_FUZZED(workgroup_base))), 1u, 0u))))))) + 0u)) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(29346u)))))) >> 0u) + subgroup_base + ((subgroup_local_id + 1) % subgroup_size), (workgroup_base + _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, clamp(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base)), subgroup_base, subgroup_base)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, _GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))), subgroup_base)), (subgroup_base) - 0u)) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), _GLF_IDENTITY(0u, (0u) / 1u) | ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, _GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))), subgroup_base)), (subgroup_base) - 0u)) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))), max(subgroup_base, _GLF_IDENTITY(subgroup_base, (subgroup_base) | _GLF_IDENTITY((subgroup_base), ((subgroup_base)) * uint(_GLF_ONE(1.0, injectionSwitch.y))))))) ^ 0u) + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) + 0u) % subgroup_size), min(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)))) | (workgroup_base + subgroup_base + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_size, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), (false ? _GLF_FUZZED(num_workgroup) : uint(uvec3(subgroup_size, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))), subgroup_size)), (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_size, 0u, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(7149.7788) : _GLF_ONE(1.0, injectionSwitch.y)))))), _GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : uint(uvec3(subgroup_size, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))), uint(_GLF_IDENTITY(uint((false ? _GLF_FUZZED(num_workgroup) : uint(uvec3(subgroup_size, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))), (uint((false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) : uint(uvec3(subgroup_size, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))) | (uint((false ? _GLF_FUZZED(num_workgroup) : uint(uvec3(subgroup_size, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))))))), subgroup_size))) << (1u ^ 1u)), ((subgroup_local_id + 1) % subgroup_size) | 0u), clamp(_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_size, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), (false ? _GLF_FUZZED(num_workgroup) : uint(uvec3(subgroup_size, 0u, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))))))), subgroup_size)), (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_size, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), (false ? _GLF_FUZZED(num_workgroup) : uint(uvec3(subgroup_size, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))), subgroup_size))) << (1u ^ 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_size, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), (false ? _GLF_FUZZED(num_workgroup) : uint(uvec3(subgroup_size, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))), subgroup_size)), (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(subgroup_size, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec3(subgroup_size, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) ^ uvec3(0u, 0u, 0u))), _GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : uint(uvec3(subgroup_size, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))), ((false ? _GLF_FUZZED(num_workgroup) : uint(uvec3(subgroup_size, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))) / 1u))), subgroup_size))) << (1u ^ 1u))) >> (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), clamp(uint(8u), uint(8u), uint(8u)))))), ((subgroup_local_id + 1) % subgroup_size) | 0u), _GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_size, 0u, uint(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), injectionSwitch.y)))), (false ? _GLF_FUZZED(num_workgroup) : uint(uvec3(subgroup_size, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))), subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_size, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), (false ? _GLF_FUZZED(num_workgroup) : uint(uvec3(subgroup_size, 0u, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9.1) : injectionSwitch.y))))))))), subgroup_size))) << (1u ^ 1u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_size, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), (false ? _GLF_FUZZED(num_workgroup) : uint(uvec3(subgroup_size, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))), subgroup_size))) << (1u ^ 1u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_size, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), (false ? _GLF_FUZZED(num_workgroup) : uint(uvec3(subgroup_size, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))), subgroup_size))) << (1u ^ 1u), ((_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_size, 0u, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(uint(uvec3(subgroup_size, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), clamp(_GLF_IDENTITY(uint(uvec3(subgroup_size, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(uvec3(subgroup_size, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), max(uint(uvec3(subgroup_size, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), uint(uvec3(subgroup_size, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))), 0u, 1u, 1u), (uvec4(_GLF_IDENTITY(uint(uvec3(subgroup_size, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), max(uint(uvec3(subgroup_size, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), uint(uvec3(subgroup_size, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))), 0u, 1u, 1u)) - uvec4(0u, 0u, 0u, 0u))), 0u ^ (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(uvec3(subgroup_size, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), max(uint(uvec3(subgroup_size, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), uint(uvec3(subgroup_size, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))), 0u, 1u, 1u), (uvec4(_GLF_IDENTITY(uint(uvec3(subgroup_size, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), max(uint(uvec3(subgroup_size, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), uint(uvec3(subgroup_size, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))), 0u, 1u, 1u)) - uvec4(0u, 0u, 0u, 0u)))))), uint(uvec3(subgroup_size, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(uint(uvec3(subgroup_size, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), (uint(uvec3(subgroup_size, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))) | (uint(uvec3(subgroup_size, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))))))), subgroup_size))) << (1u ^ 1u)) + 0u)) * 1u)) << 0u)), ((subgroup_local_id + 1) % subgroup_size) | 0u), _GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_size, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), (false ? _GLF_FUZZED(num_workgroup) : uint(uvec3(subgroup_size, 0u, uint(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y))))))), subgroup_size)), (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_size, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (num_workgroup), min(~ (num_workgroup), ~ (num_workgroup))), clamp(_GLF_IDENTITY(~ (num_workgroup), min(~ (num_workgroup), ~ (num_workgroup))), _GLF_IDENTITY(~ (num_workgroup), min(~ (num_workgroup), ~ (num_workgroup))), _GLF_IDENTITY(_GLF_IDENTITY(~ (num_workgroup), min(~ (num_workgroup), ~ (num_workgroup))), (_GLF_IDENTITY(~ (num_workgroup), min(~ (num_workgroup), ~ (num_workgroup)))) / 1u)))))) : uint(uvec3(subgroup_size, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))), subgroup_size))) << (1u ^ 1u)), (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(_GLF_IDENTITY(uint((subgroup_local_id + 1) % subgroup_size), 0u ^ (uint((subgroup_local_id + 1) % subgroup_size)))))) | 0u))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read = 0;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.6), _GLF_FUZZED(-17.23)), bvec2(false, false))).y)), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), false, true)))), (true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), false, true))))) && true))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(-16.62)), float((injectionSwitch)[0]), bool(true))), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(3.6), _GLF_FUZZED(-17.23)), _GLF_IDENTITY((vec2(_GLF_FUZZED(3.6), _GLF_FUZZED(-17.23))) * mat2(1.0), (true ? (vec2(_GLF_FUZZED(3.6), _GLF_FUZZED(-17.23))) * mat2(1.0) : _GLF_FUZZED(injectionSwitch)))), bvec2(false, false))).y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bool(true))) && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))), bool(bool(injectionSwitch.x > injectionSwitch.y)))))))) || false)), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(-16.62)), float((injectionSwitch)[0]), bool(true))), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(3.6), _GLF_FUZZED(-17.23)), _GLF_IDENTITY((vec2(_GLF_FUZZED(3.6), _GLF_FUZZED(-17.23))) * mat2(1.0), (true ? (vec2(_GLF_FUZZED(3.6), _GLF_FUZZED(-17.23))) * mat2(1.0) : _GLF_FUZZED(injectionSwitch)))), bvec2(false, false))).y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bool(true))) && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))), bool(bool(injectionSwitch.x > injectionSwitch.y)))))))) || false)), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(-16.62)), float((injectionSwitch)[0]), bool(true))), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(3.6), _GLF_FUZZED(-17.23)), _GLF_IDENTITY((vec2(_GLF_FUZZED(3.6), _GLF_FUZZED(-17.23))) * mat2(1.0), (true ? (vec2(_GLF_FUZZED(3.6), _GLF_FUZZED(-17.23))) * mat2(1.0) : _GLF_FUZZED(injectionSwitch)))), bvec2(false, false))).y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bool(true))) && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))), bool(bool(injectionSwitch.x > injectionSwitch.y)))))))) || false)), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(-16.62)), float((injectionSwitch)[0]), bool(true))), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(3.6), _GLF_FUZZED(-17.23)), _GLF_IDENTITY((vec2(_GLF_FUZZED(3.6), _GLF_FUZZED(-17.23))) * mat2(1.0), (true ? (vec2(_GLF_FUZZED(3.6), _GLF_FUZZED(-17.23))) * mat2(1.0) : _GLF_FUZZED(injectionSwitch)))), bvec2(false, false))).y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bool(true))) && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))), bool(bool(injectionSwitch.x > injectionSwitch.y)))))))) || false))))), false))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.6), _GLF_FUZZED(-17.23)), bvec2(false, false))).y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), (vec2(injectionSwitch.x, 0.0)) - sin(vec2(0.0, 0.0)))), min(float(_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), (vec2(injectionSwitch.x, 0.0)) - sin(vec2(0.0, 0.0)))), float(_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), (vec2(injectionSwitch.x, 0.0)) - sin(vec2(0.0, 0.0))))))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.6), _GLF_FUZZED(-17.23)), bvec2(false, false))), vec2(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.6), _GLF_FUZZED(-17.23)), bvec2(false, false))), clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.6), _GLF_FUZZED(-17.23)), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.6), _GLF_FUZZED(-17.23)), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.6), _GLF_FUZZED(-17.23)), bvec2(false, false))))), 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0))).y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((8.5 + 33.82))), vec2(_GLF_FUZZED(-258.794), _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), sqrt(vec2(0.0, 0.0)) + ((injectionSwitch)))) + vec2(0.0, 0.0))[1]), bvec2(false, true))), mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.6), _GLF_FUZZED(-17.23)), _GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))).y, true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.6), _GLF_FUZZED(-17.23)), bvec2(false, false))).y, true, true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.6), _GLF_FUZZED(-17.23)), bvec2(false, false))).y, true, true)), bvec3(bvec4(bvec3(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.6), _GLF_FUZZED(-17.23)), bvec2(false, false))).y, true, true)), true)))))))))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))) && ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.6), _GLF_FUZZED(-17.23)), bvec2(false, false))).y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.6), _GLF_FUZZED(-17.23)), bvec2(false, false))).y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((8.5 + 33.82))), vec2(_GLF_FUZZED(-258.794), _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2((injectionSwitch)), (vec2((injectionSwitch))) * mat2(1.0))), mat2(1.0) * (vec2(_GLF_IDENTITY(vec2((injectionSwitch)), (vec2((injectionSwitch))) * mat2(1.0))))))[1]), bvec2(false, true))), mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.6), _GLF_FUZZED(-17.23)), _GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))).y, true, _GLF_IDENTITY(true, ! (! (true)))), bvec3(bvec3(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.6), _GLF_FUZZED(-17.23)), bvec2(false, false))).y, true, true))))))))))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), true && _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y) || false, ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y) || false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, sin(0.0)))) > injectionSwitch.y)))), bool(bool(injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mix(vec2(_GLF_FUZZED((26.24 / -36.87)), _GLF_FUZZED(-78.09)), vec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[1]), bvec2(true, true))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) && true) || false), bool(bool(injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y) || false), bool(bool(injectionSwitch.x > injectionSwitch.y)))))), ! (! ((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), true)))) && true) || false), bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))))))))) || false), ! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(47.99, 7054.4987)) : (injectionSwitch)))[1]), vec2(_GLF_FUZZED(3.6), _GLF_FUZZED(-17.23)), bvec2(false, false)), mix(vec2(_GLF_IDENTITY((mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.6), _GLF_FUZZED(-17.23)), bvec2(false, false)))[0], float(mat4x2((mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(3.6, 0.0 + (_GLF_IDENTITY(3.6, float(_GLF_IDENTITY(mat3(3.6, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, abs(0.0)), (mat3(3.6, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, abs(0.0))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))), _GLF_FUZZED(-17.23)), bvec2(false, false)))[0], 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), (mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.6), _GLF_FUZZED(-17.23)), bvec2(false, false)))[1]), vec2(_GLF_FUZZED(690.104), _GLF_IDENTITY(_GLF_FUZZED(4734.9657), mix(float(_GLF_FUZZED(float(true))), float(_GLF_FUZZED(4734.9657)), bool(true)))), bvec2(false, false))), max(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.6), _GLF_FUZZED(-17.23)), _GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, false)))), _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.6), _GLF_FUZZED(-17.23)), bvec2(false, false)), (mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.6), _GLF_FUZZED(-17.23)), bvec2(false, false))) - vec2(0.0, 0.0))))).y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, mix(float(_GLF_FUZZED(1.9)), _GLF_IDENTITY(float(injectionSwitch.x), float(mat2(float(injectionSwitch.x), determinant(mat4(1.0, 0.0, log(1.0), 0.0, length(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 1.0))), bool(true))))) > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bool(true))) && (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))), bool(bool(injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (injectionSwitch.x) / 1.0) > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-54.64) : _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x)))), (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y)), false || (bool(bool(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))), bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))) || false)), bool(bool((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(47.99, 7054.4987)) : (injectionSwitch)))[1]), vec2(_GLF_FUZZED(3.6), _GLF_FUZZED(-17.23)), bvec2(false, false)), mix(vec2(_GLF_IDENTITY((mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.6), _GLF_FUZZED(-17.23)), bvec2(false, false)))[0], float(mat4x2((mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(3.6, 0.0 + (_GLF_IDENTITY(3.6, float(_GLF_IDENTITY(mat3(3.6, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, abs(0.0)), (mat3(3.6, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, abs(0.0))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))), _GLF_FUZZED(-17.23)), bvec2(false, false)))[0], 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), (mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.6), _GLF_FUZZED(-17.23)), bvec2(false, false)))[1]), vec2(_GLF_FUZZED(690.104), _GLF_IDENTITY(_GLF_FUZZED(4734.9657), mix(float(_GLF_FUZZED(float(true))), float(_GLF_FUZZED(4734.9657)), bool(true)))), bvec2(false, false))), max(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.6), _GLF_FUZZED(-17.23)), _GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, false)))), _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.6), _GLF_FUZZED(-17.23)), bvec2(false, false)), (mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.6), _GLF_FUZZED(-17.23)), bvec2(false, false))) - vec2(0.0, 0.0))))).y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, mix(float(_GLF_FUZZED(1.9)), _GLF_IDENTITY(float(injectionSwitch.x), float(mat2(float(injectionSwitch.x), determinant(mat4(1.0, 0.0, log(1.0), 0.0, length(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 1.0))), bool(true))))) > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bool(true))) && (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))), bool(bool(injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (injectionSwitch.x) / 1.0) > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-54.64) : _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x)))), (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y)), false || (bool(bool(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))), bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))) || false))))), bool(bvec4((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.6), _GLF_FUZZED(-17.23)), bvec2(false, false)), mix(vec2(_GLF_IDENTITY((mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.6), _GLF_FUZZED(-17.23)), bvec2(false, false)))[0], float(mat4x2((mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.6), _GLF_FUZZED(-17.23)), bvec2(false, false)))[0], 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), (mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.6), _GLF_FUZZED(-17.23)), bvec2(false, false)))[1]), vec2(_GLF_FUZZED(690.104), _GLF_FUZZED(4734.9657)), bvec2(false, false))), max(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.6), _GLF_FUZZED(-17.23)), _GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, false)))), _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.6), _GLF_FUZZED(-17.23)), bvec2(false, false)), (mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.6), _GLF_FUZZED(-17.23)), bvec2(false, false))) - vec2(0.0, 0.0))))).y, bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.6), _GLF_FUZZED(-17.23)), bvec2(false, false)), mix(vec2(_GLF_IDENTITY((mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.6), _GLF_FUZZED(-17.23)), bvec2(false, false)))[0], float(mat4x2((mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.6), _GLF_FUZZED(-17.23)), bvec2(false, false)))[0], 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), (mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.6), _GLF_FUZZED(-17.23)), bvec2(false, false)))[1]), vec2(_GLF_FUZZED(690.104), _GLF_FUZZED(4734.9657)), bvec2(false, false))), max(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.6), _GLF_FUZZED(-17.23)), _GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, false)))), _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.6), _GLF_FUZZED(-17.23)), bvec2(false, false)), (mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.6), _GLF_FUZZED(-17.23)), bvec2(false, false))) - vec2(0.0, 0.0))))).y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, mix(float(_GLF_FUZZED(1.9)), _GLF_IDENTITY(float(injectionSwitch.x), float(mat2(float(injectionSwitch.x), determinant(mat4(1.0, 0.0, log(1.0), 0.0, length(vec2(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 1.0))), bool(true)))), clamp(clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, mix(float(_GLF_FUZZED(1.9)), _GLF_IDENTITY(float(injectionSwitch.x), float(mat2(float(injectionSwitch.x), determinant(mat4(1.0, 0.0, log(1.0), 0.0, length(vec2(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 1.0))), bool(true)))), clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, mix(float(_GLF_FUZZED(1.9)), _GLF_IDENTITY(float(injectionSwitch.x), float(mat2(float(injectionSwitch.x), determinant(mat4(1.0, 0.0, log(1.0), 0.0, length(vec2(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 1.0))), bool(true)))), clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, mix(float(_GLF_FUZZED(1.9)), _GLF_IDENTITY(float(injectionSwitch.x), float(mat2(float(injectionSwitch.x), determinant(mat4(1.0, 0.0, log(1.0), 0.0, length(vec2(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 1.0))), bool(true))))))) > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bool(true))) && (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), false || (bool(bool(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))), bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))) || false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.6), _GLF_FUZZED(-17.23)), bvec2(false, false))).y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.6), _GLF_FUZZED(-17.23)), bvec2(false, false))).y)), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.6), _GLF_FUZZED(-17.23)), bvec2(false, false))).y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((8.5 + 33.82))), vec2(_GLF_FUZZED(-258.794), _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), vec2(mat4((injectionSwitch), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0)))) - abs(vec2(0.0, 0.0)))[1]), bvec2(false, true))), mix(vec2(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch)))) / vec2(1.0, 1.0))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.6), _GLF_FUZZED(-17.23)), _GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))).y, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((8.5 + 33.82))), vec2(_GLF_FUZZED(-258.794), _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), vec2(mat4((injectionSwitch), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0)))) - abs(vec2(0.0, 0.0)))[1]), bvec2(false, true))), mix(vec2(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch)))) / vec2(1.0, 1.0))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.6), _GLF_FUZZED(-17.23)), _GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))).y : _GLF_FUZZED(58.10))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false))), true), bvec3(bvec3(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))[0], (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(3.6), _GLF_FUZZED(-17.23)), clamp(vec2(_GLF_FUZZED(3.6), _GLF_FUZZED(-17.23)), vec2(_GLF_FUZZED(3.6), _GLF_FUZZED(-17.23)), vec2(_GLF_FUZZED(3.6), _GLF_FUZZED(-17.23)))), bvec2(false, false))).y, true, true)))))))))), true && ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.6), _GLF_FUZZED(-17.23)), bvec2(false, false))).y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.6), _GLF_FUZZED(-17.23)), bvec2(false, false))).y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((8.5 + 33.82))), vec2(_GLF_FUZZED(-258.794), (injectionSwitch)[1]), bvec2(false, true))), mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.6), _GLF_FUZZED(-17.23)), _GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-70.01)), bool(false))) < injectionSwitch.y))))))).y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.6), _GLF_FUZZED(-17.23)), bvec2(false, false))).y, true, true))))))))))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), true && _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y) || false, ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y) || false) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! ((injectionSwitch.x > injectionSwitch.y))))))))), bool(bool(injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ! (! (! (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))))), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) && true, (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) && true, ! (! (((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) && true)))) && true)) || false), bool(bool(injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (true ? max(injectionSwitch, injectionSwitch) : _GLF_FUZZED(vec2(-1871.8311, 7.2)))), max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y) || false), bool(bool(injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (true ? max(injectionSwitch, injectionSwitch) : _GLF_FUZZED(vec2(-1871.8311, 7.2)))), max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y) || false), bool(bool(injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (true ? max(injectionSwitch, injectionSwitch) : _GLF_FUZZED(vec2(-1871.8311, 7.2)))), max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y) || false), bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))), ! (! ((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y) || false), bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))))))))) || false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mix(vec2(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(0, clamp(0, 0, 0))], ((injectionSwitch)[_GLF_IDENTITY(0, clamp(0, 0, 0))]) / 1.0), (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.6), _GLF_FUZZED(-17.23)), bvec2(false, false)), mix(vec2(_GLF_IDENTITY((mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))[0], _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(mat4((injectionSwitch), 1.0, 0.0, 1.0, 1.0, 0.0, sqrt(0.0), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), (vec2(mat4((injectionSwitch), 1.0, 0.0, 1.0, 1.0, 0.0, sqrt(0.0), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))) * mat2(1.0)))[1]), vec2(_GLF_FUZZED(3.6), _GLF_FUZZED(-17.23)), bvec2(false, false)))[0], float(mat4x2((mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.6), _GLF_FUZZED(-17.23)), bvec2(false, false)))[0], 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), (mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.6), _GLF_FUZZED(-17.23)), bvec2(false, false)))[1]), vec2(_GLF_FUZZED(690.104), _GLF_FUZZED(4734.9657)), bvec2(false, false))), max(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.6), _GLF_FUZZED(-17.23)), _GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false))))))), _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.6), _GLF_FUZZED(-17.23)), bvec2(false, false)), (mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) + 0.0), (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.6), _GLF_FUZZED(-17.23)), bvec2(false, false))) - vec2(0.0, 0.0))))).y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, mix(float(_GLF_FUZZED(1.9)), _GLF_IDENTITY(float(injectionSwitch.x), float(mat2(float(injectionSwitch.x), determinant(mat4(1.0, 0.0, log(1.0), 0.0, length(vec2(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 1.0))), bool(true))))) > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bool(true))) && (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), max(_GLF_IDENTITY((injectionSwitch.x), clamp((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x))), _GLF_IDENTITY((injectionSwitch.x), mix(float(_GLF_FUZZED(1.0)), float((injectionSwitch.x)), bool(true))))) / 1.0) > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))), bool(bool(injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), false || (bool(bool(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))), bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))) || false)), bool(bvec4((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), cos(vec2(0.0, 0.0)) * (vec2((injectionSwitch)[0], (injectionSwitch)[1]))), vec2(_GLF_FUZZED(3.6), _GLF_FUZZED(-17.23)), bvec2(false, false)), mix(vec2(_GLF_IDENTITY((mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.6), _GLF_FUZZED(-17.23)), bvec2(false, false)))[0], float(mat4x2((mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.6), _GLF_FUZZED(-17.23)), bvec2(false, false)))[0], 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), (mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.6), _GLF_FUZZED(-17.23)), bvec2(false, false)))[1]), vec2(_GLF_FUZZED(690.104), _GLF_FUZZED(4734.9657)), bvec2(false, false))), max(mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max(_GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(3.6)), float((injectionSwitch)[1]), bool(true))))), (injectionSwitch)[1]))), vec2(_GLF_FUZZED(3.6), _GLF_FUZZED(-17.23)), _GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, false)))), _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.6), _GLF_FUZZED(-17.23)), bvec2(false, false)), (mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.6), _GLF_FUZZED(-17.23)), bvec2(false, false))) - vec2(0.0, 0.0))))).y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(0.0, -4.3)) : injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(1.9)), _GLF_IDENTITY(float(injectionSwitch.x), float(mat2(float(injectionSwitch.x), determinant(mat4(1.0, 0.0, log(1.0), 0.0, length(vec2(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 1.0))), bool(true)), (true ? _GLF_IDENTITY(mix(float(_GLF_FUZZED(1.9)), _GLF_IDENTITY(float(injectionSwitch.x), float(mat2(float(injectionSwitch.x), determinant(mat4(1.0, 0.0, log(1.0), 0.0, length(vec2(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 1.0))), bool(true)), float(vec3(mix(float(_GLF_FUZZED(1.9)), _GLF_IDENTITY(float(injectionSwitch.x), float(mat2(float(injectionSwitch.x), determinant(mat4(1.0, 0.0, log(1.0), 0.0, length(vec2(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 1.0))), bool(true)), 1.0, 0.0))) : _GLF_FUZZED(412.484)))))) > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bool(true))) && (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))), bool(bool(injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))), _GLF_IDENTITY(false || (bool(bool(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))), (_GLF_IDENTITY(false || (bool(bool(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))), ! (! (false || (bool(bool(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))))) && true))), bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))) || false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-29.94, 7.7)))).x > injectionSwitch.y)))))))))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), false))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(64, clamp(64, 64, 64)), _GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(56473))))));
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) % 2) == _GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-85424) : 0))), (_GLF_IDENTITY((_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-85424) : 0))), _GLF_IDENTITY(max(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), (false ? _GLF_FUZZED(-85424) : 0))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), (false ? _GLF_FUZZED(-85424) : 0))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), (false ? _GLF_FUZZED(_GLF_IDENTITY(-85424, ~ (_GLF_IDENTITY(~ (-85424), max(~ (-85424), ~ (-85424)))))) : 0))), min((_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-74342) : 0))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(-85424, min(-85424, _GLF_IDENTITY(-85424, (-85424) ^ 0)))) : 0, (_GLF_IDENTITY(false ? _GLF_FUZZED(-85424) : 0, clamp(false ? _GLF_FUZZED(-85424) : 0, false ? _GLF_FUZZED(-85424) : 0, false ? _GLF_FUZZED(-85424) : 0))) | (_GLF_IDENTITY(false ? _GLF_FUZZED(-85424) : 0, (false ? _GLF_FUZZED(-85424) : 0) << 0)))))), (_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), (false ? _GLF_FUZZED(-85424) : 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), (false ? _GLF_FUZZED(-85424) : 0)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), (false ? _GLF_FUZZED(-85424) : 0))), min(~ (_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), (false ? _GLF_FUZZED(-85424) : 0))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), (false ? _GLF_FUZZED(-85424) : 0)))))))))), (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-85424) : 0)))), max(max(_GLF_IDENTITY((_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-85424) : 0))), int(ivec3(_GLF_IDENTITY((_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-85424) : 0))), min((_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-85424) : 0))), (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-85424) : 0))))), 0, 0))), (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-85424) : 0)))), max(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (false ? _GLF_FUZZED(-85424) : 0))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (false ? _GLF_FUZZED(-85424) : 0))), _GLF_IDENTITY(0 + ((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (false ? _GLF_FUZZED(-85424) : 0)))), 0 ^ (0 + ((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (false ? _GLF_FUZZED(-85424) : 0)))))))) - (0 & 50443)), (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-85424) : 0)))))))) + 0) << _GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), max(_GLF_IDENTITY(int(int(0)), 0 ^ (int(int(0)))), _GLF_IDENTITY(int(int(0)), (int(int(0))) ^ 0))))), bool(bvec4(_GLF_IDENTITY((subgroup_local_id % 2) == _GLF_IDENTITY(_GLF_IDENTITY(0, (0) << _GLF_IDENTITY(0, int(int(0)))), (_GLF_IDENTITY(0, (0) << _GLF_IDENTITY(0, int(int(0))))) >> 0), _GLF_IDENTITY(bool(bvec3((subgroup_local_id % 2) == _GLF_IDENTITY(_GLF_IDENTITY(0, (0) << _GLF_IDENTITY(0, int(int(0)))), 0 | (_GLF_IDENTITY(0, (0) << _GLF_IDENTITY(0, int(int(0)))))), false, true)), false || (bool(bvec3((subgroup_local_id % 2) == _GLF_IDENTITY(_GLF_IDENTITY(0, (0) << _GLF_IDENTITY(0, int(int(0)))), (_GLF_IDENTITY(0, (0) << _GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), min(int(int(0)), int(int(0))))))) / 1), false, true))))), true, _GLF_IDENTITY(false, (false) || false), true))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bool((_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (bool((_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false)))))))
    barrier();
   read = atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(~ (~ (virtual_gid)), (_GLF_IDENTITY(true ? _GLF_IDENTITY(~ (~ (virtual_gid)), clamp(~ _GLF_IDENTITY((~ (virtual_gid)), ~ (~ ((~ (virtual_gid))))), ~ (~ (virtual_gid)), ~ (~ (virtual_gid)))) : _GLF_FUZZED(next_virtual_gid), uint(uvec3(true ? _GLF_IDENTITY(~ (~ (virtual_gid)), clamp(~ _GLF_IDENTITY((~ (virtual_gid)), ~ (~ ((~ (virtual_gid))))), ~ (~ (virtual_gid)), ~ (~ (virtual_gid)))) : _GLF_FUZZED(next_virtual_gid), 1u, 0u))))))) >> (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) | (0u))) - 0u) >> _GLF_IDENTITY(uint(3u), uint(3u))))], _GLF_IDENTITY((buf[_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))]) - 0u, clamp((buf[virtual_gid]) - 0u, _GLF_IDENTITY((buf[virtual_gid]) - 0u, _GLF_IDENTITY(uint(uvec2((_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], buf[virtual_gid]))) - 0u, 1u)), 0u ^ (uint(uvec2((buf[virtual_gid]) - 0u, _GLF_IDENTITY(1u, (1u) | (1u))))))), (buf[virtual_gid]) - 0u))), 4, _GLF_IDENTITY(64, (64) ^ 0), _GLF_IDENTITY(2, min(2, 2)));
  }
 else
  {
   read = atomicLoad(buf[virtual_gid], 4, 64, 2);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && ((false)))) && true))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
