#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), false, false, false)), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), false, false, false)), bool(_GLF_IDENTITY(bvec2(bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), false, false, false)), false), bvec2(bvec2(bvec2(bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), false, false, false)), false))))))))), bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false, false)), (bool(bvec4(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false, false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))))))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))) && true))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) + uvec3(0u, 0u, 0u)).x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, 0u | (gl_WorkGroupID.x));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))))))
    return;
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_DEAD(false)))) && true)), bool(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && true)), false))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 uint subgroup_base = subgroup_id * subgroup_size;
 uint virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (0u ^ 0u));
 uint next_virtual_gid = workgroup_base + subgroup_base + (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u + (_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), (subgroup_local_id) << 0u)), 0u | (0u + (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))))), subgroup_local_id)))) + 1), ((subgroup_local_id + 1)) - 0u), min(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY(true ? (subgroup_local_id) : _GLF_FUZZED(workgroup_id), (true ? true ? (subgroup_local_id) : _GLF_FUZZED(workgroup_id) : _GLF_FUZZED(subgroup_local_id))))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((subgroup_local_id), (true ? (subgroup_local_id) : _GLF_FUZZED(workgroup_id)))), 0u | (uint(_GLF_IDENTITY((subgroup_local_id), (true ? (subgroup_local_id) : _GLF_FUZZED(workgroup_id)))))))), (_GLF_IDENTITY((subgroup_local_id), (true ? _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | ((subgroup_local_id))) : _GLF_FUZZED(workgroup_id)))) | (_GLF_IDENTITY((subgroup_local_id), (true ? (subgroup_local_id) : _GLF_FUZZED(workgroup_id)))))) + _GLF_IDENTITY(1, (1) << 0)), 0u | ((_GLF_IDENTITY(subgroup_local_id, 0u + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY(true ? (subgroup_local_id) : _GLF_FUZZED(workgroup_id), (true ? true ? (subgroup_local_id) : _GLF_FUZZED(workgroup_id) : _GLF_FUZZED(subgroup_local_id))))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((subgroup_local_id), (true ? (subgroup_local_id) : _GLF_FUZZED(workgroup_id)))), 0u | (uint(_GLF_IDENTITY((subgroup_local_id), (true ? (subgroup_local_id) : _GLF_FUZZED(workgroup_id)))))))), (_GLF_IDENTITY((subgroup_local_id), (true ? _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | ((subgroup_local_id))) : _GLF_FUZZED(workgroup_id)))) | (_GLF_IDENTITY((subgroup_local_id), (true ? (subgroup_local_id) : _GLF_FUZZED(workgroup_id)))))) + _GLF_IDENTITY(1, (1) << 0)))), ((subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, 1)))) - 0u), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)) + 1), ((subgroup_local_id + 1)) - _GLF_IDENTITY(0u, (0u) << (0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, 1u)))))) | 0u)), (uint(1u)) | (_GLF_IDENTITY(uint(1u), max(uint(1u), uint(1u)))))) * 1u), (_GLF_IDENTITY(uint(1u), (uint(1u)) | 0u)) | (uint(1u))), uint(1u))))))) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) - 0u)))) ^ 0u));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 uint read = 0;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, 1u * (next_virtual_gid))], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), uint(uvec3(_GLF_FUZZED(subgroup_id), 0u, 0u))) : uint(1)), (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_FUZZED(subgroup_id), 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))) ? _GLF_FUZZED(workgroup_base) : 0u))), clamp(uvec3(_GLF_FUZZED(subgroup_id), 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_base) : 0u))), uvec3(_GLF_FUZZED(subgroup_id), 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_base) : 0u))), uvec3(_GLF_FUZZED(subgroup_id), 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, (true ? _GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u) : _GLF_FUZZED(subgroup_base)))) : 0u)))))), (uint(_GLF_IDENTITY(uvec3(_GLF_FUZZED(subgroup_id), 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))) ? _GLF_FUZZED(workgroup_base) : 0u))), clamp(uvec3(_GLF_FUZZED(subgroup_id), 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_base) : 0u))), uvec3(_GLF_FUZZED(subgroup_id), 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_base) : 0u))), uvec3(_GLF_FUZZED(subgroup_id), 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, (true ? _GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u) : _GLF_FUZZED(subgroup_base)))) : 0u))))))) | (uint(_GLF_IDENTITY(uvec3(_GLF_FUZZED(subgroup_id), 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))) ? _GLF_FUZZED(workgroup_base) : 0u))), clamp(uvec3(_GLF_FUZZED(subgroup_id), 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_base) : 0u))), uvec3(_GLF_FUZZED(subgroup_id), 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_base) : 0u))), uvec3(_GLF_FUZZED(subgroup_id), 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, (true ? _GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u) : _GLF_FUZZED(subgroup_base)))) : 0u))))))))) : _GLF_IDENTITY(_GLF_IDENTITY(uint(1), min(uint(1), _GLF_IDENTITY(uint(1), (true ? uint(1) : _GLF_FUZZED(workgroup_base))))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(1), min(uint(1), _GLF_IDENTITY(uint(1), (true ? uint(1) : _GLF_FUZZED(workgroup_base)))))), (uint(_GLF_IDENTITY(uint(1), min(uint(1), _GLF_IDENTITY(uint(1), (true ? uint(1) : _GLF_FUZZED(workgroup_base))))))) ^ 0u)))), ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y)) ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), uint(uvec3(_GLF_FUZZED(subgroup_id), 0u, 0u))) : uint(1))) >> 0u)) << 0u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, uint(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) | 0u), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(0u, min(0u, 0u)), 0u)))), min(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY((0u), _GLF_IDENTITY(0u ^ ((0u)), (0u ^ ((0u))) << 0u))))), _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, max(0u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) / 1u), (0u) | (0u))) ^ _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, 0u ^ (0u)) + (0u))))) ^ (uint(1)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(0u, min(0u, 0u)), 0u)))), min(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY((0u), _GLF_IDENTITY(0u ^ ((0u)), (0u ^ ((0u))) << 0u))))), _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, max(0u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), (_GLF_IDENTITY(0u, (0u) | (0u))) ^ _GLF_IDENTITY(0u, 0u + (0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(0u, min(0u, 0u)), 0u)))), min(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY((0u), _GLF_IDENTITY(0u ^ ((0u)), (0u ^ ((0u))) << 0u))))), _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, max(0u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), (_GLF_IDENTITY(0u, (0u) | (0u))) ^ _GLF_IDENTITY(0u, 0u + (0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(0u, min(0u, 0u)), 0u)))), min(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY((0u), _GLF_IDENTITY(0u ^ ((0u)), (0u ^ ((0u))) << 0u))))), _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, max(0u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), (_GLF_IDENTITY(0u, (0u) | (0u))) ^ _GLF_IDENTITY(0u, 0u + (0u)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(0u, min(0u, 0u)), 0u)))), min(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY((0u), _GLF_IDENTITY(0u ^ ((0u)), (0u ^ ((0u))) << 0u))))), _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, max(0u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), (_GLF_IDENTITY(0u, (0u) | (0u))) ^ _GLF_IDENTITY(0u, 0u + (0u)))))))) + 0u) ^ (uint(1)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ((0u)) | ((0u))) | (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, uint(_GLF_ONE(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 0.0, abs(1.0), 0.0, 0.0, sin(0.0), cos(0.0), _GLF_IDENTITY(dot(vec2(sqrt(0.0), 1.0), vec2(0.0, 1.0)), dot(vec2(sqrt(0.0), 1.0), vec2(0.0, 1.0)))))), injectionSwitch.y))))), _GLF_IDENTITY(0u, min(0u, 0u)), 0u)))), min(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY((0u), _GLF_IDENTITY(_GLF_IDENTITY(0u ^ ((0u)), (_GLF_IDENTITY(0u ^ ((0u)), ~ (~ (0u ^ ((0u)))))) ^ 0u), (0u ^ _GLF_IDENTITY(((0u)), max(_GLF_IDENTITY(((0u)), min(((0u)), ((0u)))), ((0u))))) << 0u))))), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) | (_GLF_IDENTITY(0u, max(0u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), ~ (~ (_GLF_IDENTITY((0u), clamp((0u), _GLF_IDENTITY((0u), ((0u)) + 0u), (0u))) | (0u))))), (_GLF_IDENTITY(0u, (0u) | (0u))) ^ _GLF_IDENTITY(0u, 0u + (0u))))) ^ (uint(1))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), uint(uvec3(_GLF_FUZZED(subgroup_id), _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (_GLF_IDENTITY(0u, min(0u, 0u))) >> 0u) + (_GLF_IDENTITY(0u, (0u) << 0u))), 0u))) : uint(1)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), uint(uvec3(_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), ~ (~ (_GLF_FUZZED(subgroup_id))))) | (_GLF_FUZZED(subgroup_id))), 0u, 0u))) : uint(1), ~ (~ (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), uint(uvec3(_GLF_FUZZED(subgroup_id), 0u, 0u))) : uint(1))))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), uint(uvec3(_GLF_FUZZED(subgroup_id), 0u, 0u))) : uint(1))) >> 0u)) << 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (0u)), ~ (~ (_GLF_IDENTITY(0u, 0u | (0u)))))) | (0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) | (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(0u, min(0u, 0u)), 0u)))), min(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY(_GLF_IDENTITY((0u), _GLF_IDENTITY(0u ^ ((0u)), (0u ^ ((0u))) << 0u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((0u), _GLF_IDENTITY(0u ^ ((0u)), (0u ^ ((0u))) << 0u)), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY((0u), _GLF_IDENTITY(0u ^ ((0u)), (0u ^ ((0u))) << 0u))))), ((_GLF_IDENTITY(_GLF_IDENTITY((0u), _GLF_IDENTITY(0u ^ ((0u)), (0u ^ ((0u))) << 0u)), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY((0u), _GLF_IDENTITY(0u ^ ((0u)), (0u ^ ((0u))) << 0u)))))) ^ 0u) + 0u)))), max(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, uint(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), injectionSwitch.y))))), _GLF_IDENTITY(0u, min(0u, 0u)), 0u)))), min(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY((0u), _GLF_IDENTITY(0u ^ ((0u)), (0u ^ ((0u))) << 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), 0u ^ (uint(uvec3(0u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))), _GLF_IDENTITY(0u, min(0u, 0u)), 0u)))), min(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), (_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), (0u & 155801u) | ((_GLF_IDENTITY(0u, (0u) / 1u))))) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))) ^ ((0u)), (0u ^ ((0u))) << 0u))))))), _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, max(0u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), (_GLF_IDENTITY(0u, (0u) | (0u))) ^ _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u + (0u), ~ (~ (0u + (0u)))), (_GLF_IDENTITY(0u + (0u), ~ (~ (0u + (0u))))) * 1u))))) ^ (_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) << 0)), min(uint(1), uint(1)))))) >> _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (_GLF_IDENTITY(uint(1), _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), uint(uvec2((0u) | (0u), 1u)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), min(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY((0u), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(_GLF_IDENTITY(bitfieldReverse(workgroup_base), (bitfieldReverse(workgroup_base)) | _GLF_IDENTITY((bitfieldReverse(workgroup_base)), ((bitfieldReverse(workgroup_base))) - 0u))) : _GLF_IDENTITY((0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))), min(~ (_GLF_IDENTITY((0u), clamp((_GLF_IDENTITY(0u, (0u) | (0u))), (0u), (0u)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))), (_GLF_IDENTITY((0u), _GLF_IDENTITY(clamp((0u), (0u), (0u)), uint(uvec3(_GLF_IDENTITY(clamp((0u), (0u), (0u)), clamp(clamp((0u), (0u), (0u)), clamp((0u), (0u), (0u)), _GLF_IDENTITY(clamp((0u), (0u), (0u)), clamp(clamp((0u), (0u), (0u)), clamp((0u), (0u), (0u)), _GLF_IDENTITY(clamp((0u), (0u), (0u)), 1u * (clamp((0u), (0u), (0u)))))))), 1u, 1u))))) | (_GLF_IDENTITY(_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))), (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))) | 0u))))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), min(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY((0u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(bitfieldReverse(workgroup_base), (bitfieldReverse(workgroup_base)) | (bitfieldReverse(workgroup_base)))) : _GLF_IDENTITY(_GLF_IDENTITY((0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))), min(~ (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))), (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))) | (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))))))))), max(_GLF_IDENTITY((0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))), min(~ (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))), (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))) | (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))))))))), _GLF_IDENTITY((0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))), min(~ (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))), (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))) | (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))))))))))))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), min(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY((0u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(bitfieldReverse(workgroup_base), _GLF_IDENTITY((bitfieldReverse(workgroup_base)), clamp((bitfieldReverse(workgroup_base)), (bitfieldReverse(workgroup_base)), (bitfieldReverse(workgroup_base)))) | (bitfieldReverse(workgroup_base)))) : _GLF_IDENTITY((0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(0u, 1u * (0u))))), clamp((0u), (0u), (0u)))), min(~ (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))), (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))) | _GLF_IDENTITY((_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))), uint(uint((_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))))))))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), min(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY((0u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(bitfieldReverse(workgroup_base), (bitfieldReverse(workgroup_base)) | (bitfieldReverse(workgroup_base)))) : _GLF_IDENTITY((0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((0u), clamp(_GLF_IDENTITY((_GLF_IDENTITY(0u, ((0u & 115393u) >> _GLF_IDENTITY(uint(8u), uint(8u))) | (0u))), (_GLF_IDENTITY((_GLF_IDENTITY(0u, ((0u & 115393u) >> _GLF_IDENTITY(uint(8u), uint(8u))) | (0u))), ((_GLF_IDENTITY(0u, ((0u & 115393u) >> _GLF_IDENTITY(uint(8u), uint(8u))) | (0u)))) | ((_GLF_IDENTITY(0u, ((_GLF_IDENTITY(0u & 115393u, (0u & 115393u) | (0u & 115393u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, _GLF_IDENTITY(uint(uvec2(8u, 1u)), (uint(uvec2(8u, 1u))) ^ 0u))), uint(8u))) | (0u)))))) ^ 0u), (0u), (0u)))), min(~ (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))), (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))) | (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))))))))))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), 1u * (_GLF_IDENTITY(0u, (0u) | (0u)))), min(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), clamp((0u), _GLF_IDENTITY((0u), ((0u)) >> 0u), (0u))) | (0u)), _GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY((0u), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)) ? _GLF_FUZZED(_GLF_IDENTITY(bitfieldReverse(workgroup_base), (bitfieldReverse(workgroup_base)) | (bitfieldReverse(workgroup_base)))) : _GLF_IDENTITY((0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))), min(~ (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))), (_GLF_IDENTITY(_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))), min(_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))), _GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))))) | (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))))))))))), (0u >> _GLF_IDENTITY(uint(7u), uint(7u))) ^ (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)) ? _GLF_FUZZED(_GLF_IDENTITY(bitfieldReverse(workgroup_base), (bitfieldReverse(workgroup_base)) | (bitfieldReverse(workgroup_base)))) : _GLF_IDENTITY((0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))), min(~ (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))), (_GLF_IDENTITY(_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))), min(_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))), _GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))))) | (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))))))))))), ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)) ? _GLF_FUZZED(_GLF_IDENTITY(bitfieldReverse(workgroup_base), (bitfieldReverse(workgroup_base)) | (bitfieldReverse(workgroup_base)))) : _GLF_IDENTITY((0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))), min(~ (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))), (_GLF_IDENTITY(_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))), min(_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))), _GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))))) | (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))))))))))) | (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)) ? _GLF_FUZZED(_GLF_IDENTITY(bitfieldReverse(workgroup_base), (bitfieldReverse(workgroup_base)) | (bitfieldReverse(workgroup_base)))) : _GLF_IDENTITY((0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))), min(~ (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))), (_GLF_IDENTITY(_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))), min(_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))), _GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))))) | (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))))))))))), ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)) ? _GLF_FUZZED(_GLF_IDENTITY(bitfieldReverse(workgroup_base), (bitfieldReverse(workgroup_base)) | (bitfieldReverse(workgroup_base)))) : _GLF_IDENTITY((0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))), min(~ (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))), (_GLF_IDENTITY(_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))), min(_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))), _GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))))) | (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))))))))))) << 0u))))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), min(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) - 0u)) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))) ^ 1u) | (_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, 0u ^ (0u)))))))), _GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY((0u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(bitfieldReverse(workgroup_base), (bitfieldReverse(workgroup_base)) | (bitfieldReverse(workgroup_base)))) : _GLF_IDENTITY((0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))), min(~ (_GLF_IDENTITY((0u), clamp((0u), (0u), (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_base) : 0u)), 0u)), 0u, _GLF_IDENTITY(0u, (0u) | (0u)))))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY((0u), clamp((0u), (0u), _GLF_IDENTITY((0u), min(_GLF_IDENTITY((0u), ((0u)) >> 0u), (0u))))), (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))) | (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))))))))))))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), (0u) | (0u)), _GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY((0u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(bitfieldReverse(workgroup_base), (bitfieldReverse(workgroup_base)) | (bitfieldReverse(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))))) : _GLF_IDENTITY((0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))), min(~ (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))), clamp(_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))), _GLF_IDENTITY((0u), clamp((0u), (0u), (0u))), _GLF_IDENTITY(_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))), (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))) - 0u))), (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))) | (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))))))))))))))), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), min(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY((0u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(bitfieldReverse(workgroup_base), (bitfieldReverse(workgroup_base)) | (bitfieldReverse(workgroup_base)))) : _GLF_IDENTITY((0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))), min(~ (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))), (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))) | (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))))))))))))))), uint(uvec4(~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), min(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY((0u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(bitfieldReverse(workgroup_base), (bitfieldReverse(workgroup_base)) | (bitfieldReverse(workgroup_base)))) : _GLF_IDENTITY((0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))), min(~ (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))), (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))) | (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))))))))))))))), 1u, 0u, 0u))), (true ? _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), min(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY((0u), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(_GLF_IDENTITY(bitfieldReverse(workgroup_base), (bitfieldReverse(workgroup_base)) | (bitfieldReverse(workgroup_base)))) : _GLF_IDENTITY((0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))), min(~ (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))), (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))) | (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))))))))))))))), uint(uvec4(~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), min(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, min(0u, 0u)))), 1u))))), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) | _GLF_IDENTITY((0u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(bitfieldReverse(workgroup_base), (bitfieldReverse(workgroup_base)) | (bitfieldReverse(workgroup_base)))) : _GLF_IDENTITY((0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))), min(~ (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))), (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))) | (_GLF_IDENTITY((0u), clamp((0u), (_GLF_IDENTITY(0u, (0u) | (0u))), (0u)))))))))))))))), 1u, 0u, 0u))) : _GLF_FUZZED(clamp((false ? subgroup_base : 30607u), 89222u, read))))), uint(uvec2((_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), min(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY((0u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(bitfieldReverse(workgroup_base), (bitfieldReverse(workgroup_base)) | (bitfieldReverse(workgroup_base)))) : _GLF_IDENTITY((0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))), min(~ (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))), (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))) | (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))))))))))))))), uint(uvec4(~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), min(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY((0u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(bitfieldReverse(workgroup_base), (bitfieldReverse(workgroup_base)) | (bitfieldReverse(workgroup_base)))) : _GLF_IDENTITY((0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))), min(~ (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))), (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))) | (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))))))))))))))), 1u, 0u, 0u))), (true ? _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), min(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY((0u), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(_GLF_IDENTITY(bitfieldReverse(workgroup_base), (bitfieldReverse(workgroup_base)) | (bitfieldReverse(workgroup_base)))) : _GLF_IDENTITY((0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))), min(~ (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))), (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))) | (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))))))))))))))), uint(uvec4(~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), min(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, min(0u, 0u)))), 1u))))), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) | _GLF_IDENTITY((0u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(bitfieldReverse(workgroup_base), (bitfieldReverse(workgroup_base)) | (bitfieldReverse(workgroup_base)))) : _GLF_IDENTITY((0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))), min(~ (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))), (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))) | (_GLF_IDENTITY((0u), clamp((0u), (_GLF_IDENTITY(0u, (0u) | (0u))), (0u)))))))))))))))), 1u, 0u, 0u))) : _GLF_FUZZED(clamp((false ? subgroup_base : 30607u), 89222u, read))))), uint(_GLF_ONE(1.0, injectionSwitch.y))))))) << 0u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), 1u * ((0u) | (0u)))), min(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))))) | (0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) | _GLF_IDENTITY(_GLF_IDENTITY((0u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(bitfieldReverse(workgroup_base), (bitfieldReverse(workgroup_base)) | (bitfieldReverse(workgroup_base)))) : _GLF_IDENTITY((0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))), min(~ (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))), (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))) | (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))))))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((0u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(bitfieldReverse(workgroup_base), (bitfieldReverse(workgroup_base)) | (bitfieldReverse(workgroup_base)))) : _GLF_IDENTITY((0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))), min(~ (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))), (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))) | (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))))))))))), (_GLF_IDENTITY((0u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(bitfieldReverse(workgroup_base), (bitfieldReverse(workgroup_base)) | (bitfieldReverse(workgroup_base)))) : _GLF_IDENTITY((0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))), min(~ (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))), (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))) | (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))))))))))))) << 0u), _GLF_IDENTITY((0u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(bitfieldReverse(workgroup_base), (bitfieldReverse(workgroup_base)) | (bitfieldReverse(workgroup_base)))) : _GLF_IDENTITY((0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))), min(~ (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))), (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))) | (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))))))))))), _GLF_IDENTITY(_GLF_IDENTITY((0u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(bitfieldReverse(workgroup_base), (bitfieldReverse(workgroup_base)) | (bitfieldReverse(workgroup_base)))) : _GLF_IDENTITY((0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))), min(~ (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))), (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))) | (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))))))))))), uint(uvec2(_GLF_IDENTITY((0u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(bitfieldReverse(workgroup_base), (bitfieldReverse(workgroup_base)) | (bitfieldReverse(workgroup_base)))) : _GLF_IDENTITY((0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))), min(~ (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))), (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))) | (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))))))))))), 0u)))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), min(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY((0u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(bitfieldReverse(workgroup_base), (bitfieldReverse(workgroup_base)) | (bitfieldReverse(workgroup_base)))) : _GLF_IDENTITY((0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))), min(~ (_GLF_IDENTITY((0u), clamp((0u), (0u), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) * 1u)))) - 0u))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))), (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))) | (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))), (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))) | (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))))))))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), min(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), max((0u), (0u)))) << 0u) | _GLF_IDENTITY((0u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(bitfieldReverse(workgroup_base), (bitfieldReverse(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u)) ^ 0u))) | (bitfieldReverse(workgroup_base)))) : _GLF_IDENTITY((0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))), min(~ (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))), (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))) | (_GLF_IDENTITY((0u), clamp((0u), _GLF_IDENTITY((0u), ((0u)) | ((0u))), (0u))))))))))))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), min(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY((0u), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 0.0))).x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(bitfieldReverse(workgroup_base), (bitfieldReverse(workgroup_base)) | (bitfieldReverse(workgroup_base)))) : _GLF_IDENTITY((0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((0u), _GLF_IDENTITY(clamp((0u), (0u), (0u)), (0u ^ 0u) | (clamp((0u), (0u), (0u)))))), min(~ (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))), (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))) | (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))), (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))) | (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))))), max(_GLF_IDENTITY(_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))), (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))) | (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))))), _GLF_IDENTITY(_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))), (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))) | (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))))))))))))))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), min(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ((0u)) - 0u) | _GLF_IDENTITY((0u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(bitfieldReverse(workgroup_base), (bitfieldReverse(workgroup_base)) | (bitfieldReverse(workgroup_base)))) : _GLF_IDENTITY((0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))), min(~ (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))), (_GLF_IDENTITY((0u), clamp(_GLF_IDENTITY((0u), ((0u)) / 1u), (0u), (0u)))) | (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))))))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), min(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY((0u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(bitfieldReverse(workgroup_base), (bitfieldReverse(workgroup_base)) | (bitfieldReverse(workgroup_base)))) : _GLF_IDENTITY((0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))), min(~ _GLF_IDENTITY((_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))), uint(uvec2((_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))), 0u))), ~ (_GLF_IDENTITY(_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))), (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))) | (_GLF_IDENTITY((0u), clamp((0u), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) / 1u)), (0u))))))))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), min(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY((0u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(bitfieldReverse(workgroup_base), (bitfieldReverse(workgroup_base)) | (bitfieldReverse(workgroup_base)))) : _GLF_IDENTITY((0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))), min(~ (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(packUnorm2x16(injectionSwitch)) : 0u))), clamp((0u), (0u), (0u))), (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))) | (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))))))))))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), min(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY((0u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(bitfieldReverse(workgroup_base), (bitfieldReverse(workgroup_base)) | (_GLF_IDENTITY(bitfieldReverse(workgroup_base), max(bitfieldReverse(workgroup_base), bitfieldReverse(workgroup_base)))))) : _GLF_IDENTITY((0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((0u), clamp((0u), (0u), (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u)))))), min(~ (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))), (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))) | (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))))))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), min(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY((0u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(bitfieldReverse(workgroup_base), (bitfieldReverse(workgroup_base)) | _GLF_IDENTITY((bitfieldReverse(workgroup_base)), ((bitfieldReverse(workgroup_base))) ^ 0u))) : _GLF_IDENTITY((0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))), min(~ (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))), (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))) | (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))))))))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), min(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(next_virtual_gid)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(bitfieldReverse(workgroup_base), (bitfieldReverse(workgroup_base)) | (bitfieldReverse(workgroup_base)))) : _GLF_IDENTITY((0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))), min(~ (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY((0u), _GLF_IDENTITY(clamp((0u), (0u), (0u)), (false ? _GLF_FUZZED(subgroup_local_id) : clamp((0u), (0u), (0u))))), (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))) | (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))))))))))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), min(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (0u) | _GLF_IDENTITY((0u), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))) ? _GLF_FUZZED(_GLF_IDENTITY(bitfieldReverse(workgroup_base), (bitfieldReverse(workgroup_base)) | (bitfieldReverse(workgroup_base)))) : _GLF_IDENTITY((0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))), max(_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))), _GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))))), min(~ (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))), (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))) | (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))))))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), min(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY((0u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(bitfieldReverse(workgroup_base), (bitfieldReverse(workgroup_base)) | (bitfieldReverse(workgroup_base))), (_GLF_IDENTITY(bitfieldReverse(workgroup_base), (bitfieldReverse(workgroup_base)) | (bitfieldReverse(workgroup_base)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) : _GLF_IDENTITY((0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))), _GLF_IDENTITY(min(~ (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))), (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))) | (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))))))), ~ (~ (_GLF_IDENTITY(min(~ (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))), (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))) | (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))))))), 0u | (min(~ (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))), (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))) | (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))))))))))))))))))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), (0u) | (0u)), _GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY((0u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(bitfieldReverse(workgroup_base), _GLF_IDENTITY((bitfieldReverse(workgroup_base)) | (bitfieldReverse(workgroup_base)), max((bitfieldReverse(workgroup_base)) | (bitfieldReverse(workgroup_base)), (bitfieldReverse(workgroup_base)) | (bitfieldReverse(workgroup_base)))))) : _GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))), min(~ (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))), (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))) | (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))))))))))))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), min(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY((0u), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))) ? _GLF_FUZZED(_GLF_IDENTITY(bitfieldReverse(workgroup_base), (bitfieldReverse(workgroup_base)) | (bitfieldReverse(workgroup_base)))) : _GLF_IDENTITY((0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((0u), clamp((0u), (0u), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))), min(~ (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))), (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))) | (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))))))))))))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), min(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY((0u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(bitfieldReverse(workgroup_base), (bitfieldReverse(workgroup_base)) | (bitfieldReverse(workgroup_base)))) : _GLF_IDENTITY((0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))), min(~ (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))), (_GLF_IDENTITY((0u), clamp(_GLF_IDENTITY((0u), 0u | ((0u))), (0u), (0u)))) | (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))))))))))))))))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), min(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY((0u), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))) ? _GLF_FUZZED(_GLF_IDENTITY(bitfieldReverse(workgroup_base), (bitfieldReverse(workgroup_base)) | (bitfieldReverse(workgroup_base)))) : _GLF_IDENTITY((0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((0u), clamp((0u), (0u), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))), min(~ (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))), (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))) | (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))))))))))))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), min(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY((0u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(bitfieldReverse(workgroup_base), (bitfieldReverse(workgroup_base)) | (bitfieldReverse(workgroup_base)))) : _GLF_IDENTITY((0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))), min(~ (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))), (_GLF_IDENTITY((0u), clamp(_GLF_IDENTITY((0u), 0u | ((0u))), (0u), (0u)))) | (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))))))))))))))))) << 0u), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), min(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY((0u), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))) ? _GLF_FUZZED(_GLF_IDENTITY(bitfieldReverse(workgroup_base), (bitfieldReverse(workgroup_base)) | (bitfieldReverse(workgroup_base)))) : _GLF_IDENTITY((0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((0u), clamp((0u), (0u), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))), min(~ (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))), (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))) | (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))))))))))))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), min(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY((0u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(bitfieldReverse(workgroup_base), (bitfieldReverse(workgroup_base)) | (bitfieldReverse(workgroup_base)))) : _GLF_IDENTITY((0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))), min(~ (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))), (_GLF_IDENTITY((0u), clamp(_GLF_IDENTITY((0u), 0u | ((0u))), (0u), (0u)))) | (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))))))))))))))))) << 0u))))) >> 0u))))) | 0u)), _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), _GLF_IDENTITY(uint(uvec3((0u), (59892u & 0u), 1u)), (uint(uvec3((0u), (59892u & 0u), 1u))) - 0u)) | (0u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) | (0u)), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) | (0u))) + 0u), (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), ((0u) | (0u)) | ((0u) | (0u))))) ^ 0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), (0u ^ 0u) | ((0u) | (0u)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), (0u ^ 0u) | ((0u) | (0u)))), ~ (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), (0u ^ 0u) | ((0u) | (0u))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), ((0u) | _GLF_IDENTITY((0u), ((0u)) >> 0u)) | ((0u) | (0u)))), ~ (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), ((0u) | (0u)) | ((0u) | (_GLF_IDENTITY(0u, ~ (~ (0u))))))))))) ^ _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), (~ (0u)) / uint(_GLF_ONE(1.0, injectionSwitch.y))), min(~ (0u), ~ (0u))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), (~ (0u)) / uint(_GLF_ONE(1.0, injectionSwitch.y))), min(~ (0u), ~ (0u)))) >> ((0u | 0u) >> _GLF_IDENTITY(uint(1u), uint(1u)))))), 0u | ((_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), ((0u) | _GLF_IDENTITY((0u), ((0u)) >> 0u)) | ((0u) | (0u)))), ~ (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), ((0u) | (0u)) | ((0u) | (_GLF_IDENTITY(0u, ~ (~ (0u))))))))))) ^ _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), (~ (0u)) / uint(_GLF_ONE(1.0, injectionSwitch.y))), min(~ (0u), ~ (0u))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), (~ (0u)) / uint(_GLF_ONE(1.0, injectionSwitch.y))), min(~ (0u), ~ (0u)))) >> ((0u | 0u) >> _GLF_IDENTITY(uint(1u), uint(1u)))))))))) << 0u, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u) | (0u), 0u ^ ((0u) | (0u))), (0u ^ 0u) | ((0u) | (0u)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), (0u ^ 0u) | ((0u) | (0u)))), (_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) | (0u))))), 0u + (_GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) | (0u))))), ((_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) | (0u)))))) | 0u))) | (0u), (0u ^ 0u) | ((0u) | (0u))))) / uint(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), (0u ^ 0u) | ((0u) | (0u))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), ((0u) | _GLF_IDENTITY((0u), ((0u)) >> 0u)) | ((0u) | (0u)))), ~ (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), ((0u) | (0u)) | ((0u) | (_GLF_IDENTITY(0u, ~ (~ (0u))))))))))) ^ _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), (~ (0u)) / uint(_GLF_ONE(1.0, injectionSwitch.y))), min(~ (0u), ~ (0u))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), (~ (0u)) / uint(_GLF_ONE(1.0, injectionSwitch.y))), min(~ (0u), ~ (0u)))) >> ((0u | 0u) >> _GLF_IDENTITY(uint(1u), uint(1u)))))))), uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u) | (0u), 0u ^ ((0u) | (0u))), (0u ^ 0u) | ((0u) | (0u)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), (0u ^ 0u) | ((0u) | (0u)))), (_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) | (0u))))), 0u + (_GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) | (0u))))), ((_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) | (0u)))))) | 0u))) | (0u), (0u ^ 0u) | ((0u) | (0u))))) / uint(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), (0u ^ 0u) | ((0u) | (0u))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), ((0u) | _GLF_IDENTITY((0u), ((0u)) >> 0u)) | ((0u) | (0u)))), ~ (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), ((0u) | (0u)) | ((0u) | (_GLF_IDENTITY(0u, ~ (~ (0u))))))))))) ^ _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), (~ (0u)) / uint(_GLF_ONE(1.0, injectionSwitch.y))), min(~ (0u), ~ (0u))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), (~ (0u)) / uint(_GLF_ONE(1.0, injectionSwitch.y))), min(~ (0u), ~ (0u)))) >> ((0u | 0u) >> _GLF_IDENTITY(uint(1u), uint(1u)))))))), 1u * (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u) | (0u), 0u ^ ((0u) | (0u))), (0u ^ 0u) | ((0u) | (0u)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), (0u ^ 0u) | ((0u) | (0u)))), (_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) | (0u))))), 0u + (_GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) | (0u))))), ((_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) | (0u)))))) | 0u))) | (0u), (0u ^ 0u) | ((0u) | (0u))))) / uint(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), (0u ^ 0u) | ((0u) | (0u))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), ((0u) | _GLF_IDENTITY((0u), ((0u)) >> 0u)) | ((0u) | (0u)))), ~ (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), ((0u) | (0u)) | ((0u) | (_GLF_IDENTITY(0u, ~ (~ (0u))))))))))) ^ _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), (~ (0u)) / uint(_GLF_ONE(1.0, injectionSwitch.y))), min(~ (0u), ~ (0u))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), (~ (0u)) / uint(_GLF_ONE(1.0, injectionSwitch.y))), min(~ (0u), ~ (0u)))) >> ((0u | 0u) >> _GLF_IDENTITY(uint(1u), uint(1u)))))))), max((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u) | (0u), 0u ^ ((0u) | (0u))), (0u ^ 0u) | ((0u) | (0u)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), (0u ^ 0u) | ((0u) | (0u)))), (_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) | (0u))))), 0u + (_GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) | (0u))))), ((_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) | (0u)))))) | 0u))) | (0u), (0u ^ 0u) | ((0u) | (0u))))) / uint(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), (0u ^ 0u) | ((0u) | (0u))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), ((0u) | _GLF_IDENTITY((0u), ((0u)) >> 0u)) | ((0u) | (0u)))), ~ (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), ((0u) | (0u)) | ((0u) | (_GLF_IDENTITY(0u, ~ (~ (0u))))))))))) ^ _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), (~ (0u)) / uint(_GLF_ONE(1.0, injectionSwitch.y))), min(~ (0u), ~ (0u))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), (~ (0u)) / uint(_GLF_ONE(1.0, injectionSwitch.y))), min(~ (0u), ~ (0u)))) >> ((0u | 0u) >> _GLF_IDENTITY(uint(1u), uint(1u)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u) | (0u), 0u ^ ((0u) | (0u))), (0u ^ 0u) | ((0u) | (0u)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), (0u ^ 0u) | ((0u) | (0u)))), (_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) | (0u))))), 0u + (_GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) | (0u))))), ((_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) | (0u)))))) | 0u))) | (0u), (0u ^ 0u) | ((0u) | (0u))))) / uint(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), (0u ^ 0u) | ((0u) | (0u))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), ((0u) | _GLF_IDENTITY((0u), ((0u)) >> 0u)) | ((0u) | (0u)))), ~ (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), ((0u) | (0u)) | ((0u) | (_GLF_IDENTITY(0u, ~ (~ (0u))))))))))) ^ _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), (~ (0u)) / uint(_GLF_ONE(1.0, injectionSwitch.y))), min(~ (0u), ~ (0u))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), (~ (0u)) / uint(_GLF_ONE(1.0, injectionSwitch.y))), min(~ (0u), ~ (0u)))) >> ((0u | 0u) >> _GLF_IDENTITY(uint(1u), uint(1u)))))))))))), 1u, 1u, 1u))) << 0u, 1u, 0u, 0u)), ~ (~ (_GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), (0u ^ 0u) | ((0u) | (0u)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), (0u ^ 0u) | ((0u) | (0u)))), ~ (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), (0u ^ 0u) | ((0u) | (0u))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), ((0u) | _GLF_IDENTITY((0u), ((0u)) >> 0u)) | ((0u) | (0u)))), ~ (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), ((0u) | (0u)) | ((0u) | (_GLF_IDENTITY(0u, ~ (~ (0u))))))))))) ^ _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), (~ (0u)) / uint(_GLF_ONE(1.0, injectionSwitch.y))), min(~ (0u), ~ (0u))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), (~ (0u)) / uint(_GLF_ONE(1.0, injectionSwitch.y))), min(~ (0u), ~ (0u)))) >> ((0u | 0u) >> _GLF_IDENTITY(uint(1u), uint(1u))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), (0u ^ 0u) | ((0u) | (0u)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), (0u ^ 0u) | ((0u) | (0u)))), ~ (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), (0u ^ 0u) | ((0u) | (0u))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), ((0u) | _GLF_IDENTITY((0u), ((0u)) >> 0u)) | ((0u) | (0u)))), ~ (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), ((0u) | (0u)) | ((0u) | (_GLF_IDENTITY(0u, ~ (~ (0u))))))))))) ^ _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), (~ (0u)) / uint(_GLF_ONE(1.0, injectionSwitch.y))), min(~ (0u), ~ (0u))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), (~ (0u)) / uint(_GLF_ONE(1.0, injectionSwitch.y))), min(~ (0u), ~ (0u)))) >> ((0u | 0u) >> _GLF_IDENTITY(uint(1u), uint(1u))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), (0u ^ 0u) | ((0u) | (0u)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), (0u ^ 0u) | ((0u) | (0u)))), ~ (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), (0u ^ 0u) | ((0u) | (0u))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), ((0u) | _GLF_IDENTITY((0u), ((0u)) >> 0u)) | ((0u) | (0u)))), ~ (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), ((0u) | (0u)) | ((0u) | (_GLF_IDENTITY(0u, ~ (~ (0u))))))))))) ^ _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), (~ (0u)) / uint(_GLF_ONE(1.0, injectionSwitch.y))), min(~ (0u), ~ (0u))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), (~ (0u)) / uint(_GLF_ONE(1.0, injectionSwitch.y))), min(~ (0u), ~ (0u)))) >> ((0u | 0u) >> _GLF_IDENTITY(uint(1u), uint(1u)))))))))) << 0u, 1u, 0u, 0u)), min(uint(uvec4((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), (0u ^ 0u) | ((0u) | (0u)))), (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), (0u ^ 0u) | ((0u) | (0u))))) + (0u ^ 0u)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), (0u ^ 0u) | ((0u) | (0u)))), ~ (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))) / 1u)), (0u ^ 0u) | ((0u) | (0u))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), ((0u) | _GLF_IDENTITY((0u), ((0u)) >> 0u)) | ((0u) | (0u)))), ~ (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), ((0u) | (0u)) | ((0u) | (_GLF_IDENTITY(0u, ~ (~ (0u)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), ((0u) | _GLF_IDENTITY((0u), ((0u)) >> 0u)) | ((0u) | (0u)))), ~ (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), ((0u) | (0u)) | ((0u) | (_GLF_IDENTITY(0u, ~ (~ (0u))))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), ((0u) | _GLF_IDENTITY((0u), ((0u)) >> 0u)) | ((0u) | (0u)))), ~ (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), ((0u) | (0u)) | ((0u) | (_GLF_IDENTITY(0u, ~ (~ (0u)))))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), ((0u) | _GLF_IDENTITY((0u), ((0u)) >> 0u)) | ((0u) | (0u)))), ~ (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), ((0u) | (0u)) | ((0u) | (_GLF_IDENTITY(0u, ~ (~ (0u)))))))))))))))) ^ _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), (~ (0u)) / uint(_GLF_ONE(1.0, injectionSwitch.y))), min(~ (0u), ~ (0u))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), (~ (0u)) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + tan(vec2(0.0, 0.0))).y))), min(~ (0u), ~ (0u)))) >> ((0u | 0u) >> _GLF_IDENTITY(uint(1u), uint(1u)))))))) << 0u, 1u, 0u, 0u)), uint(uvec4((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), (0u ^ 0u) | ((_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_id) : 0u))) | (0u)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), (0u ^ 0u) | ((0u) | (0u)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), (0u ^ 0u) | ((0u) | (0u))))), (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), (0u ^ 0u) | ((0u) | (0u)))))) - 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), ((0u) | _GLF_IDENTITY((0u), ((0u)) >> 0u)) | ((0u) | (0u)))), ~ (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), ((0u) | (0u)) | ((0u) | (_GLF_IDENTITY(0u, ~ (~ (0u))))))))))) ^ _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), (~ (0u)) / uint(_GLF_ONE(1.0, injectionSwitch.y))), min(~ (0u), ~ (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, 0u | (0u)), _GLF_IDENTITY(0u, (0u) - (0u | 0u))))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), (~ (0u)) / uint(_GLF_ONE(1.0, injectionSwitch.y))), min(~ (0u), ~ (0u)))) >> ((0u | 0u) >> _GLF_IDENTITY(uint(1u), uint(1u)))))))) << 0u, 1u, 0u, 0u))))))))))) ^ (uint(1)))) * 1u), _GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), (_GLF_IDENTITY(4, int(ivec3(4, 0, 0)))) >> 0))), 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-61.60, min(_GLF_IDENTITY(-61.60, 1.0 * (-61.60)), -61.60)))), float(injectionSwitch.y), bool(true))), true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-61.60, min(_GLF_IDENTITY(-61.60, 1.0 * (-61.60)), -61.60)))), float(injectionSwitch.y), bool(true))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4.9)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(_GLF_IDENTITY(-61.60, min(_GLF_IDENTITY(-61.60, 1.0 * (-61.60)), -61.60)))), float(injectionSwitch.y), bool(true)))) || false)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(8.7))), true && (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if((subgroup_local_id % 2) == 0)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(cos(vec2(0.0, 0.0)))).x, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(cos(vec2(0.0, 0.0)))).x) + 0.0) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   read = atomicLoad(buf[virtual_gid], 4, 64, 2);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-6.2))) > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-95.77)), vec2(_GLF_FUZZED(-968.288), (injectionSwitch)[1]), bvec2(false, true))).y)))))))))
      return;
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(next_virtual_gid) : virtual_gid)), (_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(next_virtual_gid) : virtual_gid))) >> (53190u & 0u))) | (_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))))], _GLF_IDENTITY(4, int(ivec2(4, 0))), _GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, _GLF_IDENTITY(0 ^ (_GLF_IDENTITY(64, (64) | (0 >> _GLF_IDENTITY(int(6), int(6))))), clamp(0 ^ (64), _GLF_IDENTITY(_GLF_IDENTITY(0 ^ (64), min(0 ^ (64), _GLF_IDENTITY(0 ^ (64), 0 + (0 ^ (64))))), (_GLF_IDENTITY(0 ^ (64), min(0 ^ (64), _GLF_IDENTITY(0 ^ (64), 0 + (0 ^ (64)))))) << 0), 0 ^ _GLF_IDENTITY((_GLF_IDENTITY(64, (64) | (64))), max((_GLF_IDENTITY(64, (64) | (64))), (_GLF_IDENTITY(64, (64) | (64)))))))), 64))))), 2);
  }
 subgroupBarrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
