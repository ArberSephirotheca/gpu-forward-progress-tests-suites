#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_11_1_1_12_2_1_14subgroup_idworkgroup_idworkgroup_size;
 uvec3 GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidsubgroup_idworkgroup_id;
 uvec4 GLF_merged2_0_3_71_3_1_14GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_sizeworkgroup_size;
 uvec3 GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_sizeworkgroup_id;
 uvec3 GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size;
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true), false)))), (bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true), false))))) && true))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     do
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, ! (_GLF_IDENTITY(! (_injected_loop_counter > 0), true && (! (_injected_loop_counter > 0)))))); _injected_loop_counter --)
        {
         GLF_merged2_0_3_71_3_1_14GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_sizeworkgroup_size.xyz = GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size;
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), true, true, true))), false, false)), (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), true, true, true))), false, false))) || false))))));
    }
  }
 else
  {
  }
 uvec4 GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid;
 uvec3 GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_id;
 GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz = GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_id;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   do
    {
     do
      {
       do
        {
         do
          {
           GLF_merged3_0_1_11_1_1_12_2_1_14subgroup_idworkgroup_idworkgroup_size.x = subgroup_id;
          }
         while(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), true, _GLF_IDENTITY(true, bool(bvec4(true, false, false, true))), false))), bool(bool(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))));
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidsubgroup_idworkgroup_id.y = GLF_merged3_0_1_11_1_1_12_2_1_14subgroup_idworkgroup_idworkgroup_size.x;
          }
         else
          {
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
      }
    }
  }
 GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.x = GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidsubgroup_idworkgroup_id.y;
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_sizeworkgroup_id.y = subgroup_size;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   GLF_merged2_0_3_71_3_1_14GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_sizeworkgroup_size.xyz.x = GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_sizeworkgroup_id.y;
  }
 _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_71_3_1_14GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_sizeworkgroup_size.xyz, _GLF_IDENTITY((GLF_merged2_0_3_71_3_1_14GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_sizeworkgroup_size.xyz) | (GLF_merged2_0_3_71_3_1_14GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_sizeworkgroup_size.xyz), ((GLF_merged2_0_3_71_3_1_14GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_sizeworkgroup_size.xyz) | (GLF_merged2_0_3_71_3_1_14GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_sizeworkgroup_size.xyz)) << uvec3(0u, 0u, 0u))).x, min(GLF_merged2_0_3_71_3_1_14GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_sizeworkgroup_size.xyz.x, GLF_merged2_0_3_71_3_1_14GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_sizeworkgroup_size.xyz.x)), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_71_3_1_14GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_sizeworkgroup_size.xyz, (GLF_merged2_0_3_71_3_1_14GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_sizeworkgroup_size.xyz) | (GLF_merged2_0_3_71_3_1_14GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_sizeworkgroup_size.xyz)).x, min(_GLF_IDENTITY(GLF_merged2_0_3_71_3_1_14GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_sizeworkgroup_size, clamp(GLF_merged2_0_3_71_3_1_14GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_sizeworkgroup_size, GLF_merged2_0_3_71_3_1_14GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_sizeworkgroup_size, _GLF_IDENTITY(GLF_merged2_0_3_71_3_1_14GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_sizeworkgroup_size, (false ? _GLF_FUZZED(uvec4(43596u, 103974u, 130342u, 151065u)) : GLF_merged2_0_3_71_3_1_14GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_sizeworkgroup_size)))).xyz.x, GLF_merged2_0_3_71_3_1_14GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_sizeworkgroup_size.xyz.x)), (GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_71_3_1_14GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_sizeworkgroup_size.xyz, (GLF_merged2_0_3_71_3_1_14GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_sizeworkgroup_size.xyz) | (GLF_merged2_0_3_71_3_1_14GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_sizeworkgroup_size.xyz)).x, min(GLF_merged2_0_3_71_3_1_14GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_sizeworkgroup_size.xyz.x, GLF_merged2_0_3_71_3_1_14GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_sizeworkgroup_size.xyz.x))) * 1u))), _GLF_IDENTITY((GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y = GLF_merged2_0_3_71_3_1_14GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_sizeworkgroup_size.xyz.x), 0u ^ ((GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y = GLF_merged2_0_3_71_3_1_14GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_sizeworkgroup_size.xyz.x))) << 0u);
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(gl_NumWorkGroups.x, ~ (~ (gl_NumWorkGroups.x))))), (true ? gl_NumWorkGroups.x : _GLF_FUZZED(subgroup_local_id))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))).x), (_GLF_IDENTITY(true ? _GLF_IDENTITY(~ (gl_NumWorkGroups.x), max(~ (gl_NumWorkGroups.x), ~ (gl_NumWorkGroups.x))) : _GLF_FUZZED(_GLF_IDENTITY(76740u, 0u ^ (_GLF_IDENTITY(76740u, (false ? _GLF_FUZZED(subgroup_id) : 76740u))))), (true ? _GLF_IDENTITY(~ (gl_NumWorkGroups.x), max(~ (gl_NumWorkGroups.x), ~ (gl_NumWorkGroups.x))) : _GLF_FUZZED(_GLF_IDENTITY(76740u, 0u ^ (_GLF_IDENTITY(76740u, (false ? _GLF_FUZZED(subgroup_id) : 76740u)))))) << 0u))), 0u ^ (~ (gl_NumWorkGroups.x))), (_GLF_IDENTITY(~ (gl_NumWorkGroups.x), _GLF_IDENTITY(0u ^ (~ (gl_NumWorkGroups.x)), (0u ^ (~ (gl_NumWorkGroups.x))) - 0u))) | (_GLF_IDENTITY(~ (gl_NumWorkGroups.x), 0u ^ (_GLF_IDENTITY(~ (gl_NumWorkGroups.x), (_GLF_IDENTITY(~ (gl_NumWorkGroups.x), (_GLF_IDENTITY(~ (gl_NumWorkGroups.x), 1u * (~ (gl_NumWorkGroups.x)))) << 0u)) * _GLF_IDENTITY(1u, uint(uvec2(1u, 1u))))))))));
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_sizeworkgroup_id.x = _GLF_IDENTITY(num_workgroup, min(num_workgroup, num_workgroup));
          }
         else
          {
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     else
      {
      }
    }
   else
    {
    }
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(7344.6710, mix(float(7344.6710), float(_GLF_FUZZED(-87.95)), bool(false)))) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + abs(vec2(0.0, 0.0))).x)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(7344.6710) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + abs(vec2(0.0, 0.0))).x)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), true, false)), bool(bvec3(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(7344.6710) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + abs(vec2(0.0, 0.0))).x)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), true, false)), true, false)))))), bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))) ? _GLF_FUZZED(7344.6710) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + abs(vec2(0.0, 0.0))).x)) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)) * mat2(1.0)).y))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_IDENTITY(_GLF_FUZZED(7344.6710), max(_GLF_FUZZED(7344.6710), _GLF_FUZZED(7344.6710))) : _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, sqrt(vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-6746.6494) : 1.0)), 1.0)) * (injectionSwitch)), injectionSwitch)) : _GLF_FUZZED(injectionSwitch)))) + abs(vec2(0.0, 0.0))).x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-894.487, 6.5)) : injectionSwitch)), injectionSwitch))) * mat2(1.0)).y))), ! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((false ? _GLF_FUZZED(7344.6710) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + abs(vec2(0.0, 0.0))).x), mix(float(_GLF_IDENTITY((false ? _GLF_FUZZED(7344.6710) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + abs(vec2(0.0, 0.0))).x), clamp((false ? _GLF_FUZZED(7344.6710) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + abs(vec2(0.0, 0.0))).x), (false ? _GLF_FUZZED(7344.6710) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + abs(vec2(0.0, 0.0))).x), (false ? _GLF_FUZZED(7344.6710) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + abs(vec2(0.0, 0.0))).x)))), float(_GLF_FUZZED(38.52)), bool(false)))) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))))) || false), true, true))));
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   do
    {
     GLF_merged3_0_1_11_1_1_12_2_1_14subgroup_idworkgroup_idworkgroup_size.z = workgroup_size;
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_WRAPPED_LOOP(false))));
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), false || (bool(bvec3(false, false, false))))), _GLF_IDENTITY(true && (false), (true && (false)) && true)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), ((_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))) && true)), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec2(bvec2(bvec2(bvec2(false, _GLF_IDENTITY(false, ! (! (false))))))))))))), _GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), ! _GLF_IDENTITY((! (_GLF_IDENTITY(true, (true) && true))), (_GLF_IDENTITY((! (_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true) && true))), false || ((! (_GLF_IDENTITY(true, (true) && true)))))) && true))))), true)), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY((true) && _GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (! (_GLF_IDENTITY(true, ! (! (true))))) || false)), ((_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), true && (! (_GLF_IDENTITY(true, ! (! (true)))))), false)))) || false))) || false)), false || (_GLF_IDENTITY((true) && true, ((true) && true) && true))), bool(bvec4(_GLF_IDENTITY((true) && _GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (! (_GLF_IDENTITY(true, ! (! (true))))) || false)), ((_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), true && (! (_GLF_IDENTITY(true, ! (! (true)))))), false)))) || false))) || false)), false || (_GLF_IDENTITY((true) && true, ((true) && true) && true))), false, true, false)))), true)), _GLF_IDENTITY(bool(bvec3(bool(bvec3(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY((true), ! (! ((true)))) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), false || (_GLF_IDENTITY((true) && true, ((true) && true) && true)))), true)), true, true)), bool(bool(bool(bvec3(bool(bvec3(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(true, _GLF_IDENTITY((true) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), false || (_GLF_IDENTITY((true) && true, ((true) && true) && true)))), true)), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, false, false)), (bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))) || (! (! (true))))), true, false, false))) || false)), true)))))))))))
      {
      }
     else
      {
       do
        {
         GLF_merged2_0_3_71_3_1_14GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_sizeworkgroup_size.w = _GLF_IDENTITY(GLF_merged3_0_1_11_1_1_12_2_1_14subgroup_idworkgroup_idworkgroup_size.z, min(_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_12_2_1_14subgroup_idworkgroup_idworkgroup_size.z, clamp(GLF_merged3_0_1_11_1_1_12_2_1_14subgroup_idworkgroup_idworkgroup_size.z, GLF_merged3_0_1_11_1_1_12_2_1_14subgroup_idworkgroup_idworkgroup_size.z, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_12_2_1_14subgroup_idworkgroup_idworkgroup_size.z, clamp(GLF_merged3_0_1_11_1_1_12_2_1_14subgroup_idworkgroup_idworkgroup_size.z, GLF_merged3_0_1_11_1_1_12_2_1_14subgroup_idworkgroup_idworkgroup_size.z, GLF_merged3_0_1_11_1_1_12_2_1_14subgroup_idworkgroup_idworkgroup_size.z)), min(_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_12_2_1_14subgroup_idworkgroup_idworkgroup_size.z, clamp(GLF_merged3_0_1_11_1_1_12_2_1_14subgroup_idworkgroup_idworkgroup_size.z, GLF_merged3_0_1_11_1_1_12_2_1_14subgroup_idworkgroup_idworkgroup_size.z, GLF_merged3_0_1_11_1_1_12_2_1_14subgroup_idworkgroup_idworkgroup_size.z)), _GLF_IDENTITY(GLF_merged3_0_1_11_1_1_12_2_1_14subgroup_idworkgroup_idworkgroup_size.z, clamp(GLF_merged3_0_1_11_1_1_12_2_1_14subgroup_idworkgroup_idworkgroup_size.z, GLF_merged3_0_1_11_1_1_12_2_1_14subgroup_idworkgroup_idworkgroup_size.z, GLF_merged3_0_1_11_1_1_12_2_1_14subgroup_idworkgroup_idworkgroup_size.z)))))), GLF_merged3_0_1_11_1_1_12_2_1_14subgroup_idworkgroup_idworkgroup_size.z));
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   else
    {
    }
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
    {
    }
   else
    {
     GLF_merged2_0_3_71_3_1_14GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_sizeworkgroup_size.xyz.z = _GLF_IDENTITY(GLF_merged2_0_3_71_3_1_14GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_sizeworkgroup_size, uvec4(0u, 0u, 0u, 0u) | (GLF_merged2_0_3_71_3_1_14GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_sizeworkgroup_size)).w;
    }
  }
 else
  {
  }
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)), min(gl_WorkGroupID, gl_WorkGroupID)).x;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
    {
     do
      {
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) || false), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), true, _GLF_IDENTITY(true, false || (true)))), ! (! (bool(bvec4(_GLF_IDENTITY(false, (false) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               GLF_merged3_0_1_11_1_1_12_2_1_14subgroup_idworkgroup_idworkgroup_size.y = _GLF_IDENTITY(workgroup_id, max(workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id), max((workgroup_id), (workgroup_id))) * 1u), (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id), max((workgroup_id), (workgroup_id))) * 1u)) - 0u), max(_GLF_IDENTITY(workgroup_id, (workgroup_id) * 1u), _GLF_IDENTITY(workgroup_id, (workgroup_id) * 1u)))));
              }
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
    }
  }
 else
  {
  }
 do
  {
   GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidsubgroup_idworkgroup_id.z = GLF_merged3_0_1_11_1_1_12_2_1_14subgroup_idworkgroup_idworkgroup_size.y;
  }
 while(_GLF_WRAPPED_LOOP(false));
 GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_sizeworkgroup_id.z = GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidsubgroup_idworkgroup_id.z;
 do
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), true, false)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), true, false)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), true, false))))))))))))))), (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y, false)))) || false), true, false)))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             GLF_merged2_0_3_71_3_1_14GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_sizeworkgroup_size.xyz.y = GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_sizeworkgroup_id.z;
            }
          }
        }
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))));
 do
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     do
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 1)); _injected_loop_counter ++)
        {
         GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.z = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_71_3_1_14GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_sizeworkgroup_size, (GLF_merged2_0_3_71_3_1_14GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_sizeworkgroup_size) - uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(true, (true) || false) ? 0u : _GLF_FUZZED(subgroup_local_id))))).xyz, _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) - (uvec3(0u, 0u, _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, 1u), (false ? _GLF_FUZZED(uvec2(84062u, 172008u)) : uvec2(0u, 1u)))))) >> _GLF_IDENTITY(uvec3(4u), uvec3(4u)))) | (GLF_merged2_0_3_71_3_1_14GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_sizeworkgroup_size.xyz)).y;
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint workgroup_base = GLF_merged2_0_3_71_3_1_14GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_sizeworkgroup_size.xyz.z * GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.z;
 uint subgroup_base = GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.x * GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base))) + _GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base)) + subgroup_local_id, (_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, max(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, uint(uvec2(subgroup_base, 1u))), 0u + (subgroup_base)) + subgroup_local_id) << 0u), workgroup_base + subgroup_base + subgroup_local_id))) / 1u), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base))) + _GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base)) + subgroup_local_id, (_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, max(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, uint(uvec2(subgroup_base, 1u))), 0u + (subgroup_base)) + subgroup_local_id) << 0u), workgroup_base + subgroup_base + subgroup_local_id))) / 1u), 0u, (0u | 0u), 1u)));
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (0u >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(~ (~ (uint(0u))), (~ (~ (uint(0u)))) << 0u)))) | (workgroup_base)) + subgroup_base + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) * _GLF_IDENTITY(1u, (1u) | 0u))) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid, ~ (~ (GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid))), min(_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid, ~ (~ (GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid))), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid, ~ (~ (GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid))), ~ (~ (_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid, ~ (~ (GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid)))))))).xyz.y, clamp(_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid, (GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid) | (_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid, clamp(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid, (_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid, clamp(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid, GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid, GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid))) | (GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid)), uvec4(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid[0], GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid[1], GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid[2], GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid[3])), GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid)))).xyz.y, _GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz, (GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz) << uvec3(_GLF_IDENTITY(0u, 0u + (0u)), 0u, 0u)).y, max(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, max(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y)), max(_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, max(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y)), _GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, max(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y))))), clamp((_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, max(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid, min(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid, GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid))), (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid, min(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid, GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid))), uvec4(0u, 0u, 0u, 0u) ^ ((_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid, min(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid, GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid)))))) | uvec4(0u, 0u, 0u, 0u)) - uvec4(0u, 0u, 0u, 0u)).xyz.y, (_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid, min(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid, GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid))), (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid, min(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid, GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid))), uvec4(0u, 0u, 0u, 0u) ^ ((_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid, min(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid, GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid)))))) | uvec4(0u, 0u, 0u, 0u)) - uvec4(0u, 0u, 0u, 0u)).xyz.y) - 0u), max(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, _GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz, uvec3(uvec4(_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz, (GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz) << uvec3(0u, 0u, 0u)), 0u))).y))), _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, max(_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz, max(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz, GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz)), max(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz, GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz))) - uvec3(0u, 0u, 0u)).y, GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y))), ((_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, max(_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz, (GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz) | uvec3(0u, 0u, 0u)).y, GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y)))) | ((_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, max(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y)))))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, min(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, _GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, max(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y)))), max(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y))), _GLF_IDENTITY(clamp((_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, max(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y))), (_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, max(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y))), _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, max(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y))), ((_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, max(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y)))) | ((_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, max(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y)))))), (clamp((_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, max(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y))), (_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, max(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y))), _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, max(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y))), ((_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, max(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y)))) | ((_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, max(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y))))))) | 0u))), uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, max(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y))), clamp((_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, max(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y))), (_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, max(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y))), _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, max(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y))), ((_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, max(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y)))) | ((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid, (_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid, (true ? _GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid, ~ (~ (GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid))) : _GLF_FUZZED(uvec4(109470u, 90625u, 90854u, 126771u))))) - (uvec4(0u, 0u, 0u, 0u) | uvec4(0u, 0u, 0u, 0u))).xyz.y, max(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y)))))))), ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid, (GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid) + uvec4(0u, 0u, 0u, 0u)).xyz.y, max(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y))), clamp((_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, max(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y))), (_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, max(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y))), _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, max(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y))), ((_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, max(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y)))) | ((_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, max(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y))))))))) | _GLF_IDENTITY(((_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, max(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y))), clamp((_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, max(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y))), (_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, max(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y))), _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, max(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y))), ((_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, max(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y)))) | ((_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, max(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, _GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz, uvec3(_GLF_IDENTITY(uvec3(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz), ~ (_GLF_IDENTITY(~ (uvec3(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz)), uvec3(1u, 1u, 1u) * (~ (uvec3(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz)))))))).y))))))))), (((_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, max(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y))), clamp((_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, max(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y))), (_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, max(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y))), _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, max(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y))), ((_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, max(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y)))) | ((_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, max(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, _GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz, uvec3(_GLF_IDENTITY(uvec3(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz), ~ (_GLF_IDENTITY(~ (uvec3(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz)), uvec3(1u, 1u, 1u) * (~ (uvec3(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz)))))))).y)))))))))) / 1u)), 1u, 1u, 0u)))))) / _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 1u, 0u))) : _GLF_FUZZED(virtual_gid)))))))), GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y))), 0u ^ (((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (true ? _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u) + 1 : _GLF_FUZZED(virtual_gid))), (subgroup_local_id + 1) * 1u)) % _GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, clamp(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, _GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz, (GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz) << uvec3(0u, 0u, 0u)).y, max(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, _GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz, _GLF_IDENTITY((GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz) >> uvec3(0u, 0u, 0u), ((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid, (true ? GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid : _GLF_FUZZED(mix(GLF_merged2_0_3_71_3_1_14GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_sizeworkgroup_size, GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid, bvec4(true, true, false, true))))).xyz, clamp(_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid, (true ? GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid : _GLF_FUZZED(mix(GLF_merged2_0_3_71_3_1_14GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_sizeworkgroup_size, GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid, bvec4(true, true, false, true))))).xyz, _GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid, (true ? GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid : _GLF_FUZZED(mix(GLF_merged2_0_3_71_3_1_14GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_sizeworkgroup_size, GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid, bvec4(true, true, false, true))))).xyz, _GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid, (true ? GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid : _GLF_FUZZED(mix(GLF_merged2_0_3_71_3_1_14GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_sizeworkgroup_size, GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid, bvec4(true, true, false, true))))).xyz))) >> uvec3(0u, 0u, 0u)) - uvec3(0u, 0u, 0u))).y))), _GLF_IDENTITY(((_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, max(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, _GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, 0u ^ (GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y)) : _GLF_FUZZED(subgroup_local_id))))))), (((_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, max(GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y, GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y))))) / 1u) / 1u))), GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.xyz.y)))));
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))))), (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         do
          {
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), true)))), _GLF_IDENTITY(false || (bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), true))))), bool(bvec3(false || (bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), true))))), false, true))))), false, _GLF_IDENTITY(true, true && (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))), ! (! _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true))))), ! (! ((_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), ! (_GLF_IDENTITY(! (! (! (true))), (_GLF_IDENTITY(! (! (! (true))), true && (! (! (! (true)))))) && true))))))))))))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               do
                {
                 GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidsubgroup_idworkgroup_id.x = next_virtual_gid;
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
           else
            {
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     else
      {
      }
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 do
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) >> 0, ((1) >> 0) ^ 0))) ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           do
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((true), ! (! ((true)))), false || (! _GLF_IDENTITY((true), ! (! ((true))))))))))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   do
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), bool(bvec2(bool((injectionSwitch.x < injectionSwitch.y)), false))), (_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), bool(bvec2(bool((injectionSwitch.x < injectionSwitch.y)), false)))) && true)), ! (! (bool(_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), ! (! (bool((injectionSwitch.x < injectionSwitch.y))))), false)))))))))))
                        {
                         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) && true)))), (injectionSwitch.x < injectionSwitch.y))))
                          {
                           GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.w = GLF_merged3_0_1_16_1_1_11_2_1_12next_virtual_gidsubgroup_idworkgroup_id.x;
                          }
                         else
                          {
                          }
                        }
                       else
                        {
                        }
                      }
                    }
                   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(_GLF_IDENTITY(bool(_GLF_WRAPPED_LOOP(false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-50.20)), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))) || (bool(_GLF_WRAPPED_LOOP(false)))))));
                  }
                 else
                  {
                  }
                }
               else
                {
                }
              }
             else
              {
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         else
          {
          }
        }
      }
     else
      {
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint read = _GLF_IDENTITY(0, (0) * ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), clamp(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), 0 ^ (_GLF_IDENTITY(int(2), int(2))))))) >> _GLF_IDENTITY(int(2), int(2))));
 do
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, max(0, 0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), bvec3(bvec4(bvec3(bvec3(bvec3(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))))))))))), true && ((! (false))))))))))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               atomicStore(buf[GLF_merged2_0_3_68_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_idnext_virtual_gid.w], _GLF_IDENTITY(uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) | 0)), (uint(1)) | (uint(1))), 4, 64, 4);
              }
             else
              {
              }
            }
          }
         else
          {
          }
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_IDENTITY((subgroup_local_id % 2), max(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id % 2), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u) % 2)) - 0u), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) % 2, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY((subgroup_local_id) | (subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id) | (subgroup_local_id), min((subgroup_local_id) | (subgroup_local_id), (subgroup_local_id) | (subgroup_local_id)))) / 1u)) % 2) << 0u)), _GLF_IDENTITY(((subgroup_local_id % 2)), (((subgroup_local_id % 2))) << 0u) - 0u)) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) << 0u), (subgroup_local_id % 2) | 0u)), 1u * (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) << 0u), (subgroup_local_id % 2) | 0u)), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) << 0u), (subgroup_local_id % 2) | 0u))) / 1u))))) == 0)
    {
     read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], 0u ^ (buf[virtual_gid])), 4, _GLF_IDENTITY(64, min(64, 64)), _GLF_IDENTITY(2, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, max(2, 2)), (2) / 1), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY(0 + (2), max(0 + (2), _GLF_IDENTITY(0 + (2), (false ? _GLF_FUZZED(50526) : 0 + (2))))), min(_GLF_IDENTITY(0 + (2), max(0 + (2), _GLF_IDENTITY(0 + (2), (false ? _GLF_FUZZED(50526) : 0 + (2))))), _GLF_IDENTITY(0 + (2), max(0 + (2), _GLF_IDENTITY(0 + (2), (false ? _GLF_FUZZED(50526) : 0 + (2)))))))), max(2, 2)), (2) / 1), _GLF_IDENTITY(_GLF_IDENTITY(2, max(2, 2)), (2) / 1))), 2)));
    }
   else
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | 0)) - 0))), int(int(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | 0)))))) < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       do
        {
         do
          {
           do
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   do
                    {
                     for(int _injected_loop_counter = int(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)) > 0); _injected_loop_counter --)
                      {
                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                        {
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) && true))
                            {
                             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                              {
                               do
                                {
                                 do
                                  {
                                   do
                                    {
                                     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, tan(0.0), 1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0), (mat4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, tan(0.0), 1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))) - _GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_ZERO(0.0, injectionSwitch.x)), (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(-7.3)))) + 0.0))) || (_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0)) < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)))))) + (injectionSwitch.y))))) && true))), false, true, false)))))
                                      {
                                       if(_GLF_WRAPPED_IF_FALSE(false))
                                        {
                                        }
                                       else
                                        {
                                         if(_GLF_WRAPPED_IF_TRUE(true))
                                          {
                                           read = _GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid])), clamp(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) / 1u), _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])), buf[virtual_gid])), 4, 64, 2), _GLF_IDENTITY((atomicLoad(buf[virtual_gid], 4, 64, 2)), ((atomicLoad(buf[virtual_gid], 4, 64, 2))) | ((atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, max(64, 64)), 2)))) + 0u);
                                          }
                                         else
                                          {
                                          }
                                        }
                                      }
                                     else
                                      {
                                      }
                                    }
                                   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
                                  }
                                 while(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false)) || _GLF_IDENTITY(false, false || (false))));
                                }
                               while(_GLF_WRAPPED_LOOP(false));
                              }
                            }
                           else
                            {
                            }
                          }
                         else
                          {
                          }
                        }
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false, true && ((_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))));
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))))
  {
  }
 else
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))))
          {
           subgroupBarrier();
          }
         else
          {
          }
        }
       else
        {
        }
      }
    }
  }
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
