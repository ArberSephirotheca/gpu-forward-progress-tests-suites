#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, abs(log(1.0)), 0.0, 0.0, 0.0, 1.0))).y))))
        {
        }
       else
        {
         return;
        }
      }
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), 0 ^ (int(4)))) | (int(4))))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), max(_GLF_IDENTITY(int(4), ~ (_GLF_IDENTITY(~ (int(4)), (~ (int(4))) ^ 0))), int(4)))))); _injected_loop_counter ++)
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        continue;
       continue;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       do
        {
         return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x)) > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           continue;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            break;
           break;
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y))));
      }
    }
  }
 uvec4 GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(floor(-0.4)))) > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(floor(-0.4)))) > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(floor(-0.4)))) > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))) || false)) && true), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_ZERO(0.0, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), min(_GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), 0.0 + (min(injectionSwitch.y, injectionSwitch.y))), min(injectionSwitch.y, injectionSwitch.y))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false ? _GLF_FUZZED(-3843.7727) : _GLF_IDENTITY(injectionSwitch, log(exp(vec2(0.0, 0.0))) + (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(6878.7946)), vec2(_GLF_FUZZED(vec4(4.3, -7.3, 57.85, -6.1).y), (injectionSwitch)[1]), bvec2(false, true))))).y, float(_GLF_IDENTITY(mat3x4(false ? _GLF_FUZZED(-3843.7727) : _GLF_IDENTITY(injectionSwitch, log(exp(vec2(0.0, 0.0))) + (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(6878.7946)), vec2(_GLF_FUZZED(vec4(4.3, -7.3, 57.85, -6.1).y), (injectionSwitch)[1]), bvec2(false, true))))).y, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, exp(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0), transpose(_GLF_IDENTITY(transpose(mat3x4(false ? _GLF_FUZZED(-3843.7727) : _GLF_IDENTITY(injectionSwitch, log(exp(vec2(0.0, 0.0))) + (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(6878.7946)), vec2(_GLF_FUZZED(vec4(4.3, -7.3, 57.85, -6.1).y), (injectionSwitch)[1]), bvec2(false, true))))).y, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, exp(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0)), (false ? _GLF_FUZZED(mat4x3(-7.6, -1.2, -4068.2289, -3744.4878, 2.6, 1.9, -1.7, -45.30, -41.16, -9.9, -0.7, -8368.2988)) : transpose(mat3x4(false ? _GLF_FUZZED(-3843.7727) : _GLF_IDENTITY(injectionSwitch, log(exp(vec2(0.0, 0.0))) + (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(6878.7946)), vec2(_GLF_FUZZED(vec4(4.3, -7.3, 57.85, -6.1).y), (injectionSwitch)[1]), bvec2(false, true))))).y, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, exp(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0)))))))))), injectionSwitch.y)), min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), true && ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false ? _GLF_FUZZED(-3843.7727) : _GLF_IDENTITY(injectionSwitch, log(exp(vec2(0.0, 0.0))) + (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(6878.7946)), vec2(_GLF_FUZZED(vec4(4.3, -7.3, 57.85, -6.1).y), (injectionSwitch)[1]), bvec2(false, true))))).y, float(_GLF_IDENTITY(mat3x4(false ? _GLF_FUZZED(-3843.7727) : _GLF_IDENTITY(injectionSwitch, log(exp(vec2(0.0, 0.0))) + (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(6878.7946)), vec2(_GLF_FUZZED(vec4(4.3, -7.3, 57.85, -6.1).y), (injectionSwitch)[1]), bvec2(false, true))))).y, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, exp(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0), transpose(_GLF_IDENTITY(transpose(mat3x4(false ? _GLF_FUZZED(-3843.7727) : _GLF_IDENTITY(injectionSwitch, log(exp(vec2(0.0, 0.0))) + (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(6878.7946)), vec2(_GLF_FUZZED(vec4(4.3, -7.3, 57.85, -6.1).y), (injectionSwitch)[1]), bvec2(false, true))))).y, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, exp(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0)), (false ? _GLF_FUZZED(mat4x3(-7.6, -1.2, -4068.2289, -3744.4878, 2.6, 1.9, -1.7, -45.30, -41.16, -9.9, -0.7, -8368.2988)) : transpose(mat3x4(false ? _GLF_FUZZED(-3843.7727) : _GLF_IDENTITY(injectionSwitch, log(exp(vec2(0.0, 0.0))) + (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(6878.7946)), vec2(_GLF_FUZZED(vec4(4.3, -7.3, 57.85, -6.1).y), (injectionSwitch)[1]), bvec2(false, true))))).y, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, exp(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0)))))))))), injectionSwitch.y)), min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(-8.2, 0.0 + (-8.2))))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), min(min(injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), max(min(injectionSwitch.y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y))))))), ((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-8.2))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(64.32))), injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(-8.2, 0.0 + (-8.2))))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), min(min(injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), max(min(injectionSwitch.y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y))))))), ((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-8.2))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(64.32))), injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))) || false)))))) && true))) && true))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0) ^ 0, (false ? _GLF_FUZZED((42225 & 61523)) : _GLF_IDENTITY(1, (1) >> 0) ^ 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        return;
      }
    }
   else
    {
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   do
    {
     GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id.w = subgroup_local_id;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && ((false)))))))
        return;
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - log(1.0)) > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))));
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (gl_NumWorkGroups)), gl_NumWorkGroups)).x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 do
  {
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   for(int _injected_loop_counter = (-1096 & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       return;
      }
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))), true, true, false))))), true))), true && _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(-748.756), (_GLF_FUZZED(-748.756)) / 1.0) : injectionSwitch.y)), (injectionSwitch.y) + 0.0))))), true && ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-748.756) : injectionSwitch.y)), (injectionSwitch.y) + 0.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-748.756) : injectionSwitch.y)), (injectionSwitch.y) + 0.0), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-748.756) : injectionSwitch.y)), (injectionSwitch.y) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-748.756) : injectionSwitch.y)), (injectionSwitch.y) + 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-748.756) : injectionSwitch.y)), (injectionSwitch.y) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-748.756) : injectionSwitch.y)), (injectionSwitch.y) + 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-748.756) : injectionSwitch.y)), (injectionSwitch.y) + 0.0)) + 0.0)))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
      {
       do
        {
         return;
        }
       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))));
      }
     if(_GLF_DEAD(false))
      return;
     do
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        break;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
       if(_GLF_DEAD(false))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   do
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
      {
       return;
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = (0 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     return;
    }
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
      return;
    }
   else
    {
    }
  }
 else
  {
   GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id.z = subgroup_base;
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3.7)), vec2(_GLF_FUZZED(float((vec4(149.548, -9.1, 24.83, -6.9) != vec4(3.8, -9.2, 0.1, 1.1)))), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))));
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   do
    {
     if(_GLF_DEAD(false))
      break;
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         continue;
        }
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      continue;
     if(_GLF_DEAD(false))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[1])).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), mix(float(min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(float(_GLF_FUZZED(6119.2498)), float(float(float(_GLF_FUZZED(6119.2498))))), bool(false)))))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) - 0)], _GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(-4.5)), float(injectionSwitch[1]), bool(true)))) / 1.0))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(4.3) : 1.0)))), _GLF_IDENTITY(mix(float(min(injectionSwitch.y, injectionSwitch.y)), float(_GLF_FUZZED(6119.2498)), bool(false)), mix(float(_GLF_FUZZED(9.9)), float(mix(float(min(injectionSwitch.y, injectionSwitch.y)), float(_GLF_FUZZED(6119.2498)), bool(false))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, abs(1.0), 0.0, tan(0.0), 1.0, 1.0, 0.0), (true ? mat3(injectionSwitch, 1.0, abs(1.0), 0.0, tan(0.0), 1.0, 1.0, 0.0) : _GLF_FUZZED(mat3(18.21, -9217.2363, 3.6, -3795.6766, -3.9, -790.716, 184.522, -9939.1762, 7168.2698)))))).y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), mix(float(min(injectionSwitch.y, injectionSwitch.y)), float(_GLF_FUZZED(6119.2498)), bool(false))))) + 0.0)))))));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 0u))), ~ (~ (_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 0u)))))) + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id.z, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id, uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id, (false ? _GLF_FUZZED(uvec4(105593u, 14495u, 135262u, 132915u)) : _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id, (GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id) | (GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id)))))).z), max(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id, uvec4(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id[0], (GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id[0]) + 0u), GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id[1], _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id, uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id, ~ (~ (GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id)))))[2], _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id[3], uint(uint(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id[3]))))), (true ? GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id : _GLF_FUZZED(uvec4(55565u, 160367u, _GLF_IDENTITY(53270u, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(53270u, ~ (~ (53270u))))), ~ (~ (uint(uint(_GLF_IDENTITY(53270u, ~ (~ (53270u))))))))), 62663u)))).z, clamp(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id, uvec4(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id[0], (GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id[0]) + 0u), GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id[1], _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id, uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id, ~ (~ (GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id)))))[2], _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id[3], uint(uint(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id[3]))))), (true ? GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id : _GLF_FUZZED(uvec4(55565u, 160367u, _GLF_IDENTITY(53270u, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(53270u, ~ (~ (53270u))))), ~ (~ (uint(uint(_GLF_IDENTITY(53270u, ~ (~ (53270u))))))))), 62663u)))).z, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id, uvec4(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id[0], (GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id[0]) + 0u), GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id[1], _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id, uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id, ~ (~ (GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id)))))[2], _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id[3], uint(uint(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id[3]))))), (true ? GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id : _GLF_FUZZED(uvec4(55565u, 160367u, _GLF_IDENTITY(53270u, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(53270u, ~ (~ (53270u))))), ~ (~ (uint(uint(_GLF_IDENTITY(53270u, ~ (~ (53270u))))))))), 62663u)))).z, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id, uvec4(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id[0], (GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id[0]) + 0u), GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id[1], _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id, uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id, ~ (~ (GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id)))))[2], _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id[3], uint(uint(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id[3]))))), (true ? GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id : _GLF_FUZZED(uvec4(55565u, 160367u, _GLF_IDENTITY(53270u, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(53270u, ~ (~ (53270u))))), ~ (~ (uint(uint(_GLF_IDENTITY(53270u, ~ (~ (53270u))))))))), 62663u)))).z))), _GLF_IDENTITY(~ _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id.z), (true ? (GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id.z) : _GLF_FUZZED(num_workgroup))), (true ? ~ (GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id.z) : _GLF_FUZZED(subgroup_base))))))), (workgroup_base + GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id.z) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) + GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id.w, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 0u))), ~ (~ (_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 0u)))))) + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id.z, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id, uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id, (false ? _GLF_FUZZED(uvec4(105593u, 14495u, 135262u, 132915u)) : _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id, (GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id) | (GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id)))))).z), max(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id, uvec4(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id[0], (GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id[0]) + 0u), GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id[1], _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id, uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id, ~ (~ (GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id)))))[2], _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id[3], uint(uint(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id[3]))))), (true ? GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id : _GLF_FUZZED(uvec4(55565u, 160367u, _GLF_IDENTITY(53270u, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(53270u, ~ (~ (53270u))))), ~ (~ (uint(uint(_GLF_IDENTITY(53270u, ~ (~ (53270u))))))))), 62663u)))).z, clamp(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id, uvec4(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id[0], (GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id[0]) + 0u), GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id[1], _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id, uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id, ~ (~ (GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id)))))[2], _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id[3], uint(uint(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id[3]))))), (true ? GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id : _GLF_FUZZED(uvec4(55565u, 160367u, _GLF_IDENTITY(53270u, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(53270u, ~ (~ (53270u))))), ~ (~ (uint(uint(_GLF_IDENTITY(53270u, ~ (~ (53270u))))))))), 62663u)))).z, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id, uvec4(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id[0], (GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id[0]) + 0u), GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id[1], _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id, uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id, ~ (~ (GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id)))))[2], _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id[3], uint(uint(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id[3]))))), (true ? GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id : _GLF_FUZZED(uvec4(55565u, 160367u, _GLF_IDENTITY(53270u, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(53270u, ~ (~ (53270u))))), ~ (~ (uint(uint(_GLF_IDENTITY(53270u, ~ (~ (53270u))))))))), 62663u)))).z, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id, uvec4(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id[0], (GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id[0]) + 0u), GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id[1], _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id, uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id, ~ (~ (GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id)))))[2], _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id[3], uint(uint(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id[3]))))), (true ? GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id : _GLF_FUZZED(uvec4(55565u, 160367u, _GLF_IDENTITY(53270u, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(53270u, ~ (~ (53270u))))), ~ (~ (uint(uint(_GLF_IDENTITY(53270u, ~ (~ (53270u))))))))), 62663u)))).z))), _GLF_IDENTITY(~ _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id.z), (true ? (GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id.z) : _GLF_FUZZED(num_workgroup))), (true ? ~ (GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id.z) : _GLF_FUZZED(subgroup_base))))))), (workgroup_base + GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id.z) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) + GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id.w) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 0u))), ~ (~ (_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 0u)))))) + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id.z, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id, uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id, (false ? _GLF_FUZZED(uvec4(105593u, 14495u, 135262u, 132915u)) : _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id, (GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id) | (GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id)))))).z), max(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id, uvec4(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id[0], (GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id[0]) + 0u), GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id[1], _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id, uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id, ~ (~ (GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id)))))[2], _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id[3], uint(uint(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id[3]))))), (true ? GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id : _GLF_FUZZED(uvec4(55565u, 160367u, _GLF_IDENTITY(53270u, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(53270u, ~ (~ (53270u))))), ~ (~ (uint(uint(_GLF_IDENTITY(53270u, ~ (~ (53270u))))))))), 62663u)))).z, clamp(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id, uvec4(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id[0], (GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id[0]) + 0u), GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id[1], _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id, uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id, ~ (~ (GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id)))))[2], _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id[3], uint(uint(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id[3]))))), (true ? GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id : _GLF_FUZZED(uvec4(55565u, 160367u, _GLF_IDENTITY(53270u, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(53270u, ~ (~ (53270u))))), ~ (~ (uint(uint(_GLF_IDENTITY(53270u, ~ (~ (53270u))))))))), 62663u)))).z, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id, uvec4(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id[0], (GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id[0]) + 0u), GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id[1], _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id, uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id, ~ (~ (GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id)))))[2], _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id[3], uint(uint(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id[3]))))), (true ? GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id : _GLF_FUZZED(uvec4(55565u, 160367u, _GLF_IDENTITY(53270u, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(53270u, ~ (~ (53270u))))), ~ (~ (uint(uint(_GLF_IDENTITY(53270u, ~ (~ (53270u))))))))), 62663u)))).z, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id, uvec4(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id[0], (GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id[0]) + 0u), GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id[1], _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id, uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id, ~ (~ (GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id)))))[2], _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id[3], uint(uint(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id[3]))))), (true ? GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id : _GLF_FUZZED(uvec4(55565u, 160367u, _GLF_IDENTITY(53270u, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(53270u, ~ (~ (53270u))))), ~ (~ (uint(uint(_GLF_IDENTITY(53270u, ~ (~ (53270u))))))))), 62663u)))).z))), _GLF_IDENTITY(~ _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id.z), (true ? (GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id.z) : _GLF_FUZZED(num_workgroup))), (true ? ~ (GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id.z) : _GLF_FUZZED(subgroup_base))))))), (workgroup_base + GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id.z) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) + GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id.w, uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 0u))), ~ (~ (_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 0u)))))) + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id.z, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id, uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id, (false ? _GLF_FUZZED(uvec4(105593u, 14495u, 135262u, 132915u)) : _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id, (GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id) | (GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id)))))).z), max(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id, uvec4(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id[0], (GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id[0]) + 0u), GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id[1], _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id, uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id, ~ (~ (GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id)))))[2], _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id[3], uint(uint(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id[3]))))), (true ? GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id : _GLF_FUZZED(uvec4(55565u, 160367u, _GLF_IDENTITY(53270u, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(53270u, ~ (~ (53270u))))), ~ (~ (uint(uint(_GLF_IDENTITY(53270u, ~ (~ (53270u))))))))), 62663u)))).z, clamp(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id, uvec4(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id[0], (GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id[0]) + 0u), GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id[1], _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id, uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id, ~ (~ (GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id)))))[2], _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id[3], uint(uint(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id[3]))))), (true ? GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id : _GLF_FUZZED(uvec4(55565u, 160367u, _GLF_IDENTITY(53270u, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(53270u, ~ (~ (53270u))))), ~ (~ (uint(uint(_GLF_IDENTITY(53270u, ~ (~ (53270u))))))))), 62663u)))).z, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id, uvec4(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id[0], (GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id[0]) + 0u), GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id[1], _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id, uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id, ~ (~ (GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id)))))[2], _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id[3], uint(uint(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id[3]))))), (true ? GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id : _GLF_FUZZED(uvec4(55565u, 160367u, _GLF_IDENTITY(53270u, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(53270u, ~ (~ (53270u))))), ~ (~ (uint(uint(_GLF_IDENTITY(53270u, ~ (~ (53270u))))))))), 62663u)))).z, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id, uvec4(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id[0], (GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id[0]) + 0u), GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id[1], _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id, uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id, ~ (~ (GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id)))))[2], _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id[3], uint(uint(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id[3]))))), (true ? GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id : _GLF_FUZZED(uvec4(55565u, 160367u, _GLF_IDENTITY(53270u, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(53270u, ~ (~ (53270u))))), ~ (~ (uint(uint(_GLF_IDENTITY(53270u, ~ (~ (53270u))))))))), 62663u)))).z))), _GLF_IDENTITY(~ _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id.z), (true ? (GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id.z) : _GLF_FUZZED(num_workgroup))), (true ? ~ (GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id.z) : _GLF_FUZZED(subgroup_base))))))), (workgroup_base + GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id.z) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) + GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id.w, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, min(_GLF_IDENTITY(3, (3) | (3)), _GLF_IDENTITY(3, (3) - 0)))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)) < _GLF_IDENTITY((1 & int(_GLF_ONE(1.0, injectionSwitch.y))), min((1 & int(_GLF_ONE(1.0, injectionSwitch.y))), (1 & int(_GLF_ONE(1.0, injectionSwitch.y)))))); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true))))))
          break;
         return;
        }
       return;
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          return;
         do
          {
           if(_GLF_DEAD(false))
            continue;
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (true ? _injected_loop_counter : _GLF_FUZZED((_injected_loop_counter ++))))) | 0) > (0 >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter --)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))) && true))))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))) && true))))), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))) && true))))), false, true))), false, false)))));
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
        }
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id.z + (_GLF_IDENTITY((GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id.w + 1) % subgroup_size, uint(uint(_GLF_IDENTITY((GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id.w + 1) % subgroup_size, (1u ^ 1u) | ((GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id.w + 1) % subgroup_size)))))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), 0u | (subgroup_id))))) | 0u, _GLF_IDENTITY((0u | _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) << _GLF_IDENTITY(0u, (0u) ^ 0u), uint(uint((0u) << 0u))))), max((0u | _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) << 0u, uint(uint((0u) << 0u))))), _GLF_IDENTITY((0u | _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) << 0u, uint(uint((0u) << 0u))))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY((0u | _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) << 0u, uint(uint((0u) << 0u))))), ((0u | _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) << 0u, uint(uint((0u) << 0u)))))) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY((0u | _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) << 0u, uint(uint((0u) << 0u))))), ((0u | _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) << 0u, uint(uint((0u) << 0u)))))) >> 0u))))))) * uint(_GLF_ONE(1.0, injectionSwitch.y)))) | (_GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id.z, _GLF_IDENTITY(clamp(workgroup_base + GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id.z, workgroup_base + GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id.z, _GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id.z, (workgroup_base + GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id.z) | 0u)), (clamp(workgroup_base + GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id.z, workgroup_base + GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id.z, _GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id.z, (workgroup_base + GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id.z) | 0u))) | (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))) + (_GLF_IDENTITY(_GLF_IDENTITY((GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id.w + 1), min((GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id.w + 1), (GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id.w + 1))) % subgroup_size, ((GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id.w + 1) % subgroup_size) | (_GLF_IDENTITY((GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id.w + 1) % subgroup_size, ((GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id.w + 1) % subgroup_size) | ((GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id.w + 1) % subgroup_size))))))), max(_GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id.z + ((GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id.w + 1) % subgroup_size), (_GLF_IDENTITY(0u | 0u, (0u | 0u) * uint(_GLF_ONE(1.0, injectionSwitch.y)))) | (workgroup_base + GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id.z + ((GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id.w + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), min(subgroup_size, subgroup_size))))))), _GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id.z + _GLF_IDENTITY(((GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id.w + 1) % subgroup_size), (_GLF_IDENTITY((_GLF_IDENTITY((GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id.w + 1) % subgroup_size, (_GLF_IDENTITY((GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id.w + 1), 0u + ((GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id.w + 1))) % subgroup_size) ^ 0u)), min(((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id.w + 1, (GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id.w + 1) / 1u)) % _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), min(~ (subgroup_size), ~ (subgroup_size)))))), (_GLF_IDENTITY((GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id.w + 1) % subgroup_size, min(_GLF_IDENTITY((GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id.w + 1) % subgroup_size, ((GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id.w + 1) % subgroup_size) - 0u), _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id.w + 1) % subgroup_size, min((GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id.w + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), (GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id.w + 1) % subgroup_size)))))))) << _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u | 0u, (0u | 0u) * uint(_GLF_ONE(1.0, injectionSwitch.y)))), (false ? _GLF_FUZZED(workgroup_id) : (_GLF_IDENTITY(0u | 0u, (0u | 0u) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))) | (workgroup_base + GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id.z + ((GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id.w + _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, clamp(1, 1, 1)) : _GLF_FUZZED(71279)))) % subgroup_size)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(0u | 0u, (0u | 0u) * uint(_GLF_ONE(1.0, injectionSwitch.y)))), (false ? _GLF_FUZZED(workgroup_id) : (_GLF_IDENTITY(0u | 0u, (0u | 0u) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))) | (workgroup_base + GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id.z + ((GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id.w + _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, clamp(1, 1, 1)) : _GLF_FUZZED(71279)))) % subgroup_size))), uint(uint(~ (_GLF_IDENTITY((_GLF_IDENTITY(0u | 0u, (0u | 0u) * uint(_GLF_ONE(1.0, injectionSwitch.y)))), (false ? _GLF_FUZZED(workgroup_id) : (_GLF_IDENTITY(0u | 0u, (0u | 0u) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))) | (workgroup_base + GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id.z + ((GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id.w + _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, clamp(1, 1, 1)) : _GLF_FUZZED(71279)))) % subgroup_size)))))))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     return;
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 ^ 0)), _GLF_IDENTITY(bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 ^ 0)), false, false, false)), (bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 ^ 0)), false, false, false))) && true)); _injected_loop_counter --)
        {
         return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))
          continue;
        }
      }
    }
  }
 GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id.x = next_virtual_gid;
 uint read = 0;
 GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id.y = read;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(89.66)), clamp(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(89.66)), _GLF_IDENTITY(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(89.66)), max(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(89.66)), vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(89.66)))), _GLF_IDENTITY(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(89.66)), mat2(1.0) * (vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(89.66)))))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_IDENTITY((injectionSwitch)[1], 0.0 + (_GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(7.2)), float((injectionSwitch)[1]), bool(true)))))), float(_GLF_FUZZED(75.73)), bool(false)))))), bvec2(true, true))).y) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x2(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, sqrt(1.0)), mat2(1.0) * (mat4x2(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, sqrt(1.0))))))), float(_GLF_FUZZED((852.447 + -9427.8795))), bool(false))) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(89.66)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(true, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, true && (true)), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, true && (true)), true, true), true)))))))).y) && true)), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-7.4), max(_GLF_FUZZED(-7.4), _GLF_FUZZED(-7.4))), _GLF_FUZZED(89.66)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(true, true))).y) && true)))))))))
  return;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, 0.0 + (0.0)), clamp(_GLF_IDENTITY(0.0, 0.0 + (0.0)), _GLF_IDENTITY(0.0, 0.0 + (0.0)), _GLF_IDENTITY(0.0, 0.0 + (0.0)))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), max(_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, 0.0 + (0.0)), (_GLF_IDENTITY(0.0, 0.0 + (0.0))) / round(length(normalize(vec3(1.0, 1.0, 1.0))))), injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0 + (0.0)), injectionSwitch.x)))), (int(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, 0.0 + (0.0)), clamp(_GLF_IDENTITY(0.0, 0.0 + (0.0)), _GLF_IDENTITY(0.0, 0.0 + (0.0)), _GLF_IDENTITY(0.0, 0.0 + (0.0)))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), max(_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, 0.0 + (0.0)), (_GLF_IDENTITY(0.0, 0.0 + (0.0))) / round(length(normalize(vec3(1.0, 1.0, 1.0))))), injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0 + (0.0)), injectionSwitch.x))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))); _GLF_IDENTITY(_injected_loop_counter --, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_injected_loop_counter --, 0 | (_injected_loop_counter --)) : _GLF_FUZZED(_injected_loop_counter))))
    {
     atomicStore(buf[GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id.x], uint(1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) - 0)) - 0), clamp(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY((4), clamp((4), (4), (4))) - 0)) - 0), _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) - 0)) - 0), _GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY((4), clamp(_GLF_IDENTITY((4), ((4)) | ((4))), (4), (4))) - 0)) - 0)), min(_GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) - 0)) - 0)), ((_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY((4), ~ (~ ((4)))) - 0)), _GLF_IDENTITY(0 | ((_GLF_IDENTITY(4, _GLF_IDENTITY((4), ~ (~ ((4)))) - 0))), max(0 | ((_GLF_IDENTITY(4, _GLF_IDENTITY((4), ~ (~ ((4)))) - 0))), 0 | ((_GLF_IDENTITY(4, _GLF_IDENTITY((4), ~ (~ ((4)))) - 0)))))) - 0))) >> 0), (_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), (_GLF_IDENTITY(4, (4) - 0)) - 0)))) | 0), _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), (4) - 0)) - 0, min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), (4) - 0)) - 0, clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), (4) - 0)) - 0, 0 + ((_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), (4) - 0)) - 0)), (_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), (4) - 0)) - 0, (_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), (4) - 0)) - 0)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), (4) - 0)) - 0, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), (4) - 0)) - 0, 0 ^ ((_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), (4) - 0)) - 0))) | 0)))), clamp(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) - 0)) - _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(0, 1, ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))))), 0 ^ (int(ivec3(0, 1, ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), max(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5))))) | 0)) >> _GLF_IDENTITY(int(5), int(5))))))))), _GLF_IDENTITY(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, min(4, 4)), 4))), (~ (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) << 0), _GLF_IDENTITY(4, (4) << 0), 4)))) >> (0 | 0)))), (_GLF_IDENTITY(4, _GLF_IDENTITY((4) - 0, clamp((4) - 0, (4) - _GLF_IDENTITY(0, ~ (~ (0))), (4) - 0)))) - _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) ^ 0)) | (_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))))))), _GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, (4) >> 0))), (_GLF_IDENTITY(4, (4) - 0)) - 0))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) - 0)) - 0), _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) - 0)) - 0), (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) - 0)) - 0)) + 0), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) - 0)) - 0)), (clamp(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) - 0)) - 0), _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) - 0)) - 0), (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) - 0)) - 0)) + 0), _GLF_IDENTITY(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(30607))), (_GLF_IDENTITY(4, (4) - 0)) - 0))) - 0)), 64, 4);
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        continue;
       return;
      }
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))), ! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || _GLF_IDENTITY(false, ! (! (false))))), true))))))))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
      {
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     else
      {
      }
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), bool(bvec2(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), (bool(bvec4(false, true, true, false))) && true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
     return;
    }
  }
 if((GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id.w % 2) == _GLF_IDENTITY(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), int(_GLF_IDENTITY(ivec2(0, 1), ivec2(ivec4(ivec2(0, 1), 0, 1))))))
  {
   if(_GLF_DEAD(false))
    return;
   do
    {
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) && true))), true && (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) && true))), bool(bool(bool(bool(_GLF_IDENTITY(false, (false) && true)))))))))))
          {
          }
         else
          {
           do
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))))
                  break;
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    return;
                  }
                 return;
                }
              }
             else
              {
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
           GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id.y = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, _GLF_IDENTITY((4) - int(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(_GLF_IDENTITY((4) - int(_GLF_ZERO(0.0, injectionSwitch.x)), max((4) - int(_GLF_ZERO(0.0, injectionSwitch.x)), (4) - int(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY((4) - int(_GLF_ZERO(0.0, injectionSwitch.x)), clamp((4) - int(_GLF_ZERO(0.0, injectionSwitch.x)), (4) - int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((4) - int(_GLF_ZERO(0.0, injectionSwitch.x)), clamp((_GLF_IDENTITY(4, 0 ^ (_GLF_IDENTITY(4, 0 + (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x)), (4) - int(_GLF_ZERO(0.0, injectionSwitch.x)), (4) - _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), min(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) | (int(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), min(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)))))))))), _GLF_IDENTITY((4) - int(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY((4) - int(_GLF_ZERO(0.0, injectionSwitch.x)), 0 ^ ((4) - int(_GLF_ZERO(0.0, injectionSwitch.x))))) | 0)))), 64, 2);
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 | (0 | 0))); _injected_loop_counter ++)
      {
       return;
      }
    }
   do
    {
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
      {
       if(_GLF_DEAD(false))
        continue;
       return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        break;
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id.y = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) + _GLF_IDENTITY(0, (false ? _GLF_FUZZED(12477) : 0)))) | 0), clamp(64, 64, 64)), 2);
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), true && (! (false)))))))));
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), false)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), false))))), bool(bool(! (bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), false)))))))), bool(bvec3(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), false))))), bool(bool(! (bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), false)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
          return;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && true))), _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (_GLF_IDENTITY(! (! (true)), bool(bvec3(_GLF_IDENTITY(! (! (true)), ! (! (! (! (true))))), false, true)))))), false))), true))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), ((! (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), ! (! ((! (false))))))), true)), bool(bvec3(bool(bvec2((! (false)), true)), true, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), _GLF_IDENTITY(bool(bvec2((! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), false || ((false)))) && true)), true)), bool(bvec3(bool(_GLF_IDENTITY(bvec2((! (false)), true), bvec2(bvec4(bvec2((! (false)), true), false, true)))), true, true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec2((! (false)), true)), bool(bvec3(bool(bvec2((! (false)), true)), true, true))))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec2((! (false)), true)), bool(bvec3(bool(bvec2((! (false)), true)), true, true)))))), ! (_GLF_IDENTITY(! (bool(! (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec2((! (false)), true)), bool(bvec3(bool(bvec2((! (false)), true)), true, true))))))), ! (! (_GLF_IDENTITY(! (bool(! (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec2((! (false)), true)), bool(bvec3(bool(bvec2((! (false)), true)), true, true))))))), bool(bvec2(! (bool(! (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec2((! (false)), true)), bool(bvec3(bool(bvec2((! (false)), true)), true, true))))))), true)))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true))), true), bvec3(bvec4(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), ((! (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), ! (! ((! (false))))))), true)), bool(bvec3(bool(bvec2((! (false)), true)), true, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), _GLF_IDENTITY(bool(bvec2((! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), false || ((false)))) && true)), true)), bool(bvec3(bool(_GLF_IDENTITY(bvec2((! (false)), true), bvec2(bvec4(bvec2((! (false)), true), false, true)))), true, true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec2((! (false)), true)), bool(bvec3(bool(bvec2((! (false)), true)), true, true))))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec2((! (false)), true)), bool(bvec3(bool(bvec2((! (false)), true)), true, true)))))), ! (_GLF_IDENTITY(! (bool(! (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec2((! (false)), true)), bool(bvec3(bool(bvec2((! (false)), true)), true, true))))))), ! (! (_GLF_IDENTITY(! (bool(! (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec2((! (false)), true)), bool(bvec3(bool(bvec2((! (false)), true)), true, true))))))), bool(bvec2(! (bool(! (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec2((! (false)), true)), bool(bvec3(bool(bvec2((! (false)), true)), true, true))))))), true)))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true))), true), true)))), bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), false)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), false)))), bvec2(bvec4(bvec2(bvec2(bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), false)))), true, false)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), false)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), false)))), bvec2(bvec4(bvec2(bvec2(bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), false)))), true, false))))))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false)), true)), false)), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), false)))), bvec2(bvec4(bvec2(bvec2(bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), false)))), true, false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), false)))), bvec2(bvec4(bvec2(bvec2(bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), false)))), true, false))))))))), false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), false)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), false)))), bvec2(bvec4(bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))))), false)))), true, false)))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec2(bvec4(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) && true)), true)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), false)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), false)))), bvec2(bvec4(bvec2(bvec2(bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))), true)), false)))), true, false)))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, _GLF_IDENTITY(true, (true) && true))))))), true)), true)))), true, false))))))))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
          }
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), vec2(mat3x2(_GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), min((injectionSwitch) - vec2(0.0, 0.0), (injectionSwitch) - vec2(0.0, 0.0))), 0.0, 1.0, 0.0, round(length(normalize(1.0))))))).x > injectionSwitch.y))))
          return;
        }
      }
    }
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, int(ivec3(1, 0, int(_GLF_ONE(1.0, injectionSwitch.y)))))); _GLF_IDENTITY(_injected_loop_counter ++, _GLF_IDENTITY(0 | (_injected_loop_counter ++), (0 | (_injected_loop_counter ++)) ^ 0)))
      {
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
     return;
    }
  }
 subgroupBarrier();
 for(int _injected_loop_counter = _GLF_IDENTITY(1, max(1, 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
    }
  }
 do
  {
   atomicStore(checker[virtual_gid], GLF_merged4_0_1_16_1_1_4_2_1_13_3_1_17next_virtual_gidreadsubgroup_basesubgroup_local_id.y, _GLF_IDENTITY(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, 0 + (4)))), (4) << 0))) : _GLF_FUZZED(65227))), (_GLF_IDENTITY(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) << 0) : _GLF_FUZZED(65227))), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(_GLF_IDENTITY(-30725, 0 ^ _GLF_IDENTITY((-30725), ((-30725)) | (_GLF_IDENTITY((-30725), (true ? (-30725) : _GLF_FUZZED(-87975))))))) : _GLF_IDENTITY(_GLF_IDENTITY(4, (4) + 0), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true ? _GLF_IDENTITY(4, (4) << 0) : _GLF_FUZZED(65227), (_GLF_IDENTITY(true ? _GLF_IDENTITY(4, (4) << 0) : _GLF_FUZZED(65227), ~ (_GLF_IDENTITY(~ (true ? _GLF_IDENTITY(4, (4) << 0) : _GLF_FUZZED(65227)), 1 * (~ (true ? _GLF_IDENTITY(4, (4) << 0) : _GLF_FUZZED(65227))))))) - 0)), ((true ? _GLF_IDENTITY(4, (4) << 0) : _GLF_FUZZED(_GLF_IDENTITY(65227, (65227) >> ((0 >> _GLF_IDENTITY(int(5), int(5))) | 0))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(_GLF_IDENTITY((true ? _GLF_IDENTITY(4, (4) << 0) : _GLF_FUZZED(65227)), ((true ? _GLF_IDENTITY(4, _GLF_IDENTITY((4), 0 ^ ((4))) << 0) : _GLF_FUZZED(65227))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY((true ? _GLF_IDENTITY(4, _GLF_IDENTITY((4), ((4)) >> int(_GLF_ZERO(0.0, injectionSwitch.x))) << 0) : _GLF_FUZZED(65227)), ((true ? _GLF_IDENTITY(4, (4) << 0) : _GLF_FUZZED(65227))) - int(_GLF_ZERO(0.0, injectionSwitch.x)))) | 0)) | (_GLF_IDENTITY((true ? _GLF_IDENTITY(4, _GLF_IDENTITY((4) << 0, max((4) << 0, (4) << 0))) : _GLF_FUZZED(65227)), ((true ? _GLF_IDENTITY(4, (4) << 0) : _GLF_FUZZED(65227))) - int(_GLF_ZERO(0.0, injectionSwitch.x))))))))) ^ 0), 64, _GLF_IDENTITY(4, (4) - 0));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    continue;
  }
 while(_GLF_WRAPPED_LOOP(false));
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * vec2(1.0, 1.0))) : _GLF_FUZZED(min(vec2(1.1, 4.9), -4343.7502)))).x > injectionSwitch.y)))))) && true)))))
    {
     if(_GLF_DEAD(false))
      break;
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 1)); _injected_loop_counter ++)
      {
       return;
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(2.8, -6.7)) : injectionSwitch)).y))))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
