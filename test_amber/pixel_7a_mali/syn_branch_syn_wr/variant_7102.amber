#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((! (false)), bool(bvec2((! (false)), false))), (_GLF_IDENTITY(! _GLF_IDENTITY((! (false)), bool(bvec2((! (false)), false))), false || (! _GLF_IDENTITY((! (false)), bool(bvec2((! (false)), false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false)), true, true))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true, ! (! ((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))) && true)))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) + uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, 0u | (0u)), 0u)), max(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, 0u | (0u)), 0u)), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, 0u | (0u)), 0u))))))) + uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), max(~ (0u), _GLF_IDENTITY(~ (0u), (~ (0u)) / 1u))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(0u, 0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, 0u | (0u)), 0u))))) + uvec3(0u, _GLF_IDENTITY(0u, (0u) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u), ((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(0u, 0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, 0u | (0u)), 0u))))) + uvec3(0u, _GLF_IDENTITY(0u, (0u) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u)) ^ uvec3(0u, 0u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (0u)), clamp(_GLF_IDENTITY(0u, 0u | (0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (0u)), min(_GLF_IDENTITY(0u, 0u | (0u)), _GLF_IDENTITY(0u, 0u | (0u)))), _GLF_IDENTITY(0u, 0u | (0u)))), 0u))))) + uvec3(0u, 0u, 0u), uvec3(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))))), (gl_NumWorkGroups) << uvec3(0u, 0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, 0u | (0u)), 0u))))) + uvec3(0u, 0u, 0u), 0u), uvec4(1u, 1u, 1u, 1u) * (_GLF_IDENTITY(uvec4((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(0u, 0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, 0u | (0u)), 0u))))) + uvec3(0u, 0u, 0u), 0u), uvec4(1u, 1u, 1u, 1u) * (uvec4((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(0u, 0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, 0u | (0u)), 0u)))), clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(0u, 0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, 0u | (0u)), 0u)))), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(0u, 0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, 0u | (0u)), 0u)))), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(0u, 0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, 0u | (0u)), 0u))))))) + uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, (0u | 0u), 0u, 0u)), (true ? uint(uvec4(0u, (0u | 0u), 0u, 0u)) : _GLF_FUZZED((subgroup_local_id --))))), 0u, 0u), 0u)))))))))).x, 0u + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) + uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, 0u | (0u)), 0u)), max(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, 0u | (0u)), 0u)), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, 0u | (0u)), 0u))))))) + uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), max(~ (0u), _GLF_IDENTITY(~ (0u), (~ (0u)) / 1u))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(0u, 0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, 0u | (0u)), 0u))))) + uvec3(0u, _GLF_IDENTITY(0u, (0u) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u), ((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(0u, 0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, 0u | (0u)), 0u))))) + uvec3(0u, _GLF_IDENTITY(0u, (0u) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u)) ^ uvec3(0u, 0u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (0u)), clamp(_GLF_IDENTITY(0u, 0u | (0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (0u)), min(_GLF_IDENTITY(0u, 0u | (0u)), _GLF_IDENTITY(0u, 0u | (0u)))), _GLF_IDENTITY(0u, 0u | (0u)))), 0u))))) + uvec3(0u, 0u, 0u), uvec3(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))))), (gl_NumWorkGroups) << uvec3(0u, 0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, 0u | (0u)), 0u))))) + uvec3(0u, 0u, 0u), 0u), uvec4(1u, 1u, 1u, 1u) * (_GLF_IDENTITY(uvec4((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(0u, 0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, 0u | (0u)), 0u))))) + uvec3(0u, 0u, 0u), 0u), uvec4(1u, 1u, 1u, 1u) * (uvec4((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(0u, 0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, 0u | (0u)), 0u)))), clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(0u, 0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, 0u | (0u)), 0u)))), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(0u, 0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, 0u | (0u)), 0u)))), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(0u, 0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, 0u | (0u)), 0u))))))) + uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, (0u | 0u), 0u, 0u)), (true ? uint(uvec4(0u, (0u | 0u), 0u, 0u)) : _GLF_FUZZED((subgroup_local_id --))))), 0u, 0u), 0u)))))))))).x));
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, uint(uvec3(_GLF_IDENTITY(workgroup_size, (workgroup_size) >> 0u) * workgroup_id, 0u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(min(1u, 1u), (min(1u, 1u)) ^ 0u))) << 0u))));
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) : _GLF_FUZZED(subgroup_local_id))) * subgroup_size, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)) >> (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(true ? subgroup_id : _GLF_FUZZED(subgroup_local_id), min(_GLF_IDENTITY(true ? subgroup_id : _GLF_FUZZED(subgroup_local_id), (false ? _GLF_FUZZED(workgroup_size) : true ? subgroup_id : _GLF_FUZZED(subgroup_local_id))), true ? subgroup_id : _GLF_FUZZED(subgroup_local_id))))) * subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((true ? subgroup_id : _GLF_FUZZED(subgroup_local_id)), min((true ? subgroup_id : _GLF_FUZZED(subgroup_local_id)), _GLF_IDENTITY((true ? subgroup_id : _GLF_FUZZED(subgroup_local_id)), _GLF_IDENTITY(min((true ? subgroup_id : _GLF_FUZZED(subgroup_local_id)), _GLF_IDENTITY((true ? subgroup_id : _GLF_FUZZED(subgroup_local_id)), ((true ? subgroup_id : _GLF_FUZZED(subgroup_local_id))) | ((true ? subgroup_id : _GLF_FUZZED(subgroup_local_id))))), (min((true ? subgroup_id : _GLF_FUZZED(subgroup_local_id)), _GLF_IDENTITY((true ? subgroup_id : _GLF_FUZZED(subgroup_local_id)), ((_GLF_IDENTITY(true ? subgroup_id : _GLF_FUZZED(subgroup_local_id), max(_GLF_IDENTITY(true ? subgroup_id : _GLF_FUZZED(subgroup_local_id), min(true ? subgroup_id : _GLF_FUZZED(subgroup_local_id), true ? subgroup_id : _GLF_FUZZED(subgroup_local_id))), true ? subgroup_id : _GLF_FUZZED(subgroup_local_id))))) | ((true ? _GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) << 0u))) : _GLF_FUZZED(subgroup_local_id)))))) / 1u))))) * subgroup_size, 0u))), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(subgroup_local_id))) * subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(true ? subgroup_id : _GLF_FUZZED(subgroup_local_id), min(true ? subgroup_id : _GLF_FUZZED(subgroup_local_id), true ? subgroup_id : _GLF_FUZZED(subgroup_local_id))))) * subgroup_size)), 1u)))));
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, 1u * (workgroup_base)), workgroup_base)))), workgroup_base, workgroup_base)), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, 1u * (workgroup_base)), workgroup_base)))), workgroup_base, workgroup_base)), 0u)), (uint(uvec2(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, 1u * (workgroup_base)), workgroup_base)))), workgroup_base, workgroup_base)), 0u))) / 1u)) + subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) + subgroup_base, _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base))), clamp((_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base))), (_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base))), 0u | ((_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base)))))) - 0u))) | (subgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + _GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(workgroup_base)))) | _GLF_IDENTITY(0u, (0u) ^ 0u), (_GLF_IDENTITY((workgroup_base + subgroup_base), min((workgroup_base + subgroup_base), _GLF_IDENTITY((workgroup_base + subgroup_base), 0u | ((workgroup_base + subgroup_base))))) | 0u) << 0u), 1u * (_GLF_IDENTITY((workgroup_base + subgroup_base) | 0u, ((workgroup_base + subgroup_base) | 0u) << 0u)))), _GLF_IDENTITY(workgroup_base + subgroup_base, clamp(_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uint(_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, (1u & _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, (1u) / 1u) : _GLF_FUZZED(uvec2(uvec4(159711u, 12782u, 177339u, 47433u)).g))))))) + subgroup_base))), workgroup_base + subgroup_base, workgroup_base + _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, _GLF_IDENTITY(subgroup_base, 0u | (subgroup_base))))))), (_GLF_IDENTITY(clamp(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((workgroup_base + subgroup_base) | 0u, _GLF_IDENTITY(((_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) * 1u)) | 0u) << 0u, (false ? _GLF_FUZZED((workgroup_size)) : ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u), workgroup_base)) + subgroup_base, (workgroup_base + _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, (subgroup_base) - 0u)) << 0u)) * 1u)) | 0u) << 0u)))), _GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + _GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base))))), (true ? _GLF_IDENTITY(clamp(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_base) | 0u, _GLF_IDENTITY(((_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) * 1u)) | 0u) << 0u, (false ? _GLF_FUZZED((workgroup_size)) : ((_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) * 1u)) | 0u) << 0u))), (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_base) | 0u, _GLF_IDENTITY(((_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) * 1u)) | 0u) << 0u, (false ? _GLF_FUZZED((workgroup_size)) : ((_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) * 1u)) | 0u) << 0u))), 0u ^ (_GLF_IDENTITY((workgroup_base + subgroup_base) | 0u, _GLF_IDENTITY(((_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) * 1u)) | 0u) << 0u, (false ? _GLF_FUZZED((workgroup_size)) : ((_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) * 1u)) | 0u) << 0u)))))) ^ 0u)), _GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + _GLF_IDENTITY(subgroup_base, ~ (~ (_GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base))))), workgroup_base + subgroup_base, workgroup_base + _GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base))))), (clamp(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 1u))) + subgroup_base) | 0u, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)), (workgroup_base + subgroup_base) * 1u)), ((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)), (workgroup_base + subgroup_base) * 1u))) << 0u) | 0u) << 0u, (false ? _GLF_FUZZED((workgroup_size)) : ((_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) * 1u)) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) << 0u)) << 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + _GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)))), 1u * (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) / uint(_GLF_ONE(1.0, injectionSwitch.y))), clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + _GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + _GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)))), 1u * (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) / uint(_GLF_ONE(1.0, injectionSwitch.y))), clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + _GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + _GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)))), 1u * (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) / uint(_GLF_ONE(1.0, injectionSwitch.y))), clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + _GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base))))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + _GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)))), 1u * (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) / uint(_GLF_ONE(1.0, injectionSwitch.y))), clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + _GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + _GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)))), 1u * (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) / uint(_GLF_ONE(1.0, injectionSwitch.y))), clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + _GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + _GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)))), 1u * (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) / uint(_GLF_ONE(1.0, injectionSwitch.y))), clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + _GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + _GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)))), 1u * (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) / uint(_GLF_ONE(1.0, injectionSwitch.y))), clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + _GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + _GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)))), 1u * (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) / uint(_GLF_ONE(1.0, injectionSwitch.y))), clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + _GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base))))))) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + _GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)))), 1u * (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) / uint(_GLF_ONE(1.0, injectionSwitch.y))), clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + _GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)))))))))))) - uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x))) : _GLF_FUZZED(subgroup_base)))) + (_GLF_IDENTITY(_GLF_IDENTITY(108785u, max(108785u, 108785u)), uint(_GLF_IDENTITY(uint(108785u), (uint(108785u)) * 1u))) & 0u)), (_GLF_IDENTITY(clamp(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base))), clamp((_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base))), (_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base))), 0u | ((_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base)))))) - 0u))) | (subgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((true ? subgroup_base : _GLF_FUZZED(workgroup_base)), ((true ? subgroup_base : _GLF_FUZZED(workgroup_base))) | 0u))) | 0u, clamp((workgroup_base + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((true ? subgroup_base : _GLF_FUZZED(workgroup_base)), ((true ? subgroup_base : _GLF_FUZZED(workgroup_base))) | 0u))) | 0u, _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((true ? subgroup_base : _GLF_FUZZED(workgroup_base)), ((true ? subgroup_base : _GLF_FUZZED(workgroup_base))) | 0u))) | 0u, 0u | (_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((true ? subgroup_base : _GLF_FUZZED(workgroup_base)), ((true ? subgroup_base : _GLF_FUZZED(workgroup_base))) | 0u))) | 0u, 1u * ((workgroup_base + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((true ? subgroup_base : _GLF_FUZZED(workgroup_base)), ((true ? subgroup_base : _GLF_FUZZED(workgroup_base))) | 0u))) | 0u)))), _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((true ? subgroup_base : _GLF_FUZZED(workgroup_base)), ((true ? subgroup_base : _GLF_FUZZED(workgroup_base))) | 0u))) | 0u, min(_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((true ? subgroup_base : _GLF_FUZZED(workgroup_base)), ((true ? subgroup_base : _GLF_FUZZED(workgroup_base))) | 0u))) | 0u, ((workgroup_base + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((true ? subgroup_base : _GLF_FUZZED(workgroup_base)), ((true ? subgroup_base : _GLF_FUZZED(workgroup_base))) | 0u))) | 0u) | ((workgroup_base + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((true ? subgroup_base : _GLF_FUZZED(workgroup_base)), ((true ? subgroup_base : _GLF_FUZZED(workgroup_base))) | 0u))) | 0u)), (workgroup_base + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((true ? subgroup_base : _GLF_FUZZED(workgroup_base)), ((true ? subgroup_base : _GLF_FUZZED(workgroup_base))) | 0u))) | 0u)))), (_GLF_IDENTITY((workgroup_base + subgroup_base), min((workgroup_base + subgroup_base), _GLF_IDENTITY((workgroup_base + subgroup_base), 0u | ((workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) - 0u)))))) | 0u) << 0u), 1u * (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) ^ 0u)) | 0u, ((workgroup_base + subgroup_base) | 0u) << 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base : _GLF_FUZZED(workgroup_id))) + subgroup_base, clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base, ~ (~ (workgroup_base + subgroup_base)))), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(subgroup_id) : (_GLF_IDENTITY(workgroup_base + subgroup_base, ~ (~ (workgroup_base + subgroup_base)))))))), uint(uint(_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, (1u & 1u)))) + subgroup_base))), _GLF_IDENTITY(workgroup_base + subgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, workgroup_base + subgroup_base))))), workgroup_base + _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, _GLF_IDENTITY(subgroup_base, 0u | (subgroup_base))))))), (_GLF_IDENTITY(_GLF_IDENTITY(clamp(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((workgroup_base + subgroup_base) | 0u, _GLF_IDENTITY(((_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) * 1u)) | 0u) << 0u, (false ? _GLF_FUZZED((workgroup_size)) : ((_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(subgroup_size))) + subgroup_base), max((_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(subgroup_size))) + subgroup_base), (_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(subgroup_size))) + subgroup_base))) * 1u)) | 0u) << 0u)))), _GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(0u, (0u) | 0u) ^ (_GLF_IDENTITY(subgroup_base, clamp(_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base)), _GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)), subgroup_base))))))), (true ? _GLF_IDENTITY(clamp(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((workgroup_base + subgroup_base) | 0u, _GLF_IDENTITY(((_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) * 1u)) | 0u) << 0u, (false ? _GLF_FUZZED((workgroup_size)) : ((_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) * 1u)) | 0u) << 0u)))), _GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + _GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base))))), (clamp(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, uint(uvec2(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u), 1u))) + subgroup_base) | 0u, _GLF_IDENTITY(((_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) * 1u)) | 0u) << 0u, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED((workgroup_size)) : ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, max(workgroup_base + subgroup_base, workgroup_base + subgroup_base)), (workgroup_base + subgroup_base) * 1u)) | 0u) << 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + _GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)))), 1u * (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) / uint(_GLF_ONE(1.0, injectionSwitch.y))), clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + _GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)))))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(subgroup_base))), max(_GLF_IDENTITY(_GLF_IDENTITY(clamp(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((workgroup_base + subgroup_base) | 0u, _GLF_IDENTITY(((_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) * 1u)) | 0u) << 0u, (false ? _GLF_FUZZED((workgroup_size)) : ((_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) * 1u)) | 0u) << 0u)))), _GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + _GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base))))), (true ? _GLF_IDENTITY(clamp(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((workgroup_base + subgroup_base) | 0u, _GLF_IDENTITY(((_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) * 1u)) | 0u) << 0u, (false ? _GLF_FUZZED((workgroup_size)) : ((_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) * 1u)) | 0u) << 0u)))), _GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + _GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base))))), (clamp(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 1u))) + subgroup_base) | 0u, _GLF_IDENTITY(((_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) * 1u)) | 0u) << 0u, (false ? _GLF_FUZZED((workgroup_size)) : ((_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) * 1u)) | 0u) << 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + _GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)))), 1u * (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) / uint(_GLF_ONE(1.0, injectionSwitch.y))), clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + _GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)))))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(subgroup_base))), (_GLF_IDENTITY(_GLF_IDENTITY(clamp(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((workgroup_base + subgroup_base) | 0u, _GLF_IDENTITY(((_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) * 1u)) | 0u) << 0u, (false ? _GLF_FUZZED((workgroup_size)) : ((_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) * 1u)) | 0u) << 0u)))), _GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + _GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base))))), (true ? _GLF_IDENTITY(clamp(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((workgroup_base + subgroup_base) | 0u, _GLF_IDENTITY(((_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) * 1u)) | 0u) << 0u, (false ? _GLF_FUZZED((workgroup_size)) : ((_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) * 1u)) | 0u) << 0u)))), _GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + _GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base))))), (clamp(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 1u))) + subgroup_base) | 0u, _GLF_IDENTITY(((_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) * 1u)) | 0u) << 0u, (false ? _GLF_FUZZED((workgroup_size)) : ((_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) * 1u)) | 0u) << 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + _GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)))), 1u * (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) / uint(_GLF_ONE(1.0, injectionSwitch.y))), clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + _GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)))))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(subgroup_base))), (_GLF_IDENTITY(clamp(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((workgroup_base + subgroup_base) | 0u, _GLF_IDENTITY(((_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) * 1u)) | 0u) << 0u, (false ? _GLF_FUZZED((workgroup_size)) : ((_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) * 1u)) | 0u) << 0u)))), _GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + _GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base))))), (true ? _GLF_IDENTITY(clamp(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((workgroup_base + subgroup_base) | 0u, _GLF_IDENTITY(((_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) * 1u)) | 0u) << 0u, (false ? _GLF_FUZZED((workgroup_size)) : ((_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) * 1u)) | 0u) << 0u)))), _GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + _GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base))))), (clamp(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 1u))) + subgroup_base) | 0u, _GLF_IDENTITY(((_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) * 1u)) | 0u) << 0u, (false ? _GLF_FUZZED((workgroup_size)) : ((_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) * 1u)) | 0u) << 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + _GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)))), 1u * (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) / uint(_GLF_ONE(1.0, injectionSwitch.y))), clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + _GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)))))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(subgroup_base)))) | (_GLF_IDENTITY(clamp(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((workgroup_base + subgroup_base) | 0u, _GLF_IDENTITY(((_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) * 1u)) | 0u) << 0u, (false ? _GLF_FUZZED((workgroup_size)) : ((_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) * 1u)) | 0u) << 0u)))), _GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + _GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base))))), (true ? _GLF_IDENTITY(clamp(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((workgroup_base + subgroup_base) | 0u, _GLF_IDENTITY(((_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) * 1u)) | 0u) << 0u, (false ? _GLF_FUZZED((workgroup_size)) : ((_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) * 1u)) | 0u) << 0u)))), _GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + _GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base))))), (clamp(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 1u))) + subgroup_base) | 0u, _GLF_IDENTITY(((_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) * 1u)) | 0u) << 0u, (false ? _GLF_FUZZED((workgroup_size)) : ((_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) * 1u)) | 0u) << 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + _GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)))), 1u * (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) / uint(_GLF_ONE(1.0, injectionSwitch.y))), clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + _GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)))))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(subgroup_base)))))) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(clamp(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((workgroup_base + subgroup_base) | 0u, _GLF_IDENTITY(((_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) * 1u)) | 0u) << 0u, (false ? _GLF_FUZZED((workgroup_size)) : ((_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) * 1u)) | 0u) << 0u)))), _GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + _GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base))))), 0u ^ (clamp(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((workgroup_base + subgroup_base) | 0u, _GLF_IDENTITY(((_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) * 1u)) | 0u) << 0u, (false ? _GLF_FUZZED((workgroup_size)) : ((_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) * 1u)) | 0u) << 0u)))), _GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + _GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base))))))), (true ? _GLF_IDENTITY(clamp(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((workgroup_base + subgroup_base) | 0u, _GLF_IDENTITY(((_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) * 1u)) | 0u) << 0u, (false ? _GLF_FUZZED((workgroup_size)) : (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) * 1u)) | 0u, uint(_GLF_IDENTITY(uvec2((_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) * 1u)) | 0u, 0u), (uvec2((_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) * 1u)) | 0u, 0u)) | (uvec2((_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) * 1u)) | 0u, 0u)))))) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) << 0u))))), _GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + _GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base))))), (clamp(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 1u))) + subgroup_base) | 0u, _GLF_IDENTITY(((_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) * 1u)) | 0u) << 0u, (false ? _GLF_IDENTITY(_GLF_FUZZED((workgroup_size)), (_GLF_IDENTITY(_GLF_FUZZED((workgroup_size)), min(_GLF_FUZZED((workgroup_size)), _GLF_FUZZED((workgroup_size))))) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))) : ((_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + _GLF_IDENTITY(subgroup_base, 1u * (subgroup_base))) * 1u)) | 0u) << 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) - 0u), 0u, 0u)) ^ (subgroup_base)))), 1u * (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) / uint(_GLF_ONE(1.0, injectionSwitch.y))), clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + _GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)))))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(subgroup_base)))))) + (_GLF_IDENTITY(_GLF_IDENTITY(108785u, uint(uint(108785u))), (_GLF_IDENTITY(_GLF_IDENTITY(108785u, (108785u) - 0u), uint(uint(108785u)))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) & 0u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + subgroup_local_id;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-1.1, -8.3)) : injectionSwitch)).x > injectionSwitch.y, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(478.367), _GLF_FUZZED(8.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)))).x > injectionSwitch.y), bool(bool(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / 1.0), float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0, 0.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 0.0, 0.0, 1.0))) > injectionSwitch.y), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(sqrt(vec2(0.0, 0.0)))).x, injectionSwitch.x))) / 1.0), float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) * 1.0, float(vec2((injectionSwitch.x) * 1.0, abs(1.0))))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), _GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 0.0, 0.0, 1.0))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(478.367), _GLF_FUZZED(8.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)))).x > injectionSwitch.y), bool(bool(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / 1.0), float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0, 0.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 0.0, 0.0, 1.0))) > injectionSwitch.y), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(sqrt(vec2(0.0, 0.0)))).x, injectionSwitch.x))) / 1.0), float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) * 1.0, float(vec2((injectionSwitch.x) * 1.0, abs(1.0))))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), _GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 0.0, 0.0, 1.0))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y))))))))), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(478.367), _GLF_FUZZED(8.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)))).x > injectionSwitch.y), bool(bool(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / 1.0), float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0, 0.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 0.0, 0.0, 1.0))) > injectionSwitch.y), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(sqrt(vec2(0.0, 0.0)))).x, injectionSwitch.x))) / 1.0), float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) * 1.0, float(vec2((injectionSwitch.x) * 1.0, abs(1.0))))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), _GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 0.0, 0.0, 1.0))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y)))))))))))), bool(bvec2(! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(478.367), _GLF_FUZZED(8.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)))).x > injectionSwitch.y), bool(bool(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / 1.0), float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0, 0.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 0.0, 0.0, 1.0))) > injectionSwitch.y), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(sqrt(vec2(0.0, 0.0)))).x, injectionSwitch.x))) / 1.0), float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) * 1.0, float(vec2((injectionSwitch.x) * 1.0, abs(1.0))))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), _GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 0.0, 0.0, 1.0))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y))))))))), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(478.367), _GLF_FUZZED(8.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)))).x > injectionSwitch.y), bool(bool(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / 1.0), float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0, 0.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 0.0, 0.0, 1.0))) > injectionSwitch.y), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(sqrt(vec2(0.0, 0.0)))).x, injectionSwitch.x))) / 1.0), float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) * 1.0, float(vec2((injectionSwitch.x) * 1.0, abs(1.0))))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), _GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 0.0, 0.0, 1.0))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y)))))))))))), false)))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true), true, false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, false)))), (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true), true, false)))))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)))), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))), false || (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(93.43, 5.2)) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)))) || false))), ! (! (bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true) || false))))))))) || false), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))), false || (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))), ! (! (bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true, true))))) || false))))))))) || false), true), true))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)))))), bool(bool(! (injectionSwitch.x > injectionSwitch.y))))))))))))))))), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))) || false, (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))) || false, true && ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))) || false))) || false)), true), true, _GLF_IDENTITY(false, true && (false)))))))))), bool(bvec3(bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)) > injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((false) || false, false || ((false) || false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), bool(bool(! (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true), true, false)))))))), false, true)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))))) || false), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))), ! (! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, false)))), (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))), ! (! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! _GLF_IDENTITY((! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec3((! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false)), (_GLF_IDENTITY(bool(bvec3((! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false)), bool(bvec3(bool(bvec3((! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false)), false, true)))) && true))))), true, false))))) || _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, 1.1)))).x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, 1.1)))).x > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, 1.1)))).x > injectionSwitch.y), true)))), bool(bvec3(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, 1.1)))).x > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, 1.1)))).x > injectionSwitch.y), true)))), false, false))))))))))) || false), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true), true, false)))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), vec2(mat2(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), 1.0, 0.0)))).y))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)))), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2.1)), bool(false)))))))))) || _GLF_IDENTITY(false, (false) && true)))), false || (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(93.43, 5.2)) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(93.43, 5.2)) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))))), (((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(93.43, 5.2)) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(93.43, 5.2)) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)))))))) || false) || false))), ! (! (bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec3(-1.2, -7.6, -954.254).r), _GLF_FUZZED(-71.61)), bvec2(false, false))).y)))), false || (((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true) || false))))))))) || false), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), (false ? _GLF_FUZZED(43.79) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) && true)))))))))) || false))), false || (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))), ! (! (bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), true)))))))), ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-1.0) : injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true, true))))) || false))))))))) || false), true), true))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), false)), true && (bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), false))))))))), ! (! (! (_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)))))), bool(bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! (injectionSwitch.x > injectionSwitch.y)))))))) && true))))))))))))))))), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))) || false, (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)), (injectionSwitch.x) + 0.0) > injectionSwitch.y))) || false, true && ((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (injectionSwitch.x) + 0.0) > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (injectionSwitch.x) + 0.0) > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (injectionSwitch.x) + 0.0) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (injectionSwitch.x) + 0.0) > injectionSwitch.y))))) || false))))) || false))) || false)), true), true, _GLF_IDENTITY(false, true && (false)))))))))), _GLF_IDENTITY(bool(bvec4(bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), vec2(mat2(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), 1.0, 0.0)))).y))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)))), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2.1)), bool(false)))))))))) || _GLF_IDENTITY(false, (false) && true)))), false || (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(93.43, 5.2)) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(93.43, 5.2)) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))))), (((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(93.43, 5.2)) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(93.43, 5.2)) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)))))))) || false) || false))), ! (! (bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec3(-1.2, -7.6, -954.254).r), _GLF_FUZZED(-71.61)), bvec2(false, false))).y)))), false || (((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true) || false))))))))) || false), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), (false ? _GLF_FUZZED(43.79) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) && true)))))))))) || false))), false || (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))), ! (! (bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), true)))))))), ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-1.0) : injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true, true))))) || false))))))))) || false), true), true))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), false)), true && (bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), false))))))))), ! (! (! (_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)))))), bool(bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! (injectionSwitch.x > injectionSwitch.y)))))))) && true))))))))))))))))), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))) || false, (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)), (injectionSwitch.x) + 0.0) > injectionSwitch.y))) || false, true && ((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (injectionSwitch.x) + 0.0) > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (injectionSwitch.x) + 0.0) > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (injectionSwitch.x) + 0.0) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (injectionSwitch.x) + 0.0) > injectionSwitch.y))))) || false))))) || false))) || false)), true), true, _GLF_IDENTITY(false, true && (false)))))))))), true, false, true)), ! (! (bool(bvec4(bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), vec2(mat2(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), 1.0, 0.0)))).y))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)))), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2.1)), bool(false)))))))))) || _GLF_IDENTITY(false, (false) && true)))), false || (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(93.43, 5.2)) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(93.43, 5.2)) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))))), (((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(93.43, 5.2)) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(93.43, 5.2)) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)))))))) || false) || false))), ! (! (bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec3(-1.2, -7.6, -954.254).r), _GLF_FUZZED(-71.61)), bvec2(false, false))).y)))), false || (((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true) || false))))))))) || false), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), (false ? _GLF_FUZZED(43.79) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) && true)))))))))) || false))), false || (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))), ! (! (bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), true)))))))), ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-1.0) : injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true, true))))) || false))))))))) || false), true), true))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), false)), true && (bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), false))))))))), ! (! (! (_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)))))), bool(bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! (injectionSwitch.x > injectionSwitch.y)))))))) && true))))))))))))))))), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))) || false, (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)), (injectionSwitch.x) + 0.0) > injectionSwitch.y))) || false, true && ((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (injectionSwitch.x) + 0.0) > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (injectionSwitch.x) + 0.0) > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (injectionSwitch.x) + 0.0) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (injectionSwitch.x) + 0.0) > injectionSwitch.y))))) || false))))) || false))) || false)), true), true, _GLF_IDENTITY(false, true && (false)))))))))), true, false, true)))))), bool(bvec3(bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)) > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x), mix(float((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x)), float(_GLF_FUZZED(69.14)), bool(false))) / cos(0.0)) > injectionSwitch.y))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false, false || ((false) || false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), bool(bool(! (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true), true, false)))))))), false, true)))))))) || _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) || false)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint next_virtual_gid = workgroup_base + subgroup_base + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(atomicOr(workgroup_base, virtual_gid)) : subgroup_local_id + 1)), subgroup_local_id + 1, subgroup_local_id + 1)), (subgroup_local_id + 1) | (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))))) % subgroup_size);
 uint read = 0;
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), ~ (_GLF_IDENTITY(~ (uint(1)), (~ (uint(1))) ^ 0u)))) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, sin(0.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(tan(0.0), max(tan(0.0), tan(0.0))), 0.0, 0.0)), (float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, _GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 1.0, 1.0, 0.0, sqrt(1.0))))), vec2(0.0, 1.0))), 1.0, sin(0.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(tan(0.0), min(_GLF_IDENTITY(tan(0.0), mix(float(tan(0.0)), float(_GLF_FUZZED(-6.5)), bool(false))), tan(0.0))), 0.0, 0.0))) * _GLF_IDENTITY(1.0, float(mat2(1.0, _GLF_IDENTITY(dot(vec2(cos(0.0), 0.0), vec2(1.0, 0.0)), dot(vec2(cos(0.0), 0.0), vec2(1.0, 0.0))), abs(cos(0.0)), 1.0))))), _GLF_IDENTITY((injectionSwitch.y) / 1.0, (_GLF_IDENTITY((injectionSwitch.y) / 1.0, (false ? _GLF_FUZZED(mix(2261.6252, -424.763, 5.1)) : (injectionSwitch.y) / 1.0))) - 0.0))))), (1u ^ 1u) ^ _GLF_IDENTITY((uint(1)), min((uint(1)), (uint(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, 0)), clamp(_GLF_IDENTITY(int(ivec2(1, 0)), max(int(ivec2(1, 0)), int(ivec2(1, 0)))), int(ivec2(1, 0)), int(ivec2(1, 0)))))))))), _GLF_IDENTITY(4, (4) / 1), 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY((subgroup_local_id % 2) == 0, (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % 2, uint(uint(subgroup_local_id % 2)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id % 2), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id % 2), (0u | 0u) ^ ((subgroup_local_id % 2))), 0u ^ ((subgroup_local_id % 2)))))), clamp((subgroup_local_id % 2), (subgroup_local_id % 2), (subgroup_local_id % 2)))), max((_GLF_IDENTITY((subgroup_local_id % 2), clamp((subgroup_local_id % 2), (subgroup_local_id % 2), (subgroup_local_id % 2)))), (_GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(2, min(_GLF_IDENTITY(2, (2) ^ 0), 2))), clamp((_GLF_IDENTITY(subgroup_local_id % 2, _GLF_IDENTITY((subgroup_local_id % 2), ((subgroup_local_id % 2)) ^ 0u) << 0u)), (subgroup_local_id % 2), (subgroup_local_id % 2)))))) << _GLF_IDENTITY(0u, min(0u, 0u))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % 2, uint(uint(subgroup_local_id % 2)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id % 2), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id % 2), (0u | 0u) ^ ((subgroup_local_id % 2))), 0u ^ ((subgroup_local_id % 2)))))), clamp((subgroup_local_id % 2), (subgroup_local_id % 2), (subgroup_local_id % 2)))), max((_GLF_IDENTITY((subgroup_local_id % 2), clamp((subgroup_local_id % 2), (subgroup_local_id % 2), (subgroup_local_id % 2)))), (_GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(2, min(_GLF_IDENTITY(2, (2) ^ 0), 2))), clamp((_GLF_IDENTITY(subgroup_local_id % 2, _GLF_IDENTITY((subgroup_local_id % 2), ((subgroup_local_id % 2)) ^ 0u) << 0u)), (subgroup_local_id % 2), (subgroup_local_id % 2)))))) << _GLF_IDENTITY(0u, min(0u, 0u))))) == _GLF_IDENTITY(0, 0 ^ (0))) && true))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! _GLF_IDENTITY((! ((! (_GLF_DEAD(false))))), ! (! ((! ((_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   switch(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_SWITCH(_GLF_IDENTITY(0, _GLF_IDENTITY(clamp(0, 0, 0), (clamp(0, 0, 0)) | _GLF_IDENTITY((_GLF_IDENTITY(clamp(0, 0, 0), (_GLF_IDENTITY(clamp(0, 0, 0), (clamp(0, 0, 0)) - 0)) | (clamp(0, 0, 0)))), clamp((_GLF_IDENTITY(clamp(0, 0, 0), (_GLF_IDENTITY(clamp(0, 0, 0), (clamp(0, 0, 0)) - 0)) | (clamp(0, 0, 0)))), (_GLF_IDENTITY(clamp(0, 0, 0), (_GLF_IDENTITY(clamp(0, 0, 0), (clamp(0, 0, 0)) - 0)) | (clamp(0, 0, 0)))), (_GLF_IDENTITY(clamp(0, 0, 0), (_GLF_IDENTITY(clamp(0, 0, 0), (clamp(0, 0, 0)) - 0)) | (clamp(0, 0, 0))))))))), (_GLF_SWITCH(0)) | _GLF_IDENTITY((_GLF_SWITCH(0)), ((_GLF_SWITCH(0))) >> 0)), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_SWITCH(_GLF_IDENTITY(0, _GLF_IDENTITY(clamp(0, 0, 0), (clamp(0, 0, 0)) | _GLF_IDENTITY((_GLF_IDENTITY(clamp(0, 0, 0), (_GLF_IDENTITY(clamp(0, 0, 0), (clamp(0, 0, 0)) - 0)) | (clamp(0, 0, 0)))), clamp((_GLF_IDENTITY(clamp(0, 0, 0), (_GLF_IDENTITY(clamp(0, 0, 0), (clamp(0, 0, 0)) - 0)) | (clamp(0, 0, 0)))), (_GLF_IDENTITY(clamp(0, 0, 0), (_GLF_IDENTITY(clamp(0, 0, 0), (clamp(0, 0, 0)) - 0)) | (clamp(0, 0, 0)))), (_GLF_IDENTITY(clamp(0, 0, 0), (_GLF_IDENTITY(clamp(0, 0, 0), (clamp(0, 0, 0)) - 0)) | (clamp(0, 0, 0))))))))), (_GLF_SWITCH(0)) | _GLF_IDENTITY((_GLF_SWITCH(0)), ((_GLF_SWITCH(0))) >> 0)), 0, 1), (ivec3(_GLF_IDENTITY(_GLF_SWITCH(_GLF_IDENTITY(0, _GLF_IDENTITY(clamp(0, 0, 0), (clamp(0, 0, 0)) | _GLF_IDENTITY((_GLF_IDENTITY(clamp(0, 0, 0), (_GLF_IDENTITY(clamp(0, 0, 0), (clamp(0, 0, 0)) - 0)) | (clamp(0, 0, 0)))), clamp((_GLF_IDENTITY(clamp(0, 0, 0), (_GLF_IDENTITY(clamp(0, 0, 0), (clamp(0, 0, 0)) - 0)) | (clamp(0, 0, 0)))), (_GLF_IDENTITY(clamp(0, 0, 0), (_GLF_IDENTITY(clamp(0, 0, 0), (clamp(0, 0, 0)) - 0)) | (clamp(0, 0, 0)))), (_GLF_IDENTITY(clamp(0, 0, 0), (_GLF_IDENTITY(clamp(0, 0, 0), (clamp(0, 0, 0)) - 0)) | (clamp(0, 0, 0))))))))), (_GLF_SWITCH(0)) | _GLF_IDENTITY((_GLF_SWITCH(0)), ((_GLF_SWITCH(0))) >> 0)), 0, 1)) | (ivec3(_GLF_IDENTITY(_GLF_SWITCH(_GLF_IDENTITY(0, _GLF_IDENTITY(clamp(0, 0, 0), (clamp(0, 0, 0)) | _GLF_IDENTITY((_GLF_IDENTITY(clamp(0, 0, 0), (_GLF_IDENTITY(clamp(0, 0, 0), (clamp(0, 0, 0)) - 0)) | (clamp(0, 0, 0)))), clamp((_GLF_IDENTITY(clamp(0, 0, 0), (_GLF_IDENTITY(clamp(0, 0, 0), (clamp(0, 0, 0)) - 0)) | (clamp(0, 0, 0)))), (_GLF_IDENTITY(clamp(0, 0, 0), (_GLF_IDENTITY(clamp(0, 0, 0), (clamp(0, 0, 0)) - 0)) | (clamp(0, 0, 0)))), (_GLF_IDENTITY(clamp(0, 0, 0), (_GLF_IDENTITY(clamp(0, 0, 0), (clamp(0, 0, 0)) - 0)) | (clamp(0, 0, 0))))))))), (_GLF_SWITCH(0)) | _GLF_IDENTITY((_GLF_SWITCH(0)), ((_GLF_SWITCH(0))) >> 0)), 0, 1))))), _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-66081))) + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_SWITCH(0), min(_GLF_SWITCH(0), _GLF_IDENTITY(_GLF_SWITCH(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(88648)))), (_GLF_SWITCH(0)) >> 0)))), ((_GLF_IDENTITY(_GLF_SWITCH(0), _GLF_IDENTITY(min(_GLF_SWITCH(0), _GLF_IDENTITY(_GLF_SWITCH(0), (_GLF_IDENTITY(_GLF_SWITCH(0), ~ (~ (_GLF_SWITCH(0))))) | (_GLF_SWITCH(0)))), (min(_GLF_SWITCH(_GLF_IDENTITY(0, (0) ^ 0)), _GLF_SWITCH(0))) ^ 0)))) / 1)))
    {
     case 70:
     (mat3x4(44.90, 7.8, _GLF_IDENTITY(-3386.8054, clamp(-3386.8054, -3386.8054, -3386.8054)), -619.283, -6.8, 23.68, 522.933, 55.19, _GLF_IDENTITY(-779.892, clamp(-779.892, -779.892, _GLF_IDENTITY(-779.892, clamp(-779.892, -779.892, _GLF_IDENTITY(-779.892, (-779.892) - 0.0))))), _GLF_IDENTITY(102.527, clamp(102.527, 102.527, 102.527)), _GLF_IDENTITY(-0.3, (-0.3) * 1.0), -0.4) * mat4x3(-66.97, -7.9, -9.3, -9549.3503, -4.3, -60.63, 46.75, _GLF_IDENTITY(-9.3, max(-9.3, -9.3)), _GLF_IDENTITY(-288.349, _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(mat2(-288.349, 0.0, 1.0, 1.0), _GLF_IDENTITY(mat2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(mat2(-288.349, 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat2(-8400.5640, 409.350, -866.138, _GLF_IDENTITY(1577.3471, min(1577.3471, 1577.3471)))) : mat2(-288.349, 0.0, 1.0, 1.0)))), mat2x3(mat4(mat2x3(mat2(-288.349, 0.0, 1.0, 1.0)))))), _GLF_IDENTITY(mat2(_GLF_IDENTITY(mat2x4(mat2(_GLF_IDENTITY(mat2x3(mat2(-288.349, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0)), mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(mat4(mat2x3(mat2(-288.349, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-42.01)), float(0.0), bool(true))), 1.0, 1.0))), (mat4(mat2x3(mat2(-288.349, 0.0, 1.0, 1.0)))) * mat4(1.0)), (mat4(mat2x3(mat2(-288.349, 0.0, 1.0, 1.0)))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec2(0.0, 0.0)), 0.0 + (float(vec2(0.0, 0.0))))), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) * cos(0.0)), 0.0, 0.0)))))), (false ? _GLF_FUZZED(mat2x4(-678.288, 827.525, -14.40, 2.4, 600.799, -0.3, -8.6, -4.3)) : _GLF_IDENTITY(mat2x4(mat2(_GLF_IDENTITY(mat2x3(mat2(-288.349, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0)), mat2x3(mat4(mat2x3(mat2(-288.349, 0.0, 1.0, 1.0))))))), mat2x4(mat3x4(mat2x4(mat2(_GLF_IDENTITY(mat2x3(mat2(-288.349, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), mat2x3(mat4(mat2x3(mat2(-288.349, 0.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(1992.0659)))))))))))))))), mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0) + (mat2(_GLF_IDENTITY(mat2x4(mat2(_GLF_IDENTITY(mat2x3(mat2(-288.349, 0.0, 1.0, 1.0)), mat2x3(mat4(mat2x3(mat2(-288.349, 0.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0))))))))))), (false ? _GLF_FUZZED(mat2x4(-678.288, 827.525, -14.40, 2.4, 600.799, -0.3, -8.6, -4.3)) : _GLF_IDENTITY(mat2x4(mat2(_GLF_IDENTITY(mat2x3(mat2(-288.349, 0.0, 1.0, 1.0)), mat2x3(mat4(mat2x3(mat2(_GLF_IDENTITY(-288.349, (-288.349) / 1.0), 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, float(mat3x2(1.0, log(1.0), 1.0, 0.0, 1.0, 0.0)))))))))))), mat2x4(mat3x4(mat2x4(mat2(_GLF_IDENTITY(mat2x3(mat2(-288.349, 0.0, 1.0, 1.0)), mat2x3(mat4(mat2x3(mat2(-288.349, 0.0, 1.0, 1.0))))))))))))))))), _GLF_IDENTITY((mat2(-288.349, 0.0, 1.0, 1.0)) * _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), mat2(mat2x3(transpose(_GLF_IDENTITY(mat2(1.0), mat2(mat2(mat2(1.0)))))))))), mat2(0.0, 0.0, 0.0, 0.0) + ((mat2(_GLF_IDENTITY(-288.349, mix(float(_GLF_FUZZED(7.3)), float(-288.349), bool(true))), 0.0, 1.0, 1.0)) * _GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(transpose(_GLF_IDENTITY(transpose(mat2(1.0)), mat2(mat2x3(transpose(_GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(3946.9978, 235.311, -678.584, 8.7))))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat2(0.0, 413.456, -5.7, 6920.5132)) : transpose(_GLF_IDENTITY(transpose(mat2(1.0)), mat2(mat2x3(transpose(_GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(3946.9978, 235.311, -678.584, 8.7)))))))))))))))), min(float(_GLF_IDENTITY(mat2(-288.349, _GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0, 1.0), (mat2(-288.349, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + 0.0), float(mat3x2(_GLF_IDENTITY(0.0, (0.0) + 0.0), _GLF_ONE(1.0, injectionSwitch.y), log(1.0), 0.0, 0.0, 0.0))), 1.0, 1.0)) * mat2(1.0))), float(_GLF_IDENTITY(mat2(-288.349, 0.0, 1.0, 1.0), (mat2(-288.349, _GLF_IDENTITY(0.0, (0.0) + _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED((-93.60 * 2813.5713))), float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(743.292) : 1.0))), bool(true)), min(mix(float(_GLF_FUZZED((-93.60 * 2813.5713))), float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(743.292) : 1.0))), bool(true)), mix(float(_GLF_FUZZED((-93.60 * 2813.5713))), float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(743.292) : 1.0))), bool(true))))), 1.0, 1.0)))) * mat2(1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(-161.049, (-161.049) / 1.0), _GLF_IDENTITY(min(_GLF_IDENTITY(-161.049, (-161.049) / 1.0), _GLF_IDENTITY(-161.049, (-161.049) / 1.0)), (_GLF_IDENTITY(min(_GLF_IDENTITY(-161.049, (-161.049) / 1.0), _GLF_IDENTITY(-161.049, (-161.049) / _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4(1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4(-1.5, -5.3, -1.7, 28.43, -336.059, -101.873, -43.93, -681.373, 7552.8544, 67.41, -6902.9892, -816.698, -5737.7140, 9.6, -369.920, 39.22)) : mat4(1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 1.0))))))))), _GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-0.8)))), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))) * (min(_GLF_IDENTITY(-161.049, (-161.049) / 1.0), _GLF_IDENTITY(-161.049, (_GLF_IDENTITY(-161.049, (true ? _GLF_IDENTITY(-161.049, 1.0 * (-161.049)) : _GLF_FUZZED(-345.823)))) / 1.0))))) / 1.0)), 35.02, 30.59));
     case 0:
     case 69:
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     case 82:
     case 57:
     case 16:
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     case 38:
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))))
      return;
     case 68:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)), min(_GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)), max(float(mat2x4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)), float(mat2x4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0)))), float(mat2x4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)))))))))))))
      return;
     case 51:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))))
        return;
       return;
      }
     case 5:
     case 53:
     _GLF_IDENTITY(read = _GLF_IDENTITY(atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(packUnorm4x8(vec4(-4597.4438, 0.6, -31.77, -1236.3729))) : _GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u)))], 4, 64, 2), max(atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(packUnorm4x8(vec4(-4597.4438, 0.6, -31.77, -1236.3729))) : _GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u)))], 4, 64, 2), atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(packUnorm4x8(vec4(-4597.4438, 0.6, -31.77, -1236.3729))) : _GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u)))], 4, 64, 2))), (read = atomicLoad(buf[virtual_gid], 4, 64, 2)) >> _GLF_IDENTITY(0u, max(0u, 0u)));
     break;
     if(_GLF_DEAD(false))
      return;
     case 18:
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))) && true))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (false))))
      return;
     ;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
      return;
     default:
     1;
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    return;
   read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, (4) ^ 0)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(4, (4) ^ 0)), clamp((_GLF_IDENTITY(4, (4) ^ 0)), (_GLF_IDENTITY(4, (4) ^ 0)), _GLF_IDENTITY((_GLF_IDENTITY(4, (4) ^ 0)), int(int((_GLF_IDENTITY(4, (4) ^ 0)))))))))) / _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), ~ (~ (int(4)))))) >> _GLF_IDENTITY(int(4), int(4))), 0 ^ (_GLF_IDENTITY(((_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1, 1)) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), ~ (~ (int(4)))))) >> _GLF_IDENTITY(int(4), int(4))), (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), ~ (~ (int(4)))))) >> _GLF_IDENTITY(int(4), int(4))), (true ? ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), ~ (~ (int(_GLF_IDENTITY(4, max(4, 4)))))))) >> _GLF_IDENTITY(int(4), int(4))) : _GLF_FUZZED(-17289)))) / 1)))), 64, 2);
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
  }
 subgroupBarrier();
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
