#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(false || (injectionSwitch.x > injectionSwitch.y), bool(bool(false || (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (injectionSwitch.x > injectionSwitch.y), bool(bool(false || (injectionSwitch.x > injectionSwitch.y))))), false || (! (_GLF_IDENTITY(false || (injectionSwitch.x > injectionSwitch.y), bool(bool(false || (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (gl_NumWorkGroups))) + _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, 0u + (0u)), 0u, 0u), (uvec3(_GLF_IDENTITY(0u, 0u + (0u)), 0u, 0u)) ^ uvec3(0u, 0u, 0u))).x, 1u * _GLF_IDENTITY((gl_NumWorkGroups.x), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) + uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))) | (gl_NumWorkGroups)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], max(gl_NumWorkGroups[2], _GLF_IDENTITY(gl_NumWorkGroups[2], uint(_GLF_IDENTITY(uvec3(gl_NumWorkGroups[2], 1u, 0u), clamp(uvec3(gl_NumWorkGroups[2], 1u, 0u), uvec3(gl_NumWorkGroups[2], 1u, 0u), uvec3(gl_NumWorkGroups[2], 1u, 0u)))))))))))) | uvec3(0u, 0u, 0u)), max(gl_NumWorkGroups, gl_NumWorkGroups)).x), ((gl_NumWorkGroups.x)) - 0u)) ^ 0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, ~ (~ (gl_NumWorkGroups.x))), 1u * _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups.x), (_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (gl_NumWorkGroups)).x))), ((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))))).x)) - 0u)) ^ 0u), uint(uvec3(_GLF_IDENTITY((gl_NumWorkGroups.x), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, 0u ^ _GLF_IDENTITY((gl_NumWorkGroups.x), (_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups.x), (_GLF_IDENTITY((gl_NumWorkGroups.x), min((gl_NumWorkGroups.x), (_GLF_IDENTITY(gl_NumWorkGroups.x, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u)), max(~ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u)), ~ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u)))))))))) + 0u), max(_GLF_IDENTITY((gl_NumWorkGroups.x), (_GLF_IDENTITY((gl_NumWorkGroups.x), min((gl_NumWorkGroups.x), (_GLF_IDENTITY(gl_NumWorkGroups.x, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u)), max(~ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u)), ~ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u)))))))))) + 0u), _GLF_IDENTITY((gl_NumWorkGroups.x), (_GLF_IDENTITY((gl_NumWorkGroups.x), min((gl_NumWorkGroups.x), (_GLF_IDENTITY(gl_NumWorkGroups.x, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u)), max(~ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u)), ~ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u)))))))))) + 0u)))) + (_GLF_IDENTITY(194955u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (194955u)) & 0u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), min(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u))))) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)))).x)) - 0u)) ^ 0u, (true ? (_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, 0u ^ _GLF_IDENTITY((gl_NumWorkGroups.x), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups.x), (_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (gl_NumWorkGroups)).x), min((gl_NumWorkGroups.x), (_GLF_IDENTITY(gl_NumWorkGroups.x, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u)), max(~ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u)), ~ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u)))))))))) + 0u), max(_GLF_IDENTITY((gl_NumWorkGroups.x), (_GLF_IDENTITY((gl_NumWorkGroups.x), min((gl_NumWorkGroups.x), (_GLF_IDENTITY(gl_NumWorkGroups.x, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u)), max(~ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u)), ~ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u)))))))))) + 0u), _GLF_IDENTITY((gl_NumWorkGroups.x), (_GLF_IDENTITY((gl_NumWorkGroups.x), min(_GLF_IDENTITY((gl_NumWorkGroups.x), uint(uvec2((gl_NumWorkGroups.x), 1u))), (_GLF_IDENTITY(gl_NumWorkGroups.x, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u)), 0u + ((_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u)))), max(~ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u)), ~ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u)))))))))) + 0u)))), max((_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups.x), (_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (gl_NumWorkGroups)).x), min((gl_NumWorkGroups.x), (_GLF_IDENTITY(gl_NumWorkGroups.x, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u)), max(~ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u)), ~ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u)))))))))) + 0u), max(_GLF_IDENTITY((gl_NumWorkGroups.x), (_GLF_IDENTITY((gl_NumWorkGroups.x), min((gl_NumWorkGroups.x), (_GLF_IDENTITY(gl_NumWorkGroups.x, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u)), max(~ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u)), ~ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u)))))))))) + 0u), _GLF_IDENTITY((gl_NumWorkGroups.x), (_GLF_IDENTITY((gl_NumWorkGroups.x), min(_GLF_IDENTITY((gl_NumWorkGroups.x), uint(uvec2((gl_NumWorkGroups.x), 1u))), (_GLF_IDENTITY(gl_NumWorkGroups.x, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u)), 0u + ((_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u)))), max(~ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u)), ~ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u)))))))))) + 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups.x), (_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (gl_NumWorkGroups)).x), min((gl_NumWorkGroups.x), (_GLF_IDENTITY(gl_NumWorkGroups.x, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u)), max(~ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u)), ~ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u)))))))))) + 0u), max(_GLF_IDENTITY((gl_NumWorkGroups.x), (_GLF_IDENTITY((gl_NumWorkGroups.x), min((gl_NumWorkGroups.x), (_GLF_IDENTITY(gl_NumWorkGroups.x, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u)), max(~ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u)), ~ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u)))))))))) + 0u), _GLF_IDENTITY((gl_NumWorkGroups.x), (_GLF_IDENTITY((gl_NumWorkGroups.x), min(_GLF_IDENTITY((gl_NumWorkGroups.x), uint(uvec2((gl_NumWorkGroups.x), 1u))), (_GLF_IDENTITY(gl_NumWorkGroups.x, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u)), 0u + ((_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u)))), max(~ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u)), ~ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u)))))))))) + 0u)))))) + (_GLF_IDENTITY(194955u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (194955u)) & 0u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), min(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u))))) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)))).x)) - 0u)) ^ 0u : _GLF_FUZZED(subgroup_local_id)))), 1u, 0u)))), _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * _GLF_IDENTITY((gl_NumWorkGroups.x), (_GLF_IDENTITY((gl_NumWorkGroups.x), _GLF_IDENTITY(((gl_NumWorkGroups.x)), (((gl_NumWorkGroups.x))) | 0u) - 0u)) ^ _GLF_IDENTITY(0u, max(0u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, 1u * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) ^ 0u), (_GLF_IDENTITY((gl_NumWorkGroups.x), (_GLF_IDENTITY((gl_NumWorkGroups.x), ~ (~ (_GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) ^ 0u))))) - 0u)) ^ 0u), min(_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) ^ 0u), (_GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) - 0u)) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups.x), ((_GLF_IDENTITY(gl_NumWorkGroups.x, uint(uvec4(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) - 0u), (1u ^ 0u), 0u, 0u))))) ^ 0u), (_GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) - 0u)) ^ 0u)))), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))).x, 1u * _GLF_IDENTITY((gl_NumWorkGroups.x), (_GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) - 0u)) ^ 0u)), _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) >> (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))), ((_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) >> (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(2u), uint(2u)), (true ? _GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(2u), uint(2u)), 0u | (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))) : _GLF_FUZZED(subgroup_local_id))))))) / 1u), (_GLF_IDENTITY((gl_NumWorkGroups.x), ((_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) - 0u))) - 0u)) ^ 0u))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (workgroup_base + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x2(0.0, 1.0, sin(0.0), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (mat4x2(0.0, 1.0, sin(0.0), 0.0, 1.0, _GLF_ZERO(_GLF_IDENTITY(0.0, 0.0 + (0.0)), injectionSwitch.x), 1.0, 0.0))))), injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ 0u) ^ (_GLF_IDENTITY(subgroup_base, 0u + (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, uint(uint(1u))), 1u)) * (subgroup_base)))))) + subgroup_local_id) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_IDENTITY(_GLF_FUZZED(85.36), min(_GLF_IDENTITY(_GLF_FUZZED(85.36), 0.0 + (_GLF_FUZZED(85.36))), _GLF_IDENTITY(_GLF_FUZZED(85.36), mix(float(_GLF_FUZZED(85.36)), float(_GLF_FUZZED(2611.6075)), bool(false)))))), bool(false))), injectionSwitch.x)));
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)) + 1)) * 1u) % subgroup_size), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec4(subgroup_size, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), (uint(uvec4(subgroup_size, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))) | 0u))), uint(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size), 1u * (workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size))), 0u, 0u, 1u))), clamp(_GLF_IDENTITY(workgroup_base + subgroup_base + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec4(subgroup_size, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), (uint(uvec4(subgroup_size, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))) | 0u))), uint(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size), 1u * (workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size))), 0u, 0u, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec4(subgroup_size, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), (uint(uvec4(subgroup_size, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))) | 0u))), uint(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size), 1u * (workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size))), 0u, 0u, 1u))), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(workgroup_base + subgroup_base + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec4(subgroup_size, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), (uint(uvec4(subgroup_size, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))) | 0u))), uint(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size), 1u * (workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size))), 0u, 0u, 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec4(subgroup_size, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), (uint(uvec4(subgroup_size, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))) | 0u))), uint(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size), 1u * (workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size))), 0u, 0u, 1u))), (_GLF_IDENTITY(workgroup_base + subgroup_base + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec4(subgroup_size, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), (uint(uvec4(subgroup_size, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))) | 0u))), uint(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size), 1u * (workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size))), 0u, 0u, 1u)))) ^ 0u)))));
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[virtual_gid], uint(1), 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(40743)))) << 0), 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)), (bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))) || false)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), false, false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)))), bool(bvec4((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)))), false, true, true))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)))), bool(bvec4((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)))), false, true, true))), false), true)))), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0)))), vec2(_GLF_FUZZED(-0.5), _GLF_FUZZED(4.6)), bvec2(false, false))).y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)))), bool(bvec4((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)))), false, true, true))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0)))), vec2(_GLF_FUZZED(-0.5), _GLF_FUZZED(_GLF_IDENTITY(4.6, clamp(4.6, 4.6, 4.6)))), bvec2(false, false))).y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)))), bool(bvec4((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)))), false, true, true))), false), true, true))), bvec2(bvec3(bvec2(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)))), bool(bvec4((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), true, false)))), false, false)))), false, true, true))), _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec4(false, false, true, true)), ! (_GLF_IDENTITY(! (bool(bvec4(false, false, true, true))), false || (! (bool(bvec4(false, false, true, true))))))), true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec4(false, false, true, true)), ! (_GLF_IDENTITY(! (bool(bvec4(false, false, true, true))), false || (! (bool(bvec4(false, false, true, true))))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bvec4(false, false, true, true)), ! (_GLF_IDENTITY(! (bool(bvec4(false, false, true, true))), false || (! (bool(bvec4(false, false, true, true))))))), true, false), false))), true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec4(false, false, true, true)), ! (_GLF_IDENTITY(! (bool(bvec4(false, false, true, true))), false || (! (bool(bvec4(false, false, true, true))))))), true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec4(false, false, true, true)), ! (_GLF_IDENTITY(! (bool(bvec4(false, false, true, true))), false || (! (bool(bvec4(false, false, true, true))))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bvec4(false, false, true, true)), ! (_GLF_IDENTITY(! (bool(bvec4(false, false, true, true))), false || (! (bool(bvec4(false, false, true, true))))))), true, false), false))), true)))), bool(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec4(false, false, true, true)), ! (_GLF_IDENTITY(! (bool(bvec4(false, false, true, true))), false || (! (bool(bvec4(false, false, true, true))))))), true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec4(false, false, true, true)), ! (_GLF_IDENTITY(! (bool(bvec4(false, false, true, true))), false || (! (bool(bvec4(false, false, true, true))))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bvec4(false, false, true, true)), ! (_GLF_IDENTITY(! (bool(bvec4(false, false, true, true))), false || (! (bool(bvec4(false, false, true, true))))))), true, false), false))), true)))), false, true)))) && true))), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, true, true)), true && (_GLF_IDENTITY(bool(bvec4(false, false, true, true)), bool(bvec2(bool(bvec4(false, false, true, true)), true))))), ! (_GLF_IDENTITY(! (bool(bvec4(false, false, true, true))), false || (! (bool(bvec4(false, false, _GLF_IDENTITY(true, ! (! (true))), true))))))), true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec4(false, false, true, true)), ! (_GLF_IDENTITY(! (bool(bvec4(false, false, true, true))), false || (! (bool(bvec4(false, false, true, true))))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bvec4(false, false, true, true)), ! (_GLF_IDENTITY(! (bool(bvec4(false, false, true, true))), false || (! (bool(bvec4(false, false, true, true))))))), true, false), false))), true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec4(false, false, true, true)), ! (_GLF_IDENTITY(! (bool(bvec4(false, false, true, true))), false || (! (bool(bvec4(false, false, true, true))))))), true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec4(false, false, true, true)), ! (_GLF_IDENTITY(! (bool(bvec4(false, false, true, true))), false || (! (bool(bvec4(false, false, true, true))))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bvec4(false, false, true, true)), ! (_GLF_IDENTITY(! (bool(bvec4(false, false, true, true))), false || (! (bool(bvec4(false, false, true, true))))))), true, false), false))), true)))), bool(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec4(false, false, true, true)), ! (_GLF_IDENTITY(! (bool(bvec4(false, false, true, true))), false || (! (bool(bvec4(false, false, true, true))))))), true, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, true)), ! (_GLF_IDENTITY(! (bool(bvec4(false, false, true, true))), false || (! (bool(bvec4(false, false, true, true))))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bvec4(false, false, true, true)), ! (_GLF_IDENTITY(! (bool(bvec4(false, false, true, true))), false || (! (bool(bvec4(false, false, true, true))))))), true, false), false))), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, true)), ! (_GLF_IDENTITY(! (bool(bvec4(false, false, true, true))), false || (! (bool(bvec4(false, false, true, true))))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bvec4(false, false, true, true)), ! (_GLF_IDENTITY(! (bool(bvec4(false, false, true, true))), false || (! (bool(bvec4(false, false, true, true))))))), true, false), false))), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, true)), ! (_GLF_IDENTITY(! (bool(bvec4(false, false, true, true))), false || (! (bool(bvec4(false, false, true, true))))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bvec4(false, false, true, true)), ! (_GLF_IDENTITY(! (bool(bvec4(false, false, true, true))), false || (! (bool(bvec4(false, false, true, true))))))), true, false), false))), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))))), false, true)))) && true)))))), true)))))))))))))), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch)).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch)).y))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, abs(1.0)))).x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))
    return;
  }
 if((_GLF_IDENTITY(subgroup_local_id % 2, max(subgroup_local_id % 2, subgroup_local_id % 2))) == _GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ((0) - 0) | ((0) - 0)))) - 0, ~ (~ ((_GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ((0) - 0) | ((0) - 0)))) - 0)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), ! (! (((false))))))))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (bool(bool(_GLF_DEAD(false)))))), false || (_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (bool(bool(_GLF_DEAD(false))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (bool(bool(_GLF_DEAD(false)))))), false || (_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (bool(bool(_GLF_DEAD(false)))))))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (bool(bool(_GLF_DEAD(false)))))), false || (_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (bool(bool(_GLF_DEAD(false)))))))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (bool(bool(_GLF_DEAD(false)))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY(false, bool(bvec3(false, true, true))) || (bool(_GLF_DEAD(false))))), ! (! (bool(bool(_GLF_DEAD(false))))))))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 1.0, abs(sin(0.0)), 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), (mat4x2(injectionSwitch, 0.0, 1.0, abs(sin(0.0)), 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(sin(9094.0005)))), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true, false)))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))), true && _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))), ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))))))) && true))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((-64.48 * injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) / _GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) * mat2(1.0))))).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ((false)) && true)), false || (_GLF_IDENTITY(false, false || (false))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))) ? injectionSwitch.y : _GLF_FUZZED(80.67))), injectionSwitch.y, injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) || false))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, true)))))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-902.772)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, _GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), true && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))))), (injectionSwitch.x > injectionSwitch.y)), true))), (_GLF_DEAD(false)) && true))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(77.11), _GLF_FUZZED(361.219)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)))).y, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)))).y, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(round(9133.3113)) : 0.0)), 1.0))))), min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0), mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)))))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), min(min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch))))) * vec2(1.0, 1.0)))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)))).y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(faceforward(vec2(-9.6, -2014.1317), vec2(-580.977, 0.8), injectionSwitch)) : injectionSwitch)), injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), min(injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)))).y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)))).y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) - sin(0.0)), min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) - sin(0.0)), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) - sin(0.0)))) > injectionSwitch.y))))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec4(injectionSwitch.x, 0.0, abs(0.0), exp(0.0)), max(vec4(injectionSwitch.x, 0.0, abs(0.0), exp(0.0)), vec4(injectionSwitch.x, 0.0, abs(0.0), exp(0.0)))))) > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(5599.1977)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec4(injectionSwitch.x, 0.0, abs(0.0), exp(0.0)), max(vec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, 0.0, abs(0.0), exp(0.0)), vec4(injectionSwitch.x, 0.0, abs(0.0), exp(0.0)))))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(5599.1977)), mix(float((true ? injectionSwitch.y : _GLF_FUZZED(5599.1977))), float(_GLF_FUZZED((2.6 - 8.9))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec4(injectionSwitch.x, 0.0, abs(0.0), exp(0.0)), max(vec4(injectionSwitch.x, 0.0, abs(0.0), exp(0.0)), vec4(injectionSwitch.x, 0.0, abs(0.0), exp(0.0)))))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.6) : injectionSwitch.y)), (true ? _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) : _GLF_FUZZED(5599.1977))))))) && true)))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))) + (injectionSwitch.y))))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true)))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, false))))), false || ((! (false)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) || _GLF_IDENTITY(false, bool(bvec4(false, true, true, true))))), false || ((! (false)))), _GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))).y, float(mat3x4(injectionSwitch.y, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(36.05)), float(0.0), bool(_GLF_IDENTITY(true, (true) || false))))), float(_GLF_IDENTITY(mat2x4(clamp(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(36.05)), float(0.0), bool(_GLF_IDENTITY(true, (true) || false))))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0), (mat2x4(clamp(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(36.05)), float(0.0), bool(_GLF_IDENTITY(true, (true) || false)))), (_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(36.05)), float(0.0), bool(_GLF_IDENTITY(true, (true) || false))), clamp(mix(float(_GLF_FUZZED(36.05)), float(0.0), bool(_GLF_IDENTITY(true, (true) || false))), mix(float(_GLF_FUZZED(36.05)), float(0.0), bool(_GLF_IDENTITY(true, (true) || false))), mix(float(_GLF_FUZZED(36.05)), float(0.0), bool(_GLF_IDENTITY(true, (true) || false))))))) / 1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)) * mat2(1.0))))), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0)))))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, float(mat3x4(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-214.235) : 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(36.05)), float(0.0), bool(_GLF_IDENTITY(true, (true) || false)))), _GLF_ZERO(0.0, injectionSwitch.x) + (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(36.05)), float(0.0), bool(_GLF_IDENTITY(true, (true) || false)))))))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(9.1))), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0)))), true && ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, float(mat3x4(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-214.235) : 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(36.05)), float(0.0), bool(_GLF_IDENTITY(true, (true) || false)))), _GLF_ZERO(0.0, injectionSwitch.x) + (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(36.05)), float(0.0), bool(_GLF_IDENTITY(true, (true) || false)))))))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(9.1))), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0)))))))), true))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))), 0.0, 0.0), mat2(_GLF_IDENTITY(mat4x3(mat2(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))), 0.0, 0.0)), (true ? mat4x3(mat2(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0)) : _GLF_FUZZED(mat4x3(-6.2, 3924.4933, 4.7, _GLF_IDENTITY(-11.24, 0.0 + (-11.24)), 5.5, 4.2, 1.0, 328.521, 77.97, -7.9, 3.4, -3385.2610))))))))[_GLF_IDENTITY(0, (0) | 0)], _GLF_FUZZED(6284.3140)), vec2(_GLF_FUZZED(-939.175), _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(3.0) : (injectionSwitch)[1]))), bvec2(false, _GLF_TRUE(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), false || ((true))))), (injectionSwitch.x < injectionSwitch.y))))).x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-8252.5790) : injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, float(mat3x4(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))))), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! ((! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool(_GLF_IDENTITY(! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool(! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) || false))))))), false || (! ((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true), false)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    return;
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), ~ (~ (~ (~ (subgroup_size))))))) / 1u, min((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (subgroup_size)), max(_GLF_IDENTITY(~ (~ (subgroup_size)), 0u | (~ (~ (subgroup_size)))), ~ (~ (subgroup_size)))), ~ (~ (~ (~ (subgroup_size))))))) / 1u, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), ~ (~ (~ (~ (subgroup_size))))))) / 1u, ((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), _GLF_IDENTITY(~ (~ (~ (~ (subgroup_size)))), (~ (~ (~ (~ (subgroup_size))))) >> 0u)))) / 1u) | ((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), ~ (~ (~ (~ (subgroup_size))))))) / 1u)))))) : _GLF_IDENTITY(_GLF_IDENTITY(uint(2), _GLF_IDENTITY(_GLF_IDENTITY((uint(2)), ((uint(2))) | ((uint(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(54939) : 2)))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((uint(2)), 0u | ((uint(2)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))) ? (uint(2)) : _GLF_FUZZED(subgroup_base), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? (uint(_GLF_IDENTITY(2, max(2, _GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, 0 ^ (2)))))))) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_base), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_base), (_GLF_FUZZED(subgroup_base)) << 0u)) / 1u), (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (uint(5u)) * 1u), uint(5u))), 1u, 0u), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? (uint(2)) : _GLF_FUZZED(subgroup_base), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u, 0u), (uvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? (uint(2)) : _GLF_FUZZED(subgroup_base), (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) - 0u)), uint(_GLF_IDENTITY(5u, max(5u, _GLF_IDENTITY(5u, (false ? _GLF_FUZZED(next_virtual_gid) : 5u))))))), 1u, 0u)) | (uvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? (uint(2)) : _GLF_FUZZED(subgroup_base), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u, 0u)))) + uvec4(0u, 0u, 0u, 0u))))), uint(uvec2(_GLF_IDENTITY((true ? (_GLF_IDENTITY(uint(2), ~ (_GLF_IDENTITY(~ (uint(2)), ~ (~ (~ (uint(2)))))))) : _GLF_FUZZED(subgroup_base)), ((true ? (uint(2)) : _GLF_FUZZED(subgroup_base))) << 0u), _GLF_IDENTITY(1u, min(1u, 1u)))))))) / 1u), max(_GLF_IDENTITY(uint(2), _GLF_IDENTITY(_GLF_IDENTITY((uint(2)), ((uint(2))) | ((uint(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(54939) : 2)))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((uint(2)), 0u | ((uint(2)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))) ? (uint(2)) : _GLF_FUZZED(subgroup_base), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? (uint(_GLF_IDENTITY(2, max(2, _GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, 0 ^ (2)))))))) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_base), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_base), (_GLF_FUZZED(subgroup_base)) << 0u)) / 1u), (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (uint(5u)) * 1u), uint(5u))), 1u, 0u), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? (uint(2)) : _GLF_FUZZED(subgroup_base), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u, 0u), (uvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? (uint(2)) : _GLF_FUZZED(subgroup_base), (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) - 0u)), uint(_GLF_IDENTITY(5u, max(5u, _GLF_IDENTITY(5u, (false ? _GLF_FUZZED(next_virtual_gid) : 5u))))))), 1u, 0u)) | (uvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? (uint(2)) : _GLF_FUZZED(subgroup_base), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u, 0u)))) + uvec4(0u, 0u, 0u, 0u))))), uint(uvec2(_GLF_IDENTITY((true ? (_GLF_IDENTITY(uint(2), ~ (_GLF_IDENTITY(~ (uint(2)), ~ (~ (~ (uint(2)))))))) : _GLF_FUZZED(subgroup_base)), ((true ? (uint(2)) : _GLF_FUZZED(subgroup_base))) << 0u), _GLF_IDENTITY(1u, min(1u, 1u)))))))) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(uint(2), _GLF_IDENTITY(_GLF_IDENTITY((uint(2)), ((uint(2))) | ((uint(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(54939) : 2)))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((uint(2)), 0u | ((uint(2)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))) ? (uint(2)) : _GLF_FUZZED(subgroup_base), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? (uint(_GLF_IDENTITY(2, max(2, _GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, 0 ^ (2)))))))) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_base), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_base), (_GLF_FUZZED(subgroup_base)) << 0u)) / 1u), (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (uint(5u)) * 1u), uint(5u))), 1u, 0u), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? (uint(2)) : _GLF_FUZZED(subgroup_base), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u, 0u), (uvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? (uint(2)) : _GLF_FUZZED(subgroup_base), (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) - 0u)), uint(_GLF_IDENTITY(5u, max(5u, _GLF_IDENTITY(5u, (false ? _GLF_FUZZED(next_virtual_gid) : 5u))))))), 1u, 0u)) | (uvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? (uint(2)) : _GLF_FUZZED(subgroup_base), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u, 0u)))) + uvec4(0u, 0u, 0u, 0u))))), uint(uvec2(_GLF_IDENTITY((true ? (_GLF_IDENTITY(uint(2), ~ (_GLF_IDENTITY(~ (uint(2)), ~ (~ (~ (uint(2)))))))) : _GLF_FUZZED(subgroup_base)), ((true ? (uint(2)) : _GLF_FUZZED(subgroup_base))) << 0u), _GLF_IDENTITY(1u, min(1u, 1u)))))))) / 1u), ~ (~ (_GLF_IDENTITY(uint(2), _GLF_IDENTITY(_GLF_IDENTITY((uint(2)), ((uint(2))) | ((uint(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(54939) : 2)))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((uint(2)), 0u | ((uint(2)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))) ? (uint(2)) : _GLF_FUZZED(subgroup_base), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? (uint(_GLF_IDENTITY(2, max(2, _GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, 0 ^ (2)))))))) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_base), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_base), (_GLF_FUZZED(subgroup_base)) << 0u)) / 1u), (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (uint(5u)) * 1u), uint(5u))), 1u, 0u), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? (uint(2)) : _GLF_FUZZED(subgroup_base), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u, 0u), (uvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? (uint(2)) : _GLF_FUZZED(subgroup_base), (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) - 0u)), uint(_GLF_IDENTITY(5u, max(5u, _GLF_IDENTITY(5u, (false ? _GLF_FUZZED(next_virtual_gid) : 5u))))))), 1u, 0u)) | (uvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? (uint(2)) : _GLF_FUZZED(subgroup_base), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u, 0u)))) + uvec4(0u, 0u, 0u, 0u))))), uint(uvec2(_GLF_IDENTITY((true ? (_GLF_IDENTITY(uint(2), ~ (_GLF_IDENTITY(~ (uint(2)), ~ (~ (~ (uint(2)))))))) : _GLF_FUZZED(subgroup_base)), ((true ? (uint(2)) : _GLF_FUZZED(subgroup_base))) << 0u), _GLF_IDENTITY(1u, min(1u, 1u)))))))) / 1u)))))))), 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6884.1753)), float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(7.7) : injectionSwitch.x))), bool(true))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
