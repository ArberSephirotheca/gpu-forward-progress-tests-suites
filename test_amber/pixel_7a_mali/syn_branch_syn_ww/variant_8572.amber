#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), false || (_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_DEAD(false)))) && true)))), _GLF_IDENTITY(true, (true) && true) && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (bool(bool(_GLF_DEAD(false)))))), true, false)), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (bool(bool(_GLF_DEAD(false)))))), true, false)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))), ! (! (bool(bool(_GLF_DEAD(false)))))), true, false)), false, false, true))))))), false || (_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (bool(_GLF_DEAD(false))))))))), ((bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (bool(_GLF_DEAD(false)))))))))) || false) && true)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), clamp(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), false)), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), false)), ! (! (bool(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), false)))))) || false)))) && true)) && true), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(false)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(5.2)), _GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, true))))) : _GLF_FUZZED(vec2(2826.1408, -34.19)), mix(vec2((_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), false || (bool(bvec2(true, true))))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-57.80)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(false)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(5.2)), bvec2(true, false))) : _GLF_FUZZED(vec2(2826.1408, -34.19)))[0], _GLF_FUZZED(-587.074)), vec2(_GLF_FUZZED(-699.972), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(false)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(5.2)), bvec2(true, false))) : _GLF_FUZZED(vec2(2826.1408, -34.19)))[1]), bvec2(false, true))))).y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, cos(_GLF_IDENTITY(dot(vec4(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.7))), 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)))), 1.0)), _GLF_IDENTITY(mat2(1.0) * (vec2(mat3x2(injectionSwitch, 1.0, 0.0, cos(_GLF_IDENTITY(dot(vec4(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.7))), 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)))), 1.0))), clamp(mat2(1.0) * (vec2(mat3x2(injectionSwitch, 1.0, 0.0, cos(_GLF_IDENTITY(dot(vec4(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.7))), 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)))), 1.0))), _GLF_IDENTITY(mat2(1.0) * (vec2(mat3x2(injectionSwitch, 1.0, 0.0, cos(_GLF_IDENTITY(dot(vec4(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.7))), 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)))), 1.0))), (mat2(1.0) * (vec2(mat3x2(injectionSwitch, 1.0, 0.0, cos(_GLF_IDENTITY(dot(vec4(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.7))), 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)))), 1.0)))) * mat2(1.0)), mat2(1.0) * (vec2(mat3x2(injectionSwitch, 1.0, 0.0, cos(_GLF_IDENTITY(dot(vec4(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.7))), 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)))), 1.0))))))).x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (_GLF_IDENTITY(! ((false)), true && (! ((false))))) && true))), bool(_GLF_IDENTITY(bvec3((false), true, true), bvec3(bvec4(bvec3((false), true, true), false))))), false, false, false))), _GLF_IDENTITY(true, bool(bvec3(true, false, true))) && (! (false))), true && (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), _GLF_IDENTITY((_GLF_IDENTITY(! ((false)), true && (! ((false))))), ((_GLF_IDENTITY(! ((false)), true && (! ((false)))))) || false) && true))), bool(_GLF_IDENTITY(bvec3((false), true, true), bvec3(bvec4(bvec3((false), true, true), false))))), false, false, false))), true && (_GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), _GLF_IDENTITY((_GLF_IDENTITY(! ((false)), true && (! ((false))))), _GLF_IDENTITY(((_GLF_IDENTITY(! ((false)), true && (! ((false)))))) || false, ! (_GLF_IDENTITY(! (((_GLF_IDENTITY(! ((false)), true && (! ((false)))))) || false), ! (! (! (((_GLF_IDENTITY(! ((false)), true && (! ((false)))))) || false))))))) && true))), bool(_GLF_IDENTITY(bvec3((false), true, true), bvec3(bvec4(bvec3((false), true, true), false))))), false, false, false))))), true && (! (false)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) >> 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, true)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, true)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, true)), true)))) && true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(false, false), false, true)), false, true)))))), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, true)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (false))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_DEAD(false)))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), bool(_GLF_IDENTITY(bool(! (! (_GLF_DEAD(false)))), ! (! (bool(! (! (_GLF_DEAD(false))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), bool(_GLF_IDENTITY(bool(! (! (_GLF_DEAD(false)))), ! (! (bool(! (! (_GLF_DEAD(false))))))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), bool(_GLF_IDENTITY(bool(! (! (_GLF_DEAD(false)))), ! (! (bool(! (! (_GLF_DEAD(false))))))))))))))))) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, clamp(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) + 0u), gl_WorkGroupSize[1], gl_WorkGroupSize[2]), max(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) + 0u), gl_WorkGroupSize[1], gl_WorkGroupSize[2]), max(uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) + 0u), gl_WorkGroupSize[1], gl_WorkGroupSize[2]), uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) + 0u), gl_WorkGroupSize[1], gl_WorkGroupSize[2]))), uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) + 0u), gl_WorkGroupSize[1], gl_WorkGroupSize[2]))))) ^ uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x, gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) | (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (1))) | (1))], gl_WorkGroupSize[2]))), min(_GLF_IDENTITY((gl_WorkGroupSize) | (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, 0 ^ (1))], gl_WorkGroupSize[2]))), ~ (_GLF_IDENTITY(~ ((gl_WorkGroupSize) | (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])))), max(~ ((gl_WorkGroupSize) | (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])))), ~ ((gl_WorkGroupSize) | (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1], gl_WorkGroupSize[2])))))))), (_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | uvec3(0u, 0u, 0u)), gl_WorkGroupSize)), gl_WorkGroupSize, gl_WorkGroupSize))) | (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])))))).x, uint(uvec3(gl_WorkGroupSize.x, 1u, 0u)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && _GLF_IDENTITY(true, ! (! (true))))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(clamp(vec2(147.817, 1.7), vec2(138.492, -49.31), vec2(-544.174, 73.87))))).y)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, false || ((false) || false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(injectionSwitch[0], float(vec4(injectionSwitch[0], sin(0.0), 0.0, 1.0)))) / 1.0), _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1]))))), mix(vec2(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 1.0, 1.0)), _GLF_IDENTITY(vec2(mat2(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 1.0, 1.0)), 0.0, 1.0)), clamp(vec2(mat2(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 1.0, 1.0)), 0.0, 1.0)), vec2(mat2(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 1.0, 1.0)), 0.0, 1.0)), vec2(mat2(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 1.0, 1.0)), 0.0, 1.0)))))), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1]))))))[0], _GLF_FUZZED(-75.91)), vec2(_GLF_FUZZED(-2.4), ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1], clamp(injectionSwitch[1], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(83.25), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - abs(vec2(0.0, 0.0)))[0], _GLF_FUZZED(-277.926)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))[1], max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(83.25), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - abs(vec2(0.0, 0.0)))[0], _GLF_FUZZED(-277.926)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))[1], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(83.25), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - abs(vec2(0.0, 0.0)))[0], _GLF_FUZZED(-277.926)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))[1], float(vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(83.25), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - abs(vec2(0.0, 0.0)))[0], _GLF_FUZZED(-277.926)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))[1], 1.0, 1.0, 0.0))))), _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))[1]))))))[1]), bvec2(false, true))) / cos(vec2(0.0, 0.0))).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) >> 0u)) | 0u);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(true, false || (true)) ? workgroup_size : _GLF_FUZZED(num_workgroup))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(num_workgroup))), uint(uvec3(_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(num_workgroup))), 0u, 1u)))) | (_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(num_workgroup)))))))) * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) | _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))) - 0u)), ((workgroup_id)) - 0u))) | (workgroup_size * workgroup_id))) / 1u);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-13.37, -1931.6928)) : injectionSwitch)).y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-13.37, -1931.6928)) : injectionSwitch)).y, false, false, true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(true, true && (true)) ? subgroup_size : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + (52152u & uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), clamp(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(true, true && (true)) ? subgroup_size : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + (52152u & uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(true, true && (true)) ? subgroup_size : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + (52152u & uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), false || (_GLF_IDENTITY(true, true && (true))))), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), false || (_GLF_IDENTITY(true, true && (true))))))), true && (bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), false || (_GLF_IDENTITY(true, true && (true)))))))))))) ? subgroup_size : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + (52152u & uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))));
 uint virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), _GLF_IDENTITY(~ (~ (subgroup_local_id)), (~ (_GLF_IDENTITY(~ (subgroup_local_id), ~ (~ (~ (subgroup_local_id)))))) / 1u))), max(uint(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))), uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), uint(uvec2(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), 0u)))))))), _GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), ~ (~ ((_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec2(subgroup_local_id, 1u), clamp(uvec2(subgroup_local_id, 1u), _GLF_IDENTITY(uvec2(subgroup_local_id, 1u), uvec2(0u, 0u) ^ (uvec2(subgroup_local_id, 1u))), uvec2(subgroup_local_id, 1u)))))))))) - 0u) ^ 0u))), (true ? _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ _GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(workgroup_size), (true ? _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) ? 0u : _GLF_FUZZED(workgroup_size), min(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(workgroup_size), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_ZERO(0.0, injectionSwitch.x)), injectionSwitch.y)))) ? 0u : _GLF_FUZZED(workgroup_size))) : _GLF_FUZZED(subgroup_base))))), ~ (_GLF_IDENTITY(~ (0u), min(~ (0u), ~ (0u))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(workgroup_size))), ~ (_GLF_IDENTITY(~ (0u), min(~ (0u), ~ (0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(workgroup_size))), ~ (_GLF_IDENTITY(~ (0u), min(~ (0u), ~ (0u))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(workgroup_size))), ~ (_GLF_IDENTITY(~ (0u), min(~ (0u), ~ (0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(3.3) : injectionSwitch.y)))) ? 0u : _GLF_FUZZED(workgroup_size))), ~ (_GLF_IDENTITY(~ (0u), min(~ (0u), _GLF_IDENTITY(~ (0u), ~ (~ (~ (0u))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(workgroup_size))), ~ (_GLF_IDENTITY(~ (0u), min(~ (0u), ~ (0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(workgroup_size))), ~ (_GLF_IDENTITY(~ (0u), min(~ (0u), ~ (0u)))))) << 0u)))))) * 1u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))) ? 0u : _GLF_FUZZED(workgroup_size))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, (0u) + 0u)), min(~ (0u), ~ (0u))), clamp(_GLF_IDENTITY(~ (0u), min(~ (0u), ~ (0u))), _GLF_IDENTITY(~ (0u), min(~ (0u), ~ (0u))), _GLF_IDENTITY(~ (0u), min(~ (0u), ~ (0u))))))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(workgroup_size), max(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(workgroup_size), uint(uvec4(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(workgroup_size), clamp(_GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(workgroup_size), _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(workgroup_size), _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(workgroup_size))), 1u, 1u, 0u))), _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(workgroup_size))))), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), ((0u)) | ((0u)))) | 0u), min(_GLF_IDENTITY(~ (0u), (~ (0u)) | (_GLF_IDENTITY(~ (0u), min(~ (0u), ~ (0u))))), ~ (0u))))))), _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size))), 0u, 0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec2(! (true), true)), (bool(bvec2(! (true), true))) || false))))) || false) ? 0u : _GLF_FUZZED(subgroup_base)))), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(workgroup_size), (true ? _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))))))))) ? 0u : _GLF_FUZZED(workgroup_size), min(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(workgroup_size), max(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(workgroup_size), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(workgroup_size)) >> 0u), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(workgroup_size))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(workgroup_size))) : _GLF_FUZZED(subgroup_base))))), ~ (_GLF_IDENTITY(~ (0u), min(~ (0u), ~ (0u))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(workgroup_size))), ~ (_GLF_IDENTITY(~ (0u), min(~ (0u), ~ (0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(workgroup_size))), ~ (_GLF_IDENTITY(~ (0u), min(~ (0u), ~ (0u))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(workgroup_size))), ~ (_GLF_IDENTITY(~ (0u), min(~ (0u), ~ (0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(workgroup_size))), ~ (_GLF_IDENTITY(~ (0u), min(~ (0u), _GLF_IDENTITY(~ (0u), ~ (~ (~ (0u))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(workgroup_size))), ~ (_GLF_IDENTITY(~ (0u), min(~ (0u), ~ (0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(workgroup_size))), ~ (_GLF_IDENTITY(~ (0u), min(~ (0u), ~ (0u)))))) << 0u)))))) * 1u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))) ? 0u : _GLF_FUZZED(workgroup_size))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, (0u) + 0u)), min(~ _GLF_IDENTITY((0u), uint(_GLF_IDENTITY(uint((0u)), (uint((0u))) * 1u))), ~ (0u))), clamp(_GLF_IDENTITY(~ (0u), min(~ (0u), ~ (0u))), _GLF_IDENTITY(~ (0u), min(~ (0u), ~ (0u))), _GLF_IDENTITY(~ (0u), min(~ (0u), ~ (0u))))))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(workgroup_size))), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((0u), (_GLF_IDENTITY(_GLF_IDENTITY((0u), ((0u)) | ((0u))), (_GLF_IDENTITY((0u), ((0u)) | ((0u)))) >> 0u)) | 0u), min(~ (0u), ~ (0u))))))), _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size))), clamp(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size))))), 0u, 0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec2(! (true), true)), (bool(bvec2(! (true), true))) || false))))) || false), bool(bvec3(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec2(! (true), true)), (bool(bvec2(! (true), true))) || false))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) ? 0u : _GLF_FUZZED(subgroup_base))))) | 0u))))) : _GLF_FUZZED(workgroup_id)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, min(0.0, 0.0)))), _GLF_IDENTITY(0.0, min(0.0, 0.0)))).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, 0.0 + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x)))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false))), true, false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! ((false) && true))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y), true && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-6217.7923) : injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0))).x, mix(float(_GLF_FUZZED(-0.3)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-212.311) : injectionSwitch.x)), injectionSwitch.x))))), bool(true))))) > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-6217.7923) : injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))).x, mix(float(_GLF_FUZZED(-0.3)), float(injectionSwitch.x), bool(true))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))).x, mix(float(_GLF_FUZZED(-0.3)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))).x, mix(float(_GLF_FUZZED(-0.3)), float(injectionSwitch.x), bool(true))))))) > injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)))) || (((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-6217.7923) : injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))).x, mix(float(_GLF_FUZZED(-0.3)), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y))))), false || (! (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-6217.7923) : injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))).x, mix(float(_GLF_FUZZED(-0.3)), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-6217.7923) : injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))).x, mix(float(_GLF_FUZZED(-0.3)), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y))))))))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))) - sin(vec2(0.0, 0.0))).x, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-178.010), _GLF_FUZZED(-5.6)), bvec2(false, false))).x) + sin(0.0)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-55.89)), bool(false)))), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(2.8)), _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(float(_GLF_FUZZED(2.8)), 1.0), min(vec2(float(_GLF_FUZZED(2.8)), 1.0), vec2(float(_GLF_FUZZED(2.8)), 1.0)))), max(float(_GLF_IDENTITY(vec2(float(_GLF_IDENTITY(_GLF_FUZZED(2.8), (false ? _GLF_FUZZED(-3.6) : _GLF_FUZZED(2.8)))), 1.0), min(vec2(float(_GLF_FUZZED(2.8)), 1.0), vec2(_GLF_IDENTITY(float(_GLF_FUZZED(2.8)), float(vec4(float(_GLF_FUZZED(2.8)), 0.0, 1.0, 0.0))), 1.0)))), float(_GLF_IDENTITY(vec2(float(_GLF_IDENTITY(_GLF_FUZZED(2.8), min(_GLF_IDENTITY(_GLF_FUZZED(2.8), min(_GLF_FUZZED(2.8), _GLF_IDENTITY(_GLF_FUZZED(2.8), mix(float(_GLF_FUZZED(2.8)), float(_GLF_FUZZED(4.0)), bool(false))))), _GLF_FUZZED(2.8)))), 1.0), min(vec2(float(_GLF_FUZZED(_GLF_IDENTITY(2.8, mix(float(_GLF_FUZZED(vec4(_GLF_IDENTITY(43.37, float(mat3x2(43.37, _GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(1.0), _GLF_IDENTITY(dot(vec3(sqrt(1.0), 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(sqrt(1.0), 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 0.0))), -1.0, -5994.3505, -8.6).g)), float(2.8), bool(true))))), 1.0), vec2(float(_GLF_FUZZED(2.8)), 1.0))))))), max(float(_GLF_FUZZED(2.8)), float(_GLF_IDENTITY(_GLF_FUZZED(2.8), clamp(_GLF_FUZZED(2.8), _GLF_IDENTITY(_GLF_FUZZED(2.8), min(_GLF_FUZZED(2.8), _GLF_IDENTITY(_GLF_FUZZED(2.8), (true ? _GLF_FUZZED(2.8) : _GLF_FUZZED(-2.8))))), _GLF_FUZZED(2.8)))))), bool(false)))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))) - sin(vec2(0.0, 0.0)), max((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))) - sin(vec2(0.0, 0.0)), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))) - sin(vec2(0.0, 0.0))))).x, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-178.010), _GLF_FUZZED(-5.6)), bvec2(false, false))).x) + sin(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-55.89)), bool(false)), min(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-55.89)), bool(false)), mix(float(injectionSwitch.y), float(_GLF_FUZZED(-55.89)), bool(false)))))), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(2.8)), _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(float(_GLF_FUZZED(2.8)), 1.0), min(vec2(float(_GLF_FUZZED(2.8)), 1.0), vec2(float(_GLF_FUZZED(2.8)), 1.0)))), max(float(_GLF_IDENTITY(vec2(float(_GLF_IDENTITY(_GLF_FUZZED(2.8), (false ? _GLF_FUZZED(-3.6) : _GLF_FUZZED(2.8)))), 1.0), min(vec2(float(_GLF_FUZZED(2.8)), 1.0), vec2(float(_GLF_FUZZED(2.8)), 1.0)))), float(_GLF_IDENTITY(vec2(float(_GLF_FUZZED(2.8)), 1.0), _GLF_IDENTITY(min(vec2(float(_GLF_FUZZED(_GLF_IDENTITY(2.8, mix(float(_GLF_FUZZED(vec4(43.37, -1.0, -5994.3505, -8.6).g)), float(2.8), bool(true))))), 1.0), vec2(float(_GLF_FUZZED(2.8)), 1.0)), mat2(1.0) * (min(vec2(float(_GLF_FUZZED(_GLF_IDENTITY(2.8, mix(float(_GLF_FUZZED(vec4(43.37, -1.0, -5994.3505, -8.6).g)), float(2.8), bool(true))))), 1.0), vec2(float(_GLF_FUZZED(2.8)), 1.0))))))))), max(float(_GLF_FUZZED(2.8)), float(_GLF_IDENTITY(_GLF_FUZZED(2.8), clamp(_GLF_FUZZED(2.8), _GLF_IDENTITY(_GLF_FUZZED(2.8), min(_GLF_FUZZED(2.8), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(2.8), (true ? _GLF_FUZZED(2.8) : _GLF_FUZZED(-2.8))), clamp(_GLF_IDENTITY(_GLF_FUZZED(2.8), (true ? _GLF_FUZZED(2.8) : _GLF_FUZZED(-2.8))), _GLF_IDENTITY(_GLF_FUZZED(2.8), (true ? _GLF_FUZZED(2.8) : _GLF_FUZZED(-2.8))), _GLF_IDENTITY(_GLF_FUZZED(2.8), (true ? _GLF_FUZZED(2.8) : _GLF_FUZZED(-2.8))))))), _GLF_FUZZED(2.8)))))), bool(false))))) && true), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false || _GLF_IDENTITY(((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))) - sin(vec2(0.0, 0.0))).x, (injectionSwitch.x) + sin(0.0)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-55.89)), bool(false)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(2.8)), float(mat3x2(float(_GLF_FUZZED(2.8)), _GLF_ZERO(0.0, injectionSwitch.x), sqrt(0.0), 1.0, 1.0, sqrt(0.0)))), _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(float(_GLF_FUZZED(2.8)), 1.0), min(vec2(float(_GLF_FUZZED(2.8)), _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(6.5)))), vec2(float(_GLF_FUZZED(2.8)), 1.0)))), max(float(_GLF_IDENTITY(vec2(float(_GLF_FUZZED(2.8)), 1.0), min(vec2(float(_GLF_FUZZED(2.8)), 1.0), vec2(float(_GLF_FUZZED(2.8)), 1.0)))), float(_GLF_IDENTITY(vec2(float(_GLF_FUZZED(2.8)), 1.0), min(vec2(float(_GLF_FUZZED(2.8)), 1.0), vec2(float(_GLF_FUZZED(2.8)), 1.0))))))), max(float(_GLF_FUZZED(2.8)), float(_GLF_FUZZED(2.8)))), bool(false)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), true, false)), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), injectionSwitch)), injectionSwitch)).x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), true, false))) && true)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))) - sin(vec2(0.0, 0.0))).x, (injectionSwitch.x) + sin(0.0)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-55.89)), bool(false)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(2.8)), float(mat3x2(float(_GLF_FUZZED(2.8)), _GLF_ZERO(0.0, injectionSwitch.x), sqrt(0.0), 1.0, 1.0, sqrt(0.0)))), _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(float(_GLF_FUZZED(2.8)), 1.0), min(vec2(float(_GLF_FUZZED(2.8)), 1.0), vec2(float(_GLF_FUZZED(2.8)), 1.0)))), max(float(_GLF_IDENTITY(vec2(float(_GLF_FUZZED(2.8)), 1.0), min(vec2(float(_GLF_FUZZED(2.8)), 1.0), vec2(float(_GLF_FUZZED(2.8)), 1.0)))), float(_GLF_IDENTITY(vec2(float(_GLF_FUZZED(2.8)), 1.0), min(vec2(float(_GLF_FUZZED(2.8)), 1.0), vec2(float(_GLF_FUZZED(2.8)), 1.0))))))), max(float(_GLF_FUZZED(2.8)), float(_GLF_FUZZED(2.8)))), bool(false)))), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), true, false)), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), true, false))))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), true, false)))))))) && true)))), true && (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), true, false)), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), true, false))))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), true, false)))))))) && true)))))))))), ! (! (((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))) - sin(vec2(0.0, 0.0))).x, (injectionSwitch.x) + sin(0.0)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-55.89)), bool(false)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(2.8)), float(mat3x2(float(_GLF_FUZZED(_GLF_IDENTITY(2.8, float(_GLF_IDENTITY(mat3(2.8, 0.0, 1.0, 0.0, determinant(mat2(0.0, sqrt(0.0), 1.0, 0.0)), 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0), (mat3(2.8, 0.0, 1.0, 0.0, determinant(mat2(0.0, sqrt(0.0), 1.0, 0.0)), 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), _GLF_ZERO(0.0, injectionSwitch.x), sqrt(0.0), 1.0, 1.0, sqrt(0.0)))), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(vec2(float(_GLF_FUZZED(2.8)), 1.0), mix(vec2((vec2(float(_GLF_FUZZED(2.8)), 1.0))[0], _GLF_FUZZED(-393.808)), vec2(_GLF_FUZZED(0.2), (vec2(float(_GLF_FUZZED(2.8)), 1.0))[1]), bvec2(false, true))), min(vec2(float(_GLF_FUZZED(2.8)), 1.0), vec2(float(_GLF_FUZZED(2.8)), 1.0)))), max(float(_GLF_IDENTITY(vec2(float(_GLF_FUZZED(2.8)), 1.0), min(vec2(float(_GLF_FUZZED(2.8)), 1.0), vec2(float(_GLF_FUZZED(2.8)), 1.0)))), float(_GLF_IDENTITY(vec2(float(_GLF_FUZZED(2.8)), 1.0), min(vec2(float(_GLF_FUZZED(2.8)), 1.0), vec2(float(_GLF_FUZZED(2.8)), 1.0))))))), max(float(_GLF_FUZZED(2.8)), float(_GLF_FUZZED(2.8)))), bool(false)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), true, false)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), true, false)), _GLF_IDENTITY(bool(bvec4(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), true, false)), false, true, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bvec4(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), true, false)), false, true, true)), (bool(bvec4(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), true, false)), false, true, true))) || false))))) && true)))))))))))), _GLF_IDENTITY(false || (! (_GLF_IDENTITY(((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))) - sin(vec2(0.0, 0.0))).x, (injectionSwitch.x) + sin(0.0)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-55.89)), bool(false)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(2.8)), float(mat3x2(float(_GLF_FUZZED(2.8)), _GLF_ZERO(0.0, injectionSwitch.x), sqrt(0.0), 1.0, 1.0, sqrt(0.0)))), _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(float(_GLF_FUZZED(2.8)), 1.0), min(vec2(float(_GLF_FUZZED(2.8)), 1.0), vec2(float(_GLF_FUZZED(2.8)), 1.0)))), max(float(_GLF_IDENTITY(vec2(float(_GLF_FUZZED(2.8)), 1.0), min(vec2(float(_GLF_FUZZED(2.8)), 1.0), vec2(float(_GLF_FUZZED(2.8)), 1.0)))), float(_GLF_IDENTITY(vec2(float(_GLF_FUZZED(2.8)), 1.0), min(vec2(float(_GLF_FUZZED(2.8)), 1.0), vec2(float(_GLF_FUZZED(2.8)), 1.0))))))), max(float(_GLF_FUZZED(2.8)), float(_GLF_FUZZED(2.8)))), bool(false)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), true, false)), (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), true, false))) && true)))))))), ! (! (((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))) - sin(vec2(0.0, 0.0))).x, (injectionSwitch.x) + sin(0.0)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-55.89)), bool(false)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(2.8)), float(mat3x2(float(_GLF_FUZZED(2.8)), _GLF_ZERO(0.0, injectionSwitch.x), sqrt(0.0), 1.0, 1.0, sqrt(0.0)))), _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(float(_GLF_FUZZED(2.8)), 1.0), min(vec2(float(_GLF_FUZZED(2.8)), 1.0), vec2(float(_GLF_FUZZED(2.8)), 1.0)))), max(float(_GLF_IDENTITY(vec2(float(_GLF_FUZZED(2.8)), 1.0), min(vec2(float(_GLF_FUZZED(2.8)), 1.0), vec2(float(_GLF_FUZZED(2.8)), 1.0)))), float(_GLF_IDENTITY(vec2(float(_GLF_FUZZED(2.8)), 1.0), min(vec2(float(_GLF_FUZZED(2.8)), 1.0), vec2(float(_GLF_FUZZED(2.8)), 1.0))))))), max(float(_GLF_FUZZED(2.8)), float(_GLF_FUZZED(2.8)))), bool(false)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), true, false)), (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), true, false))) && true))))))))))))), true && (false || (! (_GLF_IDENTITY(((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))) - sin(vec2(0.0, 0.0))).x, (injectionSwitch.x) + sin(0.0)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(-55.89), min(_GLF_IDENTITY(_GLF_FUZZED(-55.89), max(_GLF_FUZZED(-55.89), _GLF_FUZZED(-55.89))), _GLF_IDENTITY(_GLF_FUZZED(-55.89), min(_GLF_IDENTITY(_GLF_FUZZED(-55.89), 0.0 + (_GLF_FUZZED(-55.89))), _GLF_IDENTITY(_GLF_FUZZED(-55.89), max(_GLF_FUZZED(-55.89), _GLF_FUZZED(-55.89)))))))), bool(false)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(2.8)), float(mat3x2(float(_GLF_FUZZED(2.8)), _GLF_ZERO(0.0, injectionSwitch.x), sqrt(0.0), 1.0, 1.0, sqrt(0.0)))), _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(float(_GLF_FUZZED(2.8)), 1.0), min(vec2(float(_GLF_FUZZED(2.8)), 1.0), vec2(float(_GLF_FUZZED(2.8)), 1.0)))), max(float(_GLF_IDENTITY(vec2(float(_GLF_FUZZED(_GLF_IDENTITY(2.8, (2.8) * 1.0))), 1.0), min(vec2(float(_GLF_FUZZED(2.8)), 1.0), vec2(float(_GLF_FUZZED(2.8)), 1.0)))), float(_GLF_IDENTITY(vec2(float(_GLF_FUZZED(2.8)), 1.0), min(vec2(float(_GLF_FUZZED(2.8)), 1.0), vec2(float(_GLF_FUZZED(2.8)), 1.0))))))), max(float(_GLF_FUZZED(2.8)), float(_GLF_FUZZED(2.8)))), bool(false)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), true, false)), (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), true, false))) && true)))))))), ! (! (((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))) - sin(vec2(0.0, 0.0))).x, (injectionSwitch.x) + sin(0.0)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-55.89)), bool(false)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(2.8)), float(mat3x2(float(_GLF_FUZZED(2.8)), _GLF_ZERO(0.0, injectionSwitch.x), sqrt(0.0), 1.0, 1.0, sqrt(0.0)))), _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(float(_GLF_FUZZED(2.8)), 1.0), min(vec2(float(_GLF_FUZZED(_GLF_IDENTITY(2.8, min(2.8, _GLF_IDENTITY(2.8, min(2.8, 2.8)))))), 1.0), vec2(float(_GLF_FUZZED(2.8)), 1.0)))), max(float(_GLF_IDENTITY(vec2(float(_GLF_FUZZED(2.8)), 1.0), min(vec2(float(_GLF_FUZZED(2.8)), 1.0), vec2(float(_GLF_FUZZED(2.8)), 1.0)))), float(_GLF_IDENTITY(vec2(float(_GLF_FUZZED(2.8)), 1.0), min(vec2(float(_GLF_FUZZED(2.8)), 1.0), vec2(float(_GLF_FUZZED(2.8)), 1.0))))))), max(float(_GLF_FUZZED(2.8)), float(_GLF_FUZZED(2.8)))), bool(false)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), true, false)), (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), true, false))) && true))))))))))))))))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, tan(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 0.0, tan(0.0), 1.0, 1.0), (true ? mat4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-842.076) : 1.0)), tan(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 0.0, tan(0.0), 1.0, 1.0) : _GLF_FUZZED(mat4(4536.4013, -7.2, 2.9, 4764.1371, 4.9, -3843.4649, -9657.6780, 1825.2630, 60.03, 5.4, -123.683, 7.1, -49.66, -7559.9668, -0.7, 57.96)))))).y, float(mat3(injectionSwitch.y, 1.0, 0.0, exp(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0)))), cos(0.0), 1.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), exp(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2(_GLF_IDENTITY((vec2(0.0, 0.0))[0], ((vec2(0.0, 0.0))[0]) / _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))), _GLF_FUZZED(9.6)), vec2(_GLF_FUZZED(2.0), (vec2(0.0, 0.0))[1]), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))), false, true)))))), (dot(vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((-1.4 - -74.28))), float(1.0), bool(true))), (false ? _GLF_FUZZED(382.977) : 1.0)), 1.0), vec2(0.0, 0.0))) - 0.0))), cos(0.0), 1.0, 0.0, 0.0, 0.0)))), true)), _GLF_IDENTITY(false || (bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, exp(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0))), vec2(0.0, 0.0)))), cos(0.0), 1.0, 0.0, 0.0, 0.0)))), true))), false || (false || (bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, exp(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0))), vec2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-7.4)), float(0.0), bool(true))))))), cos(0.0), 1.0, 0.0, 0.0, 0.0)))), true))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec4((false), true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)), bool(bool(_GLF_IDENTITY(false || _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, abs(0.0) + (injectionSwitch.x)) < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec4((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)), true && (false || _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4(injectionSwitch.y, 0.0, 0.0, abs(0.0), abs(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, 0.0, 0.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(1.0), 0.0, 1.0)), 1.0 * (float(mat4(injectionSwitch.y, 0.0, 0.0, abs(0.0), abs(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, 0.0, 0.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(1.0), 0.0, 1.0))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec4((false), true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))), bvec2(bvec3(bvec2(false, false), false)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((true ? -172.797 : -23.56))), bool(false))) > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, abs(0.0) + (injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sin(0.0), 1.0, 0.0))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_base + (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1), _GLF_IDENTITY(max((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1)), (max((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1))) ^ 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1), _GLF_IDENTITY(max((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1)), (max((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1))) ^ 0u))) - 0u) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(subgroup_size, 1u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(subgroup_size, _GLF_IDENTITY(1u, (0u >> _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), clamp(uint(_GLF_IDENTITY(8u, (1u ^ 1u) | (8u))), uint(8u), uint(8u))))) ^ (1u)))), (false ? _GLF_FUZZED(atomicMax(subgroup_size, bitfieldInsert(virtual_gid, subgroup_local_id, _GLF_IDENTITY(44663, max(_GLF_IDENTITY(44663, min(_GLF_IDENTITY(44663, clamp(44663, 44663, 44663)), _GLF_IDENTITY(44663, (44663) + 0))), 44663)), -68806))) : _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(subgroup_size, 1u), _GLF_IDENTITY(_GLF_IDENTITY(max(uvec2(subgroup_size, 1u), uvec2(subgroup_size, 1u)), (max(_GLF_IDENTITY(uvec2(subgroup_size, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, 0u ^ (1u)), _GLF_IDENTITY(1u, (1u) ^ 0u)))), (uvec2(subgroup_size, 1u)) >> uvec2(0u, 0u)), uvec2(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) << 0u)) / 1u))), 1u))) >> uvec2(0u, 0u)), (_GLF_IDENTITY(max(uvec2(subgroup_size, 1u), uvec2(subgroup_size, 1u)), (max(_GLF_IDENTITY(uvec2(subgroup_size, 1u), _GLF_IDENTITY((uvec2(subgroup_size, 1u)) >> uvec2(0u, 0u), clamp((uvec2(subgroup_size, 1u)) >> uvec2(0u, 0u), (uvec2(subgroup_size, 1u)) >> uvec2(0u, 0u), (uvec2(subgroup_size, 1u)) >> uvec2(0u, 0u)))), uvec2(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) << 0u)) / 1u))), 1u))) >> uvec2(0u, 0u))) / uvec2(1u, 1u)))), max(uint(uvec2(subgroup_size, 1u)), uint(uvec2(subgroup_size, 1u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(subgroup_size, 1u)), (false ? _GLF_FUZZED(atomicMax(subgroup_size, bitfieldInsert(virtual_gid, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id))) * 1u), 44663, -68806))) : _GLF_IDENTITY(uint(uvec2(subgroup_size, 1u)), max(uint(uvec2(subgroup_size, 1u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(subgroup_size, 1u)), (uint(uvec2(subgroup_size, 1u))) | 0u), ~ (~ (_GLF_IDENTITY(uint(uvec2(subgroup_size, 1u)), (uint(uvec2(subgroup_size, 1u))) | 0u)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(subgroup_size, 1u)), (false ? _GLF_FUZZED(atomicMax(subgroup_size, bitfieldInsert(virtual_gid, subgroup_local_id, 44663, -68806))) : _GLF_IDENTITY(uint(uvec2(subgroup_size, 1u)), max(uint(uvec2(subgroup_size, 1u)), uint(uvec2(subgroup_size, 1u)))))), (_GLF_IDENTITY(uint(uvec2(subgroup_size, 1u)), (false ? _GLF_FUZZED(atomicMax(subgroup_size, bitfieldInsert(virtual_gid, subgroup_local_id, 44663, -68806))) : _GLF_IDENTITY(uint(uvec2(subgroup_size, 1u)), max(uint(uvec2(subgroup_size, 1u)), uint(uvec2(subgroup_size, 1u))))))) >> 0u)) << (0u >> _GLF_IDENTITY(uint(3u), uint(3u))))) - 0u), uint(_GLF_IDENTITY(uvec2(subgroup_size, 1u), (uvec2(subgroup_size, 1u)) / uvec2(1u, 1u))), uint(uvec2(subgroup_size, 1u)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(subgroup_size, 1u), clamp(uvec2(subgroup_size, 1u), uvec2(subgroup_size, 1u), uvec2(subgroup_size, 1u)))), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 1u), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 1u), min(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 1u), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 1u), clamp(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 1u), uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 1u), uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 1u)))))) / uvec2(1u, 1u)), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_size, 1u), min(uvec2(subgroup_size, 1u), uvec2(subgroup_size, 1u))), uvec2(0u, 0u) | (_GLF_IDENTITY(uvec2(subgroup_size, 1u), min(uvec2(subgroup_size, 1u), uvec2(subgroup_size, 1u)))))), ((_GLF_IDENTITY(uvec2(subgroup_size, 1u), min(uvec2(subgroup_size, 1u), uvec2(subgroup_size, 1u))))) | uvec2(0u, 0u))))), (false ? _GLF_FUZZED(atomicMax(subgroup_size, bitfieldInsert(virtual_gid, subgroup_local_id, 44663, -68806))) : _GLF_IDENTITY(uint(uvec2(subgroup_size, 1u)), max(uint(uvec2(subgroup_size, _GLF_IDENTITY(1u, (1u ^ 0u) * (1u)))), uint(uvec2(subgroup_size, 1u)))))), uint(uvec2(subgroup_size, 1u)), uint(uvec2(subgroup_size, 1u)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_size, 1u), _GLF_IDENTITY((uvec2(subgroup_size, 1u)) >> uvec2(0u, 0u), min((uvec2(subgroup_size, 1u)) >> uvec2(0u, _GLF_IDENTITY(0u, (0u) ^ 0u)), (uvec2(subgroup_size, 1u)) >> uvec2(0u, 0u)))), max(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | (subgroup_size)), 1u), (uvec2(subgroup_size, 1u)) >> uvec2(0u, 0u)), _GLF_IDENTITY(uvec2(subgroup_size, 1u), (uvec2(subgroup_size, 1u)) >> uvec2(0u, 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_size, 1u), (uvec2(subgroup_size, 1u)) >> uvec2(0u, 0u)), max(_GLF_IDENTITY(uvec2(subgroup_size, 1u), (uvec2(subgroup_size, 1u)) >> uvec2(0u, 0u)), _GLF_IDENTITY(uvec2(subgroup_size, 1u), (uvec2(subgroup_size, 1u)) >> uvec2(0u, 0u))))) >> uvec2(0u, 0u))), clamp(_GLF_IDENTITY(uint(uvec2(subgroup_size, 1u)), (false ? _GLF_FUZZED(atomicMax(subgroup_size, bitfieldInsert(virtual_gid, subgroup_local_id, 44663, -68806))) : _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(subgroup_size, 1u), (false ? _GLF_FUZZED(uvec2(153672u, 40858u)) : uvec2(subgroup_size, 1u)))), max(_GLF_IDENTITY(uint(uvec2(subgroup_size, 1u)), ~ (~ (uint(uvec2(subgroup_size, 1u))))), uint(uvec2(subgroup_size, _GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, _GLF_IDENTITY(0u | (1u), (_GLF_IDENTITY(0u | (1u), uint(uint(0u | (1u))))) ^ 0u)))))))))), uint(uvec2(subgroup_size, 1u)), uint(uvec2(subgroup_size, 1u))))) / 1u) : _GLF_FUZZED(virtual_gid)))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), bool(bvec4(_GLF_IDENTITY(bool(false), (bool(false)) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))), bool(bvec2(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), false))))), bool(bool(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), (bool(false)) || false)), bool(bvec2(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), false))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : mat2(1.0) * (injectionSwitch))))[1], injectionSwitch[1], injectionSwitch[1])))).y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bool(bool(_GLF_DEAD(false))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))) : _GLF_FUZZED(-71.42))))))) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))), ! (! (bool(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))) * 1.0)))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)), bool(bool(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true))))))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-7.3, 157.715)) : injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7879.0483)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if((_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(subgroup_local_id % 2, max(subgroup_local_id % 2, subgroup_local_id % 2))) | (_GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, subgroup_local_id % 2))))) == 0)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4) - 0, min((4) - 0, (4) - 0)), (_GLF_IDENTITY((4) - 0, min((_GLF_IDENTITY(4, clamp(4, 4, 4))) - 0, (4) - 0))) ^ 0)), 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bvec3(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(((injectionSwitch)) * mat2(1.0), clamp(((injectionSwitch)) * mat2(1.0), ((injectionSwitch)) * mat2(1.0), ((injectionSwitch)) * mat2(1.0)))))) - vec2(0.0, 0.0)))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((false ? _GLF_FUZZED(-871.460) : injectionSwitch.x), _GLF_IDENTITY(float(mat4x2((false ? _GLF_FUZZED(-871.460) : injectionSwitch.x), 1.0, 1.0, sin(_GLF_IDENTITY(0.0, (0.0) + 0.0)), 1.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY((false ? _GLF_FUZZED(-1.6) : _GLF_IDENTITY(float(mat4x2((false ? _GLF_FUZZED(-871.460) : injectionSwitch.x), 1.0, 1.0, sin(0.0), 1.0, 1.0, 0.0, 1.0)), float(mat3x2(float(mat4x2((false ? _GLF_FUZZED(-871.460) : injectionSwitch.x), 1.0, 1.0, sin(0.0), 1.0, 1.0, 0.0, 1.0)), 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))), min((false ? _GLF_FUZZED(-1.6) : _GLF_IDENTITY(float(mat4x2((false ? _GLF_FUZZED(-871.460) : injectionSwitch.x), 1.0, 1.0, sin(0.0), 1.0, 1.0, 0.0, 1.0)), float(mat3x2(float(mat4x2((false ? _GLF_FUZZED(-871.460) : injectionSwitch.x), 1.0, 1.0, sin(0.0), 1.0, 1.0, 0.0, 1.0)), 1.0, 1.0, 0.0, 1.0, 1.0)))), (false ? _GLF_FUZZED(-1.6) : _GLF_IDENTITY(float(mat4x2((false ? _GLF_FUZZED(-871.460) : injectionSwitch.x), 1.0, 1.0, sin(0.0), 1.0, 1.0, 0.0, 1.0)), float(mat3x2(float(mat4x2((false ? _GLF_FUZZED(-871.460) : injectionSwitch.x), 1.0, 1.0, sin(0.0), 1.0, 1.0, 0.0, 1.0)), 1.0, 1.0, 0.0, 1.0, 1.0))))))))), (false ? _GLF_FUZZED(8936.7997) : _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(-871.460), (_GLF_FUZZED(-871.460)) / 1.0) : injectionSwitch.x), _GLF_IDENTITY(float(mat4x2((false ? _GLF_FUZZED(-871.460) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-0.0, -2.6)) : injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-0.0, -2.6)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-0.0, -2.6)) : injectionSwitch)))), max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), clamp(vec4(injectionSwitch, 0.0, 1.0), _GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), mix(vec4(_GLF_FUZZED(-77.05), _GLF_FUZZED(2.2), _GLF_FUZZED(-3.3), _GLF_FUZZED(5.9)), vec4((vec4(injectionSwitch, 0.0, 1.0))[0], (vec4(injectionSwitch, 0.0, 1.0))[1], (vec4(injectionSwitch, 0.0, 1.0))[2], (vec4(injectionSwitch, 0.0, 1.0))[3]), bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))), vec4(injectionSwitch, 0.0, 1.0)))), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-7.2), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), vec2((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0], _GLF_FUZZED(-737.160)), bvec2(true, false)), max(mix(vec2(_GLF_FUZZED(-7.2), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), vec2((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0], _GLF_FUZZED(-737.160)), bvec2(true, false)), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-7.2), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), vec2((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0], _GLF_FUZZED(-737.160)), bvec2(true, false)), _GLF_IDENTITY(mat2(1.0) * (mix(vec2(_GLF_FUZZED(-7.2), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), vec2((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0], _GLF_FUZZED(-737.160)), bvec2(true, false))), min(_GLF_IDENTITY(mat2(1.0) * (mix(vec2(_GLF_FUZZED(-7.2), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), vec2((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0], _GLF_FUZZED(-737.160)), bvec2(true, false))), clamp(mat2(1.0) * (mix(vec2(_GLF_FUZZED(-7.2), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), vec2((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0], _GLF_FUZZED(-737.160)), bvec2(true, false))), mat2(1.0) * (mix(vec2(_GLF_FUZZED(-7.2), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), vec2((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0], _GLF_FUZZED(-737.160)), bvec2(true, false))), _GLF_IDENTITY(mat2(1.0) * (mix(vec2(_GLF_FUZZED(-7.2), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), vec2((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0], _GLF_FUZZED(-737.160)), bvec2(true, false))), (mat2(1.0) * (mix(vec2(_GLF_FUZZED(-7.2), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), vec2((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0], _GLF_FUZZED(-737.160)), bvec2(true, false)))) - vec2(0.0, 0.0)))), mat2(1.0) * (mix(vec2(_GLF_FUZZED(-7.2), (_GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), (vec2(vec4(injectionSwitch, 0.0, 1.0))) + abs(vec2(0.0, 0.0))))[1]), vec2((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0], _GLF_FUZZED(-737.160)), bvec2(true, false)))))))))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(101.612)), vec2(_GLF_FUZZED(28.91), (injectionSwitch)[1]), bvec2(false, true))))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-0.0, -2.6)) : injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), clamp(vec4(injectionSwitch, 0.0, 1.0), _GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), mix(vec4(_GLF_FUZZED(-77.05), _GLF_FUZZED(2.2), _GLF_FUZZED(-3.3), _GLF_FUZZED(5.9)), vec4((vec4(injectionSwitch, 0.0, 1.0))[0], (vec4(injectionSwitch, 0.0, 1.0))[1], (vec4(injectionSwitch, 0.0, 1.0))[2], _GLF_IDENTITY((vec4(injectionSwitch, 0.0, 1.0)), mat4(1.0) * ((vec4(injectionSwitch, 0.0, 1.0))))[3]), bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))), vec4(injectionSwitch, 0.0, 1.0)))), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-7.2), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), vec2((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0], _GLF_FUZZED(-737.160)), bvec2(true, false)), max(mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-7.2, 0.0 + (-7.2))), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), vec2((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0], _GLF_FUZZED(-737.160)), bvec2(true, false)), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-7.2), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), vec2((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0], _GLF_FUZZED(-737.160)), bvec2(true, false)), _GLF_IDENTITY(mat2(1.0) * (mix(vec2(_GLF_FUZZED(-7.2), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), vec2(_GLF_IDENTITY((vec2(vec4(injectionSwitch, 0.0, 1.0))), min((vec2(vec4(injectionSwitch, 0.0, 1.0))), _GLF_IDENTITY((vec2(vec4(injectionSwitch, 0.0, 1.0))), (_GLF_IDENTITY((vec2(vec4(injectionSwitch, 0.0, 1.0))), max((vec2(vec4(injectionSwitch, 0.0, 1.0))), (vec2(vec4(injectionSwitch, 0.0, 1.0)))))) / vec2(1.0, 1.0))))[0], _GLF_FUZZED(_GLF_IDENTITY(-737.160, (-737.160) - _GLF_ZERO(0.0, injectionSwitch.x)))), bvec2(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec3(true, false, false)))))))), false))), min(mat2(1.0) * (mix(vec2(_GLF_FUZZED(-7.2), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[_GLF_IDENTITY(1, clamp(1, 1, 1))]), vec2((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0], _GLF_FUZZED(-737.160)), bvec2(true, false))), mat2(1.0) * (mix(vec2(_GLF_FUZZED(-7.2), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), vec2((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0], _GLF_FUZZED(-737.160)), bvec2(true, false)))))))))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(101.612)), vec2(_GLF_FUZZED(28.91), (injectionSwitch)[1]), bvec2(false, true))))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-0.0, -2.6)) : _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))))), max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), clamp(vec4(injectionSwitch, 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), cos(0.0), 1.0, exp(0.0), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(round(length(normalize(1.0))), 0.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(round(length(normalize(1.0))), 0.0), vec2(0.0, 1.0)), mix(float(dot(vec2(round(length(normalize(1.0))), 0.0), vec2(0.0, 1.0))), float(_GLF_FUZZED(-5058.5414)), bool(false)))), 1.0, 1.0, 0.0), (_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), cos(0.0), 1.0, exp(0.0), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(round(length(normalize(1.0))), 0.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(round(length(normalize(1.0))), 0.0), vec2(0.0, 1.0)), mix(float(dot(vec2(round(length(normalize(1.0))), 0.0), vec2(0.0, 1.0))), float(_GLF_FUZZED(-5058.5414)), bool(false)))), 1.0, 1.0, 0.0), (mat4x3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), cos(0.0), 1.0, exp(0.0), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(round(length(normalize(1.0))), 0.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(round(length(normalize(1.0))), 0.0), vec2(0.0, 1.0)), mix(float(dot(vec2(round(length(normalize(1.0))), 0.0), vec2(0.0, 1.0))), float(_GLF_FUZZED(-5058.5414)), bool(false)))), 1.0, 1.0, 0.0)) * mat4(1.0))) + mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), mix(vec4(_GLF_FUZZED(-77.05), _GLF_FUZZED(2.2), _GLF_FUZZED(-3.3), _GLF_FUZZED(5.9)), vec4((vec4(injectionSwitch, 0.0, 1.0))[0], (vec4(injectionSwitch, 0.0, 1.0))[1], (vec4(injectionSwitch, 0.0, 1.0))[2], _GLF_IDENTITY((vec4(injectionSwitch, 0.0, 1.0))[3], (_GLF_IDENTITY((vec4(injectionSwitch, 0.0, 1.0))[3], mix(float((vec4(injectionSwitch, 0.0, 1.0))[3]), float(_GLF_FUZZED(655.123)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) * 1.0)), bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))), vec4(injectionSwitch, 0.0, 1.0)))), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-7.2), (_GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), clamp(_GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), (vec2(vec4(injectionSwitch, 0.0, 1.0))) * mat2(1.0)), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), mix(vec2((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0], (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), vec2(_GLF_FUZZED(-671.233), _GLF_FUZZED(-511.474)), bvec2(false, false))), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), clamp(vec2(vec4(injectionSwitch, 0.0, 1.0)), vec2(vec4(injectionSwitch, 0.0, 1.0)), vec2(vec4(injectionSwitch, 0.0, 1.0)))))))[1]), vec2((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0], _GLF_FUZZED(-737.160)), bvec2(true, false)), max(mix(vec2(_GLF_FUZZED(-7.2), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), vec2((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0], _GLF_IDENTITY(_GLF_FUZZED(-737.160), clamp(_GLF_FUZZED(-737.160), _GLF_FUZZED(-737.160), _GLF_FUZZED(-737.160)))), bvec2(true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-7.2), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), vec2(_GLF_IDENTITY((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0], max(_GLF_IDENTITY((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0], float(mat2((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0], 0.0, abs(0.0), 1.0))), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[0])), _GLF_FUZZED(-737.160)), bvec2(true, false)), _GLF_IDENTITY(mat2(1.0) * (mix(vec2(_GLF_FUZZED(-7.2), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), vec2((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0], _GLF_FUZZED(-737.160)), bvec2(true, false))), min(mat2(1.0) * (mix(vec2(_GLF_FUZZED(-7.2), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), vec2((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0], _GLF_FUZZED(-737.160)), bvec2(true, false))), mat2(1.0) * (mix(vec2(_GLF_FUZZED(-7.2), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), vec2((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0], _GLF_FUZZED(-737.160)), bvec2(true, false)))))))))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(101.612)), vec2(_GLF_FUZZED(28.91), (injectionSwitch)[1]), bvec2(false, true))))))) : _GLF_FUZZED(vec2(-684.333, -844.925)))) : _GLF_FUZZED(vec2(296.333, 6.6)))).x), _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 1.0, abs(0.0), 1.0, 1.0))), (true ? _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 1.0, abs(0.0), 1.0, 1.0))) : _GLF_FUZZED(9.3))), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-2.9) : 1.0)), 1.0, cos(0.0), 0.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))) + (mat3(_GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 1.0, abs(0.0), 1.0, 1.0))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0))))), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 1.0, abs(0.0), 1.0, 1.0))), (true ? _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 1.0, abs(0.0), 1.0, 1.0))) : _GLF_FUZZED(9.3))), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-2.9) : 1.0)), 1.0, cos(0.0), 0.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))) + (mat3(_GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 1.0, abs(0.0), 1.0, 1.0))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0))))), (_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 1.0, abs(0.0), 1.0, 1.0))), (true ? _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 1.0, abs(0.0), 1.0, 1.0))) : _GLF_FUZZED(9.3))), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-2.9) : 1.0)), 1.0, cos(0.0), 0.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))) + (mat3(_GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 1.0, abs(0.0), 1.0, 1.0))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0)))))) - _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)))), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 1.0, abs(0.0), 1.0, 1.0))), (true ? _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 1.0, abs(0.0), 1.0, 1.0))) : _GLF_FUZZED(9.3))), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-2.9) : 1.0)), 1.0, cos(0.0), 0.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))) + (mat3(_GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 1.0, abs(0.0), 1.0, 1.0))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0))))))), 1.0, sin(0.0), _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 1.0)), (false ? _GLF_FUZZED(-1.6) : _GLF_IDENTITY(float(mat4x2((false ? _GLF_IDENTITY(_GLF_FUZZED(-871.460), (_GLF_FUZZED(-871.460)) / _GLF_IDENTITY(1.0, (1.0) / 1.0)) : injectionSwitch.x), 1.0, 1.0, _GLF_IDENTITY(sin(0.0), 0.0 + (_GLF_IDENTITY(sin(0.0), mix(float(_GLF_FUZZED(9131.3603)), float(_GLF_IDENTITY(sin(0.0), (sin(0.0)) - 0.0)), bool(true))))), 1.0, 1.0, 0.0, 1.0)), float(mat3x2(float(mat4x2(_GLF_IDENTITY((false ? _GLF_FUZZED(-871.460) : injectionSwitch.x), max(_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))) || false) ? _GLF_FUZZED(-871.460) : injectionSwitch.x), (true ? _GLF_IDENTITY((false ? _GLF_FUZZED(-871.460) : injectionSwitch.x), max((false ? _GLF_FUZZED(-871.460) : _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-61.98)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (false ? _GLF_FUZZED(-871.460) : injectionSwitch.x))) : _GLF_FUZZED(53.78))), (false ? _GLF_FUZZED(-871.460) : injectionSwitch.x))), 1.0, 1.0, sin(_GLF_IDENTITY(0.0, float(vec4(_GLF_IDENTITY(0.0, (0.0) / 1.0), exp(0.0), 1.0, 0.0)))), 1.0, 1.0, 0.0, 1.0)), 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(tanh(7916.8444)))), 1.0))))))))), (false ? _GLF_FUZZED(length(vec4(-3281.9180, 511.716, 2.4, 2.7))) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((false ? _GLF_FUZZED(-871.460) : injectionSwitch.x), _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x2((false ? _GLF_FUZZED(-871.460) : injectionSwitch.x), 1.0, 1.0, sin(_GLF_IDENTITY(0.0, (0.0) + 0.0)), 1.0, 1.0, 0.0, 1.0)), (false ? _GLF_FUZZED(-1.6) : _GLF_IDENTITY(float(mat4x2((false ? _GLF_FUZZED(-871.460) : injectionSwitch.x), 1.0, 1.0, sin(0.0), 1.0, 1.0, 0.0, 1.0)), float(mat3x2(float(mat4x2((false ? _GLF_FUZZED(-871.460) : injectionSwitch.x), 1.0, 1.0, sin(0.0), 1.0, 1.0, 0.0, 1.0)), 1.0, 1.0, 0.0, 1.0, 1.0))))), clamp(_GLF_IDENTITY(float(mat4x2((false ? _GLF_FUZZED(-871.460) : injectionSwitch.x), 1.0, 1.0, sin(_GLF_IDENTITY(0.0, (0.0) + 0.0)), 1.0, 1.0, 0.0, 1.0)), (false ? _GLF_FUZZED(-1.6) : _GLF_IDENTITY(float(mat4x2((false ? _GLF_FUZZED(-871.460) : injectionSwitch.x), 1.0, 1.0, sin(0.0), 1.0, 1.0, 0.0, 1.0)), float(mat3x2(float(mat4x2((false ? _GLF_FUZZED(_GLF_IDENTITY(-871.460, mix(float(_GLF_FUZZED(-6.7)), float(-871.460), bool(true)))) : injectionSwitch.x), 1.0, 1.0, sin(0.0), _GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0, 0.0, 1.0)), 1.0, 1.0, 0.0, 1.0, 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x2((false ? _GLF_FUZZED(-871.460) : injectionSwitch.x), 1.0, 1.0, sin(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + 0.0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + 0.0), mix(float(_GLF_IDENTITY(0.0, (0.0) + 0.0)), float(_GLF_FUZZED(5.8)), bool(false))) : _GLF_FUZZED(-7316.7356)))), 1.0, 1.0, 0.0, 1.0)), (false ? _GLF_FUZZED(-1.6) : _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY((false ? _GLF_FUZZED(-871.460) : injectionSwitch.x), clamp(_GLF_IDENTITY((false ? _GLF_FUZZED(-871.460) : injectionSwitch.x), float(mat2x3((false ? _GLF_FUZZED(-871.460) : injectionSwitch.x), 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 0.0))), (false ? _GLF_FUZZED(-871.460) : injectionSwitch.x), (false ? _GLF_FUZZED(-871.460) : injectionSwitch.x))), 1.0, 1.0, sin(0.0), 1.0, 1.0, 0.0, 1.0)), float(mat3x2(float(mat4x2((false ? _GLF_FUZZED(-871.460) : injectionSwitch.x), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(1830.4588))), 1.0, sin(0.0), 1.0, 1.0, 0.0, 1.0)), 1.0, 1.0, 0.0, 1.0, 1.0))))), max(_GLF_IDENTITY(float(mat4x2((false ? _GLF_FUZZED(_GLF_IDENTITY(-871.460, (true ? -871.460 : _GLF_FUZZED(19.76)))) : injectionSwitch.x), 1.0, 1.0, sin(_GLF_IDENTITY(0.0, (0.0) + 0.0)), 1.0, 1.0, 0.0, 1.0)), (false ? _GLF_FUZZED(-1.6) : _GLF_IDENTITY(float(mat4x2((false ? _GLF_FUZZED(-871.460) : injectionSwitch.x), 1.0, 1.0, sin(0.0), 1.0, 1.0, 0.0, 1.0)), float(mat3x2(float(mat4x2((false ? _GLF_FUZZED(-871.460) : injectionSwitch.x), 1.0, 1.0, sin(0.0), 1.0, 1.0, 0.0, 1.0)), 1.0, 1.0, 0.0, 1.0, 1.0))))), _GLF_IDENTITY(float(mat4x2((false ? _GLF_FUZZED(-871.460) : injectionSwitch.x), 1.0, 1.0, sin(_GLF_IDENTITY(0.0, (0.0) + 0.0)), 1.0, 1.0, 0.0, 1.0)), (false ? _GLF_FUZZED(-1.6) : _GLF_IDENTITY(float(mat4x2((false ? _GLF_FUZZED(-871.460) : injectionSwitch.x), 1.0, 1.0, sin(0.0), 1.0, 1.0, 0.0, 1.0)), float(mat3x2(float(mat4x2((false ? _GLF_FUZZED(-871.460) : injectionSwitch.x), 1.0, 1.0, sin(0.0), 1.0, 1.0, 0.0, 1.0)), 1.0, 1.0, 0.0, 1.0, 1.0))))))), _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x2((false ? _GLF_FUZZED(-871.460) : injectionSwitch.x), 1.0, 1.0, sin(_GLF_IDENTITY(0.0, (0.0) + 0.0)), 1.0, 1.0, 0.0, 1.0)), (false ? _GLF_FUZZED(-1.6) : _GLF_IDENTITY(float(mat4x2((false ? _GLF_FUZZED(-871.460) : injectionSwitch.x), 1.0, 1.0, sin(0.0), 1.0, 1.0, 0.0, 1.0)), float(mat3x2(float(mat4x2((false ? _GLF_FUZZED(-871.460) : injectionSwitch.x), 1.0, 1.0, sin(0.0), 1.0, 1.0, 0.0, 1.0)), 1.0, 1.0, 0.0, 1.0, 1.0))))), (_GLF_IDENTITY(_GLF_IDENTITY(float(mat4x2((false ? _GLF_FUZZED(-871.460) : injectionSwitch.x), 1.0, 1.0, sin(_GLF_IDENTITY(0.0, (0.0) + 0.0)), 1.0, 1.0, 0.0, 1.0)), clamp(float(mat4x2((false ? _GLF_FUZZED(-871.460) : injectionSwitch.x), 1.0, 1.0, sin(_GLF_IDENTITY(0.0, (0.0) + 0.0)), 1.0, 1.0, 0.0, 1.0)), float(mat4x2((false ? _GLF_FUZZED(-871.460) : injectionSwitch.x), 1.0, 1.0, sin(_GLF_IDENTITY(0.0, (0.0) + 0.0)), 1.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(float(mat4x2((false ? _GLF_FUZZED(-871.460) : injectionSwitch.x), 1.0, 1.0, sin(_GLF_IDENTITY(0.0, (0.0) + 0.0)), 1.0, 1.0, 0.0, 1.0)), (true ? _GLF_IDENTITY(float(mat4x2((false ? _GLF_FUZZED(-871.460) : injectionSwitch.x), 1.0, 1.0, sin(_GLF_IDENTITY(0.0, (0.0) + 0.0)), 1.0, 1.0, 0.0, 1.0)), (float(mat4x2((false ? _GLF_FUZZED(-871.460) : injectionSwitch.x), 1.0, 1.0, sin(_GLF_IDENTITY(0.0, (0.0) + 0.0)), 1.0, 1.0, 0.0, 1.0))) - 0.0) : _GLF_FUZZED(-7952.3176))))), (false ? _GLF_FUZZED(-1.6) : _GLF_IDENTITY(float(mat4x2((false ? _GLF_FUZZED(-871.460) : injectionSwitch.x), 1.0, 1.0, sin(0.0), 1.0, 1.0, 0.0, 1.0)), float(mat3x2(float(mat4x2((false ? _GLF_FUZZED(-871.460) : injectionSwitch.x), 1.0, 1.0, sin(0.0), 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 1.0)), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))))))) / 1.0))))), (false ? _GLF_FUZZED(8936.7997) : _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((false ? _GLF_FUZZED(-871.460) : injectionSwitch.x), _GLF_IDENTITY(float(mat4x2((false ? _GLF_FUZZED(-871.460) : _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), mix(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(-7.2), (false ? _GLF_FUZZED(-47.74) : _GLF_FUZZED(-7.2))), (_GLF_IDENTITY(vec2(vec4(injectionSwitch, _GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(float(99224u))), clamp(float(_GLF_FUZZED(float(99224u))), float(_GLF_FUZZED(float(99224u))), _GLF_IDENTITY(float(_GLF_FUZZED(float(99224u))), max(float(_GLF_FUZZED(float(99224u))), float(_GLF_FUZZED(float(99224u))))))), float(0.0), bool(true))), 1.0)), vec2(mat2(vec2(vec4(injectionSwitch, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(float(99224u))), float(0.0), bool(true))), 1.0)), 0.0, 1.0))))[1]), (vec2(_GLF_IDENTITY(_GLF_FUZZED(-7.2), (false ? _GLF_FUZZED(-47.74) : _GLF_FUZZED(-7.2))), (_GLF_IDENTITY(vec2(vec4(injectionSwitch, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(float(99224u))), float(0.0), bool(true))), 1.0)), vec2(mat2(vec2(vec4(injectionSwitch, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(float(99224u))), float(0.0), bool(true))), 1.0)), 0.0, 1.0))))[1])) / vec2(1.0, 1.0)), vec2((_GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 1.0)), _GLF_IDENTITY(mat2(1.0) * (vec2(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 1.0))), mix(vec2((mat2(1.0) * (vec2(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 1.0))))[0], (mat2(1.0) * (vec2(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 1.0))))[1]), vec2(_GLF_FUZZED(vec4(-431.509, 6414.9009, 81.46, -0.9).b), _GLF_FUZZED(-23.83)), bvec2(false, false)))))[_GLF_IDENTITY(0, ~ (~ (0)))], _GLF_FUZZED(_GLF_IDENTITY(-737.160, max(-737.160, -737.160)))), bvec2(true, false)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch)), (_GLF_IDENTITY(((injectionSwitch)), min(((injectionSwitch)), ((injectionSwitch))))) / vec2(1.0, 1.0)) - vec2(0.0, 0.0), (((injectionSwitch)) - vec2(0.0, 0.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))[0], _GLF_FUZZED(101.612)), vec2(_GLF_FUZZED(28.91), (injectionSwitch)[1]), bvec2(false, true))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(101.612)), vec2(_GLF_FUZZED(28.91), (injectionSwitch)[1]), bvec2(false, true)), _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (mix(vec2((injectionSwitch)[0], _GLF_FUZZED(101.612)), vec2(_GLF_IDENTITY(_GLF_FUZZED(28.91), mix(float(_GLF_FUZZED(28.91)), float(_GLF_FUZZED((32.49))), bool(false))), (injectionSwitch)[1]), bvec2(false, true))), max(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (mix(vec2((injectionSwitch)[0], _GLF_FUZZED(101.612)), vec2(_GLF_FUZZED(28.91), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, ! (! (false))), true))), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (mix(vec2(_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), vec2(_GLF_FUZZED(938.819), _GLF_FUZZED(-4.6)), bvec2(false, false)))[0], _GLF_FUZZED(101.612)), vec2(_GLF_FUZZED(28.91), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, false || (true))))))))))), clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(101.612)), vec2(_GLF_IDENTITY(_GLF_FUZZED(28.91), (true ? _GLF_IDENTITY(_GLF_FUZZED(28.91), (_GLF_FUZZED(28.91)) - length(vec3(0.0, 0.0, 0.0))) : _GLF_FUZZED(_GLF_IDENTITY(-453.579, float(float(-453.579)))))), (injectionSwitch)[_GLF_IDENTITY(1, (true ? 1 : _GLF_IDENTITY(_GLF_FUZZED(48705), _GLF_IDENTITY(int(int(_GLF_FUZZED(48705))), clamp(int(int(_GLF_FUZZED(48705))), int(int(_GLF_FUZZED(48705))), int(int(_GLF_FUZZED(48705))))))))]), bvec2(false, true))))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) + vec2(0.0, 0.0)), (injectionSwitch)))[0], _GLF_FUZZED(101.612)), _GLF_IDENTITY(vec2(_GLF_FUZZED(28.91), (injectionSwitch)[1]), max(vec2(_GLF_FUZZED(28.91), (injectionSwitch)[1]), vec2(_GLF_FUZZED(28.91), (injectionSwitch)[1]))), bvec2(false, true))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(101.612)), vec2(_GLF_FUZZED(28.91), (injectionSwitch)[1]), bvec2(false, true)), max(_GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(101.612)), vec2(_GLF_FUZZED(28.91), (injectionSwitch)[1]), bvec2(false, true)), mix(vec2(_GLF_FUZZED(vec4(-3.1, -2.9, 1.2, -614.515).x), (mix(vec2((injectionSwitch)[0], _GLF_FUZZED(101.612)), vec2(_GLF_FUZZED(28.91), (injectionSwitch)[1]), bvec2(false, true)))[1]), vec2((mix(vec2((injectionSwitch)[0], _GLF_FUZZED(101.612)), vec2(_GLF_FUZZED(28.91), (injectionSwitch)[1]), bvec2(false, true)))[0], _GLF_FUZZED(551.670)), bvec2(_GLF_IDENTITY(true, bool(bvec4(true, false, true, true))), false))), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(101.612)), _GLF_IDENTITY(vec2(_GLF_FUZZED(28.91), (injectionSwitch)[1]), (vec2(_GLF_FUZZED(28.91), (injectionSwitch)[1])) - vec2(0.0, 0.0)), bvec2(false, true))))))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(101.612)), vec2(_GLF_FUZZED(28.91), (injectionSwitch)[1]), bvec2(false, true)), max(_GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(101.612)), _GLF_IDENTITY(vec2(_GLF_FUZZED(28.91), (injectionSwitch)[1]), vec2(1.0, 1.0) * (vec2(_GLF_FUZZED(28.91), (injectionSwitch)[1]))), bvec2(false, true)), mix(vec2(_GLF_FUZZED(vec4(-3.1, -2.9, 1.2, -614.515).x), (mix(vec2((injectionSwitch)[0], _GLF_FUZZED(101.612)), vec2(_GLF_FUZZED(28.91), (injectionSwitch)[1]), bvec2(false, true)))[1]), vec2((mix(vec2((injectionSwitch)[0], _GLF_FUZZED(101.612)), vec2(_GLF_FUZZED(28.91), (injectionSwitch)[1]), bvec2(false, true)))[0], _GLF_FUZZED(551.670)), bvec2(true, false))), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(101.612)), vec2(_GLF_FUZZED(28.91), (injectionSwitch)[1]), bvec2(false, true)))))))) * mat2(1.0))))) * vec2(1.0, 1.0)))).x), 1.0, 1.0, sin(0.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(525.989)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (false ? _GLF_FUZZED(-1.6) : _GLF_IDENTITY(float(mat4x2((false ? _GLF_FUZZED(-871.460) : injectionSwitch.x), 1.0, 1.0, sin(0.0), 1.0, 1.0, 0.0, 1.0)), float(mat3x2(float(mat4x2((false ? _GLF_FUZZED(-871.460) : injectionSwitch.x), 1.0, 1.0, sin(_GLF_IDENTITY(0.0, float(vec4(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(exp(0.0), (exp(0.0)) * 1.0), 1.0, 0.0)))), 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0)), 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(tanh(7916.8444), (_GLF_IDENTITY(tanh(7916.8444), min(tanh(7916.8444), tanh(7916.8444)))) + 0.0)))), 1.0))))))))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), float(_GLF_FUZZED(-9.3)), bool(false))) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, bool(bvec2(true, false))), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), float(_GLF_FUZZED(-9.3)), bool(false))) > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, bool(bvec2(true, false))), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), float(_GLF_FUZZED(-9.3)), bool(false))) > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, bool(bvec2(true, false))), true)))), (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), float(_GLF_FUZZED(-9.3)), bool(false))) > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, bool(bvec2(true, false))), true))))) || false)))), (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), float(_GLF_FUZZED(-9.3)), bool(false))) > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, bool(bvec2(true, false))), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), float(_GLF_FUZZED(-9.3)), bool(false))) > injectionSwitch.y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sqrt(0.0)), injectionSwitch.y))), _GLF_IDENTITY(true, bool(bvec2(true, false))), true)))), (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), float(_GLF_FUZZED(-9.3)), bool(false))) > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, bool(bvec2(true, false))), true))))) || false))))) || false))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))), bool(bvec3(false, true, true)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
              barrier();
             barrier();
            }
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, ~ (~ (1)))]), vec2(_GLF_FUZZED(vec4(1699.1070, -598.476, -15.48, 2804.2264).t), _GLF_FUZZED(-3.0)), _GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec4(bvec2(bvec2(false, false)), false, true)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec4(bvec2(bvec2(false, false)), false, true)))))))))), injectionSwitch)).y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), true && (bool(bvec3(false, true, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))))))))), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(cosh(-0.3))))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(cosh(-0.3))))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(cosh(-0.3)))))) || false)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 1.0))), injectionSwitch.x)) > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2, (2) / 1)), (_GLF_IDENTITY(uint(2), min(uint(2), _GLF_IDENTITY(uint(2), max(uint(2), uint(2)))))) >> (0u | 0u)), min(_GLF_IDENTITY(uint(2), max(uint(2), uint(2))), _GLF_IDENTITY(uint(2), 0u + (uint(_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(0 ^ _GLF_IDENTITY((2), 0 | ((2))), (0 ^ _GLF_IDENTITY((2), 0 | ((2)))) ^ 0)), 1 * (2))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2, (2) / 1)), (_GLF_IDENTITY(uint(2), min(uint(2), _GLF_IDENTITY(uint(2), max(uint(2), uint(2)))))) >> (0u | 0u)), min(uint(2), _GLF_IDENTITY(_GLF_IDENTITY(uint(2), min(_GLF_IDENTITY(uint(2), 0u ^ (uint(2))), uint(2))), 0u + (uint(_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(0 ^ _GLF_IDENTITY((2), 0 | ((2))), (0 ^ _GLF_IDENTITY((2), 0 | ((2)))) ^ 0)), 1 * (2))))))), (false ? _GLF_FUZZED(165085u) : _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2, (2) / 1)), (_GLF_IDENTITY(uint(2), min(uint(2), _GLF_IDENTITY(uint(2), max(_GLF_IDENTITY(uint(2), (_GLF_IDENTITY(uint(2), clamp(uint(2), _GLF_IDENTITY(uint(2), (false ? _GLF_FUZZED(workgroup_id) : uint(2))), uint(2)))) * 1u), uint(2)))))) >> (0u | 0u)), min(uint(2), _GLF_IDENTITY(_GLF_IDENTITY(uint(2), (false ? _GLF_FUZZED(num_workgroup) : uint(2))), 0u + (uint(_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(0 ^ _GLF_IDENTITY(_GLF_IDENTITY((2), 0 | ((2))), 0 | ((2))), (0 ^ _GLF_IDENTITY((2), 0 | ((2)))) ^ _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), (_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), clamp(_GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(0, min(0, 0))))) >> 0))))), 1 * (2)))))))))))), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((mat4x2(-140.798, -51.70, -828.774, -9.4, -97.25, -28.08, 8.9, 151.159) * vec4(-31.77, -2886.5703, 9.7, 714.452)))))) * vec2(1.0, 1.0)).y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, bool(bool(false))) || (_GLF_DEAD(false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, false || (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), false, false)), bvec2(bvec3(bvec2(bvec4(bvec2(false, false), false, false)), false))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-55.85)), bool(false)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), false || (! (false)))) || false))), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-8.6)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), bool(true))) > injectionSwitch.y)) ? _GLF_FUZZED(-8.4) : injectionSwitch.x)) > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), false || _GLF_IDENTITY((! (false)), ((! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-8.6)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), bool(true))) > injectionSwitch.y)) ? _GLF_FUZZED(-8.4) : injectionSwitch.x)) > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-3.7), _GLF_FUZZED(321.187)), bvec2(false, false))).y)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) * vec2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), clamp(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), _GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), _GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])))), injectionSwitch[1])).y), _GLF_ONE(1.0, injectionSwitch.y)), clamp((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) * vec2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y), _GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + _GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch))))) * vec2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y), _GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) * vec2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[_GLF_IDENTITY(0, (0) << 0)], injectionSwitch[0])), injectionSwitch[1])).y), _GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(vec2(mat3((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), (true ? vec2(0.0, 0.0) + (injectionSwitch) : _GLF_FUZZED(injectionSwitch))))) * vec2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0]))) * 1.0), min(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(atanh(vec2(-2.3, 47.39)))))[0])), injectionSwitch[1])).y), _GLF_ONE(1.0, injectionSwitch.y)), 0.0, sqrt(0.0), exp(0.0), 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(vec3(2.4, -6.7, -73.38).r)), bool(false))))), 1.0)), mix(vec2(_GLF_FUZZED(-9.1), _GLF_FUZZED(536.112)), vec2((vec2(mat3((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) * vec2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y), _GLF_ONE(1.0, injectionSwitch.y)), 0.0, sqrt(0.0), exp(0.0), 0.0, 1.0, 0.0, 1.0)))[0], (vec2(mat3((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) * vec2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y), _GLF_ONE(1.0, injectionSwitch.y)), 0.0, sqrt(0.0), exp(0.0), 0.0, 1.0, 0.0, 1.0)))[1]), bvec2(true, true))))))).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
