#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), false || (! (false)))) || false)))), (_GLF_DEAD(false)) || false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) / _GLF_ONE(1.0, injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), false || ((injectionSwitch.x > injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, 1u * (0u)), 1u), _GLF_IDENTITY(min(_GLF_IDENTITY(uvec2(0u, 1u), uvec2(0u, 0u) | (uvec2(0u, 1u))), uvec2(0u, _GLF_IDENTITY(_GLF_IDENTITY(1u, 0u + (1u)), (_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u + (1u)), min(_GLF_IDENTITY(1u, 0u + (1u)), _GLF_IDENTITY(1u, 0u + (1u))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))), min(_GLF_IDENTITY(min(_GLF_IDENTITY(uvec2(0u, 1u), uvec2(0u, 0u) | (uvec2(0u, 1u))), uvec2(0u, _GLF_IDENTITY(1u, 0u + (1u)))), (false ? _GLF_FUZZED(uvec2(69832u, 167911u)) : min(_GLF_IDENTITY(uvec2(0u, 1u), uvec2(0u, 0u) | (uvec2(0u, 1u))), uvec2(0u, _GLF_IDENTITY(1u, 0u + (1u)))))), _GLF_IDENTITY(min(_GLF_IDENTITY(uvec2(0u, 1u), uvec2(0u, 0u) | (uvec2(0u, 1u))), uvec2(0u, _GLF_IDENTITY(1u, 0u + (1u)))), uvec2(0u, 0u) + (min(_GLF_IDENTITY(uvec2(0u, 1u), uvec2(0u, 0u) | (uvec2(0u, 1u))), uvec2(0u, _GLF_IDENTITY(1u, 0u + (1u)))))))))), clamp(uint(_GLF_IDENTITY(uvec2(0u, 1u), min(_GLF_IDENTITY(uvec2(0u, 1u), uvec2(0u, 0u) | (uvec2(0u, 1u))), uvec2(0u, 1u)))), uint(_GLF_IDENTITY(uvec2(0u, 1u), min(_GLF_IDENTITY(uvec2(0u, 1u), uvec2(0u, 0u) | (uvec2(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(0u, 0u ^ (0u)))), _GLF_IDENTITY(0u, (0u) | (0u)))), 1u))), uvec2(0u, 1u)))), uint(_GLF_IDENTITY(uvec2(0u, _GLF_IDENTITY(1u, 0u + (1u))), min(_GLF_IDENTITY(uvec2(0u, 1u), uvec2(0u, 0u) | _GLF_IDENTITY((uvec2(0u, 1u)), (true ? (uvec2(0u, 1u)) : _GLF_FUZZED(uvec2(38727u, 96321u))))), _GLF_IDENTITY(uvec2(0u, 1u), (_GLF_IDENTITY(uvec2(0u, 1u), (_GLF_IDENTITY(uvec2(0u, 1u), (uvec2(0u, 1u)) | _GLF_IDENTITY((_GLF_IDENTITY(uvec2(0u, 1u), clamp(uvec2(0u, 1u), uvec2(0u, 1u), uvec2(0u, 1u)))), (true ? (_GLF_IDENTITY(uvec2(0u, 1u), clamp(uvec2(0u, 1u), uvec2(0u, 1u), uvec2(0u, 1u)))) : _GLF_FUZZED(uvec2(102591u, 100051u)))))) / uvec2(1u, 1u))) * uvec2(1u, 1u)))))))) ^ (gl_WorkGroupSize.x));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) && true), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-8.3) : injectionSwitch.x)) > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((false ? _GLF_FUZZED(-8.3) : injectionSwitch.x), max(_GLF_IDENTITY((false ? _GLF_FUZZED(-8.3) : injectionSwitch.x), clamp((false ? _GLF_FUZZED(-8.3) : injectionSwitch.x), (false ? _GLF_FUZZED(-8.3) : injectionSwitch.x), (false ? _GLF_FUZZED(-8.3) : injectionSwitch.x))), (false ? _GLF_FUZZED(-8.3) : injectionSwitch.x)))) > injectionSwitch.y), bool(bvec3(bool(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((false ? _GLF_FUZZED(-8.3) : injectionSwitch.x), max(_GLF_IDENTITY((false ? _GLF_FUZZED(-8.3) : injectionSwitch.x), clamp((false ? _GLF_FUZZED(-8.3) : injectionSwitch.x), (false ? _GLF_FUZZED(-8.3) : injectionSwitch.x), (false ? _GLF_FUZZED(-8.3) : injectionSwitch.x))), (false ? _GLF_FUZZED(-8.3) : injectionSwitch.x)))) > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec2(injectionSwitch.x, 1.0), (vec2(injectionSwitch.x, 1.0)) * mat2(1.0)))), sin(0.0), 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0))), (false ? _GLF_FUZZED(_GLF_IDENTITY(-8.3, (-8.3) * 1.0)) : injectionSwitch.x)) > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(bool(bool(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_IDENTITY(_GLF_FUZZED(-8.3), (_GLF_FUZZED(_GLF_IDENTITY(-8.3, clamp(_GLF_IDENTITY(-8.3, mix(float(_GLF_FUZZED(-5712.9857)), float(_GLF_IDENTITY(-8.3, min(-8.3, -8.3))), bool(true))), -8.3, _GLF_IDENTITY(-8.3, (-8.3) / 1.0))))) / 1.0) : injectionSwitch.x)) > injectionSwitch.y)))), true && (bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(-8.3, (true ? _GLF_IDENTITY(-8.3, clamp(-8.3, -8.3, -8.3)) : _GLF_FUZZED(-1.3)))) : injectionSwitch.x, cos(0.0) * (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(-8.3, (true ? _GLF_IDENTITY(-8.3, clamp(-8.3, -8.3, -8.3)) : _GLF_FUZZED(-1.3)))) : injectionSwitch.x, mix(float(false ? _GLF_FUZZED(_GLF_IDENTITY(-8.3, (true ? _GLF_IDENTITY(-8.3, clamp(-8.3, -8.3, -8.3)) : _GLF_FUZZED(-1.3)))) : injectionSwitch.x), float(_GLF_FUZZED(-344.424)), bool(false))))))) > injectionSwitch.y), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-8.3) : _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))) + 0.0))) > injectionSwitch.y), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-8.3) : _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))) + 0.0))) > injectionSwitch.y)), ! (! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-8.3) : _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))) + 0.0))) > injectionSwitch.y)), (! (bool(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-8.3) : _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))) + 0.0))) > injectionSwitch.y))) && true)))))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-8.3) : injectionSwitch.x)) > injectionSwitch.y), true && (bool(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-8.3) : injectionSwitch.x)) > injectionSwitch.y))), false, true, false)))))))), bool(bvec4(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(-8.3) : injectionSwitch.x)) > injectionSwitch.y), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-8.3) : injectionSwitch.x)) > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-8.3) : injectionSwitch.x)) > injectionSwitch.y), true && (bool(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-8.3) : injectionSwitch.x)) > injectionSwitch.y))), _GLF_IDENTITY(false, false || (false)), true, false)))))))), false || (bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-8.3) : _GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)), abs(1.0), 1.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0))))) > injectionSwitch.y), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((false ? _GLF_FUZZED(-8.3) : injectionSwitch.x), mix(float((false ? _GLF_FUZZED(-8.3) : injectionSwitch.x)), float(_GLF_FUZZED(179.097)), bool(false)))) > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-8.3) : injectionSwitch.x)) > injectionSwitch.y), true && (bool(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-8.3) : injectionSwitch.x)) > injectionSwitch.y))), false, true, false)))))))))), false, true, false)))))))))), true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false || (false), (false || (false)) && true))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 0.0, log(1.0), 1.0, tan(0.0), 1.0, sin(0.0), exp(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)))), 0.0, tan(0.0), determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)), 1.0))) > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y) + 0.0)))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x < injectionSwitch.y)))) && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bool(_GLF_IDENTITY(false, false || (false)))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_base = _GLF_IDENTITY(subgroup_id * subgroup_size, (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) | (subgroup_id * subgroup_size));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(unpackUnorm2x16(subgroup_id)))).x, min(injectionSwitch.x, injectionSwitch.x))) / 1.0) > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-7637.8826, -5.4)) : injectionSwitch)).x > injectionSwitch.y), false, true))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, 1u * (workgroup_base)) + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && ((false)))))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))) && true)) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) + 0u) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[virtual_gid], uint(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1)), clamp(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1)), _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), max(_GLF_IDENTITY(1, max(1, 1)), 1))) | (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1)))))), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1)), clamp(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1)), _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1)), (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1))) | (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1)))))), (_GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1)), clamp(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1)), _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1)), (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1))) | (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1)), clamp(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1)), _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1)), (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1))) | (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1)))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1)), clamp(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1)), _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1)), (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1))) | (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1)))))), (_GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1)), clamp(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1)), _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1)), (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1))) | (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1)), clamp(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1)), _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1)), (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1))) | (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1)), clamp(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1)), _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1)), (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1))) | (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1)))))), (_GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1)), clamp(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1)), _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1)), (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1))) | (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1)), clamp(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1)), _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1)), (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1))) | (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1))))))))) + 0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1)), clamp(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1)), _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1)), (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1))) | (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1)))))), (_GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1)), clamp(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1)), _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1)), (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1))) | (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1)), clamp(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1)), _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1)), (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1))) | (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1)))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1)), clamp(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1)), _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1)), (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1))) | (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1)))))), (_GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1)), clamp(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1)), _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1)), (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1))) | (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1)), clamp(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1)), _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1)), (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1))) | (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1)))))))))))), _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1)), _GLF_IDENTITY(1, _GLF_IDENTITY(max(_GLF_IDENTITY(1, max(1, 1)), 1), min(max(_GLF_IDENTITY(1, max(1, 1)), 1), max(_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), (false ? _GLF_FUZZED(98041) : max(1, 1)))), 1))))))))), 4, _GLF_IDENTITY(64, _GLF_IDENTITY(0 + (64), min(0 + (64), 0 + (64)))), _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, (4) << 0)) | (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(32691) : 4))), ((_GLF_IDENTITY(4, (4) << 0)) | (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(32691) : _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(89136) : 4))) | 0))))) / 1)), min(4, 4)))), (false ? _GLF_FUZZED(88728) : _GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) << 0)) | (_GLF_IDENTITY(4, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))) ? _GLF_IDENTITY(_GLF_FUZZED(32691), (_GLF_FUZZED(32691)) - 0) : 4)))), min(4, 4)))))))), _GLF_IDENTITY((4), ~ (_GLF_IDENTITY(~ ((4)), (false ? _GLF_FUZZED(-2307) : _GLF_IDENTITY(_GLF_IDENTITY(~ ((4)), (false ? _GLF_FUZZED(-39541) : ~ (_GLF_IDENTITY((4), _GLF_IDENTITY(max(_GLF_IDENTITY((4), int(int((4)))), _GLF_IDENTITY((4), 0 ^ ((4)))), min(max(_GLF_IDENTITY((4), int(int((4)))), _GLF_IDENTITY((4), 0 ^ ((4)))), max(_GLF_IDENTITY((4), int(int((4)))), _GLF_IDENTITY((4), 0 ^ ((4)))))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(~ ((4)), (false ? _GLF_FUZZED(-39541) : ~ (_GLF_IDENTITY((4), max(_GLF_IDENTITY((4), int(_GLF_IDENTITY(int((4)), clamp(int((4)), int((4)), int((4)))))), _GLF_IDENTITY((4), 0 ^ ((4)))))))), (false ? _GLF_FUZZED(75134) : _GLF_IDENTITY(~ ((4)), (false ? _GLF_FUZZED(-39541) : ~ (_GLF_IDENTITY((4), _GLF_IDENTITY(max(_GLF_IDENTITY((4), int(int((4)))), _GLF_IDENTITY((4), 0 ^ ((4)))), int(ivec4(max(_GLF_IDENTITY((4), int(int((4)))), _GLF_IDENTITY((4), 0 ^ ((4)))), 0, 1, 0))))))))), _GLF_IDENTITY(~ ((4)), (false ? _GLF_FUZZED(-39541) : ~ (_GLF_IDENTITY(_GLF_IDENTITY((4), max(_GLF_IDENTITY((4), int(int((4)))), _GLF_IDENTITY((4), 0 ^ ((4))))), (_GLF_IDENTITY((4), max(_GLF_IDENTITY((4), int(int((4)))), _GLF_IDENTITY((4), 0 ^ ((4)))))) / 1)))))))))) | 0), 4, 4)));
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, ! (! _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), vec2(mat3x2(_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (clamp(injectionSwitch, injectionSwitch, injectionSwitch)) - vec2(0.0, 0.0)), 0.0, 1.0, sqrt(0.0), 1.0)))).y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), vec2(mat3x2(_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (clamp(injectionSwitch, injectionSwitch, injectionSwitch)) - vec2(0.0, 0.0)), 0.0, 1.0, sqrt(0.0), 1.0)))).y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), vec2(mat3x2(_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (clamp(injectionSwitch, injectionSwitch, injectionSwitch)) - vec2(0.0, 0.0)), 0.0, 1.0, sqrt(0.0), 1.0)))).y), true, true, true)), false || (bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), vec2(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (clamp(injectionSwitch, injectionSwitch, injectionSwitch)) - vec2(0.0, 0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (clamp(injectionSwitch, injectionSwitch, injectionSwitch)) - vec2(0.0, 0.0)), mat2(1.0) * (_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (clamp(injectionSwitch, injectionSwitch, injectionSwitch)) - vec2(0.0, 0.0))))) + vec2(0.0, 0.0)), 0.0, 1.0, sqrt(0.0), 1.0)))).y), true, true, true)))))) || false)))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false || (injectionSwitch.x > injectionSwitch.y)))) && _GLF_IDENTITY(true, false || (true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), false || (! (false)))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if((subgroup_local_id % _GLF_IDENTITY(2, (2) >> 0)) == 0)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) >> (0 << _GLF_IDENTITY(int(1), int(1)))), 0 + (_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-49466) : _GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec4(2, 0, 1, _GLF_IDENTITY(0, max(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), _GLF_IDENTITY(0 | _GLF_IDENTITY((_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 ^ ((0))))), (_GLF_IDENTITY((_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 ^ ((0))))), min((_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 ^ ((0))))), (_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 ^ ((0)))))))) ^ 0), (0 | _GLF_IDENTITY((_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY(_GLF_IDENTITY((0), 0 ^ ((0))), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY((0), 0 ^ ((0))))))), (_GLF_IDENTITY((_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 ^ ((0))))), min((_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 ^ ((0))))), (_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 ^ ((0)))))))) ^ 0)) | (0 | _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 ^ ((0))))), (_GLF_IDENTITY((_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 ^ ((0))))), min((_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 ^ ((0))))), (_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 ^ ((0)))))))) ^ 0), (_GLF_IDENTITY((_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 ^ ((0))))), (_GLF_IDENTITY((_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 ^ ((0))))), min((_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 ^ ((0))))), (_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 ^ ((0)))))))) ^ 0)) >> 0)))), 0))), clamp(_GLF_IDENTITY(ivec4(2, 0, 1, _GLF_IDENTITY(0, max(_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) ^ 0), _GLF_IDENTITY(0 | _GLF_IDENTITY((_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 ^ ((_GLF_IDENTITY(0, (0) | (0))))))), (_GLF_IDENTITY((_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 ^ ((0))))), min((_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 ^ ((0))))), (_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 ^ ((0)))))))) ^ 0), (0 | _GLF_IDENTITY((_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 ^ ((0))))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 ^ ((0))))), min((_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 ^ ((0))))), (_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), _GLF_IDENTITY(0, 0 | (0)) ^ ((0)))))))), ((_GLF_IDENTITY((_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 ^ ((0))))), min((_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 ^ ((0))))), (_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), _GLF_IDENTITY(0, 0 | (0)) ^ ((0))))))))) >> (0 << _GLF_IDENTITY(int(7), int(7)))) ^ 0)) | (0 | _GLF_IDENTITY((_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 ^ ((0))))), (_GLF_IDENTITY((_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 ^ ((0))))), min((_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 ^ ((0))))), (_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 ^ ((0)))))))) ^ 0)))), 0))), ~ (~ (_GLF_IDENTITY(ivec4(2, 0, 1, _GLF_IDENTITY(0, max(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), _GLF_IDENTITY(0 | _GLF_IDENTITY((_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 ^ ((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) | (0))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 ^ ((0)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 ^ ((0)))), min(_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 ^ ((0)))), _GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 ^ ((0))))))), int(ivec4(~ (_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 ^ ((0)))), min(_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 ^ ((0)))), _GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 ^ ((0))))))), 0, 1, (0 << _GLF_IDENTITY(int(8), int(8))))))))), min((_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 ^ ((0))))), (_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 ^ ((0)))))))) ^ 0), (0 | _GLF_IDENTITY((_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 ^ ((0))))), (_GLF_IDENTITY((_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), _GLF_IDENTITY(0 ^ ((0)), (_GLF_IDENTITY(0 ^ ((0)), (_GLF_IDENTITY(0 ^ ((0)), 0 | (0 ^ ((0))))) | (_GLF_IDENTITY(0 ^ ((0)), (0 ^ ((0))) >> 0)))) >> 0)))), min((_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), _GLF_IDENTITY(0 ^ ((0)), (0 ^ ((0))) ^ 0)))), (_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 ^ ((0)))))))) ^ 0)) | (0 | _GLF_IDENTITY((_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-37320)))), 0 ^ ((0))))), (_GLF_IDENTITY((_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 ^ ((0))))), min((_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 ^ ((0))))), (_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), _GLF_IDENTITY(0 ^ ((0)), 0 ^ (_GLF_IDENTITY(0 ^ ((0)), ~ (~ (0 ^ ((0))))))))))))) ^ 0)))), 0))), ivec4(0, 0, 0, 0) ^ (ivec4(2, 0, 1, _GLF_IDENTITY(0, max(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), _GLF_IDENTITY(0 | _GLF_IDENTITY((_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 ^ (_GLF_IDENTITY((0), ((0)) >> 0))))), (_GLF_IDENTITY((_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY(_GLF_IDENTITY((0), 0 ^ ((0))), (_GLF_IDENTITY((0), 0 ^ ((0)))) ^ 0))), min((_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 ^ ((0))))), (_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 ^ _GLF_IDENTITY(((0)), (((0))) << 0))))))) ^ 0), (0 | _GLF_IDENTITY((_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 ^ ((0))))), (_GLF_IDENTITY((_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 ^ ((0))))), min((_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 ^ ((0))))), (_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-63088) : _GLF_IDENTITY(0, (0) << 0))) ^ ((0)))))))) ^ 0)) | (0 | _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 ^ ((0))))), (_GLF_IDENTITY((_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 ^ ((0))))), min((_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 ^ ((0))))), (_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 ^ ((0)))))))) ^ 0), (false ? _GLF_FUZZED(-69712) : _GLF_IDENTITY((_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 ^ ((0))))), (_GLF_IDENTITY((_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY(_GLF_IDENTITY((0), 0 ^ ((0))), max(_GLF_IDENTITY((0), 0 ^ ((0))), _GLF_IDENTITY((0), 0 ^ ((0))))))), min((_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 ^ ((0))))), (_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, 0 + (0)), 0))), _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) | 0))) ^ ((0)))))))) ^ 0)))))), 0)))))))), _GLF_IDENTITY(ivec4(2, 0, 1, _GLF_IDENTITY(0, max(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), _GLF_IDENTITY(0 | _GLF_IDENTITY((_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 ^ ((0))))), (_GLF_IDENTITY((_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 ^ ((0))))), min((_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 ^ ((0))))), (_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 ^ ((0)))))))) ^ 0), (0 | _GLF_IDENTITY((_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY(_GLF_IDENTITY((0), 0 ^ ((0))), max(_GLF_IDENTITY((0), 0 ^ ((0))), _GLF_IDENTITY((0), 0 ^ ((0))))))), (_GLF_IDENTITY((_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 ^ ((0))))), min((_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 ^ ((0))))), (_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), _GLF_IDENTITY(0 ^ ((0)), (0 ^ ((0))) ^ 0))))))) ^ 0)) | (0 | _GLF_IDENTITY((_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 ^ ((0))))), (_GLF_IDENTITY((_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 ^ ((0))))), min((_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 ^ ((0)))), clamp(_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 ^ ((0)))), _GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 ^ ((0)))), _GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 ^ ((0))))))), (_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), (int(int(0))) | (int(int(0))))), 0)) ^ ((0)))))))) ^ 0)))), 0))), (ivec4(2, 0, 1, _GLF_IDENTITY(0, max(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), _GLF_IDENTITY(0 | _GLF_IDENTITY((_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 ^ ((0))))), (_GLF_IDENTITY((_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 ^ ((0))))), min((_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 ^ ((0))))), (_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, clamp(0, 0, 0)))) ^ ((0)))))))) ^ 0), (0 | _GLF_IDENTITY((_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY(_GLF_IDENTITY((0), 0 ^ ((0))), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY((0), 0 ^ ((0))), ~ (~ (_GLF_IDENTITY((0), 0 ^ ((0)))))), 0, ((0 ^ 0) | 0)))))), (_GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(0, 1, 0, 1), ivec4(1, 1, 1, 1) * (ivec4(0, 1, 0, 1))))) ^ _GLF_IDENTITY((_GLF_IDENTITY(0, int(ivec2(0, 0)))), 0 ^ ((0))))), min((_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 ^ ((0))))), (_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 ^ ((0)))))))) ^ 0)) | _GLF_IDENTITY((0 | _GLF_IDENTITY((_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 ^ ((0))))), (_GLF_IDENTITY((_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 ^ ((0))))), min((_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 ^ ((0))))), (_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 ^ ((0)))))))) ^ 0)), ((0 | _GLF_IDENTITY((_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 ^ ((0))))), (_GLF_IDENTITY((_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 ^ ((0))))), min((_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 ^ ((0))))), (_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 ^ ((0)))))))) ^ 0))) + 0))), 0)))) | ivec4(0, 0, 0, 0)), ivec4(2, 0, 1, _GLF_IDENTITY(0, max(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), _GLF_IDENTITY(0 | _GLF_IDENTITY((_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 ^ ((_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, (0) >> 0)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 ^ ((0))))), min((_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 ^ ((0))))), (_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY(_GLF_IDENTITY((0), 0 ^ ((0))), (_GLF_IDENTITY((0), 0 ^ ((0)))) | 0)))))) ^ 0), (0 | _GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY(0, 0 + (0)) ^ _GLF_IDENTITY((0), 0 ^ ((0))))), (_GLF_IDENTITY((_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 ^ ((0))))), min((_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 ^ ((0))))), (_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 ^ ((0)))))))) ^ 0)) | (0 | _GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY(0, clamp(0, 0, 0)) ^ _GLF_IDENTITY((0), 0 ^ ((0))))), (_GLF_IDENTITY((_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 ^ _GLF_IDENTITY(((0)), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (((0))))))), min((_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 ^ ((0))))), (_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 ^ ((0)))))))) ^ 0)))), 0))))))))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (2), clamp(~ (2), ~ (2), _GLF_IDENTITY(~ (2), (~ (2)) << 0))), (_GLF_IDENTITY(~ (2), 0 + (~ (2)))) | (_GLF_IDENTITY((_GLF_IDENTITY(0 & _GLF_IDENTITY(-65354, (-65354) | 0), min(0 & -65354, 0 & -65354))), ((_GLF_IDENTITY(0 & -65354, min(0 & -65354, _GLF_IDENTITY(0, (0) << 0) & -65354)))) << 0) ^ 0))))), 4, 64, _GLF_IDENTITY(4, (4) - 0));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : next_virtual_gid, (false ? _GLF_FUZZED(subgroup_base) : false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) - 0u) : next_virtual_gid))))], uint(_GLF_IDENTITY(2, (2) << 0)), _GLF_IDENTITY(4, _GLF_IDENTITY((4), max((4), (4))) >> 0), 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(10.30)), bool(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(10.30)), bool(false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(10.30)), bool(false)))) && true)))))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
