#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), true && (bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))) || false)), _GLF_IDENTITY(! (! (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))), true && (_GLF_IDENTITY(! (! (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))), true && (! (! (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))))))))) && true)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - abs(0.0)), abs(1.0)))).y), float(_GLF_FUZZED(-6339.2512)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)), bool(bvec4(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)), bool(bool(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))))), false, true, true)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) || _GLF_IDENTITY(false, true && (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, true)))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true, false)), false, true))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec2(_GLF_IDENTITY(! (! (false)), (! (! (false))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))) ? injectionSwitch.y : _GLF_FUZZED(-8192.4280))), injectionSwitch.y))))), bool(bvec2(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), false)))), true && (bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), false)))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), bool(bool((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(true, false || (true)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), (bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), bool(bool((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(true, false || (true)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))) || false)))), bool(bvec2(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), false))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-8192.4280))), injectionSwitch.y))))), bool(bvec2(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))), false)))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, true))), bool(bvec2(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), false)))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), bool(bool((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(true, false || (true)), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), false || (bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), bool(bool((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(true, false || (true)), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))))), bool(bvec2(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))) || (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), bool(bool((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((5.7 / 285.141))), float(injectionSwitch.y), bool(true))))))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(true, false || (true)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))), bool(bvec2(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))), bool(bool((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(true, false || (true)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))), bool(bvec2(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))), bool(bool((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(true, false || (true)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))), bool(bvec2(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), false))), ! (! (_GLF_IDENTITY(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))), bool(bool((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(true, false || (true)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))), bool(bvec2(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), false))))))))))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(0u, 0u, 0u)).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && ((false))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))), _GLF_IDENTITY(false || (false), (false || (false)) || false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(false || ((_GLF_DEAD(false))), (false || ((_GLF_DEAD(false)))) || false)) && true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, (true) || false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (bool(bvec4(_GLF_IDENTITY(true, (true) || false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) && true)) && (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-9.6))), (injectionSwitch.y) - 0.0)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) && true))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))))), ! (! (_GLF_IDENTITY(false, true && (false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, true))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) << _GLF_IDENTITY(0u, min(0u, 0u)));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bool(! (_GLF_IDENTITY(false, (false) && true)))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (false)), false || ((! (false)))), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((! (false)), bool(bvec2(_GLF_IDENTITY((! (false)), ((! (false))) || false), false))), false || ((! (false)))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((! (false)), false || ((! (false)))), true), true, true))), false))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY((! (false)), false || ((! (false)))), true)), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY((! (false)), false || ((! (false)))), true)), true, false)))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (false)), false || ((! (false)))), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY((! (false)), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (_GLF_IDENTITY(false, (false) || false)) || false) || ((! (_GLF_IDENTITY(false, ! (! (false))))))), true)), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))) || false))), false || (_GLF_IDENTITY((! (false)), bool(bvec4((! (_GLF_IDENTITY(false, bool(bool(false))))), true, false, false))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY((! (false)), false || ((! (false)))), true), true)))), true, false))))))) && true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y)), false, true, true))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 0.0))), injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(-3.5), min(_GLF_FUZZED(-3.5), _GLF_FUZZED(-3.5)))), bool(false))))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3996.8394)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))))).y))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3996.8394)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))))).y), bool(bvec3(! (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3996.8394)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))))).y), true, false))))))))))) || false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))), (bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))) && true))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, abs(1.0), 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0))) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false)))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || false)), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || false)), false, true)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_base + ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_local_id, 1u), (_GLF_IDENTITY(uvec2(subgroup_local_id, 1u), min(_GLF_IDENTITY(uvec2(subgroup_local_id, 1u), uvec2(0u, 0u) | (uvec2(subgroup_local_id, 1u))), uvec2(subgroup_local_id, 1u)))) / uvec2(1u, 1u)), (_GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? uvec2(subgroup_local_id, 1u) : _GLF_IDENTITY(_GLF_FUZZED((uvec2(16876u, 9619u) >> 179714u)), max(_GLF_FUZZED((uvec2(16876u, 9619u) >> 179714u)), _GLF_FUZZED((uvec2(16876u, 9619u) >> 179714u)))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_local_id, 1u), (true ? _GLF_IDENTITY(uvec2(subgroup_local_id, 1u), (_GLF_IDENTITY(uvec2(subgroup_local_id, 1u), clamp(_GLF_IDENTITY(uvec2(subgroup_local_id, 1u), (false ? _GLF_FUZZED(uvec2(123290u, 139675u)) : uvec2(subgroup_local_id, 1u))), uvec2(subgroup_local_id, 1u), _GLF_IDENTITY(uvec2(subgroup_local_id, 1u), clamp(uvec2(subgroup_local_id, 1u), uvec2(subgroup_local_id, 1u), _GLF_IDENTITY(uvec2(subgroup_local_id, 1u), clamp(uvec2(subgroup_local_id, 1u), uvec2(subgroup_local_id, 1u), _GLF_IDENTITY(uvec2(subgroup_local_id, 1u), ~ (~ (uvec2(subgroup_local_id, 1u))))))))))) - (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(3u), _GLF_IDENTITY(uvec2(3u), (false ? _GLF_FUZZED(_GLF_IDENTITY(uvec2(128330u, 6898u), clamp(uvec2(128330u, 6898u), _GLF_IDENTITY(uvec2(128330u, 6898u), ~ (~ (uvec2(128330u, 6898u)))), uvec2(128330u, 6898u)))) : uvec2(3u)))))) : _GLF_FUZZED((uvec2(16876u, _GLF_IDENTITY(9619u, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (9619u), (_GLF_IDENTITY(~ (9619u), max(~ (9619u), ~ (9619u)))) + 0u), ~ (~ (~ (9619u))))))) >> 179714u)))), (_GLF_IDENTITY(uvec2(subgroup_local_id, 1u), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true ? uvec2(subgroup_local_id, 1u) : _GLF_FUZZED((uvec2(16876u, 9619u) >> 179714u)), (true ? uvec2(subgroup_local_id, 1u) : _GLF_FUZZED((uvec2(16876u, 9619u) >> 179714u))) - uvec2(0u, 0u))), uvec2(1u, 1u) * ((_GLF_IDENTITY(true ? uvec2(subgroup_local_id, 1u) : _GLF_FUZZED((uvec2(16876u, 9619u) >> 179714u)), (true ? uvec2(subgroup_local_id, 1u) : _GLF_FUZZED((uvec2(16876u, 9619u) >> 179714u))) - uvec2(0u, 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true ? uvec2(subgroup_local_id, 1u) : _GLF_FUZZED((uvec2(16876u, _GLF_IDENTITY(9619u, (9619u) << (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))) >> 179714u)), (true ? uvec2(subgroup_local_id, 1u) : _GLF_FUZZED((uvec2(16876u, 9619u) >> 179714u))) - uvec2(0u, 0u))), uvec2(1u, 1u) * ((_GLF_IDENTITY(true ? uvec2(subgroup_local_id, 1u) : _GLF_FUZZED((uvec2(16876u, 9619u) >> 179714u)), (true ? uvec2(subgroup_local_id, 1u) : _GLF_FUZZED((uvec2(16876u, 9619u) >> 179714u))) - uvec2(0u, 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true ? uvec2(subgroup_local_id, 1u) : _GLF_FUZZED((uvec2(16876u, 9619u) >> 179714u)), _GLF_IDENTITY((true ? uvec2(subgroup_local_id, 1u) : _GLF_FUZZED((uvec2(16876u, 9619u) >> 179714u))) - uvec2(0u, 0u), uvec2(0u, 0u) ^ ((true ? uvec2(subgroup_local_id, 1u) : _GLF_FUZZED((uvec2(16876u, 9619u) >> 179714u))) - uvec2(0u, 0u))))), uvec2(1u, 1u) * ((_GLF_IDENTITY(true ? uvec2(subgroup_local_id, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(workgroup_base)))) : _GLF_FUZZED((uvec2(16876u, 9619u) >> 179714u)), (true ? uvec2(subgroup_local_id, 1u) : _GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(uvec2(16876u, 9619u) >> 179714u, min(uvec2(16876u, 9619u) >> 179714u, uvec2(16876u, 9619u) >> 179714u))), (_GLF_IDENTITY((_GLF_IDENTITY(uvec2(16876u, 9619u) >> 179714u, min(uvec2(16876u, 9619u) >> 179714u, uvec2(16876u, 9619u) >> 179714u))), ((_GLF_IDENTITY(uvec2(16876u, 9619u) >> 179714u, min(uvec2(16876u, 9619u) >> 179714u, uvec2(16876u, 9619u) >> 179714u)))) | ((_GLF_IDENTITY(uvec2(16876u, 9619u) >> 179714u, min(uvec2(16876u, 9619u) >> 179714u, uvec2(16876u, 9619u) >> 179714u)))))) * uvec2(1u, 1u)))) - uvec2(0u, 0u))))), (false ? _GLF_FUZZED(uvec2(7423u, 142612u)) : _GLF_IDENTITY((_GLF_IDENTITY(true ? uvec2(subgroup_local_id, 1u) : _GLF_FUZZED((uvec2(16876u, 9619u) >> 179714u)), (true ? uvec2(subgroup_local_id, 1u) : _GLF_FUZZED((uvec2(16876u, 9619u) >> 179714u))) - uvec2(0u, 0u))), uvec2(1u, 1u) * ((_GLF_IDENTITY(true ? uvec2(subgroup_local_id, 1u) : _GLF_FUZZED((uvec2(16876u, 9619u) >> 179714u)), (true ? uvec2(subgroup_local_id, 1u) : _GLF_FUZZED((uvec2(16876u, 9619u) >> 179714u))) - uvec2(0u, 0u)))))))) + uvec2(0u, 0u))) | uvec2(0u, 0u)))) ^ uvec2(0u, 0u)) : _GLF_FUZZED(uvec2(102127u, 121364u))))), (uint(_GLF_IDENTITY(uvec2(subgroup_local_id, 1u), (true ? uvec2(subgroup_local_id, 1u) : _GLF_FUZZED((uvec2(_GLF_IDENTITY(16876u, min(16876u, _GLF_IDENTITY(16876u, (16876u) >> 0u))), _GLF_IDENTITY(9619u, (9619u) - 0u)) >> 179714u)))))) << 0u)) + 1) % subgroup_size);
 atomicStore(buf[virtual_gid], uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), min(min(1, 1), min(1, 1)))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY(0 | (1), _GLF_IDENTITY((0 | (1)), 0 | ((0 | (1)))) / 1)), 0, _GLF_IDENTITY(1, max(1, 1))), (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY(0 | (1), _GLF_IDENTITY((0 | (1)), 0 | ((0 | (1)))) / 1)), 0, 1), clamp(ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY(0 | (1), _GLF_IDENTITY((_GLF_IDENTITY(0 | (1), _GLF_IDENTITY((_GLF_IDENTITY(0 | (1), clamp(0 | (1), _GLF_IDENTITY(0 | (1), (0 | (1)) | (0 | (1))), 0 | (1)))) | (0 | (1)), max((_GLF_IDENTITY(0 | (1), clamp(0 | (1), _GLF_IDENTITY(0 | (1), (0 | (1)) | (0 | (1))), 0 | (1)))) | (0 | (1)), (_GLF_IDENTITY(0 | (1), clamp(0 | (1), _GLF_IDENTITY(0 | (1), (0 | (1)) | (0 | (1))), 0 | (1)))) | (0 | (1)))))), 0 | ((0 | (1)))) / 1)), 0, 1), ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY(0 | (1), _GLF_IDENTITY((0 | (1)), 0 | _GLF_IDENTITY(((0 | _GLF_IDENTITY((1), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED(-72340))))))), (((0 | _GLF_IDENTITY((1), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED(-72340)))))))) - 0)) / 1)), 0, 1), ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY(0 | (1), _GLF_IDENTITY(_GLF_IDENTITY((0 | (1)), 0 | ((0 | (1)))), 0 ^ (_GLF_IDENTITY((0 | (1)), 0 | ((0 | (1)))))) / 1)), 0, 1)))) * ivec3(1, 1, 1))))) >> _GLF_IDENTITY(0, (0) >> (0 >> _GLF_IDENTITY(int(2), int(2)))))), 4, 64, _GLF_IDENTITY(4, 0 + (4)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))), bool(bool((_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))), bool(bool((_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), ! _GLF_IDENTITY((! (! ((injectionSwitch.x > injectionSwitch.y)))), bool(bool((! (! ((injectionSwitch.x > injectionSwitch.y))))))))))))))), false || (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false) || false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true && (bool(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), _GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), (((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))) && true), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), ! (! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))))))), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))), _GLF_IDENTITY(bool(bvec4(! _GLF_IDENTITY((_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))), bool(bool((_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), ! (! (bool(bvec4(! _GLF_IDENTITY((_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), ! (_GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))), bool(bvec2(! (! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))), true))))), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))))))))), false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((subgroup_local_id % 2) == 0)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) || false, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, ! (! (false)))) || false), bool(bool(! ((_GLF_IDENTITY(false, ! (! (false)))) || false)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, int(ivec2(4, 1))))), (_GLF_IDENTITY(4, min(4, 4))) << 0), 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, true)))))) && (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.2), _GLF_FUZZED(0.1)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, true))), _GLF_IDENTITY((_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bool((false))))), (_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bool((false))))), (! (_GLF_IDENTITY((false), bool(bool((false)))))) || false)) && true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(false, false || _GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bool((false))))), (! (_GLF_IDENTITY((false), bool(bool((false)))))) && true))))), ! (! ((_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bool((false))))), _GLF_IDENTITY((! (_GLF_IDENTITY((false), bool(bool((false)))))) && true, ((! (_GLF_IDENTITY((false), bool(bool((false)))))) && true) && true)))))))))), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bool((false))))), (! (_GLF_IDENTITY((false), bool(bool((false)))))) && true))))), ! (! ((_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bool((false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), bool(bool((false)))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((false), bool(bool((false)))), true, false))))), _GLF_IDENTITY(true && (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), bool(bool((false)))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((false), bool(bool((false)))), true, false)))))), true && (_GLF_IDENTITY(true && (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), bool(bool((false)))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((false), bool(bool((false)))), true, false)))))), (true && (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), bool(bool((false)))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((false), bool(bool((false)))), true, false))))))) || false)))))), (! (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool((false)), ! (_GLF_IDENTITY(! (bool((false))), (! (bool((false)))) || false))))))) && _GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, bool(bool(true))), false))))))))))))))))) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, ! (! (true))))), bool(bool(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, _GLF_IDENTITY(false, true && (false)) || (true)), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (true) || false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (true) || false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (true) || false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, (true) || false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (true) || false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, (true) || false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))))))))))), true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), bool(bool(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, false || (true)), true)))))))))), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), true, true)), bool(bool(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, false || (true)), true)))))))), false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(78093)), _GLF_FUZZED(4.8)), bvec2(false, false))).y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, true && (true)))), (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, true && (true))))) && true)), true, true)), bool(bool(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false)), false || (true)), true)))))))), false)), true), bvec2(bvec2(bvec2(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), min((injectionSwitch.x), (injectionSwitch.x))) * 1.0) > injectionSwitch.y) || false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), injectionSwitch.x)) > injectionSwitch.y)), true, true)), bool(bool(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, false || (true)), true)))))))), false)), true))))), bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), bool(bool(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, abs(1.0), 1.0, 0.0, 0.0))))).y)), _GLF_IDENTITY(true, false || (true)), true)))))))), false)), true), bvec2(bvec2(bvec2(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), bool(bool(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, false || (true)), true)))))))), false)), true)))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), bool(bool(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, abs(1.0), 1.0, 0.0, 0.0))))).y)), _GLF_IDENTITY(true, false || (true)), true)))))))), false)), true), bvec2(bvec2(bvec2(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), bool(bool(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, false || (true)), true)))))))), false)), true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), bool(bool(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, abs(1.0), 1.0, 0.0, 0.0))))).y)), _GLF_IDENTITY(true, false || (true)), true)))))))), false)), true), bvec2(bvec2(bvec2(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), bool(bool(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, false || (true)), true)))))))), false)), true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, true))))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(7.4)), _GLF_IDENTITY(float(injectionSwitch.x), min(_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(injectionSwitch.x), float(injectionSwitch.x))), _GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(injectionSwitch.x), _GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) * 1.0))))), bool(true))) < injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, true))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), true)), bool(bvec4(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
        barrier();
       barrier();
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), _GLF_IDENTITY(vec2(vec2(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))), (true ? vec2(vec2(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))) : _GLF_FUZZED(injectionSwitch))))).y)))) || false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), mix(vec2((vec2(vec2(injectionSwitch)))[0], (vec2(vec2(injectionSwitch)))[1]), vec2(_GLF_FUZZED((-8.6)), _GLF_FUZZED(59.72)), bvec2(false, false)))))[0], _GLF_IDENTITY((injectionSwitch)[1], 0.0 + ((injectionSwitch)[1]))), vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + _GLF_IDENTITY((_GLF_FUZZED(-2712.7800)), float(mat2x4((_GLF_FUZZED(-2712.7800)), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(-13.12), mix(float(true ? 1.0 : _GLF_FUZZED(-13.12)), float(_GLF_FUZZED(-8.0)), bool(false)))))) / 1.0), 1.0, 1.0, 0.0, 0.0, 1.0, length(vec3(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(_GLF_IDENTITY(vec4(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-6.4))), injectionSwitch.x), 0.0, 0.0, 0.0), (vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0)) / vec4(1.0, 1.0, 1.0, 1.0)))), log(1.0), 1.0, 0.0, 1.0, 0.0), (mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(_GLF_IDENTITY(vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0), (vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0)) / vec4(1.0, 1.0, 1.0, 1.0)))), mix(float(_GLF_FUZZED(-2.4)), float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(_GLF_IDENTITY(vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0), (vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0)) / vec4(1.0, 1.0, 1.0, 1.0))))), bool(true))), log(1.0), 1.0, 0.0, 1.0, 0.0)) + mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))))), _GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))).y, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), mix(vec2((vec2(vec2(injectionSwitch)))[0], (vec2(vec2(injectionSwitch)))[1]), vec2(_GLF_FUZZED((-8.6)), _GLF_FUZZED(59.72)), bvec2(false, _GLF_IDENTITY(false, bool(bvec2(false, true))))))))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + _GLF_IDENTITY((_GLF_FUZZED(-2712.7800)), float(mat2x4((_GLF_FUZZED(-2712.7800)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, length(vec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))))))))), _GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))).y, _GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), mix(vec2((vec2(vec2(injectionSwitch)))[0], (vec2(vec2(injectionSwitch)))[1]), vec2(_GLF_FUZZED((-8.6)), _GLF_FUZZED(_GLF_IDENTITY(59.72, (false ? _GLF_FUZZED(683.319) : 59.72)))), bvec2(false, false)))))[0], _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))[1]), vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + _GLF_IDENTITY((_GLF_FUZZED(_GLF_IDENTITY(-2712.7800, (-2712.7800) + 0.0))), float(mat2x4((_GLF_FUZZED(-2712.7800)), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(186.460))), 0.0, 1.0, length(vec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))))), _GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), mix(vec2((vec2(vec2(injectionSwitch)))[0], (vec2(vec2(injectionSwitch)))[1]), vec2(_GLF_FUZZED((-8.6)), _GLF_FUZZED(59.72)), bvec2(false, false)))))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + _GLF_IDENTITY((_GLF_FUZZED(-2712.7800)), float(mat2x4((_GLF_FUZZED(-2712.7800)), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(vec2(5.6, 1057.5852).y)), float(0.0), bool(true))), 0.0, 1.0, length(vec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))))), _GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), true, true, true))))))))), (false ? _GLF_FUZZED(vec2(598.006, 59.26)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), mix(vec2((vec2(vec2(injectionSwitch)))[0], (vec2(vec2(injectionSwitch)))[1]), vec2(_GLF_FUZZED((-8.6)), _GLF_FUZZED(59.72)), bvec2(false, false)))))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + _GLF_IDENTITY((_GLF_FUZZED(-2712.7800)), float(mat2x4((_GLF_FUZZED(-2712.7800)), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(vec2(5.6, 1057.5852).y)), float(0.0), bool(true))), 0.0, 1.0, length(vec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))))), _GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), true, true, true))))))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), mix(vec2((vec2(vec2(injectionSwitch)))[0], (vec2(vec2(injectionSwitch)))[1]), vec2(_GLF_FUZZED((-8.6)), _GLF_FUZZED(59.72)), bvec2(false, false)))))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + _GLF_IDENTITY((_GLF_FUZZED(-2712.7800)), float(mat2x4((_GLF_FUZZED(-2712.7800)), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(vec2(5.6, 1057.5852).y)), float(0.0), bool(true))), 0.0, 1.0, length(vec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))))), _GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), true, true, true))))))))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat4x3(1.5, -0.2, -5.7, 629.455, 69.11, 8.4, 78.48, -6.8, 55.95, 7199.5356, 6751.0000, -91.69)) : mat4x3(_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), mix(vec2((vec2(vec2(injectionSwitch)))[0], (vec2(vec2(injectionSwitch)))[1]), vec2(_GLF_FUZZED((-8.6)), _GLF_FUZZED(59.72)), bvec2(false, false)))))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + _GLF_IDENTITY((_GLF_FUZZED(-2712.7800)), float(mat2x4((_GLF_FUZZED(-2712.7800)), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(vec2(5.6, 1057.5852).y)), float(0.0), bool(true))), 0.0, 1.0, length(vec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))))), _GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), true, true, true))))))))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 0.0)))), (vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), mix(vec2((vec2(vec2(injectionSwitch)))[0], (vec2(vec2(injectionSwitch)))[1]), vec2(_GLF_FUZZED((-8.6)), _GLF_FUZZED(59.72)), bvec2(false, false)))))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + _GLF_IDENTITY((_GLF_FUZZED(-2712.7800)), float(mat2x4((_GLF_FUZZED(-2712.7800)), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(vec2(5.6, 1057.5852).y)), float(0.0), bool(true))), 0.0, 1.0, length(vec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))))), _GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), true, true, true))))))))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat4x3(1.5, -0.2, -5.7, 629.455, 69.11, 8.4, 78.48, -6.8, 55.95, 7199.5356, 6751.0000, -91.69)) : mat4x3(_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), mix(vec2((vec2(vec2(injectionSwitch)))[0], (vec2(vec2(injectionSwitch)))[1]), vec2(_GLF_FUZZED((-8.6)), _GLF_FUZZED(59.72)), bvec2(false, false)))))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + _GLF_IDENTITY((_GLF_FUZZED(-2712.7800)), float(mat2x4((_GLF_FUZZED(-2712.7800)), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(vec2(5.6, 1057.5852).y)), float(0.0), bool(true))), 0.0, 1.0, length(vec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))))), _GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), true, true, true))))))))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 0.0))))) * mat2(1.0))))).y)))))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))) || false))))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(acos(injectionSwitch)) : (injectionSwitch)))[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + (_GLF_FUZZED(-2712.7800)))), bvec2(false, false))).y)))) && true), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + (_GLF_FUZZED(-2712.7800)))), bvec2(false, false))).y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + (_GLF_FUZZED(-2712.7800)))), bvec2(false, false))).y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + (_GLF_FUZZED(-2712.7800)))), clamp(_GLF_IDENTITY(vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + (_GLF_FUZZED(-2712.7800)))), (vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + (_GLF_FUZZED(-2712.7800))))) - vec2(0.0, 0.0)), vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + (_GLF_FUZZED(-2712.7800)))), vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + (_GLF_FUZZED(-2712.7800)))))), bvec2(false, false))).y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-2712.7800), (_GLF_FUZZED(-2712.7800)) + 0.0), 0.0 + (_GLF_FUZZED(-2712.7800)))), bvec2(false, false))).y))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + (_GLF_FUZZED(-2712.7800)))), bvec2(false, false))).y)), _GLF_IDENTITY(false, (false) || false) || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-2712.7800, 0.0 + (-2712.7800))), 0.0 + (_GLF_FUZZED(-2712.7800)))), bvec2(false, false))).y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + (_GLF_FUZZED(-2712.7800)))), clamp(_GLF_IDENTITY(vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + (_GLF_FUZZED(-2712.7800)))), (vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + (_GLF_FUZZED(-2712.7800))))) - vec2(0.0, 0.0)), vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + (_GLF_FUZZED(-2712.7800)))), vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + (_GLF_FUZZED(-2712.7800)))))), bvec2(false, false))).y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-2712.7800), (_GLF_FUZZED(-2712.7800)) + 0.0), 0.0 + (_GLF_FUZZED(-2712.7800)))), bvec2(false, false))).y)))))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + (_GLF_FUZZED(-2712.7800)))), bvec2(false, false))).y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + (_GLF_FUZZED(-2712.7800)))), bvec2(false, false))).y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + (_GLF_FUZZED(-2712.7800)))), clamp(_GLF_IDENTITY(vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + (_GLF_FUZZED(-2712.7800)))), (vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + (_GLF_FUZZED(-2712.7800))))) - vec2(0.0, 0.0)), vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + (_GLF_FUZZED(-2712.7800)))), vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + (_GLF_FUZZED(-2712.7800)))))), bvec2(false, false))).y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-2712.7800), (_GLF_FUZZED(-2712.7800)) + 0.0), 0.0 + (_GLF_FUZZED(-2712.7800)))), bvec2(false, false))).y))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + (_GLF_FUZZED(-2712.7800)))), bvec2(false, false))).y)), _GLF_IDENTITY(false, (false) || false) || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-2712.7800, 0.0 + (-2712.7800))), 0.0 + (_GLF_FUZZED(-2712.7800)))), bvec2(false, false))).y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + (_GLF_FUZZED(-2712.7800)))), clamp(_GLF_IDENTITY(vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + (_GLF_FUZZED(-2712.7800)))), (vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + (_GLF_FUZZED(-2712.7800))))) - vec2(0.0, 0.0)), vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + (_GLF_FUZZED(-2712.7800)))), vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + (_GLF_FUZZED(-2712.7800)))))), bvec2(false, false))).y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-2712.7800), (_GLF_FUZZED(-2712.7800)) + 0.0), 0.0 + (_GLF_FUZZED(-2712.7800)))), bvec2(false, false))).y)))))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(8411.5093), min(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_FUZZED(8411.5093), (false ? _GLF_FUZZED(-69.93) : _GLF_IDENTITY(_GLF_FUZZED(8411.5093), (_GLF_FUZZED(8411.5093)) - 0.0))))), _GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + (_GLF_FUZZED(-2712.7800)))), bvec2(false, false))).y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-22.88), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.1)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + (_GLF_FUZZED(-2712.7800)))), bvec2(false, false))).y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + (_GLF_FUZZED(-2712.7800)))), clamp(_GLF_IDENTITY(vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + (_GLF_FUZZED(-2712.7800)))), (vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + (_GLF_FUZZED(-2712.7800))), max(_GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + (_GLF_FUZZED(-2712.7800))), _GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + (_GLF_FUZZED(-2712.7800))))))) - vec2(0.0, 0.0)), vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + (_GLF_FUZZED(-2712.7800)))), vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + (_GLF_FUZZED(-2712.7800)))))), bvec2(false, false))).y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-2712.7800), (_GLF_FUZZED(-2712.7800)) + 0.0), 0.0 + (_GLF_FUZZED(-2712.7800)))), bvec2(false, false))).y))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + (_GLF_FUZZED(-2712.7800)))), bvec2(false, false))).y)), _GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, true && ((false) || false))) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-2712.7800, 0.0 + (-2712.7800))), 0.0 + (_GLF_FUZZED(-2712.7800)))), bvec2(false, false))).y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-2712.7800, 0.0 + (-2712.7800))), 0.0 + (_GLF_FUZZED(-2712.7800)))), bvec2(false, false))).y)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (false ? _GLF_FUZZED(85141) : _GLF_IDENTITY(1, (1) - 0)))]), _GLF_IDENTITY(vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-2712.7800, (-2712.7800) - 0.0)), 0.0 + (_GLF_FUZZED(-2712.7800)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + (_GLF_FUZZED(-2712.7800)))), (vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + (_GLF_FUZZED(-2712.7800))))) - vec2(0.0, 0.0)), (true ? _GLF_IDENTITY(vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + (_GLF_FUZZED(-2712.7800)))), (vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_FUZZED(-2712.7800), _GLF_IDENTITY(0.0, float(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(95.85)), float(0.0), bool(true))), 0.0, sqrt(1.0)))) + (_GLF_FUZZED(-2712.7800))))) - vec2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((+ 37.39))), float(0.0), bool(true))))) : _GLF_FUZZED(injectionSwitch))), vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + (_GLF_FUZZED(-2712.7800)))), vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + (_GLF_FUZZED(-2712.7800)))))), bvec2(false, false))).y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-2712.7800), (_GLF_FUZZED(-2712.7800)) + 0.0), 0.0 + (_GLF_FUZZED(-2712.7800)))), bvec2(false, false))).y)))))))) || false)) && true)) || false)) && true)) && true, ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)), (bool(bvec2(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))) && true)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + (_GLF_FUZZED(-2712.7800)))), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))) && true), ! (! (false))), false))).y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-2712.7800), min(_GLF_FUZZED(-2712.7800), _GLF_FUZZED(-2712.7800))), 0.0 + (_GLF_FUZZED(-2712.7800)))), bvec2(false, false))).y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-2712.7800), min(_GLF_FUZZED(-2712.7800), _GLF_FUZZED(-2712.7800))), 0.0 + (_GLF_FUZZED(-2712.7800)))), bvec2(false, false))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-2712.7800), min(_GLF_FUZZED(-2712.7800), _GLF_FUZZED(-2712.7800))), 0.0 + (_GLF_FUZZED(-2712.7800)))), bvec2(false, false))).y, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-2712.7800), min(_GLF_FUZZED(-2712.7800), _GLF_FUZZED(-2712.7800))), 0.0 + (_GLF_FUZZED(-2712.7800)))), bvec2(false, false))).y) - 0.0)) / 1.0)), float(_GLF_FUZZED((-1.6 + 45.90))), bool(false)))))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + (_GLF_FUZZED(-2712.7800)))), clamp(_GLF_IDENTITY(vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + (_GLF_FUZZED(-2712.7800)))), (vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + (_GLF_FUZZED(-2712.7800))))) - _GLF_IDENTITY(vec2(0.0, 0.0), vec2(mat3(vec2(0.0, 0.0), 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat4(1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))))), 0.0)))), vec2(_GLF_IDENTITY(_GLF_FUZZED(8411.5093), mix(float(_GLF_FUZZED(-9.2)), float(_GLF_FUZZED(8411.5093)), bool(true))), _GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + (_GLF_FUZZED(-2712.7800)))), vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + (_GLF_FUZZED(-2712.7800)))))), bvec2(false, false))).y)), _GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-2712.7800), (_GLF_FUZZED(-2712.7800)) + 0.0), 0.0 + (_GLF_FUZZED(-2712.7800)))), bvec2(false, false))).y))), false || (false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(8411.5093, max(8411.5093, _GLF_IDENTITY(8411.5093, clamp(_GLF_IDENTITY(8411.5093, float(mat2(8411.5093, 1.0, 1.0, 1.0))), 8411.5093, 8411.5093))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-2712.7800), (_GLF_FUZZED(-2712.7800)) + 0.0), 0.0 + (_GLF_FUZZED(-2712.7800)))), bvec2(false, false))).y)))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + (_GLF_FUZZED(-2712.7800)))), clamp(_GLF_IDENTITY(vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + (_GLF_FUZZED(-2712.7800)))), (vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + _GLF_IDENTITY((_GLF_FUZZED(-2712.7800)), ((_GLF_FUZZED(-2712.7800))) / 1.0)))) - vec2(0.0, 0.0)), vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + (_GLF_FUZZED(-2712.7800)))), vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + (_GLF_FUZZED(-2712.7800)))))), bvec2(false, false))).y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-2712.7800), (_GLF_FUZZED(-2712.7800)) + 0.0), 0.0 + (_GLF_FUZZED(-2712.7800)))), bvec2(false, false))).y)))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(8411.5093, max(8411.5093, 8411.5093))), _GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + (_GLF_FUZZED(-2712.7800)))), clamp(_GLF_IDENTITY(vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + (_GLF_FUZZED(-2712.7800)))), _GLF_IDENTITY((vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + (_GLF_FUZZED(-2712.7800))))) - vec2(0.0, 0.0), min((vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + (_GLF_FUZZED(-2712.7800))))) - vec2(0.0, 0.0), (vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + (_GLF_FUZZED(-2712.7800))))) - vec2(0.0, 0.0)))), vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + (_GLF_FUZZED(-2712.7800)))), vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + (_GLF_FUZZED(-2712.7800)))))), bvec2(false, false))).y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-2712.7800), (_GLF_FUZZED(-2712.7800)) + 0.0), 0.0 + (_GLF_FUZZED(-2712.7800)))), bvec2(false, false))).y)))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + (_GLF_FUZZED(-2712.7800)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + (_GLF_FUZZED(-2712.7800))), min(_GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + _GLF_IDENTITY((_GLF_FUZZED(_GLF_IDENTITY(-2712.7800, min(-2712.7800, -2712.7800)))), max((_GLF_FUZZED(_GLF_IDENTITY(-2712.7800, min(-2712.7800, -2712.7800)))), _GLF_IDENTITY((_GLF_FUZZED(_GLF_IDENTITY(-2712.7800, min(-2712.7800, -2712.7800)))), mix(float((_GLF_FUZZED(_GLF_IDENTITY(-2712.7800, min(-2712.7800, -2712.7800))))), float(_GLF_FUZZED(-53.24)), bool(false)))))), _GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + (_GLF_FUZZED(-2712.7800)))))), clamp(vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + (_GLF_FUZZED(-2712.7800))), min(_GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + _GLF_IDENTITY((_GLF_FUZZED(_GLF_IDENTITY(-2712.7800, min(-2712.7800, -2712.7800)))), max((_GLF_FUZZED(_GLF_IDENTITY(-2712.7800, min(-2712.7800, -2712.7800)))), _GLF_IDENTITY((_GLF_FUZZED(_GLF_IDENTITY(-2712.7800, min(-2712.7800, -2712.7800)))), mix(float((_GLF_FUZZED(_GLF_IDENTITY(-2712.7800, min(-2712.7800, -2712.7800))))), float(_GLF_FUZZED(-53.24)), bool(false)))))), _GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + (_GLF_FUZZED(-2712.7800)))))), vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + (_GLF_FUZZED(-2712.7800))), min(_GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + _GLF_IDENTITY((_GLF_FUZZED(_GLF_IDENTITY(-2712.7800, min(-2712.7800, -2712.7800)))), max((_GLF_FUZZED(_GLF_IDENTITY(-2712.7800, min(-2712.7800, -2712.7800)))), _GLF_IDENTITY((_GLF_FUZZED(_GLF_IDENTITY(-2712.7800, min(-2712.7800, -2712.7800)))), mix(float((_GLF_FUZZED(_GLF_IDENTITY(-2712.7800, min(-2712.7800, -2712.7800))))), float(_GLF_FUZZED(-53.24)), bool(false)))))), _GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + (_GLF_FUZZED(-2712.7800)))))), vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + (_GLF_FUZZED(-2712.7800))), min(_GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + _GLF_IDENTITY((_GLF_FUZZED(_GLF_IDENTITY(-2712.7800, min(-2712.7800, -2712.7800)))), max((_GLF_FUZZED(_GLF_IDENTITY(-2712.7800, min(-2712.7800, -2712.7800)))), _GLF_IDENTITY((_GLF_FUZZED(_GLF_IDENTITY(-2712.7800, min(-2712.7800, -2712.7800)))), mix(float((_GLF_FUZZED(_GLF_IDENTITY(-2712.7800, min(-2712.7800, -2712.7800))))), float(_GLF_FUZZED(-53.24)), bool(false)))))), _GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + (_GLF_FUZZED(-2712.7800)))))))), (vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + (_GLF_IDENTITY(_GLF_FUZZED(-2712.7800), mix(float(_GLF_FUZZED(5.7)), float(_GLF_IDENTITY(_GLF_FUZZED(-2712.7800), mix(float(_GLF_FUZZED(-2712.7800)), float(_GLF_FUZZED(-47.50)), bool(false)))), bool(true))))))) - vec2(0.0, 0.0)), vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + (_GLF_FUZZED(-2712.7800)))), vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + (_GLF_FUZZED(-2712.7800)))))), bvec2(false, false))).y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-2712.7800), (_GLF_FUZZED(-2712.7800)) + 0.0), 0.0 + (_GLF_FUZZED(-2712.7800)))), bvec2(false, false))).y)))))))))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-9.9), _GLF_IDENTITY(((injectionSwitch))[1], (((injectionSwitch))[1]) - 0.0)), vec2(((injectionSwitch))[0], _GLF_FUZZED(3240.1901)), bvec2(true, false)))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + (_GLF_FUZZED(-2712.7800)))), bvec2(false, false))).y)), _GLF_IDENTITY(false, (false) || false) || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-2712.7800, _GLF_IDENTITY(0.0 + (-2712.7800), (true ? 0.0 + (-2712.7800) : _GLF_FUZZED(3637.3009))))), 0.0 + (_GLF_FUZZED(-2712.7800)))), bvec2(false, false))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(8411.5093), min(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_FUZZED(8411.5093), 0.0 + (_GLF_FUZZED(8411.5093))))), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-2712.7800, 0.0 + (-2712.7800))), 0.0 + (_GLF_FUZZED(-2712.7800)))), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0))))[1]), vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-2712.7800, 0.0 + (-2712.7800))), 0.0 + (_GLF_FUZZED(-2712.7800)))), bvec2(false, false))))).y))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-6.6), _GLF_FUZZED(-5.1)), bvec2(false, false))))).y)) || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), clamp(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2((injectionSwitch)[0], (injectionSwitch)[1]))), _GLF_IDENTITY(vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + (_GLF_FUZZED(-2712.7800)))), clamp(_GLF_IDENTITY(vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + (_GLF_FUZZED(-2712.7800)))), (vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + (_GLF_FUZZED(-2712.7800))))) - vec2(0.0, 0.0)), vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + (_GLF_FUZZED(-2712.7800)))), vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + (_GLF_FUZZED(-2712.7800)))))), bvec2(false, false))), vec2(vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_FUZZED(-2712.7800), _GLF_IDENTITY(0.0, (0.0) - 0.0) + (_GLF_FUZZED(-2712.7800)))), clamp(_GLF_IDENTITY(vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + (_GLF_FUZZED(-2712.7800)))), (vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + (_GLF_FUZZED(-2712.7800))))) - vec2(0.0, 0.0)), vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + (_GLF_FUZZED(-2712.7800)))), vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_FUZZED(-2712.7800), 0.0 + (_GLF_FUZZED(-2712.7800)))))), bvec2(false, false)))))).y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-2712.7800), _GLF_IDENTITY((_GLF_FUZZED(-2712.7800)) + 0.0, min((_GLF_FUZZED(-2712.7800)) + 0.0, (_GLF_FUZZED(-2712.7800)) + 0.0))), 0.0 + (_GLF_FUZZED(-2712.7800)))), bvec2(false, false))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-2712.7800), (_GLF_FUZZED(-2712.7800)) + 0.0), 0.0 + (_GLF_FUZZED(-2712.7800)))), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((-21412 / ivec3(-63978, -73864, 15559).g)) : 0))], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8411.5093), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-2712.7800), (_GLF_FUZZED(-2712.7800)) + 0.0), 0.0 + (_GLF_FUZZED(-2712.7800)))), bvec2(false, false))))).y)))))))) || false)) && true)) && true) && true))) && true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
