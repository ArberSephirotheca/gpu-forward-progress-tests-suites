#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460
struct _GLF_struct_14 {
 float _f0;
 int _f1;
} ;

struct _GLF_struct_15 {
 mat2 _f0;
 _GLF_struct_14 _f1;
 uvec2 _f2;
 ivec3 _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_16 {
 _GLF_struct_15 _f0;
 uint virtual_gid;
} ;

struct _GLF_struct_11 {
 bool _f0;
 ivec4 _f1;
 uvec2 _f2;
} ;

struct _GLF_struct_10 {
 vec3 _f0;
 mat4x3 _f1;
} ;

struct _GLF_struct_9 {
 vec3 _f0;
 uvec4 _f1;
 vec2 _f2;
 vec4 _f3;
 mat4x2 _f4;
} ;

struct _GLF_struct_12 {
 _GLF_struct_9 _f0;
 _GLF_struct_10 _f1;
 _GLF_struct_11 _f2;
 ivec2 _f3;
} ;

struct _GLF_struct_7 {
 vec3 _f0;
 bvec4 _f1;
} ;

struct _GLF_struct_6 {
 mat2x3 _f0;
 ivec4 _f1;
 uvec3 _f2;
 ivec2 _f3;
 ivec3 _f4;
 int _f5;
 mat3x4 _f6;
} ;

struct _GLF_struct_5 {
 float _f0;
 uvec4 _f1;
 bvec2 _f2;
} ;

struct _GLF_struct_8 {
 uvec4 _f0;
 _GLF_struct_5 _f1;
 _GLF_struct_6 _f2;
 mat4x3 _f3;
 _GLF_struct_7 _f4;
 uint workgroup_base;
} ;

struct _GLF_struct_3 {
 vec2 _f0;
 vec2 _f1;
 mat4 _f2;
 mat3x2 _f3;
 mat2x4 _f4;
} ;

struct _GLF_struct_2 {
 vec4 _f0;
 int _f1;
 vec2 _f2;
} ;

struct _GLF_struct_1 {
 uvec2 _f0;
 ivec3 _f1;
 bvec4 _f2;
 mat2x4 _f3;
 mat2x3 _f4;
} ;

struct _GLF_struct_0 {
 bool _f0;
 mat2 _f1;
 bool _f2;
 mat2x3 _f3;
 mat2 _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_4 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
 _GLF_struct_3 _f3;
 mat2x3 _f4;
} ;

struct _GLF_struct_13 {
 _GLF_struct_4 _f0;
 _GLF_struct_8 _f1;
 mat2 _f2;
 _GLF_struct_12 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 _GLF_struct_13 _GLF_struct_replacement_13 = _GLF_struct_13(_GLF_struct_4(_GLF_struct_0(true, mat2(1.0), true, mat2x3(1.0), mat2(1.0), ivec3(1)), _GLF_struct_1(uvec2(1u), ivec3(1), bvec4(true), mat2x4(1.0), mat2x3(1.0)), _GLF_struct_2(vec4(1.0), 1, vec2(1.0)), _GLF_struct_3(vec2(1.0), vec2(1.0), mat4(1.0), mat3x2(1.0), mat2x4(1.0)), mat2x3(1.0)), _GLF_struct_8(uvec4(1u), _GLF_struct_5(1.0, uvec4(1u), bvec2(true)), _GLF_struct_6(mat2x3(1.0), ivec4(1), uvec3(1u), ivec2(1), ivec3(1), 1, mat3x4(1.0)), mat4x3(1.0), _GLF_struct_7(vec3(1.0), bvec4(true)), workgroup_size * workgroup_id), mat2(1.0), _GLF_struct_12(_GLF_struct_9(vec3(1.0), uvec4(1u), vec2(1.0), vec4(1.0), mat4x2(1.0)), _GLF_struct_10(vec3(1.0), mat4x3(1.0)), _GLF_struct_11(true, ivec4(1), uvec2(1u)), ivec2(1)));
 uint subgroup_base = subgroup_id * subgroup_size;
 _GLF_struct_16 _GLF_struct_replacement_16 = _GLF_struct_16(_GLF_struct_15(mat2(1.0), _GLF_struct_14(1.0, 1), uvec2(1u), ivec3(1), uvec2(1u)), _GLF_struct_replacement_13._f1.workgroup_base + subgroup_base + subgroup_local_id);
 uint next_virtual_gid = _GLF_struct_replacement_13._f1.workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 atomicStore(buf[_GLF_struct_replacement_16.virtual_gid], uint(1), 4, 64, 4);
 if((subgroup_local_id % 2) == 0)
  {
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
