#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_0 {
 ivec2 _f0;
 mat3x2 _f1;
 mat3x2 _f2;
 float _f3;
 float _f4;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
} ;

struct _GLF_struct_2 {
 mat3x2 _f0;
 _GLF_struct_1 _f1;
 bvec3 _f2;
 uint subgroup_base;
 uvec2 _f3;
 uvec4 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec3(bool(bvec2(false, true)), false, true)))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0))), (vec2(mat2x4(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0)))) / vec2(1.0, 1.0))).y)))), false || (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec2((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)) < injectionSwitch.y)))), bool(bool(bool(bvec2((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec2((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, (injectionSwitch.x) / cos(0.0)) < injectionSwitch.y)))), bool(bool(bool(bvec2((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec2((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))))), (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)) < injectionSwitch.y)))), bool(bool(bool(bvec2(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))) || false), false, false)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec2((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)) < injectionSwitch.y)))), bool(bool(bool(bvec2((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true && (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9.2) : injectionSwitch.x)) > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)))))), true && (bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)))))))))), _GLF_IDENTITY(bool(bvec2((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)) < injectionSwitch.y)))), bool(bool(bool(bvec2((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec2((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))))))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)) < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), bool(bool(_GLF_IDENTITY(bool(bvec2((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bvec2((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec2((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec2((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)) < injectionSwitch.y)))), bool(bool(bool(bvec2((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), (injectionSwitch.x > injectionSwitch.y)))), false || (bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), (injectionSwitch.x > injectionSwitch.y)))))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)) < injectionSwitch.y)))), bool(bool(bool(bvec2((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bool(bvec3(_GLF_IDENTITY(bool(bvec2((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)) < injectionSwitch.y)))), bool(bool(bool(bvec2((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true))))))))) || false), false, false)))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / cos(0.0), ((injectionSwitch.x) / cos(0.0)) + 0.0)) < injectionSwitch.y))), bvec2(bvec3(bvec2((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / cos(0.0), ((injectionSwitch.x) / cos(0.0)) + 0.0)) < injectionSwitch.y))), true)))), bool(bool(bool(bvec2((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec2((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)) < injectionSwitch.y)))), bool(bool(bool(bvec2((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))))))))), (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))), false || (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec2((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)) < injectionSwitch.y)))), bool(bool(bool(bvec2((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true), bvec3(bvec3(bvec3((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true)))))), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)) < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)) < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), bool(bool(bool(bvec2((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))) || false), false, false)))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u)), 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec4(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u), 1u)), clamp(uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)))), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), clamp(uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), uvec3(uvec4(uvec3(0u, 0u, 0u), 1u))))), max(uvec3(_GLF_IDENTITY(uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), clamp(uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), uvec3(uvec4(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) / uvec3(1u, 1u, 1u)), 1u)), uvec3(uvec4(uvec3(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, uint(uvec2(0u, 0u)))), 0u + (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, uint(uvec2(0u, 0u)))), (true ? ~ (_GLF_IDENTITY(0u, uint(uvec2(0u, 0u)))) : _GLF_FUZZED(num_workgroup))))))), 0u, 0u), 1u))))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), clamp(uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), uvec3(uvec4(uvec3(0u, 0u, 0u), 1u))))), max(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(uvec3(0u, 0u, 0u), 1u), clamp(uvec4(uvec3(0u, 0u, 0u), 1u), uvec4(uvec3(0u, 0u, 0u), 1u), _GLF_IDENTITY(uvec4(uvec3(0u, 0u, 0u), 1u), ~ (~ (uvec4(uvec3(0u, 0u, 0u), 1u))))))), clamp(uvec3(uvec4(uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) | (0u))), 1u)), uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), uvec3(uvec4(_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), clamp(~ (0u), _GLF_IDENTITY(~ (0u), 0u ^ (~ (0u))), ~ (0u))))), 0u), (uvec3(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), clamp(~ (0u), _GLF_IDENTITY(~ (0u), 0u ^ (~ (0u))), ~ (0u))))), 0u)) << uvec3(0u, 0u, 0u)), 1u))))), uvec3(_GLF_IDENTITY(uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), clamp(uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), uvec3(uvec4(uvec3(0u, 0u, 0u), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(atomicOr(subgroup_id, num_workgroup)))))), uvec3(uvec4(uvec3(0u, 0u, 0u), 1u))))))))))), uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), _GLF_IDENTITY(clamp(uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), uvec3(uvec4(uvec3(0u, 0u, 0u), 1u))), uvec3(_GLF_IDENTITY(uvec4(clamp(uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), uvec3(uvec4(uvec3(0u, 0u, 0u), 1u))), 1u), (uvec4(clamp(uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), uvec3(uvec4(uvec3(0u, 0u, 0u), 1u))), 1u)) >> uvec4(0u, 0u, 0u, 0u))))), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), clamp(uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), _GLF_IDENTITY(uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), ~ (~ (uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)))))))), max(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), (_GLF_IDENTITY(uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), (uvec3(uvec4(uvec3(0u, 0u, 0u), 1u))) | uvec3(0u, 0u, 0u))) - (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u)))), clamp(uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), uvec3(uvec4(uvec3(0u, 0u, 0u), 1u))))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), clamp(uvec3(uvec4(uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) >> 0u)), 1u)), uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), _GLF_IDENTITY(uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), (_GLF_IDENTITY(uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), max(uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), _GLF_IDENTITY(uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), uvec3(uvec3(uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)))))))) >> uvec3(0u, 0u, 0u))))), max(uvec3(_GLF_IDENTITY(uvec3(uvec4(_GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(uvec4(uvec3(0u, 0u, 0u), 1u))))), 1u)), clamp(uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), uvec3(uvec4(_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(_GLF_IDENTITY(uvec4(uvec3(0u, 0u, 0u), 0u), (uvec4(uvec3(0u, 0u, 0u), 0u)) >> uvec4(0u, 0u, 0u, 0u)))), 1u)), uvec3(uvec4(uvec3(0u, 0u, 0u), 1u))))), uvec3(_GLF_IDENTITY(uvec3(uvec4(uvec3(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id))), 0u), 1u)), clamp(uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), uvec3(_GLF_IDENTITY(uvec4(uvec3(0u, 0u, 0u), 1u), (uvec4(uvec3(0u, 0u, 0u), 1u)) | (uvec4(uvec3(0u, 0u, 0u), 1u))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), clamp(uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)))), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), clamp(uvec3(uvec4(uvec3(_GLF_IDENTITY(0u, 0u | (0u)), 0u, 0u), 1u)), uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), uvec3(uvec4(uvec3(0u, 0u, 0u), 1u))))), max(uvec3(_GLF_IDENTITY(uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), clamp(uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), uvec3(uvec4(uvec3(0u, 0u, 0u), 1u))))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), clamp(uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), uvec3(uvec4(uvec3(0u, 0u, 0u), 1u))))), _GLF_IDENTITY(max(uvec3(_GLF_IDENTITY(uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), clamp(uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), uvec3(uvec4(uvec3(0u, 0u, 0u), 1u))))), uvec3(_GLF_IDENTITY(uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), clamp(uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)))))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(max(uvec3(_GLF_IDENTITY(uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), clamp(uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), uvec3(uvec4(uvec3(0u, 0u, 0u), 1u))))), uvec3(_GLF_IDENTITY(uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), clamp(uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), uvec3(uvec4(uvec3(0u, 0u, 0u), 1u))))))), uvec3(0u, 0u, 0u) + (uvec3(max(uvec3(_GLF_IDENTITY(uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), clamp(uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), uvec3(uvec4(uvec3(0u, 0u, 0u), 1u))))), uvec3(_GLF_IDENTITY(uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), clamp(uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)))))))))), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(max(uvec3(_GLF_IDENTITY(uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), clamp(uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), uvec3(uvec4(uvec3(0u, 0u, 0u), 1u))))), uvec3(_GLF_IDENTITY(uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), clamp(uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), uvec3(uvec4(uvec3(0u, 0u, 0u), 1u))))))), uvec3(0u, 0u, 0u) + (uvec3(max(uvec3(_GLF_IDENTITY(uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), clamp(uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), uvec3(uvec4(uvec3(0u, 0u, 0u), 1u))))), uvec3(_GLF_IDENTITY(uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), clamp(uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)))))))))), min(uvec3(_GLF_IDENTITY(uvec3(max(uvec3(_GLF_IDENTITY(uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), clamp(uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), uvec3(uvec4(uvec3(0u, 0u, 0u), 1u))))), uvec3(_GLF_IDENTITY(uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), clamp(uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), uvec3(uvec4(uvec3(0u, 0u, 0u), 1u))))))), uvec3(0u, 0u, 0u) + (uvec3(max(uvec3(_GLF_IDENTITY(uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), clamp(uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), uvec3(uvec4(uvec3(0u, 0u, 0u), 1u))))), uvec3(_GLF_IDENTITY(uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), clamp(uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)))))))))), uvec3(_GLF_IDENTITY(uvec3(max(uvec3(_GLF_IDENTITY(uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), clamp(uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), uvec3(uvec4(uvec3(0u, 0u, 0u), 1u))))), uvec3(_GLF_IDENTITY(uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), clamp(uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), uvec3(uvec4(uvec3(0u, 0u, 0u), 1u))))))), uvec3(0u, 0u, 0u) + (uvec3(max(uvec3(_GLF_IDENTITY(uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), clamp(uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), uvec3(uvec4(uvec3(0u, 0u, 0u), 1u))))), uvec3(_GLF_IDENTITY(uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), clamp(uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), uvec3(uvec4(uvec3(0u, 0u, 0u), 1u)), uvec3(uvec4(uvec3(0u, 0u, 0u), 1u))))))))))))) << uvec3(0u, 0u, 0u))))))))) * uvec3(1u, 1u, 1u)), 1u)))) ^ (gl_WorkGroupSize)).x;
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u)), gl_WorkGroupID)), (true ? _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)) : _GLF_FUZZED(_GLF_IDENTITY(uvec3(124277u, 126215u, 184899u), (uvec3(124277u, 126215u, 184899u)) << uvec3(0u, 0u, 0u))))).x;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ _GLF_IDENTITY(0u, (0u) - 0u)))), (_GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ _GLF_IDENTITY(0u, (0u) - 0u))))) >> 0u);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)), (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))
  return;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))))))
  {
   for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, bool(bvec4(_injected_loop_counter != 0, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0)) && true); _injected_loop_counter --)
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         for(int _injected_loop_counter = _GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(0, 0), (_GLF_IDENTITY(ivec2(0, 0), _GLF_IDENTITY(ivec2(ivec3(ivec2(0, 0), 1)), (ivec2(ivec3(ivec2(0, 0), 1))) - ivec2(0, 0)))) | (_GLF_IDENTITY(ivec2(0, 0), ivec2(0, 0) + (ivec2(0, 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(0, 0), (_GLF_IDENTITY(ivec2(0, 0), _GLF_IDENTITY(ivec2(ivec3(ivec2(0, 0), 1)), (ivec2(ivec3(ivec2(0, 0), 1))) - ivec2(0, 0)))) | (_GLF_IDENTITY(ivec2(0, 0), ivec2(0, 0) + (ivec2(0, 0))))), ivec2(0, 0) ^ (_GLF_IDENTITY(ivec2(0, 0), (_GLF_IDENTITY(ivec2(0, 0), _GLF_IDENTITY(ivec2(ivec3(ivec2(0, 0), 1)), (ivec2(ivec3(ivec2(0, 0), 1))) - ivec2(0, 0)))) | (_GLF_IDENTITY(ivec2(0, 0), ivec2(0, 0) + (ivec2(0, 0)))))))) - (ivec2(0, 0) ^ (ivec2(0, 0) | ivec2(0, 0))))), ~ (~ (int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(0, 0), min(ivec2(0, 0), ivec2(0, 0))), (_GLF_IDENTITY(ivec2(0, 0), ivec2(ivec2(ivec2(0, 0))))) | (_GLF_IDENTITY(ivec2(0, 0), ivec2(0, 0) + (ivec2(0, _GLF_IDENTITY(0, (0) + _GLF_IDENTITY(0, clamp(0, 0, 0))))))))))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter))) | (_injected_loop_counter)) < _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) - 0)), (_GLF_IDENTITY((1), min((1), (1)))) >> 0))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           return;
          }
        }
      }
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(mat3x2(_GLF_IDENTITY(1.0, (1.0) * _GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_struct_1(_GLF_struct_0(ivec2(1), mat3x2(1.0), mat3x2(1.0), 1.0, 1.0)), bvec3(true), subgroup_id * subgroup_size, _GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), max(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat4(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, abs(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))))), 0u | _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (false ? _GLF_FUZZED(subgroup_size) : uint(_GLF_ZERO(0.0, injectionSwitch.x))))), clamp((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (false ? _GLF_FUZZED(subgroup_size) : uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (false ? _GLF_FUZZED(subgroup_size) : uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (false ? _GLF_FUZZED(subgroup_size) : uint(_GLF_ZERO(0.0, injectionSwitch.x))))), ((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (false ? _GLF_FUZZED(subgroup_size) : uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) >> 0u)))))) | (_GLF_IDENTITY(1u, 0u | _GLF_IDENTITY((1u), clamp((1u), (1u), (1u))))))), (uvec2(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(1u, 0u | (1u)))))) | (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(1u, 0u | (1u)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(1u, 0u | (1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(1u, 0u | (1u)))), _GLF_IDENTITY((_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(1u, 0u | (1u))))) - 0u, (_GLF_IDENTITY((_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(1u, 0u | (1u))))) - 0u, (_GLF_IDENTITY((_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(1u, 0u | (1u))))) - 0u, uint(uvec4((_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(1u, 0u | (1u))))) - 0u, 1u, 0u, 0u)))) >> 0u)) >> (0u ^ 0u)))) | (_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(1u, 0u | (1u)))))), _GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY((_GLF_IDENTITY(1u, 0u | (1u))), min((_GLF_IDENTITY(1u, 0u | (1u))), (_GLF_IDENTITY(1u, 0u | (1u)))))), _GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(1u, 0u | (1u))))))), (uvec2(0u, 0u) << _GLF_IDENTITY(uvec2(2u), _GLF_IDENTITY(uvec2(2u), (uvec2(2u)) | (uvec2(2u))))) | (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(1u, 0u | (1u)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(1u, 0u | (1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(1u, 0u | (1u)))), _GLF_IDENTITY((_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(1u, 0u | (1u))))) - 0u, (_GLF_IDENTITY((_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(1u, 0u | (1u))))) - 0u, (_GLF_IDENTITY((_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(1u, 0u | (1u))))) - 0u, uint(uvec4((_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(1u, 0u | (1u))))) - 0u, 1u, 0u, 0u)))) >> 0u)) >> (0u ^ 0u)))) | (_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(1u, 0u | (1u)))))), _GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY((_GLF_IDENTITY(1u, 0u | (1u))), min((_GLF_IDENTITY(1u, 0u | (1u))), (_GLF_IDENTITY(1u, 0u | (1u)))))), _GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(1u, 0u | (1u))))))))))), uvec4(1u));
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), _GLF_IDENTITY((workgroup_base), min((workgroup_base), _GLF_IDENTITY((workgroup_base), ((workgroup_base)) ^ 0u))) | 0u))))) / 1u), ~ (~ (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base))) | 0u), uint(uvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u), 1u, _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, ~ (~ (1u))))), 1u))))))), (_GLF_IDENTITY(true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), clamp(_GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (true ? _GLF_FUZZED(subgroup_local_id) : _GLF_FUZZED(workgroup_base))), _GLF_FUZZED(subgroup_local_id)))) << 0u), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), clamp(_GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (true ? _GLF_FUZZED(subgroup_local_id) : _GLF_FUZZED(workgroup_base))), _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + (0u & 64099u)))))))) << 0u)) / uint(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 0u ^ (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) << 0u)))) + 0u)) << 0u) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u), uint(uvec3(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u), 1u, 1u))), _GLF_IDENTITY((_GLF_IDENTITY(0u | 0u, _GLF_IDENTITY(_GLF_IDENTITY(max(0u | 0u, _GLF_IDENTITY(0u | 0u, max(0u | 0u, 0u | 0u))), clamp(_GLF_IDENTITY(max(0u | 0u, _GLF_IDENTITY(0u | 0u, max(0u | 0u, 0u | 0u))), min(max(0u | 0u, _GLF_IDENTITY(0u | 0u, max(0u | 0u, 0u | 0u))), _GLF_IDENTITY(max(0u | 0u, _GLF_IDENTITY(0u | 0u, max(0u | 0u, 0u | 0u))), (false ? _GLF_FUZZED(subgroup_local_id) : max(0u | 0u, _GLF_IDENTITY(0u | 0u, max(0u | 0u, 0u | 0u))))))), _GLF_IDENTITY(max(0u | 0u, _GLF_IDENTITY(0u | 0u, max(0u | 0u, 0u | 0u))), max(_GLF_IDENTITY(max(0u | 0u, _GLF_IDENTITY(0u | 0u, max(0u | 0u, 0u | 0u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(max(0u | 0u, _GLF_IDENTITY(0u | 0u, max(0u | 0u, 0u | 0u))), 0u, 1u, 1u), (uvec4(max(0u | 0u, _GLF_IDENTITY(0u | 0u, max(0u | 0u, 0u | 0u))), 0u, 1u, 1u)) ^ uvec4(0u, 0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec4(max(0u | 0u, _GLF_IDENTITY(0u | 0u, max(0u | 0u, 0u | 0u))), 0u, 1u, 1u), (uvec4(max(0u | 0u, _GLF_IDENTITY(0u | 0u, max(0u | 0u, 0u | 0u))), 0u, 1u, 1u)) ^ uvec4(0u, 0u, 0u, 0u)))) - 0u)), _GLF_IDENTITY(max(0u | 0u, _GLF_IDENTITY(0u | 0u, max(0u | 0u, 0u | 0u))), 0u ^ (max(0u | 0u, _GLF_IDENTITY(0u | 0u, max(0u | 0u, 0u | 0u))))))), _GLF_IDENTITY(max(0u | 0u, _GLF_IDENTITY(0u | 0u, max(0u | 0u, 0u | 0u))), clamp(max(0u | 0u, _GLF_IDENTITY(0u | 0u, max(0u | _GLF_IDENTITY(0u, (0u) - 0u), 0u | 0u))), max(0u | 0u, _GLF_IDENTITY(0u | 0u, max(0u | 0u, 0u | 0u))), max(0u | 0u, _GLF_IDENTITY(0u | 0u, max(0u | 0u, 0u | 0u))))))), (_GLF_IDENTITY(max(0u | 0u, _GLF_IDENTITY(0u | 0u, max(0u | 0u, 0u | 0u))), clamp(max(0u | 0u, _GLF_IDENTITY(0u | 0u, max(0u | 0u, 0u | 0u))), max(0u | 0u, _GLF_IDENTITY(0u | _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(0u, min(0u, 0u)))), 0u)), max(0u | _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u, 1u, 0u, 0u), (uvec4(0u, 1u, 0u, 0u)) << (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(7u), uvec4(7u))))), (uint(_GLF_IDENTITY(uvec4(0u, 1u, 0u, 0u), (uvec4(0u, 1u, 0u, 0u)) << (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(7u), uvec4(7u)))))) >> 0u)), 0u | 0u))), _GLF_IDENTITY(max(0u | 0u, _GLF_IDENTITY(0u | 0u, max(0u | 0u, 0u | 0u))), clamp(max(0u | 0u, _GLF_IDENTITY(0u | 0u, max(0u | 0u, 0u | 0u))), max(0u | 0u, _GLF_IDENTITY(0u | 0u, max(0u | 0u, 0u | 0u))), max(0u | _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u)))), _GLF_IDENTITY(0u | 0u, max(0u | 0u, 0u | 0u)))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(max(0u | 0u, _GLF_IDENTITY(0u | 0u, max(0u | 0u, 0u | 0u))), clamp(max(0u | 0u, _GLF_IDENTITY(0u | 0u, max(0u | 0u, 0u | 0u))), max(0u | 0u, _GLF_IDENTITY(0u | 0u, max(0u | 0u, 0u | 0u))), _GLF_IDENTITY(max(0u | 0u, _GLF_IDENTITY(0u | 0u, max(0u | 0u, 0u | 0u))), clamp(max(0u | 0u, _GLF_IDENTITY(0u | 0u, max(0u | 0u, 0u | 0u))), max(0u | 0u, _GLF_IDENTITY(0u | 0u, max(0u | 0u, 0u | 0u))), max(0u | 0u, _GLF_IDENTITY(0u | 0u, max(0u | 0u, 0u | 0u))))))), min(_GLF_IDENTITY(max(0u | 0u, _GLF_IDENTITY(0u | 0u, max(0u | 0u, 0u | 0u))), clamp(max(0u | 0u, _GLF_IDENTITY(0u | 0u, max(0u | 0u, 0u | 0u))), max(0u | 0u, _GLF_IDENTITY(0u | 0u, max(0u | 0u, 0u | 0u))), _GLF_IDENTITY(max(0u | 0u, _GLF_IDENTITY(0u | 0u, max(0u | 0u, 0u | 0u))), clamp(max(0u | 0u, _GLF_IDENTITY(0u | 0u, max(0u | 0u, 0u | 0u))), max(0u | 0u, _GLF_IDENTITY(0u | 0u, max(0u | 0u, 0u | 0u))), max(0u | 0u, _GLF_IDENTITY(0u | 0u, max(0u | 0u, 0u | 0u))))))), _GLF_IDENTITY(max(0u | 0u, _GLF_IDENTITY(0u | 0u, max(0u | 0u, 0u | 0u))), clamp(max(0u | 0u, _GLF_IDENTITY(0u | 0u, max(0u | 0u, 0u | 0u))), max(0u | 0u, _GLF_IDENTITY(0u | 0u, max(0u | 0u, 0u | 0u))), _GLF_IDENTITY(max(0u | 0u, _GLF_IDENTITY(0u | 0u, max(0u | 0u, 0u | 0u))), clamp(max(0u | 0u, _GLF_IDENTITY(0u | 0u, max(0u | 0u, 0u | 0u))), max(0u | 0u, _GLF_IDENTITY(0u | 0u, max(0u | 0u, 0u | 0u))), max(0u | 0u, _GLF_IDENTITY(0u | 0u, max(0u | 0u, 0u | 0u))))))))), max(_GLF_IDENTITY(max(0u | 0u, _GLF_IDENTITY(0u | 0u, max(0u | 0u, 0u | 0u))), clamp(max(0u | 0u, _GLF_IDENTITY(0u | 0u, max(0u | 0u, 0u | 0u))), max(0u | 0u, _GLF_IDENTITY(0u | 0u, max(0u | 0u, 0u | 0u))), _GLF_IDENTITY(max(0u | 0u, _GLF_IDENTITY(0u | 0u, max(0u | 0u, 0u | 0u))), clamp(max(0u | _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u)), _GLF_IDENTITY(0u | 0u, max(0u | 0u, 0u | 0u))), max(0u | 0u, _GLF_IDENTITY(0u | 0u, max(0u | 0u, _GLF_IDENTITY(0u | 0u, 0u | (0u | 0u))))), max(0u | 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, (0u) ^ 0u))) | 0u, max(0u | 0u, _GLF_IDENTITY(0u | 0u, (true ? _GLF_IDENTITY(0u, (0u) + 0u) | 0u : _GLF_FUZZED(173122u)))))))))), _GLF_IDENTITY(max(0u | 0u, _GLF_IDENTITY(0u | 0u, max(0u | 0u, 0u | 0u))), clamp(max(0u | _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) - 0u))), _GLF_IDENTITY(0u | 0u, max(0u | 0u, 0u | 0u))), max(0u | 0u, _GLF_IDENTITY(0u | 0u, max(0u | 0u, 0u | 0u))), _GLF_IDENTITY(max(0u | 0u, _GLF_IDENTITY(0u | 0u, max(0u | 0u, 0u | 0u))), clamp(max(0u | 0u, _GLF_IDENTITY(0u | 0u, max(0u | 0u, 0u | 0u))), max(0u | 0u, _GLF_IDENTITY(0u | 0u, max(0u | 0u, 0u | 0u))), max(0u | 0u, _GLF_IDENTITY(0u | 0u, max(0u | 0u, 0u | 0u))))))))))))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(0u | 0u, max(0u | 0u, _GLF_IDENTITY(0u | 0u, max(0u | 0u, 0u | 0u)))))), (false ? _GLF_FUZZED(subgroup_size) : ~ ((_GLF_IDENTITY(_GLF_IDENTITY(0u | 0u, max(0u | 0u, _GLF_IDENTITY(0u | 0u, _GLF_IDENTITY(max(0u | 0u, _GLF_IDENTITY(0u, (0u) * 1u) | 0u), ~ (~ (max(0u | 0u, 0u | 0u))))))), max(_GLF_IDENTITY(0u | 0u, max(0u | 0u, _GLF_IDENTITY(0u | 0u, _GLF_IDENTITY(max(0u | 0u, 0u | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) | (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) << 0u))))))), ~ (~ (max(0u | 0u, 0u | 0u))))))), _GLF_IDENTITY(0u | 0u, max(0u | 0u, _GLF_IDENTITY(0u | 0u, _GLF_IDENTITY(max(0u | _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))), 0u | 0u), ~ (~ (max(0u | 0u, 0u | 0u))))))))))))))) ^ (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && true))))), _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) && true))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) && true))), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))))))), _GLF_IDENTITY(false || ((_GLF_IDENTITY(false, ! (! (false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false || ((_GLF_IDENTITY(false, ! (! (false))))))))))), _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, false))), (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || ((_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || ((_GLF_IDENTITY(false, ! (! (false)))))), true), bvec2(bvec4(bvec2(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || ((_GLF_IDENTITY(false, ! (! (false)))))), true), false, false)))), false || (bool(_GLF_IDENTITY(bvec2(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || ((_GLF_IDENTITY(false, ! (! (false)))))), true), bvec2(bvec4(bvec2(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || ((_GLF_IDENTITY(false, ! (! (false)))))), true), false, false)))))))))), bool(_GLF_IDENTITY(bvec2(false || (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))) || false)))))), false || ((_GLF_IDENTITY(false, ! (! (false))))))))), true), bvec2(bvec3(bvec2(false || (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || ((_GLF_IDENTITY(false, ! (! (false))))))))), true), false)))))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY((bool(bool(false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && ((bool(bool(false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true) ? _GLF_FUZZED(max(workgroup_base, workgroup_base)) : workgroup_base))) | 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u))), (workgroup_base) | 0u), 1u, 1u), (uvec3(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u), _GLF_IDENTITY(1u, min(1u, 1u)), 1u)) << uvec3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, sqrt(1.0), 1.0, 0.0, exp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6.9)), float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), exp(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))), 0.0))).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u), 1u, 1u), (uvec3(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u), _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, uint(uvec4(_GLF_IDENTITY(1u, 0u + (1u)), (1u ^ 1u), 0u, 0u))), 1u)), 1u)) << uvec3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, sqrt(1.0), 1.0, 0.0, exp(0.0), exp(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))), 0.0))).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))) >> 0u))))), 0u + ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) || false))))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), true)))))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))), ! (! (! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))))))), (! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))), ! (! (! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))), true && (_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))), ! (! (false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))))))), true && (! (_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))), true && (_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))), ! (! (false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, true && (true)), false)))))))))))))))))))))) || false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) || false))))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), true)))))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))), ! (! (! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))))))), (! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))), ! (! (! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))), true && (_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))), ! (! (false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))))))), true && (! (_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))), true && (_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))), ! (! (false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, true && (true)), false)))))))))))))))))))))) || false))))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) || false))))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), true)))))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))), ! (! (! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))))))), (! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))), ! (! (! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))), true && (_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))), ! (! (false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))))))), true && (! (_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))), true && (_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))), ! (! (false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, true && (true)), false)))))))))))))))))))))) || false)), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) || false))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), true))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(false, bool(bool(false)))), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), true)))))))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))), ! (! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))))))), (! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))), ! (! (! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), true, false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))), true && (_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, round(length(normalize(vec2(1.0, 1.0)))))), vec2(1.0, 1.0) * (vec2(mat2(injectionSwitch, 1.0, round(length(normalize(vec2(1.0, 1.0))))))))).x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))), _GLF_IDENTITY(! (! (false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))), ! (_GLF_IDENTITY(! (! (! (false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))), false || (! (! (! (false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-838.849)), float(injectionSwitch.x), bool(true))), 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))) > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))))))))))), true && (! (_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))), true && (_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))), ! (! (false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, true && (true)), false)))))))))))))))))))))) || false)))))))) || false))) ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))) | 0u)))) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), min(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), max(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size))), _GLF_FUZZED(subgroup_size))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) + 0u)) << 0u) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (0u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) ^ 0u))) | (workgroup_base)), (workgroup_base) | 0u), uint(uvec3(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u), 1u, 1u))), _GLF_IDENTITY((_GLF_IDENTITY(0u | 0u, max(_GLF_IDENTITY(0u | 0u, 0u ^ (0u | 0u)), _GLF_IDENTITY(0u | 0u, max(0u | 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) | _GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(72494u) : 0u))))))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(0u | 0u, max(0u | 0u, _GLF_IDENTITY(0u | 0u, max(_GLF_IDENTITY(0u | 0u, clamp(_GLF_IDENTITY(0u | 0u, (true ? 0u | 0u : _GLF_FUZZED(subgroup_size))), 0u | 0u, _GLF_IDENTITY(0u | 0u, (0u | 0u) | 0u))), 0u | _GLF_IDENTITY(0u, uint(uint(0u))))))))), _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))))) : ~ ((_GLF_IDENTITY(0u | 0u, max(0u | 0u, _GLF_IDENTITY(0u | 0u, max(_GLF_IDENTITY(0u, (0u) | (0u)) | 0u, 0u | 0u))))))), (_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : ~ _GLF_IDENTITY(((_GLF_IDENTITY(0u | 0u, max(0u | 0u, _GLF_IDENTITY(0u | 0u, max(0u | 0u, 0u | 0u)))))), min(_GLF_IDENTITY(((_GLF_IDENTITY(0u | 0u, max(0u | 0u, _GLF_IDENTITY(0u | 0u, max(0u | 0u, 0u | 0u)))))), max(((_GLF_IDENTITY(0u | 0u, max(0u | 0u, _GLF_IDENTITY(0u | 0u, max(0u | 0u, 0u | 0u)))))), ((_GLF_IDENTITY(0u | 0u, max(0u | 0u, _GLF_IDENTITY(0u | 0u, max(0u | 0u, 0u | 0u)))))))), ((_GLF_IDENTITY(0u | 0u, max(0u | 0u, _GLF_IDENTITY(0u | 0u, max(0u | 0u, 0u | 0u))))))))), ((false ? _GLF_FUZZED(subgroup_size) : ~ ((_GLF_IDENTITY(0u | 0u, max(0u | 0u, _GLF_IDENTITY(0u | 0u, max(0u | 0u, 0u | 0u)))))))) | (_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : ~ ((_GLF_IDENTITY(0u | 0u, max(0u | 0u, _GLF_IDENTITY(0u | 0u, max(0u | 0u, _GLF_IDENTITY(0u | 0u, (0u | 0u) | (_GLF_IDENTITY(0u | 0u, (false ? _GLF_FUZZED(workgroup_size) : 0u | 0u))))))))))), min((false ? _GLF_FUZZED(subgroup_size) : ~ ((_GLF_IDENTITY(0u | 0u, max(0u | 0u, _GLF_IDENTITY(0u | 0u, max(0u | 0u, 0u | 0u))))))), (false ? _GLF_FUZZED(subgroup_size) : ~ ((_GLF_IDENTITY(0u | 0u, max(0u | 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u | 0u, max(0u | 0u, _GLF_IDENTITY(0u | 0u, (0u | 0u) ^ 0u))), max(_GLF_IDENTITY(0u | 0u, (_GLF_IDENTITY(0u | 0u, (0u | 0u) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> 0u), 0u | 0u)))))))))))) | ((false ? _GLF_FUZZED(subgroup_size) : ~ ((_GLF_IDENTITY(0u | 0u, max(0u | 0u, _GLF_IDENTITY(0u | 0u, max(0u | 0u, 0u | 0u)))))))))))) ^ (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false))))))))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) * mat2(1.0)).x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(max(workgroup_base, workgroup_base)) : _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (0u & 79554u) + (workgroup_base))) | (workgroup_base))))) | 0u), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), _GLF_IDENTITY((workgroup_base) | 0u, (((0u ^ 1u) << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (uint(4u)) >> (100885u & 0u)), 1u * (uint(_GLF_IDENTITY(4u, 0u ^ (_GLF_IDENTITY(4u, 1u * (4u))))))))) * ((workgroup_base) | 0u))), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | 0u, min(_GLF_IDENTITY((workgroup_base) | 0u, max((workgroup_base) | 0u, _GLF_IDENTITY((workgroup_base) | 0u, 0u | ((workgroup_base) | 0u)))), (workgroup_base) | 0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | 0u, min(_GLF_IDENTITY((workgroup_base) | 0u, max((workgroup_base) | 0u, _GLF_IDENTITY((workgroup_base) | 0u, 0u | ((workgroup_base) | 0u)))), (workgroup_base) | 0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | 0u, min(_GLF_IDENTITY((workgroup_base) | 0u, max((workgroup_base) | 0u, _GLF_IDENTITY((workgroup_base) | 0u, 0u | ((workgroup_base) | 0u)))), (workgroup_base) | 0u))), (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | 0u, min(_GLF_IDENTITY((workgroup_base) | 0u, max((workgroup_base) | 0u, _GLF_IDENTITY((workgroup_base) | 0u, 0u | ((workgroup_base) | 0u)))), (workgroup_base) | 0u)))) | (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | 0u, min(_GLF_IDENTITY((workgroup_base) | 0u, max((workgroup_base) | 0u, _GLF_IDENTITY((workgroup_base) | 0u, 0u | ((workgroup_base) | 0u)))), (workgroup_base) | 0u))))), _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | 0u, min(_GLF_IDENTITY((workgroup_base) | 0u, max((workgroup_base) | 0u, _GLF_IDENTITY((workgroup_base) | 0u, 0u | ((workgroup_base) | 0u)))), (workgroup_base) | 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | 0u, min(_GLF_IDENTITY((workgroup_base) | 0u, max((workgroup_base) | 0u, _GLF_IDENTITY((workgroup_base) | 0u, 0u | ((workgroup_base) | 0u)))), (workgroup_base) | 0u))), ~ (~ (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | 0u, min(_GLF_IDENTITY((workgroup_base) | 0u, max((workgroup_base) | 0u, _GLF_IDENTITY((workgroup_base) | 0u, 0u | ((workgroup_base) | 0u)))), (workgroup_base) | 0u)))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec4(workgroup_base, 0u, 0u, 1u)), (true ? uint(uvec4(workgroup_base, 0u, 0u, 1u)) : _GLF_FUZZED(subgroup_id)))), (workgroup_base) | 0u), _GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u))), _GLF_IDENTITY(1u, (1u) ^ 0u), 1u)) << uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(mat4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, 1.0, sin(0.0), 1.0))))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))))), 0u + ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u), 1u * (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | 0u, max(_GLF_IDENTITY((workgroup_base) | 0u, (true ? (workgroup_base) | 0u : _GLF_FUZZED(subgroup_size))), (workgroup_base) | 0u)))))))) : _GLF_FUZZED(subgroup_size)) ^ 0u)))) + _GLF_struct_replacement_2.subgroup_base + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
    }
   return;
  }
 uint next_virtual_gid = workgroup_base + _GLF_struct_replacement_2.subgroup_base + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(virtual_gid))), subgroup_local_id)) + 1) % subgroup_size, _GLF_IDENTITY(1u, (1u) - _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))) / (_GLF_IDENTITY(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)), clamp(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)), 0u | ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))), _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)), ~ (~ ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))))), (1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)), clamp(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)), 0u | ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))), _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)), ~ (~ ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))))), (1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))), ~ (~ (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)), clamp(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)), 0u | ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))), _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)), ~ (~ ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))))), (1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))))))))) * (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), uint(uvec3(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), uint(uint(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), 0u ^ (((subgroup_local_id + 1) % subgroup_size)))))), (0u ^ 1u), 0u))) >> 0u))));
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), bool(bool(! ((injectionSwitch.x < injectionSwitch.y)))))))))) && (true))))
    {
     do
      {
       atomicStore(buf[virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) / 1))), (1) | (1))), 4, 64, 4);
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)), false || (bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))))
      return;
    }
   else
    {
    }
  }
 if(_GLF_IDENTITY((subgroup_local_id % 2), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(2, ~ (~ (2)))), _GLF_IDENTITY(((subgroup_local_id % 2)), (_GLF_IDENTITY(((subgroup_local_id % 2)), (((subgroup_local_id % 2))) / 1u)) | 0u) + 0u)), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) ^ 0u)) >> 0u)), ((subgroup_local_id % 2)) + 0u)), ((_GLF_IDENTITY((subgroup_local_id % 2), ((_GLF_IDENTITY(subgroup_local_id % 2, (0u << _GLF_IDENTITY(uint(8u), uint(8u))) | (_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(subgroup_local_id % 2, clamp(subgroup_local_id % 2, subgroup_local_id % 2, subgroup_local_id % 2))) - 0u))))) + 0u))) * 1u)) | 0u))) == 0)
  {
   do
    {
     for(int _injected_loop_counter = (((0 & -65712) ^ 1) | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) >> 0))) >> _GLF_IDENTITY(int(8), int(8)))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           return;
          }
        }
      }
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), ! (! (bool(bvec4(false, false, false, false))))))), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))))));
   do
    {
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (int(1))))) >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0, int(ivec2(0, 0))) << _GLF_IDENTITY(int(8), int(8)))); _injected_loop_counter --)
      {
       atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(false, true && (false)) ? _GLF_IDENTITY(_GLF_FUZZED((int(true) * -10226)), (_GLF_FUZZED((_GLF_IDENTITY(int(true) * -10226, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(int(true) * -10226, (1 ^ 0), ((0 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(0), int(0)))), (ivec3(int(true) * -10226, (1 ^ 0), ((0 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(0), int(0))))) | ivec3(0, 0, 0))), (int(_GLF_IDENTITY(ivec3(int(true) * -10226, (1 ^ 0), ((0 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(0), int(0)))), (ivec3(int(true) * -10226, (1 ^ 0), ((0 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(0), int(0))))) | ivec3(0, 0, 0)))) | 0))))) - 0) : 4)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))))) ? _GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (4)), (false ? _GLF_FUZZED((int(true) * _GLF_IDENTITY(-10226, _GLF_IDENTITY(min(_GLF_IDENTITY(-10226, min(-10226, -10226)), -10226), (min(_GLF_IDENTITY(_GLF_IDENTITY(-10226, min(-10226, -10226)), min(_GLF_IDENTITY(-10226, min(-10226, -10226)), _GLF_IDENTITY(-10226, min(-10226, -10226)))), -10226)) >> 0)))) : 4)) : _GLF_FUZZED(27663)), _GLF_IDENTITY(int(_GLF_IDENTITY(int((_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), true && (_GLF_IDENTITY(true, false || (true)))), (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))) < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), mix(float(_GLF_IDENTITY(0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), (false ? _GLF_FUZZED(-814.434) : 0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), float(_GLF_FUZZED((250.791))), bool(false)))))) ? _GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, clamp(4, 4, 4)))), (_GLF_IDENTITY(false ? _GLF_FUZZED((int(true) * _GLF_IDENTITY(-10226, min(_GLF_IDENTITY(-10226, min(-10226, -10226)), -10226)))) : 4, (false ? _GLF_FUZZED((int(true) * _GLF_IDENTITY(-10226, min(_GLF_IDENTITY(-10226, min(-10226, -10226)), -10226)))) : 4) | 0))) : _GLF_FUZZED(27663))), (int((_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(false || (_GLF_IDENTITY(true, (true) || false)), ! (! (false || (true))))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(22.59) : injectionSwitch.y)))) ? _GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (4)), (false ? _GLF_FUZZED((int(true) * _GLF_IDENTITY(-10226, min(_GLF_IDENTITY(-10226, min(-10226, -10226)), -10226)))) : 4)) : _GLF_IDENTITY(_GLF_FUZZED(27663), 0 | (_GLF_FUZZED(27663)))))) / 1)), (int(_GLF_IDENTITY(int((_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), ! (! (_GLF_IDENTITY(true, true && (true))))), false || (true)), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (4)), (false ? _GLF_IDENTITY(_GLF_FUZZED((int(true) * _GLF_IDENTITY(-10226, min(_GLF_IDENTITY(_GLF_IDENTITY(-10226, (false ? _GLF_FUZZED(ivec2(-91419, 61024).y) : -10226)), min(-10226, -10226)), -10226)))), (0 << _GLF_IDENTITY(int(6), int(6))) ^ (_GLF_IDENTITY(_GLF_FUZZED((int(true) * _GLF_IDENTITY(-10226, min(_GLF_IDENTITY(-10226, min(-10226, -10226)), -10226)))), min(_GLF_FUZZED((int(true) * _GLF_IDENTITY(-10226, min(_GLF_IDENTITY(-10226, min(-10226, -10226)), -10226)))), _GLF_IDENTITY(_GLF_FUZZED((int(true) * _GLF_IDENTITY(-10226, min(_GLF_IDENTITY(-10226, min(-10226, -10226)), -10226)))), ~ (~ (_GLF_FUZZED((int(true) * _GLF_IDENTITY(-10226, min(_GLF_IDENTITY(-10226, min(-10226, -10226)), -10226))))))))))) : 4)) : _GLF_FUZZED(27663))), (int((_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)), true, false))))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)), true, false)))))), true && (! (bool(bool(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)), true, false))))))))))) ? _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(0, (0) | 0) + (4)), (false ? _GLF_FUZZED((int(true) * _GLF_IDENTITY(-10226, min(_GLF_IDENTITY(-10226, min(-10226, -10226)), -10226)))) : 4)) : _GLF_IDENTITY(_GLF_FUZZED(27663), (_GLF_FUZZED(27663)) * 1)))) / 1))) << 0)), max((_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), clamp(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (max(injectionSwitch, injectionSwitch)) / vec2(1.0, 1.0)), _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (true ? max(injectionSwitch, injectionSwitch) : _GLF_FUZZED(vec2(-53.09, 915.210))))))).y))), false || (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false)))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) - vec2(0.0, 0.0)).x)) < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY((4) - 0, ((4) - 0) ^ 0))) | (1 ^ 1)), 0 + _GLF_IDENTITY((4), ((4)) >> 0)), (false ? _GLF_FUZZED((_GLF_IDENTITY(_GLF_IDENTITY(int(true) * -10226, (_GLF_IDENTITY(int(true), (int(true)) << 0) * -10226) + 0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(true) * -10226, (_GLF_IDENTITY(int(true), (int(true)) << 0) * -10226) + 0), 0 ^ (_GLF_IDENTITY(int(true) * -10226, (_GLF_IDENTITY(int(true), (int(true)) << 0) * -10226) + 0))), _GLF_IDENTITY(_GLF_IDENTITY(int(true) * -10226, (_GLF_IDENTITY(int(true), (int(true)) << 0) * -10226) + 0), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(int(true) * -10226, (_GLF_IDENTITY(int(true), (int(true)) << 0) * -10226) + 0), (_GLF_IDENTITY(int(true) * -10226, (_GLF_IDENTITY(int(true), (int(true)) << 0) * -10226) + 0)) * 1))), _GLF_IDENTITY(int(true) * -10226, (_GLF_IDENTITY(int(true), (int(true)) << 0) * -10226) + 0))))) : 4)) : _GLF_FUZZED(27663)), _GLF_IDENTITY((_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) || (false || _GLF_IDENTITY((true), bool(bvec2((true), _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, _GLF_IDENTITY((4), ((4)) / 1) | (4)))), (false ? _GLF_FUZZED((int(true) * -10226)) : 4)), (false ? _GLF_IDENTITY(_GLF_FUZZED(-75649), (_GLF_FUZZED(-75649)) >> 0) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, (4) | (4)))), (false ? _GLF_FUZZED((int(true) * -10226)) : 4)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, 0 + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), (_GLF_IDENTITY(4, (4) | (4))) | (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), (_GLF_IDENTITY(4, (4) | (4))) / 1)))), max((_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), (_GLF_IDENTITY(4, (4) | (4))) | (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), (_GLF_IDENTITY(4, (4) | (4))) / 1)))), (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), (_GLF_IDENTITY(4, (4) | (4))) | (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), (_GLF_IDENTITY(4, (4) | (4))) / 1))))))), (false ? _GLF_FUZZED((_GLF_IDENTITY(int(true), ~ (~ (_GLF_IDENTITY(int(true), (int(true)) / 1)))) * -10226)) : 4))) + (0 >> _GLF_IDENTITY(int(3), int(3))), ((_GLF_IDENTITY(_GLF_IDENTITY(4, 0 + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), (_GLF_IDENTITY(4, (4) | (4))) | (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), (_GLF_IDENTITY(4, (4) | (4))) / 1)))), max((_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), (_GLF_IDENTITY(4, (4) | (4))) | (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), (_GLF_IDENTITY(4, (4) | (4))) / 1)))), (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), (_GLF_IDENTITY(4, (4) | (4))) | (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), (_GLF_IDENTITY(4, (4) | (4))) / 1))))))), (false ? _GLF_FUZZED((_GLF_IDENTITY(int(true), ~ (~ (_GLF_IDENTITY(int(true), (int(true)) / 1)))) * -10226)) : 4))) + (0 >> _GLF_IDENTITY(int(3), int(3)))) << 0)))) : _GLF_FUZZED(27663)), min((_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), false || (true)), (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)), mix(_GLF_IDENTITY(vec2((vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)))[_GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0 : _GLF_FUZZED(625)))], (vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)))[_GLF_IDENTITY(1, (1) ^ 0)]), _GLF_IDENTITY(vec2(mat4(vec2((vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)))[_GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0 : _GLF_FUZZED(625)))], (vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)))[_GLF_IDENTITY(1, (1) ^ 0)]), 1.0, 1.0, 0.0, abs(1.0), 1.0, 1.0, 1.0, log(1.0), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, abs(1.0), 1.0, 0.0)), min(vec2(mat4(vec2((vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)))[_GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0 : _GLF_FUZZED(625)))], (vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)))[_GLF_IDENTITY(1, (1) ^ 0)]), 1.0, 1.0, 0.0, abs(1.0), 1.0, 1.0, 1.0, log(1.0), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, abs(1.0), 1.0, 0.0)), _GLF_IDENTITY(vec2(mat4(vec2((vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)))[_GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0 : _GLF_FUZZED(625)))], (vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)))[_GLF_IDENTITY(1, (1) ^ 0)]), 1.0, 1.0, 0.0, abs(1.0), 1.0, 1.0, 1.0, log(1.0), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, abs(1.0), 1.0, 0.0)), mix(vec2((vec2(mat4(vec2((vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)))[_GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0 : _GLF_FUZZED(625)))], (vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)))[_GLF_IDENTITY(1, (1) ^ 0)]), 1.0, 1.0, 0.0, abs(1.0), 1.0, 1.0, 1.0, log(1.0), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, abs(1.0), 1.0, 0.0)))[0], _GLF_FUZZED(-4.9)), vec2(_GLF_FUZZED(5766.3617), (vec2(mat4(vec2((vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)))[_GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0 : _GLF_FUZZED(625)))], (vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)))[_GLF_IDENTITY(1, (1) ^ 0)]), 1.0, 1.0, 0.0, abs(1.0), 1.0, 1.0, 1.0, log(1.0), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, abs(1.0), 1.0, 0.0)))[1]), bvec2(false, true)))))), vec2(_GLF_FUZZED(158.812), _GLF_FUZZED(-30.96)), bvec2(false, false)))))).x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) ? _GLF_IDENTITY(_GLF_IDENTITY(4, 0 + _GLF_IDENTITY((_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, 0 | (4))))), ((4)) >> 0)), (false ? _GLF_IDENTITY(_GLF_FUZZED((int(true) * -10226)), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED((int(true) * -10226)), _GLF_IDENTITY(0 ^ (_GLF_FUZZED((int(true) * -10226))), clamp(0 ^ (_GLF_IDENTITY(_GLF_FUZZED((int(true) * -10226)), int(_GLF_IDENTITY(ivec2(_GLF_FUZZED((int(true) * -10226)), 0), (_GLF_IDENTITY(ivec2(_GLF_FUZZED((int(true) * -10226)), 0), (ivec2(_GLF_FUZZED((int(true) * -10226)), 0)) | ivec2(0, 0))) - (ivec2(0, 0) << _GLF_IDENTITY(ivec2(5), ivec2(5))))))), 0 ^ (_GLF_FUZZED((_GLF_IDENTITY(int(true) * -10226, (int(true) * -10226) << 0)))), _GLF_IDENTITY(0 ^ (_GLF_FUZZED((int(_GLF_IDENTITY(true, ! (! (true)))) * -10226))), max(0 ^ (_GLF_FUZZED((int(true) * -10226))), 0 ^ (_GLF_FUZZED((int(true) * -10226))))))))))) : 4)) : _GLF_FUZZED(27663)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)), false, false, true))) ? _GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (4)), (false ? _GLF_FUZZED(_GLF_IDENTITY((int(true) * -10226), 0 | ((int(true) * -10226)))) : 4)) : _GLF_FUZZED(27663)), 0 | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (! (_GLF_IDENTITY(true, false || (true))))), (injectionSwitch.x < injectionSwitch.y)), false, false, true))) ? _GLF_IDENTITY(_GLF_IDENTITY(4, 0 + _GLF_IDENTITY((4), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3((4), 1, 0), clamp(ivec3((4), 1, 0), ivec3((4), 1, 0), ivec3((4), 1, 0)))), min(int(_GLF_IDENTITY(ivec3((4), 1, 0), clamp(ivec3((4), 1, 0), ivec3((4), 1, 0), ivec3((4), 1, 0)))), int(_GLF_IDENTITY(ivec3((4), 1, 0), clamp(ivec3((4), 1, 0), ivec3((4), 1, 0), ivec3((4), 1, 0)))))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY((int(true) * -10226), 0 | ((int(true) * -10226)))), max(_GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(int(true) * -10226, (int(true) * -10226) * 1)), 0 | ((_GLF_IDENTITY(int(true), ~ (~ (_GLF_IDENTITY(int(true), (false ? _GLF_FUZZED(-69527) : int(true)))))) * -10226)))), _GLF_FUZZED(_GLF_IDENTITY((int(true) * -10226), 0 | ((_GLF_IDENTITY(int(true) * -10226, 0 ^ (int(true) * -10226)))))))) : 4)) : _GLF_FUZZED(27663)), min((_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)), false, false, true))) ? _GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec2(4, 0)))) - 0))), (false ? _GLF_FUZZED(_GLF_IDENTITY((int(true) * -10226), 0 | ((int(true) * -10226)))) : 4)) : _GLF_FUZZED(27663)), (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), (false || (_GLF_IDENTITY(true, ! (! (true))))) && true)), (injectionSwitch.x < injectionSwitch.y)), false, false, _GLF_IDENTITY(true, (true) && true)))) ? _GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (4)), (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY((int(true) * -10226), 0 | ((int(true) * -10226))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY((int(true) * -10226), 0 | ((int(_GLF_IDENTITY(true, (true) || false)) * -10226))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((int(true) * -10226), 0 | ((int(true) * -10226))), min(_GLF_IDENTITY((int(true) * -10226), 0 | ((int(true) * -10226))), _GLF_IDENTITY((int(true) * -10226), 0 | ((int(true) * -10226))))))))))) : 4)) : _GLF_FUZZED(27663))))))))))), 64, _GLF_IDENTITY(4, ~ (~ (4))));
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
      }
    }
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      return;
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        return;
      }
    }
   else
    {
     atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, 0 | _GLF_IDENTITY((4), clamp((4), _GLF_IDENTITY((4), _GLF_IDENTITY(((4)) >> 0, int(int(((4)) >> 0)))), (4)))), 64, _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) >> 0), 4)));
     do
      {
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
