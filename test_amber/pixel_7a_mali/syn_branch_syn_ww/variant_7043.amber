#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_9 {
 uvec2 _f0;
 uint subgroup_size;
} ;

struct _GLF_struct_8 {
 uvec2 _f0;
} ;

struct _GLF_struct_6 {
 bvec3 _f0;
 vec3 _f1;
 bool _f2;
 float _f3;
 ivec4 _f4;
} ;

struct _GLF_struct_5 {
 mat2x4 _f0;
 uvec4 _f1;
 uvec3 _f2;
} ;

struct _GLF_struct_4 {
 uvec3 _f0;
 int _f1;
 uvec3 _f2;
} ;

struct _GLF_struct_7 {
 _GLF_struct_4 _f0;
 bvec2 _f1;
 _GLF_struct_5 _f2;
 ivec4 _f3;
 bool _f4;
 _GLF_struct_6 _f5;
} ;

struct _GLF_struct_2 {
 vec2 _f0;
 bvec4 _f1;
 mat3x2 _f2;
 vec3 _f3;
 mat2 _f4;
 int _f5;
 mat2 _f6;
} ;

struct _GLF_struct_1 {
 bvec3 _f0;
 bvec4 _f1;
 int _f2;
 bvec3 _f3;
 ivec4 _f4;
 uvec4 _f5;
 mat4x2 _f6;
} ;

struct _GLF_struct_0 {
 mat4x3 _f0;
 ivec4 _f1;
 vec4 _f2;
 mat2 _f3;
 ivec4 _f4;
 vec3 _f5;
 mat4x2 _f6;
} ;

struct _GLF_struct_3 {
 mat4 _f0;
 mat4x3 _f1;
 _GLF_struct_0 _f2;
 _GLF_struct_1 _f3;
 _GLF_struct_2 _f4;
 bvec4 _f5;
} ;

struct _GLF_struct_10 {
 _GLF_struct_3 _f0;
 uvec3 _f1;
 _GLF_struct_7 _f2;
 _GLF_struct_8 _f3;
 mat3 _f4;
 _GLF_struct_9 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-6.9)), vec2(_GLF_FUZZED(241.066), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_10 _GLF_struct_replacement_10 = _GLF_struct_10(_GLF_struct_3(mat4(_GLF_IDENTITY(1.0, sin(0.0) + (1.0))), mat4x3(1.0), _GLF_struct_0(mat4x3(1.0), ivec4(1), vec4(1.0), mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) + 0.0)), ivec4(1), vec3(1.0), mat4x2(1.0)), _GLF_struct_1(bvec3(true), bvec4(true), 1, _GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec2(true, false))))))))))), ivec4(1), _GLF_IDENTITY(uvec4(1u), (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u), (false ? _GLF_FUZZED(uvec4(21342u, 180058u, 187298u, 92204u)) : uvec4(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 1u * (1u))) / (1u ^ 0u))))), min(_GLF_IDENTITY(uvec4(1u), (false ? _GLF_FUZZED(uvec4(21342u, 180058u, 187298u, 92204u)) : uvec4(1u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(uvec4(21342u, 180058u, 187298u, 92204u)) : uvec4(1u))), min(_GLF_IDENTITY(uvec4(1u), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(uvec4(21342u, 180058u, 187298u, 92204u)) : uvec4(1u))), _GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(uvec4(21342u, 180058u, 187298u, 92204u)) : uvec4(1u))), (true ? _GLF_IDENTITY(uvec4(1u), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(uvec4(21342u, 180058u, 187298u, 92204u)) : uvec4(1u))) : _GLF_FUZZED(uvec4(1094u, 132884u, 106628u, 140137u)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u), (false ? _GLF_FUZZED(uvec4(21342u, 180058u, 187298u, 92204u)) : uvec4(_GLF_IDENTITY(1u, min(1u, 1u))))), (false ? _GLF_FUZZED(uvec4(_GLF_IDENTITY(64479u, (64479u) | (64479u)), 88997u, _GLF_IDENTITY(95277u, (_GLF_IDENTITY(95277u, (true ? 95277u : _GLF_FUZZED(clamp(subgroup_id, subgroup_id, subgroup_id))))) ^ (0u | 0u)), 13508u)) : _GLF_IDENTITY(uvec4(1u), (false ? _GLF_FUZZED(uvec4(21342u, 180058u, 187298u, 92204u)) : uvec4(1u)))))) / uvec4(1u, 1u, 1u, 1u), clamp((_GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) || false), false)), ! (! (bool(bvec2(_GLF_IDENTITY(false, (false) || false), false)))))))), ! (! (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) || false), false)), ! (! (bool(bvec2(_GLF_IDENTITY(false, (false) || false), false)))))))))))) ? _GLF_FUZZED(uvec4(21342u, 180058u, 187298u, _GLF_IDENTITY(92204u, (_GLF_IDENTITY(92204u, 0u | (92204u))) | 0u))) : uvec4(1u))), (false ? _GLF_FUZZED(uvec4(64479u, 88997u, 95277u, 13508u)) : _GLF_IDENTITY(uvec4(1u), (false ? _GLF_FUZZED(uvec4(21342u, 180058u, 187298u, 92204u)) : uvec4(1u)))))) / uvec4(1u, 1u, 1u, 1u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u), (false ? _GLF_FUZZED(uvec4(21342u, 180058u, 187298u, 92204u)) : uvec4(1u))), (false ? _GLF_FUZZED(uvec4(64479u, 88997u, 95277u, 13508u)) : _GLF_IDENTITY(uvec4(1u), _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(uvec4(21342u, 180058u, 187298u, 92204u)) : uvec4(1u), (false ? _GLF_FUZZED(uvec4(21342u, 180058u, _GLF_IDENTITY(187298u, clamp(187298u, _GLF_IDENTITY(187298u, max(187298u, 187298u)), 187298u)), 92204u)) : uvec4(1u)) | (false ? _GLF_FUZZED(uvec4(21342u, 180058u, 187298u, 92204u)) : uvec4(1u)))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(false ? _GLF_FUZZED(uvec4(21342u, 180058u, 187298u, 92204u)) : uvec4(1u), (false ? _GLF_FUZZED(uvec4(21342u, 180058u, _GLF_IDENTITY(187298u, clamp(187298u, _GLF_IDENTITY(187298u, max(187298u, 187298u)), 187298u)), 92204u)) : uvec4(1u)) | (false ? _GLF_FUZZED(uvec4(21342u, 180058u, 187298u, 92204u)) : uvec4(1u))))), (~ ((_GLF_IDENTITY(false ? _GLF_FUZZED(uvec4(21342u, 180058u, 187298u, 92204u)) : uvec4(1u), (false ? _GLF_FUZZED(uvec4(21342u, 180058u, _GLF_IDENTITY(187298u, clamp(187298u, _GLF_IDENTITY(187298u, max(187298u, 187298u)), 187298u)), 92204u)) : uvec4(1u)) | (false ? _GLF_FUZZED(uvec4(21342u, 180058u, 187298u, 92204u)) : uvec4(1u)))))) ^ uvec4(0u, 0u, 0u, 0u)))))))) / uvec4(1u, 1u, 1u, 1u), max(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u), (false ? _GLF_FUZZED(uvec4(21342u, 180058u, 187298u, 92204u)) : uvec4(1u))), (false ? _GLF_FUZZED(uvec4(64479u, 88997u, 95277u, 13508u)) : _GLF_IDENTITY(uvec4(1u), (false ? _GLF_FUZZED(uvec4(21342u, 180058u, 187298u, 92204u)) : uvec4(1u)))))) / uvec4(1u, 1u, 1u, 1u), ((_GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u), (false ? _GLF_FUZZED(uvec4(21342u, 180058u, 187298u, 92204u)) : uvec4(1u))), (false ? _GLF_FUZZED(uvec4(_GLF_IDENTITY(64479u, clamp(64479u, _GLF_IDENTITY(64479u, 0u ^ (64479u)), 64479u)), 88997u, 95277u, 13508u)) : _GLF_IDENTITY(uvec4(1u), (false ? _GLF_FUZZED(uvec4(21342u, _GLF_IDENTITY(180058u, min(180058u, 180058u)), 187298u, 92204u)) : uvec4(1u)))))) / uvec4(1u, 1u, 1u, 1u)) | uvec4(0u, 0u, 0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u), (false ? _GLF_FUZZED(uvec4(21342u, 180058u, 187298u, 92204u)) : uvec4(1u))), (false ? _GLF_FUZZED(_GLF_IDENTITY(uvec4(64479u, 88997u, 95277u, 13508u), uvec4(1u, 1u, 1u, 1u) * (uvec4(64479u, 88997u, 95277u, 13508u)))) : _GLF_IDENTITY(uvec4(1u), (false ? _GLF_FUZZED(uvec4(_GLF_IDENTITY(21342u, ~ (_GLF_IDENTITY(~ (21342u), (true ? ~ (21342u) : _GLF_FUZZED(uint(true)))))), 180058u, 187298u, 92204u)) : uvec4(1u)))))) / uvec4(1u, 1u, 1u, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u), (false ? _GLF_FUZZED(uvec4(21342u, 180058u, 187298u, 92204u)) : uvec4(1u))), (false ? _GLF_FUZZED(uvec4(64479u, 88997u, 95277u, 13508u)) : _GLF_IDENTITY(uvec4(1u), (false ? _GLF_FUZZED(uvec4(21342u, 180058u, 187298u, 92204u)) : uvec4(1u)))))) / uvec4(1u, 1u, _GLF_IDENTITY(1u, max(1u, 1u)), 1u))))))) * uvec4(1u, 1u, 1u, 1u)), mat4x2(1.0)), _GLF_struct_2(vec2(1.0), bvec4(true), mat3x2(1.0), vec3(1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY((mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0), transpose(transpose((mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(mat2(mat3x4(mat2(1.0))), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(mat3x4(mat2(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (1.0) - _GLF_ZERO(0.0, injectionSwitch.x)))), mix(float(1.0), float(_GLF_FUZZED(3.2)), bool(false))), _GLF_IDENTITY(1.0, max(1.0, 1.0))))))))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(mat3x4(mat2(1.0))), _GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0) + (mat2(mat3x4(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0 + (_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))), clamp(0.0 + (_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))), 0.0 + (_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))), 0.0 + (_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))))))))))), (mat2(0.0, 0.0, 0.0, 0.0) + (mat2(mat3x4(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0 + (_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))), clamp(0.0 + (_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))), 0.0 + (_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))), 0.0 + (_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))), clamp(max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))), max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))), max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))))))))))))) - mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(mat2(mat3x4(mat2(1.0))), mat2(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat2(mat3x4(mat2(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), (true ? _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))) : _GLF_FUZZED(-629.440)))))))), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat2(mat3x4(mat2(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), (true ? _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))) : _GLF_FUZZED(-629.440)))))))), (mat2(mat3x4(mat2(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), (true ? _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))) : _GLF_FUZZED(-629.440))))))))) / mat2(1.0, 1.0, 1.0, 1.0))), mat2(mat2(transpose(_GLF_IDENTITY(mat2(mat3x4(mat2(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), _GLF_IDENTITY((true ? _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))), (max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))) / 1.0)) : _GLF_FUZZED(-629.440)), min((true ? _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))), (max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))) / 1.0)) : _GLF_FUZZED(-629.440)), (true ? _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))), (max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))) / 1.0)) : _GLF_FUZZED(-629.440)))))))))), (mat2(mat3x4(mat2(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), (true ? _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))) : _GLF_FUZZED(-629.440))), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), (true ? _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))) : _GLF_FUZZED(-629.440))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), (true ? _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))) : _GLF_FUZZED(-629.440))))))))))) / mat2(1.0, 1.0, 1.0, 1.0))))))))))) - mat2(0.0, 0.0, 0.0, 0.0)), (_GLF_IDENTITY(mat2(mat3x4(mat2(1.0))), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(mat3x4(mat2(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))))))))))) + mat2(0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED((mat3x2(mat3x4(-1.9, -48.21, -5926.0851, 3.6, 74.21, -994.776, 45.51, 2.2, 700.859, 3.5, 1.8, -926.275)) * mat2x3(-14.79, 6.6, 4718.8567, -40.57, -2.6, -4.2)))))), (false ? _GLF_FUZZED(mat2(-6.7, -9.8, 97.41, -3.1)) : _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY((mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0), transpose(transpose((_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0))) + mat2(0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(mat2(mat3x4(mat2(1.0))), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(mat3x4(mat2(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - _GLF_ZERO(0.0, injectionSwitch.x)), mix(float(_GLF_IDENTITY(1.0, (1.0) - _GLF_ZERO(0.0, injectionSwitch.x))), float(_GLF_FUZZED(16.67)), bool(false))))), mix(float(1.0), float(_GLF_FUZZED(3.2)), _GLF_IDENTITY(bool(false), (bool(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(1.0, max(1.0, 1.0))))))))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(mat3x4(mat2(1.0))), _GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0) + (mat2(mat3x4(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0 + (_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))), clamp(0.0 + (_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))), 0.0 + (_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))), 0.0 + (_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))))), min(_GLF_IDENTITY(0.0 + (_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))), clamp(0.0 + (_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))), 0.0 + (_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))), 0.0 + (_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))))), _GLF_IDENTITY(0.0 + (_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))), clamp(0.0 + (_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))), 0.0 + (_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))), 0.0 + (_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))))))))))))), (mat2(0.0, 0.0, 0.0, 0.0) + (mat2(mat3x4(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0 + (_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))), clamp(0.0 + (_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))), 0.0 + (_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))), 0.0 + (_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))), clamp(max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))), max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))), _GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))), (true ? max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))) : _GLF_FUZZED(3598.7107))))))))))))))) - mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY((_GLF_IDENTITY(mat2(mat3x4(mat2(1.0))), mat2(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat2(mat3x4(mat2(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), (true ? _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))) : _GLF_FUZZED(-629.440)))))))), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat2(mat3x4(mat2(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), (true ? _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))) : _GLF_FUZZED(-629.440)))))))), (mat2(mat3x4(mat2(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), (true ? _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))) : _GLF_FUZZED(-629.440))))))))) / mat2(1.0, 1.0, 1.0, 1.0))), mat2(mat2(transpose(_GLF_IDENTITY(mat2(mat3x4(mat2(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), _GLF_IDENTITY((true ? _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))), (max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))) / 1.0)) : _GLF_FUZZED(-629.440)), min((true ? _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))), (max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))) / 1.0)) : _GLF_FUZZED(-629.440)), (true ? _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))), (max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))) / 1.0)) : _GLF_FUZZED(-629.440)))))))))), (mat2(mat3x4(mat2(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), (true ? _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))) : _GLF_FUZZED(-629.440))), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), (true ? _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))) : _GLF_FUZZED(-629.440))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), (true ? _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))) : _GLF_FUZZED(-629.440))))))))))) / mat2(1.0, 1.0, 1.0, 1.0))))))))))) - mat2(0.0, 0.0, 0.0, 0.0), mat2(_GLF_IDENTITY(mat4((_GLF_IDENTITY(mat2(mat3x4(mat2(1.0))), mat2(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat2(mat3x4(mat2(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), (true ? _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))) : _GLF_FUZZED(-629.440)))))))), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat2(mat3x4(mat2(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), (true ? _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))) : _GLF_FUZZED(-629.440)))))))), (mat2(mat3x4(mat2(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), (true ? _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))) : _GLF_FUZZED(-629.440))))))))) / mat2(1.0, 1.0, 1.0, 1.0))), mat2(mat2(transpose(_GLF_IDENTITY(mat2(mat3x4(mat2(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), _GLF_IDENTITY((true ? _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))), (max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))) / 1.0)) : _GLF_FUZZED(-629.440)), min((true ? _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))), (max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))) / 1.0)) : _GLF_FUZZED(-629.440)), (true ? _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))), (max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))) / 1.0)) : _GLF_FUZZED(-629.440)))))))))), (mat2(mat3x4(mat2(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), (true ? _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))) : _GLF_FUZZED(-629.440))), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), (true ? _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))) : _GLF_FUZZED(-629.440))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), (true ? _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))) : _GLF_FUZZED(-629.440))))))))))) / mat2(1.0, 1.0, 1.0, 1.0))))))))))) - mat2(0.0, 0.0, 0.0, 0.0)), (mat4((_GLF_IDENTITY(mat2(mat3x4(mat2(1.0))), mat2(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat2(mat3x4(mat2(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), (true ? _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))) : _GLF_FUZZED(-629.440)))))))), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat2(mat3x4(mat2(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), (true ? _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))) : _GLF_FUZZED(-629.440)))))))), (mat2(mat3x4(mat2(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), (true ? _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))) : _GLF_FUZZED(-629.440))))))))) / mat2(1.0, 1.0, 1.0, 1.0))), mat2(mat2(transpose(_GLF_IDENTITY(mat2(mat3x4(mat2(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), _GLF_IDENTITY((true ? _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))), (max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))) / 1.0)) : _GLF_FUZZED(-629.440)), min((true ? _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))), (max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))) / 1.0)) : _GLF_FUZZED(-629.440)), (true ? _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))), (max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))) / 1.0)) : _GLF_FUZZED(-629.440)))))))))), (mat2(mat3x4(mat2(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), (true ? _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))) : _GLF_FUZZED(-629.440))), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), (true ? _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))) : _GLF_FUZZED(-629.440))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), (true ? _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))) : _GLF_FUZZED(-629.440))))))))))) / mat2(1.0, 1.0, 1.0, 1.0))))))))))) - mat2(0.0, 0.0, 0.0, 0.0))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), (_GLF_IDENTITY(mat2(mat3x4(mat2(1.0))), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(mat3x4(mat2(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))))))))))) + mat2(0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED((mat3x2(mat3x4(-1.9, -48.21, -5926.0851, 3.6, 74.21, -994.776, 45.51, 2.2, 700.859, 3.5, 1.8, -926.275)) * mat2x3(-14.79, 6.6, 4718.8567, -40.57, -2.6, -4.2)))))))), 1, mat2(1.0)), bvec4(true)), uvec3(1u), _GLF_struct_7(_GLF_struct_4(uvec3(1u), 1, _GLF_IDENTITY(uvec3(1u), ~ (~ (uvec3(1u))))), bvec2(true), _GLF_struct_5(mat2x4(1.0), uvec4(1u), uvec3(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))))), ivec4(_GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-14193) : 1)), 1, 1)))), _GLF_IDENTITY(true, ! (! (true))), _GLF_struct_6(bvec3(true), vec3(1.0), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), bool(_GLF_IDENTITY(bool(bool(bool(true))), bool(bvec4(bool(bool(bool(true))), true, true, false)))))), 1.0, ivec4(1))), _GLF_struct_8(uvec2(1u)), mat3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), mix(float(_GLF_IDENTITY((1.0), ((1.0)) / 1.0)), float(_GLF_FUZZED((-9.3 - 5.1))), bool(false))) - 0.0)) / 1.0), float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) - 0.0)) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0)), vec3(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), clamp(_GLF_IDENTITY((0.0), _GLF_IDENTITY(0.0, 0.0 + (0.0)) + ((0.0))), (0.0), (0.0))) / 1.0), 0.0, 0.0)), 0.0, 1.0)), clamp(dot(vec3(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), (1.0) * 1.0)), vec3(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), clamp(_GLF_IDENTITY((0.0), 0.0 + ((0.0))), (0.0), (0.0))) / 1.0), 0.0, 0.0)), 0.0, 1.0)), dot(vec3(0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0)), vec3(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), clamp(_GLF_IDENTITY((0.0), 0.0 + ((0.0))), (0.0), (0.0))) / 1.0), 0.0, 0.0)), 0.0, 1.0)), dot(vec3(0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0)), vec3(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY((0.0), ((0.0)) - 0.0), clamp(_GLF_IDENTITY((0.0), 0.0 + ((0.0))), (0.0), _GLF_IDENTITY((0.0), clamp((0.0), (0.0), (0.0))))) / 1.0), 0.0, 0.0)), 0.0, 1.0)))), dot(vec3(0.0, 0.0, 1.0), vec3(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(vec4(0.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(88.98)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), 0.0, 1.0))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, float(float(0.0))), 1.0), mat3(1.0) * (mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), (_GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(0.0, max(0.0, 0.0)))) / 1.0), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, 0.0, 1.0), min(vec3(0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)), 1.0, 1.0), transpose(transpose(mat3x2(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)), 1.0, 1.0)))))), 1.0), vec3(0.0, 0.0, 1.0)))), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-454.258)), bool(false))), 0.0)), 0.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) * 1.0)) + log(1.0)), 1.0, 1.0, 0.0, 1.0)))))), _GLF_struct_9(uvec2(1u), gl_SubgroupSize));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-30.04) : injectionSwitch.y))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), true && (bool(true))))))), (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, _GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_local_id) : workgroup_size)))) * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = subgroup_id * _GLF_struct_replacement_10._f5.subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), ! _GLF_IDENTITY((! (false || (_GLF_DEAD(false)))), ! (! _GLF_IDENTITY((_GLF_IDENTITY((! (false || (_GLF_DEAD(false)))), ((! _GLF_IDENTITY((false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), false))))))), bool(bvec2((false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), false))))))), true))))) && true)), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY((! (false || (_GLF_DEAD(false)))), ((! _GLF_IDENTITY((false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), false))))))), bool(bvec2((false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), false))))))), true))))) && true)), true)), true && (bool(bvec2((_GLF_IDENTITY((! (false || (_GLF_DEAD(false)))), ((! _GLF_IDENTITY((false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), false))))))), bool(bvec2((false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), false))))))), true))))) && true)), true))))))))), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), ! _GLF_IDENTITY((! (false || (_GLF_DEAD(false)))), ! (! _GLF_IDENTITY((_GLF_IDENTITY((! (false || (_GLF_DEAD(false)))), ((! _GLF_IDENTITY((false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), false))))))), bool(bvec2((false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), false))))))), true))))) && true)), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY((! (false || (_GLF_DEAD(false)))), ((! _GLF_IDENTITY((false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), false))))))), bool(bvec2((false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), false))))))), true))))) && true)), true)), true && (bool(bvec2((_GLF_IDENTITY((! (false || (_GLF_DEAD(false)))), ((! _GLF_IDENTITY((false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), false))))))), bool(bvec2((false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), false))))))), true))))) && true)), true))))))))), false, false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(injectionSwitch[1], float(mat4x3(injectionSwitch[1], 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)))) * 1.0))).y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((injectionSwitch.x > injectionSwitch.y)))))) && true))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-4.1)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, mix(_GLF_IDENTITY(float(injectionSwitch.x), (_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(injectionSwitch.x), float(injectionSwitch.x)))) - 0.0), float(_GLF_FUZZED(6.2)), bool(false))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) || false)))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true, true))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   return;
  }
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), bool(bvec3(! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(151.042, -896.050)))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
      barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), ! (! (bool(bvec2(_GLF_DEAD(false), true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(6509.0100), _GLF_FUZZED(1.1)), bvec2(false, false))).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), clamp(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1))), (subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))))), ((subgroup_local_id + 1)) | ((subgroup_local_id + _GLF_IDENTITY(1, (1) << 0)))))) % _GLF_struct_replacement_10._f5.subgroup_size), clamp(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (true ? ~ (1) : _GLF_FUZZED(-72486))))), min(subgroup_local_id + 1, subgroup_local_id + 1)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (true ? ~ (1) : _GLF_FUZZED(-72486))))), min(subgroup_local_id + 1, subgroup_local_id + 1)), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (true ? ~ (1) : _GLF_FUZZED(-72486))))), min(subgroup_local_id + 1, subgroup_local_id + 1))) << 0u)))) | 0u)) % _GLF_struct_replacement_10._f5.subgroup_size), 0u | (((subgroup_local_id + 1) % _GLF_struct_replacement_10._f5.subgroup_size))), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | 0u), (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | 0u)) | (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | 0u)))))) % _GLF_struct_replacement_10._f5.subgroup_size), _GLF_IDENTITY((_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f5.subgroup_size), ~ (~ (((subgroup_local_id + 1) % _GLF_struct_replacement_10._f5.subgroup_size))))) >> 0u, _GLF_IDENTITY(~ (~ _GLF_IDENTITY(((_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_10._f5.subgroup_size, (_GLF_struct_replacement_10._f5.subgroup_size) / _GLF_IDENTITY(1u, (1u) | 0u)), uint(uvec3(_GLF_struct_replacement_10._f5.subgroup_size, 1u, 1u)))), ~ (~ (((subgroup_local_id + 1) % _GLF_struct_replacement_10._f5.subgroup_size))))) >> 0u), clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1))) % _GLF_IDENTITY(_GLF_struct_replacement_10._f5.subgroup_size, uint(uvec3(_GLF_struct_replacement_10._f5.subgroup_size, 1u, 1u)))), ~ (~ (((subgroup_local_id + 1) % _GLF_struct_replacement_10._f5.subgroup_size))))), _GLF_IDENTITY(uint(uint((_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1))) % _GLF_IDENTITY(_GLF_struct_replacement_10._f5.subgroup_size, uint(uvec3(_GLF_struct_replacement_10._f5.subgroup_size, 1u, 1u)))), ~ (~ (((subgroup_local_id + 1) % _GLF_struct_replacement_10._f5.subgroup_size))))))), min(uint(uint((_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1))) % _GLF_IDENTITY(_GLF_struct_replacement_10._f5.subgroup_size, uint(uvec3(_GLF_struct_replacement_10._f5.subgroup_size, 1u, 1u)))), ~ (~ (((subgroup_local_id + 1) % _GLF_struct_replacement_10._f5.subgroup_size))))))), uint(uint((_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1))) % _GLF_IDENTITY(_GLF_struct_replacement_10._f5.subgroup_size, uint(uvec3(_GLF_struct_replacement_10._f5.subgroup_size, 1u, 1u)))), ~ (~ (((subgroup_local_id + 1) % _GLF_struct_replacement_10._f5.subgroup_size)))))))))), ((_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_struct_replacement_10._f5.subgroup_size, uint(uvec3(_GLF_struct_replacement_10._f5.subgroup_size, 1u, _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, ~ (~ (1u))))))))), ~ (~ _GLF_IDENTITY((((subgroup_local_id + 1) % _GLF_struct_replacement_10._f5.subgroup_size)), 1u * (_GLF_IDENTITY((((subgroup_local_id + 1) % _GLF_struct_replacement_10._f5.subgroup_size)), ~ (~ ((((subgroup_local_id + 1) % _GLF_struct_replacement_10._f5.subgroup_size))))))))))) << 0u) >> 0u), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1))) % _GLF_IDENTITY(_GLF_struct_replacement_10._f5.subgroup_size, uint(uvec3(_GLF_struct_replacement_10._f5.subgroup_size, 1u, 1u)))), ~ (~ (((subgroup_local_id + 1) % _GLF_struct_replacement_10._f5.subgroup_size))))), _GLF_IDENTITY(uint(uint((_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1))) % _GLF_IDENTITY(_GLF_struct_replacement_10._f5.subgroup_size, uint(uvec3(_GLF_struct_replacement_10._f5.subgroup_size, 1u, 1u)))), ~ (~ (((subgroup_local_id + 1) % _GLF_struct_replacement_10._f5.subgroup_size))))))), min(uint(uint((_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1))) % _GLF_IDENTITY(_GLF_struct_replacement_10._f5.subgroup_size, uint(uvec3(_GLF_struct_replacement_10._f5.subgroup_size, 1u, 1u)))), ~ (~ (((subgroup_local_id + 1) % _GLF_struct_replacement_10._f5.subgroup_size))))))), uint(uint((_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1))) % _GLF_IDENTITY(_GLF_struct_replacement_10._f5.subgroup_size, uint(uvec3(_GLF_struct_replacement_10._f5.subgroup_size, 1u, 1u)))), ~ (~ (((subgroup_local_id + 1) % _GLF_struct_replacement_10._f5.subgroup_size)))))))))), ((_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_struct_replacement_10._f5.subgroup_size, uint(uvec3(_GLF_struct_replacement_10._f5.subgroup_size, 1u, _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, ~ (~ (1u))))))))), ~ (~ _GLF_IDENTITY((((subgroup_local_id + 1) % _GLF_struct_replacement_10._f5.subgroup_size)), 1u * (_GLF_IDENTITY((((subgroup_local_id + 1) % _GLF_struct_replacement_10._f5.subgroup_size)), ~ (~ ((((subgroup_local_id + 1) % _GLF_struct_replacement_10._f5.subgroup_size))))))))))) << 0u) >> 0u), max((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1))) % _GLF_IDENTITY(_GLF_struct_replacement_10._f5.subgroup_size, uint(uvec3(_GLF_struct_replacement_10._f5.subgroup_size, 1u, 1u)))), ~ (~ (((subgroup_local_id + 1) % _GLF_struct_replacement_10._f5.subgroup_size))))), _GLF_IDENTITY(uint(uint((_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1))) % _GLF_IDENTITY(_GLF_struct_replacement_10._f5.subgroup_size, uint(uvec3(_GLF_struct_replacement_10._f5.subgroup_size, 1u, 1u)))), ~ (~ (((subgroup_local_id + 1) % _GLF_struct_replacement_10._f5.subgroup_size))))))), min(uint(uint((_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1))) % _GLF_IDENTITY(_GLF_struct_replacement_10._f5.subgroup_size, uint(uvec3(_GLF_struct_replacement_10._f5.subgroup_size, 1u, 1u)))), ~ (~ (((subgroup_local_id + 1) % _GLF_struct_replacement_10._f5.subgroup_size))))))), uint(uint((_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1))) % _GLF_IDENTITY(_GLF_struct_replacement_10._f5.subgroup_size, uint(uvec3(_GLF_struct_replacement_10._f5.subgroup_size, 1u, 1u)))), ~ (~ (((subgroup_local_id + 1) % _GLF_struct_replacement_10._f5.subgroup_size)))))))))), ((_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_struct_replacement_10._f5.subgroup_size, uint(uvec3(_GLF_struct_replacement_10._f5.subgroup_size, 1u, _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, ~ (~ (1u))))))))), ~ (~ _GLF_IDENTITY((((subgroup_local_id + 1) % _GLF_struct_replacement_10._f5.subgroup_size)), 1u * (_GLF_IDENTITY((((subgroup_local_id + 1) % _GLF_struct_replacement_10._f5.subgroup_size)), ~ (~ ((((subgroup_local_id + 1) % _GLF_struct_replacement_10._f5.subgroup_size))))))))))) << 0u) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1))) % _GLF_IDENTITY(_GLF_struct_replacement_10._f5.subgroup_size, uint(uvec3(_GLF_struct_replacement_10._f5.subgroup_size, 1u, 1u)))), ~ (~ (((subgroup_local_id + 1) % _GLF_struct_replacement_10._f5.subgroup_size))))), _GLF_IDENTITY(uint(uint((_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1))) % _GLF_IDENTITY(_GLF_struct_replacement_10._f5.subgroup_size, uint(uvec3(_GLF_struct_replacement_10._f5.subgroup_size, 1u, 1u)))), ~ (~ (((subgroup_local_id + 1) % _GLF_struct_replacement_10._f5.subgroup_size))))))), min(uint(uint((_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1))) % _GLF_IDENTITY(_GLF_struct_replacement_10._f5.subgroup_size, uint(uvec3(_GLF_struct_replacement_10._f5.subgroup_size, 1u, 1u)))), ~ (~ (((subgroup_local_id + 1) % _GLF_struct_replacement_10._f5.subgroup_size))))))), uint(uint((_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1))) % _GLF_IDENTITY(_GLF_struct_replacement_10._f5.subgroup_size, uint(uvec3(_GLF_struct_replacement_10._f5.subgroup_size, 1u, 1u)))), ~ (~ (((subgroup_local_id + 1) % _GLF_struct_replacement_10._f5.subgroup_size)))))))))), ((_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_struct_replacement_10._f5.subgroup_size, uint(uvec3(_GLF_struct_replacement_10._f5.subgroup_size, 1u, _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, ~ (~ (1u))))))))), ~ (~ _GLF_IDENTITY((((subgroup_local_id + 1) % _GLF_struct_replacement_10._f5.subgroup_size)), 1u * (_GLF_IDENTITY((((subgroup_local_id + 1) % _GLF_struct_replacement_10._f5.subgroup_size)), ~ (~ ((((subgroup_local_id + 1) % _GLF_struct_replacement_10._f5.subgroup_size))))))))))) << 0u) >> 0u))))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_struct_replacement_10._f5.subgroup_size, uint(uvec3(_GLF_struct_replacement_10._f5.subgroup_size, 1u, 1u)))), ~ (~ (((subgroup_local_id + 1) % _GLF_struct_replacement_10._f5.subgroup_size))))), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_struct_replacement_10._f5.subgroup_size, uint(uvec3(_GLF_struct_replacement_10._f5.subgroup_size, 1u, 1u)))), ~ (~ (((subgroup_local_id + 1) % _GLF_struct_replacement_10._f5.subgroup_size))))), 0u ^ ((_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_struct_replacement_10._f5.subgroup_size, uint(uvec3(_GLF_struct_replacement_10._f5.subgroup_size, 1u, 1u)))), ~ (~ (((subgroup_local_id + 1) % _GLF_struct_replacement_10._f5.subgroup_size))))))))) >> 0u), (false ? _GLF_FUZZED(workgroup_id) : ((_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_struct_replacement_10._f5.subgroup_size, uint(uvec3(_GLF_struct_replacement_10._f5.subgroup_size, 1u, _GLF_IDENTITY(1u, (1u) - 0u))))), ~ (~ (((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) % _GLF_struct_replacement_10._f5.subgroup_size))))) >> 0u))), ((_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_struct_replacement_10._f5.subgroup_size, uint(uvec3(_GLF_struct_replacement_10._f5.subgroup_size, 1u, 1u)))), ~ (~ (((subgroup_local_id + 1) % _GLF_struct_replacement_10._f5.subgroup_size))))) >> 0u)))), 0u | (~ (~ _GLF_IDENTITY(((_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_10._f5.subgroup_size, (_GLF_struct_replacement_10._f5.subgroup_size) / 1u), uint(uvec3(_GLF_struct_replacement_10._f5.subgroup_size, 1u, 1u)))), ~ (~ (((subgroup_local_id + 1) % _GLF_struct_replacement_10._f5.subgroup_size))))) >> 0u), clamp(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_struct_replacement_10._f5.subgroup_size, uint(uvec3(_GLF_struct_replacement_10._f5.subgroup_size, 1u, 1u)))), ~ (~ (((subgroup_local_id + 1) % _GLF_struct_replacement_10._f5.subgroup_size))))), ((_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1) % _GLF_IDENTITY(_GLF_struct_replacement_10._f5.subgroup_size, uint(uvec3(_GLF_struct_replacement_10._f5.subgroup_size, 1u, 1u)))), ~ (~ (((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1) % _GLF_IDENTITY(_GLF_struct_replacement_10._f5.subgroup_size, uint(uvec3(_GLF_struct_replacement_10._f5.subgroup_size, 1u, 1u))))))), ~ (~ (((subgroup_local_id + 1) % _GLF_struct_replacement_10._f5.subgroup_size)))))) << 0u) >> 0u), ((_GLF_IDENTITY((_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_struct_replacement_10._f5.subgroup_size, uint(uvec3(_GLF_struct_replacement_10._f5.subgroup_size, 1u, 1u)))), ~ (~ (((subgroup_local_id + 1) % _GLF_struct_replacement_10._f5.subgroup_size))))), ((_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1) % _GLF_IDENTITY(_GLF_struct_replacement_10._f5.subgroup_size, uint(uvec3(_GLF_struct_replacement_10._f5.subgroup_size, 1u, 1u)))), ~ (~ (((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1) % _GLF_IDENTITY(_GLF_struct_replacement_10._f5.subgroup_size, uint(uvec3(_GLF_struct_replacement_10._f5.subgroup_size, 1u, 1u))))))), ~ (~ (((subgroup_local_id + 1) % _GLF_struct_replacement_10._f5.subgroup_size)))))) << 0u) >> 0u)) | ((_GLF_IDENTITY((_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_struct_replacement_10._f5.subgroup_size, uint(uvec3(_GLF_struct_replacement_10._f5.subgroup_size, 1u, 1u)))), ~ (~ (((subgroup_local_id + 1) % _GLF_struct_replacement_10._f5.subgroup_size))))), ((_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1) % _GLF_IDENTITY(_GLF_struct_replacement_10._f5.subgroup_size, uint(uvec3(_GLF_struct_replacement_10._f5.subgroup_size, 1u, 1u)))), ~ (~ (((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1) % _GLF_IDENTITY(_GLF_struct_replacement_10._f5.subgroup_size, uint(uvec3(_GLF_struct_replacement_10._f5.subgroup_size, 1u, 1u))))))), ~ (~ (((subgroup_local_id + 1) % _GLF_struct_replacement_10._f5.subgroup_size)))))) << 0u) >> 0u))), _GLF_IDENTITY(((_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_struct_replacement_10._f5.subgroup_size, uint(uvec3(_GLF_struct_replacement_10._f5.subgroup_size, 1u, 1u)))), ~ (~ (((subgroup_local_id + 1) % _GLF_struct_replacement_10._f5.subgroup_size))))) >> 0u), (false ? _GLF_FUZZED(workgroup_id) : ((_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, (1) ^ 0)))) % _GLF_IDENTITY(_GLF_struct_replacement_10._f5.subgroup_size, uint(uvec3(_GLF_struct_replacement_10._f5.subgroup_size, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) - 0u), 0u | (_GLF_IDENTITY(1u, (1u) - 0u))))))), _GLF_IDENTITY(~ (~ (((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) % _GLF_struct_replacement_10._f5.subgroup_size))), max(~ (~ (((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) % _GLF_struct_replacement_10._f5.subgroup_size))), ~ (~ (((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) % _GLF_struct_replacement_10._f5.subgroup_size))))))) >> 0u))), ((_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_struct_replacement_10._f5.subgroup_size, uint(uvec3(_GLF_struct_replacement_10._f5.subgroup_size, 1u, 1u)))), ~ (~ ((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f5.subgroup_size, uint(_GLF_IDENTITY(uvec3((subgroup_local_id + 1) % _GLF_struct_replacement_10._f5.subgroup_size, 1u, 0u), (uvec3((subgroup_local_id + 1) % _GLF_struct_replacement_10._f5.subgroup_size, 1u, 0u)) ^ uvec3(0u, 0u, 0u))))))))) >> 0u)))))))), _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f5.subgroup_size), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) | (1))) % _GLF_struct_replacement_10._f5.subgroup_size, 0u ^ ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f5.subgroup_size))), (false ? _GLF_FUZZED(virtual_gid) : ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f5.subgroup_size)))), ((_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) | (1))) % _GLF_struct_replacement_10._f5.subgroup_size, 0u ^ ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f5.subgroup_size))), (false ? _GLF_FUZZED(virtual_gid) : ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f5.subgroup_size))))) - 0u), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f5.subgroup_size), (false ? _GLF_FUZZED(virtual_gid) : ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f5.subgroup_size))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f5.subgroup_size), (false ? _GLF_FUZZED(virtual_gid) : ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f5.subgroup_size))) : _GLF_FUZZED(workgroup_id)))), (true ? _GLF_IDENTITY(~ (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f5.subgroup_size), (_GLF_IDENTITY(false ? _GLF_FUZZED(virtual_gid) : ((subgroup_local_id + _GLF_IDENTITY(1, 1 * (1))) % _GLF_struct_replacement_10._f5.subgroup_size), 0u ^ (_GLF_IDENTITY(false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f5.subgroup_size), min(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f5.subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f5.subgroup_size), (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f5.subgroup_size), max(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f5.subgroup_size), ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f5.subgroup_size)))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u * (false ? _GLF_FUZZED(virtual_gid) : ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_struct_replacement_10._f5.subgroup_size, _GLF_IDENTITY((_GLF_struct_replacement_10._f5.subgroup_size), min((_GLF_struct_replacement_10._f5.subgroup_size), (_GLF_struct_replacement_10._f5.subgroup_size))) << 0u))))))))), (~ (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f5.subgroup_size), (false ? _GLF_FUZZED(virtual_gid) : ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f5.subgroup_size))))) | 0u) : _GLF_FUZZED(161100u)))) >> 0u)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), ! (! (bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, true)), bvec3(bvec4(bvec3(bvec3(false, false, true)), true)))))))))), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false))))))))
          barrier();
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6.0)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              return;
             barrier();
            }
           return;
          }
         return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)))).x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 0.0)))))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false)))))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) || false))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) || false))), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) || false))), true, false, true))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) || false))), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) || false))), true, false, true))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) || false))), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))) || false))), true, false, true))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 0.0, sin(0.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))), injectionSwitch.y))) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 0.0, sin(0.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))), injectionSwitch.y))) || false)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 0.0, sin(0.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))), injectionSwitch.y))) || false))), ! (! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 0.0, sin(0.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))), injectionSwitch.y))) || false))))))))) && true)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) || false))), true, false, true))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true))))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if((_GLF_IDENTITY(subgroup_local_id % 2, ~ (~ (subgroup_local_id % _GLF_IDENTITY(2, (false ? _GLF_FUZZED(-79734) : 2)))))) == _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) << 0), 0)))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(109.275))), bool(bool(injectionSwitch.x > injectionSwitch.y))))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(109.275))), bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-79917) : _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1))))])).x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true)), (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true))) || false))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), (uint(2)) + 0u), 4, 64, _GLF_IDENTITY(4, (4) | 0));
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))).y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              return;
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-31.98)), vec2(_GLF_FUZZED(7751.9348), (injectionSwitch)[1]), bvec2(false, true))).y))))
          barrier();
         return;
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
