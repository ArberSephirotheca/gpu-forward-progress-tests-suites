#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, bool(_GLF_IDENTITY(bvec3(_injected_loop_counter != 0, true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_injected_loop_counter != 0, true, false)), bvec3(bvec3(bvec3(bvec3(_injected_loop_counter != 0, true, false)))))))))); _injected_loop_counter --)
      {
       return;
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint subgroup_size = gl_SubgroupSize;
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), (true && (injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false)))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   do
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | _GLF_IDENTITY((gl_NumWorkGroups), max(_GLF_IDENTITY((gl_NumWorkGroups), uvec3(uvec3((gl_NumWorkGroups)))), (gl_NumWorkGroups)))).x, clamp(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u))))))), max(_GLF_IDENTITY((gl_NumWorkGroups), uvec3(uvec3((gl_NumWorkGroups)))), (gl_NumWorkGroups)))).x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | _GLF_IDENTITY((gl_NumWorkGroups), max(_GLF_IDENTITY((gl_NumWorkGroups), uvec3(uvec3((gl_NumWorkGroups)))), (gl_NumWorkGroups)))).x, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | _GLF_IDENTITY((gl_NumWorkGroups), max(_GLF_IDENTITY((gl_NumWorkGroups), uvec3(uvec3((gl_NumWorkGroups)))), (gl_NumWorkGroups)))).x) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u | (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | _GLF_IDENTITY((gl_NumWorkGroups), max(_GLF_IDENTITY((gl_NumWorkGroups), uvec3(uvec3((gl_NumWorkGroups)))), (gl_NumWorkGroups)))).x)), _GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | _GLF_IDENTITY((gl_NumWorkGroups), max(_GLF_IDENTITY((gl_NumWorkGroups), uvec3(uvec3((gl_NumWorkGroups)))), _GLF_IDENTITY((gl_NumWorkGroups), (_GLF_IDENTITY((gl_NumWorkGroups), uvec3(uvec4((gl_NumWorkGroups), 0u)))) | (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)))))).x)), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)).x, max(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)).x, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)).x)), gl_NumWorkGroups.x));
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, 1 * (0))], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-6585.7299), _GLF_FUZZED(1234.7065)), bvec2(false, false))).x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((_GLF_IDENTITY(injectionSwitch / -9.3, (injectionSwitch / -9.3) / vec2(1.0, 1.0)))))), injectionSwitch)).x))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(384.719) : _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-9.1))))), injectionSwitch.x, injectionSwitch.x), clamp(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(384.719) : _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(-9.1, (-9.1) - 0.0))), (true ? (true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(-9.1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(-9.1, mix(float(_GLF_FUZZED(16.39)), float(_GLF_IDENTITY(-9.1, (false ? _GLF_FUZZED(9.2) : -9.1))), bool(true))), max(-9.1, -9.1)), _GLF_IDENTITY(-9.1, clamp(-9.1, -9.1, -9.1)), -9.1)))) : _GLF_FUZZED(-1.7)))))), injectionSwitch.x, injectionSwitch.x), (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(8.0) : clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(384.719, (false ? _GLF_FUZZED(4.4) : 384.719))) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-9.1))), (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-9.1)))) / 1.0))), injectionSwitch.x, injectionSwitch.x), min(false ? _GLF_FUZZED(8.0) : clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(384.719, (false ? _GLF_FUZZED(4.4) : 384.719))) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-9.1))), (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-9.1)))) / 1.0))), injectionSwitch.x, injectionSwitch.x), false ? _GLF_FUZZED(8.0) : clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(384.719, (false ? _GLF_FUZZED(4.4) : 384.719))) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-9.1))), (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-9.1)))) / 1.0))), injectionSwitch.x, injectionSwitch.x))), min(_GLF_IDENTITY(false ? _GLF_FUZZED(8.0) : clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(384.719, (false ? _GLF_FUZZED(4.4) : 384.719))) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-9.1))), (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-9.1)))) / 1.0))), injectionSwitch.x, injectionSwitch.x), min(false ? _GLF_FUZZED(8.0) : clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(384.719, (false ? _GLF_FUZZED(4.4) : 384.719))) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-9.1))), (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-9.1)))) / 1.0))), injectionSwitch.x, injectionSwitch.x), false ? _GLF_FUZZED(8.0) : clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(384.719, (false ? _GLF_FUZZED(4.4) : 384.719))) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-9.1))), (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-9.1)))) / 1.0))), injectionSwitch.x, injectionSwitch.x))), _GLF_IDENTITY(false ? _GLF_FUZZED(8.0) : clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(384.719, (false ? _GLF_FUZZED(4.4) : 384.719))) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-9.1))), (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-9.1)))) / 1.0))), injectionSwitch.x, injectionSwitch.x), min(false ? _GLF_FUZZED(8.0) : clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(384.719, (false ? _GLF_FUZZED(4.4) : 384.719))) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-9.1))), (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-9.1)))) / 1.0))), injectionSwitch.x, injectionSwitch.x), false ? _GLF_FUZZED(8.0) : clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(384.719, (false ? _GLF_FUZZED(4.4) : 384.719))) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-9.1))), (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-9.1)))) / 1.0))), injectionSwitch.x, injectionSwitch.x))))))), clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(384.719) : _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(-9.1)), clamp((_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-9.1), float(_GLF_IDENTITY(mat4x2(_GLF_FUZZED(-9.1), 1.0, 0.0, 1.0, 0.0, abs(1.0), cos(0.0), 0.0), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat4x2(_GLF_FUZZED(-9.1), 1.0, 0.0, 1.0, 0.0, abs(1.0), cos(0.0), 0.0), mat4x2(mat4(mat4x2(_GLF_FUZZED(-9.1), 1.0, 0.0, 1.0, 0.0, abs(1.0), cos(0.0), 0.0))))))))), _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(-9.1)), clamp((_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false))))) ? injectionSwitch.x : _GLF_FUZZED(-9.1)), (true ? injectionSwitch.x : _GLF_FUZZED(-9.1)), _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(-9.1)), float(mat2x3((true ? injectionSwitch.x : _GLF_FUZZED(-9.1)), 1.0, 1.0, 1.0, 1.0, 1.0))))), _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(-9.1)), _GLF_IDENTITY(clamp((true ? injectionSwitch.x : _GLF_FUZZED(-9.1)), (true ? injectionSwitch.x : _GLF_FUZZED(-9.1)), _GLF_IDENTITY((_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).x : _GLF_FUZZED(_GLF_IDENTITY(-9.1, (false ? _GLF_FUZZED(clamp(-418.954, -3.5, 996.959)) : _GLF_IDENTITY(-9.1, mix(float(_GLF_FUZZED(9530.3470)), float(-9.1), bool(true))))))), 1.0 * ((true ? injectionSwitch.x : _GLF_FUZZED(-9.1))))), (false ? _GLF_FUZZED(uintBitsToFloat(workgroup_size)) : clamp((true ? injectionSwitch.x : _GLF_FUZZED(-9.1)), (true ? injectionSwitch.x : _GLF_FUZZED(-9.1)), _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(-9.1)), 1.0 * ((_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-9.1), mix(float(_GLF_FUZZED(314.498)), float(_GLF_IDENTITY(_GLF_FUZZED(-9.1), _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(_GLF_FUZZED(-9.1), (_GLF_FUZZED(-9.1)) + 0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0)), float(mat3x4(float(mat2x4(_GLF_FUZZED(-9.1), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0), (mat3(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), float(vec2(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0), (mat3(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), float(vec3(float(_GLF_IDENTITY(mat3(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0), (mat3(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), 0.0, 1.0))), 0.0)))), 0.0, 1.0, 1.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - sqrt(0.0)), 1.0, 1.0, 0.0, 0.0))))), bool(true))), max(_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-9.1), mix(float(_GLF_FUZZED(314.498)), float(_GLF_IDENTITY(_GLF_FUZZED(-9.1), _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(_GLF_FUZZED(-9.1), (_GLF_FUZZED(-9.1)) + 0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0)), float(mat3x4(float(mat2x4(_GLF_FUZZED(-9.1), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0), (mat3(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), float(vec2(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0), (mat3(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), float(vec3(float(_GLF_IDENTITY(mat3(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0), (mat3(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), 0.0, 1.0))), 0.0)))), 0.0, 1.0, 1.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - sqrt(0.0)), 1.0, 1.0, 0.0, 0.0))))), bool(true))), (true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-9.1), mix(float(_GLF_FUZZED(314.498)), float(_GLF_IDENTITY(_GLF_FUZZED(-9.1), _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(_GLF_FUZZED(-9.1), (_GLF_FUZZED(-9.1)) + 0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0)), float(mat3x4(float(mat2x4(_GLF_FUZZED(-9.1), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0), (mat3(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), float(vec2(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0), (mat3(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), float(vec3(float(_GLF_IDENTITY(mat3(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0), (mat3(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), 0.0, 1.0))), 0.0)))), 0.0, 1.0, 1.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - sqrt(0.0)), 1.0, 1.0, 0.0, 0.0))))), bool(true)))) / 1.0), true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-9.1), mix(float(_GLF_FUZZED(314.498)), float(_GLF_IDENTITY(_GLF_FUZZED(-9.1), _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(_GLF_FUZZED(-9.1), (_GLF_FUZZED(-9.1)) + 0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0)), float(mat3x4(float(mat2x4(_GLF_FUZZED(-9.1), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0), (mat3(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), float(vec2(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0), (mat3(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), float(vec3(float(_GLF_IDENTITY(mat3(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0), (mat3(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), 0.0, 1.0))), 0.0)))), 0.0, 1.0, 1.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - sqrt(0.0)), 1.0, 1.0, 0.0, 0.0))))), bool(true))))))))))))))))), injectionSwitch.x, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (false ? _GLF_FUZZED(384.719) : _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x)) : _GLF_FUZZED(-9.1))))), injectionSwitch.x, injectionSwitch.x))), mix(_GLF_IDENTITY(float(_GLF_FUZZED(4.2)), clamp(float(_GLF_FUZZED(4.2)), float(_GLF_FUZZED(4.2)), _GLF_IDENTITY(float(_GLF_FUZZED(4.2)), clamp(float(_GLF_FUZZED(4.2)), float(_GLF_FUZZED(4.2)), float(_GLF_FUZZED(4.2)))))), float(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(384.719) : _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-9.1))))), injectionSwitch.x, injectionSwitch.x), clamp(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(384.719) : _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(-9.1, (-9.1) - 0.0))), (true ? (true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(-9.1, clamp(_GLF_IDENTITY(-9.1, max(-9.1, -9.1)), _GLF_IDENTITY(-9.1, clamp(-9.1, -9.1, -9.1)), -9.1)))) : _GLF_FUZZED(-1.7)))))), injectionSwitch.x, injectionSwitch.x), (_GLF_IDENTITY(false ? _GLF_FUZZED(8.0) : clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(384.719, (false ? _GLF_FUZZED(4.4) : 384.719))) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-9.1))), (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-9.1)))) / 1.0))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x), min(false ? _GLF_FUZZED(8.0) : clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(384.719, (false ? _GLF_FUZZED(4.4) : 384.719)), float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(384.719, (false ? _GLF_FUZZED(4.4) : 384.719)), 0.0, 0.0, 1.0, 1.0, 0.0), _GLF_IDENTITY(mat2(1.0) * (mat3x2(_GLF_IDENTITY(384.719, (false ? _GLF_FUZZED(4.4) : 384.719)), 0.0, 0.0, 1.0, 1.0, 0.0)), mat2(1.0) * (mat2(1.0) * (mat3x2(_GLF_IDENTITY(384.719, (false ? _GLF_FUZZED(4.4) : 384.719)), 0.0, 0.0, 1.0, 1.0, 0.0)))))))) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 0.0, 0.0))) : _GLF_FUZZED(-9.1))), (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-9.1)))) / 1.0))), injectionSwitch.x, injectionSwitch.x), false ? _GLF_FUZZED(8.0) : clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(384.719, (false ? _GLF_FUZZED(4.4) : 384.719))) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-9.1))), (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-9.1)))) / 1.0), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-9.1))), (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-9.1)))) / 1.0), 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), transpose(_GLF_IDENTITY(transpose(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-9.1))), (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-9.1)))) / 1.0), 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))), (transpose(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-9.1))), (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-9.1)))) / 1.0), 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))))) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), min(float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-9.1))), (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-9.1)))) / 1.0), 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), transpose(_GLF_IDENTITY(transpose(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-9.1))), (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-9.1)))) / 1.0), 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))), (transpose(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-9.1))), (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-9.1)))) / 1.0), 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))))) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-9.1))), (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-9.1)))) / 1.0), 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), transpose(_GLF_IDENTITY(transpose(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-9.1))), (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-9.1)))) / 1.0), 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))), (transpose(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-9.1))), (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-9.1)))) / 1.0), 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))))) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x))))), clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(384.719) : _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(-9.1)), clamp((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-9.1), float(_GLF_IDENTITY(mat4x2(_GLF_FUZZED(-9.1), 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-677.688)), float(0.0), bool(true))), 1.0, 0.0, abs(1.0), cos(0.0), 0.0), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat4x2(_GLF_FUZZED(-9.1), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(7457.5304) : 0.0)), abs(1.0), cos(0.0), 0.0), mat4x2(mat4(mat4x2(_GLF_FUZZED(-9.1), 1.0, 0.0, 1.0, 0.0, abs(1.0), cos(0.0), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(vec2(-9.8, 290.985).s)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(-9.1)), clamp((true ? injectionSwitch.x : _GLF_FUZZED(-9.1)), (true ? injectionSwitch.x : _GLF_FUZZED(-9.1)), _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(-9.1)), float(mat2x3((true ? injectionSwitch.x : _GLF_FUZZED(-9.1)), 1.0, 1.0, 1.0, 1.0, 1.0))))), _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(-9.1)), _GLF_IDENTITY(clamp((true ? injectionSwitch.x : _GLF_FUZZED(-9.1)), (true ? injectionSwitch.x : _GLF_FUZZED(-9.1)), _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(-9.1)), 1.0 * ((true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(-9.1, 0.0 + (-9.1))))))), (false ? _GLF_FUZZED(uintBitsToFloat(workgroup_size)) : clamp((true ? injectionSwitch.x : _GLF_FUZZED(-9.1)), (true ? injectionSwitch.x : _GLF_FUZZED(-9.1)), _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(-9.1)), 1.0 * ((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-9.1), _GLF_IDENTITY(mix(float(_GLF_FUZZED(314.498)), float(_GLF_IDENTITY(_GLF_FUZZED(-9.1), _GLF_IDENTITY(float(mat2x4(_GLF_FUZZED(-9.1), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0)), float(mat3x4(float(mat2x4(_GLF_FUZZED(-9.1), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))))), bool(true)), mix(float(_GLF_FUZZED(58.58)), float(mix(float(_GLF_FUZZED(314.498)), float(_GLF_IDENTITY(_GLF_FUZZED(-9.1), _GLF_IDENTITY(float(mat2x4(_GLF_FUZZED(-9.1), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0)), float(mat3x4(float(mat2x4(_GLF_FUZZED(-9.1), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))))), bool(true))), bool(true)))))))))))))))), injectionSwitch.x, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (false ? _GLF_FUZZED(384.719) : _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-9.1))))), injectionSwitch.x, injectionSwitch.x)))), bool(true)))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      break;
     return;
    }
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(uvec3(~ (gl_WorkGroupID))))), ((_GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(uvec3(~ (gl_WorkGroupID)))))) | ((_GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(uvec3(~ (gl_WorkGroupID))))))), (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(uvec3(~ (gl_WorkGroupID))))), ((_GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(uvec3(~ (gl_WorkGroupID)))))) | ((_GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(uvec3(~ (gl_WorkGroupID)))))))) | (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(uvec3(~ (gl_WorkGroupID))))), ((_GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(uvec3(~ (gl_WorkGroupID)))))) | ((_GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(uvec3(~ (gl_WorkGroupID))))))))), clamp(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(uvec3(~ (gl_WorkGroupID))))), ((_GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(uvec3(~ (gl_WorkGroupID)))))) | ((_GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(uvec3(~ (gl_WorkGroupID))))))), (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(uvec3(~ (gl_WorkGroupID))))), ((_GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(uvec3(~ (gl_WorkGroupID)))))) | ((_GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(uvec3(~ (gl_WorkGroupID)))))))) | (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(uvec3(~ (gl_WorkGroupID))))), ((_GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(uvec3(~ (gl_WorkGroupID)))))) | ((_GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(uvec3(~ (gl_WorkGroupID))))))))), _GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(uvec3(~ (gl_WorkGroupID))))), ((_GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(uvec3(~ (gl_WorkGroupID)))))) | ((_GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(uvec3(~ (gl_WorkGroupID))))))), (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(uvec3(~ (gl_WorkGroupID))))), ((_GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(uvec3(~ (gl_WorkGroupID)))))) | ((_GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(uvec3(~ (gl_WorkGroupID)))))))) | (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(uvec3(~ (gl_WorkGroupID))))), ((_GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(uvec3(~ (gl_WorkGroupID)))))) | ((_GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(uvec3(~ (gl_WorkGroupID))))))))), _GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(uvec3(~ (gl_WorkGroupID))))), ((_GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(uvec3(~ (gl_WorkGroupID)))))) | ((_GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(uvec3(~ (gl_WorkGroupID))))))), (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(uvec3(~ (gl_WorkGroupID))))), ((_GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(uvec3(~ (gl_WorkGroupID)))))) | ((_GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(uvec3(~ (gl_WorkGroupID)))))))) | (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(uvec3(~ (gl_WorkGroupID))))), ((_GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(uvec3(~ (gl_WorkGroupID)))))) | ((_GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(uvec3(~ (gl_WorkGroupID)))))))))))).x;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), (false ? _GLF_FUZZED(atomicCompSwap(_injected_loop_counter, 2724, -77604)) : _GLF_IDENTITY(1, (1) | 0) << _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) - 0), int(1))))) >> _GLF_IDENTITY(int(1), int(1)))); _GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) << 0)) * (1 | 1)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(mat4x2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(8099.3181)), float(_GLF_ONE(1.0, injectionSwitch.y)), bool(true))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(float(_GLF_ONE(1.0, injectionSwitch.y))))))) - log(1.0)), abs(1.0), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))), (false ? _GLF_FUZZED(766.718) : _GLF_ONE(1.0, injectionSwitch.y)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), ! (! (true))), true, true, true)))))
          {
           return;
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))), (injectionSwitch.x > injectionSwitch.y))))
            break;
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec4(bool(bool(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, true, false)))), _GLF_IDENTITY(bool(bvec4(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), false)), false || _GLF_IDENTITY((bool(bvec4(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), (_GLF_IDENTITY((bool(bvec4(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), bool(bool((bool(bvec4(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
            {
             return;
            }
           else
            {
            }
          }
        }
       for(int _injected_loop_counter = (0 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, int(ivec2(0, (20343 & _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) - (0 << _GLF_IDENTITY(int(0), int(0))))) >> 0)))))); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), true && ((true))))))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_GLF_IDENTITY(_injected_loop_counter, 0 ^ (_injected_loop_counter)))) != 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             return;
            }
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec3(false, true, true))) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(8.0)), bool(false))) > injectionSwitch.y)))))))))
            return;
          }
        }
       if(_GLF_DEAD(false))
        break;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    break;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    continue;
  }
 for(int _injected_loop_counter = _GLF_IDENTITY((0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) << 0))), ~ (~ ((0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) << 0)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)), ~ (_GLF_IDENTITY(~ ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), int(ivec2(~ ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), 1))))))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       return;
      }
    }
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), bool(_GLF_IDENTITY(bool(! (! (_GLF_IDENTITY(false, ! (! (false)))))), ! (! (bool(! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))) && true), bool(bvec2(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), true && (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && true)))), (! (! (_GLF_IDENTITY(false, ! (! (false)))))) && true))), false))))))
      continue;
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        break;
       return;
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
  }
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(smoothstep(3078.3702, -9.0, 598.550)) : injectionSwitch.x)) > injectionSwitch.y))))
    return;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 uint subgroup_base = subgroup_id * subgroup_size;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(max(workgroup_base, workgroup_base), (_GLF_IDENTITY(max(workgroup_base, workgroup_base), clamp(max(workgroup_base, workgroup_base), max(workgroup_base, workgroup_base), _GLF_IDENTITY(max(workgroup_base, workgroup_base), max(max(workgroup_base, workgroup_base), max(workgroup_base, workgroup_base)))))) ^ 0u)) + subgroup_base + _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u ^ (subgroup_local_id), (true ? 0u ^ (subgroup_local_id) : _GLF_FUZZED(workgroup_base))))));
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) << _GLF_IDENTITY(0u, max(0u, 0u))) + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, max(1, 1)))))) % subgroup_size, min((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)) + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) << 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(uvec3((subgroup_local_id + 1) % subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)), (54007u & 0u)))), 0u + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(uvec3((subgroup_local_id + 1) % subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)), (54007u & 0u)))))), min((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)) + 1) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) ^ 0u)) << 0u)))), (true ? uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(uvec3((subgroup_local_id + 1) % subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)), (54007u & 0u)))), 0u + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(uvec3((subgroup_local_id + 1) % subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)), (54007u & 0u)))))), min((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)) + 1) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) ^ 0u)) << 0u)))) : _GLF_FUZZED(79203u)))), ((uint(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(uvec3((subgroup_local_id + 1) % subgroup_size, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), (54007u & 0u)))), min((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)) + 1, (_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)) + 1) << (1u ^ 1u))) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) << 0u)))))) << (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))) | (uint(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-57190) : 1)), _GLF_IDENTITY(1, ~ (~ (1)))))) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | ((subgroup_local_id + 1) % subgroup_size)), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | ((subgroup_local_id + 1) % subgroup_size)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | ((subgroup_local_id + 1) % subgroup_size)), 1u, 0u), (uvec3(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | ((subgroup_local_id + 1) % subgroup_size)), 1u, 0u)) >> uvec3(0u, 0u, 0u)))))))), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0), clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))) + 1))), (false ? _GLF_IDENTITY(_GLF_FUZZED((++ virtual_gid)), (_GLF_FUZZED((_GLF_IDENTITY(++ virtual_gid, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(++ virtual_gid, (++ virtual_gid) >> 0u)))))) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) : (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0), (subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)) << (1u ^ 1u)), clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), max(min(subgroup_local_id, subgroup_local_id), min(subgroup_local_id, subgroup_local_id)))))) + 1))))) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) << (uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u))), (((subgroup_local_id + 1) % subgroup_size)) << 0u) << 0u)))))), (true ? _GLF_IDENTITY(uint(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, max(1, 1)))))) % subgroup_size, min((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)) + 1) % _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), ((subgroup_local_id + 1) % subgroup_size) << 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | 0u), uint(uvec3((subgroup_local_id + 1) % subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)), (54007u & 0u)))), 0u + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(uvec3((subgroup_local_id + 1) % subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)), (54007u & 0u)))))), min((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), max(_GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size))), (subgroup_size))) - 0u), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)) + 1) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) ^ 0u)) << 0u)))), (true ? uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(uvec3((subgroup_local_id + 1) % subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((54007u & 0u), 0u + (_GLF_IDENTITY((54007u & 0u), 0u | (_GLF_IDENTITY((54007u & 0u), (false ? _GLF_FUZZED(workgroup_id) : (54007u & 0u)))))))))), 0u + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(uvec3((subgroup_local_id + 1) % subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)), (54007u & 0u)))))), min((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)) + _GLF_IDENTITY(1, int(ivec3(1, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)))) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), ((subgroup_local_id + 1) % subgroup_size) ^ 0u)) << 0u)))) : _GLF_FUZZED(79203u)))), ((uint(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(_GLF_IDENTITY(uvec3((subgroup_local_id + 1) % subgroup_size, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), (54007u & 0u)), (uvec3((subgroup_local_id + 1) % subgroup_size, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), (54007u & 0u))) | (uvec3((subgroup_local_id + 1) % subgroup_size, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), (54007u & 0u)))))), min((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(1u, (1u) | (0u | 0u)) * (subgroup_local_id)) + 1, (_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)) + 1) << (1u ^ 1u))) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) << 0u)))))) << (_GLF_IDENTITY(0u, ~ (~ (0u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))) | (uint(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-57190) : 1)), _GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), max((1), (1)))) - 0)))))) % subgroup_size, _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | ((subgroup_local_id + 1) % subgroup_size)), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | ((subgroup_local_id + 1) % subgroup_size)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | ((subgroup_local_id + 1) % subgroup_size)), 1u, 0u), (uvec3(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | ((subgroup_local_id + 1) % subgroup_size)), 1u, 0u)) >> uvec3(0u, 0u, 0u))))))), min(((subgroup_local_id + 1) % subgroup_size) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | ((subgroup_local_id + 1) % subgroup_size)), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | ((subgroup_local_id + 1) % subgroup_size)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | ((subgroup_local_id + 1) % subgroup_size)), 1u, 0u), (uvec3(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | ((subgroup_local_id + 1) % subgroup_size)), 1u, 0u)) >> uvec3(0u, 0u, 0u))))))), _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | ((subgroup_local_id + 1) % subgroup_size)), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | ((subgroup_local_id + 1) % subgroup_size)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | ((subgroup_local_id + 1) % subgroup_size)), 1u, 0u), (uvec3(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | ((subgroup_local_id + 1) % subgroup_size)), 1u, 0u)) >> uvec3(0u, 0u, 0u))))))), (((subgroup_local_id + 1) % subgroup_size) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | ((subgroup_local_id + 1) % subgroup_size)), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | ((subgroup_local_id + 1) % subgroup_size)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | ((subgroup_local_id + 1) % subgroup_size)), 1u, 0u), (uvec3(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | ((subgroup_local_id + 1) % subgroup_size)), 1u, 0u)) >> uvec3(0u, 0u, 0u)))))))) | 0u)))), _GLF_IDENTITY(min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0), clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))) + 1))), (false ? _GLF_IDENTITY(_GLF_FUZZED((++ virtual_gid)), (_GLF_FUZZED((_GLF_IDENTITY(++ virtual_gid, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(++ virtual_gid, (++ virtual_gid) >> 0u)))))) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) : (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0), (subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)) << (1u ^ 1u)), clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), max(min(subgroup_local_id, subgroup_local_id), min(subgroup_local_id, subgroup_local_id)))))) + 1))))) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) << (uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u))), (((subgroup_local_id + 1) % subgroup_size)) << 0u) << 0u)), 0u | (min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0), clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))) + 1))), (false ? _GLF_IDENTITY(_GLF_FUZZED((++ virtual_gid)), (_GLF_FUZZED((_GLF_IDENTITY(++ virtual_gid, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(++ virtual_gid, (++ virtual_gid) >> 0u)))))) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) : (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0), (subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)) << (1u ^ 1u)), clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), max(min(subgroup_local_id, subgroup_local_id), min(subgroup_local_id, subgroup_local_id)))))) + 1))))) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) << (uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u))), (((subgroup_local_id + 1) % subgroup_size)) << 0u) << 0u)))))))) : _GLF_FUZZED(virtual_gid)))))), 0u ^ (workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) << 0u) + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) % subgroup_size, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1) % subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(uint(uint((subgroup_local_id + 1) % subgroup_size)), (false ? _GLF_FUZZED(subgroup_id) : uint(uint((subgroup_local_id + 1) % subgroup_size))))), _GLF_IDENTITY(0u, min(0u, 0u)) | ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 1 * (1))) - 0)) % subgroup_size)), (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))), ~ (~ (uvec2(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u | ((subgroup_local_id + 1) % subgroup_size)), clamp(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u | ((subgroup_local_id + 1) % subgroup_size)), _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u | ((subgroup_local_id + 1) % subgroup_size)), _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u | ((subgroup_local_id + 1) % subgroup_size)))), (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))))))), 0u | (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))) % subgroup_size, 0u | ((subgroup_local_id + 1) % subgroup_size)), (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) / 1u)) | 0u)), uint(1u)))), ~ (~ (uvec2(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u | ((subgroup_local_id + 1) % subgroup_size)), (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)) + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) << 0u)))), _GLF_IDENTITY(_GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(uvec3((subgroup_local_id + 1) % subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)), (54007u & 0u)))), min((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)) + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) << 0u))))), ((uint(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(uvec3((subgroup_local_id + 1) % subgroup_size, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 1.0, 0.0), (mat3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 1.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), (float(_GLF_IDENTITY(mat3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 1.0, 0.0), (mat3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 1.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))) - 0.0))), (54007u & 0u)))), _GLF_IDENTITY(min((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)) + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) << 0u)), 0u ^ (min((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)) + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) << 0u)))))))) << (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))) | (uint(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | ((subgroup_local_id + 1) % subgroup_size)))), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0), clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))) + 1))), (false ? _GLF_FUZZED((++ virtual_gid)) : (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0), clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))) + 1))))) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) << 0u) << 0u))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(uvec3((subgroup_local_id + 1) % subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)), (54007u & 0u)))), min((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)) + 1) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1)))) % subgroup_size) << 0u)))), (uint(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(uvec3((subgroup_local_id + 1) % subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)), (54007u & 0u)))), min((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)) + 1) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1)))) % subgroup_size) << 0u))))) | 0u)), ((uint(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(uvec3((subgroup_local_id + 1) % subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)), (54007u & 0u)))), min((subgroup_local_id + _GLF_IDENTITY(1, (1) | 0)) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)) + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) << 0u)))))) << (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))) | (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) << 0u) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)), 1u * (uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)), 0u + (uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))))))))) | ((subgroup_local_id + 1) % subgroup_size)))), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))))) >> 0), clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))) + 1))), (false ? _GLF_FUZZED((++ virtual_gid)) : (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0), clamp(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id)) + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))) + 1))))) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))), (((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (subgroup_local_id + 1))) % subgroup_size)) << 0u) << 0u)))))), (~ (_GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u))) + 1) % subgroup_size, uint(_GLF_IDENTITY(uvec3((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u | (uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (54007u & 0u)), ~ (~ (uvec3((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u | (uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (54007u & 0u))))))), _GLF_IDENTITY(min((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 1u * _GLF_IDENTITY((subgroup_local_id), (1u & ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))) * ((subgroup_local_id)))) + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) << 0u)), (min((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 1u * _GLF_IDENTITY((subgroup_local_id), (1u & ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))) * ((subgroup_local_id)))) + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) << 0u))) | (min((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 1u * _GLF_IDENTITY((subgroup_local_id), (1u & ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))) * ((subgroup_local_id)))) + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) << 0u))))))), ((uint(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(uvec3((subgroup_local_id + 1) % subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)), (54007u & 0u)))), min((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)) + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) << 0u)))))) << (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))) | (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1))) % subgroup_size, uint(uint(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1))) % subgroup_size))), ((_GLF_IDENTITY(subgroup_local_id, (1u | 1u) * (subgroup_local_id)) + 1) % subgroup_size) | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (0u >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))) + (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u))) + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | ((subgroup_local_id + 1) % subgroup_size)))), min(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0), clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u) + 1, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))), (true ? _GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))) : _GLF_FUZZED(subgroup_size))) + 1))), (false ? _GLF_FUZZED((_GLF_IDENTITY(++ virtual_gid, (++ virtual_gid) - (0u ^ 0u)))) : (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0), (subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)) >> 0u), clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), (_GLF_IDENTITY(~ (subgroup_local_id), max(~ (subgroup_local_id), ~ (subgroup_local_id)))) * 1u))) + 1, _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))) + 1))))) % subgroup_size, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0), clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))), clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))) + 1))), (false ? _GLF_FUZZED((++ virtual_gid)) : (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0), clamp(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u), _GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1)), _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))) + 1))))) % subgroup_size) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 1u, 0u))) + 1) % subgroup_size, _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) << 0u) << 0u))))))) - 0u)))))))));
 do
  {
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
  {
   atomicStore(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(uint(uvec4(uint(1), 1u, ((0u | 0u) << _GLF_IDENTITY(uint(3u), uint(3u))), 0u)), max(uint(uvec4(uint(1), 1u, ((0u | 0u) << _GLF_IDENTITY(uint(3u), uint(3u))), 0u)), uint(uvec4(uint(1), 1u, (_GLF_IDENTITY((0u | 0u), 0u ^ ((0u | 0u))) << _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(3u, min(3u, _GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, min(3u, 3u))) | 0u))), 0u)), ~ (~ (uint(uvec2(3u, 0u))))))), uint(3u))), 0u))))), (0u >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) / 1u)), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) / 1u)), (uint(_GLF_IDENTITY(6u, (6u) / 1u))) | 0u), uint(_GLF_IDENTITY(6u, (6u) / 1u)))))) ^ (uint(1))))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false))) ? _GLF_FUZZED(subgroup_base) : uint(1), min(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false))) ? _GLF_FUZZED(subgroup_base) : uint(1), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false))) ? _GLF_FUZZED(subgroup_base) : uint(1))))), 1u)), _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : uint(uvec2(_GLF_IDENTITY(uint(1), (false ? _GLF_FUZZED(subgroup_base) : uint(1))), 1u)), uint(uvec2(_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : uint(uvec2(_GLF_IDENTITY(uint(1), (false ? _GLF_FUZZED(subgroup_base) : uint(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) | (1))))))), 1u)), ~ (~ (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : uint(uvec2(_GLF_IDENTITY(uint(1), (false ? _GLF_FUZZED(subgroup_base) : uint(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) | (1))))))), 1u)), ~ (~ (false ? _GLF_FUZZED(num_workgroup) : uint(uvec2(_GLF_IDENTITY(uint(1), (false ? _GLF_FUZZED(subgroup_base) : uint(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) | (1))))))), 1u)))))))), 0u)))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : uint(uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, 0 + (1))), (false ? _GLF_FUZZED(subgroup_base) : uint(1))), 1u)), uint(uvec2(false ? _GLF_FUZZED(num_workgroup) : uint(uvec2(_GLF_IDENTITY(uint(1), (false ? _GLF_FUZZED(subgroup_base) : uint(1))), 1u)), 0u)))), ((_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : uint(uvec2(_GLF_IDENTITY(uint(1), (false ? _GLF_FUZZED(subgroup_base) : uint(1))), 1u)), uint(uvec2(false ? _GLF_FUZZED(num_workgroup) : uint(uvec2(_GLF_IDENTITY(uint(1), (false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY(uint(1), min(uint(1), uint(1))))), 1u)), 0u))))) >> 0u), (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : uint(uvec2(_GLF_IDENTITY(uint(1), (false ? _GLF_FUZZED(subgroup_base) : uint(1))), 1u)), uint(uvec2(false ? _GLF_FUZZED(num_workgroup) : uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (false ? _GLF_FUZZED(subgroup_base) : uint(1))), max(_GLF_IDENTITY(uint(1), (false ? _GLF_FUZZED(subgroup_base) : uint(1))), _GLF_IDENTITY(uint(1), (false ? _GLF_FUZZED(subgroup_base) : uint(1))))), 1u)), 0u)))), (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, ~ (~ (1)))), (false ? _GLF_FUZZED(subgroup_base) : uint(1))), 1u)), uint(uvec4(uint(uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, ~ (~ (1)))), (false ? _GLF_FUZZED(subgroup_base) : uint(1))), 1u)), 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), uint(_GLF_IDENTITY(uvec2(false ? _GLF_FUZZED(num_workgroup) : uint(uvec2(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(subgroup_base) : uint(1))), 1u)), 0u), (uvec2(false ? _GLF_FUZZED(num_workgroup) : uint(uvec2(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(subgroup_base) : uint(1))), 1u)), 0u)) | uvec2(0u, 0u))))))))), 4, 64, 4);
  }
 else
  {
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, false || (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, min(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))), _GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter)))))) != 0))); _injected_loop_counter --)
    {
     return;
    }
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         return;
        }
      }
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((+ 2.9))), bool(false)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 do
  {
   if((_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) % 2) - 0u)) == 0)
    {
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), true && (! (_GLF_IDENTITY(false, false || (false)))))))))) || false) && true))))
        break;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
        {
         if(_GLF_DEAD(false))
          break;
         return;
        }
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))))));
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
      {
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-4.3), _GLF_ONE(1.0, injectionSwitch.y) * (_GLF_FUZZED(-4.3)))), vec2(_GLF_FUZZED(-2194.6351), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), (_GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), clamp(mat2(1.0) * ((injectionSwitch)), mat2(1.0) * ((injectionSwitch)), mat2(1.0) * ((injectionSwitch))))) / vec2(1.0, 1.0)))[1], _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), (_GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), clamp(mat2(1.0) * ((injectionSwitch)), mat2(1.0) * ((injectionSwitch)), mat2(1.0) * ((injectionSwitch))))) / vec2(1.0, 1.0)))[1], 1.0, sqrt(0.0), 0.0, 1.0, 0.0, 0.0, log(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, abs(0.0), 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, abs(0.0), 1.0, 0.0))), 1.0, 1.0, 0.0)), (float(mat3x4(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), (_GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), clamp(mat2(1.0) * ((injectionSwitch)), mat2(1.0) * ((injectionSwitch)), mat2(1.0) * ((injectionSwitch))))) / vec2(1.0, 1.0)))[1], 1.0, sqrt(0.0), 0.0, 1.0, 0.0, 0.0, log(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, abs(0.0), 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, abs(0.0), 1.0, 0.0))), 1.0, 1.0, 0.0))) - 0.0))), bvec2(_GLF_IDENTITY(false, (false) || false), true))).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-4.3), _GLF_ONE(1.0, injectionSwitch.y) * (_GLF_FUZZED(-4.3)))), vec2(_GLF_FUZZED(-2194.6351), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, (false) || false), true))).x > injectionSwitch.y) || _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))))))), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec2(-149.232, 5.0).r), _GLF_FUZZED(vec2(329.586, -35.56).r)), bvec2(false, false))).y), ((injectionSwitch.x > injectionSwitch.y)) && true)))) || false))))))
      return;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x), (_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x)) - tan(0.0)))), bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)))))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          break;
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))), injectionSwitch, injectionSwitch)).y, mix(float(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))), injectionSwitch, injectionSwitch)).y), float(_GLF_FUZZED(9001.9670)), bool(false)))), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec3((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))))
          {
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          continue;
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))), true, false, _GLF_IDENTITY(true, ! (! (true))))))))
          break;
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(true, (true) || false)), _GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(bool(! (false))))), false || (! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))), true)), _GLF_IDENTITY((bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, true))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), false, true))), false), true, false))))))) || false)), false, true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (true) || false)), false, true)), (bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (true) || false)), false, true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (bool((bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (true) || false)), false, true)))))))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(bool((bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), (true) || false)), false, true)))), ! (! (bool((bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (true) || false)), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, true)))) || false))), true)))))))), true)), bool(bvec2(bool(bvec2(bool(_GLF_IDENTITY(bool((bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (true) || false)), false, true)))), ! (! (bool((bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (true) || false)), false, true)))))))), true)), true))))) || false)))))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && _GLF_IDENTITY(true, ! (! (true))))))
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(_injected_loop_counter)))); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) << 0))
                {
                 atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
                }
              }
             else
              {
              }
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bool((false)))) || false)))))))), (injectionSwitch.x > injectionSwitch.y))))
            continue;
          }
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))) || false)))
          break;
         if(_GLF_DEAD(false))
          continue;
        }
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         return;
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       do
        {
         return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))))).y))))
            {
            }
           else
            {
             return;
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))))));
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(asin(-4.2)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false ? _GLF_FUZZED(-0.2) : injectionSwitch.y, (_GLF_IDENTITY(false ? _GLF_FUZZED(-0.2) : injectionSwitch.y, max(false ? _GLF_FUZZED(-0.2) : injectionSwitch.y, _GLF_IDENTITY(false ? _GLF_FUZZED(-0.2) : injectionSwitch.y, float(vec3(false ? _GLF_FUZZED(-0.2) : injectionSwitch.y, 0.0, 1.0)))))) + 0.0))), float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false ? _GLF_FUZZED(-0.2) : injectionSwitch.y, (_GLF_IDENTITY(false ? _GLF_FUZZED(-0.2) : injectionSwitch.y, max(false ? _GLF_FUZZED(-0.2) : injectionSwitch.y, _GLF_IDENTITY(false ? _GLF_FUZZED(-0.2) : injectionSwitch.y, float(vec3(false ? _GLF_FUZZED(-0.2) : injectionSwitch.y, 0.0, 1.0)))))) + 0.0))), clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false ? _GLF_FUZZED(-0.2) : injectionSwitch.y, (_GLF_IDENTITY(false ? _GLF_FUZZED(-0.2) : injectionSwitch.y, max(false ? _GLF_FUZZED(-0.2) : injectionSwitch.y, _GLF_IDENTITY(false ? _GLF_FUZZED(-0.2) : injectionSwitch.y, float(vec3(false ? _GLF_FUZZED(-0.2) : injectionSwitch.y, 0.0, 1.0)))))) + 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false ? _GLF_FUZZED(-0.2) : injectionSwitch.y, (_GLF_IDENTITY(false ? _GLF_FUZZED(-0.2) : injectionSwitch.y, max(false ? _GLF_FUZZED(-0.2) : injectionSwitch.y, _GLF_IDENTITY(false ? _GLF_FUZZED(-0.2) : injectionSwitch.y, float(vec3(false ? _GLF_FUZZED(-0.2) : injectionSwitch.y, 0.0, 1.0)))))) + 0.0))), (false ? _GLF_FUZZED(5.4) : _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false ? _GLF_FUZZED(-0.2) : injectionSwitch.y, (_GLF_IDENTITY(false ? _GLF_FUZZED(-0.2) : injectionSwitch.y, max(false ? _GLF_FUZZED(-0.2) : injectionSwitch.y, _GLF_IDENTITY(false ? _GLF_FUZZED(-0.2) : injectionSwitch.y, float(vec3(false ? _GLF_FUZZED(-0.2) : injectionSwitch.y, 0.0, 1.0)))))) + 0.0))))), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false ? _GLF_FUZZED(-0.2) : injectionSwitch.y, (_GLF_IDENTITY(false ? _GLF_FUZZED(-0.2) : injectionSwitch.y, max(false ? _GLF_FUZZED(-0.2) : injectionSwitch.y, _GLF_IDENTITY(false ? _GLF_FUZZED(-0.2) : injectionSwitch.y, float(vec3(false ? _GLF_FUZZED(-0.2) : injectionSwitch.y, 0.0, 1.0)))))) + 0.0))))), sqrt(1.0), exp(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), exp(0.0), 1.0, 1.0, 0.0, 1.0, 0.0)))))))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       else
        {
        }
      }
    }
   else
    {
     do
      {
       atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, min(4, 4))) | (4)), _GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-17822))), 64)), 4);
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
