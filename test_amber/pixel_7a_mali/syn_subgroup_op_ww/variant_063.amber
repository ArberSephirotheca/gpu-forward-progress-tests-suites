#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupsubgroup_id;
 uvec4 GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)))))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uvec2 GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size;
 if(_GLF_DEAD(false))
  return;
 GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id.xy = GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size;
 uvec4 GLF_merged3_0_2_55_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idnext_virtual_gidnum_workgroup;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uvec2 GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-32691)))); _injected_loop_counter ++)
  {
   GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id.zw = _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id, (GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id) >> _GLF_IDENTITY(uvec2(0u, 0u), ~ (~ (uvec2(0u, 0u)))));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 GLF_merged3_0_2_55_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idnext_virtual_gidnum_workgroup.xy = GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id.zw;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)))); _injected_loop_counter ++)
          {
           return;
          }
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    return;
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   do
    {
     return;
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false)), (bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false))) && true))));
  }
 uint subgroup_id = gl_SubgroupID;
 GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupsubgroup_id.z = subgroup_id;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 GLF_merged3_0_2_55_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idnext_virtual_gidnum_workgroup.xy.y = subgroup_local_id;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupsubgroup_id.y = _GLF_IDENTITY(num_workgroup, clamp(num_workgroup, num_workgroup, num_workgroup));
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), true))))))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           return;
          }
        }
      }
     else
      {
      }
    }
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           return;
          }
        }
       if(_GLF_DEAD(false))
        break;
      }
     if(_GLF_DEAD(false))
      break;
    }
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (! (! (false))), bool(_GLF_IDENTITY(bvec2(! (! (! (false))), false), bvec2(bvec2(bvec2(! (! (! (false))), false)))))))), bool(bvec4(_GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (! (! (false))), bool(_GLF_IDENTITY(bvec2(! (! (! (false))), false), bvec2(bvec2(bvec2(! (! (! (false))), false)))))))), false, true, true))))));
  }
 _GLF_IDENTITY(GLF_merged3_0_2_55_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idnext_virtual_gidnum_workgroup.w = GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupsubgroup_id.y, (GLF_merged3_0_2_55_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idnext_virtual_gidnum_workgroup.w = GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupsubgroup_id.y) - 0u);
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-1.5)), float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), bool(true))), ! (_GLF_IDENTITY(! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-1.5)), float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), bool(_GLF_IDENTITY(true, (true) || false))))), ! (! (_GLF_IDENTITY(! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), clamp(_GLF_IDENTITY(_GLF_FUZZED(-1.5), clamp(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5))), _GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), bool(true)))), bool(bool(! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), clamp(_GLF_IDENTITY(_GLF_FUZZED(-1.5), clamp(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5))), _GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(bool(true), bool(bool(bool(true))))))))))))))), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-1.5)), float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), bool(true))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-1.5)), float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), bool(true)))), ! (! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), clamp(_GLF_IDENTITY(_GLF_FUZZED(-1.5), clamp(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5))), _GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), bool(true))))))), bool(bvec4(_GLF_IDENTITY(! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-1.5)), float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), bool(true)))), ! _GLF_IDENTITY((! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), clamp(_GLF_IDENTITY(_GLF_FUZZED(-1.5), clamp(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5))), _GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), bool(true)))))), bool(_GLF_IDENTITY(bvec3((! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), clamp(_GLF_IDENTITY(_GLF_FUZZED(-1.5), clamp(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5))), _GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3((! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), clamp(_GLF_IDENTITY(_GLF_FUZZED(-1.5), clamp(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5))), _GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5)))), float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))), false, false, false))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         do
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            break;
           return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
          {
           do
            {
             if(_GLF_DEAD(false))
              break;
             return;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 GLF_merged3_0_2_55_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idnext_virtual_gidnum_workgroup.xy.x = GLF_merged3_0_2_55_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idnext_virtual_gidnum_workgroup.w;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u)), gl_WorkGroupSize)).x;
 if(_GLF_DEAD(false))
  return;
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
    continue;
   GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id.xy.y = workgroup_size;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    continue;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))), false, false))))) || _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (false)) || false))) && true))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (false)) || false))) && true))), false || ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (false)) || false))) && true)))))))))))))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || false, ! (! _GLF_IDENTITY(((_GLF_DEAD(false)) || false), true && (((_GLF_DEAD(false)) || false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
    return;
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, cos(0.0), 1.0, sqrt(1.0), 1.0)), clamp(_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, cos(0.0), 1.0, sqrt(1.0), 1.0)), mix(vec2(_GLF_FUZZED(-806.148), _GLF_FUZZED(7.1)), vec2((vec2(mat3x2(injectionSwitch, cos(0.0), 1.0, sqrt(1.0), 1.0)))[0], (vec2(mat3x2(injectionSwitch, cos(0.0), 1.0, sqrt(1.0), 1.0)))[1]), bvec2(true, true))), vec2(mat3x2(injectionSwitch, cos(0.0), 1.0, sqrt(1.0), 1.0)), vec2(mat3x2(injectionSwitch, cos(0.0), 1.0, sqrt(1.0), 1.0))))).y)))), _GLF_IDENTITY(true, true && (true)), true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_base = _GLF_IDENTITY(GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id.xy, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) < injectionSwitch.y)) ? _GLF_IDENTITY(GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id.xy, (GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id.xy) * uvec2(1u, 1u)) : _GLF_FUZZED(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size))).y * _GLF_IDENTITY(workgroup_id, (workgroup_id) + (0u << _GLF_IDENTITY(uint(7u), uint(7u))));
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, false, false)))))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), false || (bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))
    return;
   if(_GLF_DEAD(false))
    continue;
  }
 do
  {
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) + 0.0, mix(float(_GLF_FUZZED(883.895)), float((injectionSwitch.y) + 0.0), bool(true)))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) - 0.0, mix(float((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) - 0.0), float(_GLF_FUZZED(-8524.0752)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), false, false)), bool(bvec3(bool(bvec4(false, _GLF_IDENTITY(true, true && (true)), false, false)), true, false))))), (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), bool(bvec3(bool(bvec4(false, true, false, false)), true, false)))))) && true))
      {
      }
     else
      {
       return;
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
    return;
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     for(int _injected_loop_counter = _GLF_IDENTITY(1, (false ? _GLF_FUZZED(65386) : 1)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - (0 << _GLF_IDENTITY(int(5), int(5)))), _injected_loop_counter)) > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || (false)))), false))), (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-2.0), _GLF_FUZZED(84.79)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), max(mix(vec2(_GLF_FUZZED(-2.0), _GLF_FUZZED(84.79)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), mix(vec2(_GLF_FUZZED(-2.0), _GLF_FUZZED(84.79)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))))) : _GLF_FUZZED(mod(vec2(vec4(3280.6896, 1.9, 79.86, 8.2)), tanh(319.485))))).y)), _GLF_IDENTITY(true, bool(bvec2(true, true))) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 uint subgroup_base = _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupsubgroup_id.z * subgroup_size, (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupsubgroup_id.z * subgroup_size, (GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupsubgroup_id.z * subgroup_size) | (GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupsubgroup_id.z * subgroup_size))) / 1u);
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), true && (bool(bool(_GLF_DEAD(false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     for(int _injected_loop_counter = _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-33502)))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        continue;
       continue;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))
      return;
     return;
    }
  }
 else
  {
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u) + _GLF_IDENTITY(GLF_merged3_0_2_55_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idnext_virtual_gidnum_workgroup.xy.y, (false ? _GLF_FUZZED(_GLF_IDENTITY(GLF_merged3_0_2_55_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idnext_virtual_gidnum_workgroup.xy, (GLF_merged3_0_2_55_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idnext_virtual_gidnum_workgroup.xy) | (GLF_merged3_0_2_55_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idnext_virtual_gidnum_workgroup.xy)).x) : GLF_merged3_0_2_55_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idnext_virtual_gidnum_workgroup.xy.y)), ~ (~ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u) + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_55_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idnext_virtual_gidnum_workgroup.xy.y, (GLF_merged3_0_2_55_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idnext_virtual_gidnum_workgroup.xy.y) ^ 0u), (false ? _GLF_FUZZED(_GLF_IDENTITY(GLF_merged3_0_2_55_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idnext_virtual_gidnum_workgroup.xy, (GLF_merged3_0_2_55_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idnext_virtual_gidnum_workgroup.xy) | (GLF_merged3_0_2_55_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idnext_virtual_gidnum_workgroup.xy)).x) : GLF_merged3_0_2_55_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idnext_virtual_gidnum_workgroup.xy.y)), (workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u) + _GLF_IDENTITY(GLF_merged3_0_2_55_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idnext_virtual_gidnum_workgroup.xy.y, (false ? _GLF_FUZZED(_GLF_IDENTITY(GLF_merged3_0_2_55_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idnext_virtual_gidnum_workgroup.xy, (GLF_merged3_0_2_55_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idnext_virtual_gidnum_workgroup.xy) | (GLF_merged3_0_2_55_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idnext_virtual_gidnum_workgroup.xy)).x) : GLF_merged3_0_2_55_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idnext_virtual_gidnum_workgroup.xy.y))) - 0u))));
 GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id.xy.x = _GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid));
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + subgroup_base + ((GLF_merged3_0_2_55_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idnext_virtual_gidnum_workgroup.xy.y + _GLF_IDENTITY(1, _GLF_IDENTITY((1), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(1162) : (1))) | 0)) % subgroup_size);
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    break;
   GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupsubgroup_id.x = next_virtual_gid;
  }
 GLF_merged3_0_2_55_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idnext_virtual_gidnum_workgroup.z = GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupsubgroup_id.x;
 do
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     do
      {
       if(_GLF_DEAD(false))
        continue;
       atomicStore(buf[_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id.xy, _GLF_IDENTITY(min(GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id.xy, _GLF_IDENTITY(GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id.xy, clamp(_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id.xy, uvec2(0u, 0u) | (GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id.xy)), GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id.xy, GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id.xy))), uvec2(0u, 0u) | (min(GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id.xy, _GLF_IDENTITY(GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id.xy, clamp(_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id.xy, uvec2(0u, 0u) | (GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id.xy)), GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id.xy, GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id.xy)))))).x], uint(1), _GLF_IDENTITY(4, (4) >> (0 << _GLF_IDENTITY(int(5), int(5)))), 64, 4);
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-503.972) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-78.02) : injectionSwitch.y))))))
        return;
       return;
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)))) && true), _GLF_IDENTITY(true, true && (true)) && ((injectionSwitch.x > injectionSwitch.y))))) && true))))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  return;
 if(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_2_55_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idnext_virtual_gidnum_workgroup.xy.y % 2, (GLF_merged3_0_2_55_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idnext_virtual_gidnum_workgroup.xy.y % 2) | (GLF_merged3_0_2_55_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idnext_virtual_gidnum_workgroup.xy.y % 2))), ((_GLF_IDENTITY(GLF_merged3_0_2_55_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idnext_virtual_gidnum_workgroup.xy.y % 2, (GLF_merged3_0_2_55_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idnext_virtual_gidnum_workgroup.xy.y % 2) | (GLF_merged3_0_2_55_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idnext_virtual_gidnum_workgroup.xy.y % 2)))) | ((_GLF_IDENTITY(GLF_merged3_0_2_55_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idnext_virtual_gidnum_workgroup.xy.y % 2, (GLF_merged3_0_2_55_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idnext_virtual_gidnum_workgroup.xy.y % 2) | (GLF_merged3_0_2_55_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idnext_virtual_gidnum_workgroup.xy.y % 2))))) == 0)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   subgroupAll(true);
   atomicStore(buf[GLF_merged3_0_2_55_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idnext_virtual_gidnum_workgroup.z], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 else
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
        continue;
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))), bool(bvec2(! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))), false))))))
        {
         if(_GLF_DEAD(false))
          continue;
         do
          {
           return;
          }
         while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true && (_GLF_WRAPPED_LOOP(false)), (true && (_GLF_WRAPPED_LOOP(false))) && true)));
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        break;
      }
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0))), 1.0, 1.0, 1.0, 1.0, length(log(vec3(1.0, 1.0, 1.0))), determinant(mat4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(1.7), 0.0 + (_GLF_FUZZED(1.7)))), float(0.0), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))))), 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) + tan(0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + _GLF_IDENTITY((1.0), min((1.0), (1.0)))), 1.0, 0.0, determinant(mat3(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-4.3)))) - 0.0))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 0.0)), 1.0, _GLF_IDENTITY(cos(abs(0.0)), (cos(abs(0.0))) - _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0)), dot(vec3(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, sqrt(1.0), 0.0, 1.0, 0.0, 1.0, 1.0), (mat4(0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, sqrt(1.0), 0.0, 1.0, 0.0, 1.0, 1.0)) * mat4(1.0)))) : _GLF_FUZZED(-3.1))), 0.0), vec3(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0)))), 1.0, 0.0), (mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(0.0, round(length(normalize(vec2(1.0, 1.0)))), cos(0.0))), max(float(vec3(0.0, round(length(normalize(vec2(1.0, 1.0)))), cos(0.0))), float(vec3(0.0, round(length(normalize(vec2(1.0, 1.0)))), cos(0.0)))))), float(_GLF_IDENTITY(mat4(0.0, 1.0, abs(0.0), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 0.0, 0.0, abs(0.0), sin(0.0), 1.0, 1.0))), 1.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, log(1.0), 1.0, 1.0), mat4(1.0) * (mat4(0.0, 1.0, abs(0.0), 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, log(1.0), 1.0, 1.0))))), length(0.0), 1.0)))))), 1.0, 1.0, 1.0, 1.0, length(log(vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(22.90)), float(1.0), bool(true))), 1.0, 1.0))), determinant(mat4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(-527.497, max(_GLF_IDENTITY(-527.497, min(-527.497, -527.497)), -527.497))) : 1.0))) / _GLF_IDENTITY(exp(0.0), (exp(0.0)) - _GLF_IDENTITY(dot(vec2(sin(0.0), 0.0), vec2(sqrt(1.0), abs(1.0))), dot(vec2(sin(0.0), 0.0), vec2(sqrt(1.0), abs(1.0))))))), 0.0)), 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 0.0)), 1.0, cos(abs(0.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(94.49)), float(1.0), bool(true))), 1.0)), 1.0)), min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.4)), float(1.0), bool(true))), 1.0)), clamp(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.4)), float(1.0), bool(true))), 1.0)), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-6.4), max(_GLF_FUZZED(-6.4), _GLF_FUZZED(_GLF_IDENTITY(-6.4, mix(float(-6.4), float(_GLF_FUZZED(5.5)), bool(false))))))), float(1.0), bool(true))), 1.0)), _GLF_IDENTITY(1.0, _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.4)), float(1.0), bool(true))), 1.0), clamp(min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.4)), float(1.0), bool(true))), 1.0), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.4)), float(1.0), bool(true))), 1.0), (false ? _GLF_FUZZED(-754.884) : _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.4)), float(1.0), bool(true))), 1.0), min(min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.4)), float(1.0), bool(true))), 1.0), min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.4)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, 1.0))[0], _GLF_FUZZED(-230.590)), vec2(_GLF_FUZZED(2.3), (vec2(1.0, 1.0))[1]), bvec2(false, true))))), 1.0, 1.0))))))), min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.4)), float(1.0), bool(true))), 1.0)))))), 0.0)) * _GLF_IDENTITY(mat4(1.0), (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))) ? _GLF_FUZZED(mat4(2.2, 0.2, 17.96, 1.0, 835.422, 5.8, -1045.1119, -87.55, 8.6, -381.003, 681.532, 6.8, 2382.7526, _GLF_IDENTITY(894.563, max(894.563, 894.563)), 515.583, 793.034)) : _GLF_IDENTITY(mat4(1.0), (mat4(1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))), max(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-0.9)), float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), bool(true))), float(vec2(_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 1.0))), 0.0))), 0.0)), _GLF_IDENTITY(min(_GLF_IDENTITY(vec2(vec4(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), mix(float(_GLF_FUZZED(-0.9)), float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), bool(true))), float(vec2(_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 1.0))), 0.0))), 0.0)), vec2(mat3x4(vec2(vec4(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-0.9)), float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), bool(true))), float(vec2(_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 1.0))), 0.0))), _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), min(normalize(vec4(1.0, 1.0, 1.0, 1.0)), normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, length(vec2(0.0, 0.0))))), vec2(vec4(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-0.9)), float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), bool(true))), _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 1.0))), 0.0)), (float(vec2(_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 1.0))), 0.0))) - 0.0)), 0.0))), clamp(_GLF_IDENTITY(min(_GLF_IDENTITY(vec2(vec4(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), mix(float(_GLF_FUZZED(-0.9)), float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), bool(true))), float(vec2(_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 1.0))), 0.0))), 0.0)), vec2(mat3x4(vec2(vec4(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-0.9)), float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), bool(true))), float(vec2(_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 1.0))), 0.0))), _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), min(normalize(vec4(1.0, 1.0, 1.0, 1.0)), normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, length(vec2(0.0, 0.0))))), vec2(vec4(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-0.9)), float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), bool(true))), _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 1.0))), 0.0)), (float(vec2(_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 1.0))), 0.0))) - 0.0)), 0.0))), (min(_GLF_IDENTITY(vec2(vec4(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), mix(float(_GLF_FUZZED(-0.9)), float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), bool(true))), float(vec2(_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 1.0))), 0.0))), 0.0)), vec2(mat3x4(vec2(vec4(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-0.9)), float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), bool(true))), float(vec2(_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 1.0))), 0.0))), _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), min(normalize(vec4(1.0, 1.0, 1.0, 1.0)), normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, length(vec2(0.0, 0.0))))), vec2(vec4(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-0.9)), float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), bool(true))), _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 1.0))), 0.0)), (float(vec2(_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 1.0))), 0.0))) - 0.0)), 0.0)))) / vec2(1.0, 1.0)), _GLF_IDENTITY(min(_GLF_IDENTITY(vec2(vec4(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), mix(float(_GLF_FUZZED(-0.9)), float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), bool(true))), float(vec2(_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 1.0))), 0.0))), 0.0)), vec2(mat3x4(vec2(vec4(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-0.9)), float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), bool(true))), float(vec2(_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 1.0))), 0.0))), _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), min(normalize(vec4(1.0, 1.0, 1.0, 1.0)), normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, length(vec2(0.0, 0.0))))), vec2(vec4(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-0.9)), float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), bool(true))), _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 1.0))), 0.0)), (float(vec2(_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 1.0))), 0.0))) - 0.0)), 0.0))), mat2(1.0) * (min(_GLF_IDENTITY(vec2(vec4(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), mix(float(_GLF_FUZZED(-0.9)), float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), bool(true))), float(vec2(_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 1.0))), 0.0))), 0.0)), vec2(mat3x4(vec2(vec4(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-0.9)), float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), bool(true))), float(vec2(_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 1.0))), 0.0))), _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), min(normalize(vec4(1.0, 1.0, 1.0, 1.0)), normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, length(vec2(0.0, 0.0))))), vec2(vec4(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-0.9)), float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), bool(true))), _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 1.0))), 0.0)), (float(vec2(_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 1.0))), 0.0))) - 0.0)), 0.0))))), min(_GLF_IDENTITY(vec2(vec4(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), mix(float(_GLF_FUZZED(-0.9)), float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), bool(true))), float(vec2(_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 1.0))), 0.0))), 0.0)), vec2(mat3x4(vec2(vec4(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-0.9)), float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), bool(true))), float(vec2(_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 1.0))), 0.0))), _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), min(normalize(vec4(1.0, 1.0, 1.0, 1.0)), normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, length(vec2(0.0, 0.0))))), vec2(vec4(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-0.9)), float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), bool(true))), _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 1.0))), 0.0)), (float(vec2(_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 1.0))), 0.0))) - 0.0)), 0.0))))))), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(length(log(vec3(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, (1.0) / abs(1.0)))), 1.0))), (true ? length(log(vec3(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, (1.0) / abs(1.0)))), 1.0))) : _GLF_FUZZED(649.948))), (length(log(vec3(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(vec2(1.0, 1.0)))) / _GLF_IDENTITY(abs(1.0), (abs(1.0)) + abs(length(vec2(0.0, 0.0))))))), 1.0)))) + 0.0), determinant(mat4(0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), clamp(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)) : _GLF_FUZZED(4853.6464))), (0.0) - 0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, 1.0 * (0.0))) - 0.0))), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4x2(0.0, 0.0, 1.0, abs(0.0), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), exp(0.0)))), 1.0, 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), float(mat4(max(0.0, 0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, log(1.0), sin(0.0))))), min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), float(mat4(max(0.0, 0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, log(1.0), sin(0.0))))), (true ? _GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), float(mat4(max(0.0, 0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, log(1.0), sin(0.0))))) : _GLF_FUZZED(429.103))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), float(mat4(max(0.0, 0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, log(1.0), sin(0.0))))))) : _GLF_FUZZED(6.1))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true) ? float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), min(_GLF_IDENTITY(max(0.0, 0.0), 0.0 + (_GLF_IDENTITY(max(0.0, 0.0), float(float(max(0.0, 0.0)))))), max(0.0, 0.0)))), 0.0 + (_GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 0.0, 0.0)) : _GLF_FUZZED(-5.4)))), 1.0, 1.0, 0.0, 0.0, 1.0)), clamp(float(mat3x2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0)), (true ? float(vec4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, float(mat4x2(0.0, 1.0, 1.0, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0))), 0.0)) : _GLF_FUZZED(_GLF_IDENTITY(-5.4, (false ? _GLF_FUZZED(-5.5) : _GLF_IDENTITY(-5.4, (-5.4) - 0.0))))))), 1.0, 1.0, 0.0, 0.0, 1.0)), float(mat3x2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), (true ? float(vec4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0, 0.0, 0.0)) : _GLF_FUZZED(-5.4)))), 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0)), (true ? float(vec4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0)) : _GLF_FUZZED(-5.4)))), 1.0, 1.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(max(float(mat3x2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0)), (true ? float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), (false ? _GLF_FUZZED(-2.7) : _GLF_IDENTITY(0.0, max(0.0, 0.0)))), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(1.7)), bool(false))), 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))) : _GLF_FUZZED(-5.4)))), 1.0, 1.0, 0.0, 0.0, 1.0)), float(mat3x2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0)), (true ? float(vec4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0)) : _GLF_FUZZED(-5.4)))), 1.0, 1.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(float(mat3x4(max(float(mat3x2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0)), (true ? float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), (false ? _GLF_FUZZED(-2.7) : _GLF_IDENTITY(0.0, max(0.0, 0.0)))), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(1.7)), bool(false))), 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))) : _GLF_FUZZED(-5.4)))), 1.0, 1.0, 0.0, 0.0, 1.0)), float(mat3x2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0)), (true ? float(vec4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0)) : _GLF_FUZZED(-5.4)))), 1.0, 1.0, 0.0, 0.0, 1.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)), max(float(mat3x4(max(float(mat3x2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0)), (true ? float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), (false ? _GLF_FUZZED(-2.7) : _GLF_IDENTITY(0.0, max(0.0, 0.0)))), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(1.7)), bool(false))), 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))) : _GLF_FUZZED(-5.4)))), 1.0, 1.0, 0.0, 0.0, 1.0)), float(mat3x2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0)), (true ? float(vec4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0)) : _GLF_FUZZED(-5.4)))), 1.0, 1.0, 0.0, 0.0, 1.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(float(mat3x4(max(float(mat3x2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0)), (true ? float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), (false ? _GLF_FUZZED(-2.7) : _GLF_IDENTITY(0.0, max(0.0, 0.0)))), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(1.7)), bool(false))), 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))) : _GLF_FUZZED(-5.4)))), 1.0, 1.0, 0.0, 0.0, 1.0)), float(mat3x2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0)), (true ? float(vec4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0)) : _GLF_FUZZED(-5.4)))), 1.0, 1.0, 0.0, 0.0, 1.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)), clamp(float(mat3x4(max(float(mat3x2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0)), (true ? float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), (false ? _GLF_FUZZED(-2.7) : _GLF_IDENTITY(0.0, max(0.0, 0.0)))), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(1.7)), bool(false))), 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))) : _GLF_FUZZED(-5.4)))), 1.0, 1.0, 0.0, 0.0, 1.0)), float(mat3x2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0)), (true ? float(vec4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0)) : _GLF_FUZZED(-5.4)))), 1.0, 1.0, 0.0, 0.0, 1.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)), float(mat3x4(max(float(mat3x2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0)), (true ? float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), (false ? _GLF_FUZZED(-2.7) : _GLF_IDENTITY(0.0, max(0.0, 0.0)))), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(1.7)), bool(false))), 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))) : _GLF_FUZZED(-5.4)))), 1.0, 1.0, 0.0, 0.0, 1.0)), float(mat3x2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0)), (true ? float(vec4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0)) : _GLF_FUZZED(-5.4)))), 1.0, 1.0, 0.0, 0.0, 1.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)), float(mat3x4(max(float(mat3x2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0)), (true ? float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), (false ? _GLF_FUZZED(-2.7) : _GLF_IDENTITY(0.0, max(0.0, 0.0)))), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(1.7)), bool(false))), 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))) : _GLF_FUZZED(-5.4)))), 1.0, 1.0, 0.0, 0.0, 1.0)), float(mat3x2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0)), (true ? float(vec4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0)) : _GLF_FUZZED(-5.4)))), 1.0, 1.0, 0.0, 0.0, 1.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))))), mix(float(_GLF_FUZZED(74.53)), float(float(mat3x2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0)), (true ? float(vec4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(0.0, 0.0, abs(cos(0.0)), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0), (mat3x2(0.0, 0.0, abs(cos(0.0)), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0)), 0.0, 0.0, 0.0)) : _GLF_FUZZED(-5.4)))), 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(-2.9))), 1.0)), 0.0, 0.0, 1.0))), bool(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_IDENTITY(true, bool(bool(true)))))))))))))), 1.0, 1.0, 1.0, 0.0)), 1.0, cos(abs(0.0)), 1.0, 0.0), (mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 0.0), _GLF_IDENTITY((vec4(injectionSwitch, 1.0, 0.0)) * mat4(1.0), max(_GLF_IDENTITY((vec4(injectionSwitch, 1.0, 0.0)) * mat4(_GLF_IDENTITY(1.0, float(mat2x4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)))), max(_GLF_IDENTITY((vec4(injectionSwitch, 1.0, 0.0)), mix(vec4(((vec4(injectionSwitch, 1.0, 0.0)))[0], ((vec4(injectionSwitch, 1.0, 0.0)))[1], ((vec4(injectionSwitch, 1.0, 0.0)))[2], _GLF_FUZZED(-9.6)), vec4(_GLF_FUZZED(5.3), _GLF_FUZZED(8831.7357), _GLF_FUZZED(-66.10), ((vec4(injectionSwitch, 1.0, 0.0)))[3]), bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) * _GLF_IDENTITY(mat4(1.0), transpose(transpose(mat4(1.0)))), _GLF_IDENTITY((vec4(injectionSwitch, 1.0, 0.0)), _GLF_IDENTITY(mat4(1.0) * ((vec4(injectionSwitch, 1.0, 0.0))), max(_GLF_IDENTITY(mat4(1.0) * ((vec4(injectionSwitch, 1.0, 0.0))), min(mat4(1.0) * ((vec4(injectionSwitch, 1.0, 0.0))), mat4(1.0) * ((vec4(injectionSwitch, 1.0, 0.0))))), mat4(1.0) * ((vec4(injectionSwitch, 1.0, 0.0)))))) * mat4(1.0))), (vec4(injectionSwitch, 1.0, 0.0)) * mat4(1.0)))))), 1.0, 1.0, 1.0, 1.0, length(log(vec3(1.0, 1.0, 1.0))), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 0.0)), 1.0, cos(abs(0.0)), 1.0, 0.0)) * mat4(1.0))), clamp(vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(vec4(_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)), 1.0, 0.0))), _GLF_IDENTITY(1.0, float(mat4(1.0, 1.0, 1.0, tan(0.0), 0.0, tan(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)))), 0.0))), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, sqrt(1.0)), vec3(1.0, sqrt(0.0), 0.0)), dot(vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0), 1.0, sqrt(1.0)), vec3(1.0, sqrt(0.0), 0.0))), round(length(normalize(1.0))), sqrt(abs(1.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, cos(0.0)))), 1.0, 1.0, 1.0, length(log(vec3(1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-478.929)), float(1.0), bool(true))), 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(38.13) : 1.0)))), 1.0))), determinant(mat4(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-42.34))))), clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-42.34))))), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(sign(-914.549)) : 1.0)), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-42.34))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-42.34))))), (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-42.34)))))) - _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(vec4(-3.4, 49.29, 6467.3617, -3.3).a)), bool(false))), (true ? _GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(0.0), (float(0.0)) - 0.0), float(_GLF_FUZZED(vec4(-3.4, 49.29, 6467.3617, -3.3).a)), bool(false))) : _GLF_FUZZED(-552.596)))))), _GLF_IDENTITY(0.0, _GLF_IDENTITY((true ? 0.0 : _GLF_FUZZED(2.8)), ((true ? 0.0 : _GLF_FUZZED(2.8))) / 1.0)), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 1.0 * (1.0))) - length(0.0)), 1.0, 1.0, 0.0)), 1.0, cos(abs(0.0)), 1.0, 0.0), (mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), mat2(_GLF_IDENTITY(mat2x3(mat2(1.0)), (false ? _GLF_FUZZED(mat2x3(-8476.5812, -48.03, -542.753, 293.496, 8942.9229, 7174.0979)) : mat2x3(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0))))))))) * (injectionSwitch)), injectionSwitch)), vec2(vec4(injectionSwitch, 1.0, 0.0))), 1.0, 1.0, 1.0, 1.0, length(log(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(1.0, max(1.0, 1.0)))), float(_GLF_IDENTITY(_GLF_FUZZED(44.60), (_GLF_IDENTITY(_GLF_FUZZED(44.60), mix(float(_GLF_FUZZED(44.60)), float(_GLF_FUZZED(-6036.8658)), bool(false)))) / round(length(normalize(vec3(1.0, 1.0, 1.0)))))), bool(false)))))), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, determinant(mat3(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 0.0)), 1.0, cos(abs(0.0)), 1.0, 0.0)) * mat4(1.0))), vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0))), 1.0, 1.0, 1.0, 1.0, length(log(vec3(1.0, 1.0, 1.0))), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat2x3(1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2.5)), bool(false))), 0.0, 1.0, 0.0, abs(0.0))), 1.0, tan(0.0), 0.0, determinant(mat3(sqrt(1.0), 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, cos(0.0)))))), 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 0.0)), 1.0, cos(abs(0.0)), 1.0, 0.0), (mat4x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-3.3)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(2.6))))), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), vec2(vec3(vec2(vec4(injectionSwitch, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-3.3)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(2.6))))), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), 0.0)))), 1.0, 1.0, 1.0, 1.0, length(_GLF_IDENTITY(log(vec3(1.0, 1.0, 1.0)), mix(vec3((log(vec3(1.0, 1.0, 1.0)))[0], _GLF_FUZZED(0.8), (_GLF_IDENTITY(log(vec3(1.0, 1.0, 1.0)), clamp(log(vec3(1.0, 1.0, 1.0)), log(vec3(1.0, 1.0, 1.0)), log(vec3(1.0, 1.0, 1.0)))))[2]), vec3(_GLF_FUZZED(3.0), (log(vec3(1.0, 1.0, 1.0)))[1], _GLF_FUZZED(-6.3)), bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), determinant(mat3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat2(0.0, determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(735.500)), float(1.0), bool(true))))), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0))), (0.0) - 0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 0.0)), 1.0, cos(abs(0.0)), 1.0, 0.0)) * mat4(1.0))), vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), max(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)), 0.0), vec3(injectionSwitch, 0.0))))), 1.0, 0.0))), 1.0, 1.0, 1.0, 1.0, length(log(vec3(1.0, 1.0, 1.0))), determinant(mat4(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, 0.0, 0.0), mix(float(_GLF_IDENTITY(clamp(0.0, 0.0, 0.0), float(mat3(clamp(0.0, 0.0, 0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))), float(_GLF_FUZZED(136.569)), bool(false)))), (true ? 0.0 : _GLF_FUZZED(402.707))), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(_GLF_IDENTITY(-1.3, max(-1.3, -1.3))))), 0.0, 0.0, round(length(normalize(determinant(_GLF_IDENTITY(mat4(1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), float(mat2x4((1.0), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))) / 1.0), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(9.3))), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0)), 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0), (mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(9.3))), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x4(1.0, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), cos(0.0), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), clamp(_GLF_IDENTITY(float(mat3x4(1.0, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), cos(0.0), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), min(float(mat3x4(1.0, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), cos(0.0), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), float(mat3x4(1.0, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), cos(0.0), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)))), float(mat3x4(1.0, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), cos(0.0), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), float(mat3x4(1.0, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), cos(0.0), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))))))), 0.0, 0.0, 0.0, 0.0, 1.0)) + mat4(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)))))), 0.0, 0.0, 0.0, 1.0)), min(float(mat4x2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.3))), _GLF_IDENTITY(0.0, (0.0) - sqrt(0.0)), 0.0, round(length(normalize(determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), 0.0, 0.0, 0.0, 1.0)), float(mat4x2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.3))), 0.0, 0.0, round(length(normalize(determinant(mat4(1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, abs(1.0) * (0.0)))), 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) * 1.0))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0))))), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)), 1.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8634.3415)), float(1.0), bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! _GLF_IDENTITY((true), ((true)) && true), false, true)))))))), _GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0)), 1.0, _GLF_IDENTITY(cos(abs(0.0)), max(cos(abs(0.0)), cos(abs(_GLF_IDENTITY(0.0, (0.0) + length(vec4(0.0, 0.0, 0.0, 0.0))))))), 1.0, 0.0), (mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0))), 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, abs(1.0) * (1.0)), _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), min(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0))))) + 0.0), 1.0, 1.0, length(log(vec3(1.0, 1.0, 1.0))), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, determinant(mat3(_GLF_IDENTITY(0.0, float(mat2x3(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, log(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), 1.0, 1.0, tan(0.0)))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 0.0)), 1.0, cos(abs(0.0)), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(float(-10250)))), 0.0 + (0.0)))) * mat4(1.0))))), vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0))), 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.7)))), float(_GLF_FUZZED(_GLF_IDENTITY(-5.2, float(mat2x4(-5.2, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 1.0))), 1.0, 1.0)), 1.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), float(mat2x4((1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))) / determinant(_GLF_IDENTITY(mat4(1.0, 1.0, 1.0, 1.0, sqrt(0.0), determinant(mat3(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat4(1.0, 0.0, tan(0.0), 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)))))) * 1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED((mat2x4(7.8, -550.924, -73.15, -3.4, 7385.0205, 6.8, -6.8, 0.4) * mat4x2(-847.982, -1781.6234, -128.332, -9.1, -26.67, 730.927, -8067.8839, -72.74))) : mat4(1.0, 1.0, 1.0, 1.0, sqrt(0.0), determinant(mat3(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat4(1.0, 0.0, tan(0.0), 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)))))) * 1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), 1.0, 0.0))))), bool(false))), 1.0, length(log(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, (1.0) * abs(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0), _GLF_IDENTITY((vec3(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)) * mat3(1.0), (false ? _GLF_FUZZED(vec3(0.1, -1114.9767, -1.7)) : (vec3(1.0, 1.0, 1.0)) * mat3(1.0)))))), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), determinant(mat3(0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-91.11) : 1.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, exp(0.0))), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, exp(0.0)))), 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0))))), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-244.915))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-8966.8395) : 1.0)), 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))) + (_GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-7937.1583))), 0.0))), cos(abs(0.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0), (mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false))) ? _GLF_FUZZED(vec2(-9.5, _GLF_IDENTITY(-9.1, mix(float(-9.1), float(_GLF_FUZZED(-3698.4091)), bool(false))))) : injectionSwitch)))), vec2(vec4(injectionSwitch, 1.0, 0.0))), 1.0, 1.0, 1.0, 1.0, length(log(vec3(1.0, 1.0, 1.0))), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, 0.0 + (0.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(803.502)))) / 1.0), _GLF_IDENTITY(0.0, (0.0) * abs(1.0)))), 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 1.0, 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)) : _GLF_IDENTITY(_GLF_FUZZED((_GLF_IDENTITY(sign(92.92), float(mat3x2(sign(92.92), 0.0, 1.0, 1.0, abs(1.0), 0.0))) + 31.21)), (_GLF_FUZZED((_GLF_IDENTITY(sign(92.92), float(mat3x2(sign(92.92), _GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), max(max(0.0, 0.0), max(0.0, 0.0)))), 1.0, 1.0, abs(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), 0.0))) + 31.21))) + log(1.0)))), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)))), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0)), 1.0, 1.0, 0.0)), 1.0, cos(abs(0.0)), 1.0, 0.0)) * mat4(1.0)))))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-9.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) + (injectionSwitch.y))))));
   subgroupAll(false);
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       atomicStore(buf[GLF_merged3_0_2_55_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idnext_virtual_gidnum_workgroup.z], uint(2), 4, 64, 4);
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, abs(round(length(normalize(vec3(1.0, 1.0, 1.0))))), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0))).x > injectionSwitch.y))));
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
