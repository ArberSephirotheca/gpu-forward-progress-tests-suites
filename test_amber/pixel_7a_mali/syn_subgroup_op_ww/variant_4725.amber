#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(bvec3(true, false, true)))))), true && (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(bvec3(true, false, true)))))))))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (! ((false))))))) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false || (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), bool(bvec4(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), false, true, false)))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-0.2) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(-364.839, mix(float(_GLF_IDENTITY(-364.839, max(-364.839, -364.839))), float(_GLF_FUZZED(-718.855)), bool(false))))), bool(false))))), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-0.7) : _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0))))), injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(true && _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))))).x > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (max(injectionSwitch, injectionSwitch)) / vec2(1.0, 1.0))).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), clamp((injectionSwitch) * vec2(1.0, 1.0), _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), ((injectionSwitch) * vec2(1.0, 1.0)) * vec2(1.0, 1.0)), (injectionSwitch) * vec2(1.0, 1.0)))).x > injectionSwitch.y))), ((_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), clamp((injectionSwitch) * vec2(1.0, 1.0), _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), ((injectionSwitch) * vec2(1.0, 1.0)) * vec2(1.0, 1.0)), (injectionSwitch) * vec2(1.0, 1.0)))).x > injectionSwitch.y)))) || false), (_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), clamp((injectionSwitch) * vec2(1.0, 1.0), _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), ((injectionSwitch) * vec2(1.0, 1.0)) * vec2(1.0, 1.0)), (injectionSwitch) * vec2(1.0, 1.0)))).x > injectionSwitch.y))), ((_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), clamp((injectionSwitch) * vec2(1.0, 1.0), _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), ((injectionSwitch) * vec2(1.0, 1.0)) * vec2(1.0, 1.0)), (injectionSwitch) * vec2(1.0, 1.0)))).x > injectionSwitch.y)))) || false)) && true), ! (! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) * vec2(1.0, 1.0)).x > injectionSwitch.y))))))))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y)), false || _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), clamp((injectionSwitch) * vec2(1.0, 1.0), _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) * vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))) * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))) * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0, 0.0, 0.0), _GLF_IDENTITY((vec4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))) * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0, 0.0, 0.0)) * mat4(1.0), min((vec4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))) * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0, 0.0, 0.0)) * mat4(1.0), (vec4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))) * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0, 0.0, 0.0)) * mat4(1.0)))))), 1.0)) * vec2(1.0, 1.0)), (injectionSwitch) * vec2(1.0, 1.0)))).x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))), ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)))) || false), true, true)), bool(bvec4(bool(bvec3((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(-4.0) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x) / 1.0))) > injectionSwitch.y))), true, true)), false, true, true)))))))))))), _GLF_IDENTITY((_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(length(injectionSwitch)))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), clamp((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0), _GLF_IDENTITY((injectionSwitch) * vec2(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(inversesqrt(18.68)) : _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-815.503)), float(1.0), bool(true)))))), ((injectionSwitch) * vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))) * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0)) * vec2(1.0, 1.0)), (injectionSwitch) * vec2(1.0, 1.0)))).x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), clamp((injectionSwitch) * vec2(1.0, 1.0), (injectionSwitch) * vec2(1.0, 1.0), (injectionSwitch) * vec2(1.0, 1.0)))).x > injectionSwitch.y))), true, true)), bool(bvec4(bool(bvec3((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true)), false, true, true)))))))))))), bool(bvec2((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), clamp((injectionSwitch) * vec2(1.0, 1.0), _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), ((injectionSwitch) * vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))) * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0)) * vec2(1.0, 1.0)), (injectionSwitch) * vec2(1.0, 1.0)))).x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) / 1.0)))), _GLF_IDENTITY(bool(bvec3((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true)), bool(bvec4(bool(bvec3((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x2(1.0, abs(0.0), determinant(mat3(0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0))))), float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(float(mat4x2(1.0, abs(0.0), determinant(mat3(0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0))))), max(float(mat4x2(1.0, abs(0.0), determinant(mat3(0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0))))), float(mat4x2(1.0, abs(0.0), determinant(mat3(0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0))))))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0), mat2x4(mat3x4(mat2x4(_GLF_IDENTITY(float(mat4x2(1.0, abs(0.0), determinant(mat3(0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0))))), max(float(mat4x2(1.0, abs(0.0), determinant(mat3(0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0))))), float(mat4x2(1.0, abs(0.0), determinant(mat3(0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0))))))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))))))))).x > injectionSwitch.y))), true, true)), false, true, true)))))))))))), false)))), ((_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(length(injectionSwitch)))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), clamp((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0), _GLF_IDENTITY((injectionSwitch) * vec2(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(inversesqrt(18.68)) : _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-815.503)), float(1.0), bool(true)))))), ((injectionSwitch) * vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))) * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0)) * vec2(1.0, 1.0)), (injectionSwitch) * vec2(1.0, 1.0)))).x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), clamp((injectionSwitch) * vec2(1.0, 1.0), (injectionSwitch) * vec2(1.0, 1.0), (injectionSwitch) * vec2(1.0, 1.0)))).x > injectionSwitch.y))), true, true)), bool(bvec4(bool(bvec3((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true)), false, true, true)))))))))))), bool(bvec2((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), clamp((injectionSwitch) * vec2(1.0, 1.0), _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), ((injectionSwitch) * vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))) * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0)) * vec2(1.0, 1.0)), (injectionSwitch) * vec2(1.0, 1.0)))).x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) / 1.0)))), _GLF_IDENTITY(bool(bvec3((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true)), bool(bvec4(bool(bvec3((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x2(1.0, abs(0.0), determinant(mat3(0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0))))), float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(float(mat4x2(1.0, abs(0.0), determinant(mat3(0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0))))), max(float(mat4x2(1.0, abs(0.0), determinant(mat3(0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0))))), float(mat4x2(1.0, abs(0.0), determinant(mat3(0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0))))))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0), mat2x4(mat3x4(mat2x4(_GLF_IDENTITY(float(mat4x2(1.0, abs(0.0), determinant(mat3(0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0))))), max(float(mat4x2(1.0, abs(0.0), determinant(mat3(0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0))))), float(mat4x2(1.0, abs(0.0), determinant(mat3(0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0))))))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))))))))).x > injectionSwitch.y))), true, true)), false, true, true)))))))))))), false))))) && true) || false)))), false || (true && _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)), _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))))).x > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (max(injectionSwitch, injectionSwitch)) / vec2(1.0, 1.0))).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), false || _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), clamp((injectionSwitch) * vec2(1.0, 1.0), _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), ((injectionSwitch) * vec2(1.0, 1.0)) * vec2(1.0, 1.0)), (injectionSwitch) * vec2(1.0, 1.0)))).x > injectionSwitch.y))), ((_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), clamp((injectionSwitch) * vec2(1.0, 1.0), _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), ((injectionSwitch) * vec2(1.0, 1.0)) * vec2(1.0, 1.0)), (injectionSwitch) * vec2(1.0, 1.0)))).x > injectionSwitch.y)))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))))))), (_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), clamp((injectionSwitch) * vec2(1.0, 1.0), _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), ((injectionSwitch) * vec2(1.0, 1.0)) * vec2(1.0, 1.0)), (injectionSwitch) * vec2(1.0, 1.0)))).x > injectionSwitch.y))), ((_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), clamp((injectionSwitch) * vec2(1.0, 1.0), _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), ((injectionSwitch) * vec2(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)) * vec2(1.0, 1.0)), (injectionSwitch) * vec2(1.0, 1.0)))).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.3)), bool(false))))))) || false)) && true), ! (! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, float(mat3x2(1.0, sqrt(1.0), 1.0, 1.0, 1.0, 1.0))), 1.0))) * vec2(1.0, 1.0)).x > injectionSwitch.y))))))))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y)), false || _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), clamp((injectionSwitch) * vec2(1.0, 1.0), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), clamp((injectionSwitch) * vec2(1.0, 1.0), (injectionSwitch) * vec2(1.0, 1.0), (injectionSwitch) * vec2(1.0, 1.0))), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) * vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 1.0), vec3(0.0, 0.0, 1.0))) * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))) * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0, 0.0, 0.0), _GLF_IDENTITY((vec4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))) * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0, 0.0, 0.0)) * mat4(1.0), min((vec4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))) * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0, 0.0, 0.0)) * mat4(1.0), (vec4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))) * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0, 0.0, 0.0)) * mat4(1.0)))))), 1.0)) * _GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)) * mat2(1.0), vec2(mat4x2((vec2(1.0, 1.0)) * mat2(1.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0))))), (injectionSwitch) * vec2(1.0, 1.0)))).x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(mat2x3((injectionSwitch), 0.0, 1.0, 1.0, 1.0))) * vec2(1.0, 1.0)).x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))), ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)))) || false), true, true)), bool(bvec4(bool(bvec3((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(-4.0) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x) / 1.0), float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x) / 1.0), 1.0, exp(0.0), 0.0, 0.0, abs(0.0), 1.0, 0.0, 0.0, 0.0, determinant(mat2(1.0, sqrt(0.0), 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 1.0), (true ? mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x) / 1.0), 1.0, exp(0.0), 0.0, 0.0, abs(0.0), 1.0, 0.0, 0.0, 0.0, determinant(mat2(1.0, sqrt(0.0), 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(mat4(77.92, -5.7, 378.852, -3740.6132, 7.0, 4.6, -377.948, 242.953, 3.4, 7386.4242, -604.976, 37.65, 0.1, -9.3, 79.97, 5.5)))))))) > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(-4.0) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x) / 1.0), float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x) / 1.0), 1.0, exp(0.0), 0.0, 0.0, abs(0.0), 1.0, 0.0, 0.0, 0.0, determinant(mat2(1.0, sqrt(0.0), 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 1.0), (true ? mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x) / 1.0), 1.0, exp(0.0), 0.0, 0.0, abs(0.0), 1.0, 0.0, 0.0, 0.0, determinant(mat2(1.0, sqrt(0.0), 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(mat4(77.92, -5.7, 378.852, -3740.6132, 7.0, 4.6, -377.948, 242.953, 3.4, 7386.4242, -604.976, 37.65, 0.1, -9.3, 79.97, 5.5)))))))) > injectionSwitch.y)) && true))), true, true)), false, true, true)))))))))))), _GLF_IDENTITY((_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))) ? injectionSwitch.y : _GLF_FUZZED(length(injectionSwitch))), max(_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))) ? injectionSwitch.y : _GLF_FUZZED(length(injectionSwitch))), (true ? (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))) ? injectionSwitch.y : _GLF_FUZZED(length(injectionSwitch))) : _GLF_FUZZED(-7.0))), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))) ? injectionSwitch.y : _GLF_FUZZED(length(injectionSwitch)))))))), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(6.0)), bool(false)))) * 1.0) < injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(6.0)), bool(false)))) * 1.0) < injectionSwitch.y))))) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), clamp((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (max(injectionSwitch, injectionSwitch)) * mat2(1.0)))) * vec2(1.0, 1.0), _GLF_IDENTITY((injectionSwitch) * vec2(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(inversesqrt(18.68)) : _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-815.503, mix(float(-815.503), float(_GLF_FUZZED(-8020.5584)), bool(false))))), float(1.0), bool(true)))))), ((injectionSwitch) * vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))) * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0)) * vec2(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)))), (injectionSwitch) * vec2(1.0, 1.0)))).x, mix(float(_GLF_FUZZED(-5991.1964)), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), clamp((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (max(injectionSwitch, injectionSwitch)) * mat2(1.0)))) * vec2(1.0, 1.0), _GLF_IDENTITY((injectionSwitch) * vec2(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(inversesqrt(18.68)) : _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-815.503, mix(float(-815.503), float(_GLF_FUZZED(-8020.5584)), bool(false))))), float(1.0), bool(true)))))), ((injectionSwitch) * vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))) * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0)) * vec2(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)))), (injectionSwitch) * vec2(1.0, 1.0)))).x), bool(true))) > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), clamp((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) * vec2(1.0, 1.0), (injectionSwitch) * vec2(1.0, 1.0), (injectionSwitch) * vec2(1.0, 1.0)))).x > injectionSwitch.y))), true, true)), bool(bvec4(bool(bvec3((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true)), false, true, true)))))))))))), bool(bvec2((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true, true))), false, true, true))), true, true, true))) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)), false || _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), clamp((injectionSwitch) * vec2(1.0, 1.0), _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), ((injectionSwitch) * vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))) * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0)) * vec2(1.0, 1.0)), (injectionSwitch) * vec2(1.0, 1.0)))).x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) / _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-221.932)), float(1.0), bool(true))))))), _GLF_IDENTITY(bool(bvec3((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true)), bool(bvec4(bool(bvec3((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x2(1.0, abs(0.0), determinant(mat3(0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0))))), float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(float(mat4x2(1.0, abs(0.0), determinant(mat3(0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0))))), max(float(mat4x2(1.0, abs(0.0), determinant(mat3(0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0))))), float(mat4x2(1.0, abs(0.0), determinant(mat3(0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0))))))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0), mat2x4(mat3x4(mat2x4(_GLF_IDENTITY(float(mat4x2(1.0, abs(0.0), determinant(mat3(0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0))))), max(float(mat4x2(1.0, abs(0.0), determinant(mat3(0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0))))), float(mat4x2(1.0, abs(0.0), determinant(mat3(0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0))))))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))))))), mix(float(_GLF_FUZZED(float(60105u))), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x2(1.0, abs(0.0), determinant(mat3(0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0))))), float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(float(mat4x2(1.0, abs(0.0), determinant(mat3(0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0))))), max(float(mat4x2(1.0, abs(0.0), determinant(mat3(0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0))))), float(mat4x2(1.0, abs(0.0), determinant(mat3(0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0))))))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0), mat2x4(mat3x4(mat2x4(_GLF_IDENTITY(float(mat4x2(1.0, abs(0.0), determinant(mat3(0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0))))), max(float(mat4x2(1.0, abs(0.0), determinant(mat3(0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0))))), float(mat4x2(1.0, abs(0.0), determinant(mat3(0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0))))))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))))))), max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x2(1.0, abs(0.0), determinant(mat3(0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0))))), float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(float(mat4x2(1.0, abs(0.0), determinant(mat3(0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0))))), max(float(mat4x2(1.0, abs(0.0), determinant(mat3(0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0))))), float(mat4x2(1.0, abs(0.0), determinant(mat3(0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0))))))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0), mat2x4(mat3x4(mat2x4(_GLF_IDENTITY(float(mat4x2(1.0, abs(0.0), determinant(mat3(0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0))))), max(float(mat4x2(1.0, abs(0.0), determinant(mat3(0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0))))), float(mat4x2(1.0, abs(0.0), determinant(mat3(0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0))))))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x2(1.0, abs(0.0), determinant(mat3(0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0))))), float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(float(mat4x2(1.0, abs(0.0), determinant(mat3(0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0))))), max(float(mat4x2(1.0, abs(0.0), determinant(mat3(0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0))))), float(mat4x2(1.0, abs(0.0), determinant(mat3(0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0))))))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0), mat2x4(mat3x4(mat2x4(_GLF_IDENTITY(float(mat4x2(1.0, abs(0.0), determinant(mat3(0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0))))), max(float(mat4x2(1.0, abs(0.0), determinant(mat3(0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0))))), float(mat4x2(1.0, abs(0.0), determinant(mat3(0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0))))))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)))))))))), bool(true))))).x > injectionSwitch.y))), true, true)), false, true, true)))))))))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), true && (bool(bvec4(false, false, true, true))))))))), ((_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(length(injectionSwitch)), 0.0 + (_GLF_FUZZED(length(injectionSwitch)))))))), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), clamp((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0), _GLF_IDENTITY((injectionSwitch) * vec2(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(inversesqrt(18.68)) : _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-815.503)), float(1.0), bool(true)))))), ((injectionSwitch) * vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))) * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0)) * vec2(1.0, 1.0)), (injectionSwitch) * vec2(1.0, 1.0)))).x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), clamp((injectionSwitch) * vec2(1.0, 1.0), (injectionSwitch) * vec2(1.0, 1.0), (injectionSwitch) * vec2(1.0, 1.0)))).x > injectionSwitch.y))), true, true)), bool(bvec4(bool(bvec3((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true)), false, true, true))))))))), (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), clamp((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0), _GLF_IDENTITY((injectionSwitch) * vec2(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(inversesqrt(18.68)) : _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-815.503)), float(1.0), bool(true)))))), ((injectionSwitch) * vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))) * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0)) * vec2(1.0, 1.0)), (injectionSwitch) * vec2(1.0, 1.0)))).x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), clamp((injectionSwitch) * vec2(1.0, 1.0), (injectionSwitch) * vec2(1.0, 1.0), (injectionSwitch) * vec2(1.0, 1.0)))).x > injectionSwitch.y))), true, true)), bool(bvec4(bool(bvec3((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true)), false, true, true))))))))), false || (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, (injectionSwitch.x) * 1.0) < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), clamp((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0), _GLF_IDENTITY((injectionSwitch) * vec2(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(inversesqrt(18.68), clamp(inversesqrt(18.68), _GLF_IDENTITY(inversesqrt(18.68), (inversesqrt(18.68)) / 1.0), inversesqrt(18.68)))) : _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-815.503)), float(1.0), bool(true)))))), ((injectionSwitch) * vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))) * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0)) * vec2(1.0, 1.0)), (injectionSwitch) * vec2(1.0, 1.0)))).x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), clamp((injectionSwitch) * vec2(1.0, 1.0), (injectionSwitch) * vec2(1.0, 1.0), (injectionSwitch) * vec2(1.0, 1.0)))).x > injectionSwitch.y))), true, true)), bool(bvec4(bool(bvec3((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true)), false, true, true)))))))))))) && true)))), bool(bvec2((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), _GLF_IDENTITY(vec2(mat2x3(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)), vec2(mat3x4(vec2(mat2x3(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, length(vec3(0.0, 0.0, 0.0))))))), _GLF_IDENTITY((injectionSwitch) * vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(633.250) : 1.0)), 1.0), clamp((injectionSwitch) * vec2(1.0, 1.0), _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), ((injectionSwitch) * vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))) * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0)) * vec2(1.0, 1.0)), (injectionSwitch) * vec2(1.0, 1.0)))).x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) / 1.0)))), _GLF_IDENTITY(bool(bvec3((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true)), bool(bvec4(bool(bvec3((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x2(1.0, abs(0.0), determinant(mat3(0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0))))), float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(float(mat4x2(1.0, abs(0.0), determinant(mat3(0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0))))), max(float(mat4x2(1.0, abs(0.0), determinant(mat3(0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))), vec2(1.0, 0.0)), dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0))))), float(mat4x2(1.0, abs(0.0), determinant(mat3(0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-9594.1739))), 1.0)), 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0))))))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0), mat2x4(mat3x4(mat2x4(_GLF_IDENTITY(float(mat4x2(1.0, abs(0.0), determinant(mat3(0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0))))), max(float(mat4x2(1.0, abs(0.0), determinant(_GLF_IDENTITY(mat3(0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0), (true ? mat3(0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat3(7.6, 149.529, 465.440, -8.5, 3.4, -2.6, 75.89, 7792.6183, 6.4))))), 1.0, _GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, abs(1.0), 1.0, 1.0, 0.0))), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(5.7)), float(0.0), bool(true))), 0.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0))))), float(mat4x2(1.0, abs(0.0), determinant(mat3(0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8026.6281)), float(0.0), bool(true)))))))))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))))))))).x > injectionSwitch.y))), true, true)), false, true, true)))))))))))), false))))) && _GLF_IDENTITY(true, (true) || false)) || false)))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-7393.3133)), bool(false)))) * 1.0)))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((9570.8282 - vec2(-1.9, 926.286))) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(8.5)), float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), bool(true)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0))), mat2x3(_GLF_IDENTITY(mat4x3(mat2x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)))), transpose(transpose(mat4x3(mat2x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0))))))))))).y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((false)) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))))) && true)))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(1.3), _GLF_FUZZED(-9944.3293)), bvec2(false, false))).x : _GLF_FUZZED(-122.188))) > injectionSwitch.y, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-122.188))) > injectionSwitch.y), (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(-122.188, (-122.188) / 1.0)))) > injectionSwitch.y), bool(bvec3(! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-122.188))) > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-122.188))) > injectionSwitch.y), true), bvec2(bvec3(bvec2((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-122.188))) > injectionSwitch.y), true), true)))), (bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-122.188))) > injectionSwitch.y), true), bvec2(bvec3(bvec2((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-122.188))) > injectionSwitch.y), true), true))))) || false)), false, false)))) && true)), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-122.188))) > injectionSwitch.y), (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-122.188))) > injectionSwitch.y), bool(bvec3(! (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-122.188))) > injectionSwitch.y), false, false)))) && true)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-122.188))) > injectionSwitch.y), (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-122.188))) > injectionSwitch.y), bool(bvec3(! (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-122.188))) > injectionSwitch.y), false, false)))) && true)), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-122.188))) > injectionSwitch.y), (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-122.188))) > injectionSwitch.y), bool(bvec3(! (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-122.188))) > injectionSwitch.y), false, false)))) && true)), true), bvec2(bvec3(bvec2(! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-122.188))) > injectionSwitch.y), (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-122.188))) > injectionSwitch.y), bool(bvec3(! (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-122.188))) > injectionSwitch.y), false, false)))) && true)), true), true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-122.188))) > injectionSwitch.y), (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-122.188))) > injectionSwitch.y), bool(bvec3(! (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-122.188))) > injectionSwitch.y), false, false)))) && true)), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-122.188))) > injectionSwitch.y), (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-122.188))) > injectionSwitch.y), bool(bvec3(! (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-122.188))) > injectionSwitch.y), false, false)))) && true)), true), bvec2(bvec3(bvec2(! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-122.188))) > injectionSwitch.y), (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-122.188))) > injectionSwitch.y), bool(bvec3(! (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-122.188))) > injectionSwitch.y), false, false)))) && true)), true), true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) || false))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_DEAD(false))))), (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_DEAD(false)))))) || false)))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-2.0, 961.684)) : injectionSwitch, max(false ? _GLF_FUZZED(vec2(-2.0, 961.684)) : injectionSwitch, false ? _GLF_FUZZED(vec2(-2.0, 961.684)) : injectionSwitch)))).x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
          barrier();
         barrier();
        }
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, _GLF_IDENTITY(false, (false) || false), true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, true, false, true)), bool(bvec2(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x2(1.0, 0.0, 0.0, 1.0, 1.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), sqrt(1.0), 0.0)), clamp(float(mat4x2(1.0, 0.0, 0.0, 1.0, 1.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), sqrt(1.0), 0.0)), float(mat4x2(1.0, 0.0, 0.0, 1.0, 1.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), sqrt(1.0), 0.0)), float(mat4x2(1.0, 0.0, 0.0, 1.0, 1.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), sqrt(1.0), 0.0))))), 1.0)).y, true, false, true)), false))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 1.0, 1.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0))), injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, bool(bvec2(false, false))), true, true))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (bool(_GLF_DEAD(false))))))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), false, true)), bool(bvec4(_GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), false, true)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), false, true)), true && (bool(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), false, true)))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), false, true)), true && (bool(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), false, true)))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), true, true, true))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(6018.0538))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), (true ? injectionSwitch.x : _GLF_FUZZED(6018.0538))) > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), bool(bool(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bool(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), false || (bool(bool(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))) || false)))))))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), ! (! (bool(_GLF_IDENTITY(false, (false) || false)))))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))) || false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, true && (true)) && (_GLF_DEAD(false)))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (gl_WorkGroupID.x));
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))
    return;
   barrier();
  }
 uint subgroup_base = _GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u) * subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0))))), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(109602u)), _GLF_FUZZED(float(true))), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(9.9))) < injectionSwitch.y)), true))).x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(109602u)), _GLF_FUZZED(float(true))), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(109602u)), _GLF_FUZZED(float(true))), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(109602u)), _GLF_FUZZED(float(true))), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(109602u)), _GLF_FUZZED(float(true))), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(59.71) : injectionSwitch.x)) < injectionSwitch.y)), true))).x, 0.0 + (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(109602u)), _GLF_FUZZED(float(true))), vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0), clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)), true))).x)))) > injectionSwitch.y)), true))) && true))) && true)))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY((! (false)), bool(bvec3(_GLF_IDENTITY((! (false)), true && ((! (false)))), _GLF_IDENTITY(false, bool(bool(false))), false)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((! (false)), true && ((! (false)))), _GLF_IDENTITY(false, bool(bool(false))), false)), false || (bool(bvec3(_GLF_IDENTITY((! (false)), true && ((! (false)))), _GLF_IDENTITY(false, bool(bool(false))), false))))))), bool(bool(! ((_GLF_IDENTITY((! (false)), bool(bvec3(_GLF_IDENTITY((! (false)), true && ((! (false)))), _GLF_IDENTITY(false, bool(bool(false))), false))))))))))))), false, false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false || (false), ! (! _GLF_IDENTITY((false || (false)), bool(bvec4((false || (false)), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) || false))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, false))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, false))))))))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))) || false)) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y))))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(0.0, 1.0), clamp(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), max(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), (_GLF_IDENTITY(false, (false) && true) ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mat2(1.0) * (_GLF_FUZZED(injectionSwitch))) : vec2(0.0, 1.0))))), vec2(0.0, 1.0)))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), 1.0 * (dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))) + (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-45.34)), float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), _GLF_IDENTITY(bool(true), (bool(true)) || false)))))))))), max(_GLF_IDENTITY(dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(0.0, 1.0), clamp(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), max(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), (_GLF_IDENTITY(false, (false) && true) ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mat2(1.0) * (_GLF_FUZZED(injectionSwitch))) : vec2(0.0, 1.0))))), vec2(0.0, 1.0)))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), 1.0 * (dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))) + (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-45.34)), float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), _GLF_IDENTITY(bool(true), (bool(true)) || false)))))))))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(0.0, 1.0), clamp(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), max(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), (_GLF_IDENTITY(false, (false) && true) ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mat2(1.0) * (_GLF_FUZZED(injectionSwitch))) : vec2(0.0, 1.0))))), vec2(0.0, 1.0)))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), 1.0 * (dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))) + (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-45.34)), float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), _GLF_IDENTITY(bool(true), (bool(true)) || false))))))))))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bool(false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bool(false))))), false || (! (_GLF_IDENTITY(bool(bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bool(false))))))))), true, false, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((bool(bool(false))), ! (! ((bool(bool(false))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bool(false))))), false || (! (_GLF_IDENTITY(bool(bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bool(false))))))))), true, false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, false || (false)))))
    return;
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) + subgroup_base, clamp(workgroup_base + _GLF_IDENTITY(subgroup_base, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (subgroup_base)), _GLF_IDENTITY(workgroup_base + subgroup_base, uint(uint(_GLF_IDENTITY(workgroup_base + subgroup_base, min(_GLF_IDENTITY(workgroup_base + subgroup_base, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 0.0 + (_GLF_ONE(1.0, injectionSwitch.y)))) * (workgroup_base + subgroup_base)), workgroup_base + subgroup_base))))), workgroup_base + subgroup_base)), workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))) | (subgroup_base)))), workgroup_base + subgroup_base)))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uint(_GLF_IDENTITY(workgroup_base + subgroup_base, min(_GLF_IDENTITY(workgroup_base + subgroup_base, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 0.0 + (_GLF_ONE(1.0, injectionSwitch.y)))) * (workgroup_base + subgroup_base)), workgroup_base + subgroup_base))))), (_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uint(_GLF_IDENTITY(workgroup_base + subgroup_base, min(_GLF_IDENTITY(workgroup_base + subgroup_base, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 0.0 + (_GLF_ONE(1.0, injectionSwitch.y)))) * (workgroup_base + subgroup_base)), workgroup_base + subgroup_base)))))) | 0u), workgroup_base + subgroup_base)), _GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), clamp(~ (workgroup_base), _GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) | 0u), ~ (workgroup_base))))) + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))) | (subgroup_base)))), workgroup_base + subgroup_base)))))), uint(uvec2(uint(uint(_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, uint(uint(_GLF_IDENTITY(workgroup_base + subgroup_base, min(_GLF_IDENTITY(workgroup_base + subgroup_base, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 0.0 + (_GLF_ONE(1.0, injectionSwitch.y)))) * (workgroup_base + subgroup_base)), workgroup_base + subgroup_base))))), _GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) - 0u))) + subgroup_base)), workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))) | (subgroup_base)))), workgroup_base + subgroup_base)))))), uint(_GLF_ONE(1.0, injectionSwitch.y)))))) + ((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) + 0u), clamp(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(true ? workgroup_base + subgroup_base : _GLF_FUZZED(99028u), max(true ? workgroup_base + subgroup_base : _GLF_FUZZED(99028u), true ? workgroup_base + subgroup_base : _GLF_FUZZED(99028u))))), min(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)) * (workgroup_base + subgroup_base), ~ (~ (uint(_GLF_ONE(1.0, injectionSwitch.y)) * (workgroup_base + subgroup_base))))), _GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_base))))), _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), max((workgroup_base), _GLF_IDENTITY((workgroup_base), clamp((workgroup_base), (workgroup_base), (workgroup_base))))) * uint(_GLF_ONE(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(415.709)), bool(false))), 1.0)), injectionSwitch.y))) + subgroup_base)), workgroup_base + subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, ~ (~ (workgroup_base + subgroup_base))), min(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))) | (subgroup_base)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))) | (subgroup_base)))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))) | (subgroup_base))))), clamp((_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))) | (subgroup_base))))), (_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))) | (subgroup_base))))), (_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))) | (subgroup_base))))))) >> (0u >> _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, (4u) / 1u), _GLF_IDENTITY(4u, (false ? _GLF_FUZZED(packUnorm2x16(injectionSwitch)) : 4u)))), (_GLF_IDENTITY(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, (4u) / 1u), _GLF_IDENTITY(4u, (false ? _GLF_FUZZED(packUnorm2x16(injectionSwitch)) : 4u)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, (4u) / 1u), _GLF_IDENTITY(4u, (false ? _GLF_FUZZED(packUnorm2x16(injectionSwitch)) : 4u)))), (_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, (4u) / 1u), _GLF_IDENTITY(4u, (false ? _GLF_FUZZED(packUnorm2x16(injectionSwitch)) : 4u))))) >> 0u)))) << 0u)))))) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))) | _GLF_IDENTITY((subgroup_base), ((subgroup_base)) << 0u)), min(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))) | _GLF_IDENTITY((subgroup_base), ((subgroup_base)) << 0u)), _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))) | _GLF_IDENTITY((subgroup_base), ((subgroup_base)) << 0u)))))))), (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))) | (subgroup_base)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(workgroup_size) : subgroup_base))) | (_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))) | (subgroup_base)))), (_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))) | (subgroup_base))))) >> (0u >> _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, (4u) / 1u), _GLF_IDENTITY(4u, (false ? _GLF_FUZZED(packUnorm2x16(injectionSwitch)) : 4u)))), (_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, (4u) / 1u), _GLF_IDENTITY(4u, (false ? _GLF_FUZZED(packUnorm2x16(injectionSwitch)) : 4u))))) << 0u)))))) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))) | _GLF_IDENTITY((subgroup_base), ((subgroup_base)) << 0u)), min(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))) | _GLF_IDENTITY((subgroup_base), ((subgroup_base)) << _GLF_IDENTITY(0u, 1u * (0u)))), _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))) | _GLF_IDENTITY((subgroup_base), ((subgroup_base)) << 0u))))))))) >> 0u), _GLF_IDENTITY(workgroup_base + subgroup_base, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))), uint(uint(uint(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)))))))), workgroup_base)) + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + subgroup_base)))))), clamp(_GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + subgroup_base)))))), ((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + subgroup_base))))))) / 1u), _GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + subgroup_base)))))), uint(uvec2(_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + subgroup_base, 0u | (_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, ~ (~ (workgroup_base + subgroup_base))), workgroup_base + subgroup_base)))))), ~ (~ ((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + subgroup_base))))))))), 0u))), _GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(_GLF_IDENTITY(workgroup_base + subgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base + subgroup_base), (~ (workgroup_base + subgroup_base)) >> 0u))), workgroup_base + subgroup_base, workgroup_base + subgroup_base)))))), clamp((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + subgroup_base)))))), (~ (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + subgroup_base)))))), (~ (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + subgroup_base))))))))))))))) + ((subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)) % subgroup_size)) / 1u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec4(_GLF_IDENTITY(5010.1015, clamp(5010.1015, _GLF_IDENTITY(5010.1015, max(_GLF_IDENTITY(5010.1015, float(mat2x3(5010.1015, 1.0, 1.0, 0.0, 0.0, 1.0))), 5010.1015)), 5010.1015)), _GLF_IDENTITY(-8.5, max(-8.5, -8.5)), 243.393, 7.4).p)), bool(false)))), false || (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) + 0)])).y)))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y) && true))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))).y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (injectionSwitch) / vec2(1.0, 1.0)))).y, true && (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - abs(0.0)), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0)), (true ? float(mat4x2(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0)) : _GLF_FUZZED(8.0)))))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), (injectionSwitch), (injectionSwitch))) * mat2(1.0)) : _GLF_FUZZED(injectionSwitch))), (injectionSwitch) / vec2(1.0, 1.0)))).y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y) && true)), bool(bool((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y) && true))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 1.0, sin(0.0), 0.0))).x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, 1.0)), clamp(vec2(mat2(injectionSwitch, 1.0, 1.0)), vec2(mat2(injectionSwitch, 1.0, 1.0)), vec2(mat2(injectionSwitch, 1.0, 1.0))))).y))))))), false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, 1.0)), clamp(vec2(mat2(injectionSwitch, 1.0, 1.0)), vec2(mat2(injectionSwitch, 1.0, 1.0)), vec2(mat2(injectionSwitch, 1.0, 1.0))))).y))))))), false || (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, 1.0)), clamp(vec2(mat2(injectionSwitch, 1.0, 1.0)), vec2(mat2(injectionSwitch, 1.0, 1.0)), vec2(mat2(injectionSwitch, 1.0, 1.0))))).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, 1.0)), clamp(vec2(mat2(injectionSwitch, 1.0, 1.0)), vec2(mat2(injectionSwitch, 1.0, 1.0)), vec2(mat2(injectionSwitch, 1.0, 1.0))))).y) && true))))))))))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))), (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 1.0, sin(0.0), 0.0))).x > injectionSwitch.y)))))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))), (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 1.0, sin(0.0), 0.0))).x > injectionSwitch.y))))))) && true), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, 1.0)), clamp(vec2(mat2(injectionSwitch, 1.0, 1.0)), vec2(mat2(injectionSwitch, 1.0, 1.0)), vec2(mat2(injectionSwitch, 1.0, 1.0))))).y)))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, 1.0)), clamp(vec2(mat2(injectionSwitch, 1.0, 1.0)), vec2(mat2(injectionSwitch, 1.0, 1.0)), vec2(mat2(injectionSwitch, 1.0, 1.0))))).y)))))))), true && (! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, 1.0)), clamp(vec2(mat2(injectionSwitch, 1.0, 1.0)), vec2(mat2(injectionSwitch, 1.0, 1.0)), vec2(mat2(injectionSwitch, 1.0, 1.0))))).y)))))))))), true, false)), (bool(bvec3(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, 1.0)), clamp(vec2(mat2(injectionSwitch, 1.0, 1.0)), vec2(mat2(injectionSwitch, 1.0, 1.0)), vec2(mat2(injectionSwitch, 1.0, 1.0))))).y)))))))), true && (! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, 1.0)), clamp(vec2(mat2(injectionSwitch, 1.0, 1.0)), vec2(mat2(injectionSwitch, 1.0, 1.0)), vec2(mat2(injectionSwitch, 1.0, 1.0))))).y)))))))))), true, false))) || false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, 1.0)), clamp(vec2(mat2(injectionSwitch, 1.0, 1.0)), vec2(mat2(injectionSwitch, 1.0, 1.0)), vec2(mat2(injectionSwitch, 1.0, 1.0))))).y)))))))), true && (! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, 1.0)), clamp(vec2(mat2(injectionSwitch, 1.0, 1.0)), vec2(mat2(injectionSwitch, 1.0, 1.0)), vec2(mat2(injectionSwitch, 1.0, 1.0))))).y)))))))))), true, false)), (bool(bvec3(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, 1.0)), clamp(vec2(mat2(injectionSwitch, 1.0, 1.0)), vec2(mat2(injectionSwitch, 1.0, 1.0)), vec2(mat2(injectionSwitch, 1.0, 1.0))))).y)))))))), true && (! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, 1.0)), clamp(vec2(mat2(injectionSwitch, 1.0, 1.0)), vec2(mat2(injectionSwitch, 1.0, 1.0)), vec2(mat2(injectionSwitch, 1.0, 1.0))))).y)))))))))), true, false))) || false))), false || (bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, 1.0)), clamp(vec2(mat2(injectionSwitch, 1.0, 1.0)), vec2(mat2(injectionSwitch, 1.0, 1.0)), vec2(mat2(injectionSwitch, 1.0, 1.0))))).y)))))))), true && (! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, 1.0)), clamp(vec2(mat2(injectionSwitch, 1.0, 1.0)), vec2(mat2(injectionSwitch, 1.0, 1.0)), vec2(mat2(injectionSwitch, 1.0, 1.0))))).y)))))))))), true, false)), (bool(bvec3(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, 1.0)), clamp(vec2(mat2(injectionSwitch, 1.0, 1.0)), vec2(mat2(injectionSwitch, 1.0, 1.0)), vec2(mat2(injectionSwitch, 1.0, 1.0))))).y)))))))), true && (! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, 1.0)), clamp(vec2(mat2(injectionSwitch, 1.0, 1.0)), vec2(mat2(injectionSwitch, 1.0, 1.0)), vec2(mat2(injectionSwitch, 1.0, 1.0))))).y)))))))))), true, false))) || false)))))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), false, false)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), false, false)), true && (bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), false, false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), false, false)), false || (bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, (false) || false)), false, false)))), true, false, false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - abs(0.0)) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(abs(0.0), 0.0 + (abs(0.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(abs(0.0), 0.0 + (abs(0.0)))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(abs(0.0), 0.0 + (abs(0.0))))) * 1.0)) / 1.0) > injectionSwitch.y) && true)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), mat2(1.0) * _GLF_IDENTITY((injectionSwitch), vec2(vec3((injectionSwitch), abs(1.0))))).x, _GLF_IDENTITY((injectionSwitch.x) - abs(0.0), ((injectionSwitch.x) - abs(0.0)) + 0.0)) > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(abs(0.0), 1.0 * (abs(0.0)))) > injectionSwitch.y), true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))) - abs(0.0)) > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.5), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8.7)), bvec2(true, false))), 1.0, 0.0, 0.0, 0.0, 1.0, sin(0.0)), mat4x2(mat4x3(mat4x2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.5), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8.7)), bvec2(true, false))), 1.0, 0.0, 0.0, 0.0, 1.0, sin(0.0)))))), (vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.5), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8.7)), bvec2(true, false))), 1.0, 0.0, 0.0, 0.0, 1.0, sin(0.0)), mat4x2(mat4x3(mat4x2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.5), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8.7)), bvec2(true, false))), 1.0, 0.0, 0.0, 0.0, 1.0, sin(0.0))))))) * mat2(1.0))), injectionSwitch, injectionSwitch)).x, (injectionSwitch.x) - abs(0.0)) > injectionSwitch.y), true))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7128.2015, 967.440)))), (injectionSwitch) - vec2(0.0, 0.0)).x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), (injectionSwitch) / vec2(1.0, 1.0)).x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x))))) - abs(0.0)) > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.5), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8.7)), bvec2(true, false))), 1.0, 0.0, 0.0, 0.0, 1.0, sin(0.0)), mat4x2(mat4x3(mat4x2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.5), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8.7)), bvec2(true, false))), 1.0, 0.0, 0.0, 0.0, 1.0, sin(0.0)))))), (vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.5), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8.7)), bvec2(true, false))), 1.0, 0.0, 0.0, 0.0, 1.0, sin(0.0)), mat4x2(mat4x3(mat4x2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.5), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8.7)), bvec2(true, false))), 1.0, 0.0, 0.0, 0.0, 1.0, sin(0.0))))))) * mat2(1.0))), vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.5), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8.7)), bvec2(true, false))), 1.0, 0.0, 0.0, 0.0, 1.0, sin(0.0)), mat4x2(mat4x3(mat4x2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.5), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8.7)), bvec2(true, false))), 1.0, 0.0, 0.0, 0.0, 1.0, sin(0.0)))))), (vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.5), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8.7)), bvec2(true, false))), 1.0, 0.0, 0.0, 0.0, 1.0, sin(0.0)), mat4x2(mat4x3(mat4x2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.5), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8.7)), bvec2(true, false))), 1.0, 0.0, 0.0, 0.0, 1.0, sin(0.0))))))) * mat2(1.0))), 0.0, 0.0, 0.0, 1.0))), injectionSwitch, injectionSwitch)).x, (injectionSwitch.x) - abs(0.0)) > injectionSwitch.y), true)))))))), false, false, true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bool(true)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false)))), bool(bvec4(bool(bvec2(false, false)), true, true, false))))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec2(-7.6, -672.990))) : injectionSwitch)).y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[virtual_gid], uint(1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (true ? 4 : _GLF_FUZZED(1399))), (_GLF_IDENTITY(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(1399))), 0 ^ (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(1399)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(1399))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(true, bool(bool(true))) ? 4 : _GLF_FUZZED(1399))), (true ? _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(1399))) : _GLF_FUZZED(61227))), _GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, max(4, 4)) : _GLF_FUZZED(1399))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, ~ (~ (4)))) - 0), (true ? 4 : _GLF_FUZZED(1399))), min(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(1399))), _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(1399))))))))), 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))
  barrier();
 if((subgroup_local_id % 2) == 0)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0))), float(vec4(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0))), 0.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0))))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
    barrier();
   subgroupAll(true);
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(mat3x2(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, float(float(1.0))), 1.0)))), dot(vec4(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec3(1.0, 0.0, 1.0), max(vec3(1.0, 0.0, 1.0), vec3(1.0, 0.0, 1.0)))))) - 0.0)), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 1.0)), float(mat2x3(float(mat3x2(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0))), (_GLF_IDENTITY(float(mat3x2(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, float(float(1.0))), 1.0)))), dot(vec4(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec3(1.0, 0.0, 1.0), max(vec3(1.0, 0.0, 1.0), vec3(1.0, 0.0, 1.0)))))) - 0.0)), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 1.0)), float(mat2x3(float(mat3x2(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0)))) / 1.0))) / sqrt(1.0)) > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x2(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 1.0)), float(mat2x3(float(mat3x2(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 1.0 * (1.0))) * 1.0)))), 1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0)))), clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x2(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), mix(float(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), float(_GLF_FUZZED(-569.012)), bool(false))), dot(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 1.0)), float(mat2x3(float(mat3x2(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, _GLF_IDENTITY(1.0, (1.0) - log(sqrt(1.0))))), 1.0, 0.0, 1.0, 1.0, 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x2(injectionSwitch.x, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(vec3(548.731, -297.027, -2714.3461).s)), float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(6182.1764) : 1.0))), bool(true))))), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), (vec4(0.0, 0.0, 0.0, 1.0)) / vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0)), float(mat2x3(float(mat3x2(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, float(float(0.0))), 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0)))), (true ? _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x2(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0), vec4(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(7622.6603)), bool(false))), 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 1.0)), float(mat2x3(float(mat3x2(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))))) : _GLF_FUZZED(150.344))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x2(injectionSwitch.x, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, false || (true)) ? _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) : _GLF_FUZZED(-14.04))), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 1.0)), float(mat2x3(float(mat3x2(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))))), 1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0))))))) / sqrt(1.0)) > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true, false)), false, false)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-50.23), _GLF_FUZZED(-3.2)), bvec2(false, false))), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-50.23), _GLF_FUZZED(-3.2)), bvec2(false, false))))), mix(vec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))), mix(vec2((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-50.23), _GLF_FUZZED(-3.2)), bvec2(false, false))), mat2(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * round(length(normalize(vec2(1.0, 1.0))))))))) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-50.23), _GLF_FUZZED(-3.2)), bvec2(false, false))))))[0], (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-50.23), _GLF_FUZZED(-3.2)), bvec2(false, false))), mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).y)) + sin(abs(0.0)))) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-50.23), _GLF_FUZZED(-3.2)), bvec2(false, false))))))[1]), vec2(_GLF_FUZZED(-551.125), _GLF_FUZZED(-744.435)), bvec2(false, false))))).x, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-50.23, min(_GLF_IDENTITY(-50.23, 0.0 + (_GLF_IDENTITY(-50.23, mix(float(-50.23), float(_GLF_FUZZED(-6130.2302)), bool(false))))), _GLF_IDENTITY(-50.23, clamp(-50.23, -50.23, -50.23)))), clamp(-50.23, -50.23, -50.23)), (_GLF_IDENTITY(_GLF_IDENTITY(-50.23, min(_GLF_IDENTITY(-50.23, 0.0 + (_GLF_IDENTITY(-50.23, mix(float(-50.23), _GLF_IDENTITY(float(_GLF_FUZZED(-6130.2302)), (float(_GLF_FUZZED(-6130.2302))) - 0.0), bool(false))))), _GLF_IDENTITY(-50.23, _GLF_IDENTITY(clamp(-50.23, -50.23, -50.23), clamp(clamp(-50.23, -50.23, -50.23), _GLF_IDENTITY(clamp(-50.23, -50.23, -50.23), min(clamp(-50.23, -50.23, -50.23), clamp(-50.23, -50.23, -50.23))), clamp(-50.23, -50.23, -50.23)))))), clamp(-50.23, -50.23, -50.23))) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-50.23, min(_GLF_IDENTITY(-50.23, 0.0 + (_GLF_IDENTITY(-50.23, mix(float(-50.23), float(_GLF_FUZZED(-6130.2302)), bool(false))))), _GLF_IDENTITY(-50.23, clamp(-50.23, -50.23, -50.23)))), clamp(-50.23, -50.23, -50.23)), (_GLF_IDENTITY(_GLF_IDENTITY(-50.23, min(_GLF_IDENTITY(-50.23, 0.0 + (_GLF_IDENTITY(-50.23, mix(float(-50.23), _GLF_IDENTITY(float(_GLF_FUZZED(-6130.2302)), (float(_GLF_FUZZED(-6130.2302))) - 0.0), bool(false))))), _GLF_IDENTITY(-50.23, _GLF_IDENTITY(clamp(-50.23, -50.23, -50.23), clamp(clamp(-50.23, -50.23, -50.23), _GLF_IDENTITY(clamp(-50.23, -50.23, -50.23), min(clamp(-50.23, -50.23, -50.23), clamp(-50.23, -50.23, -50.23))), clamp(-50.23, -50.23, -50.23)))))), clamp(-50.23, -50.23, -50.23))) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-50.23, min(_GLF_IDENTITY(-50.23, 0.0 + (_GLF_IDENTITY(-50.23, mix(float(-50.23), float(_GLF_FUZZED(-6130.2302)), bool(false))))), _GLF_IDENTITY(-50.23, clamp(-50.23, -50.23, -50.23)))), clamp(-50.23, -50.23, -50.23)), (_GLF_IDENTITY(_GLF_IDENTITY(-50.23, min(_GLF_IDENTITY(-50.23, 0.0 + (_GLF_IDENTITY(-50.23, mix(float(-50.23), _GLF_IDENTITY(float(_GLF_FUZZED(-6130.2302)), (float(_GLF_FUZZED(-6130.2302))) - 0.0), bool(false))))), _GLF_IDENTITY(-50.23, _GLF_IDENTITY(clamp(-50.23, -50.23, -50.23), clamp(clamp(-50.23, -50.23, -50.23), _GLF_IDENTITY(clamp(-50.23, -50.23, -50.23), min(clamp(-50.23, -50.23, -50.23), clamp(-50.23, -50.23, -50.23))), clamp(-50.23, -50.23, -50.23)))))), clamp(-50.23, -50.23, -50.23))) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-50.23, min(_GLF_IDENTITY(-50.23, 0.0 + (_GLF_IDENTITY(-50.23, mix(float(-50.23), float(_GLF_FUZZED(-6130.2302)), bool(false))))), _GLF_IDENTITY(-50.23, clamp(-50.23, -50.23, -50.23)))), clamp(-50.23, -50.23, -50.23)), (_GLF_IDENTITY(_GLF_IDENTITY(-50.23, min(_GLF_IDENTITY(-50.23, 0.0 + (_GLF_IDENTITY(-50.23, mix(float(-50.23), _GLF_IDENTITY(float(_GLF_FUZZED(-6130.2302)), (float(_GLF_FUZZED(-6130.2302))) - 0.0), bool(false))))), _GLF_IDENTITY(-50.23, _GLF_IDENTITY(clamp(-50.23, -50.23, -50.23), clamp(clamp(-50.23, -50.23, -50.23), _GLF_IDENTITY(clamp(-50.23, -50.23, -50.23), min(clamp(-50.23, -50.23, -50.23), clamp(-50.23, -50.23, -50.23))), clamp(-50.23, -50.23, -50.23)))))), clamp(-50.23, -50.23, -50.23))) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-50.23, min(_GLF_IDENTITY(-50.23, 0.0 + (_GLF_IDENTITY(-50.23, mix(float(-50.23), float(_GLF_FUZZED(-6130.2302)), bool(false))))), _GLF_IDENTITY(-50.23, clamp(-50.23, -50.23, -50.23)))), clamp(-50.23, -50.23, -50.23)), (_GLF_IDENTITY(_GLF_IDENTITY(-50.23, min(_GLF_IDENTITY(-50.23, 0.0 + (_GLF_IDENTITY(-50.23, mix(float(-50.23), _GLF_IDENTITY(float(_GLF_FUZZED(-6130.2302)), (float(_GLF_FUZZED(-6130.2302))) - 0.0), bool(false))))), _GLF_IDENTITY(-50.23, _GLF_IDENTITY(clamp(-50.23, -50.23, -50.23), clamp(clamp(-50.23, -50.23, -50.23), _GLF_IDENTITY(clamp(-50.23, -50.23, -50.23), min(clamp(-50.23, -50.23, -50.23), clamp(-50.23, -50.23, -50.23))), clamp(-50.23, -50.23, -50.23)))))), clamp(-50.23, -50.23, -50.23))) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))))), _GLF_FUZZED(-3.2)), bvec2(false, false))))).x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-150.759) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-50.23, min(_GLF_IDENTITY(-50.23, 0.0 + (_GLF_IDENTITY(-50.23, mix(float(-50.23), float(_GLF_FUZZED(-6130.2302)), bool(false))))), _GLF_IDENTITY(-50.23, clamp(-50.23, -50.23, -50.23)))), clamp(-50.23, -50.23, -50.23)), (_GLF_IDENTITY(_GLF_IDENTITY(-50.23, min(_GLF_IDENTITY(-50.23, 0.0 + (_GLF_IDENTITY(-50.23, mix(float(-50.23), _GLF_IDENTITY(float(_GLF_FUZZED(-6130.2302)), (float(_GLF_FUZZED(-6130.2302))) - 0.0), bool(false))))), _GLF_IDENTITY(-50.23, _GLF_IDENTITY(clamp(-50.23, -50.23, -50.23), clamp(clamp(-50.23, -50.23, -50.23), _GLF_IDENTITY(clamp(-50.23, -50.23, -50.23), min(clamp(-50.23, -50.23, -50.23), clamp(-50.23, -50.23, -50.23))), clamp(-50.23, -50.23, -50.23)))))), clamp(-50.23, -50.23, -50.23))) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-50.23, min(_GLF_IDENTITY(-50.23, 0.0 + (_GLF_IDENTITY(-50.23, mix(float(-50.23), float(_GLF_FUZZED(-6130.2302)), bool(false))))), _GLF_IDENTITY(-50.23, clamp(-50.23, -50.23, -50.23)))), clamp(-50.23, -50.23, -50.23)), (_GLF_IDENTITY(_GLF_IDENTITY(-50.23, min(_GLF_IDENTITY(-50.23, 0.0 + (_GLF_IDENTITY(-50.23, mix(float(-50.23), _GLF_IDENTITY(float(_GLF_FUZZED(-6130.2302)), (float(_GLF_FUZZED(-6130.2302))) - 0.0), bool(false))))), _GLF_IDENTITY(-50.23, _GLF_IDENTITY(clamp(-50.23, -50.23, -50.23), clamp(clamp(-50.23, -50.23, -50.23), _GLF_IDENTITY(clamp(-50.23, -50.23, -50.23), min(clamp(-50.23, -50.23, -50.23), clamp(-50.23, -50.23, -50.23))), clamp(-50.23, -50.23, -50.23)))))), clamp(-50.23, -50.23, -50.23))) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-50.23, min(_GLF_IDENTITY(-50.23, 0.0 + (_GLF_IDENTITY(-50.23, mix(float(-50.23), float(_GLF_FUZZED(-6130.2302)), bool(false))))), _GLF_IDENTITY(-50.23, clamp(-50.23, -50.23, -50.23)))), clamp(-50.23, -50.23, -50.23)), (_GLF_IDENTITY(_GLF_IDENTITY(-50.23, min(_GLF_IDENTITY(-50.23, 0.0 + (_GLF_IDENTITY(-50.23, mix(float(-50.23), _GLF_IDENTITY(float(_GLF_FUZZED(-6130.2302)), (float(_GLF_FUZZED(-6130.2302))) - 0.0), bool(false))))), _GLF_IDENTITY(-50.23, _GLF_IDENTITY(clamp(-50.23, -50.23, -50.23), clamp(clamp(-50.23, -50.23, -50.23), _GLF_IDENTITY(clamp(-50.23, -50.23, -50.23), min(clamp(-50.23, -50.23, -50.23), clamp(-50.23, -50.23, -50.23))), clamp(-50.23, -50.23, -50.23)))))), clamp(-50.23, -50.23, -50.23))) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-50.23, min(_GLF_IDENTITY(-50.23, 0.0 + (_GLF_IDENTITY(-50.23, mix(float(-50.23), float(_GLF_FUZZED(-6130.2302)), bool(false))))), _GLF_IDENTITY(-50.23, clamp(-50.23, -50.23, -50.23)))), clamp(-50.23, -50.23, -50.23)), (_GLF_IDENTITY(_GLF_IDENTITY(-50.23, min(_GLF_IDENTITY(-50.23, 0.0 + (_GLF_IDENTITY(-50.23, mix(float(-50.23), _GLF_IDENTITY(float(_GLF_FUZZED(-6130.2302)), (float(_GLF_FUZZED(-6130.2302))) - 0.0), bool(false))))), _GLF_IDENTITY(-50.23, _GLF_IDENTITY(clamp(-50.23, -50.23, -50.23), clamp(clamp(-50.23, -50.23, -50.23), _GLF_IDENTITY(clamp(-50.23, -50.23, -50.23), min(clamp(-50.23, -50.23, -50.23), clamp(-50.23, -50.23, -50.23))), clamp(-50.23, -50.23, -50.23)))))), clamp(-50.23, -50.23, -50.23))) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-50.23, min(_GLF_IDENTITY(-50.23, 0.0 + (_GLF_IDENTITY(-50.23, mix(float(-50.23), float(_GLF_FUZZED(-6130.2302)), bool(false))))), _GLF_IDENTITY(-50.23, clamp(-50.23, -50.23, -50.23)))), clamp(-50.23, -50.23, -50.23)), (_GLF_IDENTITY(_GLF_IDENTITY(-50.23, min(_GLF_IDENTITY(-50.23, 0.0 + (_GLF_IDENTITY(-50.23, mix(float(-50.23), _GLF_IDENTITY(float(_GLF_FUZZED(-6130.2302)), (float(_GLF_FUZZED(-6130.2302))) - 0.0), bool(false))))), _GLF_IDENTITY(-50.23, _GLF_IDENTITY(clamp(-50.23, -50.23, -50.23), clamp(clamp(-50.23, -50.23, -50.23), _GLF_IDENTITY(clamp(-50.23, -50.23, -50.23), min(clamp(-50.23, -50.23, -50.23), clamp(-50.23, -50.23, -50.23))), clamp(-50.23, -50.23, -50.23)))))), clamp(-50.23, -50.23, -50.23))) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))))), _GLF_FUZZED(-3.2)), bvec2(false, false))))).x)))) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec2(2, 0)), int(ivec2(int(ivec2(2, 0)), 0)))), (2) | _GLF_IDENTITY((2), ((_GLF_IDENTITY(2, (0 << _GLF_IDENTITY(int(6), int(6))) | (2)))) * 1))), 4, 64, _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, clamp(4, 4, 4)))));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-60.33) : injectionSwitch.x)) > injectionSwitch.y), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-60.33) : injectionSwitch.x)) > injectionSwitch.y)), (bool((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-60.33) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-76.52)), bool(false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), true, true, _GLF_IDENTITY(true, false || (true)))), (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), true, true, _GLF_IDENTITY(true, false || (true))))) && true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-4867.4494), _GLF_FUZZED((1.4 - vec4(106.674, -3327.6813, -7.2, 9.0).b))), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), min(mix(vec2(_GLF_FUZZED(-4867.4494), _GLF_FUZZED((1.4 - vec4(106.674, -3327.6813, -7.2, 9.0).b))), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-4867.4494), _GLF_FUZZED((1.4 - vec4(106.674, -3327.6813, -7.2, 9.0).b))), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), max(mix(vec2(_GLF_FUZZED(-4867.4494), _GLF_FUZZED((1.4 - vec4(106.674, -3327.6813, -7.2, 9.0).b))), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), mix(vec2(_GLF_FUZZED(-4867.4494), _GLF_FUZZED((1.4 - vec4(106.674, -3327.6813, -7.2, 9.0).b))), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))).x > injectionSwitch.y)) && true)), ! (! (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bool(true))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, false))), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, true, false)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, true, false)))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, true, false)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, true, false)))), false))), false)))))), bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(false, ! (! (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec3(false, true, false)))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec3(false, true, false)))))), (bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec3(false, true, false))))))) && true)) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec3(false, true, false)))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) || false), bool(bvec3(false, true, false)))))), _GLF_IDENTITY((bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec3(false, true, false)))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec3(false, true, false))))))))), ! (! (_GLF_IDENTITY((bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec3(false, true, false)))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec3(false, true, false))))))))), bool(bool(_GLF_IDENTITY((bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec3(false, true, false)))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec3(false, true, false))))))))), ! (! ((bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec3(false, true, false)))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec3(false, true, false)))))))))))))))))) && true)) || false)) || false)), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), true))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), true))))), (bool(bool(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), true)))))) && true))))), bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false))))) && true, true && (((_GLF_IDENTITY(false, bool(bvec3(false, true, false))))) && true))))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))) || false)) || false))))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), ! (! (bool(_GLF_IDENTITY(false, ! (! (false)))))))), true && (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), ! (! (bool(_GLF_IDENTITY(false, ! (! (false)))))))))))))), (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))))))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-474.670))) > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)))))))))))), bool(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec2(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-40.13), _GLF_FUZZED(-7.4)), bvec2(false, false))).y))) && true), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true))), false, true))), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(777.275)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), 0.0 + (_GLF_IDENTITY(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), clamp(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), mix(float(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), float(_GLF_FUZZED(-77.23)), bool(false)))))))), ! (! (injectionSwitch.x > injectionSwitch.y)))))))))), bool(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))), false, true)))))))), (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))) && (false)))), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)))), ! (_GLF_IDENTITY(! ((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))), true && (! ((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)))))))))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))))).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), true, false)))))))), false, true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))), bvec2(bvec2(bvec2(true, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false)), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9.1) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, (1.0) * determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))), (false ? _GLF_FUZZED(3.7) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), clamp(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED(-6426.8418)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))))))))), 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0)), 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(1786.2212))))))), (float(vec4(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9.1) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), 1.0, 1.0, 1.0))) / 1.0)) > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))) / _GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) - vec2(0.0, 0.0))).y))))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec3(bvec4(bvec3(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), true))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(true, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) && true), (bool(bvec2(false, false))) || false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9.1) : _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x) / 1.0))), 1.0, 1.0, 1.0)), (float(vec4(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9.1) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), 1.0, 1.0, 1.0))) / 1.0)), (false ? _GLF_FUZZED(-50.04) : _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9.1) : _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x) / 1.0))), 1.0, 1.0, 1.0)), (float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0))), (false ? _GLF_FUZZED(-9.1) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), 1.0, 1.0, 1.0))) / 1.0)))) > injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec2(bvec2(true, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), (_GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true), (bool(bvec2(false, false))) && true), (bool(bvec2(false, false))) || false)), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9.1) : _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x) / 1.0))), 1.0, 1.0, 1.0)), (float(vec4(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9.1) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), 1.0, 1.0, 1.0))) / 1.0)) > injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec2(true, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) && true), (bool(bvec2(false, false))) || false)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(-9.1), (false ? _GLF_FUZZED(-175.586) : _GLF_FUZZED(-9.1))) : _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x) / 1.0)), min((false ? _GLF_IDENTITY(_GLF_FUZZED(-9.1), (false ? _GLF_FUZZED(-175.586) : _GLF_FUZZED(-9.1))) : _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x) / 1.0)), (false ? _GLF_IDENTITY(_GLF_FUZZED(-9.1), (false ? _GLF_FUZZED(-175.586) : _GLF_FUZZED(-9.1))) : _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x) / 1.0))))), 1.0, 1.0, 1.0)), max(float(vec4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(-9.1), (false ? _GLF_FUZZED(-175.586) : _GLF_FUZZED(-9.1))) : _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x) / 1.0)), min((false ? _GLF_IDENTITY(_GLF_FUZZED(-9.1), (false ? _GLF_FUZZED(-175.586) : _GLF_FUZZED(-9.1))) : _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x) / 1.0)), (false ? _GLF_IDENTITY(_GLF_FUZZED(-9.1), (false ? _GLF_FUZZED(-175.586) : _GLF_FUZZED(-9.1))) : _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x) / 1.0))))), 1.0, 1.0, 1.0)), float(vec4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(-9.1), (false ? _GLF_FUZZED(-175.586) : _GLF_FUZZED(-9.1))) : _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x) / 1.0)), min((false ? _GLF_IDENTITY(_GLF_FUZZED(-9.1), (false ? _GLF_FUZZED(-175.586) : _GLF_FUZZED(-9.1))) : _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x) / 1.0)), (false ? _GLF_IDENTITY(_GLF_FUZZED(-9.1), (false ? _GLF_FUZZED(-175.586) : _GLF_FUZZED(-9.1))) : _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x) / 1.0))))), 1.0, 1.0, 1.0)))), (float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, (false ? _GLF_FUZZED(-9.1) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), 1.0, 1.0, 1.0))) / 1.0)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(-9.1), (false ? _GLF_FUZZED(-175.586) : _GLF_FUZZED(-9.1))) : _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x) / 1.0)), min((false ? _GLF_IDENTITY(_GLF_FUZZED(-9.1), (false ? _GLF_FUZZED(-175.586) : _GLF_FUZZED(-9.1))) : _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x) / 1.0)), (false ? _GLF_IDENTITY(_GLF_FUZZED(-9.1), (false ? _GLF_FUZZED(-175.586) : _GLF_FUZZED(-9.1))) : _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x) / 1.0))))), 1.0, 1.0, 1.0)), max(float(vec4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(-9.1), (false ? _GLF_FUZZED(-175.586) : _GLF_FUZZED(-9.1))) : _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x) / 1.0)), min((false ? _GLF_IDENTITY(_GLF_FUZZED(-9.1), (false ? _GLF_FUZZED(-175.586) : _GLF_FUZZED(-9.1))) : _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x) / 1.0)), (false ? _GLF_IDENTITY(_GLF_FUZZED(-9.1), (false ? _GLF_FUZZED(-175.586) : _GLF_FUZZED(-9.1))) : _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x) / 1.0))))), 1.0, 1.0, 1.0)), float(vec4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(-9.1), (false ? _GLF_FUZZED(-175.586) : _GLF_FUZZED(-9.1))) : _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x) / 1.0)), min((false ? _GLF_IDENTITY(_GLF_FUZZED(-9.1), (false ? _GLF_FUZZED(-175.586) : _GLF_FUZZED(-9.1))) : _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x) / 1.0)), (false ? _GLF_IDENTITY(_GLF_FUZZED(-9.1), (false ? _GLF_FUZZED(-175.586) : _GLF_FUZZED(-9.1))) : _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x) / 1.0))))), 1.0, 1.0, 1.0)))), (float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, (false ? _GLF_FUZZED(-9.1) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), 1.0, 1.0, 1.0))) / 1.0)) > injectionSwitch.y))))))))))))))))) || false), bool(bvec4(bool(_GLF_IDENTITY(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, true, false)))))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), false, false, true))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), false, false, true))) && true), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), false)))))), _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), false, false, true))) && true))))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, true)), bool(bool(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, true)))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, true)), bool(bool(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, true)))))), true), false))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
        barrier();
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).x > injectionSwitch.y))))))))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           return;
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       return;
      }
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3(! (_GLF_DEAD(false)), false, false)), ! (! (bool(bvec3(! (_GLF_DEAD(false)), false, _GLF_IDENTITY(false, (false) || false))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
    }
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | 0u)) | 0u)], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
