#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(tan(injectionSwitch)))), vec2(injectionSwitch[0], injectionSwitch[1])).y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bool(false))))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])).x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) >> 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true), true, true, false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), true, _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(3.2, 355.662)) : injectionSwitch), max((false ? _GLF_FUZZED(vec2(3.2, 355.662)) : injectionSwitch), (false ? _GLF_FUZZED(vec2(3.2, 355.662)) : injectionSwitch)))), injectionSwitch)).y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(3.2, 355.662)) : injectionSwitch)), injectionSwitch)).y : _GLF_FUZZED(-2432.9123), max(true ? _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(3.2, 355.662)) : injectionSwitch)), injectionSwitch)).y : _GLF_FUZZED(-2432.9123), _GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(3.2, 355.662)) : injectionSwitch)), injectionSwitch)).y : _GLF_FUZZED(-2432.9123), (true ? _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(3.2, 355.662)) : injectionSwitch)), injectionSwitch)).y : _GLF_FUZZED(-2432.9123)) + sin(0.0)))), max(_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(3.2, 355.662)) : injectionSwitch)), injectionSwitch)).y : _GLF_FUZZED(-2432.9123), (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(3.2, 355.662)) : injectionSwitch)), injectionSwitch)).y : _GLF_FUZZED(-2432.9123), min(true ? _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(3.2, 355.662)) : injectionSwitch)), injectionSwitch)).y : _GLF_FUZZED(-2432.9123), true ? _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(3.2, 355.662)) : injectionSwitch)), injectionSwitch)).y : _GLF_FUZZED(-2432.9123)))) - 0.0), true ? _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(3.2, 355.662)) : injectionSwitch)), injectionSwitch)).y : _GLF_FUZZED(-2432.9123)))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))) ? _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(3.2, 355.662)) : injectionSwitch, vec2(0.0, 0.0) + (false ? _GLF_FUZZED(vec2(3.2, 355.662)) : injectionSwitch)))), injectionSwitch)).y : _GLF_FUZZED(-2432.9123), max(true ? _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(3.2, 355.662)) : injectionSwitch, clamp(false ? _GLF_FUZZED(vec2(3.2, 355.662)) : injectionSwitch, false ? _GLF_FUZZED(vec2(3.2, 355.662)) : injectionSwitch, false ? _GLF_FUZZED(vec2(3.2, 355.662)) : injectionSwitch)))), injectionSwitch)).y : _GLF_FUZZED(_GLF_IDENTITY(-2432.9123, min(-2432.9123, -2432.9123))), true ? _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(3.2, min(_GLF_IDENTITY(3.2, float(mat2x4(_GLF_IDENTITY(3.2, (3.2) - 0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(3.2, max(3.2, 3.2)))), 355.662)) : injectionSwitch)), injectionSwitch)).y : _GLF_FUZZED(-2432.9123)))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(3.2, 355.662)) : injectionSwitch)), injectionSwitch)).y : _GLF_IDENTITY(_GLF_FUZZED(-2432.9123), (_GLF_IDENTITY(_GLF_FUZZED(-2432.9123), (false ? _GLF_FUZZED(3115.2747) : _GLF_FUZZED(-2432.9123)))) - 0.0), max(true ? _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(3.2, 355.662)) : injectionSwitch)), injectionSwitch)).y : _GLF_FUZZED(-2432.9123), true ? _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(3.2, 355.662)) : injectionSwitch)), injectionSwitch)).y : _GLF_FUZZED(-2432.9123)))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(3.2, 355.662)) : injectionSwitch)), injectionSwitch)).y : _GLF_FUZZED(-2432.9123), max(true ? _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(3.2, 355.662)) : injectionSwitch)), injectionSwitch)).y : _GLF_FUZZED(-2432.9123), true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(3.2, _GLF_IDENTITY(355.662, mix(float(355.662), float(_GLF_FUZZED(3.8)), bool(false))))) : injectionSwitch)), injectionSwitch), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(3.2, 355.662)) : injectionSwitch)), injectionSwitch) : _GLF_FUZZED(log2(_GLF_IDENTITY(vec2(-0.5, 3.1), (vec2(-0.5, 3.1)) / vec2(1.0, 1.0))))))).y : _GLF_FUZZED(-2432.9123))))))))), true)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), ! (! (bool(bvec4(false, true, true, true)))))), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), ! (_GLF_IDENTITY(! (bool(bvec4(false, true, true, true))), true && (! (bool(bvec4(false, true, true, true))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))), _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x) + (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(43.93)), float(injectionSwitch.x), _GLF_IDENTITY(_GLF_IDENTITY(bool(true), true && (bool(true))), false || (bool(true))))))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x) + (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(43.93)), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x) + (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(43.93)), _GLF_IDENTITY(float(injectionSwitch.x), (false ? _GLF_FUZZED(4.1) : _GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x))), mix(float(_GLF_FUZZED(-548.190)), float(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x)))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x))), min(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x))), _GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x))))), _GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x))))))), bool(true))))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x) + (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(43.93)), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((true ? 4754.0908 : 3543.2154))), vec2(_GLF_FUZZED(8.7), (injectionSwitch)[1]), bvec2(false, true))).y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))), (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x4(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0), (mat2x4(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0)) + mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4.8), _GLF_FUZZED(9.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) << 0u) + _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), (workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) << 0u) + _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) << 0u) + _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), (workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) << 0u) + _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) ^ 0u), uint(uvec2(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) << 0u) + _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), (workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) << 0u) + _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) ^ 0u), 1u)))) | (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) << 0u) + _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), (workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) << 0u) + _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) ^ 0u)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))) + subgroup_base + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(workgroup_base + subgroup_base + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ((1) | (1)) | (_GLF_IDENTITY((1), ((1)) << 0) | (1))))) ^ 0)), clamp((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ((1) | (1)) | ((1) | (1))))) ^ 0)), (subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) >> 0)), ((1) | (1)) | ((1) | (1))))) ^ 0)), (subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ((1) | (1)) | ((1) | (1))))) ^ 0)))) % subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ((1) | (1)) | (_GLF_IDENTITY((1), ((1)) << 0) | (1))))) ^ 0)), clamp((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ((1) | (1)) | ((1) | (1))))) ^ 0)), (subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) >> 0)), ((1) | (1)) | ((1) | (1))))) ^ 0)), (subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ((1) | (1)) | ((1) | (1))))) ^ 0)))) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ((1) | (1)) | (_GLF_IDENTITY((1), ((1)) << 0) | (1))))) ^ 0)), clamp((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ((1) | (1)) | ((1) | (1))))) ^ 0)), (subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) >> 0)), ((1) | (1)) | ((1) | (1))))) ^ 0)), (subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ((1) | (1)) | ((1) | (1))))) ^ 0)))) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ((1) | (1)) | (_GLF_IDENTITY((1), ((1)) << 0) | (1))))) ^ 0)), clamp((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ((1) | (1)) | ((1) | (1))))) ^ 0)), (subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) >> 0)), ((1) | (1)) | ((1) | (1))))) ^ 0)), (subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ((1) | (1)) | ((1) | (1))))) ^ 0)))) % subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ((1) | (1)) | (_GLF_IDENTITY((1), ((1)) << 0) | (1))))) ^ 0)), clamp((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ((1) | (1)) | ((1) | (1))))) ^ 0)), (subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) >> 0)), ((1) | (1)) | ((1) | (1))))) ^ 0)), (subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ((1) | (1)) | ((1) | (1))))) ^ 0)))) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ((1) | (1)) | (_GLF_IDENTITY((1), ((1)) << 0) | (1))))) ^ 0)), clamp((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ((1) | (1)) | ((1) | (1))))) ^ 0)), (subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) >> 0)), ((1) | (1)) | ((1) | (1))))) ^ 0)), (subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ((1) | (1)) | ((1) | (1))))) ^ 0)))) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ((1) | (1)) | (_GLF_IDENTITY((1), ((1)) << 0) | (1))))) ^ 0)), clamp((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ((1) | (1)) | ((1) | (1))))) ^ 0)), (subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) >> 0)), ((1) | (1)) | ((1) | (1))))) ^ 0)), (subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ((1) | (1)) | ((1) | (1))))) ^ 0)))) % subgroup_size))))), 1u), uvec2(0u, 0u) ^ (uvec2(workgroup_base + subgroup_base + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ((1) | (1)) | ((1) | (1))))) ^ 0)), ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ((1) | (1)) | ((1) | (1))))) ^ 0))) / 1u), _GLF_IDENTITY(clamp((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ((1) | (1)) | ((1) | (1))))) ^ 0)), (subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ((1) | (1)) | ((1) | (1))))) ^ 0)), (subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ((1) | (1)) | ((1) | (1))))) ^ 0))), ~ (~ (_GLF_IDENTITY(clamp((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ((1) | (1)) | ((1) | (1))))) ^ 0)), (subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ((1) | (1)) | ((1) | (1))))) ^ 0)), (subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ((1) | (1)) | ((1) | (1))))) ^ 0))), 0u | (clamp((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ((1) | (1)) | ((1) | (1))))) ^ 0), (true ? _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ((1) | (1)) | ((1) | (1))))) ^ 0) : _GLF_FUZZED(-15365)))), (subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), _GLF_IDENTITY(((1) | (1)), (((1) | (1))) ^ (0 ^ 0)) | ((1) | (1))))) ^ 0)), (subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ((1) | (1)) | ((1) | (1))))) ^ 0))))))))) % subgroup_size), 1u)))), (uint(uvec2(workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size), 1u))) ^ 0u))) | (workgroup_base + subgroup_base + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED((workgroup_base)) : subgroup_size)))))) >> 0u), (true ? _GLF_IDENTITY(workgroup_base + subgroup_base + ((subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6446) : _GLF_IDENTITY(1, clamp(1, 1, 1)))), 1))) % subgroup_size), (_GLF_IDENTITY(workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, workgroup_base + subgroup_base)) + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) + 0u) % _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), max((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : (subgroup_local_id + 1) % subgroup_size))) / 1u), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), max(~ (subgroup_local_id), ~ (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(168893u) : subgroup_local_id))))))) + 1) % subgroup_size, min((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), 0u, 1u), uvec3(0u, 0u, 0u) ^ (uvec3(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, min((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), 0u, 1u)))))))), 1u)), (uint(uvec2(workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size), 1u))) ^ 0u))) | (workgroup_base + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> 0u), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(7.2) : _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)))), injectionSwitch.x))), _GLF_IDENTITY((uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4.3)), float(0.0), bool(true))), injectionSwitch.x))), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ uvec3(0u, 0u, 0u), max((uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ uvec3(0u, 0u, 0u), (uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ uvec3(0u, 0u, 0u))))), _GLF_IDENTITY(uvec3(uvec4(~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))) << 0u)), ((subgroup_local_id + 1)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)))) ^ uvec3(0u, 0u, 0u))), 0u)), max(uvec3(uvec4(~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))) << 0u, ((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))) << 0u) - (0u >> _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), min(uint(8u), uint(8u)))))))), ((subgroup_local_id + 1)) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x))), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(-67.46)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(-67.46)))))), (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(-67.46))))))) | (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(-67.46)))))))), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(-67.46)))))), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(-67.46)))))))), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ uvec3(0u, 0u, 0u))), 0u)), _GLF_IDENTITY(uvec3(uvec4(~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 ^ (1)), 1))) | (1)), (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))) << 0u)), ((subgroup_local_id + 1)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ uvec3(0u, 0u, 0u))), 0u)), (true ? uvec3(uvec4(~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 ^ (1)), 1))) | (1)), (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))) << 0u)), ((subgroup_local_id + 1)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ uvec3(0u, 0u, 0u))), 0u)) : _GLF_FUZZED(uvec3(84713u, 9036u, 112758u)))))))))), uint(uint(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> 0u), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(7.2) : _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)))), injectionSwitch.x))), _GLF_IDENTITY((uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ uvec3(0u, 0u, 0u), max((uvec3(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)), ((subgroup_local_id + 1)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ uvec3(0u, 0u, 0u), (uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ uvec3(0u, 0u, 0u))))), _GLF_IDENTITY(uvec3(uvec4(~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))) << 0u)), ((_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 0u, 0u)))))) + 1)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, float(mat3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, cos(0.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))))))))) ^ uvec3(0u, 0u, 0u))), 0u)), max(uvec3(uvec4(~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))) << 0u)), ((subgroup_local_id + 1)) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x))), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) ^ 0))) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(-67.46)))))), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ uvec3(0u, 0u, 0u))), 0u)), uvec3(uvec4(~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 ^ (1)), 1))) | (1), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 ^ (1)), 1))) | (1), max((_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 ^ (1)), 1))) | (1), (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 ^ (1)), 1))) | (1))), 0)), 0 + (int(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 ^ (1)), 1))) | (1), max((_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 ^ (1)), 1))) | (1), (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 ^ (1)), 1))) | (1))), 0)))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))) << 0u)), ((subgroup_local_id + 1)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))))), 0u)))))))))))) % _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(subgroup_size, 0u | (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_size)))))))))) >> 0u) : _GLF_FUZZED(packUnorm2x16(vec2(4.9, -3224.4742)))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))))))))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(4, min(4, 4)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((false), ! (! ((false))))), bool(bvec4((! (false)), true, false, false)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0), 0.0), (true ? mat3x4(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0), 0.0) : _GLF_FUZZED(mat3x4(9.4, -5.2, 61.42, 286.179, -1.1, 4134.7824, 2.8, -6.5, 14.70, 7965.0866, 4.7, -6.6)))))))).y))))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, bool(bool(false)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), (subgroup_local_id))) << 0u) % 2) == 0, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) % 2) == 0, ! (! ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) << 0u) % _GLF_IDENTITY(2, (2) >> 0)) == 0)))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true)), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true))) || false))), true, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))))))).x < injectionSwitch.y) && true))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true)), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true))) || false))), true, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))))))).x < injectionSwitch.y) && true)))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, abs(1.0), 0.0, 1.0))).y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) : _GLF_FUZZED(-348.563)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     subgroupAll(true);
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec2(bvec2(_GLF_DEAD(false), true)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), true, false)), bool(bvec3(bool(bvec3((false), true, false)), false, true)))) || false), ! (! (false))), true && (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (false)), bool(bvec2((! (false)), true)))))), false || (_GLF_IDENTITY((_GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (false)), bool(bvec2((! (false)), true)))))), bool(bvec3((_GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (false)), bool(bvec2((! (false)), true)))))), false, true))))), true && (! (_GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (false)), bool(bvec2((! (false)), true)))))))))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     subgroupAll(false);
     atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(_GLF_IDENTITY(31870, 0 | (31870))) : _GLF_IDENTITY(2, (_GLF_IDENTITY(2, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))) ? _GLF_FUZZED(58230) : 2))) | (_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, 2)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, 2)), 1 * (_GLF_IDENTITY(2, min(_GLF_IDENTITY(2, 1 * (_GLF_IDENTITY(_GLF_IDENTITY(2, max(2, 2)), (_GLF_IDENTITY(_GLF_IDENTITY(2, max(2, 2)), max(_GLF_IDENTITY(2, max(2, 2)), _GLF_IDENTITY(2, max(2, 2))))) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))), 2))))), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, 2)), 1 * (_GLF_IDENTITY(2, min(_GLF_IDENTITY(2, 1 * (_GLF_IDENTITY(2, max(2, 2)))), 2))))), max((_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, 2)), 1 * (_GLF_IDENTITY(2, min(_GLF_IDENTITY(2, 1 * (_GLF_IDENTITY(2, max(2, 2)))), 2))))), (_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, 2)), 1 * (_GLF_IDENTITY(2, min(_GLF_IDENTITY(2, 1 * (_GLF_IDENTITY(2, max(2, 2)))), 2))))))), (_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, 2)), 1 * _GLF_IDENTITY((_GLF_IDENTITY(2, min(_GLF_IDENTITY(2, 1 * (_GLF_IDENTITY(2, max(2, 2)))), 2))), ((_GLF_IDENTITY(2, min(_GLF_IDENTITY(2, 1 * (_GLF_IDENTITY(2, max(2, 2)))), 2)))) | ((_GLF_IDENTITY(2, min(_GLF_IDENTITY(2, 1 * (_GLF_IDENTITY(2, max(2, 2)))), 2))))))))) >> 0)))))), _GLF_IDENTITY(4, (4) << 0), 64, 4);
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)).x > injectionSwitch.y), true, false, _GLF_IDENTITY(true, ! (! (true))))), ! (! (bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 1.0, 1.0), mat2(mat2(mat2(injectionSwitch.y, 0.0, 1.0, 1.0))))), mix(float(_GLF_FUZZED(3.7)), float(float(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 1.0, 1.0), mat2(mat2(mat2(injectionSwitch.y, 0.0, 1.0, 1.0)))))), bool(true))))), true, false, true)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ((_GLF_IDENTITY(false, true && (false))) && true) && true))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! (! (false)))))) || _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), _GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false || ((injectionSwitch.x > injectionSwitch.y))))))), true))), (false) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
