#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, false || (true))))))), true && (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       do
        {
         do
          {
           do
            {
             for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((0 >> _GLF_IDENTITY(int(0), int(0))) & 46642)); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                return;
              }
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                {
                 return;
                }
              }
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              continue;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        break;
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), true), _GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))));
  }
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0], _GLF_FUZZED(-3466.7256)), vec2(_GLF_FUZZED(-8.6), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))), false))))))).y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uvec4 GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           if(_GLF_DEAD(false))
            return;
          }
         while(_GLF_WRAPPED_LOOP(false));
         return;
        }
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           return;
          }
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          return;
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.z = _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)));
            }
           else
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 return;
                }
              }
            }
          }
         do
          {
           do
            {
             if(_GLF_DEAD(false))
              return;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       else
        {
        }
      }
     else
      {
      }
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)).x > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)))))))))
          {
           do
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               return;
              }
             else
              {
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 1.0))).x > injectionSwitch.y))));
          }
         return;
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           return;
          }
         else
          {
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         do
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) && true)))) && true)))
            return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           else
            {
            }
          }
         break;
        }
       do
        {
         if(_GLF_DEAD(false))
          return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false))))), (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
        {
         return;
        }
      }
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, false || ((_GLF_DEAD(false)) && true))))
            {
             if(_GLF_DEAD(false))
              return;
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY((0 | _GLF_IDENTITY(1, (1) / (1 ^ 0))), _GLF_IDENTITY(0 + ((0 | 1)), (0 ^ 0) ^ (0 + ((_GLF_IDENTITY(0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-37029) : 0)) | 1)))))); _injected_loop_counter ++)
              {
               return;
              }
            }
           return;
          }
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     else
      {
      }
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
        }
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
    }
  }
 else
  {
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)), (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false))) && true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     for(int _injected_loop_counter = _GLF_IDENTITY(1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) | (0)) ^ (1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        continue;
       for(int _injected_loop_counter = _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, 0 + (0)))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < _GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(int(ivec2(1, (1 | 1))), (true ? int(ivec2(1, (1 | 1))) : _GLF_FUZZED(_injected_loop_counter)))), ! (! (_injected_loop_counter < _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, (1 | 1))), (true ? int(ivec2(1, (1 | 1))) : _GLF_FUZZED(_injected_loop_counter))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, (1 | 1))), (true ? int(ivec2(_GLF_IDENTITY(1, max(1, 1)), (1 | 1))) : _GLF_FUZZED(_injected_loop_counter)))), ! (! (_injected_loop_counter < _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, (_GLF_IDENTITY(1, 0 ^ (1)) | _GLF_IDENTITY(1, (1) - 0)))), (true ? int(ivec2(1, (1 | 1))) : _GLF_FUZZED(_injected_loop_counter))))))), bool(bool(_GLF_IDENTITY(_injected_loop_counter < _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, (1 | 1))), (true ? int(ivec2(1, (1 | 1))) : _GLF_FUZZED(_injected_loop_counter)))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ 0) < _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, (1 | 1))), (true ? int(ivec2(1, (1 | 1))) : _GLF_FUZZED(_injected_loop_counter))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ 0) < _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, (1 | 1))), (true ? int(ivec2(1, (1 | 1))) : _GLF_FUZZED(_injected_loop_counter)))))), bool(bvec3(_GLF_IDENTITY(bool((_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ 0) < _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, (1 | 1))), (true ? int(ivec2(1, (1 | 1))) : _GLF_FUZZED(_injected_loop_counter)))))), bool(bvec3(bool((_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ 0) < _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, (1 | 1))), (true ? int(ivec2(1, (1 | 1))) : _GLF_FUZZED(_injected_loop_counter)))))), false, true))), false, false)))), (bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ 0) < _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, (1 | 1))), (true ? int(ivec2(1, (1 | 1))) : _GLF_FUZZED(_injected_loop_counter)))))), bool(bvec3(_GLF_IDENTITY(bool((_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ 0) < _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, (1 | 1))), (true ? int(ivec2(1, (1 | 1))) : _GLF_FUZZED(_injected_loop_counter)))))), bool(bvec3(bool((_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ 0) < _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, (1 | 1))), (true ? int(ivec2(1, (1 | 1))) : _GLF_FUZZED(_injected_loop_counter)))))), false, true))), false, false))))) || false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, (1 | 1))), (true ? int(ivec2(1, (1 | 1))) : _GLF_FUZZED(_injected_loop_counter)))), (_injected_loop_counter < _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, (1 | 1))), (true ? int(ivec2(1, (1 | 1))) : _GLF_FUZZED(_injected_loop_counter))))) && true), ! (! (_injected_loop_counter < _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, (1 | 1))), (_GLF_IDENTITY(true ? int(ivec2(1, (1 | 1))) : _GLF_FUZZED(_injected_loop_counter), (true ? int(ivec2(1, (1 | 1))) : _GLF_FUZZED(_injected_loop_counter)) | (true ? int(ivec2(1, (1 | 1))) : _GLF_FUZZED(_injected_loop_counter))))))))), bool(bool(_GLF_IDENTITY(_injected_loop_counter < _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(1, (1 | 1))), (_GLF_IDENTITY(int(ivec2(1, (1 | 1))), int(int(int(ivec2(1, (1 | 1))))))) / 1), (true ? int(ivec2(1, (1 | 1))) : _GLF_FUZZED(_injected_loop_counter)))), ! (! (_injected_loop_counter < _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, (1 | _GLF_IDENTITY(1, min(1, 1))))), (true ? int(ivec2(1, (1 | 1))) : _GLF_FUZZED(_injected_loop_counter)))))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < _GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(ivec2(35534, -7441)[1]) : 1)), _GLF_IDENTITY(int(ivec2(1, (1 | 1))), (true ? int(ivec2(1, (1 | 1))) : _GLF_FUZZED(_injected_loop_counter)))), ! (! (_injected_loop_counter < _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, (1 | 1)), ~ (~ (_GLF_IDENTITY(ivec2(1, (1 | 1)), max(ivec2(1, (1 | 1)), _GLF_IDENTITY(ivec2(1, (1 | 1)), clamp(ivec2(1, (1 | 1)), ivec2(1, (1 | 1)), ivec2(1, (1 | 1)))))))))), (_GLF_IDENTITY(true ? int(ivec2(1, (1 | 1))) : _GLF_FUZZED(_injected_loop_counter), (true ? int(ivec2(1, (1 | 1))) : _GLF_FUZZED(_injected_loop_counter)) | 0))))))), bool(bool(_GLF_IDENTITY(_injected_loop_counter < _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, (1 | 1))), (_GLF_IDENTITY(true ? int(ivec2(1, (1 | 1))) : _GLF_FUZZED(_injected_loop_counter), min(true ? int(ivec2(1, (1 | 1))) : _GLF_FUZZED(_injected_loop_counter), _GLF_IDENTITY(true ? int(ivec2(1, (1 | 1))) : _GLF_FUZZED(_injected_loop_counter), int(ivec4(true ? int(ivec2(1, (1 | 1))) : _GLF_FUZZED(_injected_loop_counter), 1, 1, 1)))))))), ! (! (_injected_loop_counter < _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, _GLF_IDENTITY((1 | 1), ((1 | 1)) ^ 0))), (true ? int(ivec2(1, (1 | 1))) : _GLF_FUZZED(_injected_loop_counter)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(false, (false) || false))))))))); _injected_loop_counter ++)
        {
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            continue;
           _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.y = subgroup_local_id, _GLF_IDENTITY((true ? GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.y = subgroup_local_id : _GLF_FUZZED(subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY((true ? GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.y = subgroup_local_id : _GLF_FUZZED(subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY((true ? GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.y = subgroup_local_id : _GLF_FUZZED(subgroup_size)), ((true ? GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.y = subgroup_local_id : _GLF_FUZZED(subgroup_size))) / 1u), (_GLF_IDENTITY((true ? GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.y = subgroup_local_id : _GLF_FUZZED(subgroup_size)), ((true ? GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.y = subgroup_local_id : _GLF_FUZZED(subgroup_size))) / 1u)) << 0u)) - 0u)), (0u << _GLF_IDENTITY(uint(8u), uint(8u))) | ((_GLF_IDENTITY((true ? GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.y = subgroup_local_id : _GLF_FUZZED(subgroup_size)), (_GLF_IDENTITY((true ? GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.y = subgroup_local_id : _GLF_FUZZED(subgroup_size)), ((true ? GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.y = subgroup_local_id : _GLF_FUZZED(subgroup_size))) / 1u)) - 0u)))) + (0u << _GLF_IDENTITY(uint(1u), uint(1u)))));
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            break;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (false)), bool(bvec2((! (false)), false))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY((! (false)), bool(bvec2((! (false)), false))), false))))))))))))
        return;
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0))).y))))
        continue;
       if(_GLF_DEAD(false))
        continue;
      }
    }
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)).x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)), bool(bvec2(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)), false))))))))))))
  {
   for(int _injected_loop_counter = (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(94072))))), 0)) << _GLF_IDENTITY(int(5), int(5))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))))))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(76.62) : injectionSwitch.y))) - 0.0)))))
      continue;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) || false); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
              break;
             return;
             if(_GLF_DEAD(false))
              continue;
            }
          }
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat3(injectionSwitch, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED((mat3(-144.960, -4.1, 7061.2069, -26.43, -5.0, 242.491, 2955.3897, -5000.8212, 5.3)))))), clamp(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat3(injectionSwitch, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED((mat3(-144.960, -4.1, 7061.2069, -26.43, -5.0, 242.491, 2955.3897, -5000.8212, 5.3)))))), vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat3(injectionSwitch, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED((mat3(-144.960, -4.1, 7061.2069, -26.43, -5.0, 242.491, 2955.3897, -5000.8212, 5.3)))))), vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat3(injectionSwitch, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED((mat3(-144.960, -4.1, 7061.2069, -26.43, -5.0, 242.491, 2955.3897, -5000.8212, 5.3))))))))).x < injectionSwitch.y)), false)), (bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) || false))))
            break;
           return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            break;
           continue;
          }
         return;
        }
      }
     else
      {
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         return;
        }
       if(_GLF_DEAD(false))
        break;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-359.065), _GLF_IDENTITY((_GLF_FUZZED(-359.065)) / 1.0, (_GLF_IDENTITY((_GLF_FUZZED(-359.065)) / 1.0, 0.0 + (_GLF_IDENTITY((_GLF_FUZZED(-359.065)) / 1.0, ((_GLF_FUZZED(-359.065)) / 1.0) * 1.0)))) - 0.0)), _GLF_FUZZED(9.5)), vec2(_GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY(true ? (injectionSwitch)[0] : _GLF_FUZZED(-690.611), (true ? (injectionSwitch)[0] : _GLF_FUZZED(-690.611)) - 0.0)))) - 0.0), (injectionSwitch)[_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter)))) / 1)]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, sin(_GLF_IDENTITY(0.0, min(0.0, 0.0))), 1.0, 0.0, 0.0)), abs(1.0), 1.0), (mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), abs(1.0), 1.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(uintBitsToFloat(num_workgroup)) : _GLF_IDENTITY(1.0, float(mat2(1.0, 0.0, 1.0, 0.0))))), 1.0) * (injectionSwitch)))).y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
            return;
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             return;
            }
           if(_GLF_DEAD(false))
            continue;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            break;
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false)))))
          break;
        }
       else
        {
        }
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, true)), true && (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, true))))))
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
        }
      }
     return;
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-85.53))) > injectionSwitch.y))))
      return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), false || (! (! (injectionSwitch.x > injectionSwitch.y)))))))));
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     return;
    }
  }
 GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base.y = num_workgroup;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   else
    {
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
      }
    }
   else
    {
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * _GLF_ONE(1.0, injectionSwitch.y)) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec2(-952.429, -39.72).y)), vec2(_GLF_FUZZED(float(_GLF_IDENTITY(85387u, max(85387u, 85387u)))), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) - 0)]))), bvec2(false, _GLF_IDENTITY(true, ! (! (true)))))).x > injectionSwitch.y)), false))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(vec2(-952.429, -39.72).y)), (vec2((injectionSwitch)[0], _GLF_FUZZED(vec2(-952.429, -39.72).y))) - abs(vec2(0.0, 0.0))), vec2(_GLF_FUZZED(float(85387u)), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y)), false))), ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec2(-952.429, -39.72).y)), vec2(_GLF_FUZZED(_GLF_IDENTITY(float(85387u), clamp(float(85387u), float(85387u), float(85387u)))), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec2(-952.429, -39.72).y)), vec2(_GLF_FUZZED(_GLF_IDENTITY(float(85387u), clamp(float(85387u), float(85387u), float(85387u)))), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))) && true), false), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec2(-952.429, -39.72).y)), vec2(_GLF_FUZZED(float(_GLF_IDENTITY(85387u, max(85387u, 85387u)))), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y)), _GLF_IDENTITY(false, false || (false))), bvec3(bvec3(bvec3(false, _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec2(-952.429, -39.72).y)), vec2(_GLF_FUZZED(float(85387u)), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y)), false)))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec2(-952.429, -39.72).y)), vec2(_GLF_FUZZED(float(85387u)), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y)), false), bvec3(bvec3(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(vec2(-952.429, -39.72).y), max(_GLF_FUZZED(vec2(-952.429, -39.72).y), _GLF_FUZZED(vec2(-952.429, -39.72).y)))), vec2(_GLF_FUZZED(float(85387u)), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(vec2(-952.429, -39.72).y), max(_GLF_FUZZED(vec2(-952.429, -39.72).y), _GLF_FUZZED(vec2(-952.429, -39.72).y)))), vec2(_GLF_FUZZED(float(85387u)), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(vec2(-952.429, -39.72).y), max(_GLF_FUZZED(vec2(-952.429, -39.72).y), _GLF_FUZZED(vec2(-952.429, -39.72).y)))), vec2(_GLF_FUZZED(float(85387u)), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))))))), false)))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec2(-952.429, -39.72).y)), vec2(_GLF_FUZZED(float(85387u)), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y)), false), bvec3(bvec3(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(vec2(-952.429, -39.72).y), max(_GLF_FUZZED(vec2(-952.429, -39.72).y), _GLF_FUZZED(vec2(-952.429, -39.72).y)))), vec2(_GLF_FUZZED(float(85387u)), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y)), false))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec2(-952.429, -39.72).y)), vec2(_GLF_FUZZED(float(85387u)), (injectionSwitch)[1]), bvec2(false, true))).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), mix(vec2(((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))[0], ((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))[1]), vec2(_GLF_FUZZED(vec2(-0.4, -1933.5209).g), _GLF_FUZZED(0.6)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))).y), false || ((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec2(-952.429, -39.72).y)), vec2(_GLF_FUZZED(float(85387u)), (injectionSwitch)[1]), bvec2(false, true))).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), mix(vec2(((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))[0], ((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))[1]), vec2(_GLF_FUZZED(vec2(-0.4, -1933.5209).g), _GLF_FUZZED(0.6)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))).y)))), false), bvec3(bvec3(bvec3(false, _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(vec2(-952.429, -39.72).y), max(_GLF_FUZZED(vec2(-952.429, -39.72).y), _GLF_FUZZED(vec2(-952.429, -39.72).y)))), vec2(_GLF_FUZZED(float(85387u)), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, ! (! (false))), true))).x > injectionSwitch.y)), false)))))))))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec2(-952.429, -39.72).y)), vec2(_GLF_FUZZED(float(85387u)), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y)), false), bvec3(bvec3(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[_GLF_IDENTITY(0, int(ivec3(0, 0, 1)))], _GLF_FUZZED(vec2(-952.429, -39.72).y)), vec2(vec3(_GLF_IDENTITY(vec2((injectionSwitch)[_GLF_IDENTITY(0, int(ivec3(0, 0, 1)))], _GLF_FUZZED(vec2(-952.429, _GLF_IDENTITY(-39.72, (_GLF_IDENTITY(-39.72, clamp(_GLF_IDENTITY(-39.72, (-39.72) + 0.0), -39.72, -39.72))) / 1.0)).y)), vec2(mat3x2(vec2((injectionSwitch)[_GLF_IDENTITY(0, int(ivec3(0, 0, 1)))], _GLF_FUZZED(vec2(-952.429, -39.72).y)), 0.0, 1.0, 1.0, 1.0))), sqrt(0.0)))), vec2(_GLF_FUZZED(float(85387u)), (injectionSwitch)[1]), bvec2(false, true))).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5021.5282) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), false)))))), true))), true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec2(-952.429, -39.72).y)), vec2(_GLF_FUZZED(float(85387u)), (injectionSwitch)[1]), bvec2(false, true)), mix(vec2(_GLF_FUZZED((78.84 / -4565.8154)), _GLF_FUZZED(64.40)), vec2((mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec2(-952.429, -39.72).y)), vec2(_GLF_FUZZED(float(85387u)), (injectionSwitch)[1]), bvec2(false, true)))[0], (mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec2(-952.429, -39.72).y)), vec2(_GLF_FUZZED(float(85387u)), (injectionSwitch)[1]), bvec2(false, true)))[1]), bvec2(true, true)))).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED((- 2.0))), float(injectionSwitch[1]), bool(true))))).y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec2(-952.429, -39.72).y)), vec2(_GLF_IDENTITY(_GLF_FUZZED(float(85387u)), max(_GLF_IDENTITY(_GLF_FUZZED(float(85387u)), (_GLF_IDENTITY(_GLF_FUZZED(float(85387u)), 0.0 + (_GLF_FUZZED(float(85387u))))) * 1.0), _GLF_IDENTITY(_GLF_FUZZED(float(85387u)), clamp(_GLF_FUZZED(float(85387u)), _GLF_FUZZED(float(85387u)), _GLF_FUZZED(float(85387u)))))), (injectionSwitch)[_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, min(1, 1))))]), bvec2(false, true))).x > injectionSwitch.y)), false)))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0), _GLF_FUZZED(vec2(_GLF_IDENTITY(-952.429, mix(float(-952.429), float(_GLF_FUZZED(-8.1)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), -39.72).y)), vec2(_GLF_FUZZED(float(85387u)), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0), _GLF_FUZZED(vec2(_GLF_IDENTITY(-952.429, mix(float(-952.429), float(_GLF_FUZZED(-8.1)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), -39.72).y)), vec2(_GLF_FUZZED(float(85387u)), (injectionSwitch)[1]), bvec2(false, true))), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)))), (vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0), _GLF_FUZZED(vec2(_GLF_IDENTITY(-952.429, mix(float(-952.429), float(_GLF_FUZZED(-8.1)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), -39.72).y)), vec2(_GLF_FUZZED(float(85387u)), (injectionSwitch)[1]), bvec2(false, true))), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))))) - vec2(0.0, 0.0))).x > injectionSwitch.y)), false), bvec3(bvec3(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec2(-952.429, -39.72).y)), vec2(_GLF_FUZZED(float(85387u)), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y)), false)))))), true))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec2(_GLF_IDENTITY(-952.429, (-952.429) - 0.0), -39.72).y)), vec2(_GLF_FUZZED(float(85387u)), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec2(-952.429, -39.72).y)), vec2(_GLF_FUZZED(float(85387u)), (injectionSwitch)[_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, min(1, 1))))]), bvec2(false, true))).x > injectionSwitch.y)), false)))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0), _GLF_FUZZED(vec2(_GLF_IDENTITY(-952.429, mix(float(-952.429), float(_GLF_FUZZED(-8.1)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), -39.72).y)), vec2(_GLF_FUZZED(float(85387u)), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y)), false), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec2(-952.429, -39.72).y)), vec2(_GLF_FUZZED(float(85387u)), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec2(-952.429, -39.72).y)), vec2(_GLF_FUZZED(float(85387u)), (injectionSwitch)[1]), bvec2(false, true)), min(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec2(-952.429, -39.72).y)), vec2(_GLF_FUZZED(float(85387u)), (injectionSwitch)[1]), bvec2(false, true)), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec2(-952.429, -39.72).y)), vec2(_GLF_FUZZED(float(85387u)), (injectionSwitch)[1]), bvec2(false, true))))).x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))), true))), true)), true))), true)))))))))), false)))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bool((! (false))), (bool((! (false)))) || false)))), false || (! (! (! (false))))))))))
  {
   for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_IF_FALSE(false), false, false)), (bool(bvec3(_GLF_WRAPPED_IF_FALSE(false), false, false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  {
  }
 else
  {
   GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.w = workgroup_id;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.w, (GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.w) - 0u);
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(-7.0), clamp(_GLF_IDENTITY(_GLF_FUZZED(-7.0), max(_GLF_FUZZED(-7.0), _GLF_FUZZED(-7.0))), _GLF_FUZZED(-7.0), _GLF_FUZZED(-7.0))) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) > injectionSwitch.y))))
      {
      }
     else
      {
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter --)
            {
             return;
            }
          }
        }
      }
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_base = subgroup_id * GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.z;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     return;
    }
  }
 GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base.w = subgroup_base;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     return;
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.x = GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base.w;
  }
 else
  {
  }
 uint virtual_gid = workgroup_base + GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.x + _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id, (GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id) - uvec4(0u, 0u, 0u, 0u)).y;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       return;
      }
    }
   return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ (~ (workgroup_base)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (workgroup_base), ~ (~ (~ (workgroup_base))))), (_GLF_IDENTITY(~ (~ (workgroup_base)), (~ (~ _GLF_IDENTITY((workgroup_base), (true ? (workgroup_base) : _GLF_FUZZED(workgroup_id))))) << 0u)) - (0u | 0u))) ^ 0u)), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ (~ (workgroup_base)), uint(uvec2(_GLF_IDENTITY(~ (~ (workgroup_base)), (~ (~ (workgroup_base))) / 1u), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) | (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), (uint(7u)) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), ~ (_GLF_IDENTITY(~ (uint(7u)), max(~ (uint(7u)), ~ (uint(7u)))))), (_GLF_IDENTITY(uint(7u), ~ (_GLF_IDENTITY(~ (uint(7u)), max(~ (uint(7u)), ~ (uint(7u))))))) - 0u))), uint(7u))), ~ (~ ((_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) | (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), (uint(7u)) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), (false ? _GLF_FUZZED(subgroup_size) : uint(7u))), ~ (_GLF_IDENTITY(~ (uint(7u)), max(~ (uint(7u)), ~ (uint(7u)))))))), uint(7u))))))))) + GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.x + ((GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.y + 1) % _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.z, max(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.z, GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.z))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ (~ (workgroup_base)), (_GLF_IDENTITY(~ (~ (workgroup_base)), _GLF_IDENTITY((_GLF_IDENTITY(~ (~ (workgroup_base)), (~ (~ (workgroup_base))) << 0u)) - (0u | 0u), ((_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_base)), (~ (~ (workgroup_base))) * 1u), (~ (~ (workgroup_base))) << 0u)) - (0u | 0u)) + 0u))) ^ 0u)), 0u ^ (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ (~ (workgroup_base)), (_GLF_IDENTITY(~ (~ (workgroup_base)), (_GLF_IDENTITY(~ (~ (workgroup_base)), (~ (~ (workgroup_base))) << 0u)) - _GLF_IDENTITY((0u | 0u), 1u * ((0u | 0u))))) ^ 0u)))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))), ((_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))) << 0u) | (_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(bitfieldInsert(subgroup_size, subgroup_id, 37826, 32403)) : 0u)))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (_GLF_IDENTITY(7u, max(_GLF_IDENTITY(7u, max(7u, 7u)), 7u))) / 1u)), uint(7u)))))) + GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.x + (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.y + 1, 0u | (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id, min(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id, (GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id) | (GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id)))).y + 1))) % _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.z, max(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.z, GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.z)), uint(_GLF_IDENTITY(uvec2((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.y + 1, 0u | (GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.y + 1))) % _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.z, max(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.z, GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.z)), uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(uvec3(uvec2((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.y + 1, 0u | (GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.y + 1))) % _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.z, max(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.z, GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.z)), uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(-3.7)), float(_GLF_ONE(1.0, injectionSwitch.y)), bool(true))))), (1u & 1u))))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ (~ (workgroup_base)), (_GLF_IDENTITY(~ (~ (workgroup_base)), (_GLF_IDENTITY(~ (~ (workgroup_base)), (~ (~ (workgroup_base))) << 0u)) - _GLF_IDENTITY((0u | 0u), min(_GLF_IDENTITY((0u | 0u), (false ? _GLF_FUZZED(_GLF_IDENTITY(9719u, (9719u) | (9719u))) : (0u | 0u))), (0u | 0u))))) ^ 0u)), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) | (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (7u) | (7u)))), min(_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (7u) | (7u)))), ~ (~ (0u >> _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (7u) | (_GLF_IDENTITY(7u, (7u) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))))))))), _GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (7u) | (7u)))), max(0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (false ? _GLF_FUZZED(subgroup_id) : 7u))), uint(_GLF_IDENTITY(7u, (7u) | (_GLF_IDENTITY(7u, (7u) - 0u))))), 0u >> _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (7u) | (7u)))))))))))) + GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.x + ((GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.y + 1) % _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.z, max(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.z, GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.z))))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ (~ (workgroup_base)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (workgroup_base), ~ (~ (~ (workgroup_base))))), (_GLF_IDENTITY(~ (~ (workgroup_base)), (~ (~ _GLF_IDENTITY((workgroup_base), (true ? (workgroup_base) : _GLF_FUZZED(workgroup_id))))) << 0u)) - (0u | 0u))) ^ 0u)), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ (~ (workgroup_base)), uint(uvec2(_GLF_IDENTITY(~ (~ (workgroup_base)), (~ (~ (workgroup_base))) / 1u), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) | (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), (uint(7u)) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), ~ (_GLF_IDENTITY(~ (uint(7u)), max(~ (uint(7u)), ~ (uint(7u)))))), (_GLF_IDENTITY(uint(7u), ~ (_GLF_IDENTITY(~ (uint(7u)), max(~ (uint(7u)), ~ (uint(7u))))))) - 0u))), uint(7u))), ~ (~ ((_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) | (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), (uint(7u)) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), (false ? _GLF_FUZZED(subgroup_size) : uint(7u))), ~ (_GLF_IDENTITY(~ (uint(7u)), max(~ (uint(7u)), ~ (uint(7u)))))))), uint(7u))))))))) + GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.x + ((GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.y + 1) % _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.z, max(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.z, GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.z))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ (~ (workgroup_base)), (_GLF_IDENTITY(~ (~ (workgroup_base)), _GLF_IDENTITY((_GLF_IDENTITY(~ (~ (workgroup_base)), (~ (~ (workgroup_base))) << 0u)) - (0u | 0u), ((_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_base)), (~ (~ (workgroup_base))) * 1u), (~ (~ (workgroup_base))) << 0u)) - (0u | 0u)) + 0u))) ^ 0u)), 0u ^ (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ (~ (workgroup_base)), (_GLF_IDENTITY(~ (~ (workgroup_base)), (_GLF_IDENTITY(~ (~ (workgroup_base)), (~ (~ (workgroup_base))) << 0u)) - _GLF_IDENTITY((0u | 0u), 1u * ((0u | 0u))))) ^ 0u)))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))), ((_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))) << 0u) | (_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(bitfieldInsert(subgroup_size, subgroup_id, 37826, 32403)) : 0u)))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (_GLF_IDENTITY(7u, max(_GLF_IDENTITY(7u, max(7u, 7u)), 7u))) / 1u)), uint(7u)))))) + GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.x + (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.y + 1, 0u | (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id, min(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id, (GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id) | (GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id)))).y + 1))) % _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.z, max(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.z, GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.z)), uint(_GLF_IDENTITY(uvec2((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.y + 1, 0u | (GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.y + 1))) % _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.z, max(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.z, GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.z)), uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(uvec3(uvec2((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.y + 1, 0u | (GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.y + 1))) % _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.z, max(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.z, GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.z)), uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(-3.7)), float(_GLF_ONE(1.0, injectionSwitch.y)), bool(true))))), (1u & 1u))))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ (~ (workgroup_base)), (_GLF_IDENTITY(~ (~ (workgroup_base)), (_GLF_IDENTITY(~ (~ (workgroup_base)), (~ (~ (workgroup_base))) << 0u)) - _GLF_IDENTITY((0u | 0u), min(_GLF_IDENTITY((0u | 0u), (false ? _GLF_FUZZED(_GLF_IDENTITY(9719u, (9719u) | (9719u))) : (0u | 0u))), (0u | 0u))))) ^ 0u)), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) | (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (7u) | (7u)))), min(_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (7u) | (7u)))), ~ (~ (0u >> _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (7u) | (_GLF_IDENTITY(7u, (7u) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))))))))), _GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (7u) | (7u)))), max(0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (false ? _GLF_FUZZED(subgroup_id) : 7u))), uint(_GLF_IDENTITY(7u, (7u) | (_GLF_IDENTITY(7u, (7u) - 0u))))), 0u >> _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (7u) | (7u)))))))))))) + GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.x + ((GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.y + 1) % _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.z, max(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.z, GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.z))))), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ (~ (workgroup_base)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (workgroup_base), ~ (~ (~ (workgroup_base))))), (_GLF_IDENTITY(~ (~ (workgroup_base)), (~ (~ _GLF_IDENTITY((workgroup_base), (true ? (workgroup_base) : _GLF_FUZZED(workgroup_id))))) << 0u)) - (0u | 0u))) ^ 0u)), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ (~ (workgroup_base)), uint(uvec2(_GLF_IDENTITY(~ (~ (workgroup_base)), (~ (~ (workgroup_base))) / 1u), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) | (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), (uint(7u)) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), ~ (_GLF_IDENTITY(~ (uint(7u)), max(~ (uint(7u)), ~ (uint(7u)))))), (_GLF_IDENTITY(uint(7u), ~ (_GLF_IDENTITY(~ (uint(7u)), max(~ (uint(7u)), ~ (uint(7u))))))) - 0u))), uint(7u))), ~ (~ ((_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) | (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), (uint(7u)) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), (false ? _GLF_FUZZED(subgroup_size) : uint(7u))), ~ (_GLF_IDENTITY(~ (uint(7u)), max(~ (uint(7u)), ~ (uint(7u)))))))), uint(7u))))))))) + GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.x + ((GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.y + 1) % _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.z, max(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.z, GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.z))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ (~ (workgroup_base)), (_GLF_IDENTITY(~ (~ (workgroup_base)), _GLF_IDENTITY((_GLF_IDENTITY(~ (~ (workgroup_base)), (~ (~ (workgroup_base))) << 0u)) - (0u | 0u), ((_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_base)), (~ (~ (workgroup_base))) * 1u), (~ (~ (workgroup_base))) << 0u)) - (0u | 0u)) + 0u))) ^ 0u)), 0u ^ (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ (~ (workgroup_base)), (_GLF_IDENTITY(~ (~ (workgroup_base)), (_GLF_IDENTITY(~ (~ (workgroup_base)), (~ (~ (workgroup_base))) << 0u)) - _GLF_IDENTITY((0u | 0u), 1u * ((0u | 0u))))) ^ 0u)))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))), ((_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))) << 0u) | (_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(bitfieldInsert(subgroup_size, subgroup_id, 37826, 32403)) : 0u)))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (_GLF_IDENTITY(7u, max(_GLF_IDENTITY(7u, max(7u, 7u)), 7u))) / 1u)), uint(7u)))))) + GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.x + (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.y + 1, 0u | (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id, min(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id, (GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id) | (GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id)))).y + 1))) % _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.z, max(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.z, GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.z)), uint(_GLF_IDENTITY(uvec2((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.y + 1, 0u | (GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.y + 1))) % _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.z, max(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.z, GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.z)), uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(uvec3(uvec2((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.y + 1, 0u | (GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.y + 1))) % _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.z, max(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.z, GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.z)), uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(-3.7)), float(_GLF_ONE(1.0, injectionSwitch.y)), bool(true))))), (1u & 1u))))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ (~ (workgroup_base)), (_GLF_IDENTITY(~ (~ (workgroup_base)), (_GLF_IDENTITY(~ (~ (workgroup_base)), (~ (~ (workgroup_base))) << 0u)) - _GLF_IDENTITY((0u | 0u), min(_GLF_IDENTITY((0u | 0u), (false ? _GLF_FUZZED(_GLF_IDENTITY(9719u, (9719u) | (9719u))) : (0u | 0u))), (0u | 0u))))) ^ 0u)), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) | (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (7u) | (7u)))), min(_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (7u) | (7u)))), ~ (~ (0u >> _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (7u) | (_GLF_IDENTITY(7u, (7u) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))))))))), _GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (7u) | (7u)))), max(0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (false ? _GLF_FUZZED(subgroup_id) : 7u))), uint(_GLF_IDENTITY(7u, (7u) | (_GLF_IDENTITY(7u, (7u) - 0u))))), 0u >> _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (7u) | (7u)))))))))))) + GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.x + ((GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.y + 1) % _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.z, max(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.z, GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_12subgroup_basesubgroup_local_idsubgroup_sizeworkgroup_id.z))))), 0u)))));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y) - 0.0)), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(bool((injectionSwitch.x < injectionSwitch.y))), true, false))))))))))))
  {
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(732.450)), float(injectionSwitch.y), bool(true))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      break;
     GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base.x = _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << 0u);
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), bool(_GLF_IDENTITY(bvec2(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), true), bvec2(bvec3(bvec2(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), true), true)))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))), ! (! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))), bool(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))))))))), (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, false), false, false)), bvec2(bvec3(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, false), false, false)), true))))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))), bool(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))))), bool(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))), bool(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))))))))))))) || false))))))), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, (false ? _GLF_FUZZED(-0.3) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), bool(bool(_GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), bool(bool(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))), bool(bvec3(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false)))), false, true))))), ! (! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - length(vec4(0.0, 0.0, 0.0, 0.0))), bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), false || (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))))))))))))))))))))
  {
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, sqrt(0.0)), mat2(1.0) * (mat3x2(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, sqrt(0.0)))))), bool(bvec4(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, sqrt(0.0)), mat2(1.0) * (mat3x2(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, sqrt(0.0)))))), false, true, false)))))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter ++)
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 & -35793)); _injected_loop_counter --)
                {
                 do
                  {
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
                    {
                    }
                   else
                    {
                     return;
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7.5)), float(injectionSwitch.y), bool(true))), max(injectionSwitch.y, injectionSwitch.y))))));
                 if(_GLF_DEAD(false))
                  continue;
                 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(995.880), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(96.02)), bvec2(true, _GLF_IDENTITY(false, (false) && true)))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-1751.4284)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, length(vec2(0.0, 0.0)), log(1.0), 1.0, log(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0))).y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8664.4029)), bool(false))))), injectionSwitch.y))), float(vec2(min(injectionSwitch.y, injectionSwitch.y), abs(1.0))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-1751.4284)), _GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), ! (! (bool(false))))) && true))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8664.4029)), bool(false))))), injectionSwitch.y))), float(vec2(min(injectionSwitch.y, injectionSwitch.y), abs(1.0))))), 1.0 * (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-1751.4284)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8664.4029)), bool(false))))), injectionSwitch.y))), float(vec2(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 1.0, 0.0, 1.0))).y), abs(1.0)))))))) - 0.0))), false)), (bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, log(1.0), 0.0, abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, sqrt(0.0), 1.0, 1.0, round(_GLF_IDENTITY(length(normalize(cos(vec3(0.0, 0.0, 0.0)))), float(mat3x4(length(normalize(cos(vec3(0.0, 0.0, 0.0)))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), round(length(normalize(cos(vec4(0.0, 0.0, 0.0, 0.0))))), 0.0, 1.0)))), 1.0)))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-8695.8107)))), min(clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-8695.8107)))), clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))))).x, (true ? injectionSwitch.x : _GLF_FUZZED(-8695.8107))))))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) - vec2(0.0, 0.0))).x, injectionSwitch.x), min(clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-8695.8107))))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, injectionSwitch.x), clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-8695.8107))))), injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)), false))) || false)))))
                  {
                   if(_GLF_DEAD(false))
                    break;
                   break;
                  }
                 if(_GLF_DEAD(false))
                  break;
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)), (bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false))) && _GLF_IDENTITY(true, true && _GLF_IDENTITY((true), true && ((true)))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)), (bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false))) && _GLF_IDENTITY(true, true && (true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)), (bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec4((false), false, false, false))) || false)) || false))) && _GLF_IDENTITY(true, true && (true)))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)), (bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec4((false), false, false, false))) || false)) || false))) && _GLF_IDENTITY(true, true && (true)))))))) || false))), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)), (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, (false) || false)) || false))) && true)), false, false))))))
                  continue;
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     do
                      {
                       return;
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))
                    continue;
                   break;
                  }
                }
              }
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                return;
              }
             else
              {
               if(_GLF_DEAD(false))
                return;
              }
            }
          }
        }
       else
        {
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      return;
    }
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, 0 | (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0))) != _GLF_IDENTITY(1, 0 + (1))); _injected_loop_counter ++)
          {
           return;
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)).y)), false)))))
            break;
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) * 1)) / 1), 64, _GLF_IDENTITY(2, int(int(2))));
 _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base.z = read, (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base.z = read) >> 0u);
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   do
    {
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            return;
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         do
          {
           atomicStore(buf[_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base.x, _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base.x) / 1u, 0u | ((GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base.x) / 1u)))], uint(1), 4, 64, 4);
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     return;
    }
  }
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           return;
          }
         while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY((_GLF_WRAPPED_LOOP(false)), ((_GLF_WRAPPED_LOOP(false))) || false) && true));
         if(_GLF_DEAD(false))
          continue;
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))
        {
        }
       else
        {
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3(! (_GLF_DEAD(false)), true, true)), (bool(bvec3(! (_GLF_DEAD(false)), true, true))) && true))))))) && true)))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ int(_GLF_ONE(1.0, injectionSwitch.y)))); _injected_loop_counter --)
                {
                 return;
                }
              }
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               return;
              }
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             return;
            }
          }
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))), bool(_GLF_IDENTITY(bvec3((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))), true, false), bvec3(bvec4(bvec3((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))), true, false), false))))))) || _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(598.459))))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(598.459)))))) || false)))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         do
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             return;
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(false))
        break;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) / 1))), 1)), int(ivec4(_GLF_IDENTITY(1, (1) << _GLF_IDENTITY((0 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (false ? _GLF_FUZZED(_injected_loop_counter) : int(6))))), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY((0 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (false ? _GLF_FUZZED(_injected_loop_counter) : int(6))))), ~ (~ ((0 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (false ? _GLF_FUZZED(_injected_loop_counter) : int(6))))))))))), 0, 0, 0)))); _injected_loop_counter ++)
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      return;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x < injectionSwitch.y))))
      {
       for(int _injected_loop_counter = (((1 ^ 0) << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) * 1))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           return;
          }
        }
      }
     else
      {
      }
    }
   subgroupBarrier();
  }
 atomicStore(checker[virtual_gid], _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base, _GLF_IDENTITY((uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u), uvec4(0u)), (_GLF_IDENTITY(uvec4(0u), uvec4(0u))) - uvec4(0u, 0u, 0u, 0u))) + (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base), max((uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) >> 0u)))), uvec4(0u))) + (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base), (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(0u), uvec4(0u))) + (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base))))) / uvec4(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ 0u), uint(uvec4(1u, 1u, 1u, (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) >> 0u)), uint(2u)), ~ (~ (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) >> 0u)), uint(2u))))))))), 1u), ~ (~ _GLF_IDENTITY(((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base, _GLF_IDENTITY((uvec4(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(0u), uvec4(0u))) + (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base), max((uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) >> _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))))))), uvec4(0u))) + (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base), (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(0u), uvec4(0u))) + (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base))))) / _GLF_IDENTITY(uvec4(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ 0u), uint(uvec4(1u, 1u, 1u, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) >> 0u)), uint(2u)))))), 1u), max(uvec4(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ 0u), uint(uvec4(1u, 1u, 1u, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) >> 0u)), uint(2u)))))), 1u), uvec4(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ 0u), uint(uvec4(1u, 1u, 1u, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) >> 0u)), uint(2u)))))), 1u)))), clamp(((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base, _GLF_IDENTITY((uvec4(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(0u), uvec4(0u))) + (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base), max((uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) >> _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))))))), uvec4(0u))) + (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base), (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(0u), uvec4(0u))) + (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base))))) / _GLF_IDENTITY(uvec4(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ 0u), uint(uvec4(1u, 1u, 1u, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) >> 0u)), uint(2u)))))), 1u), max(uvec4(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ 0u), uint(uvec4(1u, 1u, 1u, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) >> 0u)), uint(2u)))))), 1u), uvec4(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ 0u), uint(uvec4(1u, 1u, 1u, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) >> 0u)), uint(2u)))))), 1u)))), _GLF_IDENTITY(((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base, _GLF_IDENTITY((uvec4(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(0u), uvec4(0u))) + (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base), max((uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) >> _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))))))), uvec4(0u))) + (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base), (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(0u), uvec4(0u))) + (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base))))) / _GLF_IDENTITY(uvec4(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ 0u), uint(uvec4(1u, 1u, 1u, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) >> 0u)), uint(2u)))))), 1u), max(uvec4(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ 0u), uint(uvec4(1u, 1u, 1u, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) >> 0u)), uint(2u)))))), 1u), uvec4(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ 0u), uint(uvec4(1u, 1u, 1u, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) >> 0u)), uint(2u)))))), 1u)))), (((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base, _GLF_IDENTITY((uvec4(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(0u), uvec4(0u))) + (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base), max((uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) >> _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))))))), uvec4(0u))) + (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base), (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(0u), uvec4(0u))) + (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base))))) / _GLF_IDENTITY(uvec4(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ 0u), uint(uvec4(1u, 1u, 1u, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) >> 0u)), uint(2u)))))), 1u), max(uvec4(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ 0u), uint(uvec4(1u, 1u, 1u, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) >> 0u)), uint(2u)))))), 1u), uvec4(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ 0u), uint(uvec4(1u, 1u, 1u, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) >> 0u)), uint(2u)))))), 1u))))) | (((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base, _GLF_IDENTITY((uvec4(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(0u), uvec4(0u))) + (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base), max((uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) >> _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))))))), uvec4(0u))) + (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base), (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(0u), uvec4(0u))) + (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base))))) / _GLF_IDENTITY(uvec4(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ 0u), uint(uvec4(1u, 1u, 1u, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) >> 0u)), uint(2u)))))), 1u), max(uvec4(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ 0u), uint(uvec4(1u, 1u, 1u, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) >> 0u)), uint(2u)))))), 1u), uvec4(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ 0u), uint(uvec4(1u, 1u, 1u, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) >> 0u)), uint(2u)))))), 1u)))))), ((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base, _GLF_IDENTITY((uvec4(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(0u), uvec4(0u))) + (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base), max((uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) >> _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))))))), uvec4(0u))) + (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base), (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(0u), uvec4(0u))) + (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base))))) / _GLF_IDENTITY(uvec4(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ 0u), uint(uvec4(1u, 1u, 1u, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) >> 0u)), uint(2u)))))), 1u), max(uvec4(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ 0u), uint(uvec4(1u, 1u, 1u, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) >> 0u)), uint(2u)))))), 1u), uvec4(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ 0u), uint(uvec4(1u, 1u, 1u, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) >> 0u)), uint(2u)))))), 1u))))))))).z, 4, 64, _GLF_IDENTITY(4, (4) << 0));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, length(0.0), abs(0.0), 1.0, 1.0, 0.0, 0.0, log(1.0)), transpose(transpose(mat2x4(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(-77.14))), length(0.0), abs(0.0), 1.0, 1.0, 0.0, 0.0, log(1.0)))))), _GLF_IDENTITY((float(_GLF_IDENTITY(mat2x4(injectionSwitch.x, length(0.0), abs(0.0), 1.0, 1.0, 0.0, 0.0, log(1.0)), transpose(transpose(mat2x4(injectionSwitch.x, length(0.0), abs(0.0), 1.0, 1.0, 0.0, 0.0, log(1.0))))))) - 0.0, min(_GLF_IDENTITY((float(_GLF_IDENTITY(mat2x4(injectionSwitch.x, length(0.0), abs(0.0), 1.0, 1.0, 0.0, 0.0, log(1.0)), transpose(transpose(mat2x4(injectionSwitch.x, length(0.0), abs(0.0), 1.0, 1.0, 0.0, 0.0, log(1.0))))))) - 0.0, clamp((float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 1.0))), injectionSwitch.x)), length(_GLF_IDENTITY(0.0, max(0.0, 0.0))), abs(0.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-4.2) : 0.0)), 0.0))) * cos(0.0)), log(1.0)), transpose(transpose(mat2x4(injectionSwitch.x, length(0.0), abs(0.0), 1.0, 1.0, 0.0, 0.0, log(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))))) - 0.0, (float(_GLF_IDENTITY(mat2x4(injectionSwitch.x, length(_GLF_IDENTITY(0.0, 0.0 + (0.0))), abs(0.0), 1.0, 1.0, 0.0, 0.0, log(1.0)), transpose(transpose(mat2x4(injectionSwitch.x, length(0.0), abs(0.0), 1.0, 1.0, 0.0, 0.0, log(1.0))))))) - 0.0, _GLF_IDENTITY((float(_GLF_IDENTITY(mat2x4(injectionSwitch.x, length(0.0), abs(0.0), 1.0, 1.0, 0.0, 0.0, log(1.0)), transpose(transpose(mat2x4(injectionSwitch.x, length(0.0), abs(0.0), 1.0, 1.0, 0.0, 0.0, log(1.0))))))) - 0.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-9.2, clamp(-9.2, -9.2, -9.2)))), float((float(_GLF_IDENTITY(mat2x4(injectionSwitch.x, length(0.0), abs(0.0), 1.0, 1.0, 0.0, 0.0, log(1.0)), transpose(transpose(mat2x4(injectionSwitch.x, length(0.0), abs(0.0), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(log(1.0), 1.0 * (log(1.0))))))))) - 0.0), bool(true))))), (float(_GLF_IDENTITY(mat2x4(injectionSwitch.x, length(0.0), abs(0.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(77.24) : 0.0)), log(1.0)), transpose(transpose(mat2x4(injectionSwitch.x, length(0.0), abs(0.0), 1.0, 1.0, 0.0, 0.0, log(1.0))))))) - 0.0)))))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), mat2(1.0) * (vec2(vec2(injectionSwitch))))))).y, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), mat2(1.0) * (vec2(vec2(injectionSwitch)))))), mat2(1.0) * (min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), mat2(1.0) * (vec2(vec2(injectionSwitch)))))))), clamp(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), mat2(1.0) * (vec2(vec2(injectionSwitch)))))), min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), _GLF_IDENTITY(mat2(1.0), mat2(mat3x4(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))))) * (vec2(vec2(injectionSwitch)))))), _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), mat2(1.0) * (vec2(vec2(injectionSwitch)))))), (_GLF_IDENTITY(true ? min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), mat2(1.0) * (vec2(vec2(injectionSwitch)))))) : _GLF_FUZZED(vec2(-58.90, 9.4)), (true ? min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), mat2(1.0) * (vec2(vec2(injectionSwitch)))))) : _GLF_FUZZED(vec2(-58.90, 9.4))) - vec2(0.0, 0.0))))))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), mat2(1.0) * (vec2(vec2(injectionSwitch))))))).y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), mat2(1.0) * (vec2(vec2(injectionSwitch))))))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), mat2(1.0) * (vec2(vec2(injectionSwitch)))))))) * abs(vec2(1.0, 1.0))).y), float(_GLF_FUZZED(_GLF_IDENTITY((-86.59 - -780.311), float(mat4x2((-86.59 - -780.311), _GLF_IDENTITY(dot(vec4(1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4.8)), float(0.0), bool(true))), 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, 0.0, 1.0, 1.0))))), bool(false)))))))))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(1.7, -169.916)) : injectionSwitch)).x > injectionSwitch.y))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
