#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_2 {
 bvec4 _f0;
 bvec3 _f1;
 vec2 _f2;
} ;

struct _GLF_struct_1 {
 vec4 _f0;
 bvec4 _f1;
 mat2x4 _f2;
} ;

struct _GLF_struct_3 {
 _GLF_struct_1 _f0;
 _GLF_struct_2 _f1;
 mat3x4 _f2;
 mat2x3 _f3;
 bvec2 _f4;
} ;

struct _GLF_struct_0 {
 uint next_virtual_gid;
 mat3x2 _f0;
} ;

struct _GLF_struct_4 {
 _GLF_struct_0 _f0;
 _GLF_struct_3 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 0.0, 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, cos(sin(0.0)), 0.0))), 0.0 + (_GLF_IDENTITY(1.0, float(mat4x2(1.0, 0.0, 1.0, 0.0, round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), max(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), (normalize(vec2(1.0, 1.0))) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), normalize(vec2(1.0, 1.0)))))), 0.0, cos(sin(0.0)), 0.0))))), _GLF_IDENTITY(injectionSwitch.y, sqrt(0.0) + (injectionSwitch.y))), _GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(1.0, 1.0, length(vec3(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(831.058) : 0.0))))) - 0.0), 0.0)), 1.0, 0.0, 0.0), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat2x3(1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0), (mat2x3(1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0)) * mat2(1.0))), mat3x2(mat3(transpose(_GLF_IDENTITY(mat2x3(1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0), (mat2x3(1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0)) * mat2(1.0))))))))), (_GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat2x3(1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0), (mat2x3(1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0)) * mat2(1.0))), mat3x2(mat3(transpose(_GLF_IDENTITY(mat2x3(1.0, 1.0, _GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), clamp(length(vec3(0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)))), 1.0, 0.0, 0.0), (mat2x3(1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0)) * mat2(1.0))))))))), max(float(_GLF_IDENTITY(mat2x3(1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat2x3(1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0), (mat2x3(1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0)) * mat2(1.0))), mat3x2(mat3(transpose(_GLF_IDENTITY(mat2x3(1.0, 1.0, _GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), clamp(length(vec3(0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)))), 1.0, 0.0, 0.0), (mat2x3(1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0)) * mat2(1.0))))))))), float(_GLF_IDENTITY(mat2x3(1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat2x3(1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0), (mat2x3(1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0)) * mat2(1.0))), mat3x2(mat3(transpose(_GLF_IDENTITY(mat2x3(1.0, 1.0, _GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), clamp(length(vec3(0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)))), 1.0, 0.0, 0.0), (mat2x3(1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0)) * mat2(1.0)))))))))))) / cos(0.0))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))))))) * (injectionSwitch)).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(_GLF_IDENTITY(1.0, float(mat4x2(1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(max(_GLF_IDENTITY(0.0, float(mat2x4(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), 0.0), mix(float(_GLF_FUZZED(-819.150)), float(max(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), 0.0)), _GLF_IDENTITY(bool(true), true && (bool(true)))))), 1.0, 0.0, _GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), (round(length(normalize(vec2(1.0, 1.0))))) - 0.0), 0.0, _GLF_IDENTITY(cos(sin(_GLF_IDENTITY(0.0, max(0.0, 0.0)))), min(_GLF_IDENTITY(cos(sin(_GLF_IDENTITY(0.0, max(0.0, 0.0)))), clamp(cos(sin(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED((-7.1)) : 0.0))) / determinant(mat3(1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0))), 0.0)))), cos(sin(_GLF_IDENTITY(0.0, max(0.0, 0.0)))), cos(sin(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)))), _GLF_IDENTITY(0.0, max(0.0, 0.0)))))))), _GLF_IDENTITY(cos(sin(_GLF_IDENTITY(0.0, max(0.0, 0.0)))), clamp(cos(sin(_GLF_IDENTITY(0.0, max(0.0, 0.0)))), _GLF_IDENTITY(cos(sin(_GLF_IDENTITY(0.0, max(0.0, 0.0)))), max(cos(sin(_GLF_IDENTITY(0.0, max(0.0, 0.0)))), _GLF_IDENTITY(cos(sin(_GLF_IDENTITY(0.0, max(0.0, 0.0)))), clamp(cos(sin(_GLF_IDENTITY(0.0, max(0.0, 0.0)))), cos(sin(_GLF_IDENTITY(0.0, max(0.0, 0.0)))), cos(sin(_GLF_IDENTITY(0.0, max(0.0, 0.0)))))))), cos(sin(_GLF_IDENTITY(0.0, max(0.0, 0.0)))))))), 0.0))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(sqrt(_GLF_IDENTITY(0.0, (0.0) / 1.0)), mix(float(_GLF_FUZZED(_GLF_IDENTITY(-9702.8410, min(-9702.8410, -9702.8410)))), float(sqrt(0.0)), bool(true))) + (injectionSwitch.y))), _GLF_ONE(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec3(_GLF_IDENTITY(injectionSwitch.y, float(mat2x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0))), 1.0, 1.0))), injectionSwitch.y)))) * (injectionSwitch)).x > injectionSwitch.y) && true)), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), min(round(length(normalize(vec2(1.0, 1.0)))), round(length(normalize(vec2(1.0, 1.0)))))), 0.0, cos(sin(0.0)), 0.0))), _GLF_IDENTITY(0.0, max(0.0, 0.0)) + (_GLF_IDENTITY(1.0, float(mat4x2(1.0, 0.0, 1.0, 0.0, round(length(normalize(vec2(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) / 1.0))))), 0.0, cos(sin(0.0)), 0.0))))), _GLF_IDENTITY(injectionSwitch.y, sqrt(0.0) + (injectionSwitch.y))), _GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, float(vec4(_GLF_IDENTITY(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)) + (1.0)), tan(0.0), 1.0, 0.0))), 0.0, 0.0), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat2x3(1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0), (mat2x3(1.0, 1.0, length(vec3(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))))), 1.0), min(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))))), 1.0), vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))))), 1.0))))), 0.0, 0.0)), 1.0, 0.0, 0.0)) * mat2(1.0))), mat3x2(mat3(transpose(_GLF_IDENTITY(mat2x3(1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0), (mat2x3(1.0, 1.0, length(vec3(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6038.5186) : _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(38.63) : _GLF_IDENTITY(0.0, max(0.0, 0.0)))))), 0.0, 0.0)), 1.0, 0.0, 0.0)) * mat2(1.0))))))))), (_GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), mix(vec3((vec3(0.0, 0.0, 0.0))[0], _GLF_FUZZED(-8.3), _GLF_FUZZED(-4.9)), vec3(_GLF_FUZZED(505.923), (vec3(0.0, 0.0, 0.0))[1], _GLF_IDENTITY((vec3(0.0, 0.0, 0.0))[2], min((vec3(0.0, 0.0, 0.0))[2], (vec3(0.0, 0.0, 0.0))[2]))), bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), 1.0, 0.0, 0.0), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat2x3(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0), (mat2x3(1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0)) * mat2(1.0))), mat3x2(mat3(transpose(_GLF_IDENTITY(mat2x3(1.0, 1.0, length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), (vec3(0.0, 0.0, 0.0)) / vec3(1.0, 1.0, 1.0))), 1.0, 0.0, 0.0), (mat2x3(1.0, 1.0, _GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), mix(float(length(vec3(0.0, 0.0, 0.0))), float(_GLF_FUZZED(-748.051)), bool(false))), 1.0, 0.0, 0.0)) * mat2(1.0))))))))), clamp(float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), mix(vec3((vec3(0.0, 0.0, 0.0))[0], _GLF_FUZZED(-8.3), _GLF_FUZZED(-4.9)), vec3(_GLF_FUZZED(505.923), (vec3(0.0, 0.0, 0.0))[1], _GLF_IDENTITY((vec3(0.0, 0.0, 0.0))[2], min((vec3(0.0, 0.0, 0.0))[2], (vec3(0.0, 0.0, 0.0))[2]))), bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), 1.0, 0.0, 0.0), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat2x3(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0), (mat2x3(1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0)) * mat2(1.0))), mat3x2(mat3(transpose(_GLF_IDENTITY(mat2x3(1.0, 1.0, length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), (vec3(0.0, 0.0, 0.0)) / vec3(1.0, 1.0, 1.0))), 1.0, 0.0, 0.0), (mat2x3(1.0, 1.0, _GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), mix(float(length(vec3(0.0, 0.0, 0.0))), float(_GLF_FUZZED(-748.051)), bool(false))), 1.0, 0.0, 0.0)) * mat2(1.0))))))))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), mix(vec3((vec3(0.0, 0.0, 0.0))[0], _GLF_FUZZED(-8.3), _GLF_FUZZED(-4.9)), vec3(_GLF_FUZZED(505.923), (vec3(0.0, 0.0, 0.0))[1], _GLF_IDENTITY((vec3(0.0, 0.0, 0.0))[2], min((vec3(0.0, 0.0, 0.0))[2], (vec3(0.0, 0.0, 0.0))[2]))), bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), 1.0, 0.0, 0.0), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat2x3(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0), (mat2x3(1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0)) * mat2(1.0))), mat3x2(mat3(transpose(_GLF_IDENTITY(mat2x3(1.0, 1.0, length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), (vec3(0.0, 0.0, 0.0)) / vec3(1.0, 1.0, 1.0))), 1.0, 0.0, 0.0), (mat2x3(1.0, 1.0, _GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), mix(float(length(vec3(0.0, 0.0, 0.0))), float(_GLF_FUZZED(-748.051)), bool(false))), 1.0, 0.0, 0.0)) * mat2(1.0))))))))), (float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), mix(vec3((vec3(0.0, 0.0, 0.0))[0], _GLF_FUZZED(-8.3), _GLF_FUZZED(-4.9)), vec3(_GLF_FUZZED(505.923), (vec3(0.0, 0.0, 0.0))[1], _GLF_IDENTITY((vec3(0.0, 0.0, 0.0))[2], min((vec3(0.0, 0.0, 0.0))[2], (vec3(0.0, 0.0, 0.0))[2]))), bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), 1.0, 0.0, 0.0), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat2x3(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0), (mat2x3(1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0)) * mat2(1.0))), mat3x2(mat3(transpose(_GLF_IDENTITY(mat2x3(1.0, 1.0, length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), (vec3(0.0, 0.0, 0.0)) / vec3(1.0, 1.0, 1.0))), 1.0, 0.0, 0.0), (mat2x3(1.0, 1.0, _GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), mix(float(length(vec3(0.0, 0.0, 0.0))), float(_GLF_FUZZED(-748.051)), bool(false))), 1.0, 0.0, 0.0)) * mat2(1.0)))))))))) * 1.0), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), mix(vec3((vec3(0.0, 0.0, 0.0))[0], _GLF_FUZZED(-8.3), _GLF_FUZZED(-4.9)), vec3(_GLF_FUZZED(505.923), (vec3(0.0, 0.0, 0.0))[1], _GLF_IDENTITY((vec3(0.0, 0.0, 0.0))[2], min((vec3(0.0, 0.0, 0.0))[2], (vec3(0.0, 0.0, 0.0))[2]))), bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), 1.0, 0.0, 0.0), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat2x3(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0), (mat2x3(1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0)) * mat2(1.0))), mat3x2(mat3(transpose(_GLF_IDENTITY(mat2x3(1.0, 1.0, length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), (vec3(0.0, 0.0, 0.0)) / vec3(1.0, 1.0, 1.0))), 1.0, 0.0, 0.0), (mat2x3(1.0, 1.0, _GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), mix(float(length(vec3(0.0, 0.0, 0.0))), float(_GLF_FUZZED(-748.051)), bool(false))), 1.0, 0.0, 0.0)) * mat2(1.0)))))))))))) / cos(0.0))), injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(_GLF_IDENTITY(1.0, float(mat4x2(1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(max(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)), max(float(mat2x4(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)), float(mat2x4(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))))), 0.0), mix(float(_GLF_FUZZED(-819.150)), float(max(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), 0.0)), bool(true)))), 1.0, 0.0, _GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), (round(length(normalize(vec2(1.0, 1.0))))) - 0.0), 0.0, _GLF_IDENTITY(cos(sin(_GLF_IDENTITY(0.0, max(0.0, 0.0)))), min(_GLF_IDENTITY(cos(sin(_GLF_IDENTITY(0.0, max(0.0, 0.0)))), clamp(cos(sin(_GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), mix(float(max(0.0, 0.0)), float(_GLF_FUZZED(14.45)), bool(false)))))), cos(sin(_GLF_IDENTITY(0.0, max(0.0, 0.0)))), cos(sin(_GLF_IDENTITY(0.0, max(0.0, 0.0)))))), cos(sin(_GLF_IDENTITY(0.0, max(0.0, 0.0)))))), 0.0))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-9702.8410)), float(sqrt(0.0)), bool(true))) + (injectionSwitch.y))), _GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-0.9) : 1.0)), (1.0) / 1.0), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.y, float(mat2x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0))), 1.0, 1.0), (_GLF_IDENTITY(true, bool(bool(true))) ? vec3(_GLF_IDENTITY(injectionSwitch.y, float(mat2x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0))), 1.0, 1.0) : _GLF_FUZZED(vec3(748.685, -97.96, -416.813)))))), injectionSwitch.y)))) * (injectionSwitch)).x > injectionSwitch.y) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, length(0.0), 0.0, 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 1.0))))), (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-221.330), _GLF_FUZZED(-300.208)), bvec2(false, false))).x : _GLF_IDENTITY(_GLF_FUZZED(-8.6), (_GLF_FUZZED(-8.6)) - 0.0))) > injectionSwitch.y))))
  return;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8.3)), bool(false))))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8920.4620)), bool(false)))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8.3)), bool(false))))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8920.4620)), bool(false)))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), false, false, true))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), true)))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   return;
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) > injectionSwitch.y))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))) - uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u)), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, _GLF_IDENTITY(0u, (0u) | 0u), 0u))) - uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupID, (0u & 135859u)), (uvec4(gl_WorkGroupID, (0u & 135859u))) | uvec4(0u, 0u, 0u, 0u))))) - uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupID, (0u & 135859u)), (uvec4(gl_WorkGroupID, (0u & 135859u))) | uvec4(0u, 0u, 0u, 0u))))) - uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u))))), ((_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupID, (0u & 135859u)), (uvec4(gl_WorkGroupID, (0u & 135859u))) | uvec4(0u, 0u, 0u, 0u))))) - uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u)))))) << uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupID, (0u & 135859u)), (uvec4(gl_WorkGroupID, (0u & 135859u))) | uvec4(0u, 0u, 0u, 0u))))) - uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u))))), (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupID, (0u & 135859u)), (uvec4(gl_WorkGroupID, (0u & 135859u))) | uvec4(0u, 0u, 0u, 0u))))) - uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u)))))), uvec3(1u, 1u, 1u) * (clamp(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupID, (0u & 135859u)), (uvec4(gl_WorkGroupID, (0u & 135859u))) | uvec4(0u, 0u, 0u, 0u))))) - uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | ((gl_WorkGroupID))) - uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u))))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u))), ((_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u)))) ^ uvec3(0u, 0u, 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupID, (0u & 135859u)), (uvec4(gl_WorkGroupID, (0u & 135859u))) | uvec4(0u, 0u, 0u, 0u))))) - uvec3(0u, 0u, 0u))) - uvec3(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u, 0u))) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u)), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u)), 0u), ~ (~ (uvec4(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u)), 0u))))))) - uvec3(0u, _GLF_IDENTITY(0u, 0u | (0u)), 0u))), ((_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u)), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u)), 0u), ~ (~ (uvec4(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u)), 0u))))))) - uvec3(0u, _GLF_IDENTITY(0u, 0u | (0u)), 0u)))) | (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u)), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u)), 0u), ~ (~ (uvec4(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u)), 0u))))))) - uvec3(0u, _GLF_IDENTITY(0u, 0u | (0u)), 0u))), ((_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u)), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u)), 0u), ~ (~ (uvec4(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u)), 0u))))))) - uvec3(0u, _GLF_IDENTITY(0u, 0u | (0u)), 0u)))) - uvec3(0u, 0u, 0u))))))) << uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) + 0u))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : 0u))))) - uvec3(0u, 0u, 0u))), clamp((_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : 0u))))) - uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : 0u))))) - uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : 0u))))) - uvec3(0u, 0u, 0u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupID, (_GLF_IDENTITY(0u & 135859u, (0u & 135859u) << 0u))), (uvec4(gl_WorkGroupID, (0u & 135859u))) | uvec4(0u, 0u, 0u, 0u))))) - uvec3(0u, 0u, 0u))) - _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u)))) | uvec3(0u, 0u, 0u)))) | (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u))))), (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(gl_WorkGroupID, (0u & 135859u)), (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(8u), uvec4(8u))) ^ (uvec4(gl_WorkGroupID, (0u & 135859u)))), (uvec4(gl_WorkGroupID, (0u & _GLF_IDENTITY(135859u, (135859u) - 0u)))) | uvec4(0u, 0u, 0u, 0u))))) - _GLF_IDENTITY(uvec3(0u, 0u, 0u), (true ? uvec3(0u, 0u, 0u) : _GLF_FUZZED((uvec2(28629u, 44855u)[0] + uvec3(13257u, 79333u, 9482u))))))) - uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u))) - uvec3(0u, 0u, 0u)))))))))).x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 1.0, determinant(mat2(1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, 1.0)), 1.0, 1.0, 0.0, abs(0.0), cos(0.0))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 1.0, determinant(mat2(1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, 1.0)), 1.0, 1.0, 0.0, abs(0.0), cos(0.0))))))), bool(_GLF_IDENTITY(bool(true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 1.0, determinant(mat2(1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, 1.0)), 1.0, 1.0, 0.0, abs(0.0), cos(0.0)))))))), false || (bool(true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 1.0, determinant(mat2(1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, 1.0)), 1.0, 1.0, 0.0, abs(0.0), cos(0.0))))))))))))), (! (_GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 1.0, determinant(mat2(1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, 1.0)), 1.0, 1.0, 0.0, abs(0.0), cos(0.0))))))), bool(_GLF_IDENTITY(bool(true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 1.0, determinant(mat2(1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, 1.0)), 1.0, 1.0, 0.0, abs(0.0), cos(0.0)))))))), false || (bool(true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 1.0, determinant(mat2(1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, 1.0)), 1.0, 1.0, 0.0, abs(0.0), cos(0.0)))))))))))))) && true))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 1u, 0u, 1u))), uint(_GLF_IDENTITY(uint(workgroup_size * _GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 1u, 0u, 1u)))), (1u ^ 1u) | (_GLF_IDENTITY(uint(workgroup_size * _GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 1u, 0u, 1u)))), clamp(uint(workgroup_size * _GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 1u, 0u, 1u)))), uint(workgroup_size * _GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 1u, 0u, 1u)))), uint(workgroup_size * _GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 1u, 0u, 1u)))))))))), (workgroup_size * _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 0u + (workgroup_id)), clamp(workgroup_id, workgroup_id, workgroup_id))), 1u * ((_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id))))) / 1u)), ((_GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u))) ^ 0u) * 1u)) | (workgroup_size * workgroup_id)), ~ (~ (_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)), (true ? _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)) : _GLF_FUZZED(workgroup_size))), 1u, 0u, 1u)), max(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)), (true ? _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)) : _GLF_FUZZED(workgroup_size))), 1u, 0u, 1u)), uint(uint(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)), (true ? _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)) : _GLF_FUZZED(workgroup_size))), 1u, 0u, 1u))))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)), (true ? _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)) : _GLF_FUZZED(workgroup_size))), 1u, 0u, 1u))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 1u, 0u, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 1u, 0u, 1u))), (_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 1u, 0u, 1u)))) / 1u)) | (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))))), (_GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size)) * workgroup_id) | (workgroup_size * workgroup_id)))));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), mix(float(_GLF_FUZZED((-365.113 - 7.5))), float(max(injectionSwitch.x, injectionSwitch.x)), bool(true)))) > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(vec3(injectionSwitch, _GLF_IDENTITY(cos(_GLF_IDENTITY(0.0, (0.0) * 1.0)), min(cos(0.0), cos(0.0)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec3(injectionSwitch, cos(0.0)) : _GLF_FUZZED(vec3(-1481.1826, 0.2, _GLF_IDENTITY(-8907.1649, _GLF_IDENTITY(min(-8907.1649, -8907.1649), (false ? _GLF_FUZZED(log2(intBitsToFloat(-62374))) : min(-8907.1649, -8907.1649)))))))), (false ? _GLF_FUZZED(vec3(353.116, _GLF_IDENTITY(-270.165, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -270.165 : _GLF_FUZZED(7.5))), -46.03)) : vec3(injectionSwitch, cos(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(true ? 0.0 : _GLF_FUZZED(3963.4297), clamp(true ? 0.0 : _GLF_FUZZED(3963.4297), true ? 0.0 : _GLF_FUZZED(3963.4297), _GLF_IDENTITY(true ? 0.0 : _GLF_FUZZED(3963.4297), max(true ? 0.0 : _GLF_FUZZED(3963.4297), true ? 0.0 : _GLF_FUZZED(_GLF_IDENTITY(3963.4297, (false ? _GLF_FUZZED(determinant(mat4(922.842, 610.658, -4.8, 191.456, 1.5, 534.970, 1.9, -27.91, -61.49, -285.503, 6.1, -2286.3832, 234.726, 66.51, -4.2, -4.5))) : 3963.4297))))))))), 0.0)))))))).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0 + (injectionSwitch.x), min(0.0 + (injectionSwitch.x), 0.0 + (injectionSwitch.x)))) > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 uint subgroup_base = _GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size));
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))), true, false), false)))))) || false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(_GLF_struct_0(workgroup_base + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), min(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_IDENTITY(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), (uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) << uvec2(0u, 0u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + (subgroup_base)) + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) << 0u)) % subgroup_size), (true ? ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u) + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))) | 0u)) % subgroup_size) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), _GLF_IDENTITY(max(_GLF_FUZZED(subgroup_size), _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)) ? _GLF_FUZZED(num_workgroup) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))))) ^ uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 0.0 + (_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 0.0))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(workgroup_size) : max(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), (_GLF_FUZZED(subgroup_size)) / _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(max(subgroup_local_id, subgroup_local_id)) : _GLF_IDENTITY(1u, uint(uint(1u)))))), _GLF_FUZZED(subgroup_size)), ~ (~ (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(workgroup_size) : max(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), (_GLF_FUZZED(subgroup_size)) / _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(max(subgroup_local_id, subgroup_local_id)) : _GLF_IDENTITY(1u, uint(uint(1u)))))), _GLF_FUZZED(subgroup_size)))))))))), mat3x2(1.0)), _GLF_struct_3(_GLF_struct_1(vec4(1.0), bvec4(true), mat2x4(1.0)), _GLF_struct_2(bvec4(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))) || (true), (_GLF_IDENTITY(false, bool(bool(false))) || (true)) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false)), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (! (_GLF_IDENTITY(true, (true) || false)))), ! (! (_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, false || (false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ((true) || false) && true)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(true, (true) || false))), (! (! (_GLF_IDENTITY(true, (true) || false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), (true) && _GLF_IDENTITY(true, false || (true)))))), bvec3(_GLF_IDENTITY(true, false || (true))), vec2(1.0)), mat3x4(1.0), mat2x3(1.0), bvec2(_GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec3(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), false, true))), true, false)), bool(bool(bool(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec3(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), false, true))), true, false)))))))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) || false)))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[virtual_gid], uint(1), _GLF_IDENTITY(4, _GLF_IDENTITY(min(_GLF_IDENTITY(4, min(4, 4)), 4), (_GLF_IDENTITY(min(_GLF_IDENTITY(4, min(4, 4)), 4), min(min(_GLF_IDENTITY(4, min(4, 4)), 4), _GLF_IDENTITY(min(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (4) - 0))), 4), (min(_GLF_IDENTITY(4, min(4, 4)), 4)) / _GLF_IDENTITY(1, (1) ^ 0))))) << 0)), 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) || false))), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  return;
 atomicStore(buf[_GLF_struct_replacement_4._f0.next_virtual_gid], _GLF_IDENTITY(uint(2), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(2), min(uint(2), uint(2))), uint(_GLF_IDENTITY(uint(uint(2)), clamp(uint(uint(2)), uint(_GLF_IDENTITY(uint(2), 1u * (uint(2)))), uint(uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY((2) ^ 0, ((2) ^ 0) | _GLF_IDENTITY(((2) ^ 0), min(_GLF_IDENTITY(((2) ^ 0), ~ (~ (((2) ^ 0)))), ((2) ^ 0)))))) >> 0))))))), (uint(2)) | _GLF_IDENTITY((uint(2)), (_GLF_IDENTITY((uint(2)), max((uint(2)), (uint(2))))) - 0u)), _GLF_IDENTITY(uint(2), (_GLF_IDENTITY(uint(_GLF_IDENTITY(2, (2) ^ 0)), (uint(_GLF_IDENTITY(2, (2) ^ 0))) ^ 0u)) << _GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(2, (2) - 0)), _GLF_IDENTITY(0u, _GLF_IDENTITY((true ? 0u : _GLF_FUZZED(subgroup_base)), (_GLF_IDENTITY((true ? 0u : _GLF_FUZZED(subgroup_base)), ((true ? 0u : _GLF_FUZZED(subgroup_base))) - 0u)) - 0u)) | (uint(2))))), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), true && (! (! (injectionSwitch.x > injectionSwitch.y))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
