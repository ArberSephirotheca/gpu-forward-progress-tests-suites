#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false) || false)))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY((((injectionSwitch.x < injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false, (_GLF_IDENTITY((((injectionSwitch.x < injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((((injectionSwitch.x < injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false))) || false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, 1.0), _GLF_IDENTITY(mat3(1.0), mat3(_GLF_IDENTITY(mat4x3(mat3(1.0)), _GLF_IDENTITY((mat4x3(mat3(1.0))) * mat4(1.0), mat3(1.0) * ((mat4x3(mat3(1.0))) * mat4(1.0)))))) * (vec3(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)))))), (float(_GLF_IDENTITY(_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, 1.0), mat3(1.0) * _GLF_IDENTITY((vec3(injectionSwitch.y, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(0.7))), 0.0)), 1.0)), mix(vec3(((vec3(injectionSwitch.y, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(0.7))), 0.0)), 1.0)))[0], ((vec3(injectionSwitch.y, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(0.7))), 0.0)), 1.0)))[1], _GLF_FUZZED(48.16)), vec3(_GLF_FUZZED(-8.9), _GLF_FUZZED(float((mat4x3(83.63, 90.15, 13.01, -8267.4117, -3.1, 4.3, -30.21, 1441.1597, -31.51, -5.8, -420.378, 3119.6206) == mat4x3(6.7, -8.1, -3.9, 81.89, 70.29, 48.13, -6.3, -26.62, -6795.7177, _GLF_IDENTITY(-2994.4637, (_GLF_IDENTITY(-2994.4637, (true ? -2994.4637 : _GLF_FUZZED(6444.4641)))) + 0.0), -8.2, 7.2)))), ((vec3(injectionSwitch.y, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(0.7))), 0.0)), 1.0)))[2]), bvec3(false, false, true)))), _GLF_IDENTITY(mat3(1.0) * (_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, 1.0), mat3(1.0) * _GLF_IDENTITY((vec3(injectionSwitch.y, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(0.7))), 0.0)), 1.0)), mix(vec3(((vec3(injectionSwitch.y, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(0.7))), 0.0)), 1.0)))[0], ((vec3(injectionSwitch.y, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(0.7))), 0.0)), 1.0)))[1], _GLF_FUZZED(48.16)), vec3(_GLF_FUZZED(-8.9), _GLF_FUZZED(float((mat4x3(83.63, 90.15, 13.01, -8267.4117, -3.1, 4.3, -30.21, 1441.1597, -31.51, -5.8, -420.378, 3119.6206) == mat4x3(6.7, -8.1, -3.9, 81.89, 70.29, 48.13, -6.3, -26.62, -6795.7177, _GLF_IDENTITY(-2994.4637, (_GLF_IDENTITY(-2994.4637, (true ? -2994.4637 : _GLF_FUZZED(6444.4641)))) + 0.0), -8.2, 7.2)))), ((vec3(injectionSwitch.y, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(0.7))), 0.0)), 1.0)))[2]), bvec3(false, false, true))))), mix(vec3(_GLF_FUZZED(1.1), _GLF_FUZZED(63.61), (mat3(1.0) * (_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, 1.0), mat3(1.0) * _GLF_IDENTITY((vec3(injectionSwitch.y, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(0.7))), 0.0)), 1.0)), mix(vec3(((vec3(injectionSwitch.y, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(0.7))), 0.0)), 1.0)))[0], ((vec3(injectionSwitch.y, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(0.7))), 0.0)), 1.0)))[1], _GLF_FUZZED(48.16)), vec3(_GLF_FUZZED(-8.9), _GLF_FUZZED(float((mat4x3(83.63, 90.15, 13.01, -8267.4117, -3.1, 4.3, -30.21, 1441.1597, -31.51, -5.8, -420.378, 3119.6206) == mat4x3(6.7, -8.1, -3.9, 81.89, 70.29, 48.13, -6.3, -26.62, -6795.7177, _GLF_IDENTITY(-2994.4637, (_GLF_IDENTITY(-2994.4637, (true ? -2994.4637 : _GLF_FUZZED(6444.4641)))) + 0.0), -8.2, 7.2)))), ((vec3(injectionSwitch.y, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(0.7))), 0.0)), 1.0)))[2]), bvec3(false, false, true))))))[2]), vec3((mat3(1.0) * (_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, 1.0), mat3(1.0) * _GLF_IDENTITY((vec3(injectionSwitch.y, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(0.7))), 0.0)), 1.0)), mix(vec3(((vec3(injectionSwitch.y, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(0.7))), 0.0)), 1.0)))[0], ((vec3(injectionSwitch.y, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(0.7))), 0.0)), 1.0)))[1], _GLF_FUZZED(48.16)), vec3(_GLF_FUZZED(-8.9), _GLF_FUZZED(float((mat4x3(83.63, 90.15, 13.01, -8267.4117, -3.1, 4.3, -30.21, 1441.1597, -31.51, -5.8, -420.378, 3119.6206) == mat4x3(6.7, -8.1, -3.9, 81.89, 70.29, 48.13, -6.3, -26.62, -6795.7177, _GLF_IDENTITY(-2994.4637, (_GLF_IDENTITY(-2994.4637, (true ? -2994.4637 : _GLF_FUZZED(6444.4641)))) + 0.0), -8.2, 7.2)))), ((vec3(injectionSwitch.y, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(0.7))), 0.0)), 1.0)))[2]), bvec3(false, false, true))))))[0], (mat3(1.0) * (_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, 1.0), mat3(1.0) * _GLF_IDENTITY((vec3(injectionSwitch.y, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(0.7))), 0.0)), 1.0)), mix(vec3(((vec3(injectionSwitch.y, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(0.7))), 0.0)), 1.0)))[0], ((vec3(injectionSwitch.y, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(0.7))), 0.0)), 1.0)))[1], _GLF_FUZZED(48.16)), vec3(_GLF_FUZZED(-8.9), _GLF_FUZZED(float((mat4x3(83.63, 90.15, 13.01, -8267.4117, -3.1, 4.3, -30.21, 1441.1597, -31.51, -5.8, -420.378, 3119.6206) == mat4x3(6.7, -8.1, -3.9, 81.89, 70.29, 48.13, -6.3, -26.62, -6795.7177, _GLF_IDENTITY(-2994.4637, (_GLF_IDENTITY(-2994.4637, (true ? -2994.4637 : _GLF_FUZZED(6444.4641)))) + 0.0), -8.2, 7.2)))), ((vec3(injectionSwitch.y, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(0.7))), 0.0)), 1.0)))[2]), bvec3(false, false, true))))))[1], _GLF_FUZZED(3083.3996)), bvec3(true, true, false)))))) - 0.0))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, 1.0), _GLF_IDENTITY(mat3(1.0), mat3(_GLF_IDENTITY(mat4x3(mat3(1.0)), _GLF_IDENTITY((mat4x3(mat3(1.0))) * mat4(1.0), mat3(1.0) * ((mat4x3(mat3(1.0))) * mat4(1.0)))))) * (vec3(injectionSwitch.y, 0.0, 1.0)))), (float(_GLF_IDENTITY(vec3(injectionSwitch.y, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(79.01))), 1.0), mat3(1.0) * _GLF_IDENTITY((vec3(injectionSwitch.y, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(0.7))), 0.0)), 1.0)), mix(vec3((_GLF_IDENTITY((vec3(injectionSwitch.y, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(0.7))), 0.0)), 1.0)), max((vec3(injectionSwitch.y, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(0.7))), 0.0)), 1.0)), _GLF_IDENTITY((vec3(injectionSwitch.y, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(0.7))), 0.0)), 1.0)), vec3(0.0, 0.0, 0.0) + ((vec3(injectionSwitch.y, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(0.7))), 0.0)), 1.0)))))))[0], ((vec3(injectionSwitch.y, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(0.7))), 0.0)), 1.0)))[1], _GLF_FUZZED(48.16)), vec3(_GLF_FUZZED(-8.9), _GLF_FUZZED(_GLF_IDENTITY(float((mat4x3(83.63, 90.15, 13.01, -8267.4117, -3.1, 4.3, -30.21, _GLF_IDENTITY(1441.1597, (1441.1597) / exp(0.0)), -31.51, -5.8, -420.378, 3119.6206) == mat4x3(6.7, -8.1, -3.9, 81.89, 70.29, 48.13, -6.3, -26.62, -6795.7177, _GLF_IDENTITY(-2994.4637, (_GLF_IDENTITY(-2994.4637, (true ? -2994.4637 : _GLF_FUZZED(6444.4641)))) + 0.0), -8.2, 7.2))), clamp(float((mat4x3(83.63, 90.15, 13.01, -8267.4117, -3.1, 4.3, -30.21, _GLF_IDENTITY(1441.1597, (1441.1597) / exp(0.0)), -31.51, -5.8, -420.378, 3119.6206) == mat4x3(6.7, -8.1, -3.9, 81.89, 70.29, 48.13, -6.3, -26.62, -6795.7177, _GLF_IDENTITY(-2994.4637, (_GLF_IDENTITY(-2994.4637, (true ? -2994.4637 : _GLF_FUZZED(6444.4641)))) + 0.0), -8.2, 7.2))), float((mat4x3(83.63, 90.15, 13.01, -8267.4117, -3.1, 4.3, -30.21, _GLF_IDENTITY(1441.1597, (1441.1597) / exp(0.0)), -31.51, -5.8, -420.378, 3119.6206) == mat4x3(6.7, -8.1, -3.9, 81.89, 70.29, 48.13, -6.3, -26.62, -6795.7177, _GLF_IDENTITY(-2994.4637, (_GLF_IDENTITY(-2994.4637, (true ? -2994.4637 : _GLF_FUZZED(6444.4641)))) + 0.0), -8.2, 7.2))), float((mat4x3(83.63, 90.15, 13.01, -8267.4117, -3.1, 4.3, -30.21, _GLF_IDENTITY(1441.1597, (1441.1597) / exp(0.0)), -31.51, -5.8, -420.378, 3119.6206) == mat4x3(6.7, -8.1, -3.9, 81.89, 70.29, 48.13, -6.3, -26.62, -6795.7177, _GLF_IDENTITY(-2994.4637, (_GLF_IDENTITY(-2994.4637, (true ? -2994.4637 : _GLF_FUZZED(6444.4641)))) + 0.0), -8.2, 7.2)))))), ((vec3(injectionSwitch.y, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(0.7))), 0.0)), 1.0)))[2]), bvec3(false, false, true)))))) - 0.0))))))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))))) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, determinant(mat3(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(1.0, 1.0, 0.0), clamp(vec3(1.0, 1.0, 0.0), vec3(1.0, 1.0, 0.0), vec3(1.0, 1.0, 0.0)))), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), clamp(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0))).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true))))) || false)))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))[1])).y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, false, true)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, gl_NumWorkGroups.x));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(true, bool(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bvec2((false), true))))) && true)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), true)), (bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, true))), bvec2(bvec2(bvec2(bvec2(bvec2(false, true))))))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, true))), bvec2(bvec2(bvec2(bvec2(bvec2(false, true))))))))), true)))))), true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), bool(bvec2(bool(bvec2(true, false)), false))))), (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), bool(bvec2(bool(bvec2(true, false)), false)))))) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(5810.2986)))) / 1.0)))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))), 0u))), ~ (~ (gl_WorkGroupSize))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(uint(uvec3(gl_WorkGroupID.x, 1u, 1u)), (uint(uvec3(gl_WorkGroupID.x, 1u, 1u))) | (uint(uvec3(gl_WorkGroupID.x, 1u, 1u)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(workgroup_id), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(atomicOr(workgroup_size, subgroup_local_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(atomicOr(workgroup_size, subgroup_local_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(atomicOr(workgroup_size, subgroup_local_id)))), (_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(atomicOr(workgroup_size, subgroup_local_id))))) << 0u)) >> (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))) | 0u)), (uint(_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(atomicOr(workgroup_size, subgroup_local_id)))))) ^ _GLF_IDENTITY(0u, min(0u, 0u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(atomicOr(workgroup_size, subgroup_local_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(atomicOr(workgroup_size, subgroup_local_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(atomicOr(workgroup_size, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), (true ? workgroup_id : _GLF_FUZZED(atomicOr(workgroup_size, subgroup_local_id))))) << 0u)) >> (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))) | 0u)), (uint(_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(_GLF_IDENTITY(atomicOr(workgroup_size, subgroup_local_id), (true ? atomicOr(workgroup_size, subgroup_local_id) : _GLF_FUZZED(63806u)))))))) ^ _GLF_IDENTITY(0u, min(0u, 0u)))) / 1u)), (_GLF_IDENTITY((uint(_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(atomicOr(workgroup_size, subgroup_local_id)))))), ((uint(_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(atomicOr(workgroup_size, subgroup_local_id))))))) / ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))))) | 0u) + (71282u & 0u))), (uint(_GLF_IDENTITY(uint(workgroup_id), _GLF_IDENTITY((uint(workgroup_id)), (_GLF_IDENTITY((uint(workgroup_id)), (false ? _GLF_FUZZED(workgroup_id) : (_GLF_IDENTITY(uint(workgroup_id), ~ (_GLF_IDENTITY(~ (uint(workgroup_id)), (~ (uint(workgroup_id))) >> 0u))))))) >> 0u) + (_GLF_IDENTITY(71282u & 0u, ~ (~ (71282u & 0u))))))) | (uint(_GLF_IDENTITY(uint(workgroup_id), (uint(workgroup_id)) + (_GLF_IDENTITY(71282u & _GLF_IDENTITY(0u, (0u) | (0u & 137322u)), _GLF_IDENTITY(max(_GLF_IDENTITY(71282u, (false ? _GLF_FUZZED(workgroup_size) : 71282u)) & 0u, 71282u & _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, (0u) - 0u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), (uint(uvec3(_GLF_IDENTITY(0u, (0u) - 0u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))) | (uint(uvec3(_GLF_IDENTITY(0u, (0u) - 0u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))), _GLF_IDENTITY((max(_GLF_IDENTITY(71282u & 0u, (71282u & 0u) / 1u), 71282u & 0u)) / 1u, min(_GLF_IDENTITY((max(71282u & 0u, 71282u & 0u)) / 1u, clamp((max(71282u & 0u, 71282u & 0u)) / 1u, (max(71282u & 0u, 71282u & 0u)) / 1u, (max(_GLF_IDENTITY(71282u & 0u, 0u | (71282u & 0u)), 71282u & 0u)) / 1u)), (max(71282u & 0u, 71282u & 0u)) / 1u))))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(_GLF_IDENTITY(bool((false) || false), ! (! (_GLF_IDENTITY(bool((false) || false), _GLF_IDENTITY((bool((false) || false)), ((bool((false) || false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).x > injectionSwitch.y))))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, ! (! (true)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, ! (! (true))))))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (workgroup_base + subgroup_base + subgroup_local_id) << 0u)) - 0u);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(injectionSwitch.x, 0.0, 0.0), vec3(1.0, 1.0, 1.0) * (vec3(injectionSwitch.x, 0.0, 0.0)))), max(_GLF_IDENTITY(float(_GLF_IDENTITY(vec3(injectionSwitch.x, 0.0, 0.0), vec3(1.0, 1.0, 1.0) * (vec3(injectionSwitch.x, 0.0, 0.0)))), clamp(float(_GLF_IDENTITY(vec3(injectionSwitch.x, 0.0, 0.0), vec3(1.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), 1.0))) * (vec3(injectionSwitch.x, 0.0, 0.0)))), float(_GLF_IDENTITY(vec3(injectionSwitch.x, 0.0, 0.0), vec3(1.0, 1.0, 1.0) * (vec3(injectionSwitch.x, 0.0, 0.0)))), float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0), vec3(1.0, 1.0, 1.0) * (vec3(injectionSwitch.x, 0.0, 0.0)))))), float(_GLF_IDENTITY(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2414.0454) : injectionSwitch.x)))), 0.0, 0.0), mix(vec3((vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2414.0454) : injectionSwitch.x)))), 0.0, 0.0))[0], _GLF_FUZZED(float(false)), _GLF_FUZZED(34.69)), vec3(_GLF_FUZZED(9.3), (vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2414.0454) : injectionSwitch.x)))), 0.0, 0.0))[1], (vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2414.0454) : injectionSwitch.x)))), 0.0, 0.0))[2]), bvec3(false, true, true))), vec3(1.0, 1.0, 1.0) * (vec3(injectionSwitch.x, 0.0, 0.0))))))) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1))))) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       return;
      }
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(length(acosh(vec3(-50.02, 7.8, 3.0)))) : injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true)))), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(length(acosh(vec3(-50.02, 7.8, 3.0)))) : injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))), true))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-46.69)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), mix(float(_GLF_FUZZED(-884.353)), float(mix(float(_GLF_FUZZED(-46.69)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(true)))) > injectionSwitch.y))), false || _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(22.00)), bool(false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + length(cross(vec3(59.94, -9.2, -456.913), vec3(59.94, -9.2, -456.913)))) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (bool(bool(_GLF_DEAD(false))))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), true && (bool(bool(_GLF_DEAD(false)))))) || false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_DEAD(false)))) || false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bool(bool(bool(_GLF_DEAD(false)))))), (bool(bool(_GLF_DEAD(false)))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_DEAD(false)))) || false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, 1.0)), min(float(vec2(injectionSwitch.y, 1.0)), float(vec2(injectionSwitch.y, 1.0))))))) || (_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_DEAD(false)))) || false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))).x < injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_DEAD(false)))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_DEAD(false)))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (bool(bool(_GLF_DEAD(false)))) || false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_DEAD(false)))) || false))), true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))))
  return;
 atomicStore(buf[next_virtual_gid], uint(2), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(ivec4(ivec3(64, 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, max(0, 0)), 1, 1), _GLF_IDENTITY(ivec3(ivec4(ivec3(0, 1, 1), 1)), (ivec3(ivec4(ivec3(0, 1, 1), 1))) >> ivec3(0, 0, 0)))))) << 0)), _GLF_IDENTITY(0, min(0, 0)))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(ivec3(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(_GLF_IDENTITY(0, int(int(_GLF_IDENTITY(0, (0) / 1)))), 0, 0) ^ _GLF_IDENTITY((ivec3(64, 0, 0)), ivec3(0, 0, 0) ^ ((ivec3(64, 0, 0)))))))), ivec3(_GLF_IDENTITY(ivec4(ivec3(64, 0, 0), _GLF_IDENTITY(0, min(_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) << _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, int(ivec4(0, 1, 1, 1))), 0))))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) << _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, int(ivec4(0, 1, 1, 1))), 0))))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x))), (true ? ivec3(_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) << _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, int(ivec4(0, 1, 1, 1))), 0))))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(ivec3(17759, 58984, 90903)))))), 0))), (_GLF_IDENTITY(ivec4(ivec3(64, 0, 0), _GLF_IDENTITY(0, min(_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) << _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, int(ivec4(0, 1, 1, 1))), 0))))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) << _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, int(ivec4(0, 1, 1, 1))), 0))))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x))), (true ? ivec3(_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) << _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, int(ivec4(0, 1, 1, 1))), 0))))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(ivec3(17759, 58984, 90903)))))), 0))), ~ (~ (ivec4(ivec3(64, 0, 0), _GLF_IDENTITY(0, min(_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) << _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, int(ivec4(0, 1, 1, 1))), 0))))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) << _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, int(ivec4(0, 1, 1, 1))), 0))))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x))), (true ? ivec3(_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) << _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, int(ivec4(0, 1, 1, 1))), 0))))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(ivec3(17759, 58984, 90903)))))), 0))))))) / ivec4(1, 1, 1, 1))))), clamp(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(0, 0, 0) ^ (ivec3(64, 0, 0)))), _GLF_IDENTITY(ivec3(ivec3(ivec3(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(0, 0, 0) ^ (ivec3(64, 0, 0)))))), (ivec3(ivec3(ivec3(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(0, 0, 0) ^ (ivec3(64, 0, 0))))))) | (ivec3(ivec3(ivec3(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(0, 0, 0) ^ (ivec3(64, 0, 0))))))))))), ivec3(ivec4(ivec3(64, 0, 0), _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) << 0))), 0))))), max(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(ivec3(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(0, 0, 0) ^ (ivec3(64, 0, 0)))))), ivec3(_GLF_IDENTITY(ivec4(ivec3(64, 0, 0), _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) << 0))), 0))), max(ivec4(ivec3(64, 0, 0), _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) << 0))), 0))), ivec4(ivec3(64, 0, 0), _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) << 0))), 0))))))), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(ivec3(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(0, 0, 0) ^ (ivec3(64, 0, 0)))))), ivec3(ivec4(ivec3(64, _GLF_IDENTITY(0, (0) << 0), 0), _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) << 0))), 0)))))))), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(ivec3(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(0, 0, 0) ^ (ivec3(64, 0, 0)))))), ivec3(ivec4(ivec3(64, 0, 0), _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) ^ 0)) << 0)) << 0))), 0)))))), (int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(ivec3(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(0, 0, 0) ^ (ivec3(64, 0, 0)))))), ivec3(ivec4(ivec3(64, 0, 0), _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) ^ 0)) << 0)) << 0))), 0))))))) | (int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(ivec3(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(0, 0, 0) ^ (ivec3(64, 0, 0)))))), ivec3(ivec4(ivec3(64, 0, 0), _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) ^ 0)) << 0)) << 0))), 0)))))))), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(ivec3(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(0, 0, 0) ^ (ivec3(64, 0, 0)))))), ivec3(ivec4(ivec3(_GLF_IDENTITY(64, clamp(64, 64, 64)), 0, 0), _GLF_IDENTITY(0, min(_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(0, 1 * (0)) ^ (_GLF_IDENTITY(0, (0) << 0))), 1 * (_GLF_IDENTITY(0, _GLF_IDENTITY(0, 1 * (0)) ^ (_GLF_IDENTITY(0, (0) << 0))))), 0))))))))) << 0), min(int(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(ivec4(ivec3(64, 0, _GLF_IDENTITY(0, 0 ^ (0))), 0)))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(64, 0, 0), _GLF_IDENTITY(ivec3(ivec4(ivec3(64, 0, 0), 0)), max(_GLF_IDENTITY(ivec3(ivec4(ivec3(64, 0, 0), 0)), (_GLF_IDENTITY(ivec3(ivec4(ivec3(64, 0, 0), 0)), (true ? ivec3(ivec4(ivec3(64, 0, 0), 0)) : _GLF_FUZZED(ivec3(32698, -30926, -6760))))) - ivec3(0, 0, 0)), _GLF_IDENTITY(ivec3(ivec4(ivec3(64, 0, 0), 0)), (ivec3(ivec4(_GLF_IDENTITY(ivec3(64, 0, 0), (ivec3(64, 0, 0)) - ivec3(0, 0, 0)), 0))) | (ivec3(ivec4(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(0, 0, 0) ^ (ivec3(64, 0, 0))), 0)))))))), 1 * (int(_GLF_IDENTITY(ivec3(64, 0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(30609) : 0))), ivec3(_GLF_IDENTITY(ivec4(ivec3(64, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), 0), 0), ~ (~ _GLF_IDENTITY((ivec4(ivec3(64, 0, 0), _GLF_IDENTITY(0, (false ? _GLF_FUZZED(findMSB(157642u)) : 0)))), ivec4(0, 0, 0, 0) + ((ivec4(ivec3(64, 0, 0), _GLF_IDENTITY(0, (false ? _GLF_FUZZED(findMSB(157642u)) : 0)))))))))))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(ivec4(ivec3(64, 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec3(0, 1, 1), ivec3(ivec4(ivec3(0, 1, 1), 1)))))) << 0)), _GLF_IDENTITY(0, min(0, 0)))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(ivec3(_GLF_IDENTITY(ivec3(64, 0, 0), _GLF_IDENTITY(ivec3(0, 0, 0), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(ivec3(0, 0, 0), ~ (_GLF_IDENTITY(~ (ivec3(0, 0, 0)), (~ (ivec3(0, 0, 0))) / ivec3(1, 1, 1))))), ivec3(0, 0, 0) ^ (~ (_GLF_IDENTITY(ivec3(0, 0, 0), ~ (_GLF_IDENTITY(~ (ivec3(0, 0, 0)), (~ (ivec3(0, 0, 0))) / ivec3(1, 1, 1))))))))) ^ (ivec3(64, 0, 0)))))), ivec3(ivec4(ivec3(64, 0, 0), _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(0, 1)), (false ? _GLF_FUZZED(83475) : int(ivec2(0, 1))))) ^ (_GLF_IDENTITY(0, (0) << _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, int(ivec4(0, 1, 1, 1))), _GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, clamp(0, 0, 0))))))))), 0)))))), clamp(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(64, 0 | (64)), 0, 0), ivec3(ivec3(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(0, 0, 0) ^ (ivec3(64, 0, 0)))))), ivec3(ivec4(ivec3(64, 0, 0), _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) << 0))), 0))))), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(ivec3(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(0, 0, 0) ^ (ivec3(64, 0, 0)))))), ivec3(ivec4(ivec3(64, 0, 0), _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) << 0))), 0))))), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(ivec3(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(0, 0, 0) ^ (ivec3(64, 0, 0)))))), ivec3(ivec4(ivec3(64, 0, 0), _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) << 0))), 0)))))), ivec3(0, 0, 0) | (max(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(ivec3(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(0, 0, 0) ^ (ivec3(64, 0, 0)))))), ivec3(ivec4(ivec3(64, 0, 0), _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) << 0))), 0))))), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(ivec3(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(0, 0, 0) ^ (ivec3(64, 0, 0)))))), ivec3(ivec4(ivec3(64, 0, 0), _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) << 0))), 0)))))))))), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(ivec3(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(0, 0, 0) ^ (ivec3(64, 0, 0)))))), ivec3(ivec4(ivec3(64, 0, 0), _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) ^ 0)) << 0)) << 0))), 0)))))), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(64, 0, 0), _GLF_IDENTITY(ivec3(ivec3(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(0, 0, 0) ^ (ivec3(64, 0, 0))))), (ivec3(ivec3(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(0, 0, 0) ^ (ivec3(64, 0, 0)))))) << ivec3(0, 0, 0))), ivec3(ivec4(ivec3(_GLF_IDENTITY(64, clamp(64, 64, 64)), 0, 0), _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(abs((+ -18730))))), 1 * (0)) ^ (_GLF_IDENTITY(0, (0) << 0))), 0))))))))) << 0), min(int(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(ivec4(_GLF_IDENTITY(ivec3(64, 0, _GLF_IDENTITY(0, 0 ^ (0))), ivec3(0, 0, 0) | (_GLF_IDENTITY(ivec3(64, 0, _GLF_IDENTITY(0, 0 ^ (0))), (false ? _GLF_FUZZED(ivec3(-92952, -16751, -2168)) : _GLF_IDENTITY(ivec3(64, 0, _GLF_IDENTITY(0, 0 ^ (0))), (ivec3(64, 0, _GLF_IDENTITY(0, 0 ^ (0)))) + ivec3(0, 0, 0)))))), 0)))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(64, 0, 0), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(ivec4(ivec3(64, 0, 0), 0)), (_GLF_IDENTITY(ivec3(ivec4(ivec3(64, 0, 0), 0)), max(ivec3(ivec4(ivec3(64, 0, 0), 0)), ivec3(ivec4(ivec3(64, 0, 0), 0))))) | ivec3(0, 0, 0)), max(ivec3(ivec4(ivec3(64, 0, 0), 0)), _GLF_IDENTITY(ivec3(ivec4(ivec3(64, 0, 0), 0)), (ivec3(ivec4(_GLF_IDENTITY(ivec3(64, 0, 0), (ivec3(64, 0, 0)) - ivec3(0, 0, 0)), 0))) | (ivec3(ivec4(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(0, 0, 0) ^ (ivec3(64, 0, 0))), 0)))))))), 1 * (int(_GLF_IDENTITY(ivec3(64, 0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(30609) : 0))), ivec3(_GLF_IDENTITY(ivec4(ivec3(64, 0, 0), 0), ~ (~ (ivec4(ivec3(64, 0, 0), 0)))))))))))), clamp(_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(ivec4(ivec3(64, 0, _GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), (_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec3(0, 1, 1), ivec3(ivec4(ivec3(0, 1, 1), 1)))))) << 0)), _GLF_IDENTITY(0, min(0, 0)))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(64, int(ivec4(64, 0, 0, 1))), 0, 0), ivec3(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(64, 0, 0), (ivec3(64, 0, 0)) | (ivec3(64, 0, 0))), ivec3(0, 0, 0) ^ (ivec3(64, 0, _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, 0 | (0)), 0, 0)))))))), ivec3(ivec4(ivec3(64, 0, 0), _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) + 0), (0) << _GLF_IDENTITY(0, max(_GLF_IDENTITY(_GLF_IDENTITY(0, int(ivec4(0, 1, 1, 1))), min(_GLF_IDENTITY(0, int(ivec4(0, 1, 1, 1))), _GLF_IDENTITY(0, int(ivec4(0, 1, 1, 1))))), 0))))), 0)))))), clamp(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(ivec3(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(0, 0, 0) ^ (ivec3(64, 0, 0)))))), ivec3(ivec4(ivec3(64, 0, 0), _GLF_IDENTITY(0, min(_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) << 0))), (_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) << 0)))) | 0), 0))))), max(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(64, _GLF_IDENTITY(0, (0) | 0), 0), ivec3(ivec3(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(0, 0, 0) ^ (ivec3(64, 0, 0)))))), ivec3(ivec4(ivec3(64, 0, 0), _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) << 0))), 0))))), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(ivec3(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(0, 0, 0) ^ (ivec3(64, 0, 0)))))), ivec3(ivec4(ivec3(64, 0, 0), _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) << 0))), 0)))))))), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(ivec3(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(0, 0, 0) ^ (ivec3(64, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) ^ 0)) + 0), 0)))))), ivec3(ivec4(ivec3(64, 0, 0), _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) ^ 0)) << 0)) << 0))), 0)))))), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(ivec3(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(0, 0, 0) ^ (ivec3(64, 0, 0)))))), ivec3(ivec4(ivec3(_GLF_IDENTITY(64, clamp(64, 64, 64)), 0, 0), _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, _GLF_IDENTITY(0, 1 * (0)) ^ (_GLF_IDENTITY(0, (0) << 0))), 0))))))))) << 0), min(int(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(ivec4(ivec3(64, 0, _GLF_IDENTITY(0, 0 ^ (0))), 0)))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(64, 0, 0), _GLF_IDENTITY(ivec3(ivec4(_GLF_IDENTITY(ivec3(64, _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) | (0)), _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec4(0, 0, 0, 0)), (int(ivec4(0, 0, 0, 0))) | (int(ivec4(0, 0, 0, 0))))))), 0), max(ivec3(64, _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) | (0)), _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec4(0, 0, 0, 0)), (int(ivec4(0, 0, 0, 0))) | (int(ivec4(0, 0, 0, 0))))))), 0), ivec3(64, _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) | (0)), _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec4(0, 0, 0, 0)), (int(ivec4(0, 0, 0, 0))) | (int(ivec4(0, 0, 0, 0))))))), 0))), 0)), max(ivec3(ivec4(_GLF_IDENTITY(ivec3(64, 0, 0), (_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(ivec3(ivec3(64, 0, 0))))) ^ ivec3(0, 0, 0)), 0)), _GLF_IDENTITY(ivec3(ivec4(ivec3(64, 0, 0), 0)), (ivec3(ivec4(_GLF_IDENTITY(ivec3(64, 0, 0), (ivec3(64, _GLF_IDENTITY(0, min(0, 0)), 0)) - ivec3(0, 0, 0)), 0))) | (ivec3(ivec4(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(_GLF_IDENTITY(0, int(ivec3(0, (1 | 1), int(_GLF_ZERO(0.0, injectionSwitch.x))))), 0, 0) ^ (ivec3(64, _GLF_IDENTITY(0, max(0, 0)), 0))), 0)))))))), 1 * (int(_GLF_IDENTITY(ivec3(64, 0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(30609) : 0))), ivec3(_GLF_IDENTITY(ivec4(ivec3(64, 0, 0), 0), ~ (_GLF_IDENTITY(~ (ivec4(ivec3(64, 0, 0), 0)), (_GLF_IDENTITY(~ (ivec4(ivec3(64, 0, 0), 0)), (ivec4(0, 0, 0, 0) ^ ivec4(0, 0, 0, 0)) | (~ (ivec4(ivec3(64, 0, 0), 0))))) | (~ (ivec4(ivec3(64, 0, 0), 0)))))))))))))), _GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(ivec4(ivec3(64, 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec3(0, 1, 1), ivec3(ivec4(ivec3(0, 1, 1), 1)))))) << 0)), _GLF_IDENTITY(0, min(0, 0)))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(ivec3(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(0, 0, 0) ^ (ivec3(64, 0, 0)))))), ivec3(ivec4(ivec3(64, 0, 0), _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) << _GLF_IDENTITY(0, max(_GLF_IDENTITY(_GLF_IDENTITY(0, int(ivec4(0, 1, 1, 1))), (_GLF_IDENTITY(0, int(ivec4(0, 1, 1, 1)))) << 0), 0))))), 0)))))), clamp(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(ivec3(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(64, max(_GLF_IDENTITY(64, clamp(64, 64, _GLF_IDENTITY(64, 0 ^ (64)))), 64)), 0, 0), ivec3(0, 0, 0) ^ (ivec3(64, 0, 0)))))), ivec3(ivec4(ivec3(64, 0, 0), _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) << 0))), 0))))), max(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(ivec3(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(0, 0, 0) ^ (ivec3(64, 0, 0)))))), ivec3(ivec4(ivec3(64, 0, 0), _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, _GLF_IDENTITY(0 ^ (_GLF_IDENTITY(0, (0) << 0)), ~ (~ (0 ^ (_GLF_IDENTITY(0, (0) << 0)))))), 0))))), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(ivec3(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(0, 0, 0) ^ (ivec3(64, 0, 0)))))), ivec3(ivec4(ivec3(64, 0, 0), _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) << 0))), 0)))))))), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(64, 0, 0), min(ivec3(64, 0, 0), ivec3(64, 0, 0))), ivec3(0, 0, 0) ^ (ivec3(64, 0, 0)))))), ivec3(ivec4(ivec3(64, _GLF_IDENTITY(0, 0 + (0)), 0), _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) ^ 0)) << 0)) << 0)), int(ivec3((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) ^ 0)) << 0)) << 0)), 1, 0)))), 0)))))), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(ivec3(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(0, 0, 0) ^ (ivec3(64, 0, 0)))))), ivec3(ivec4(ivec3(_GLF_IDENTITY(64, clamp(64, 64, 64)), 0, 0), _GLF_IDENTITY(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, _GLF_IDENTITY(0, 1 * (0)) ^ (_GLF_IDENTITY(0, (0) << 0))), 0)), (_GLF_IDENTITY(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, _GLF_IDENTITY(0, 1 * (0)) ^ (_GLF_IDENTITY(0, (0) << 0))), 0)), (_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, _GLF_IDENTITY(0, 1 * (0)) ^ (_GLF_IDENTITY(0, (0) << 0))), 0))) << 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, _GLF_IDENTITY(0, 1 * (0)) ^ (_GLF_IDENTITY(0, (0) << 0))), 0)), max(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, _GLF_IDENTITY(0, 1 * (0)) ^ (_GLF_IDENTITY(0, (0) << 0))), 0)), _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, _GLF_IDENTITY(0, 1 * (0)) ^ (_GLF_IDENTITY(0, (0) << 0))), 0))))))))))))) << 0), min(int(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(ivec4(ivec3(64, 0, _GLF_IDENTITY(0, 0 ^ (0))), 0)))), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, int(ivec4(64, 1, 0, 0)))) / 1), 64)), 0, 0), ivec3(1, 1, 1) * (ivec3(_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, int(ivec4(64, 1, 0, 0)))) / 1), 64)), 0, 0))), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(ivec4(ivec3(_GLF_IDENTITY(64, 0 | (64)), 0, 0), 0)), (_GLF_IDENTITY(ivec3(ivec4(ivec3(_GLF_IDENTITY(64, 0 | (64)), 0, 0), 0)), (true ? ivec3(ivec4(ivec3(_GLF_IDENTITY(64, 0 | (64)), 0, 0), 0)) : _GLF_FUZZED(ivec3(-17605, 17882, 38478))))) | (ivec3(ivec4(ivec3(_GLF_IDENTITY(64, 0 | (64)), 0, 0), 0)))), max(ivec3(ivec4(ivec3(64, 0, 0), 0)), _GLF_IDENTITY(ivec3(ivec4(ivec3(64, 0, 0), 0)), (ivec3(ivec4(_GLF_IDENTITY(ivec3(64, 0, 0), _GLF_IDENTITY((ivec3(64, 0, 0)), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(ivec4((ivec3(64, 0, 0)), (1 & 1)), ivec4(0, 0, 0, 0) ^ (ivec4((ivec3(64, 0, 0)), (1 & 1))))), clamp(ivec3(_GLF_IDENTITY(ivec4((ivec3(64, 0, 0)), (1 & 1)), ivec4(0, 0, 0, 0) ^ (ivec4((ivec3(64, 0, 0)), (1 & 1))))), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(ivec4((ivec3(64, 0, 0)), (1 & 1)), ivec4(0, 0, 0, 0) ^ (ivec4((ivec3(64, 0, 0)), (1 & 1))))), min(ivec3(_GLF_IDENTITY(ivec4((ivec3(64, 0, 0)), (1 & 1)), ivec4(0, 0, 0, 0) ^ (ivec4((ivec3(64, 0, 0)), (1 & 1))))), ivec3(_GLF_IDENTITY(ivec4((ivec3(64, 0, 0)), (1 & 1)), ivec4(0, 0, 0, 0) ^ (ivec4((ivec3(64, 0, 0)), (1 & 1))))))), ivec3(_GLF_IDENTITY(ivec4((ivec3(64, 0, 0)), (1 & 1)), ivec4(0, 0, 0, 0) ^ (ivec4((ivec3(64, 0, 0)), (1 & 1)))))))) - ivec3(0, 0, 0)), 0))) | (ivec3(ivec4(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(0, 0, 0) ^ (_GLF_IDENTITY(ivec3(64, 0, 0), (ivec3(64, 0, 0)) | ivec3(0, 0, 0)))), 0)))))))), 1 * (int(_GLF_IDENTITY(ivec3(64, 0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(30609) : 0))), ivec3(_GLF_IDENTITY(ivec4(ivec3(64, 0, 0), 0), ~ (~ (ivec4(ivec3(64, 0, 0), 0)))))))))))), _GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(ivec4(ivec3(64, 0, _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec3(0, 1, 1), ivec3(ivec4(ivec3(0, 1, 1), 1)))))) << 0), (false ? _GLF_FUZZED((~ -90171)) : _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec3(0, 1, 1), ivec3(ivec4(ivec3(0, 1, 1), 1)))))) << 0), max(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec3(0, 1, 1), ivec3(ivec4(ivec3(0, 1, 1), 1)))))) << 0), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec3(0, 1, 1), ivec3(ivec4(ivec3(0, 1, 1), 1)))))) << 0)))))), _GLF_IDENTITY(0, min(0, 0)))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(ivec3(_GLF_IDENTITY(ivec3(64, _GLF_IDENTITY(0, (0) | 0), 0), ivec3(0, 0, 0) ^ (ivec3(64, 0, 0)))))), ivec3(ivec4(ivec3(64, 0, _GLF_IDENTITY(0, min(0, 0))), _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) << _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, int(ivec4(0, 1, _GLF_IDENTITY(1, clamp(1, 1, 1)), 1))), 0))))), 0)))))), clamp(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(0, 0, 0) ^ (ivec3(64, 0, 0)))), ~ (~ (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(0, 0, 0) ^ (ivec3(64, 0, 0)))), _GLF_IDENTITY(ivec3(ivec4(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(0, 0, 0) ^ (ivec3(64, 0, 0)))), ivec3(0, 0, 0) ^ (ivec3(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(0, 0, 0) ^ (ivec3(64, 0, 0)))))), 0)), (ivec3(ivec4(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(0, 0, 0) ^ (ivec3(64, 0, 0)))), ivec3(0, 0, 0) ^ (ivec3(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(0, 0, 0) ^ (ivec3(64, 0, 0)))))), 0))) | (ivec3(ivec4(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(0, 0, 0) ^ (ivec3(64, 0, 0)))), ivec3(0, 0, 0) ^ (ivec3(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(0, 0, 0) ^ (ivec3(64, 0, 0)))))), 0)))))))))), ivec3(ivec4(ivec3(64, 0, 0), _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) << 0))), 0))))), max(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(ivec3(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(0, 0, 0) ^ (ivec3(64, 0, 0)))))), ivec3(ivec4(ivec3(64, 0, 0), _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) << 0))), 0))))), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(ivec3(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(64, (0 | 0) ^ (_GLF_IDENTITY(64, 0 | (64)))), _GLF_IDENTITY(0, (0) | 0), 0), ivec3(0, 0, _GLF_IDENTITY(0, (0) | (0 >> _GLF_IDENTITY(int(5), int(5))))) ^ (ivec3(64, 0, _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-69102) : 0))))))))))), ivec3(ivec4(ivec3(64, 0, 0), _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) << 0))), 0)))))))), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(ivec3(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(0, 0, 0) ^ (ivec3(64, 0, 0)))))), ivec3(ivec4(ivec3(64, 0, 0), _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) ^ 0)) << 0)) << 0))), 0)))))), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(ivec3(ivec3(64, 0, 0)))), ivec3(0, 0, 0) ^ (ivec3(64, 0, 0)))))), ivec3(ivec4(ivec3(_GLF_IDENTITY(64, clamp(64, 64, 64)), _GLF_IDENTITY(0, (0) >> 0), 0), _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, _GLF_IDENTITY(0, 1 * (0)) ^ (_GLF_IDENTITY(0, (0) << 0))), 0))))))))) << 0), min(int(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(ivec4(ivec3(64, 0, _GLF_IDENTITY(0, _GLF_IDENTITY(0 ^ (0), (_GLF_IDENTITY(0 ^ (0), clamp(_GLF_IDENTITY(0 ^ (0), (false ? _GLF_FUZZED(10929) : 0 ^ (0))), 0 ^ (0), 0 ^ (0)))) / 1))), 0)))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(64, 0, 0), _GLF_IDENTITY(ivec3(ivec4(ivec3(64, 0, 0), 0)), max(ivec3(_GLF_IDENTITY(ivec4(ivec3(64, 0, 0), 0), ~ (~ (ivec4(ivec3(64, 0, 0), 0))))), _GLF_IDENTITY(ivec3(ivec4(ivec3(64, 0, 0), 0)), (ivec3(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(64, 0, 0), (ivec3(64, 0, 0)) - ivec3(0, 0, 0)), ivec3(0, 0, 0) | (_GLF_IDENTITY(_GLF_IDENTITY(ivec3(64, 0, 0), (ivec3(64, 0, 0)) - ivec3(0, 0, 0)), (false ? _GLF_FUZZED(ivec3(87080, -72705, 83425)) : _GLF_IDENTITY(ivec3(64, 0, 0), (ivec3(64, 0, 0)) - ivec3(0, 0, 0)))))), 0))) | (ivec3(ivec4(_GLF_IDENTITY(ivec3(64, 0, 0), _GLF_IDENTITY(ivec3(0, 0, 0), (ivec3(0, 0, 0)) * ivec3(1, 1, 1)) ^ (ivec3(64, 0, 0))), 0)))))))), 1 * (int(_GLF_IDENTITY(ivec3(64, 0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(30609) : 0))), ivec3(_GLF_IDENTITY(ivec4(ivec3(64, 0, 0), 0), ~ (~ (ivec4(ivec3(64, 0, 0), 0)))))))))))))), _GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(ivec4(ivec3(64, 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec3(0, 1, 1), ivec3(ivec4(ivec3(0, 1, 1), 1)))))) << 0)), _GLF_IDENTITY(0, min(0, 0)))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(ivec3(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(0, 0, 0) ^ (ivec3(64, 0, 0)))))), ivec3(ivec4(ivec3(64, 0, 0), _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) << _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, int(ivec4(0, 1, 1, 1))), 0))))), 0)))))), clamp(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(ivec3(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(0, 0, 0) ^ (ivec3(64, 0, 0)))))), ivec3(ivec4(ivec3(64, 0, 0), _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) << 0))), 0))))), max(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(ivec3(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(0, 0, 0) ^ (ivec3(64, 0, 0)))))), ivec3(ivec4(ivec3(64, 0, 0), _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) << 0))), 0))))), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(ivec3(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(0, 0, 0) ^ (ivec3(64, 0, 0)))))), ivec3(ivec4(ivec3(64, 0, 0), _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) << 0))), 0)))))))), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(ivec3(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(0, 0, 0) ^ (ivec3(64, 0, 0)))))), ivec3(ivec4(ivec3(64, 0, 0), _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) ^ 0)) << 0)) << 0))), 0)))))), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(ivec3(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(0, 0, 0) ^ (ivec3(64, 0, 0)))))), ivec3(ivec4(ivec3(_GLF_IDENTITY(64, clamp(64, 64, 64)), 0, 0), _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, _GLF_IDENTITY(0, 1 * (0)) ^ (_GLF_IDENTITY(0, (0) << 0))), 0)))))))), min(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(ivec3(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(0, 0, 0) ^ (ivec3(64, 0, 0)))))), ivec3(ivec4(ivec3(64, 0, 0), _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) << _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, int(ivec4(0, 1, 1, 1))), 0))))), 0)))))), clamp(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(ivec3(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(0, 0, 0) ^ (ivec3(64, 0, 0)))))), ivec3(ivec4(ivec3(64, 0, 0), _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) << 0))), 0))))), max(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(ivec3(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(0, 0, 0) ^ (ivec3(64, 0, 0)))))), ivec3(ivec4(ivec3(64, 0, 0), _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) << 0))), 0))))), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(ivec3(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(0, 0, 0) ^ (ivec3(64, 0, 0)))))), ivec3(ivec4(ivec3(64, 0, 0), _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) << 0))), 0)))))))), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(ivec3(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(0, 0, 0) ^ (ivec3(64, 0, 0)))))), ivec3(ivec4(ivec3(64, 0, 0), _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) ^ 0)) << 0)) << 0))), 0)))))), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(ivec3(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(0, 0, 0) ^ (ivec3(64, 0, 0)))))), ivec3(ivec4(ivec3(_GLF_IDENTITY(64, clamp(64, 64, 64)), 0, 0), _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, _GLF_IDENTITY(0, 1 * (0)) ^ (_GLF_IDENTITY(0, (0) << 0))), 0)))))))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(ivec3(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(0, 0, 0) ^ (ivec3(64, 0, 0)))))), ivec3(ivec4(ivec3(64, 0, 0), _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) << _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, int(ivec4(0, 1, 1, 1))), 0))))), 0)))))), clamp(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(ivec3(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(0, 0, 0) ^ (ivec3(64, 0, 0)))))), ivec3(ivec4(ivec3(64, 0, 0), _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) << 0))), 0))))), max(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(ivec3(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(0, 0, 0) ^ (ivec3(64, 0, 0)))))), ivec3(ivec4(ivec3(64, 0, 0), _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) << 0))), 0))))), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(ivec3(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(0, 0, 0) ^ (ivec3(64, 0, 0)))))), ivec3(ivec4(ivec3(64, 0, 0), _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) << 0))), 0)))))))), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(ivec3(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(0, 0, 0) ^ (ivec3(64, 0, 0)))))), ivec3(ivec4(ivec3(64, 0, 0), _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) ^ 0)) << 0)) << 0))), 0)))))), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(ivec3(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(0, 0, 0) ^ (ivec3(64, 0, 0)))))), ivec3(ivec4(ivec3(_GLF_IDENTITY(64, clamp(64, 64, 64)), 0, 0), _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, _GLF_IDENTITY(0, 1 * (0)) ^ (_GLF_IDENTITY(0, (0) << 0))), 0)))))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(ivec3(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(0, 0, 0) ^ (ivec3(64, 0, 0)))))), ivec3(ivec4(ivec3(64, 0, 0), _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) << _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, int(ivec4(0, 1, 1, 1))), 0))))), 0)))))), clamp(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(ivec3(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(0, 0, 0) ^ (ivec3(64, 0, 0)))))), ivec3(ivec4(ivec3(64, 0, 0), _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) << 0))), 0))))), max(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(ivec3(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(0, 0, 0) ^ (ivec3(64, 0, 0)))))), ivec3(ivec4(ivec3(64, 0, 0), _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) << 0))), 0))))), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(ivec3(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(0, 0, 0) ^ (ivec3(64, 0, 0)))))), ivec3(ivec4(ivec3(64, 0, 0), _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) << 0))), 0)))))))), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(ivec3(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(0, 0, 0) ^ (ivec3(64, 0, 0)))))), ivec3(ivec4(ivec3(64, 0, 0), _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) ^ 0)) << 0)) << 0))), 0)))))), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(ivec3(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(0, 0, 0) ^ (ivec3(64, 0, 0)))))), ivec3(ivec4(ivec3(_GLF_IDENTITY(64, clamp(64, 64, 64)), 0, 0), _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, _GLF_IDENTITY(0, 1 * (0)) ^ (_GLF_IDENTITY(0, (0) << 0))), 0))))))))) << 0)))) << 0), min(int(_GLF_IDENTITY(ivec3(64, 0, 0), _GLF_IDENTITY(ivec3(ivec4(ivec3(64, 0, _GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), clamp(_GLF_IDENTITY((0), clamp((0), _GLF_IDENTITY((0), max((0), (0))), (0))), _GLF_IDENTITY((0), 1 * ((0))), _GLF_IDENTITY((0), (false ? _GLF_FUZZED(-59459) : (0))))))), 0)), ~ (~ (ivec3(ivec4(ivec3(64, 0, _GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), clamp(_GLF_IDENTITY((0), clamp((0), _GLF_IDENTITY((0), max((0), (0))), (0))), _GLF_IDENTITY((0), 1 * ((0))), _GLF_IDENTITY((0), (false ? _GLF_FUZZED(-59459) : (0))))))), 0))))))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(64, 0, 0), _GLF_IDENTITY(ivec3(ivec4(ivec3(64, 0, 0), 0)), max(ivec3(ivec4(ivec3(64, 0, 0), 0)), _GLF_IDENTITY(ivec3(ivec4(ivec3(64, 0, 0), 0)), (ivec3(ivec4(_GLF_IDENTITY(ivec3(64, 0, 0), (ivec3(64, 0, 0)) - ivec3(0, 0, 0)), 0))) | (ivec3(ivec4(_GLF_IDENTITY(ivec3(64, 0, 0), ivec3(0, 0, 0) ^ (ivec3(64, 0, 0))), 0)))))))), 1 * (int(_GLF_IDENTITY(ivec3(64, 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(30609) : 0))), ivec3(_GLF_IDENTITY(ivec4(ivec3(64, 0, 0), 0), ~ (~ (ivec4(ivec3(64, 0, 0), 0)))))))))))))), 4);
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false)))), bool(bvec4(bool(bvec2(false, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
