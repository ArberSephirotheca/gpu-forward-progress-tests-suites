#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (false ? _GLF_FUZZED(-8.6) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (false ? _GLF_FUZZED(-8.6) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), false, true, false)), (bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (false ? _GLF_FUZZED(-8.6) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), false, true, false))) && true)))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
    }
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bool(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false), bvec3(bvec4(bvec3(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false), true))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false), bvec3(bvec4(bvec3(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false), bvec3(bvec4(bvec3(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false), true)))), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false), bvec3(bvec4(bvec3(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false), bvec3(bvec4(bvec3(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false), true)))), false)))), true))))), ! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false), bvec3(bvec4(bvec3(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false), true))))), bool(bvec2((bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false), bvec3(bvec4(bvec3(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false), true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))));
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(93.29), _GLF_FUZZED(-20.10)), bvec2(false, false))).x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(93.29), _GLF_FUZZED(-20.10)), bvec2(false, false))).x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec4(bool(bool(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(93.29), _GLF_FUZZED(-20.10)), bvec2(false, false))).x > injectionSwitch.y))))), true, false, true)), (bool(bvec4(bool(bool(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(93.29), _GLF_FUZZED(-20.10)), bvec2(false, false))).x > injectionSwitch.y))))), true, false, true))) || false))))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (1) >> (0 & -90833))))])), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) - _GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))), max(_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))), mix(vec2(_GLF_FUZZED(-4.0), _GLF_FUZZED(-78.40)), vec2((vec2(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))))[0], (vec2(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))))[1]), bvec2(true, true))), _GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))), mix(vec2(_GLF_FUZZED(3541.9818), _GLF_FUZZED(-93.75)), vec2((vec2(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))))[0], (vec2(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))))[1]), bvec2(true, true)))))).x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
            {
             do
              {
               return;
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || ((false))))), false, true)), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), true))))) || false)), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || ((false))))), false, true)), (bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true))) || false)))))))
            {
             if(_GLF_DEAD(false))
              return;
            }
           else
            {
             for(int _injected_loop_counter = (1 | ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), (injectionSwitch.x > injectionSwitch.y))))
                {
                 do
                  {
                   return;
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    return;
                  }
                }
              }
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             do
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
                  break;
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || false), true, true))))), (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(false))
                      break;
                     continue;
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    continue;
                  }
                 else
                  {
                   return;
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                }
               return;
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 return;
                }
              }
            }
           if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))), true && (_GLF_WRAPPED_IF_FALSE(false))))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  continue;
                 return;
                }
              }
            }
           else
            {
             do
              {
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x2(injectionSwitch.x, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(_GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, tan(0.0), 1.0))), 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), max(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, cos(0.0), abs(0.0), 0.0, 0.0, 0.0, abs(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)) : _GLF_FUZZED(-2975.5688)))))), (float(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, cos(0.0), abs(0.0), 0.0, 0.0, 0.0, abs(0.0)))) + 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), length(vec2(0.0, 0.0))), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, length(vec2(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(5740.6308) : 0.0))))), vec4(0.0, 1.0, 0.0, 0.0)), min(dot(vec4(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 1.0, 0.0)), dot(vec3(1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, length(vec2(0.0, 0.0))), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0), vec3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, length(vec2(0.0, 0.0))), vec4(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-54.49))), 0.0)), 0.0, 0.0)), 1.0, 0.0, 0.0))))), 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(0.4)), bool(false))), sqrt(1.0), 0.0, 0.0)), mix(float(_GLF_IDENTITY(float(mat4x2(injectionSwitch.x, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(_GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, tan(0.0), 1.0))), 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), max(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, cos(0.0), abs(0.0), 0.0, 0.0, 0.0, abs(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)) : _GLF_FUZZED(-2975.5688)))))), (float(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, cos(0.0), abs(0.0), 0.0, 0.0, 0.0, abs(0.0)))) + 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), length(vec2(0.0, 0.0))), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, length(vec2(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(5740.6308) : 0.0))))), vec4(0.0, 1.0, 0.0, 0.0)), min(dot(vec4(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 1.0, 0.0)), dot(vec3(1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, length(vec2(0.0, 0.0))), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0), vec3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, length(vec2(0.0, 0.0))), vec4(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-54.49))), 0.0)), 0.0, 0.0)), 1.0, 0.0, 0.0))))), 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(0.4)), bool(false))), sqrt(1.0), 0.0, 0.0)), (false ? _GLF_FUZZED(68.49) : float(mat4x2(injectionSwitch.x, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(_GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, tan(0.0), 1.0))), 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), max(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, cos(0.0), abs(0.0), 0.0, 0.0, 0.0, abs(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)) : _GLF_FUZZED(-2975.5688)))))), (float(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, cos(0.0), abs(0.0), 0.0, 0.0, 0.0, abs(0.0)))) + 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), length(vec2(0.0, 0.0))), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, length(vec2(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(5740.6308) : 0.0))))), vec4(0.0, 1.0, 0.0, 0.0)), min(dot(vec4(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 1.0, 0.0)), dot(vec3(1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, length(vec2(0.0, 0.0))), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0), vec3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, length(vec2(0.0, 0.0))), vec4(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-54.49))), 0.0)), 0.0, 0.0)), 1.0, 0.0, 0.0))))), 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(0.4)), bool(false))), sqrt(1.0), 0.0, 0.0))))), float(_GLF_FUZZED(-7562.0388)), bool(false))), clamp(float(mat4x2(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(_GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED((+ -4.8)))), 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, length(vec2(0.0, 0.0))), (_GLF_IDENTITY(vec4(_GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED((+ -4.8)))), 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, length(vec2(0.0, 0.0))), vec4(mat4x3(vec4(_GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED((+ -4.8)))), 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, length(vec2(0.0, 0.0))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)))) / exp(vec4(0.0, 0.0, 0.0, 0.0))), vec4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(0.1)), float(1.0), bool(true))), 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))))))), 1.0, 0.0, _GLF_IDENTITY(length(vec2(0.0, 0.0)), float(float(_GLF_IDENTITY(length(vec2(0.0, 0.0)), max(length(vec2(0.0, 0.0)), length(vec2(0.0, 0.0)))))))), vec4(0.0, 1.0, 0.0, 0.0))), max(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(_GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED((+ -4.8)))), 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, length(vec2(0.0, 0.0))), (_GLF_IDENTITY(vec4(_GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED((+ -4.8)))), 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, length(vec2(0.0, 0.0))), vec4(mat4x3(vec4(_GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED((+ -4.8)))), 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, length(vec2(0.0, 0.0))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)))) / exp(vec4(0.0, 0.0, 0.0, 0.0))), vec4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(0.1)), float(1.0), bool(true))), 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))))))), 1.0, 0.0, _GLF_IDENTITY(length(vec2(0.0, 0.0)), float(float(_GLF_IDENTITY(length(vec2(0.0, 0.0)), max(length(vec2(0.0, 0.0)), length(vec2(0.0, 0.0)))))))), vec4(0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(_GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED((+ -4.8)))), 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, length(vec2(0.0, 0.0))), (_GLF_IDENTITY(vec4(_GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED((+ -4.8)))), 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, length(vec2(0.0, 0.0))), vec4(mat4x3(vec4(_GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED((+ -4.8)))), 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, length(vec2(0.0, 0.0))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)))) / exp(vec4(0.0, 0.0, 0.0, 0.0))), vec4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(0.1)), float(1.0), bool(true))), 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))))))), 1.0, 0.0, _GLF_IDENTITY(length(vec2(0.0, 0.0)), float(float(_GLF_IDENTITY(length(vec2(0.0, 0.0)), max(length(vec2(0.0, 0.0)), length(vec2(0.0, 0.0)))))))), vec4(0.0, 1.0, 0.0, 0.0))))), 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), sqrt(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) * 1.0)), 0.0, 0.0)), float(mat4x2(injectionSwitch.x, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, length(vec2(0.0, 0.0))), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, 0.0, 1.0, tan(0.0))), (true ? float(vec4(0.0, 0.0, 1.0, tan(0.0))) : _GLF_FUZZED(6.0)))), 1.0, 0.0)), 1.0 * (dot(vec3(1.0, 0.0, 1.0), vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(true ? 0.0 : _GLF_FUZZED((-4524.5573 / normalize(-9.6))), max(_GLF_IDENTITY(true ? 0.0 : _GLF_FUZZED((-4524.5573 / normalize(-9.6))), float(mat2x4(_GLF_IDENTITY(true ? 0.0 : _GLF_FUZZED((-4524.5573 / normalize(-9.6))), 0.0 + (true ? 0.0 : _GLF_FUZZED((-4524.5573 / normalize(-9.6))))), 1.0, 1.0, 0.0, 0.0, 0.0, sqrt(0.0), 0.0))), _GLF_IDENTITY(true ? 0.0 : _GLF_FUZZED((-4524.5573 / normalize(-9.6))), 0.0 + (_GLF_IDENTITY(true ? 0.0 : _GLF_FUZZED((-4524.5573 / normalize(-9.6))), float(vec3(true ? 0.0 : _GLF_FUZZED((-4524.5573 / normalize(-9.6))), 1.0, 1.0))))))))), 1.0, 0.0)))), dot(vec3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_IDENTITY(_GLF_FUZZED(float(-10733)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mix(-1.1, 6621.4244, false)) : _GLF_FUZZED(float(-10733))))), bool(_GLF_IDENTITY(false, (false) || false)))), 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, length(vec2(0.0, 0.0))), vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(mat3(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, sqrt(0.0), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, 0.0 + (0.0))) / 1.0), tan(0.0))))))), 1.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0)), float(mat4x2(injectionSwitch.x, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0))))), length(vec2(0.0, 0.0))), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), _GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) * mat3(1.0)), clamp(vec3(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-7.1)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) + 0.0))).x > injectionSwitch.y))))), 0.0)), 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 1.0 * (1.0))) * 1.0))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 1.0 * (1.0))) * 1.0))), max(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 1.0 * (1.0))) * 1.0))), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 1.0 * (1.0))) * 1.0))))) : _GLF_FUZZED(-6.7))), 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(mat3(1.0) * (vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY((mat3(1.0) * (vec3(0.0, 1.0, 0.0))) * mat3(1.0), min((mat3(1.0) * (vec3(0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0))) * mat3(1.0), (mat3(1.0) * (vec3(0.0, 1.0, 0.0))) * mat3(1.0)))))))), dot(vec3(1.0, 0.0, 1.0), vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(-0.4)), bool(false))), 1.0, 0.0))), 1.0, 0.0, length(vec2(0.0, 0.0))), vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(distance(vec4(-1610.1581, -3.6, 7.7, -5.4), vec4(83.28, -0.8, -4.9, -18.09))) : 0.0))))), 1.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0))))) > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x2(injectionSwitch.x, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(distance(vec4(3907.6847, 1581.4636, -0.6, 6.2), vec4(5.7, 87.95, 1954.3381, 4.0))) : _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), max(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))), 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), length(vec2(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)))), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0.0, (0.0) + 0.0) : _GLF_FUZZED(-4.7))), 0.0)), 0.0)))), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, length(vec2(0.0, 0.0))), vec4(0.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0)), min(dot(vec4(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), (_GLF_IDENTITY(0.0, min(0.0, 0.0))) * 1.0), 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, length(vec2(0.0, 0.0))), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), mix(float(_GLF_FUZZED(-12.11)), float(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)))), bool(true))), 1.0, 0.0, length(vec2(0.0, 0.0))), vec4(0.0, 1.0, 0.0, 0.0))))), 1.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0)), clamp(float(mat4x2(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED((+ -4.8)))), 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, length(vec2(0.0, 0.0))), vec4(0.0, 1.0, 0.0, 0.0)), max(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED((+ -4.8)))), 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, length(vec2(0.0, 0.0))), vec4(0.0, 1.0, 0.0, 0.0)), (dot(vec4(_GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED((+ -4.8)))), 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, length(vec2(0.0, 0.0))), vec4(0.0, 1.0, 0.0, 0.0))) - 0.0), dot(vec4(_GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED((+ -4.8)))), 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, length(vec2(0.0, 0.0))), vec4(0.0, 1.0, 0.0, 0.0)))), dot(vec4(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(0.1)), float(1.0), bool(true))), 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))))))), 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(7.6))), _GLF_IDENTITY(length(vec2(0.0, 0.0)), float(float(_GLF_IDENTITY(length(vec2(0.0, 0.0)), max(length(vec2(0.0, 0.0)), length(vec2(0.0, 0.0)))))))), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0)), float(mat4x2(injectionSwitch.x, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(50.77))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec4(1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), max(float(vec4(1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), float(vec4(1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))))))), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, length(vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0)), min(float(vec2(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0)), _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0)), (float(vec2(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0))) / 1.0)))), 0.0))), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), 1.0 * (dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)))), dot(vec3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-10733))), bool(_GLF_IDENTITY(false, (false) || false)))), 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, length(vec2(0.0, 0.0))), vec4(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0, 0.0))), 1.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0)), float(mat4x2(injectionSwitch.x, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(_GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, abs(1.0), 0.0, sin(0.0), 1.0, 0.0, 0.0)), mix(float(float(mat4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, abs(1.0), 0.0, sin(0.0), 1.0, 0.0, 0.0))), float(_GLF_FUZZED(3550.5754)), bool(false)))), 0.0)), max(float(vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, abs(1.0), 0.0, sin(0.0), 1.0, 0.0, 0.0)), mix(float(float(mat4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, abs(1.0), 0.0, sin(0.0), 1.0, 0.0, 0.0))), float(_GLF_FUZZED(3550.5754)), bool(false)))), 0.0)), float(vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, abs(1.0), 0.0, sin(0.0), 1.0, 0.0, 0.0)), mix(float(float(mat4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, abs(1.0), 0.0, sin(0.0), 1.0, 0.0, 0.0))), float(_GLF_FUZZED(3550.5754)), bool(false)))), 0.0)))))), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) / _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) / 1.0, _GLF_IDENTITY((false ? _GLF_FUZZED(1.4) : _GLF_IDENTITY((1.0), min((1.0), (1.0))) / 1.0), clamp(_GLF_IDENTITY((false ? _GLF_FUZZED(1.4) : _GLF_IDENTITY((1.0), min((1.0), (1.0))) / 1.0), float(vec4((false ? _GLF_FUZZED(1.4) : _GLF_IDENTITY((1.0), min((1.0), (1.0))) / 1.0), tan(0.0), 1.0, 1.0))), (false ? _GLF_FUZZED(1.4) : _GLF_IDENTITY((1.0), min((1.0), (1.0))) / 1.0), (false ? _GLF_FUZZED(1.4) : _GLF_IDENTITY((1.0), min((1.0), (1.0))) / 1.0))))), 1.0, 1.0))))), length(vec2(0.0, 0.0))), min(vec4(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(clamp(738.062, -992.129, 1.9)) : 1.0))), vec3(0.0, 1.0, 0.0))), 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0)), 1.0))) / 1.0, (false ? _GLF_FUZZED(1.4) : (1.0) / 1.0))), 1.0, 1.0))))), length(vec2(0.0, 0.0))), _GLF_IDENTITY(vec4(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) / 1.0, (false ? _GLF_FUZZED(1.4) : (1.0) / 1.0))), 1.0, 1.0)), float(float((0.0) / _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) / 1.0, (false ? _GLF_FUZZED(1.4) : (1.0) / 1.0))), 1.0, 1.0)))))))), length(_GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2((vec2(0.0, 0.0))[0], _GLF_FUZZED(-7399.2104)), vec2(_GLF_FUZZED(-9605.7145), (vec2(0.0, 0.0))[1]), bvec2(false, true)))) * vec2(1.0, 1.0)))), (vec4(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY((1.0) / 1.0, (false ? _GLF_FUZZED(1.4) : (1.0) / 1.0))), 1.0, 1.0))))), length(vec2(0.0, 0.0)))) - vec4(0.0, 0.0, 0.0, 0.0)))), vec4(0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0)), dot(vec4(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), clamp(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 1.0 * (1.0))) * 1.0))), 0.0), vec3(0.0, 1.0, 0.0)))), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, length(vec2(0.0, 0.0))), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0))))) > injectionSwitch.y)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x2(injectionSwitch.x, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 1.0), (_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 0.0, 0.0))), min(1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 1.0), transpose(transpose(mat3x2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 1.0))))) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0), max(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0))))), 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), length(vec2(0.0, 0.0))), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, length(vec2(0.0, 0.0))), vec4(0.0, 1.0, 0.0, 0.0)), min(dot(vec4(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0)), dot(vec3(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(vec4(1468.9903, -79.02, 495.060, -899.579).x)), float(1.0), bool(true))), 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, determinant(mat4(1.0, log(1.0), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0))), (false ? _GLF_FUZZED(mat3(-51.67, -583.978, -3759.7835, 1546.0801, -7594.2863, -0.9, -1.1, 6.6, 2326.1307)) : mat3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), mix(float(_GLF_FUZZED(vec4(1468.9903, -79.02, 495.060, -899.579).x)), float(1.0), bool(true))), 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, _GLF_IDENTITY(determinant(mat4(1.0, log(1.0), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), (false ? _GLF_FUZZED((round(-76.75))) : _GLF_IDENTITY(determinant(mat4(1.0, log(1.0), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), max(determinant(mat4(1.0, log(1.0), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), determinant(mat4(1.0, log(1.0), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0))))))))))), 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, length(vec2(0.0, 0.0))), vec4(0.0, 1.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x3(0.0, 1.0, 1.0, 1.0, sqrt(0.0), 1.0, 0.0, 0.0, 0.0, determinant(mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 1.0, length(vec2(0.0, 0.0)), _GLF_IDENTITY(0.0, 1.0 * (0.0)), determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 0.0), transpose(transpose(mat4x3(0.0, 1.0, 1.0, 1.0, sqrt(0.0), _GLF_IDENTITY(1.0, (1.0) * _GLF_IDENTITY(dot(vec3(0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0), vec3(0.0, 1.0, abs(0.0))), dot(vec3(0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0), vec3(0.0, 1.0, abs(0.0))))), 0.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, length(vec2(0.0, 0.0)), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 0.0)))))), 0.0)), dot(vec4(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, length(vec2(0.0, 0.0))), vec4(0.0, 1.0, 0.0, 0.0))))), 1.0, 0.0, 1.0, sqrt(1.0), 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 0.0))), 0.0)))), clamp(float(mat4x2(injectionSwitch.x, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((true ? 0.0 : _GLF_FUZZED((+ _GLF_IDENTITY(-4.8, (-4.8) + sin(_GLF_ZERO(0.0, injectionSwitch.x)))))), min((true ? 0.0 : _GLF_FUZZED((+ _GLF_IDENTITY(-4.8, (-4.8) + sin(_GLF_ZERO(0.0, injectionSwitch.x)))))), (true ? 0.0 : _GLF_FUZZED((+ _GLF_IDENTITY(-4.8, (-4.8) + sin(_GLF_ZERO(0.0, injectionSwitch.x))))))))), _GLF_IDENTITY(1.0, (1.0) + 0.0)), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3.2)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), min(1.0, 1.0))), vec3(0.0, 1.0, 0.0))), 1.0, _GLF_IDENTITY(0.0, float(mat4x2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2156.2132)), float(0.0), bool(true))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, abs(0.0))), 0.0, 0.0))), length(vec2(0.0, 0.0))), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(0.1)), float(1.0), bool(true))), 0.0)), dot(vec3(1.0, 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))))), (vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))))) / vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, _GLF_IDENTITY(length(vec2(0.0, 0.0)), float(float(_GLF_IDENTITY(length(vec2(0.0, 0.0)), max(length(vec2(0.0, _GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, 0.0, 1.0, 0.0, 1.0))))), length(vec2(0.0, 0.0)))))))), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0)), float(mat4x2(injectionSwitch.x, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), length(vec2(0.0, 0.0))), vec4(0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), dot(vec4(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), 1.0 * (dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)))), dot(vec3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(_GLF_IDENTITY(-10733, clamp(_GLF_IDENTITY(-10733, int(_GLF_IDENTITY(int(_GLF_IDENTITY(-10733, (-10733) - 0)), (int(_GLF_IDENTITY(-10733, (-10733) - 0))) | (int(_GLF_IDENTITY(-10733, (-10733) - 0)))))), -10733, -10733))))), bool(_GLF_IDENTITY(false, (false) || false)))), 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, length(vec2(_GLF_IDENTITY(0.0, (0.0) + length(log(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0))), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0)), float(mat4x2(injectionSwitch.x, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), (_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), min(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)))))) + sqrt(0.0)), 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) + 0.0), _GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0) * (0.0))))) / _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), min(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), min(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), clamp((1.0), (1.0), (1.0))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0 + (_GLF_IDENTITY(1.0, (1.0) / 1.0))))))), 1.0, 1.0))))), _GLF_IDENTITY(length(vec2(0.0, 0.0)), mix(float(_GLF_IDENTITY(length(vec2(0.0, 0.0)), mix(float(length(vec2(0.0, 0.0))), float(_GLF_FUZZED(-48.39)), bool(false)))), float(_GLF_FUZZED(float(int(2.1)))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, 1.0), clamp(vec3(1.0, 0.0, 1.0), vec3(1.0, 0.0, 1.0), _GLF_IDENTITY(vec3(1.0, 0.0, 1.0), (vec3(1.0, 0.0, 1.0)) * vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(mat4x3(vec3(0.0, 1.0, 0.0), sin(sqrt(0.0)), 0.0, tan(0.0), 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0)), vec3(mat3x4(_GLF_IDENTITY(vec3(mat4x3(vec3(0.0, 1.0, 0.0), sin(sqrt(0.0)), 0.0, tan(0.0), 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0)), vec3(mat2x3(vec3(mat4x3(vec3(0.0, 1.0, 0.0), sin(sqrt(0.0)), 0.0, tan(0.0), 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0)), 0.0, 0.0, 0.0))), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)))), clamp(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 1.0 * (1.0))) * _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(49.83)), float(1.0), bool(true)))))), 0.0), vec3(0.0, 1.0, 0.0)))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), (dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))) / 1.0)), 1.0, 0.0, length(vec2(0.0, 0.0))), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0))))) > injectionSwitch.y)), false)), true && (bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(227.654) : _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), max(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))), (_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), max(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(1.0))) * (vec3(0.0, 1.0, 0.0)), max(_GLF_IDENTITY(mat3(1.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(1.0))) * (vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(mat3(1.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(1.0))) * (vec3(0.0, 1.0, 0.0)))))))))) * determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0))), 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), length(vec2(0.0, 0.0))), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, length(vec2(0.0, 0.0))), vec4(0.0, 1.0, 0.0, 0.0)), min(dot(vec4(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0)), dot(_GLF_IDENTITY(vec3(1.0, 0.0, 1.0), sin(vec3(0.0, 0.0, 0.0)) + (vec3(1.0, 0.0, 1.0))), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, length(vec2(0.0, 0.0))), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0)), dot(vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2.4)), float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), bool(true))), 1.0)), 0.0))), 1.0, 0.0, length(vec2(0.0, 0.0))), vec4(0.0, 1.0, 0.0, 0.0))))), 1.0, 0.0, 1.0, sqrt(1.0), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)))))), clamp(float(mat4x2(injectionSwitch.x, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(dot(vec4(-318.448, 7.2, 3.1, 380.405), step(vec4(82.65, -75.57, 8.5, 8.4), vec4(363.498, -3.0, 8.8, 29.39)))) : _GLF_IDENTITY(0.0, (0.0) - 0.0))) : _GLF_FUZZED((+ -4.8)))), 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, length(vec2(0.0, 0.0))), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(0.1)), float(1.0), bool(true))), 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))))), float(mat2x4(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))))), 0.0, 0.0, 0.0, log(exp(0.0)), 0.0, 0.0, 0.0)))), 1.0, 0.0, _GLF_IDENTITY(length(vec2(0.0, 0.0)), float(float(_GLF_IDENTITY(length(vec2(0.0, 0.0)), max(length(vec2(0.0, 0.0)), length(vec2(0.0, 0.0)))))))), _GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec4(0.0, 1.0, 0.0, 0.0) : _GLF_FUZZED((vec4(-5.6, -4.2, 18.55, 9263.1046) / vec4(4.9, -1.5, -688.316, -8.7))))))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(2.0) : 1.0)), 0.0, 1.0, sqrt(1.0), 0.0, 0.0)), float(mat4x2(injectionSwitch.x, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, length(vec2(0.0, 0.0))), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), 1.0 * (dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)))), dot(vec3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-10733))), bool(_GLF_IDENTITY(false, (false) || false)))), 0.0, 1.0), vec3(0.0, 1.0, 0.0))), _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, length(vec2(0.0, 0.0))), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0)), float(mat4x2(injectionSwitch.x, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0))))), length(vec2(0.0, 0.0))), _GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), clamp(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)))), dot(vec4(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), clamp(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 1.0 * (1.0))) * 1.0)), min(max(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 1.0 * (1.0))) * 1.0)), max(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 1.0 * (1.0))) * 1.0))))), 0.0), vec3(0.0, 1.0, 0.0)))), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, length(_GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED(7389.2415), (vec2(0.0, 0.0))[1]), vec2((vec2(0.0, 0.0))[0], _GLF_FUZZED(-97.39)), bvec2(true, false))))), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0))))) > injectionSwitch.y)), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(227.654) : _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), max(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))), (_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), max(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(1.0))) * (vec3(0.0, 1.0, 0.0)), max(_GLF_IDENTITY(mat3(1.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(1.0))) * (vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(mat3(1.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(1.0))) * (vec3(0.0, 1.0, 0.0)))))))))) * determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0))), 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), length(vec2(0.0, 0.0))), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, length(vec2(0.0, 0.0))), vec4(0.0, 1.0, 0.0, 0.0)), min(dot(vec4(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0)), dot(_GLF_IDENTITY(vec3(1.0, 0.0, 1.0), sin(vec3(0.0, 0.0, 0.0)) + (vec3(1.0, 0.0, 1.0))), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, length(vec2(0.0, 0.0))), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0)), dot(vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2.4)), float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), bool(true))), 1.0)), 0.0))), 1.0, 0.0, length(vec2(0.0, 0.0))), vec4(0.0, 1.0, 0.0, 0.0))))), 1.0, 0.0, 1.0, sqrt(1.0), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)))))), clamp(float(mat4x2(injectionSwitch.x, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(dot(vec4(-318.448, 7.2, 3.1, 380.405), step(vec4(82.65, -75.57, 8.5, 8.4), vec4(363.498, -3.0, 8.8, 29.39)))) : _GLF_IDENTITY(0.0, (0.0) - 0.0))) : _GLF_FUZZED((+ -4.8)))), 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, length(vec2(0.0, 0.0))), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(0.1)), float(1.0), bool(true))), 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))))), float(mat2x4(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))))), 0.0, 0.0, 0.0, log(exp(0.0)), 0.0, 0.0, 0.0)))), 1.0, 0.0, _GLF_IDENTITY(length(vec2(0.0, 0.0)), float(float(_GLF_IDENTITY(length(vec2(0.0, 0.0)), max(length(vec2(0.0, 0.0)), length(vec2(0.0, 0.0)))))))), _GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec4(0.0, 1.0, 0.0, 0.0) : _GLF_FUZZED((vec4(-5.6, -4.2, 18.55, 9263.1046) / vec4(4.9, -1.5, -688.316, -8.7))))))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(2.0) : 1.0)), 0.0, 1.0, sqrt(1.0), 0.0, 0.0)), float(mat4x2(injectionSwitch.x, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, length(vec2(0.0, 0.0))), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), 1.0 * (dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)))), dot(vec3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-10733))), bool(_GLF_IDENTITY(false, (false) || false)))), 0.0, 1.0), vec3(0.0, 1.0, 0.0))), _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, length(vec2(0.0, 0.0))), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0)), float(mat4x2(injectionSwitch.x, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0))))), length(vec2(0.0, 0.0))), _GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), clamp(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)))), dot(vec4(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), clamp(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 1.0 * (1.0))) * 1.0)), min(max(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 1.0 * (1.0))) * 1.0)), max(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 1.0 * (1.0))) * 1.0))))), 0.0), vec3(0.0, 1.0, 0.0)))), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, length(_GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED(7389.2415), (vec2(0.0, 0.0))[1]), vec2((vec2(0.0, 0.0))[0], _GLF_FUZZED(-97.39)), bvec2(true, false))))), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0))))) > injectionSwitch.y)), false), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(227.654) : _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), max(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))), (_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), max(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(1.0))) * (vec3(0.0, 1.0, 0.0)), max(_GLF_IDENTITY(mat3(1.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(1.0))) * (vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(mat3(1.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(1.0))) * (vec3(0.0, 1.0, 0.0)))))))))) * determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0))), 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), length(vec2(0.0, 0.0))), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, length(vec2(0.0, 0.0))), vec4(0.0, 1.0, 0.0, 0.0)), min(dot(vec4(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0)), dot(_GLF_IDENTITY(vec3(1.0, 0.0, 1.0), sin(vec3(0.0, 0.0, 0.0)) + (vec3(1.0, 0.0, 1.0))), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, length(vec2(0.0, 0.0))), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0)), dot(vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2.4)), float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), bool(true))), 1.0)), 0.0))), 1.0, 0.0, length(vec2(0.0, 0.0))), vec4(0.0, 1.0, 0.0, 0.0))))), 1.0, 0.0, 1.0, sqrt(1.0), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)))))), clamp(float(mat4x2(injectionSwitch.x, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(dot(vec4(-318.448, 7.2, 3.1, 380.405), step(vec4(82.65, -75.57, 8.5, 8.4), vec4(363.498, -3.0, 8.8, 29.39)))) : _GLF_IDENTITY(0.0, (0.0) - 0.0))) : _GLF_FUZZED((+ -4.8)))), 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, length(vec2(0.0, 0.0))), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(0.1)), float(1.0), bool(true))), 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))))), float(mat2x4(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))))), 0.0, 0.0, 0.0, log(exp(0.0)), 0.0, 0.0, 0.0)))), 1.0, 0.0, _GLF_IDENTITY(length(vec2(0.0, 0.0)), float(float(_GLF_IDENTITY(length(vec2(0.0, 0.0)), max(length(vec2(0.0, 0.0)), length(vec2(0.0, 0.0)))))))), _GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec4(0.0, 1.0, 0.0, 0.0) : _GLF_FUZZED((vec4(-5.6, -4.2, 18.55, 9263.1046) / vec4(4.9, -1.5, -688.316, -8.7))))))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(2.0) : 1.0)), 0.0, 1.0, sqrt(1.0), 0.0, 0.0)), float(mat4x2(injectionSwitch.x, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, length(vec2(0.0, 0.0))), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), 1.0 * (dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)))), dot(vec3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-10733))), bool(_GLF_IDENTITY(false, (false) || false)))), 0.0, 1.0), vec3(0.0, 1.0, 0.0))), _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, length(vec2(0.0, 0.0))), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0)), float(mat4x2(injectionSwitch.x, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0))))), length(vec2(0.0, 0.0))), _GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), clamp(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)))), dot(vec4(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), clamp(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 1.0 * (1.0))) * 1.0)), min(max(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 1.0 * (1.0))) * 1.0)), max(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 1.0 * (1.0))) * 1.0))))), 0.0), vec3(0.0, 1.0, 0.0)))), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, length(_GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED(7389.2415), (vec2(0.0, 0.0))[1]), vec2((vec2(0.0, 0.0))[0], _GLF_FUZZED(-97.39)), bvec2(true, false))))), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0))))) > injectionSwitch.y)), false), false, true)), false, false)))))))))))))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, false || (false))), bool(bvec3(_GLF_IDENTITY(false || (_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (false))), _GLF_IDENTITY((false || (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), bool(bvec4((false), true, false, false)))))), bool(bool((false || (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), bool(bvec4((false), true, false, false))))))))) || false), false, false))))))
                    break;
                   if(_GLF_DEAD(false))
                    continue;
                  }
                 else
                  {
                   for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((((1 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, max(4, 4)), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(_injected_loop_counter)))) / 1), 4))))) >> _GLF_IDENTITY(int(4), int(4))) << _GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), max(int(0), _GLF_IDENTITY(int(0), 0 + (int(0)))))), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), max(int(0), _GLF_IDENTITY(int(0), 0 + (int(0)))))), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), max(int(0), _GLF_IDENTITY(int(0), 0 + (int(0)))))), max(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), max(int(0), _GLF_IDENTITY(int(0), 0 + (int(0)))))), _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), max(int(0), _GLF_IDENTITY(int(0), 0 + (int(0)))))))), 0, 0, 1)))))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), ~ (~ (int(0))))))); _injected_loop_counter ++)
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                        {
                         return;
                        }
                       else
                        {
                        }
                      }
                     else
                      {
                      }
                    }
                   if(_GLF_DEAD(false))
                    {
                     do
                      {
                       return;
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                     if(_GLF_DEAD(false))
                      break;
                    }
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      continue;
                     break;
                    }
                  }
                }
               return;
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))
                continue;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  continue;
                 if(_GLF_DEAD(false))
                  return;
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED((89.15 + 2.9)), _GLF_FUZZED(-3.4)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1283.0657), _GLF_FUZZED(vec2(-5.4, -3190.9752).x)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4115.6163)), vec2(_GLF_FUZZED((89.04 - (+ -30.53))), (injectionSwitch)[1]), bvec2(false, true))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6581.4075), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-461.274)), bvec2(true, false))), injectionSwitch)), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1283.0657), _GLF_FUZZED(vec2(-5.4, -3190.9752).x)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4115.6163)), vec2(_GLF_FUZZED((89.04 - (+ -30.53))), (injectionSwitch)[1]), bvec2(false, true))))), mix(vec2(_GLF_FUZZED(-64.45), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1283.0657), _GLF_FUZZED(vec2(-5.4, -3190.9752).x)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4115.6163)), vec2(_GLF_FUZZED((89.04 - (+ -30.53))), (injectionSwitch)[1]), bvec2(false, true))))))[1]), vec2((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1283.0657), _GLF_FUZZED(vec2(-5.4, -3190.9752).x)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4115.6163)), vec2(_GLF_FUZZED((89.04 - (+ -30.53))), (injectionSwitch)[1]), bvec2(false, true))))))[0], _GLF_FUZZED(_GLF_IDENTITY(-64.11, min(_GLF_IDENTITY(-64.11, sin(0.0) + (-64.11)), _GLF_IDENTITY(-64.11, _GLF_IDENTITY(float(float(-64.11)), (false ? _GLF_FUZZED(-3411.7252) : float(float(-64.11))))))))), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1283.0657), _GLF_FUZZED(vec2(-5.4, -3190.9752).x)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4115.6163)), vec2(_GLF_FUZZED((89.04 - (+ -30.53))), (injectionSwitch)[1]), bvec2(false, true)), (mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4115.6163)), vec2(_GLF_FUZZED((89.04 - _GLF_IDENTITY((+ -30.53), float(_GLF_IDENTITY(vec4((+ -30.53), sqrt(0.0), 1.0, 0.0), mat4(_GLF_ONE(1.0, injectionSwitch.y)) * (vec4((+ -30.53), sqrt(0.0), 1.0, 0.0))))))), (injectionSwitch)[1]), bvec2(false, true))) / sqrt(exp(vec2(0.0, 0.0))))))))).x, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))))) ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY((- -9.9), (_GLF_IDENTITY((- -9.9), float(mat3(_GLF_IDENTITY((- -9.9), min((- -9.9), (- -9.9))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))) - 0.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))[0], min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])))), (injectionSwitch)[1]), vec2(_GLF_FUZZED((89.15 + 2.9)), _GLF_IDENTITY(_GLF_FUZZED(-3.4), (_GLF_FUZZED(_GLF_IDENTITY(-3.4, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(-3.4, 0.0, 1.0, 1.0, abs(0.0), 1.0), _GLF_IDENTITY(mat2x3(mat4x3(mat2x3(-3.4, 0.0, 1.0, 1.0, abs(0.0), 1.0))), (mat2x3(mat4x3(mat2x3(-3.4, 0.0, 1.0, 1.0, abs(0.0), 1.0)))) * mat2(1.0)))), max(float(_GLF_IDENTITY(mat2x3(-3.4, 0.0, 1.0, 1.0, abs(0.0), 1.0), _GLF_IDENTITY(mat2x3(mat4x3(mat2x3(-3.4, 0.0, 1.0, 1.0, abs(0.0), 1.0))), (mat2x3(mat4x3(mat2x3(-3.4, 0.0, 1.0, 1.0, abs(0.0), 1.0)))) * mat2(1.0)))), float(_GLF_IDENTITY(mat2x3(-3.4, 0.0, 1.0, 1.0, abs(0.0), 1.0), _GLF_IDENTITY(mat2x3(mat4x3(mat2x3(-3.4, 0.0, 1.0, 1.0, abs(0.0), 1.0))), (mat2x3(mat4x3(mat2x3(-3.4, 0.0, 1.0, 1.0, abs(0.0), 1.0)))) * mat2(1.0))))))))) + 0.0)), bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true, true, false))), true)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true, true, false))), true)))))))), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1283.0657), _GLF_FUZZED(_GLF_IDENTITY(vec2(-5.4, -3190.9752).x, max(vec2(-5.4, -3190.9752).x, vec2(-5.4, -3190.9752).x)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4115.6163)), vec2(_GLF_FUZZED((89.04 - (+ -30.53))), (injectionSwitch)[1]), bvec2(false, true))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6581.4075), (injectionSwitch)[1]), vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) << 0)], _GLF_FUZZED(-461.274)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1283.0657), _GLF_FUZZED(vec2(-5.4, -3190.9752).x)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4115.6163)), vec2(_GLF_FUZZED((89.04 - (+ -30.53))), (injectionSwitch)[1]), bvec2(false, true))))), mix(vec2(_GLF_FUZZED(-64.45), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4.4), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(86.36)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1283.0657), _GLF_FUZZED(vec2(-5.4, -3190.9752).x)), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (1) / ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))))]), bvec2(true, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4115.6163)), vec2(_GLF_FUZZED((89.04 - (+ -30.53))), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), true), bvec3(bvec3(bvec3(bvec2(false, true), true)))))))))))[1]), vec2((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1283.0657), _GLF_FUZZED(vec2(-5.4, -3190.9752).x)), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4115.6163)), vec2(_GLF_FUZZED((89.04 - (_GLF_IDENTITY(+ -30.53, 0.0 + (+ -30.53))))), (injectionSwitch)[1]), bvec2(false, true))))))[0], _GLF_FUZZED(_GLF_IDENTITY(-64.11, min(_GLF_IDENTITY(-64.11, sin(0.0) + (-64.11)), _GLF_IDENTITY(-64.11, _GLF_IDENTITY(float(float(-64.11)), (false ? _GLF_FUZZED(-3411.7252) : float(float(-64.11))))))))), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1283.0657), _GLF_FUZZED(vec2(-5.4, -3190.9752).x)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4115.6163)), vec2(_GLF_FUZZED((_GLF_IDENTITY(89.04 - (+ -30.53), (true ? _GLF_IDENTITY(89.04 - (+ -30.53), _GLF_IDENTITY(float(mat4(89.04 - (+ -30.53), 0.0, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, sin(0.0), 1.0)), mix(float(_GLF_FUZZED(2.7)), float(float(mat4(89.04 - (+ -30.53), 0.0, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, sin(0.0), 1.0))), bool(true)))) : _GLF_FUZZED(dot(cosh(vec2(-8.2, 607.604)), injectionSwitch)))))), (injectionSwitch)[1]), bvec2(false, true)), (mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4115.6163)), vec2(_GLF_FUZZED((89.04 - _GLF_IDENTITY((+ -30.53), float(_GLF_IDENTITY(vec4((+ -30.53), sqrt(0.0), 1.0, 0.0), mat4(_GLF_ONE(1.0, injectionSwitch.y)) * (vec4((+ -30.53), sqrt(0.0), 1.0, 0.0))))))), (injectionSwitch)[1]), bvec2(false, true))) / sqrt(exp(vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(roundEven((+ 1.5))))), 0.0))))))))).x, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))))), (! ((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))))) || false)))))) ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY((- _GLF_IDENTITY(-9.9, (-9.9) / 1.0)), (_GLF_IDENTITY((- -9.9), float(mat3(_GLF_IDENTITY((- -9.9), min((- -9.9), (- -9.9))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))) - 0.0))))) - 0.0) > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    break;
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     return;
                     if(_GLF_DEAD(false))
                      break;
                    }
                   else
                    {
                    }
                  }
                 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) - vec2(0.0, 0.0)).y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) - vec2(0.0, 0.0), ((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) - vec2(0.0, 0.0)) / vec2(1.0, 1.0))).y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)))))))))
                  {
                   if(_GLF_DEAD(false))
                    continue;
                   return;
                  }
                 if(_GLF_DEAD(false))
                  return;
                }
              }
             while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) && true));
            }
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), min(float(vec2(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), float(vec2(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), min(float(vec2(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), float(vec2(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))))), min(_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), min(float(vec2(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), float(vec2(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))))), _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), min(float(vec2(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), float(vec2(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))))))) : _GLF_FUZZED(-760.380))))))))
              return;
             if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) && true, false || ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) && true))))
              break;
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))) || false) || false), ! (! (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) + 0.0) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), max(injectionSwitch.y, injectionSwitch.y))))))))))))
              return;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(1.0))))), _GLF_IDENTITY(float(mat3x2(1.0, 0.0, tan(0.0), 0.0, 0.0, 0.0)), (float(mat3x2(1.0, 0.0, tan(0.0), 0.0, 0.0, 0.0))) - 0.0)), 1.0, 0.0))), (injectionSwitch.x) / 1.0) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(1.0))))), _GLF_IDENTITY(float(mat3x2(1.0, 0.0, tan(0.0), 0.0, 0.0, 0.0)), (float(mat3x2(1.0, 0.0, tan(0.0), 0.0, 0.0, 0.0))) - 0.0)), 1.0, 0.0))), (injectionSwitch.x) / 1.0) > injectionSwitch.y)))))));
          }
        }
       else
        {
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         return;
        }
       else
        {
        }
      }
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, true)), bool(_GLF_IDENTITY(bvec2(bool(bvec4(_GLF_DEAD(false), false, true, true)), false), bvec2(bvec2(bvec2(bool(bvec4(_GLF_DEAD(false), false, true, true)), false))))))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)) != 1); _injected_loop_counter ++)
        {
         return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3489.6599) : _GLF_IDENTITY(0.0, (0.0) / 1.0)))), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))).x > injectionSwitch.y))))
      return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch) - log(vec2(1.0, 1.0))))).x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ((false) || false) && true)) ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) : injectionSwitch)).x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y))))) || false)) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 1.0))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       else
        {
        }
      }
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))) && true))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).y)) * (injectionSwitch)).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).y)) * (injectionSwitch)).x > injectionSwitch.y))))))
            return;
           if(_GLF_DEAD(false))
            return;
          }
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           return;
          }
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         for(int _injected_loop_counter = (6055 & ((0 | 0) & -31897)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 1)); _injected_loop_counter ++)
          {
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
          }
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), clamp(_GLF_IDENTITY(int(5), (int(5)) | (int(5))), int(5), int(5)))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), clamp(_GLF_IDENTITY(int(5), (int(5)) | (int(5))), int(5), int(5)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), clamp(_GLF_IDENTITY(int(5), (int(5)) | (int(5))), int(5), int(5)))), 0 | (_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), clamp(_GLF_IDENTITY(int(5), (int(5)) | (int(5))), int(5), int(5)))))) : _GLF_FUZZED(-62409)))))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), 0 ^ (int(5))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             return;
            }
          }
        }
       for(int _injected_loop_counter = (_GLF_IDENTITY(1, max(1, 1)) & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          return;
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           return;
          }
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
              {
              }
             else
              {
               return;
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  {
   do
    {
     do
      {
       return;
       if(_GLF_DEAD(false))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)), (bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))) && true)));
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (0 | 0), (_injected_loop_counter != (0 | 0)) || false)); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
        {
        }
       else
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           return;
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), true && ((_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), ! (! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), false || (! (_GLF_WRAPPED_IF_FALSE(false))))))))))))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         for(int _injected_loop_counter = (12791 & (0 ^ 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))), (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))) || false))
              {
              }
             else
              {
               return;
              }
            }
          }
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            continue;
           return;
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(false))
          break;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             return;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               return;
              }
            }
          }
         else
          {
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), bvec2(bvec2(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
              {
               do
                {
                 return;
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
           else
            {
            }
           return;
           if(_GLF_DEAD(false))
            break;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          break;
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) || _GLF_IDENTITY(false, (false) && true)), true, false, false))))), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), ! (! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), bool(bvec2(! (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), false)))))))))))))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            {
             do
              {
               do
                {
                 return;
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            return;
          }
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))) > injectionSwitch.y, false, true)))))))))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true)))))), ((! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true))))))) && true))))))))
        return;
      }
    }
   if(_GLF_DEAD(false))
    break;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, bool(bvec3(true, false, true)))))))))) && true)))))))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     return;
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint subgroup_base = subgroup_id * subgroup_size;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  return;
 atomicStore(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (virtual_gid) + 0u)) - 0u)], uint(1), 4, 64, 4);
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), ! (! ((true)))))))
  {
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], uint(2), 4, _GLF_IDENTITY(64, 0 ^ (_GLF_IDENTITY(64, max(64, 64)))), 4);
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), ~ (~ (int(4)))))) >> _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3484.2733)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
      return;
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    return;
  }
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_DEAD(false))
        break;
      }
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-521.962, (-521.962) / 1.0)), _GLF_FUZZED(6226.6117)), _GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-9019.7721)), bool(false))) < injectionSwitch.y))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-521.962, (-521.962) / 1.0)), _GLF_FUZZED(6226.6117)), _GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-9019.7721)), bool(false))) < injectionSwitch.y))))))), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-521.962, (-521.962) / 1.0)), _GLF_FUZZED(6226.6117)), _GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-9019.7721)), bool(false))) < injectionSwitch.y)))))))) + vec2(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-521.962, (-521.962) / 1.0)), _GLF_FUZZED(6226.6117)), _GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-9019.7721)), bool(false))) < injectionSwitch.y))))))), mix(vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-521.962, (-521.962) / 1.0)), _GLF_FUZZED(6226.6117)), _GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-9019.7721)), bool(false))) < injectionSwitch.y))))))))[0], (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-521.962, (-521.962) / 1.0)), _GLF_FUZZED(6226.6117)), _GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-9019.7721)), bool(false))) < injectionSwitch.y))))))))[1]), vec2(_GLF_FUZZED(193.452), _GLF_FUZZED(-0.4)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(asinh(705.624)) : injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).y)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, (true) || false), true, false)), ! (! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), true, false))))))), false || (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, (true) || false), true, false)), ! (! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), true, false))))))))))))), ! (! (bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))), true))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, (true) || false), true, false)), _GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY(true, (true) || false), true, false)))), (bool(bool(bool(bvec3(_GLF_IDENTITY(true, (true) || false), true, false))))) && true)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))), (true) || false), true, false))))))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, (true) || false), true, false)), ! (! (bool(bvec3(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, (false) && true)), true, false))))))))))))), ! (! (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, (true) || false), true, false)), ! (! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))))))), false || (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, (true) || false), true, false)), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, (true) || false), true, false)), (bool(bvec3(_GLF_IDENTITY(true, (true) || false), true, false))) || false)))))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, (true) || false), true, false)), ! (! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), true, false))))))), false || (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, (true) || false), true, false)), ! (! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), true, false))))))))))))))), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(1.0))), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), length(vec3(0.0, 0.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), length(vec3(0.0, 0.0, 0.0))), vec2(1.0, 0.0))), 0.0, 0.0, exp(0.0), abs(1.0), determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, abs(1.0)), (true ? mat4(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(1.0))), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), length(vec3(0.0, 0.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), length(vec3(0.0, 0.0, 0.0))), vec2(1.0, 0.0))), 0.0, 0.0, exp(0.0), abs(1.0), determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, abs(1.0)) : _GLF_FUZZED(mat4(6175.7418, -11.77, 0.1, 547.902, -21.15, -32.89, -95.21, -89.59, -4497.1613, 47.34, 4.2, 3810.7962, 0.5, -8.5, 3.4, -4548.2947)))))) > injectionSwitch.y)), true))), ! (_GLF_IDENTITY(! (! (bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(1.0))), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), length(vec3(0.0, 0.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), length(vec3(0.0, 0.0, 0.0))), vec2(1.0, 0.0))), 0.0, 0.0, exp(0.0), abs(1.0), determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, abs(1.0)), (true ? mat4(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(1.0))), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), length(vec3(0.0, 0.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), length(vec3(0.0, 0.0, 0.0))), vec2(1.0, 0.0))), 0.0, 0.0, exp(0.0), abs(1.0), determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, abs(1.0)) : _GLF_FUZZED(mat4(6175.7418, -11.77, 0.1, 547.902, -21.15, -32.89, -95.21, -89.59, -4497.1613, 47.34, 4.2, 3810.7962, 0.5, -8.5, 3.4, -4548.2947)))))) > injectionSwitch.y)), true)))), false || (! (! (bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)))), float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(1.0))), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), length(vec3(0.0, 0.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), length(vec3(0.0, 0.0, 0.0))), vec2(1.0, 0.0))), 0.0, 0.0, exp(0.0), abs(1.0), determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, abs(1.0)), (true ? mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, log(1.0), 0.0, 1.0, 0.0, 0.0, cos(0.0), 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, tan(0.0), 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, tan(0.0), 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(1.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (true ? injectionSwitch.x : _GLF_FUZZED(1.0)) : _GLF_FUZZED(-533.773)))), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), length(vec3(0.0, 0.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), length(vec3(0.0, 0.0, 0.0))), vec2(1.0, 0.0))), 0.0, 0.0, exp(0.0), abs(1.0), determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, abs(1.0)) : _GLF_FUZZED(mat4(6175.7418, -11.77, 0.1, 547.902, -21.15, -32.89, -95.21, -89.59, -4497.1613, 47.34, 4.2, 3810.7962, 0.5, -8.5, 3.4, -4548.2947)))))) > injectionSwitch.y)), true)))))))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (true) || false), true, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (true) || false), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, (true) || false), true, false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (true) || false), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, (true) || false), true, false)))), false))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (true) || false), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, (true) || false), true, false)))), false))))))), ! (! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), true, false))))))), false || (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, (true) || false), true, false)), ! (! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), true, false))))))))))))), ! (! (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec2(-3047.3074, 2.0).g)), float(injectionSwitch.y), bool(true))))), true))))), true, true), true))))))))))
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       do
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     else
      {
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(2), int(2)), max(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(2), int(2)), clamp(0 >> _GLF_IDENTITY(int(2), int(2)), 0 >> _GLF_IDENTITY(int(2), int(2)), 0 >> _GLF_IDENTITY(int(2), int(2)))), 0 >> _GLF_IDENTITY(int(2), int(2)))))); _injected_loop_counter --)
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(-771.541)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), clamp(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat4x3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))) : _GLF_FUZZED(-6.0))))) | (int(_GLF_ZERO(0.0, injectionSwitch.x))))))) + _GLF_IDENTITY((0 << _GLF_IDENTITY(int(6), int(6))), ~ (~ _GLF_IDENTITY(((0 << _GLF_IDENTITY(int(6), int(6)))), int(ivec4(_GLF_IDENTITY(((0 << _GLF_IDENTITY(int(6), int(6)))), clamp(((0 << _GLF_IDENTITY(int(6), int(6)))), _GLF_IDENTITY(((0 << _GLF_IDENTITY(int(6), int(6)))), int(ivec4((_GLF_IDENTITY((0 << _GLF_IDENTITY(int(6), int(6))), ((0 << _GLF_IDENTITY(int(6), int(6)))) / 1)), 0, 0, 1))), _GLF_IDENTITY(((0 << _GLF_IDENTITY(int(6), int(6)))), (false ? _GLF_FUZZED(-18729) : ((0 << _GLF_IDENTITY(int(6), int(6)))))))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (1))) | (1)))))))) << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(_GLF_IDENTITY(6, min(_GLF_IDENTITY(6, min(6, 6)), 6)), (_GLF_IDENTITY(6, min(_GLF_IDENTITY(6, min(6, 6)), 6))) - 0)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter > (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), clamp(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (int(_GLF_ZERO(0.0, injectionSwitch.x)))))) | (int(_GLF_ZERO(0.0, injectionSwitch.x))))))) + _GLF_IDENTITY((0 << _GLF_IDENTITY(int(6), int(6))), ~ (~ ((0 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(int(ivec2(6, 1)), (true ? int(ivec2(6, 1)) : _GLF_FUZZED((_injected_loop_counter >> _injected_loop_counter)))))), int(6))))))) << _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) / 1)), int(_GLF_IDENTITY(6, min(_GLF_IDENTITY(6, min(6, 6)), 6))))), ! (! (_injected_loop_counter > (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(clamp(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) | 0), int(_GLF_ZERO(0.0, injectionSwitch.x)))), (int(_GLF_ZERO(0.0, injectionSwitch.x))) | (int(_GLF_ZERO(0.0, injectionSwitch.x))))), (clamp(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) | 0), int(_GLF_ZERO(0.0, injectionSwitch.x)))), (int(_GLF_ZERO(0.0, injectionSwitch.x))) | (int(_GLF_ZERO(0.0, injectionSwitch.x)))))) | 0))) + _GLF_IDENTITY((0 << _GLF_IDENTITY(int(6), int(6))), ~ (~ ((0 << _GLF_IDENTITY(int(6), int(6))))))) << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, min(_GLF_IDENTITY(6, min(6, 6)), 6))))))))), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(_injected_loop_counter > (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) | (int(_GLF_ZERO(0.0, injectionSwitch.x))))))) + _GLF_IDENTITY((0 << _GLF_IDENTITY(int(6), int(6))), ~ (~ ((0 << _GLF_IDENTITY(int(6), int(6))))))) << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, min(_GLF_IDENTITY(_GLF_IDENTITY(6, min(6, _GLF_IDENTITY(6, (true ? 6 : _GLF_FUZZED((+ _injected_loop_counter)))))), min(6, 6)), 6))))), ! (! (_injected_loop_counter > (_GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(11.37)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-53.69)), bool(false))))))), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(_GLF_ZERO(0.0, injectionSwitch.x))))) | (int(_GLF_ZERO(0.0, injectionSwitch.x))))))) + _GLF_IDENTITY((0 << _GLF_IDENTITY(int(6), int(6))), ~ (~ (_GLF_IDENTITY((0 << _GLF_IDENTITY(int(6), int(6))), ((0 << _GLF_IDENTITY(int(6), int(6)))) - (0 >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), ~ (~ (int(5))))))))))) << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, min(_GLF_IDENTITY(6, min(6, 6)), _GLF_IDENTITY(6, (_GLF_IDENTITY(6, 0 ^ (6))) / 1)))))))))))), ! (_GLF_IDENTITY(! (bool(bool(bool(_GLF_IDENTITY(_injected_loop_counter > (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) | (int(_GLF_ZERO(0.0, injectionSwitch.x))))))) + _GLF_IDENTITY((0 << _GLF_IDENTITY(int(6), int(6))), ~ (~ ((0 << _GLF_IDENTITY(int(6), int(6))))))) << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, min(_GLF_IDENTITY(_GLF_IDENTITY(6, min(6, _GLF_IDENTITY(6, (true ? 6 : _GLF_FUZZED((+ _injected_loop_counter)))))), min(6, 6)), 6))))), ! (! (_injected_loop_counter > (_GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(11.37)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-53.69)), bool(false))))))), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(_GLF_ZERO(0.0, injectionSwitch.x))))) | (int(_GLF_ZERO(0.0, injectionSwitch.x))))))) + _GLF_IDENTITY((0 << _GLF_IDENTITY(int(6), int(6))), ~ (~ (_GLF_IDENTITY((0 << _GLF_IDENTITY(int(6), int(6))), ((0 << _GLF_IDENTITY(int(6), int(6)))) - (0 >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), ~ (~ (int(5))))))))))) << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, min(_GLF_IDENTITY(6, min(6, 6)), _GLF_IDENTITY(6, (_GLF_IDENTITY(6, 0 ^ (6))) / 1))))))))))))), (! (bool(bool(bool(_GLF_IDENTITY(_injected_loop_counter > (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) | (int(_GLF_ZERO(0.0, injectionSwitch.x))))))) + _GLF_IDENTITY((0 << _GLF_IDENTITY(int(6), int(6))), ~ (~ ((0 << _GLF_IDENTITY(int(6), int(6))))))) << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, min(_GLF_IDENTITY(_GLF_IDENTITY(6, min(6, _GLF_IDENTITY(6, (true ? 6 : _GLF_FUZZED((+ _injected_loop_counter)))))), min(6, 6)), 6))))), ! (! (_injected_loop_counter > (_GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(11.37)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-53.69)), bool(false))))))), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(_GLF_ZERO(0.0, injectionSwitch.x))))) | (int(_GLF_ZERO(0.0, injectionSwitch.x))))))) + _GLF_IDENTITY((0 << _GLF_IDENTITY(int(6), int(6))), ~ (~ (_GLF_IDENTITY((0 << _GLF_IDENTITY(int(6), int(6))), ((0 << _GLF_IDENTITY(int(6), int(6)))) - (0 >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), ~ (~ (int(5))))))))))) << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, min(_GLF_IDENTITY(6, min(6, 6)), _GLF_IDENTITY(6, (_GLF_IDENTITY(6, 0 ^ (6))) / 1)))))))))))))) && true))))))); _injected_loop_counter --)
        {
         return;
        }
      }
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
