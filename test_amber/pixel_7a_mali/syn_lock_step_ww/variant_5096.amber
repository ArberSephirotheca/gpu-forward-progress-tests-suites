#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), bool(bool(! (_GLF_WRAPPED_IF_FALSE(false)))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          break;
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     else
      {
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        continue;
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat4(injectionSwitch[0], 1.0, 0.0, sqrt(1.0), 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, sqrt(0.0), 1.0, 0.0, 1.0, 0.0))), injectionSwitch[1])).y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  return;
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, true && (_injected_loop_counter > 0))); _injected_loop_counter --)
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (int(_GLF_ZERO(0.0, injectionSwitch.x)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(float(false))), bool(false))))); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))) && true)))));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 1.0))) > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) / 1.0))).x)) - 0.0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _GLF_IDENTITY(_injected_loop_counter ++, 0 ^ (_injected_loop_counter ++)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    break;
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        break;
       barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       barrier();
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), true, true, false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), vec2(_GLF_FUZZED(float(40435u)), _GLF_FUZZED(89.79)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), true, true, false)))))), true && _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-535.174)), bool(false)))))))), true, true, false))))))), bool(bvec2(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, bool(bool(true))) && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(((- -30.19) * -7.2))), vec2(_GLF_FUZZED(vec2(479.448, -2.3).r), (injectionSwitch)[1]), bvec2(false, true))).y))), true, true, false))))))), (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), true, true, false)))))))) && true), true))))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 1.0, 0.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), max(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, log(1.0))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, log(1.0))), (dot(vec2(1.0, 0.0), vec2(1.0, log(1.0)))) - 0.0)), 0.0))) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) : _GLF_FUZZED(2.0))) > injectionSwitch.y))), bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), true, true, false)))))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), true, true, false))))))))), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 1.0, 0.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), max(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, log(1.0))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, log(1.0))), (dot(vec2(1.0, 0.0), vec2(1.0, log(1.0)))) - 0.0)), 0.0))) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) : _GLF_FUZZED(2.0))) > injectionSwitch.y))), bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), true, true, false)))))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), true, true, false))))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 1.0, 0.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), max(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, log(1.0))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, log(1.0))), (dot(vec2(1.0, 0.0), vec2(1.0, log(1.0)))) - 0.0)), 0.0))) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) : _GLF_FUZZED(2.0))) > injectionSwitch.y))), bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), true, true, false)))))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), true, true, false))))))))), ! (! ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 1.0, 0.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), max(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, log(1.0))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, log(1.0))), (dot(vec2(1.0, 0.0), vec2(1.0, log(1.0)))) - 0.0)), 0.0))) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) : _GLF_FUZZED(2.0))) > injectionSwitch.y))), bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), true, true, false)))))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), true, true, false)))))))))))), true, true, false)), true && (bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 1.0, 0.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), max(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, log(1.0))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, log(1.0))), (dot(vec2(1.0, 0.0), vec2(1.0, log(1.0)))) - 0.0)), 0.0))) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) : _GLF_FUZZED(2.0))) > injectionSwitch.y))), bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), true, true, false)))))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), true, true, false))))))))), ! (! ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 1.0, 0.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), max(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, log(1.0))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, log(1.0))), (dot(vec2(1.0, 0.0), vec2(1.0, log(1.0)))) - 0.0)), 0.0))) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) : _GLF_FUZZED(2.0))) > injectionSwitch.y))), bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), true, true, false)))))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), true, true, false)))))))))))), true, true, false)))))) && true)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           barrier();
          }
        }
       break;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(! (_GLF_DEAD(false))))))))))
          {
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             do
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  break;
                 return;
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    return;
                   if(_GLF_DEAD(false))
                    break;
                  }
                }
               else
                {
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))));
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         do
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
                return;
              }
            }
           else
            {
            }
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         break;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))))))), ! (! (! (bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))))))))))))))))
        {
         for(int _injected_loop_counter = (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) * 1))), 0 ^ (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) * 1))), clamp((0 >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) * 1))), (0 >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) * 1))), (0 >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) * 1))))))) << _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, (true ? 7 : _GLF_FUZZED(-43143)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
          {
           barrier();
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false))))
            barrier();
          }
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                }
              }
             else
              {
              }
             return;
            }
          }
         else
          {
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         barrier();
        }
       else
        {
        }
      }
     barrier();
     for(int _injected_loop_counter = (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (0) >> 0)))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(ivec3(int(3), 1, 0))), (int(3)) + 0), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-49.66)), float(injectionSwitch.y), bool(true)))) + 0.0)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       barrier();
      }
     else
      {
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), mat3(mat4x3(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), mat3(_GLF_IDENTITY(mat4x3(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)), mat3(1.0) * (mat4x3(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)))))))))), max(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED((mat3x2(7.2, 6.7, 3486.2594, -6182.0553, 6539.2915, -2696.8500) , -14.41)))), 0.0), mat3(mat4x3(mat3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), min(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(35.33))), injectionSwitch.x)))), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), mat3(mat4x3(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), mat3(_GLF_ONE(1.0, injectionSwitch.y)) * (vec3(0.0, 0.0, 0.0)))), 0.0, 0.0, 0.0, 0.0), (mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)) / mat3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, _GLF_IDENTITY((false ? _GLF_FUZZED(cos(8637.9506)) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-848.227)), bool(false)))), (true ? (false ? _GLF_FUZZED(cos(8637.9506)) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-848.227)), bool(false)))) : _GLF_FUZZED(length(vec4(-6978.7334, -162.756, 534.348, -3548.8657))))))) - 0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))), mix(float(_GLF_FUZZED(((- -53.40)))), float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), mat3(mat4x3(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), mix(vec3(_GLF_FUZZED(-46.91), _GLF_FUZZED(-21.66), _GLF_FUZZED(-9985.7177)), vec3((vec3(0.0, 0.0, 0.0))[0], (vec3(0.0, 0.0, 0.0))[1], _GLF_IDENTITY((vec3(0.0, 0.0, 0.0))[2], max((vec3(0.0, 0.0, 0.0))[2], (vec3(0.0, 0.0, 0.0))[2]))), bvec3(true, true, true)))), 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), mat3(mat4x3(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), mix(vec3(_GLF_FUZZED(-46.91), _GLF_FUZZED(-21.66), _GLF_FUZZED(-9985.7177)), vec3((vec3(0.0, 0.0, 0.0))[0], (vec3(0.0, 0.0, 0.0))[1], _GLF_IDENTITY((vec3(0.0, 0.0, 0.0))[2], max((vec3(0.0, 0.0, 0.0))[2], (vec3(0.0, 0.0, 0.0))[2]))), bvec3(true, true, true)))), 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (mat3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)) / mat3(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))) : _GLF_FUZZED(mat3(4.0, 583.228, 0.8, -3.0, -8.7, 2.5, -5223.4019, 41.60, 8.0))))), max(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), mat3(mat4x3(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), vec2(mat4x2(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0))), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-1804.6490)))) / 1.0), 1.0), vec2(1.0, 1.0), vec2(_GLF_IDENTITY(1.0, (1.0) - length(vec2(0.0, 0.0))), 1.0)))))))).x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY((_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) / mat3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0), ((_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) / mat3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))), mix(float(_GLF_IDENTITY(_GLF_FUZZED(896.070), mix(float(_GLF_FUZZED(-3024.3766)), float(_GLF_FUZZED(896.070)), bool(true)))), float(float(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(797.942) : 0.0)), 0.0, 0.0), mat3(mat4x3(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(max(inversesqrt(_GLF_IDENTITY(vec2(-8.8, -48.38), (false ? _GLF_FUZZED(injectionSwitch) : vec2(-8.8, -48.38)))), -53.36)))).y), length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) + 0.0), 1.0, 1.0, 1.0))))))), bool(true))), float(_GLF_IDENTITY(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat3(-8407.6677, 9256.2299, 25.72, 154.833, -1.4, -4.2, -0.4, -9.8, 1.5)) : mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), mat3(mat4x3(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, abs(0.0), 0.0, 0.0), (mat3x2(injectionSwitch, _GLF_IDENTITY(1.0, max(1.0, 1.0)), abs(0.0), 0.0, 0.0)) * mat3(1.0)))).x, 1.0, 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), injectionSwitch.y), length(vec3(0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(0.0), (float(0.0)) - 0.0))), 0.0)), 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x2(4.5, -14.06, 5.6, 386.814, -96.27, 8.2, 396.113, 1.9)) : mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), (float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x2(4.5, -14.06, 5.6, 386.814, -96.27, 8.2, 396.113, 1.9)) : mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))) / 1.0)))), 0.0, 0.0, 0.0, 0.0), (mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, 1.0 * (0.0)), mix(float(_GLF_FUZZED(-4094.6470)), float(_GLF_IDENTITY(0.0, 1.0 * (0.0))), bool(true))), 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(mat3(772.915, -9089.2001, -3.0, -7.4, 3.4, -7910.1622, -5.5, -3.1, -6746.6148)) : _GLF_IDENTITY(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x2(4.5, -14.06, 5.6, 386.814, -96.27, 8.2, 396.113, 1.9)) : mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), (float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x2(4.5, -14.06, 5.6, 386.814, -96.27, 8.2, 396.113, 1.9)) : mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))) / 1.0)))), 0.0, 0.0, 0.0, 0.0), (mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, 1.0 * (0.0)), mix(float(_GLF_FUZZED(-4094.6470)), float(_GLF_IDENTITY(0.0, 1.0 * (0.0))), bool(true))), 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), (true ? _GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x2(4.5, -14.06, 5.6, _GLF_IDENTITY(386.814, 1.0 * (_GLF_IDENTITY(386.814, max(386.814, 386.814)))), -96.27, 8.2, 396.113, 1.9)) : mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), (_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(4.5, min(_GLF_IDENTITY(4.5, mix(float(_GLF_FUZZED(-93.63)), float(4.5), bool(true))), 4.5)), -14.06, 5.6, 386.814, -96.27, 8.2, 396.113, 1.9)) : mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), (true ? _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(4.5, min(_GLF_IDENTITY(4.5, mix(float(_GLF_FUZZED(-93.63)), float(4.5), bool(true))), 4.5)), -14.06, 5.6, 386.814, -96.27, 8.2, 396.113, 1.9)) : mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), min(float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(4.5, min(_GLF_IDENTITY(4.5, mix(float(_GLF_FUZZED(-93.63)), float(4.5), bool(true))), 4.5)), -14.06, 5.6, 386.814, -96.27, 8.2, 396.113, 1.9)) : mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(4.5, min(_GLF_IDENTITY(4.5, mix(float(_GLF_FUZZED(-93.63)), float(4.5), bool(true))), 4.5)), -14.06, 5.6, 386.814, -96.27, 8.2, 396.113, 1.9)) : mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))) : _GLF_FUZZED(-168.426)))) / 1.0)))), 0.0, 0.0, 0.0, 0.0), (mat3(injectionSwitch.x, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-18.85))), _GLF_ONE(1.0, injectionSwitch.y), length(vec3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, 1.0 * (0.0)), mix(float(_GLF_FUZZED(-4094.6470)), float(_GLF_IDENTITY(0.0, 1.0 * (0.0))), bool(true))), 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)) : _GLF_FUZZED(mat3(15.45, -6.7, 57.82, 798.878, 80.53, -9435.6347, -965.318, -944.461, -499.835))))))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))))), bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0), max(vec2(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0), vec2(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0))), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), vec3(mat4(vec3(0.0, 0.0, 1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), determinant(mat4(0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0))), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0), vec2(0.0, 1.0))) + (1.0)), 0.0, 1.0, 0.0)), clamp(float(mat3x4(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), mat3(mat4x3(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), mat3(_GLF_ONE(1.0, injectionSwitch.y)) * (vec3(0.0, 0.0, 0.0)))), 0.0, 0.0, 0.0, 0.0), (mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)) / mat3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, _GLF_IDENTITY((false ? _GLF_FUZZED(cos(8637.9506)) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-848.227)), bool(false)))), (true ? (false ? _GLF_FUZZED(cos(8637.9506)) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-848.227)), bool(false)))) : _GLF_FUZZED(length(vec4(-6978.7334, -162.756, 534.348, -3548.8657))))))) - 0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))), mix(float(_GLF_FUZZED(((- -53.40)))), float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), mat3(mat4x3(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), mix(vec3(_GLF_FUZZED(-46.91), _GLF_FUZZED(-21.66), _GLF_FUZZED(-9985.7177)), vec3((vec3(0.0, 0.0, 0.0))[0], (vec3(0.0, 0.0, 0.0))[1], _GLF_IDENTITY((vec3(0.0, 0.0, 0.0))[2], max((vec3(0.0, 0.0, 0.0))[2], (vec3(0.0, 0.0, 0.0))[2]))), bvec3(true, true, true)))), 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), mat3(mat4x3(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), mix(vec3(_GLF_FUZZED(-46.91), _GLF_FUZZED(-21.66), _GLF_FUZZED(-9985.7177)), vec3((vec3(0.0, 0.0, 0.0))[0], (vec3(0.0, 0.0, 0.0))[1], _GLF_IDENTITY((vec3(0.0, 0.0, 0.0))[2], max((vec3(0.0, 0.0, 0.0))[2], (vec3(0.0, 0.0, 0.0))[2]))), bvec3(true, true, true)))), 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (mat3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)) / mat3(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))) : _GLF_FUZZED(mat3(4.0, 583.228, 0.8, -3.0, -8.7, 2.5, -5223.4019, 41.60, 8.0))))), max(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), mat3(mat4x3(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), vec2(mat4x2(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0))), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-1804.6490)))) / 1.0), 1.0), vec2(1.0, 1.0), vec2(_GLF_IDENTITY(1.0, (1.0) - length(vec2(0.0, 0.0))), 1.0)))))))).x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY((_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) / mat3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0), ((_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) / mat3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))), mix(float(_GLF_IDENTITY(_GLF_FUZZED(896.070), mix(float(_GLF_FUZZED(-3024.3766)), float(_GLF_FUZZED(896.070)), bool(true)))), float(float(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(797.942) : 0.0)), 0.0, 0.0), mat3(mat4x3(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(max(inversesqrt(_GLF_IDENTITY(vec2(-8.8, -48.38), (false ? _GLF_FUZZED(injectionSwitch) : vec2(-8.8, -48.38)))), -53.36)))).y), length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) + 0.0), 1.0, 1.0, 1.0))))))), bool(true))), float(_GLF_IDENTITY(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat3(-8407.6677, 9256.2299, 25.72, 154.833, -1.4, -4.2, -0.4, -9.8, 1.5)) : mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), mat3(mat4x3(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, abs(0.0), 0.0, 0.0), (mat3x2(injectionSwitch, _GLF_IDENTITY(1.0, max(1.0, 1.0)), abs(0.0), 0.0, 0.0)) * mat3(1.0)))).x, 1.0, 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), injectionSwitch.y), length(vec3(0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(0.0), (float(0.0)) - 0.0))), 0.0)), 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x2(4.5, -14.06, 5.6, 386.814, -96.27, 8.2, 396.113, 1.9)) : mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), (float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x2(4.5, -14.06, 5.6, 386.814, -96.27, 8.2, 396.113, 1.9)) : mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))) / 1.0)))), 0.0, 0.0, 0.0, 0.0), (mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, 1.0 * (0.0)), mix(float(_GLF_FUZZED(-4094.6470)), float(_GLF_IDENTITY(0.0, 1.0 * (0.0))), bool(true))), 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(mat3(772.915, -9089.2001, -3.0, -7.4, 3.4, -7910.1622, -5.5, -3.1, -6746.6148)) : _GLF_IDENTITY(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x2(4.5, -14.06, 5.6, 386.814, -96.27, 8.2, 396.113, 1.9)) : mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), (float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x2(4.5, -14.06, 5.6, 386.814, -96.27, 8.2, 396.113, 1.9)) : mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))) / 1.0)))), 0.0, 0.0, 0.0, 0.0), (mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, 1.0 * (0.0)), mix(float(_GLF_FUZZED(-4094.6470)), float(_GLF_IDENTITY(0.0, 1.0 * (0.0))), bool(true))), 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), (true ? _GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x2(4.5, -14.06, 5.6, _GLF_IDENTITY(386.814, 1.0 * (_GLF_IDENTITY(386.814, max(386.814, 386.814)))), -96.27, 8.2, 396.113, 1.9)) : mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), (_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(4.5, min(_GLF_IDENTITY(4.5, mix(float(_GLF_FUZZED(-93.63)), float(4.5), bool(true))), 4.5)), -14.06, 5.6, 386.814, -96.27, 8.2, 396.113, 1.9)) : mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), (true ? _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(4.5, min(_GLF_IDENTITY(4.5, mix(float(_GLF_FUZZED(-93.63)), float(4.5), bool(true))), 4.5)), -14.06, 5.6, 386.814, -96.27, 8.2, 396.113, 1.9)) : mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), min(float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(4.5, min(_GLF_IDENTITY(4.5, mix(float(_GLF_FUZZED(-93.63)), float(4.5), bool(true))), 4.5)), -14.06, 5.6, 386.814, -96.27, 8.2, 396.113, 1.9)) : mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(4.5, min(_GLF_IDENTITY(4.5, mix(float(_GLF_FUZZED(-93.63)), float(4.5), bool(true))), 4.5)), -14.06, 5.6, 386.814, -96.27, 8.2, 396.113, 1.9)) : mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))) : _GLF_FUZZED(-168.426)))) / 1.0)))), 0.0, 0.0, 0.0, 0.0), (mat3(injectionSwitch.x, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-18.85))), _GLF_ONE(1.0, injectionSwitch.y), length(vec3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, 1.0 * (0.0)), mix(float(_GLF_FUZZED(-4094.6470)), float(_GLF_IDENTITY(0.0, 1.0 * (0.0))), bool(true))), 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)) : _GLF_FUZZED(mat3(15.45, -6.7, 57.82, 798.878, 80.53, -9435.6347, -965.318, -944.461, -499.835))))))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))))), bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0), max(vec2(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0), vec2(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0))), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), vec3(mat4(vec3(0.0, 0.0, 1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), determinant(mat4(0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0))), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0), vec2(0.0, 1.0))) + (1.0)), 0.0, 1.0, 0.0)), _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), mat3(mat4x3(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), mat3(_GLF_ONE(1.0, injectionSwitch.y)) * (vec3(0.0, 0.0, 0.0)))), 0.0, 0.0, 0.0, 0.0), (mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)) / mat3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, _GLF_IDENTITY((false ? _GLF_FUZZED(cos(8637.9506)) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-848.227)), bool(false)))), (true ? (false ? _GLF_FUZZED(cos(8637.9506)) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-848.227)), bool(false)))) : _GLF_FUZZED(length(vec4(-6978.7334, -162.756, 534.348, -3548.8657))))))) - 0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))), mix(float(_GLF_FUZZED(((- -53.40)))), float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), mat3(mat4x3(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), mix(vec3(_GLF_FUZZED(-46.91), _GLF_FUZZED(-21.66), _GLF_FUZZED(-9985.7177)), vec3((vec3(0.0, 0.0, 0.0))[0], (vec3(0.0, 0.0, 0.0))[1], _GLF_IDENTITY((vec3(0.0, 0.0, 0.0))[2], max((vec3(0.0, 0.0, 0.0))[2], (vec3(0.0, 0.0, 0.0))[2]))), bvec3(true, true, true)))), 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), mat3(mat4x3(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), mix(vec3(_GLF_FUZZED(-46.91), _GLF_FUZZED(-21.66), _GLF_FUZZED(-9985.7177)), vec3((vec3(0.0, 0.0, 0.0))[0], (vec3(0.0, 0.0, 0.0))[1], _GLF_IDENTITY((vec3(0.0, 0.0, 0.0))[2], max((vec3(0.0, 0.0, 0.0))[2], (vec3(0.0, 0.0, 0.0))[2]))), bvec3(true, true, true)))), 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (mat3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)) / mat3(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))) : _GLF_FUZZED(mat3(4.0, 583.228, 0.8, -3.0, -8.7, 2.5, -5223.4019, 41.60, 8.0))))), max(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), mat3(mat4x3(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), vec2(mat4x2(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0))), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-1804.6490)))) / 1.0), 1.0), vec2(1.0, 1.0), vec2(_GLF_IDENTITY(1.0, (1.0) - length(vec2(0.0, 0.0))), 1.0)))))))).x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY((_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) / mat3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0), ((_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) / mat3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))), mix(float(_GLF_IDENTITY(_GLF_FUZZED(896.070), mix(float(_GLF_FUZZED(-3024.3766)), float(_GLF_FUZZED(896.070)), bool(true)))), float(float(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(797.942) : 0.0)), 0.0, 0.0), mat3(mat4x3(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(max(inversesqrt(_GLF_IDENTITY(vec2(-8.8, -48.38), (false ? _GLF_FUZZED(injectionSwitch) : vec2(-8.8, -48.38)))), -53.36)))).y), length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) + 0.0), 1.0, 1.0, 1.0))))))), bool(true))), float(_GLF_IDENTITY(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat3(-8407.6677, 9256.2299, 25.72, 154.833, -1.4, -4.2, -0.4, -9.8, 1.5)) : mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), mat3(mat4x3(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, abs(0.0), 0.0, 0.0), (mat3x2(injectionSwitch, _GLF_IDENTITY(1.0, max(1.0, 1.0)), abs(0.0), 0.0, 0.0)) * mat3(1.0)))).x, 1.0, 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), injectionSwitch.y), length(vec3(0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(0.0), (float(0.0)) - 0.0))), 0.0)), 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x2(4.5, -14.06, 5.6, 386.814, -96.27, 8.2, 396.113, 1.9)) : mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), (float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x2(4.5, -14.06, 5.6, 386.814, -96.27, 8.2, 396.113, 1.9)) : mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))) / 1.0)))), 0.0, 0.0, 0.0, 0.0), (mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, 1.0 * (0.0)), mix(float(_GLF_FUZZED(-4094.6470)), float(_GLF_IDENTITY(0.0, 1.0 * (0.0))), bool(true))), 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(mat3(772.915, -9089.2001, -3.0, -7.4, 3.4, -7910.1622, -5.5, -3.1, -6746.6148)) : _GLF_IDENTITY(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x2(4.5, -14.06, 5.6, 386.814, -96.27, 8.2, 396.113, 1.9)) : mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), (float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x2(4.5, -14.06, 5.6, 386.814, -96.27, 8.2, 396.113, 1.9)) : mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))) / 1.0)))), 0.0, 0.0, 0.0, 0.0), (mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, 1.0 * (0.0)), mix(float(_GLF_FUZZED(-4094.6470)), float(_GLF_IDENTITY(0.0, 1.0 * (0.0))), bool(true))), 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), (true ? _GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x2(4.5, -14.06, 5.6, _GLF_IDENTITY(386.814, 1.0 * (_GLF_IDENTITY(386.814, max(386.814, 386.814)))), -96.27, 8.2, 396.113, 1.9)) : mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), (_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(4.5, min(_GLF_IDENTITY(4.5, mix(float(_GLF_FUZZED(-93.63)), float(4.5), bool(true))), 4.5)), -14.06, 5.6, 386.814, -96.27, 8.2, 396.113, 1.9)) : mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), (true ? _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(4.5, min(_GLF_IDENTITY(4.5, mix(float(_GLF_FUZZED(-93.63)), float(4.5), bool(true))), 4.5)), -14.06, 5.6, 386.814, -96.27, 8.2, 396.113, 1.9)) : mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), min(float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(4.5, min(_GLF_IDENTITY(4.5, mix(float(_GLF_FUZZED(-93.63)), float(4.5), bool(true))), 4.5)), -14.06, 5.6, 386.814, -96.27, 8.2, 396.113, 1.9)) : mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(4.5, min(_GLF_IDENTITY(4.5, mix(float(_GLF_FUZZED(-93.63)), float(4.5), bool(true))), 4.5)), -14.06, 5.6, 386.814, -96.27, 8.2, 396.113, 1.9)) : mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))) : _GLF_FUZZED(-168.426)))) / 1.0)))), 0.0, 0.0, 0.0, 0.0), (mat3(injectionSwitch.x, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-18.85))), _GLF_ONE(1.0, injectionSwitch.y), length(vec3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, 1.0 * (0.0)), mix(float(_GLF_FUZZED(-4094.6470)), float(_GLF_IDENTITY(0.0, 1.0 * (0.0))), bool(true))), 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)) : _GLF_FUZZED(mat3(15.45, -6.7, 57.82, 798.878, 80.53, -9435.6347, -965.318, -944.461, -499.835))))))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))))), bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0), max(vec2(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0), vec2(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0))), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), vec3(mat4(vec3(0.0, 0.0, 1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), determinant(mat4(0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0))), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0), vec2(0.0, 1.0))) + (1.0)), 0.0, 1.0, 0.0)), (_GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), mat3(mat4x3(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), mat3(_GLF_ONE(1.0, injectionSwitch.y)) * (vec3(0.0, 0.0, 0.0)))), 0.0, 0.0, 0.0, 0.0), (mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)) / mat3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, _GLF_IDENTITY((false ? _GLF_FUZZED(cos(8637.9506)) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-848.227)), bool(false)))), (true ? (false ? _GLF_FUZZED(cos(8637.9506)) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-848.227)), bool(false)))) : _GLF_FUZZED(length(vec4(-6978.7334, -162.756, 534.348, -3548.8657))))))) - 0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))), mix(float(_GLF_FUZZED(((- -53.40)))), float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), mat3(mat4x3(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), mix(vec3(_GLF_FUZZED(-46.91), _GLF_FUZZED(-21.66), _GLF_FUZZED(-9985.7177)), vec3((vec3(0.0, 0.0, 0.0))[0], (vec3(0.0, 0.0, 0.0))[1], _GLF_IDENTITY((vec3(0.0, 0.0, 0.0))[2], max((vec3(0.0, 0.0, 0.0))[2], (vec3(0.0, 0.0, 0.0))[2]))), bvec3(true, true, true)))), 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), mat3(mat4x3(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), mix(vec3(_GLF_FUZZED(-46.91), _GLF_FUZZED(-21.66), _GLF_FUZZED(-9985.7177)), vec3((vec3(0.0, 0.0, 0.0))[0], (vec3(0.0, 0.0, 0.0))[1], _GLF_IDENTITY((vec3(0.0, 0.0, 0.0))[2], max((vec3(0.0, 0.0, 0.0))[2], (vec3(0.0, 0.0, 0.0))[2]))), bvec3(true, true, true)))), 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (mat3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)) / mat3(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))) : _GLF_FUZZED(mat3(4.0, 583.228, 0.8, -3.0, -8.7, 2.5, -5223.4019, 41.60, 8.0))))), max(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), mat3(mat4x3(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), vec2(mat4x2(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0))), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-1804.6490)))) / 1.0), 1.0), vec2(1.0, 1.0), vec2(_GLF_IDENTITY(1.0, (1.0) - length(vec2(0.0, 0.0))), 1.0)))))))).x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY((_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) / mat3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0), ((_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) / mat3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))), mix(float(_GLF_IDENTITY(_GLF_FUZZED(896.070), mix(float(_GLF_FUZZED(-3024.3766)), float(_GLF_FUZZED(896.070)), bool(true)))), float(float(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(797.942) : 0.0)), 0.0, 0.0), mat3(mat4x3(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(max(inversesqrt(_GLF_IDENTITY(vec2(-8.8, -48.38), (false ? _GLF_FUZZED(injectionSwitch) : vec2(-8.8, -48.38)))), -53.36)))).y), length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) + 0.0), 1.0, 1.0, 1.0))))))), bool(true))), float(_GLF_IDENTITY(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat3(-8407.6677, 9256.2299, 25.72, 154.833, -1.4, -4.2, -0.4, -9.8, 1.5)) : mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), mat3(mat4x3(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, abs(0.0), 0.0, 0.0), (mat3x2(injectionSwitch, _GLF_IDENTITY(1.0, max(1.0, 1.0)), abs(0.0), 0.0, 0.0)) * mat3(1.0)))).x, 1.0, 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), injectionSwitch.y), length(vec3(0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(0.0), (float(0.0)) - 0.0))), 0.0)), 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x2(4.5, -14.06, 5.6, 386.814, -96.27, 8.2, 396.113, 1.9)) : mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), (float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x2(4.5, -14.06, 5.6, 386.814, -96.27, 8.2, 396.113, 1.9)) : mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))) / 1.0)))), 0.0, 0.0, 0.0, 0.0), (mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, 1.0 * (0.0)), mix(float(_GLF_FUZZED(-4094.6470)), float(_GLF_IDENTITY(0.0, 1.0 * (0.0))), bool(true))), 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(mat3(772.915, -9089.2001, -3.0, -7.4, 3.4, -7910.1622, -5.5, -3.1, -6746.6148)) : _GLF_IDENTITY(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x2(4.5, -14.06, 5.6, 386.814, -96.27, 8.2, 396.113, 1.9)) : mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), (float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x2(4.5, -14.06, 5.6, 386.814, -96.27, 8.2, 396.113, 1.9)) : mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))) / 1.0)))), 0.0, 0.0, 0.0, 0.0), (mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, 1.0 * (0.0)), mix(float(_GLF_FUZZED(-4094.6470)), float(_GLF_IDENTITY(0.0, 1.0 * (0.0))), bool(true))), 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), (true ? _GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x2(4.5, -14.06, 5.6, _GLF_IDENTITY(386.814, 1.0 * (_GLF_IDENTITY(386.814, max(386.814, 386.814)))), -96.27, 8.2, 396.113, 1.9)) : mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), (_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(4.5, min(_GLF_IDENTITY(4.5, mix(float(_GLF_FUZZED(-93.63)), float(4.5), bool(true))), 4.5)), -14.06, 5.6, 386.814, -96.27, 8.2, 396.113, 1.9)) : mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), (true ? _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(4.5, min(_GLF_IDENTITY(4.5, mix(float(_GLF_FUZZED(-93.63)), float(4.5), bool(true))), 4.5)), -14.06, 5.6, 386.814, -96.27, 8.2, 396.113, 1.9)) : mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), min(float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(4.5, min(_GLF_IDENTITY(4.5, mix(float(_GLF_FUZZED(-93.63)), float(4.5), bool(true))), 4.5)), -14.06, 5.6, 386.814, -96.27, 8.2, 396.113, 1.9)) : mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(4.5, min(_GLF_IDENTITY(4.5, mix(float(_GLF_FUZZED(-93.63)), float(4.5), bool(true))), 4.5)), -14.06, 5.6, 386.814, -96.27, 8.2, 396.113, 1.9)) : mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))) : _GLF_FUZZED(-168.426)))) / 1.0)))), 0.0, 0.0, 0.0, 0.0), (mat3(injectionSwitch.x, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-18.85))), _GLF_ONE(1.0, injectionSwitch.y), length(vec3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, 1.0 * (0.0)), mix(float(_GLF_FUZZED(-4094.6470)), float(_GLF_IDENTITY(0.0, 1.0 * (0.0))), bool(true))), 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)) : _GLF_FUZZED(mat3(15.45, -6.7, 57.82, 798.878, 80.53, -9435.6347, -965.318, -944.461, -499.835))))))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))))), bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0), max(vec2(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0), vec2(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0))), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), vec3(mat4(vec3(0.0, 0.0, 1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), determinant(mat4(0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0))), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0), vec2(0.0, 1.0))) + (1.0)), 0.0, 1.0, 0.0)), (float(mat3x4(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), mat3(mat4x3(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), mat3(_GLF_ONE(1.0, injectionSwitch.y)) * (vec3(0.0, 0.0, 0.0)))), 0.0, 0.0, 0.0, 0.0), (mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)) / mat3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, _GLF_IDENTITY((false ? _GLF_FUZZED(cos(8637.9506)) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-848.227)), bool(false)))), (true ? (false ? _GLF_FUZZED(cos(8637.9506)) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-848.227)), bool(false)))) : _GLF_FUZZED(length(vec4(-6978.7334, -162.756, 534.348, -3548.8657))))))) - 0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))), mix(float(_GLF_FUZZED(((- -53.40)))), float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), mat3(mat4x3(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), mix(vec3(_GLF_FUZZED(-46.91), _GLF_FUZZED(-21.66), _GLF_FUZZED(-9985.7177)), vec3((vec3(0.0, 0.0, 0.0))[0], (vec3(0.0, 0.0, 0.0))[1], _GLF_IDENTITY((vec3(0.0, 0.0, 0.0))[2], max((vec3(0.0, 0.0, 0.0))[2], (vec3(0.0, 0.0, 0.0))[2]))), bvec3(true, true, true)))), 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), mat3(mat4x3(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), mix(vec3(_GLF_FUZZED(-46.91), _GLF_FUZZED(-21.66), _GLF_FUZZED(-9985.7177)), vec3((vec3(0.0, 0.0, 0.0))[0], (vec3(0.0, 0.0, 0.0))[1], _GLF_IDENTITY((vec3(0.0, 0.0, 0.0))[2], max((vec3(0.0, 0.0, 0.0))[2], (vec3(0.0, 0.0, 0.0))[2]))), bvec3(true, true, true)))), 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (mat3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)) / mat3(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))) : _GLF_FUZZED(mat3(4.0, 583.228, 0.8, -3.0, -8.7, 2.5, -5223.4019, 41.60, 8.0))))), max(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), mat3(mat4x3(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), vec2(mat4x2(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0))), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-1804.6490)))) / 1.0), 1.0), vec2(1.0, 1.0), vec2(_GLF_IDENTITY(1.0, (1.0) - length(vec2(0.0, 0.0))), 1.0)))))))).x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY((_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) / mat3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0), ((_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) / mat3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))), mix(float(_GLF_IDENTITY(_GLF_FUZZED(896.070), mix(float(_GLF_FUZZED(-3024.3766)), float(_GLF_FUZZED(896.070)), bool(true)))), float(float(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(797.942) : 0.0)), 0.0, 0.0), mat3(mat4x3(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(max(inversesqrt(_GLF_IDENTITY(vec2(-8.8, -48.38), (false ? _GLF_FUZZED(injectionSwitch) : vec2(-8.8, -48.38)))), -53.36)))).y), length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) + 0.0), 1.0, 1.0, 1.0))))))), bool(true))), float(_GLF_IDENTITY(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat3(-8407.6677, 9256.2299, 25.72, 154.833, -1.4, -4.2, -0.4, -9.8, 1.5)) : mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), mat3(mat4x3(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, abs(0.0), 0.0, 0.0), (mat3x2(injectionSwitch, _GLF_IDENTITY(1.0, max(1.0, 1.0)), abs(0.0), 0.0, 0.0)) * mat3(1.0)))).x, 1.0, 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), injectionSwitch.y), length(vec3(0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(0.0), (float(0.0)) - 0.0))), 0.0)), 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x2(4.5, -14.06, 5.6, 386.814, -96.27, 8.2, 396.113, 1.9)) : mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), (float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x2(4.5, -14.06, 5.6, 386.814, -96.27, 8.2, 396.113, 1.9)) : mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))) / 1.0)))), 0.0, 0.0, 0.0, 0.0), (mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, 1.0 * (0.0)), mix(float(_GLF_FUZZED(-4094.6470)), float(_GLF_IDENTITY(0.0, 1.0 * (0.0))), bool(true))), 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(mat3(772.915, -9089.2001, -3.0, -7.4, 3.4, -7910.1622, -5.5, -3.1, -6746.6148)) : _GLF_IDENTITY(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x2(4.5, -14.06, 5.6, 386.814, -96.27, 8.2, 396.113, 1.9)) : mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), (float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x2(4.5, -14.06, 5.6, 386.814, -96.27, 8.2, 396.113, 1.9)) : mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))) / 1.0)))), 0.0, 0.0, 0.0, 0.0), (mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, 1.0 * (0.0)), mix(float(_GLF_FUZZED(-4094.6470)), float(_GLF_IDENTITY(0.0, 1.0 * (0.0))), bool(true))), 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), (true ? _GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x2(4.5, -14.06, 5.6, _GLF_IDENTITY(386.814, 1.0 * (_GLF_IDENTITY(386.814, max(386.814, 386.814)))), -96.27, 8.2, 396.113, 1.9)) : mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), (_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(4.5, min(_GLF_IDENTITY(4.5, mix(float(_GLF_FUZZED(-93.63)), float(4.5), bool(true))), 4.5)), -14.06, 5.6, 386.814, -96.27, 8.2, 396.113, 1.9)) : mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), (true ? _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(4.5, min(_GLF_IDENTITY(4.5, mix(float(_GLF_FUZZED(-93.63)), float(4.5), bool(true))), 4.5)), -14.06, 5.6, 386.814, -96.27, 8.2, 396.113, 1.9)) : mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), min(float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(4.5, min(_GLF_IDENTITY(4.5, mix(float(_GLF_FUZZED(-93.63)), float(4.5), bool(true))), 4.5)), -14.06, 5.6, 386.814, -96.27, 8.2, 396.113, 1.9)) : mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(4.5, min(_GLF_IDENTITY(4.5, mix(float(_GLF_FUZZED(-93.63)), float(4.5), bool(true))), 4.5)), -14.06, 5.6, 386.814, -96.27, 8.2, 396.113, 1.9)) : mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))) : _GLF_FUZZED(-168.426)))) / 1.0)))), 0.0, 0.0, 0.0, 0.0), (mat3(injectionSwitch.x, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-18.85))), _GLF_ONE(1.0, injectionSwitch.y), length(vec3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, 1.0 * (0.0)), mix(float(_GLF_FUZZED(-4094.6470)), float(_GLF_IDENTITY(0.0, 1.0 * (0.0))), bool(true))), 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)) : _GLF_FUZZED(mat3(15.45, -6.7, 57.82, 798.878, 80.53, -9435.6347, -965.318, -944.461, -499.835))))))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))))), bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0), max(vec2(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0), vec2(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0))), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), vec3(mat4(vec3(0.0, 0.0, 1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), determinant(mat4(0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0))), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0), vec2(0.0, 1.0))) + (1.0)), 0.0, 1.0, 0.0))) * 1.0)) - 0.0), float(mat3x4(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), mat3(mat4x3(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), mat3(_GLF_ONE(1.0, injectionSwitch.y)) * (vec3(0.0, 0.0, 0.0)))), 0.0, 0.0, 0.0, 0.0), (mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)) / mat3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, _GLF_IDENTITY((false ? _GLF_FUZZED(cos(8637.9506)) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-848.227)), bool(false)))), (true ? (false ? _GLF_FUZZED(cos(8637.9506)) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-848.227)), bool(false)))) : _GLF_FUZZED(length(vec4(-6978.7334, -162.756, 534.348, -3548.8657))))))) - 0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))), mix(float(_GLF_FUZZED(((- -53.40)))), float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), mat3(mat4x3(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), mix(vec3(_GLF_FUZZED(-46.91), _GLF_FUZZED(-21.66), _GLF_FUZZED(-9985.7177)), vec3((vec3(0.0, 0.0, 0.0))[0], (vec3(0.0, 0.0, 0.0))[1], _GLF_IDENTITY((vec3(0.0, 0.0, 0.0))[2], max((vec3(0.0, 0.0, 0.0))[2], (vec3(0.0, 0.0, 0.0))[2]))), bvec3(true, true, true)))), 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), mat3(mat4x3(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), mix(vec3(_GLF_FUZZED(-46.91), _GLF_FUZZED(-21.66), _GLF_FUZZED(-9985.7177)), vec3((vec3(0.0, 0.0, 0.0))[0], (vec3(0.0, 0.0, 0.0))[1], _GLF_IDENTITY((vec3(0.0, 0.0, 0.0))[2], max((vec3(0.0, 0.0, 0.0))[2], (vec3(0.0, 0.0, 0.0))[2]))), bvec3(true, true, true)))), 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (mat3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)) / mat3(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))) : _GLF_FUZZED(mat3(4.0, 583.228, 0.8, -3.0, -8.7, 2.5, -5223.4019, 41.60, 8.0))))), max(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), mat3(mat4x3(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), vec2(mat4x2(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0))), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-1804.6490)))) / 1.0), 1.0), vec2(1.0, 1.0), vec2(_GLF_IDENTITY(1.0, (1.0) - length(vec2(0.0, 0.0))), 1.0)))))))).x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY((_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) / mat3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0), ((_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) / mat3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))), mix(float(_GLF_IDENTITY(_GLF_FUZZED(896.070), mix(float(_GLF_FUZZED(-3024.3766)), float(_GLF_FUZZED(896.070)), bool(true)))), float(float(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(797.942) : 0.0)), 0.0, 0.0), mat3(mat4x3(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(max(inversesqrt(_GLF_IDENTITY(vec2(-8.8, -48.38), (false ? _GLF_FUZZED(injectionSwitch) : vec2(-8.8, -48.38)))), -53.36)))).y), length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) + 0.0), 1.0, 1.0, 1.0))))))), bool(true))), float(_GLF_IDENTITY(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat3(-8407.6677, 9256.2299, 25.72, 154.833, -1.4, -4.2, -0.4, -9.8, 1.5)) : mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), mat3(mat4x3(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, abs(0.0), 0.0, 0.0), (mat3x2(injectionSwitch, _GLF_IDENTITY(1.0, max(1.0, 1.0)), abs(0.0), 0.0, 0.0)) * mat3(1.0)))).x, 1.0, 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), injectionSwitch.y), length(vec3(0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(0.0), (float(0.0)) - 0.0))), 0.0)), 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x2(4.5, -14.06, 5.6, 386.814, -96.27, 8.2, 396.113, 1.9)) : mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), (float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x2(4.5, -14.06, 5.6, 386.814, -96.27, 8.2, 396.113, 1.9)) : mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))) / 1.0)))), 0.0, 0.0, 0.0, 0.0), (mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, 1.0 * (0.0)), mix(float(_GLF_FUZZED(-4094.6470)), float(_GLF_IDENTITY(0.0, 1.0 * (0.0))), bool(true))), 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(mat3(772.915, -9089.2001, -3.0, -7.4, 3.4, -7910.1622, -5.5, -3.1, -6746.6148)) : _GLF_IDENTITY(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x2(4.5, -14.06, 5.6, 386.814, -96.27, 8.2, 396.113, 1.9)) : mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), (float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x2(4.5, -14.06, 5.6, 386.814, -96.27, 8.2, 396.113, 1.9)) : mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))) / 1.0)))), 0.0, 0.0, 0.0, 0.0), (mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, 1.0 * (0.0)), mix(float(_GLF_FUZZED(-4094.6470)), float(_GLF_IDENTITY(0.0, 1.0 * (0.0))), bool(true))), 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), (true ? _GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x2(4.5, -14.06, 5.6, _GLF_IDENTITY(386.814, 1.0 * (_GLF_IDENTITY(386.814, max(386.814, 386.814)))), -96.27, 8.2, 396.113, 1.9)) : mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), (_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(4.5, min(_GLF_IDENTITY(4.5, mix(float(_GLF_FUZZED(-93.63)), float(4.5), bool(true))), 4.5)), -14.06, 5.6, 386.814, -96.27, 8.2, 396.113, 1.9)) : mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), (true ? _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(4.5, min(_GLF_IDENTITY(4.5, mix(float(_GLF_FUZZED(-93.63)), float(4.5), bool(true))), 4.5)), -14.06, 5.6, 386.814, -96.27, 8.2, 396.113, 1.9)) : mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), min(float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(4.5, min(_GLF_IDENTITY(4.5, mix(float(_GLF_FUZZED(-93.63)), float(4.5), bool(true))), 4.5)), -14.06, 5.6, 386.814, -96.27, 8.2, 396.113, 1.9)) : mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(4.5, min(_GLF_IDENTITY(4.5, mix(float(_GLF_FUZZED(-93.63)), float(4.5), bool(true))), 4.5)), -14.06, 5.6, 386.814, -96.27, 8.2, 396.113, 1.9)) : mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))) : _GLF_FUZZED(-168.426)))) / 1.0)))), 0.0, 0.0, 0.0, 0.0), (mat3(injectionSwitch.x, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-18.85))), _GLF_ONE(1.0, injectionSwitch.y), length(vec3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, 1.0 * (0.0)), mix(float(_GLF_FUZZED(-4094.6470)), float(_GLF_IDENTITY(0.0, 1.0 * (0.0))), bool(true))), 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)) : _GLF_FUZZED(mat3(15.45, -6.7, 57.82, 798.878, 80.53, -9435.6347, -965.318, -944.461, -499.835))))))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))))), bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0), max(vec2(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0), vec2(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0))), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), vec3(mat4(vec3(0.0, 0.0, 1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), determinant(mat4(0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0))), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0), vec2(0.0, 1.0))) + (1.0)), 0.0, 1.0, 0.0)))), clamp(float(mat3x4(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), mat3(mat4x3(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_ONE(1.0, injectionSwitch.y) * (_GLF_IDENTITY(0.0, max(0.0, 0.0))))), (_GLF_IDENTITY(mat3(injectionSwitch.x, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-0.7))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0), (mat3(injectionSwitch.x, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))), mix(float(_GLF_FUZZED(((- -53.40)))), float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), 0.0), mat3(mat3x4(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)))), mat3(mat4x3(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (mat3(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(478.592), _GLF_FUZZED(47.59)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(478.592), _GLF_FUZZED(47.59)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) / vec2(1.0, 1.0)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)) / mat3(1.0, 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))), max(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) / 1.0), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))), mat3(mat4x3(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0, 0.0), vec4(mat4x3(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0, 0.0), clamp(vec4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0, 0.0), vec4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0, 0.0), vec4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0, 0.0))), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-256.100, 25.38)) : injectionSwitch)).y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))) ? _GLF_FUZZED(_GLF_IDENTITY(-50.96, float(mat4x3(-50.96, sqrt(1.0), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 1.0)))) : _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-86.81) : injectionSwitch.x)))), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x3(1.0, 0.0, 1.0, 1.0, 0.0, 1.0), mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat2x3(1.0, 0.0, 1.0, 1.0, 0.0, 1.0), (mat2x3(1.0, 0.0, 1.0, 1.0, 0.0, 1.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), 1.0))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))), mix(float(_GLF_FUZZED(896.070)), float(float(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)))), 0.0)), 0.0, 0.0, 0.0, 0.0), mat3(mat4x3(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(_GLF_IDENTITY(1.0, 0.0 + (1.0)), injectionSwitch.y)), float(_GLF_FUZZED((-0.9))), bool(false))), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0), (true ? _GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED((-0.9))), bool(false))), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0), transpose(transpose(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED((-0.9))), bool(false))), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)))) : _GLF_FUZZED((7002.5267 - mat3(5.0, 1.0, -9.9, 4676.7771, 893.860, -67.14, -643.135, -367.900, 77.40)))))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0)))), 1.0)), 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0))))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))), bool(true))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), mat3(mat4x3(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) + 0.0), 0.0, 0.0, 0.0)) / mat3(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (_GLF_IDENTITY(1.0, max(1.0, 1.0))) - 0.0), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) / mat3(1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-134.752) : _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-27.67))))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))), max(float(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), mat3(mat4x3(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) + 0.0), 0.0, 0.0, 0.0)) / mat3(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), min(max(1.0, 1.0), _GLF_IDENTITY(max(1.0, 1.0), float(mat4x2(max(1.0, 1.0), 0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)))))), (_GLF_IDENTITY(1.0, max(1.0, 1.0))) - 0.0), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))), float(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), length(vec3(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) / 1.0)), float(_GLF_FUZZED(9841.5940)), bool(false))), 0.0, 0.0, 0.0), mat3(mat4x3(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) + 0.0), max(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) + 0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) + 0.0))), 0.0, 0.0, 0.0)) / mat3(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), max(1.0, 1.0)), (_GLF_IDENTITY(1.0, max(1.0, 1.0))) - 0.0), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))))))), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec2(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec4(1.0, 1.0, 0.0, log(1.0))), mix(float(_GLF_FUZZED(8465.2763)), float(_GLF_IDENTITY(float(vec4(1.0, 1.0, 0.0, log(1.0))), (float(vec4(1.0, 1.0, 0.0, log(1.0)))) / 1.0)), bool(true)))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)), float(mat3x4(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), mat3(mat4x3(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, 1.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (mat3(injectionSwitch.x, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) / mat3(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 0.0))), 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-9.4)), float(1.0), bool(true))), 1.0, 1.0)))))), mix(float(_GLF_FUZZED(((- -53.40)))), float(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, mix(float(_GLF_FUZZED(4.3)), float(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x), bool(true))), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-1.1)), bool(false)))), mat3(mat4x3(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, float(mat2x3(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0))), injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) / mat3(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(2.7)), bool(false))), 1.0, 1.0, 1.0, 1.0, 1.0)))))), max(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0)))), float(_GLF_FUZZED(-7.3)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))) && true))))), ! (! (bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))) && true)))))))))), 0.0)), 0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0), mat3(mat4x3(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(-9.0)), float(_GLF_ONE(1.0, injectionSwitch.y)), bool(true))), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(injectionSwitch.x, 1.0, 0.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(-9.0)), float(_GLF_ONE(1.0, injectionSwitch.y)), bool(true))), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(4.3)), float(1.0), bool(true))), 1.0, 1.0))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))), mix(float(_GLF_FUZZED(896.070)), float(float(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), mat3(mat4x3(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0)))), 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(vec2(1.0, 1.0))).x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, exp(0.0), 1.0, abs(1.0)))).y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, exp(0.0), 1.0, abs(1.0)))).y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) / _GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0), transpose(transpose(mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))), bool(true))), float(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), mat3(mat4x3(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY((_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (mat3(injectionSwitch.x, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(97.33))), 1.0, 1.0, 1.0, 1.0))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, float(mat2(0.0, 1.0, 1.0, 1.0)))))) + ((_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), mix(vec3((vec3(0.0, 0.0, 0.0))[0], (vec3(0.0, 0.0, 0.0))[1], _GLF_FUZZED(-106.851)), vec3(_GLF_FUZZED(0.6), _GLF_FUZZED(-1472.3010), (vec3(0.0, 0.0, 0.0))[2]), bvec3(false, false, true)))), 0.0, 0.0, 0.0, 0.0), (mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(vec2(1.0, 1.0))).x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 1.0, 1.0))) / _GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0), mat3(mat4x3(mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))))))))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)), float(mat3x4(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(log(1.0), 1.0, length(vec2(0.0, 0.0)))), dot(vec3(0.0, 1.0, 0.0), vec3(log(1.0), 1.0, length(vec2(0.0, 0.0)))))), _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), mat3(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), mat3(_GLF_IDENTITY(mat4(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)), (true ? _GLF_IDENTITY(mat4(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), min(_GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), (length(vec3(0.0, 0.0, 0.0))) * 1.0), length(vec3(0.0, 0.0, 0.0)))), 0.0, 0.0, 0.0, 0.0)), (mat4(mat3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat4(3751.7976, 796.006, -543.185, -8.8, 102.581, 487.223, -6.9, -81.09, -2.7, -1451.2183, _GLF_IDENTITY(-1042.0998, min(-1042.0998, -1042.0998)), -5.6, 808.908, _GLF_IDENTITY(-4087.5818, mix(float(_GLF_IDENTITY(-4087.5818, min(-4087.5818, -4087.5818))), float(_GLF_FUZZED((-4.7))), bool(false))), -1433.3528, -7707.3179)))))), (_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-9.6)), bool(false))), max(0.0, 0.0))) - 0.0), 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) / mat3(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0)))))), mix(float(_GLF_FUZZED((_GLF_IDENTITY((- -53.40), max(_GLF_IDENTITY((- -53.40), float(mat2x3((- -53.40), 1.0, 1.0, 1.0, 1.0, 0.0))), (- -53.40)))))), float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), mat3(mat4x3(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, (1.0) + 0.0), injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8.0)), float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.7)), float(1.0), bool(true)))), bool(true))), 1.0, 1.0, 1.0))))), _GLF_IDENTITY((_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sin(0.0))), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), mat3(mat4x3(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-66.47, 7.8)) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-693.805), _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(-75.81) : (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(24.39)), bvec2(true, false))))).y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)))), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8.0)), float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.7)), float(1.0), bool(true)))), bool(true))), 1.0, 1.0, 1.0)))))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(_GLF_IDENTITY((_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sin(0.0))), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), mat3(mat4x3(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-66.47, 7.8)) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-693.805), _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(-75.81) : (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(24.39)), bvec2(true, false))))).y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)))), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8.0)), float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.7)), float(1.0), bool(true)))), bool(true))), 1.0, 1.0, 1.0)))))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose((_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sin(0.0))), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), mat3(mat4x3(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-66.47, 7.8)) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-693.805), _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(-75.81) : (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(24.39)), bvec2(true, false))))).y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)))), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8.0)), float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.7)), float(1.0), bool(true)))), bool(true))), 1.0, 1.0, 1.0)))))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))))), max(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), mat3(mat4x3(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(atan(1297.6464, -9.2)) : 0.0)))), 0.0, 0.0, 0.0, 0.0), (mat3(injectionSwitch.x, 1.0, 0.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(float(vec3(_GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((-2.2 + -5618.2630))), float(0.0), bool(true))), 0.0)), abs(1.0))))), min(_GLF_IDENTITY(float(vec3(_GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, abs(1.0))))), clamp(float(vec3(_GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, abs(1.0))))), float(vec3(_GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, abs(1.0))))), float(_GLF_IDENTITY(vec3(_GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, abs(1.0)))), min(vec3(_GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, abs(1.0)))), vec3(_GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, abs(1.0))))))))), float(vec3(_GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, abs(1.0)))))))), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))), mix(float(_GLF_FUZZED(896.070)), _GLF_IDENTITY(float(float(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, 1.0, 1.0, 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))), min(0.0, 0.0)), 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), mat3(mat4x3(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((36.16 - 44.22))), bool(false))), _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), 1.0, 1.0, 1.0, 1.0))) / mat3(1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(vec2(1.0, 0.0))), 1.0, 1.0, 1.0, 1.0))))))), mix(float(float(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), mat3(mat4x3(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat3(injectionSwitch.x, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) / mat3(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(mat2(1.0, 0.0, 1.0, 0.0))), 1.0)), 1.0)), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(vec2(1.0, 0.0))), 1.0, 1.0, 1.0, 1.0)))))), min(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), mat3(mat4x3(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat3(injectionSwitch.x, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) / mat3(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(mat2(1.0, 0.0, 1.0, 0.0))), 1.0)), 1.0)), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(vec2(1.0, 0.0))), 1.0, 1.0, 1.0, 1.0)))))), clamp(float(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), mat3(mat4x3(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat3(injectionSwitch.x, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) / mat3(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(mat2(1.0, 0.0, 1.0, 0.0))), 1.0)), 1.0)), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(vec2(1.0, 0.0))), 1.0, 1.0, 1.0, 1.0)))))), float(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), mat3(mat4x3(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat3(injectionSwitch.x, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) / mat3(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(mat2(1.0, 0.0, 1.0, 0.0))), 1.0)), 1.0)), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(vec2(1.0, 0.0))), 1.0, 1.0, 1.0, 1.0)))))), float(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), mat3(mat4x3(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat3(injectionSwitch.x, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) / mat3(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(mat2(1.0, 0.0, 1.0, 0.0))), 1.0)), 1.0)), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(vec2(1.0, 0.0))), 1.0, 1.0, 1.0, 1.0)))))))), float(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), mat3(mat4x3(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat3(injectionSwitch.x, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) / mat3(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(mat2(1.0, 0.0, 1.0, 0.0))), 1.0)), 1.0)), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(vec2(1.0, 0.0))), 1.0, 1.0, 1.0, 1.0)))))))))), float(_GLF_FUZZED(-32.23)), bool(false))), bool(_GLF_IDENTITY(true, bool(bvec2(true, false)))))), float(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), mat3(mat4x3(_GLF_IDENTITY(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) * vec2(1.0, 1.0)).x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (mat3(injectionSwitch.x, 1.0, 0.0, _GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), float(_GLF_IDENTITY(mat4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(ceil(5.5)) : 1.0)))), min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))))))), 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (1.0) - 0.0))), 1.0, 0.0, length(vec2(_GLF_IDENTITY(0.0, float(vec2(0.0, round(length(normalize(1.0)))))), 0.0)), 1.0, 0.0), transpose(transpose(mat4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, length(vec2(0.0, 0.0)), 1.0, _GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0))))))))), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0, 1.0, 1.0, 1.0))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))))), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, abs(sqrt(1.0)) * (injectionSwitch.x)) < injectionSwitch.y))))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))))), float(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch))) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)))).y, (true ? injectionSwitch.y : _GLF_FUZZED(570.753)))), length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 0.0, 0.0, 0.0), mat3(mat4x3(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)))))))) > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, 0.0, 0.0), mat3x2(mat3x4(mat3x2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, 0.0, 0.0)))))))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))) || false)))))
      break;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        break;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        break;
      }
     continue;
    }
   if(_GLF_DEAD(false))
    break;
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, false || (_injected_loop_counter > 0))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))
        return;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
      break;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-6.3) : injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    return;
   barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            break;
           return;
          }
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       do
        {
         if(_GLF_DEAD(false))
          return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
      }
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec4(_GLF_WRAPPED_IF_TRUE(true), false, true, true))))
      {
       return;
      }
     else
      {
      }
    }
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true && (bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), false || (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(78.00) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) : _GLF_FUZZED(fract(-4500.7211)))) > injectionSwitch.y) && true))))))))))))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               return;
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                }
               else
                {
                }
              }
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
            barrier();
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
             do
              {
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(false))
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                  {
                   return;
                  }
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
                {
                 do
                  {
                   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))
                    {
                     barrier();
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      continue;
                    }
                   else
                    {
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
            {
             if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))
                barrier();
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                }
               else
                {
                }
              }
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && _GLF_IDENTITY(true, ! (! (true))))))
            barrier();
          }
         else
          {
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))));
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             barrier();
            }
          }
         barrier();
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          return;
         if(_GLF_DEAD(false))
          barrier();
        }
       do
        {
         if(_GLF_DEAD(false))
          return;
        }
       while(_GLF_WRAPPED_LOOP(false));
       for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), 0.0, 1.0, 1.0)))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))) || (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))); _injected_loop_counter --)
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                continue;
               do
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                 do
                  {
                   for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                    {
                     barrier();
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (false))))), (injectionSwitch.x > injectionSwitch.y))));
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec4(_GLF_WRAPPED_IF_TRUE(true), true, true, false))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 do
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_DEAD(false))
                    {
                     for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) & 17281); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                      {
                       barrier();
                      }
                    }
                   barrier();
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
            }
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              continue;
             barrier();
            }
           if(_GLF_DEAD(false))
            continue;
          }
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec4(injectionSwitch.x, 0.0, 1.0, 1.0), vec4(mat2(_GLF_IDENTITY(vec4(injectionSwitch.x, 0.0, 1.0, 1.0), clamp(vec4(injectionSwitch.x, 0.0, 1.0, 1.0), vec4(injectionSwitch.x, 0.0, 1.0, 1.0), vec4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))), 0.0, 1.0, 1.0)))))))) > injectionSwitch.y)), true, true, false)))))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    return;
                   barrier();
                  }
                }
               else
                {
                }
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_DEAD(false))
                return;
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > ((0 & 39229) ^ 0)); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                 return;
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    return;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    return;
                   do
                    {
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                   if(_GLF_DEAD(false))
                    return;
                  }
                 barrier();
                }
              }
             else
              {
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                {
                 barrier();
                }
              }
            }
          }
        }
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           barrier();
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(8), int(8))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                {
                 barrier();
                 if(_GLF_DEAD(false))
                  break;
                }
              }
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))))))))
      {
       return;
      }
     else
      {
      }
    }
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))
  {
  }
 else
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))
        break;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        continue;
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), sqrt(_GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) - 0.0))))))))) * (_GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), (injectionSwitch))))) * vec2(1.0, 1.0)).x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(1.0)), bool(false))), min(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(1.0)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(1.0)), bool(false)))))) + abs(0.0)) > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(1.0)), bool(false))), min(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(1.0)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(1.0)), bool(false))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(1.0)), bool(false))), min(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(1.0)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(1.0)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(1.0)), bool(false))), min(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(1.0)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(1.0)), bool(false)))))))) + abs(0.0)) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), false || (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), 1.0 * (float(injectionSwitch.x))), float(_GLF_FUZZED(1.0)), bool(false))), min(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(1.0)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(1.0)), bool(false)))))) + abs(0.0)) > injectionSwitch.y)), (! ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(1.0)), bool(false))), min(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(1.0)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(1.0)), bool(false)))))) + abs(0.0)) > injectionSwitch.y))) || false))))))))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))
          barrier();
         do
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)), ! (_GLF_IDENTITY(! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))), bool(bvec3(! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))), false, true))))))); _injected_loop_counter --)
            {
             do
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
                    {
                     if(_GLF_DEAD(false))
                      continue;
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                      {
                       barrier();
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           if(_GLF_WRAPPED_IF_FALSE(false))
                            {
                            }
                           else
                            {
                             barrier();
                            }
                          }
                         else
                          {
                          }
                         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                          barrier();
                        }
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                      }
                     else
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
                        barrier();
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                    }
                  }
                 else
                  {
                  }
                }
               else
                {
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              {
               if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   barrier();
                  }
                 else
                  {
                  }
                }
               barrier();
              }
            }
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          continue;
         do
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             return;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0))).x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(629.390)), float(injectionSwitch.y), bool(true)))))); _injected_loop_counter ++)
              {
               barrier();
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))))), ! (! (bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 do
  {
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && true)))))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
      }
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     barrier();
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)))))))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      return;
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter ++)
    {
     barrier();
    }
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY((_GLF_IDENTITY(true && (false), (true && (false)) && true)) || false, bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(true && (false), (true && (false)) && true)) || false), bool(bvec3(bool((_GLF_IDENTITY(true && (false), (true && (false)) && true)) || false), true, false)))))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
              {
              }
             else
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (0) ^ 0)); _injected_loop_counter --)
                {
                 barrier();
                 if(_GLF_DEAD(false))
                  {
                   do
                    {
                     return;
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                   if(_GLF_DEAD(false))
                    return;
                  }
                }
              }
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
              barrier();
             if(_GLF_DEAD(false))
              return;
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            return;
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                return;
               barrier();
              }
            }
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              return;
            }
           else
            {
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 else
  {
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           barrier();
          }
         else
          {
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 + (int(3))))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (false ? _GLF_FUZZED(ivec3(-47754, 77488, 10599)[0]) : int(3))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((0 | 0) >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), ! (! (bool(bvec3(false, true, false))))))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), ! (! (bool(bvec3(false, true, false)))))))) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)))) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, true)), _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, true))), ((bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, true)))) && true) && true)), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && ((false))))), true, false, true)), _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, true))), ((bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, true)))) && true) && true)))), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), max(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > ((-3989 ^ (-33795 << -8435)) & 0)); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_DEAD(false))
          continue;
         barrier();
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, true)))))
          return;
        }
       else
        {
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(_GLF_IDENTITY(1, (0 >> _GLF_IDENTITY(int(5), int(5))) ^ (1)), (_GLF_IDENTITY(1, (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) / 1), (int(_GLF_IDENTITY(5, max(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, ~ (~ (5)))) | int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(5, clamp(5, 5, 5)))))) + (0 ^ 0)), int(5), int(5))), _GLF_IDENTITY(int(5), max(int(5), int(5))))) ^ _GLF_IDENTITY((_GLF_IDENTITY(1, (1) | (1))), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY((_GLF_IDENTITY(1, (1) | (1))), ((_GLF_IDENTITY(1, (1) | (1)))) | _GLF_IDENTITY(0, (0) << 0)))))) * 1)); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
          break;
         for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           barrier();
          }
        }
       atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   for(int _injected_loop_counter = (int(_GLF_ONE(1.0, injectionSwitch.y)) & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(8), int(8)))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))))))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        break;
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          return;
        }
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))));
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))) || false))))));
    }
  }
 atomicStore(buf[next_virtual_gid], uint(2), 4, _GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, max(64, 64)), 64, _GLF_IDENTITY(64, (64) | (0 | 0)))), 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) << 0))
    {
     do
      {
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              continue;
             barrier();
            }
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
            barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(0.0) : injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           barrier();
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         barrier();
        }
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))
          break;
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(float(56684u))), bool(false))), injectionSwitch.y))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(float(56684u))), bool(false))), injectionSwitch.y))))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(float(56684u))), bool(false))), injectionSwitch.y)))))))))), false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), ! (! (bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), true)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), ! (! (bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), true)), true, false, false))), _GLF_IDENTITY(! (! (bool(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), true && (! (bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), true)))), _GLF_IDENTITY(bool(bool(! (! (bool(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), true && (! (bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), true)))))), ! (_GLF_IDENTITY(! (bool(bool(! (! (bool(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), true && (! (bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), true))))))), ! (! (! (bool(bool(! (! (bool(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), true && (! (bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), true))))))))))))))))))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (! (false)))))))
            {
             if(_GLF_DEAD(false))
              continue;
             barrier();
            }
           barrier();
          }
        }
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              return;
            }
           barrier();
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))));
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
       if(_GLF_DEAD(false))
        continue;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     do
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           do
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false))
          {
           if(_GLF_DEAD(false))
            return;
           do
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
         else
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             break;
            }
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
         barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
        continue;
       for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), 1 * (int(_GLF_ONE(1.0, injectionSwitch.y)))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter --)
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), true, true, true))))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | 0)); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         else
          {
          }
        }
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), true))), true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))) || false));
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
