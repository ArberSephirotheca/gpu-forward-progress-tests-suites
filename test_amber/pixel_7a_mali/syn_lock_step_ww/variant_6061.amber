#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true && (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), (bool(bvec4(false, true, true, true))) && true))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))))) > injectionSwitch.y))) && true)))) || false)))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)) * (injectionSwitch.y))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4(_GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(! (! (bool(false))), (_GLF_IDENTITY(! (! (bool(false))), false || (! (! (bool(false)))))) || false)))), bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false) && (true)), _GLF_IDENTITY(true, ! (! (true))))))), ! (! (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, true))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(! (! (bool(false))), (_GLF_IDENTITY(! (! (bool(false))), false || (! (! (bool(false)))))) || false)))), bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false) && (true)), _GLF_IDENTITY(true, ! (! (true))))))), ! (! (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, true))))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(! (! (bool(false))), (_GLF_IDENTITY(! (! (bool(false))), false || (! (! (bool(false)))))) || false)))), bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false) && (true)), _GLF_IDENTITY(true, ! (! (true))))))), ! (! (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, true))))))))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((2000.8300 / injectionSwitch)))), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat4x3(mat2(1.0) * (injectionSwitch), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)))))) : _GLF_FUZZED((2000.8300 / injectionSwitch)), min(_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat4x3(mat2(1.0) * (injectionSwitch), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)))))) : _GLF_FUZZED((2000.8300 / injectionSwitch)), min(true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat4x3(mat2(1.0) * (injectionSwitch), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)))))) : _GLF_FUZZED((2000.8300 / injectionSwitch)), true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat4x3(mat2(1.0) * (injectionSwitch), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)))))) : _GLF_FUZZED((2000.8300 / injectionSwitch)))), true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat4x3(mat2(1.0) * (injectionSwitch), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)))))) : _GLF_FUZZED((2000.8300 / injectionSwitch))))))) / vec2(1.0, 1.0)), injectionSwitch)).x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) || false), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), ! (! (((false)))))))) && _GLF_IDENTITY(true, (true) && true)), ((false)) && true) || false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY((_GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), ! (! (((false)))))))) && _GLF_IDENTITY(true, (true) && true), ((_GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), ! (! (((false)))))))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)) && true)), ((false)) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))) || false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(! (! _GLF_IDENTITY(((false)), ! (_GLF_IDENTITY(! (((false))), (! (((false)))) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))))))), (! (! _GLF_IDENTITY(((false)), ! (_GLF_IDENTITY(! (((false))), (! (((false)))) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))))))) || false))) && _GLF_IDENTITY(true, (true) && true)), ((false)) && true) || false, false, false))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY((_GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), ! (! (((false)))))))) && _GLF_IDENTITY(true, (true) && true), ! (! ((_GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), ! (! (((false)))))))) && _GLF_IDENTITY(true, (true) && true))))), ((false)) && true) || false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), ! (! (((false)))))))) && _GLF_IDENTITY(true, _GLF_IDENTITY((true), false || ((true))) && true)), ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! _GLF_IDENTITY((false), true && ((false))), _GLF_IDENTITY(false, ! (! (false))) || (! (false)))) || false), (! (false)) && true)))))))) && true) || false, false, false))), false, true), false))))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((false), ((false)) && true) || false), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ! (! ((false))))), (bool(_GLF_IDENTITY((false), ! (! ((false)))))) && true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ! (! ((false))))), (bool(_GLF_IDENTITY((false), ! (! ((false)))))) && true))), false || (bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ! (! ((false))))), (bool(_GLF_IDENTITY((false), ! (! ((false)))))) && true)))))))))))) && _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, true && (true)), false, _GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), bool(bvec2(true, false))), false)), ! (! (bool(bvec4(_GLF_IDENTITY(true, true && (true)), false, true, false)))))))), ((false)) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(! (! (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ! (! ((false))))), (bool(_GLF_IDENTITY((false), ! (! ((false)))))) && true))))), bool(bvec2(! (! (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ! (! ((false))))), (bool(_GLF_IDENTITY((false), ! (! ((false)))))) && true))))), true))))) && _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, true && (true)), false, _GLF_IDENTITY(true, bool(bvec2(true, false))), false)), ! (! (bool(bvec4(_GLF_IDENTITY(true, true && (true)), false, _GLF_IDENTITY(true, (true) && true), false)))))))), ((false)) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ! (! ((false))))), (bool(_GLF_IDENTITY((false), ! (! ((false)))))) && _GLF_IDENTITY(true, (true) && true)))))))) && _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, true && (true)), false, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, bool(bvec2(true, false))))), ! (! (bool(bool(_GLF_IDENTITY(true, bool(bvec2(true, false))))))))), false)), ! (! (bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), (true && (true)) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))))), false, true, false)))))))), ((false)) && true)))) && true) || _GLF_IDENTITY(false, (false) && true))))), false, true, true)), false || (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((false), ((false)) && true) || false), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ! (! ((false))))), (bool(_GLF_IDENTITY((false), ! (! ((false)))))) && true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ! (! ((false))))), (bool(_GLF_IDENTITY((false), ! (! ((false)))))) && true))), false || (bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ! (! ((false))))), (bool(_GLF_IDENTITY((false), ! (! ((false)))))) && true)))))))))))) && _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, true && (true)), false, _GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), bool(bvec2(true, false))), false)), ! (! (bool(bvec4(_GLF_IDENTITY(true, true && (true)), false, true, false)))))))), ((false)) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(! (! (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ! (! ((false))))), (bool(_GLF_IDENTITY((false), ! (! ((false)))))) && true))))), bool(bvec2(! (! (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ! (! ((false))))), (bool(_GLF_IDENTITY((false), ! (! ((false)))))) && true))))), true))))) && _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, true && (true)), false, _GLF_IDENTITY(true, bool(bvec2(true, false))), false)), ! (! (bool(bvec4(_GLF_IDENTITY(true, true && (true)), false, _GLF_IDENTITY(true, (true) && true), false)))))))), ((false)) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ! (! ((false))))), (bool(_GLF_IDENTITY((false), ! (! ((false)))))) && _GLF_IDENTITY(true, (true) && true)))))))) && _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, true && (true)), false, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, bool(bvec2(true, false))))), ! (! (bool(bool(_GLF_IDENTITY(true, bool(bvec2(true, false))))))))), false)), ! (! (bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), (true && (true)) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))))), false, true, false)))))))), ((false)) && true)))) && true) || _GLF_IDENTITY(false, (false) && true))))), false, true, true)))), bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) || false), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), (! (! ((false)))) || false))) && _GLF_IDENTITY(true, (true) && true)), ((false)) && true) || false)))), false, true, true)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), true))), ((false)) && true) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), ! (_GLF_IDENTITY(! ((false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (_GLF_IDENTITY(! (bool(bvec2(false, true))), (_GLF_IDENTITY(! (bool(bvec2(false, true))), ! (! (! (bool(bvec2(false, true))))))) && true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((false)), true && (! ((false))))), false || (! (_GLF_IDENTITY(! ((false)), true && (! ((false))))))))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(! ((false)), ! (! (_GLF_IDENTITY(! ((false)), true && (! ((false))))))), false, true), true)), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(! ((false)), ! (! (_GLF_IDENTITY(! ((false)), true && (! ((false))))))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(! ((false)), ! (! (_GLF_IDENTITY(! ((false)), true && (! ((false))))))), false, true), true)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(! ((false)), ! (! (_GLF_IDENTITY(! ((false)), true && (! ((false))))))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(! ((false)), ! (! (_GLF_IDENTITY(! ((false)), true && (! ((false))))))), false, _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true)))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(! ((false)), ! (! (_GLF_IDENTITY(! ((false)), true && (! ((false))))))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(! ((false)), ! (! (_GLF_IDENTITY(! ((false)), true && (! ((false))))))), false, _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(! ((false)), ! (! (_GLF_IDENTITY(! ((false)), true && (! ((false))))))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(! ((false)), ! (! (_GLF_IDENTITY(! ((false)), true && (! ((false))))))), false, _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true)))))))))))), false))))))))))) && _GLF_IDENTITY(true, (true) && true)), ((false)) && true) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), ! (_GLF_IDENTITY(! ((false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (_GLF_IDENTITY(! (bool(bvec2(false, true))), (_GLF_IDENTITY(! (bool(bvec2(false, true))), ! (! (! (bool(bvec2(false, true))))))) && true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((false)), true && (! ((false))))), false || (! (_GLF_IDENTITY(! ((false)), true && (! ((false))))))))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(! ((false)), ! (! (_GLF_IDENTITY(! ((false)), true && (! ((false))))))), false, true), true)), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(! ((false)), ! (! (_GLF_IDENTITY(! ((false)), true && (! ((false))))))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(! ((false)), ! (! (_GLF_IDENTITY(! ((false)), true && (! ((false))))))), false, true), true)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(! ((false)), ! (! (_GLF_IDENTITY(! ((false)), true && (! ((false))))))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(! ((false)), ! (! (_GLF_IDENTITY(! ((false)), true && (! ((false))))))), false, _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true)))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(! ((false)), ! (! (_GLF_IDENTITY(! ((false)), true && (! ((false))))))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(! ((false)), ! (! (_GLF_IDENTITY(! ((false)), true && (! ((false))))))), false, _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(! ((false)), ! (! (_GLF_IDENTITY(! ((false)), true && (! ((false))))))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(! ((false)), ! (! (_GLF_IDENTITY(! ((false)), true && (! ((false))))))), false, _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true)))))))))))), false))))))))))) && _GLF_IDENTITY(true, (true) && true)), ((false)) && true) || false)), (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), ! (_GLF_IDENTITY(! ((false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (_GLF_IDENTITY(! (bool(bvec2(false, true))), (_GLF_IDENTITY(! (bool(bvec2(false, true))), ! (! (! (bool(bvec2(false, true))))))) && true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((false)), true && (! ((false))))), false || (! (_GLF_IDENTITY(! ((false)), true && (! ((false))))))))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(! ((false)), ! (! (_GLF_IDENTITY(! ((false)), true && (! ((false))))))), false, true), true)), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(! ((false)), ! (! (_GLF_IDENTITY(! ((false)), true && (! ((false))))))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(! ((false)), ! (! (_GLF_IDENTITY(! ((false)), true && (! ((false))))))), false, true), true)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(! ((false)), ! (! (_GLF_IDENTITY(! ((false)), true && (! ((false))))))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(! ((false)), ! (! (_GLF_IDENTITY(! ((false)), true && (! ((false))))))), false, _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true)))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(! ((false)), ! (! (_GLF_IDENTITY(! ((false)), true && (! ((false))))))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(! ((false)), ! (! (_GLF_IDENTITY(! ((false)), true && (! ((false))))))), false, _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(! ((false)), ! (! (_GLF_IDENTITY(! ((false)), true && (! ((false))))))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(! ((false)), ! (! (_GLF_IDENTITY(! ((false)), true && (! ((false))))))), false, _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true)))))))))))), false))))))))))) && _GLF_IDENTITY(true, (true) && true)), ((false)) && true) || false))) || false)), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), ! (_GLF_IDENTITY(! ((false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (_GLF_IDENTITY(! (bool(bvec2(false, true))), (_GLF_IDENTITY(! (bool(bvec2(false, true))), ! (! (! (bool(bvec2(false, true))))))) && true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((false)), true && (! ((false))))), false || (! (_GLF_IDENTITY(! ((false)), true && (! ((false))))))))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(! ((false)), ! (! (_GLF_IDENTITY(! ((false)), true && (! ((false))))))), false, true), true)), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(! ((false)), ! (! (_GLF_IDENTITY(! ((false)), true && (! ((false))))))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(! ((false)), ! (! (_GLF_IDENTITY(! ((false)), true && (! ((false))))))), false, true), true)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(! ((false)), ! (! (_GLF_IDENTITY(! ((false)), true && (! ((false))))))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(! ((false)), ! (! (_GLF_IDENTITY(! ((false)), true && (! ((false))))))), false, _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true)))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(! ((false)), ! (! (_GLF_IDENTITY(! ((false)), true && (! ((false))))))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(! ((false)), ! (! (_GLF_IDENTITY(! ((false)), true && (! ((false))))))), false, _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(! ((false)), ! (! (_GLF_IDENTITY(! ((false)), true && (! ((false))))))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(! ((false)), ! (! (_GLF_IDENTITY(! ((false)), true && (! ((false))))))), false, _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true)))))))))))), false))))))))))) && _GLF_IDENTITY(true, (true) && true)), ((false)) && true) || false)), (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), ! (_GLF_IDENTITY(! ((false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (_GLF_IDENTITY(! (bool(bvec2(false, true))), (_GLF_IDENTITY(! (bool(bvec2(false, true))), ! (! (! (bool(bvec2(false, true))))))) && true)))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! ((false)), true && (! ((false))))), ((_GLF_IDENTITY(! ((false)), true && (! ((false)))))) || false), false || (! (_GLF_IDENTITY(! ((false)), true && (! ((false))))))))), false, true), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(! ((false)), ! (! (_GLF_IDENTITY(! ((false)), true && (! ((false))))))), false, true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(! ((false)), ! (! (_GLF_IDENTITY(! ((false)), true && (! ((false))))))), false, true), true)), true))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(! ((false)), ! (! (_GLF_IDENTITY(! ((false)), true && (! ((false))))))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(! ((false)), ! (! (_GLF_IDENTITY(! ((false)), true && (! ((false))))))), false, true), true)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(! ((false)), ! (! (_GLF_IDENTITY(! ((false)), true && (! ((false))))))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(! ((false)), ! (! (_GLF_IDENTITY(! ((false)), true && (! ((false))))))), false, _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true)))))), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(! ((false)), ! (! (_GLF_IDENTITY(! ((false)), _GLF_IDENTITY(true && (! ((false))), ! (_GLF_IDENTITY(! (true && (! ((false)))), bool(bvec2(! (true && (! ((false)))), false))))))))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(! ((false)), ! (! (_GLF_IDENTITY(! ((false)), true && (! ((false))))))), false, _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true))))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(! ((false)), ! (! (_GLF_IDENTITY(! ((false)), _GLF_IDENTITY(true && (! ((false))), ! (_GLF_IDENTITY(! (true && (! ((false)))), bool(bvec2(! (true && (! ((false)))), false))))))))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(! ((false)), ! (! (_GLF_IDENTITY(! ((false)), true && (! ((false))))))), false, _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true)))))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(! ((false)), ! (! (_GLF_IDENTITY(! ((false)), _GLF_IDENTITY(true && (! ((false))), ! (_GLF_IDENTITY(! (true && (! ((false)))), bool(bvec2(! (true && (! ((false)))), false))))))))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(! ((false)), ! (! (_GLF_IDENTITY(! ((false)), true && (! ((false))))))), false, _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(! ((false)), ! (! (_GLF_IDENTITY(! ((false)), _GLF_IDENTITY(true && (! ((false))), ! (_GLF_IDENTITY(! (true && (! ((false)))), bool(bvec2(! (true && (! ((false)))), false))))))))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(! ((false)), ! (! (_GLF_IDENTITY(! ((false)), true && (! ((false))))))), false, _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true))))))))), true))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(! ((false)), ! (! (_GLF_IDENTITY(! ((false)), true && (! ((false))))))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(! ((false)), ! (! (_GLF_IDENTITY(! ((false)), true && (! ((false))))))), false, _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true))))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(! ((false)), ! (! (_GLF_IDENTITY(! ((false)), true && (! ((false))))))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(! ((false)), ! (! (_GLF_IDENTITY(! ((false)), true && (! ((false))))))), false, _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true))))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(! ((false)), ! (! (_GLF_IDENTITY(! ((false)), true && (! ((false))))))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(! ((false)), ! (! (_GLF_IDENTITY(! ((false)), true && (! ((false))))))), false, _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true))))))), false))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(! ((false)), ! (! (_GLF_IDENTITY(! ((false)), true && (! ((false))))))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(! ((false)), ! (! (_GLF_IDENTITY(! ((false)), true && (! ((false))))))), false, _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true))))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(! ((false)), ! (! (_GLF_IDENTITY(! ((false)), true && (! ((false))))))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(! ((false)), ! (! (_GLF_IDENTITY(! ((false)), true && (! ((false))))))), false, _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true))))))), false))))), true))))))))), false))))))))))) && _GLF_IDENTITY(true, (true) && true)), ((false)) && _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bool(true))), true)))) || false))) || false))))))))), false, _GLF_IDENTITY(true, bool(bvec3(true, true, false))), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), bool(bool(bool(bvec3(true, true, false))))))), true && (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), bool(bool(bool(bvec3(true, true, false))))))))))))))))), false))), true, false)))), true, true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, (false) || false))), ! (! (! ((_GLF_IDENTITY(false, (false) || false)))))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, (false) || false))), ! (! (! ((_GLF_IDENTITY(false, (false) || false)))))))), false), false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, (false) || false))), ! (! (! ((_GLF_IDENTITY(false, (false) || false)))))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, (false) || false))), ! (! (! ((_GLF_IDENTITY(false, (false) || false)))))))), false), false)))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, (false) || false))), ! (! (! ((_GLF_IDENTITY(false, (false) || false)))))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, (false) || false))), ! (! (! ((_GLF_IDENTITY(false, (false) || false)))))))), false), false))))))) && true)) && true), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(true, (true) && true), true), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) || false), true, _GLF_IDENTITY(true, bool(bvec3(true, true, true)))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) || false), true, _GLF_IDENTITY(true, bool(bvec3(true, true, true)))), true)), false)))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.0), _GLF_FUZZED((5709.7769 + -2.2))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(2449.2017)), float(injectionSwitch[0]), bool(true))))), _GLF_IDENTITY(injectionSwitch[1], (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch[1] : _GLF_FUZZED(-8997.7329))))).y, (injectionSwitch.x > injectionSwitch.y) || false)) && true)))), bool(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(2449.2017)), float(injectionSwitch[0]), bool(true))))), injectionSwitch[1])), mix(vec2(_GLF_FUZZED(-3.3), _GLF_FUZZED(-3.0)), vec2((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(2449.2017)), float(injectionSwitch[0]), bool(true))))), injectionSwitch[1])))[0], (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(2449.2017)), float(injectionSwitch[0]), bool(true))))), injectionSwitch[1])))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).y, (injectionSwitch.x > injectionSwitch.y) || false)) && true))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((false ? _GLF_FUZZED(416.342) : 0.0), _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY((false ? _GLF_FUZZED(416.342) : 0.0), ((false ? _GLF_FUZZED(416.342) : 0.0)) / 1.0), 0.0, 1.0, abs(1.0), 0.0, abs(1.0), 1.0, 1.0)), max(float(mat2x4(_GLF_IDENTITY((false ? _GLF_FUZZED(416.342) : 0.0), ((false ? _GLF_FUZZED(416.342) : 0.0)) / 1.0), 0.0, 1.0, abs(1.0), 0.0, abs(1.0), 1.0, 1.0)), float(mat2x4(_GLF_IDENTITY((false ? _GLF_FUZZED(416.342) : 0.0), ((false ? _GLF_FUZZED(416.342) : 0.0)) / 1.0), 0.0, 1.0, abs(1.0), 0.0, abs(1.0), 1.0, 1.0)))))), 1.0))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (false))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bool(! ((injectionSwitch.x > injectionSwitch.y))))))))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(refract(-8.6, 415.613, inversesqrt(-60.59))) : injectionSwitch.y))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bool(bvec3(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x < injectionSwitch.y)), true)), true, _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))))), ! (! (bool(bool(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))))))))))), ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))))))))), false, false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) && true))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), bool(bool(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ((false)) || false))) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ((false)) || false))) && true)), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ((false)) || false))) && true)), true)))), bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ((false)) || false))) && true)), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ((false)) || false))) && true)), true))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, true && (true)) && (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), bool(bool(bool(bvec3(false, true, true))))))))))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y) || false))))), false), bvec2(bvec2(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))) && true)), false)))))), true, false, false)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, ((injectionSwitch.x > injectionSwitch.y) || false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))), false)))))), true, false, false))), false || (! (bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))), false), bvec2(bvec2(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))), false)))))), true, false, false)))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / _GLF_IDENTITY(sqrt(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-21.60)))), float(_GLF_FUZZED(0.6)), bool(false))), 1.0, 1.0))), max(_GLF_IDENTITY(sqrt(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-21.60)))), float(_GLF_FUZZED(0.6)), bool(false))), 1.0, 1.0))), (sqrt(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-21.60)))), float(_GLF_FUZZED(0.6)), bool(false))), 1.0, 1.0)))) - 0.0), sqrt(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-21.60)))), float(_GLF_FUZZED(0.6)), bool(false))), 1.0, 1.0))))), min((injectionSwitch.x) / sqrt(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-21.60)))), float(_GLF_FUZZED(0.6)), bool(false))), 1.0, 1.0))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(7.8)), float(injectionSwitch.x), bool(true))), (injectionSwitch.x) - _GLF_IDENTITY(sqrt(0.0), (_GLF_IDENTITY(sqrt(0.0), mix(float(sqrt(0.0)), float(_GLF_FUZZED(-5796.3408)), bool(false)))) + log(1.0)))) / sqrt(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-21.60))), float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, true && (true)) ? 1.0 : _GLF_FUZZED(-21.60))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-21.60))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-21.60))), _GLF_IDENTITY(1.0, _GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(-21.60)), ((true ? 1.0 : _GLF_FUZZED(-21.60))) + 0.0))), min(clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-3.5) : 1.0)), (true ? 1.0 : _GLF_FUZZED(-21.60))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-21.60))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(-21.60), (true ? 1.0 : _GLF_FUZZED(-21.60)) / 1.0)))), clamp(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-21.60))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-21.60))), (false ? _GLF_FUZZED(36.49) : _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-21.60))))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-21.60))))))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), exp(0.0), _GLF_IDENTITY(sin(0.0), 0.0 + (_GLF_IDENTITY(sin(0.0), mix(float(sin(0.0)), float(_GLF_FUZZED(7.9)), bool(false))))))))), float(_GLF_FUZZED(0.6)), bool(false))), 1.0, 1.0))), max(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(8594.1014)), bool(false))), 0.0) + (injectionSwitch)), injectionSwitch)).x, mix(float(_GLF_FUZZED((vec4(-70.12, 2115.8054, -84.94, -6.5).w + -88.26))), float(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(8594.1014)), bool(false))), 0.0) + (injectionSwitch)), injectionSwitch)).x), bool(true)))), max((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch)).x), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0)))) / vec2(1.0, 1.0)) + (injectionSwitch)), injectionSwitch)).x))) / sqrt(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-21.60)))), float(_GLF_FUZZED(0.6)), bool(false))), 1.0, 1.0))), _GLF_IDENTITY((injectionSwitch.x) / sqrt(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-21.60)))), float(_GLF_FUZZED(0.6)), bool(_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-21.60)))), float(_GLF_FUZZED(0.6)), bool(false))), sqrt(0.0), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-517.632)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_ONE(1.0, injectionSwitch.y)), transpose(_GLF_IDENTITY(transpose(mat2x4(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-21.60)))), _GLF_IDENTITY(float(_GLF_FUZZED(0.6)), 1.0 * (_GLF_IDENTITY(float(_GLF_FUZZED(0.6)), clamp(_GLF_IDENTITY(float(_GLF_FUZZED(0.6)), clamp(float(_GLF_FUZZED(0.6)), float(_GLF_FUZZED(0.6)), float(_GLF_FUZZED(0.6)))), _GLF_IDENTITY(float(_GLF_FUZZED(0.6)), min(float(_GLF_FUZZED(0.6)), _GLF_IDENTITY(float(_GLF_FUZZED(0.6)), clamp(float(_GLF_FUZZED(0.6)), float(_GLF_FUZZED(0.6)), _GLF_IDENTITY(float(_GLF_FUZZED(0.6)), mix(float(_GLF_FUZZED(-0.1)), float(_GLF_IDENTITY(float(_GLF_FUZZED(0.6)), (float(_GLF_FUZZED(0.6))) * 1.0)), bool(true))))))), float(_GLF_FUZZED(0.6)))))), bool(false))), sqrt(0.0), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(determinant(mat2(-9.3, 88.05, -0.2, 721.681))))), 1.0, _GLF_ONE(1.0, injectionSwitch.y))), transpose(transpose(transpose(mat2x4(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(-21.60), (_GLF_IDENTITY(_GLF_FUZZED(-21.60), clamp(_GLF_FUZZED(-21.60), _GLF_FUZZED(-21.60), _GLF_FUZZED(-21.60)))) * 1.0), max(true ? 1.0 : _GLF_FUZZED(-21.60), true ? 1.0 : _GLF_FUZZED(-21.60)))))), float(_GLF_IDENTITY(_GLF_FUZZED(0.6), (true ? _GLF_IDENTITY(_GLF_FUZZED(0.6), 0.0 + (_GLF_FUZZED(0.6))) : _GLF_FUZZED(-212.302)))), bool(false))), sqrt(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))))))), float(mat2x4(float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-21.60)))), float(_GLF_FUZZED(0.6)), bool(false))), sqrt(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), transpose(_GLF_IDENTITY(transpose(mat2x4(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-21.60)))), float(_GLF_FUZZED(0.6)), bool(false))), sqrt(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), transpose(transpose(transpose(mat2x4(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-21.60)))), float(_GLF_FUZZED(0.6)), bool(false))), _GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) - 0.0), 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))))))), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0)))), (true ? (injectionSwitch.x) / _GLF_IDENTITY(sqrt(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-21.60)))), float(_GLF_FUZZED(0.6)), bool(false))), 1.0, 1.0))), (_GLF_IDENTITY(sqrt(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-21.60)))), float(_GLF_FUZZED(0.6)), bool(false))), 1.0, 1.0))), (sqrt(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-21.60)))), float(_GLF_FUZZED(0.6)), bool(false))), 1.0, 1.0)))) / 1.0)) * 1.0) : _GLF_FUZZED(46.50)))))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), true, true))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))) || (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(exp(971.214)))) > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(exp(971.214)))) > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(float(12698u))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false))), bool(bool(_GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(exp(971.214)), max(_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(exp(971.214)), (true ? injectionSwitch.x : _GLF_FUZZED(exp(971.214))) - 0.0), true ? injectionSwitch.x : _GLF_FUZZED(exp(971.214)))))) > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false || (bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(exp(971.214)))) > injectionSwitch.y), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(trunc(min(-425.114, -59.83))))) > injectionSwitch.y)), false)))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) - 0.0, (false ? _GLF_FUZZED(-98.43) : (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) - 0.0))))), float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0)), (float(mat4x2(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0))) * 1.0)), _GLF_IDENTITY((injectionSwitch.x) / 1.0, min(_GLF_IDENTITY((injectionSwitch.x) / 1.0, min((injectionSwitch.x) / 1.0, (injectionSwitch.x) / 1.0)), _GLF_IDENTITY((injectionSwitch.x) / 1.0, float(mat3x2((injectionSwitch.x) / 1.0, 0.0, 0.0, 0.0, 1.0, 1.0))))))) - 0.0))), 0.0, 1.0, sqrt(0.0), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), determinant(mat3(1.0, 0.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), 0.0, 0.0, 0.0, 1.0)), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 1.0, determinant(_GLF_IDENTITY(mat4(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), min(float(mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), float(mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), 0.0), (_GLF_IDENTITY(mat4(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), min(float(mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), float(mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), 0.0), (_GLF_IDENTITY(mat4(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), min(float(mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), float(mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), 0.0), (true ? mat4(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), min(float(mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), float(mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), 0.0) : _GLF_FUZZED(mat4(4.9, 5.2, -3.2, 13.85, 3123.3180, 2418.6726, 67.95, -5635.0250, -2.2, 335.522, -3.6, -2292.1038, 65.00, 0.8, -401.186, -9.0))))) - mat4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), vec2(mat2((injectionSwitch), length(0.0), 0.0)))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))), false || (! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0))))).y), false || ((injectionSwitch.x > injectionSwitch.y)))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, bool(bool(false))), false, false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(((false)) || false, (((false)) || false) || false))))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), true, true, true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 0.0, 0.0, length(vec2(0.0, 0.0)), 0.0)), vec2(mat2x3(vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(97.26)), bvec2(true, false)))) - vec2(0.0, 0.0)), 0.0, 0.0, length(vec2(0.0, 0.0)), 0.0)), 0.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(atan(vec2(98.19, -7312.3918), vec2(99.50, 6.0))))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), false)), bool(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), false)), (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), false))) && true), false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))) && true)) && true))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (true ? _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((gl_NumWorkGroups.x), min((gl_NumWorkGroups.x), (gl_NumWorkGroups.x))) - 0u) : _GLF_FUZZED(subgroup_id)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0, 0.0))).y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_DEAD(false)) || false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-38.42) : injectionSwitch.x)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(65.59)), float(injectionSwitch.x), bool(true))))))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-6039.2497)), bool(false))) > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(_GLF_DEAD(false), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) - 0u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), ((injectionSwitch) + vec2(0.0, 0.0)) / vec2(1.0, 1.0))), min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-728.341)), vec2(_GLF_FUZZED(5.0), _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(-792.426) : _GLF_IDENTITY((injectionSwitch)[1], float(vec3((injectionSwitch)[1], 1.0, 0.0)))))), bvec2(false, true))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) + vec2(0.0, 0.0))) / vec2(1.0, 1.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, (1.0) * 1.0), _GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) + 0.0))))))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)) * subgroup_size) >> (uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((true), true && ((true))) || false) ? subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_id), max(true ? subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_id), _GLF_IDENTITY(true ? subgroup_id * subgroup_size : _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id))), 0u ^ (_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u) : _GLF_FUZZED(workgroup_id), (false ? _GLF_IDENTITY(_GLF_FUZZED(uaddCarry(workgroup_base, workgroup_id, workgroup_size)), (_GLF_FUZZED(uaddCarry(workgroup_base, workgroup_id, workgroup_size))) - (0u << _GLF_IDENTITY(uint(4u), uint(4u)))) : true ? subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_id)))))))))) | 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | 0u, ((subgroup_size) | 0u) - 0u))))) | 0u)), ((subgroup_id * subgroup_size)) | (_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) >> 0u))) >> (uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) | (_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) >> 0u))) >> (uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) | (_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) >> 0u))) >> (uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u))), ((_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) | (_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) >> 0u))) >> (uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u)))) << 0u)) - 0u) - 0u), (_GLF_IDENTITY(true ? subgroup_id * subgroup_size : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(workgroup_id)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_FUZZED(workgroup_id)), (true ? (_GLF_FUZZED(workgroup_id)) : _GLF_FUZZED(uint((mat3(640.408, -878.948, 2835.1924, 146.499, -8.1, 803.909, 9.7, 3.5, -9769.4294) == mat3(4.0, -5.7, 68.41, -5.4, 7.0, 3.4, -52.86, -70.36, -8.2))))))), clamp(_GLF_IDENTITY((~ (_GLF_FUZZED(workgroup_id))), 0u | ((~ (_GLF_FUZZED(workgroup_id))))), (~ (_GLF_FUZZED(workgroup_id))), (~ (_GLF_FUZZED(workgroup_id))))), (_GLF_IDENTITY(~ _GLF_IDENTITY((~ (_GLF_FUZZED(workgroup_id))), clamp(_GLF_IDENTITY((~ (_GLF_FUZZED(workgroup_id))), 0u | ((~ (_GLF_FUZZED(workgroup_id))))), (~ (_GLF_FUZZED(workgroup_id))), (~ (_GLF_FUZZED(workgroup_id))))), min(~ _GLF_IDENTITY((~ (_GLF_FUZZED(workgroup_id))), clamp(_GLF_IDENTITY((~ (_GLF_FUZZED(workgroup_id))), 0u | ((~ (_GLF_FUZZED(workgroup_id))))), (~ (_GLF_FUZZED(workgroup_id))), (~ (_GLF_FUZZED(workgroup_id))))), ~ _GLF_IDENTITY((~ (_GLF_FUZZED(workgroup_id))), clamp(_GLF_IDENTITY((~ (_GLF_FUZZED(workgroup_id))), 0u | ((~ (_GLF_FUZZED(workgroup_id))))), (~ (_GLF_FUZZED(_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 0u, 0u, 1u)))))), (~ (_GLF_FUZZED(workgroup_id)))))))) << (0u << _GLF_IDENTITY(uint(8u), uint(8u)))), 0u + (_GLF_IDENTITY(~ _GLF_IDENTITY((~ (_GLF_FUZZED(_GLF_IDENTITY(workgroup_id, 0u ^ (workgroup_id))))), clamp(_GLF_IDENTITY((~ (_GLF_FUZZED(workgroup_id))), 0u | ((~ (_GLF_FUZZED(workgroup_id))))), (~ (_GLF_FUZZED(workgroup_id))), (~ (_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), 0u | (_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_FUZZED(workgroup_id))))))))), (_GLF_IDENTITY(~ _GLF_IDENTITY((~ (_GLF_FUZZED(workgroup_id))), clamp(_GLF_IDENTITY((~ (_GLF_FUZZED(workgroup_id))), 0u | ((~ (_GLF_FUZZED(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))))))), (~ (_GLF_FUZZED(workgroup_id))), (~ (_GLF_FUZZED(workgroup_id))))), min(~ _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_FUZZED(workgroup_id)), ((_GLF_FUZZED(workgroup_id))) | 0u)), clamp(_GLF_IDENTITY((~ (_GLF_FUZZED(workgroup_id))), 0u | ((~ (_GLF_FUZZED(workgroup_id))))), (~ (_GLF_FUZZED(workgroup_id))), (~ (_GLF_FUZZED(workgroup_id))))), ~ _GLF_IDENTITY((~ (_GLF_FUZZED(workgroup_id))), clamp(_GLF_IDENTITY((~ (_GLF_FUZZED(workgroup_id))), 0u | ((~ (_GLF_FUZZED(workgroup_id))))), (~ (_GLF_FUZZED(workgroup_id))), (~ (_GLF_FUZZED(workgroup_id)))))))) << (0u << _GLF_IDENTITY(uint(8u), uint(8u)))))))))), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(workgroup_id)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_FUZZED(workgroup_id)), (true ? (_GLF_FUZZED(workgroup_id)) : _GLF_FUZZED(uint((mat3(640.408, -878.948, 2835.1924, 146.499, -8.1, 803.909, 9.7, 3.5, -9769.4294) == mat3(4.0, -5.7, 68.41, -5.4, 7.0, 3.4, -52.86, -70.36, -8.2))))))), clamp(_GLF_IDENTITY((~ (_GLF_FUZZED(workgroup_id))), 0u | ((~ (_GLF_FUZZED(workgroup_id))))), (~ (_GLF_FUZZED(workgroup_id))), (~ _GLF_IDENTITY((_GLF_FUZZED(workgroup_id)), ((_GLF_FUZZED(workgroup_id))) | 0u)))), (_GLF_IDENTITY(~ _GLF_IDENTITY((~ (_GLF_FUZZED(workgroup_id))), clamp(_GLF_IDENTITY((~ (_GLF_FUZZED(workgroup_id))), 0u | ((~ (_GLF_FUZZED(workgroup_id))))), (~ (_GLF_FUZZED(workgroup_id))), (~ (_GLF_FUZZED(workgroup_id))))), min(~ _GLF_IDENTITY((~ (_GLF_FUZZED(workgroup_id))), clamp(_GLF_IDENTITY((~ (_GLF_FUZZED(workgroup_id))), 0u | ((~ (_GLF_FUZZED(workgroup_id))))), (~ (_GLF_FUZZED(workgroup_id))), (_GLF_IDENTITY(~ (_GLF_FUZZED(workgroup_id)), 0u | (_GLF_IDENTITY(~ (_GLF_FUZZED(workgroup_id)), min(~ (_GLF_FUZZED(workgroup_id)), ~ (_GLF_FUZZED(workgroup_id))))))))), ~ _GLF_IDENTITY((~ (_GLF_FUZZED(workgroup_id))), clamp(_GLF_IDENTITY((~ (_GLF_FUZZED(workgroup_id))), 0u | (_GLF_IDENTITY((~ (_GLF_FUZZED(workgroup_id))), uint(uint((~ (_GLF_FUZZED(workgroup_id)))))))), (~ (_GLF_FUZZED(_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 0u, 0u, 1u)))))), (~ (_GLF_FUZZED(workgroup_id)))))))) << (0u << _GLF_IDENTITY(uint(8u), uint(8u)))), 0u + (_GLF_IDENTITY(~ _GLF_IDENTITY((~ (_GLF_FUZZED(_GLF_IDENTITY(workgroup_id, 0u ^ (workgroup_id))))), clamp(_GLF_IDENTITY((~ (_GLF_FUZZED(workgroup_id))), 0u | ((~ (_GLF_FUZZED(workgroup_id))))), (~ (_GLF_FUZZED(workgroup_id))), (~ (_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), 0u | (_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_FUZZED(workgroup_id))))))))), (_GLF_IDENTITY(~ _GLF_IDENTITY((~ (_GLF_FUZZED(workgroup_id))), clamp(_GLF_IDENTITY((~ (_GLF_FUZZED(workgroup_id))), 0u | ((~ (_GLF_FUZZED(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))))))), (~ (_GLF_FUZZED(workgroup_id))), (~ (_GLF_FUZZED(workgroup_id))))), min(~ _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_FUZZED(workgroup_id)), ((_GLF_FUZZED(workgroup_id))) | 0u)), clamp(_GLF_IDENTITY((~ (_GLF_FUZZED(workgroup_id))), 0u | ((~ (_GLF_FUZZED(workgroup_id))))), (~ (_GLF_FUZZED(workgroup_id))), (~ (_GLF_FUZZED(workgroup_id))))), ~ _GLF_IDENTITY((~ (_GLF_FUZZED(workgroup_id))), clamp(_GLF_IDENTITY((~ (_GLF_FUZZED(workgroup_id))), _GLF_IDENTITY(0u | ((~ (_GLF_FUZZED(workgroup_id)))), (0u | ((~ (_GLF_FUZZED(workgroup_id))))) - (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))), (~ (_GLF_FUZZED(workgroup_id))), (~ (_GLF_FUZZED(workgroup_id)))))))) << (0u << _GLF_IDENTITY(uint(8u), uint(8u))))))))))))), max(true ? _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size), ~ (~ ((subgroup_id * subgroup_size)))) >> 0u) : _GLF_FUZZED(workgroup_id), true ? subgroup_id * subgroup_size : _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)))))))) | 0u)) << _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(997.105)), bool(false)))), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) >> 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, uint(uvec3(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(max(subgroup_base, subgroup_base), 0u + (max(subgroup_base, subgroup_base))))) | (subgroup_base)), 0u, 1u))), (_GLF_IDENTITY(subgroup_base, uint(uvec3(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base))) | (subgroup_base)), 0u, 1u)))) << 0u)) : subgroup_base)) + subgroup_local_id, max(workgroup_base + subgroup_base + subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + subgroup_base, min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + subgroup_base, _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + subgroup_base)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u), min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u), _GLF_IDENTITY(min(workgroup_base, workgroup_base), (min(workgroup_base, workgroup_base)) << 0u)) + subgroup_base, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u), _GLF_IDENTITY(min(workgroup_base, workgroup_base), (min(workgroup_base, workgroup_base)) << 0u)) + subgroup_base)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base))) >> 0u), min(workgroup_base, workgroup_base)) + subgroup_base, min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_base, (true ? _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) << 0u), clamp(subgroup_base, subgroup_base, subgroup_base)), subgroup_base), 0u | (max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) << 0u), clamp(subgroup_base, subgroup_base, subgroup_base)), subgroup_base)))) : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), min(workgroup_base, workgroup_base)) + subgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + subgroup_base, min(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), (_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, (true) && true)) ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), ~ (~ (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))))), _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))) : _GLF_FUZZED(subgroup_local_id))) + subgroup_base)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + subgroup_base, min(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(min(workgroup_base, workgroup_base), _GLF_IDENTITY(1u, (1u) << 0u) * (_GLF_IDENTITY(min(workgroup_base, workgroup_base), _GLF_IDENTITY((min(workgroup_base, workgroup_base)) >> 0u, 0u ^ ((min(workgroup_base, workgroup_base)) >> 0u)))))) + subgroup_base, _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + subgroup_base))), ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), min(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(min(workgroup_base, workgroup_base), _GLF_IDENTITY(1u, (1u) << 0u) * (_GLF_IDENTITY(min(workgroup_base, workgroup_base), _GLF_IDENTITY(_GLF_IDENTITY((min(workgroup_base, workgroup_base)) >> 0u, max(_GLF_IDENTITY((min(workgroup_base, workgroup_base)) >> 0u, min((min(workgroup_base, workgroup_base)) >> 0u, (min(workgroup_base, workgroup_base)) >> 0u)), (min(workgroup_base, workgroup_base)) >> 0u)), 0u ^ ((min(workgroup_base, workgroup_base)) >> 0u)))))) + subgroup_base, _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + subgroup_base)))) / 1u) >> 0u))) + subgroup_local_id));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))), min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(7.1, max(7.1, 7.1)), -987.978)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), _GLF_IDENTITY(mat2(mat3x2(transpose(mat2(1.0)))), mat2(1.0) * (mat2(mat3x2(transpose(mat2(1.0))))))))) * (injectionSwitch)))).y), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mix(vec2(_GLF_FUZZED(-288.148), _GLF_FUZZED(810.766)), vec2((_GLF_FUZZED(injectionSwitch))[0], (_GLF_FUZZED(injectionSwitch))[1]), bvec2(true, true))) : _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))), min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(7.1, -987.978)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), _GLF_IDENTITY(mat2(mat3x2(transpose(mat2(1.0)))), mat2(1.0) * (mat2(mat3x2(transpose(mat2(1.0))))))))) * (injectionSwitch)))).y), true && ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + _GLF_IDENTITY((injectionSwitch), abs(vec2(1.0, 1.0)) * ((injectionSwitch)))))), min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(7.1, -987.978)) : _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), _GLF_IDENTITY(mat2(mat3x2(transpose(mat2(1.0)))), mat2(1.0) * (mat2(mat3x2(transpose(mat2(1.0))))))))), mat2(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), _GLF_IDENTITY(mat2(mat3x2(transpose(mat2(1.0)))), mat2(1.0) * (mat2(mat3x2(transpose(mat2(1.0))))))))))) * (injectionSwitch)))).y))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false, true)))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), true, false, true))))) || false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, false)), (bool(bvec3(_GLF_DEAD(false), true, false))) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, true))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, false)))))), false)), ! (! (bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))) || false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + subgroup_base, min(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) * _GLF_IDENTITY(1u, ~ (~ (1u)))))) + _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_id) : subgroup_local_id)) + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(6851)))))) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) | (0u))), (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), (0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (_GLF_IDENTITY((subgroup_size), ~ (_GLF_IDENTITY(~ ((subgroup_size)), _GLF_IDENTITY(min(~ ((subgroup_size)), ~ ((subgroup_size))), 0u ^ (min(~ ((subgroup_size)), ~ ((subgroup_size)))))))))) | _GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, max(0u, 0u))))) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 1u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))), subgroup_size))))), _GLF_IDENTITY((subgroup_size) / 1u, (true ? (subgroup_size) / 1u : _GLF_FUZZED(subgroup_size)))), ((_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_id) : subgroup_local_id)) + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(6851)))))) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) | (0u))), (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), (0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (_GLF_IDENTITY((subgroup_size), ~ (_GLF_IDENTITY(~ ((subgroup_size)), _GLF_IDENTITY(min(~ ((subgroup_size)), ~ ((subgroup_size))), 0u ^ (min(~ ((subgroup_size)), ~ ((subgroup_size)))))))))) | _GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, max(0u, 0u))))) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 1u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))), subgroup_size))))), _GLF_IDENTITY((subgroup_size) / 1u, (true ? (subgroup_size) / 1u : _GLF_FUZZED(subgroup_size))))) << 0u)), (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec3(subgroup_local_id, 0u, 1u)), 0u ^ (uint(uvec3(subgroup_local_id, 0u, 1u))))))) + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (_GLF_IDENTITY(true, bool(bool(true))) ? 1 : _GLF_FUZZED(6851)))))) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), ! (! (true))) ? _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) - (0u >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) | (uint(6u)))))) | 0u) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), min(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), min(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size))), _GLF_FUZZED(subgroup_size)))) | 0u))), (subgroup_size) / 1u)), (((subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (_GLF_IDENTITY(true, bool(bool(true))) ? 1 : _GLF_FUZZED(6851)))))) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), min(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), min(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size))), _GLF_FUZZED(subgroup_size)))) | 0u), (0u ^ 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), min(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), min(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size))), _GLF_FUZZED(subgroup_size)))) | _GLF_IDENTITY(0u, (0u) / 1u)), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), min(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), min(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size))), _GLF_FUZZED(subgroup_size)))) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), min(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), min(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size))), _GLF_FUZZED(subgroup_size)))) | 0u), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), min(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), min(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size))), _GLF_FUZZED(subgroup_size)))) | 0u))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), min(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), min(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size))), _GLF_FUZZED(subgroup_size)))) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), min(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), min(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size))), _GLF_FUZZED(subgroup_size)))) | 0u), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), min(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), min(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size))), _GLF_FUZZED(subgroup_size)))) | 0u))))), 0u ^ (min(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), min(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), min(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size))), _GLF_FUZZED(subgroup_size)))) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), min(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), min(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size))), _GLF_FUZZED(subgroup_size)))) | 0u), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), min(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), min(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size))), _GLF_FUZZED(subgroup_size)))) | 0u))))))) : _GLF_FUZZED(subgroup_id)))))))), (subgroup_size) / 1u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) - 0u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[virtual_gid], uint(1), 4, _GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, (64) ^ _GLF_IDENTITY(0, (0) >> 0)), 64, _GLF_IDENTITY(64, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(64, 0, 1, 0), (ivec4(64, 0, 1, 0)) >> ivec4(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))) ^ 0), 0, 0, 0))), 0 ^ (int(_GLF_IDENTITY(ivec4(64, 0, 1, 0), (ivec4(64, 0, 1, 0)) >> ivec4(_GLF_IDENTITY(0, min(0, 0)), 0, 0, 0)))))))), 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) : _GLF_FUZZED(refract(-8911.3100, sqrt(4.5), -9000.0386))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, false, false)))))))), ! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_IDENTITY(true, bool(bvec2(true, true)))))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, false, false)))))))), ! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_IDENTITY(true, bool(bvec2(true, true)))))))))), bool(bool((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, false, false)))))))), ! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_IDENTITY(true, bool(bvec2(true, true))))))))))))))) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false) || false, ((false) || false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(vec4(_GLF_IDENTITY(-372.094, (-372.094) - sqrt(length(0.0))), 396.088, -1.2, 1.0), mix(vec4(_GLF_FUZZED(vec3(-781.458, -6.8, -12.74).b), _GLF_FUZZED(-44.00), _GLF_FUZZED(16.34), _GLF_FUZZED((-9485.6471 + -5439.3367))), vec4((vec4(-372.094, _GLF_IDENTITY(396.088, (true ? 396.088 : _GLF_FUZZED(-28.16))), -1.2, 1.0))[0], (vec4(-372.094, 396.088, -1.2, 1.0))[1], (vec4(-372.094, 396.088, -1.2, 1.0))[2], (vec4(-372.094, 396.088, -1.2, 1.0))[3]), bvec4(true, true, true, true))), max(_GLF_IDENTITY(_GLF_IDENTITY(vec4(_GLF_IDENTITY(-372.094, (-372.094) - sqrt(length(0.0))), 396.088, -1.2, 1.0), mix(vec4(_GLF_FUZZED(vec3(-781.458, -6.8, -12.74).b), _GLF_FUZZED(-44.00), _GLF_FUZZED(16.34), _GLF_FUZZED((-9485.6471 + -5439.3367))), vec4((vec4(-372.094, _GLF_IDENTITY(396.088, (true ? 396.088 : _GLF_FUZZED(-28.16))), -1.2, 1.0))[0], (vec4(-372.094, 396.088, -1.2, 1.0))[1], (vec4(-372.094, 396.088, -1.2, 1.0))[2], (vec4(-372.094, 396.088, -1.2, 1.0))[3]), bvec4(true, true, true, true))), mix(vec4(_GLF_FUZZED(-2.8), (_GLF_IDENTITY(vec4(_GLF_IDENTITY(-372.094, (-372.094) - sqrt(length(0.0))), 396.088, -1.2, 1.0), mix(vec4(_GLF_FUZZED(vec3(-781.458, -6.8, -12.74).b), _GLF_FUZZED(-44.00), _GLF_FUZZED(16.34), _GLF_FUZZED((-9485.6471 + -5439.3367))), vec4((vec4(-372.094, _GLF_IDENTITY(396.088, (true ? 396.088 : _GLF_FUZZED(-28.16))), -1.2, 1.0))[0], (vec4(-372.094, 396.088, -1.2, 1.0))[1], (vec4(-372.094, 396.088, -1.2, 1.0))[2], (vec4(-372.094, 396.088, -1.2, 1.0))[3]), bvec4(true, true, true, true))))[1], (_GLF_IDENTITY(vec4(_GLF_IDENTITY(-372.094, (-372.094) - sqrt(length(0.0))), 396.088, -1.2, 1.0), mix(vec4(_GLF_FUZZED(vec3(-781.458, -6.8, -12.74).b), _GLF_FUZZED(-44.00), _GLF_FUZZED(16.34), _GLF_FUZZED((-9485.6471 + -5439.3367))), vec4((vec4(-372.094, _GLF_IDENTITY(396.088, (true ? 396.088 : _GLF_FUZZED(-28.16))), -1.2, 1.0))[0], (vec4(-372.094, 396.088, -1.2, 1.0))[1], (vec4(-372.094, 396.088, -1.2, 1.0))[2], (vec4(-372.094, 396.088, -1.2, 1.0))[3]), bvec4(true, true, true, true))))[2], (_GLF_IDENTITY(vec4(_GLF_IDENTITY(-372.094, (-372.094) - sqrt(length(0.0))), 396.088, -1.2, 1.0), mix(vec4(_GLF_FUZZED(vec3(-781.458, -6.8, -12.74).b), _GLF_FUZZED(-44.00), _GLF_FUZZED(16.34), _GLF_FUZZED((-9485.6471 + -5439.3367))), vec4((vec4(-372.094, _GLF_IDENTITY(396.088, (true ? 396.088 : _GLF_FUZZED(-28.16))), -1.2, 1.0))[0], (vec4(-372.094, 396.088, -1.2, 1.0))[1], (vec4(-372.094, 396.088, -1.2, 1.0))[2], (vec4(-372.094, 396.088, -1.2, 1.0))[3]), bvec4(true, true, true, true))))[3]), vec4((_GLF_IDENTITY(vec4(_GLF_IDENTITY(-372.094, (-372.094) - sqrt(length(0.0))), 396.088, -1.2, 1.0), mix(vec4(_GLF_FUZZED(vec3(-781.458, -6.8, -12.74).b), _GLF_FUZZED(-44.00), _GLF_FUZZED(16.34), _GLF_FUZZED((-9485.6471 + -5439.3367))), vec4((vec4(-372.094, _GLF_IDENTITY(396.088, (true ? 396.088 : _GLF_FUZZED(-28.16))), -1.2, 1.0))[0], (vec4(-372.094, 396.088, -1.2, 1.0))[1], (vec4(-372.094, 396.088, -1.2, 1.0))[2], (vec4(-372.094, 396.088, -1.2, 1.0))[3]), bvec4(true, true, true, true))))[0], _GLF_FUZZED(-2.6), _GLF_FUZZED(vec2(4563.2452, -6.7).g), _GLF_FUZZED(-7.8)), bvec4(true, false, false, false))), _GLF_IDENTITY(_GLF_IDENTITY(vec4(_GLF_IDENTITY(-372.094, _GLF_IDENTITY((-372.094) - sqrt(length(0.0)), min((-372.094) - sqrt(length(0.0)), _GLF_IDENTITY((-372.094) - sqrt(length(0.0)), float(mat3x2((-372.094) - sqrt(length(0.0)), 0.0, 1.0, 1.0, 1.0, 0.0)))))), 396.088, _GLF_IDENTITY(-1.2, float(mat2(-1.2, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))), 1.0), mix(vec4(_GLF_FUZZED(vec3(-781.458, -6.8, -12.74).b), _GLF_FUZZED(-44.00), _GLF_FUZZED(16.34), _GLF_FUZZED((-9485.6471 + -5439.3367))), vec4((vec4(-372.094, _GLF_IDENTITY(396.088, (true ? 396.088 : _GLF_FUZZED(-28.16))), -1.2, 1.0))[0], (vec4(-372.094, 396.088, -1.2, 1.0))[1], (vec4(-372.094, _GLF_IDENTITY(396.088, float(vec3(396.088, _GLF_ZERO(0.0, injectionSwitch.x), 1.0))), -1.2, 1.0))[2], (vec4(-372.094, 396.088, -1.2, 1.0))[3]), bvec4(true, true, true, true))), (_GLF_IDENTITY(vec4(_GLF_IDENTITY(-372.094, (-372.094) - sqrt(length(0.0))), 396.088, -1.2, 1.0), mix(vec4(_GLF_FUZZED(vec3(-781.458, -6.8, -12.74).b), _GLF_FUZZED(-44.00), _GLF_FUZZED(16.34), _GLF_FUZZED((-9485.6471 + -5439.3367))), vec4((vec4(-372.094, _GLF_IDENTITY(396.088, (true ? 396.088 : _GLF_FUZZED(-28.16))), -1.2, 1.0))[0], (vec4(-372.094, 396.088, -1.2, 1.0))[1], (vec4(-372.094, 396.088, -1.2, 1.0))[2], (vec4(-372.094, 396.088, -1.2, 1.0))[3]), bvec4(true, true, true, true)))) - vec4(0.0, 0.0, 0.0, 0.0)))).s)), float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x), bool(true))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(dot(976.431, -74.21)), mix(float(true ? injectionSwitch.y : _GLF_FUZZED(dot(976.431, -74.21))), float(_GLF_FUZZED(-2.7)), bool(false)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && (false)))))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), false || (bool(_GLF_IDENTITY(true, ! (! (true)))))))) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), _GLF_IDENTITY(true, false || (true)))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-905.544)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, (true) || false))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) ^ 0), (false ? _GLF_FUZZED(-24661) : _GLF_IDENTITY(2, (2) ^ 0)))), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(6.4, -3.8)))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - _GLF_IDENTITY(vec2(0.0, 0.0), vec2(mat4(vec2(0.0, 0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, sqrt(0.0), _GLF_IDENTITY(dot(vec2(abs(0.0), 0.0), vec2(exp(0.0), 1.0)), dot(vec2(abs(0.0), 0.0), vec2(exp(0.0), 1.0))), 0.0, 1.0, 0.0)))).x < injectionSwitch.y))))), true, false, true))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
