#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size;
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(624.790)), vec2(_GLF_FUZZED(-3156.7761), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)).x > injectionSwitch.y)) || (false))))
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), ((true)) || false)), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y)))), true)), false || (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y)))), true))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y)))), true)), false || (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y)))), true))))))), bool(bvec3(bool(bool(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y)))), true)), false || (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y)))), true))))))), true, false)))))), bool(bvec3(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), mix(vec2(_GLF_FUZZED(8732.2485), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[1]), vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[0], _GLF_FUZZED(float((mat3(6074.8103, -2.4, -3.8, -1.0, 6.1, 3045.2777, -57.70, 3.9, -393.251) != mat3(3.3, -8.8, 8.9, 12.58, 2.6, 2.3, -6.1, 1224.0364, 4.3))))), bvec2(true, false))).x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x < injectionSwitch.y)), false, false, true)))) && true)), true, true))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     else
      {
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
              barrier();
             barrier();
            }
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_ONE(1.0, injectionSwitch.y))))));
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false), false))))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), (false) && true)))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), true, false, false))), bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))))
          {
           do
            {
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(! (false), true, true)), bool(bvec4(bool(bvec3(! (false), true, true)), _GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y)) || (false)), true))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(! (false), true, true)), bool(bvec4(bool(bvec3(! (false), true, true)), _GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y)) || (false)), true)))))), true && (! ((_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(! (false), true, true)), bool(bvec4(bool(bvec3(! (false), true, true)), _GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y)) || (false)), true)))))))))))), true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(_GLF_IDENTITY(bvec2(! (! (false)), true), bvec2(bvec4(bvec2(! (! (false)), true), true, true)))))), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), true, false)), (bool(bvec3((false), true, false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))), (bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))))) && true)), false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), true, false)), (bool(bvec3((false), true, false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))), (bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))))) && true)), false))), true))))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || ((false))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))))))))))))), bool(bvec3(bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(_GLF_IDENTITY(bvec2(! (! (false)), true), bvec2(bvec4(bvec2(! (! (false)), true), true, true)))))), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), true, false)), (bool(bvec3((false), true, false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))), (bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))))) && true)), false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), true, false)), (bool(bvec3((false), true, false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))), (bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))))) && true)), false))), true))))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || ((false))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))))))))))))), false, false))))), bool(bvec4((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false))))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))))))))))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x)) < injectionSwitch.y)), true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)))) && true)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))))))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool(! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), false, true, false)), bool(bool(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, true, false))))))))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))) && true))))
        barrier();
      }
     else
      {
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   else
    {
    }
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x = subgroup_local_id;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])))).x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.y = _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(min(workgroup_size, _GLF_IDENTITY(workgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size))), (~ (workgroup_size)) / 1u)))), 1u * (min(workgroup_size, workgroup_size))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.y * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   do
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false))))
        barrier();
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               barrier();
              }
             else
              {
              }
            }
           for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))
                barrier();
              }
             else
              {
               barrier();
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true) || false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), false || (bool(bvec2(_GLF_DEAD(false), true))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), false || (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), true, false)), bvec2(bvec2(bvec2(bvec4(bvec2(false, false), true, false))))))))), true)))))), ! (! ((! (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), false || (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), true, false)), bvec2(bvec2(bvec2(bvec4(bvec2(false, false), true, false))))))))), true)))))))))), true, false, false)), (bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec4(bvec2(_GLF_DEAD(false), true), false, false)))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), false || (bool(bvec2(_GLF_DEAD(false), true))))), bool(bvec4((_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), false || (bool(bvec2(_GLF_DEAD(false), true))))), true, true, true))))), true, false, false))) || false))))
      {
       for(int _injected_loop_counter = ((0 | 0) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4))), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     do
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bool(false))), (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_IDENTITY(true && (_GLF_DEAD(false)), false || (_GLF_IDENTITY(true && (_GLF_DEAD(false)), true && (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false))) && (_GLF_DEAD(false))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), (! (_GLF_WRAPPED_IF_TRUE(true))) || false))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) | (0)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y)))) || false), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))))))) || _GLF_IDENTITY(false, true && (false))); _injected_loop_counter ++)
          {
           barrier();
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), true && (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), ! (! (! (_GLF_WRAPPED_IF_TRUE(true))))))))))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, (false ? _GLF_FUZZED(findLSB(-37427)) : _GLF_IDENTITY(7, 0 | (7))))), _GLF_IDENTITY(int(7), max(int(7), int(7)))))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | int(_GLF_ZERO(0.0, injectionSwitch.x)))); _injected_loop_counter --)
      {
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (false || (false)))))))
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       for(int _injected_loop_counter = int(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(7, ~ (~ (7))), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(7, ~ (~ (7))), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))))), 0 ^ (int(ivec2(_GLF_IDENTITY(7, ~ (~ (7))), ((_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec3(ivec2(1, 0), 0))))) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))))))))), int(7))), ((0 << _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(7, ~ (~ (7))), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(7, ~ (~ (7))), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))))), 0 ^ (int(ivec2(_GLF_IDENTITY(7, ~ (~ (7))), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))))))))), int(7)))) / 1), ((0 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY(~ (~ (7)), (~ (~ (7))) / 1))), int(7)))) / (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), 0 | (_GLF_IDENTITY(int(7), min(int(7), int(7))))))), clamp((1 << _GLF_IDENTITY(int(7), int(7))), (1 << _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, (false ? _GLF_FUZZED(bitfieldExtract(26195, _injected_loop_counter, floatBitsToInt(-3.1))) : 7))))), (1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) ^ 0))))), _GLF_IDENTITY(max(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), int(7))), clamp((1 << _GLF_IDENTITY(int(7), int(7))), (1 << _GLF_IDENTITY(int(7), int(7))), (1 << _GLF_IDENTITY(int(7), int(7))))), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), int(7))), clamp((1 << _GLF_IDENTITY(int(7), int(7))), (1 << _GLF_IDENTITY(int(7), int(7))), (1 << _GLF_IDENTITY(int(7), int(7)))))), (max(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), int(7))), clamp((1 << _GLF_IDENTITY(int(7), int(7))), (1 << _GLF_IDENTITY(int(7), int(7))), (1 << _GLF_IDENTITY(int(7), int(7))))), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), int(7))), clamp((1 << _GLF_IDENTITY(int(7), int(7))), (1 << _GLF_IDENTITY(int(7), int(7))), (1 << _GLF_IDENTITY(int(7), int(7))))))) | (_GLF_IDENTITY(max(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), int(7))), clamp((1 << _GLF_IDENTITY(int(7), int(7))), (1 << _GLF_IDENTITY(int(7), int(7))), (1 << _GLF_IDENTITY(int(7), int(7))))), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), int(7))), clamp((1 << _GLF_IDENTITY(int(7), int(7))), (1 << _GLF_IDENTITY(int(7), int(7))), (1 << _GLF_IDENTITY(int(7), int(7)))))), min(max(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), int(7))), clamp((1 << _GLF_IDENTITY(int(7), int(7))), (1 << _GLF_IDENTITY(int(7), int(7))), (1 << _GLF_IDENTITY(int(7), int(7))))), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), int(7))), clamp((1 << _GLF_IDENTITY(int(7), int(7))), (1 << _GLF_IDENTITY(int(7), int(7))), (1 << _GLF_IDENTITY(int(7), int(7)))))), max(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), int(7))), clamp((1 << _GLF_IDENTITY(int(7), int(7))), (1 << _GLF_IDENTITY(int(7), int(7))), (1 << _GLF_IDENTITY(int(7), int(7))))), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), int(7))), clamp((1 << _GLF_IDENTITY(int(7), int(7))), (1 << _GLF_IDENTITY(int(7), int(7))), (1 << _GLF_IDENTITY(int(7), int(7))))))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), 0 | (int(7))), int(7))))); _injected_loop_counter --)
        {
         barrier();
        }
      }
    }
   else
    {
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint subgroup_base = _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u))), uint(_GLF_IDENTITY(uvec2(~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u))), (70856u & 0u)), (_GLF_IDENTITY(uvec2(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u), (subgroup_id * subgroup_size) ^ 0u))), (70856u & 0u)), uvec2(1u, 1u) * (uvec2(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u), (subgroup_id * subgroup_size) ^ 0u))), (70856u & _GLF_IDENTITY(0u, (0u) | 0u)))))) - uvec2(0u, 0u)))));
 for(int _injected_loop_counter = (-7094 & (0 >> _GLF_IDENTITY(int(0), int(0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false))))
    barrier();
   do
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), true && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), ! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))), ! (! ((_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), ! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))))), ! (! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))))))))
        {
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
      }
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(determinant(mat2(-1.0, -8222.1690, -12.44, -7.2))))) > injectionSwitch.y))));
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) && true));
  }
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), (vec4(injectionSwitch, 0.0, 1.0)) * mat4(1.0)))).x), float(_GLF_FUZZED(355.785)), bool(false))) > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 1.0, 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0)), (vec2(mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 0.0))) / vec2(1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch[0] : _GLF_FUZZED(552.407))), injectionSwitch[1])), _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch)), _GLF_IDENTITY(min((true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - log(vec2(1.0, 1.0))) : _GLF_FUZZED(injectionSwitch))), (min((true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))) : _GLF_FUZZED(injectionSwitch)), (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch)))) / exp(vec2(0.0, 0.0))))), injectionSwitch)).y))))
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + subgroup_base, uint(uvec4(workgroup_base + subgroup_base, 0u, 0u, 1u))) + _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size, (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size, _GLF_IDENTITY(uvec2(uvec2(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size)), (uvec2(uvec2(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size))) | uvec2(0u, 0u)))) | uvec2(0u, 0u)).x, max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + subgroup_base, uint(uvec4(workgroup_base + subgroup_base, 0u, 0u, 1u))) + _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size, (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size, _GLF_IDENTITY(uvec2(uvec2(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size)), (uvec2(uvec2(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size))) | uvec2(0u, 0u)))) | uvec2(0u, 0u)).x, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + subgroup_base, uint(uvec4(workgroup_base + subgroup_base, 0u, 0u, 1u))) + _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size, (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size, _GLF_IDENTITY(uvec2(uvec2(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size)), (uvec2(uvec2(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size))) | uvec2(0u, 0u)))) | uvec2(0u, 0u)).x));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (! (false)) && true)) && true)))))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, true)), (bool(bvec4(_GLF_DEAD(false), false, false, true))) || false)))
        barrier();
       barrier();
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (ivec2(-45160, 28778).t & (0 | 0))); _injected_loop_counter --)
      {
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(_GLF_IDENTITY(((1 ^ int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0))) & 1), ((_GLF_IDENTITY((1 ^ int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0))) & 1, int(ivec3(_GLF_IDENTITY((1 ^ int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0))) & 1, (false ? _GLF_FUZZED(54643) : (1 ^ int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0))) & 1)), 0, 1))))) ^ 0), (_GLF_IDENTITY(((1 ^ int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0))) & 1), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY((1 ^ int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0))) & 1, int(ivec3(_GLF_IDENTITY((1 ^ int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0))) & 1, (false ? _GLF_FUZZED(54643) : (1 ^ int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0))) & 1)), 0, 1))), (_GLF_IDENTITY((1 ^ int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0))) & 1, int(ivec3(_GLF_IDENTITY((1 ^ int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0))) & 1, (false ? _GLF_FUZZED(54643) : (1 ^ int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0))) & 1)), 0, 1)))) >> 0))), (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY((1 ^ int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0))) & 1, int(ivec3(_GLF_IDENTITY((1 ^ int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0))) & 1, (false ? _GLF_FUZZED(54643) : (1 ^ int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0))) & 1)), 0, 1))), (_GLF_IDENTITY((1 ^ int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0))) & 1, int(ivec3(_GLF_IDENTITY((1 ^ int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0))) & 1, (false ? _GLF_FUZZED(54643) : (1 ^ int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0))) & 1)), 0, 1)))) >> 0))), (((_GLF_IDENTITY(_GLF_IDENTITY((1 ^ int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0))) & 1, int(ivec3(_GLF_IDENTITY((1 ^ int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0))) & 1, (false ? _GLF_FUZZED(54643) : (1 ^ int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0))) & 1)), 0, 1))), (_GLF_IDENTITY((1 ^ int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0))) & 1, int(ivec3(_GLF_IDENTITY((1 ^ int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0))) & 1, (false ? _GLF_FUZZED(54643) : (1 ^ int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0))) & 1)), 0, 1)))) >> 0)))) << 0)) * ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) >> 0))) >> _GLF_IDENTITY(int(4), int(4)))) ^ 0)) / 1)); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
    barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + subgroup_base)), (_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + subgroup_base))) >> 0u)) * 1u) + _GLF_IDENTITY((_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1) % subgroup_size, max(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x, (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(0u), uint(0u))), (~ (_GLF_IDENTITY(uint(0u), uint(0u)))) | 0u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(0u), uint(0u))), (~ (_GLF_IDENTITY(uint(0u), uint(0u)))) | 0u))))))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), (false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size, ~ (~ (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size, _GLF_IDENTITY(uvec2(_GLF_IDENTITY(uvec2(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size), clamp(uvec2(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size), uvec2(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size), uvec2(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size)))), min(uvec2(_GLF_IDENTITY(uvec2(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size), clamp(uvec2(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size), uvec2(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size), uvec2(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size)))), uvec2(_GLF_IDENTITY(uvec2(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size), clamp(uvec2(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size), uvec2(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size), uvec2(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size)))))))))).x, (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, uint(uint(0u)))), uint(0u)), (false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY(uint(0u), uint(0u)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(0u), uint(0u))), (~ (_GLF_IDENTITY(uint(0u), uint(0u)))) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) * 1u)) / 1u)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(0u), uint(0u))), (~ (_GLF_IDENTITY(uint(0u), uint(0u)))) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) * 1u)) / 1u))) | 0u)))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (0u) - 0u)))), uint(0u)))))) + 1), clamp((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x, (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x) / (_GLF_IDENTITY(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) >> 0u), min((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u), uint(0u)), _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(uvec4(_GLF_IDENTITY(uint(0u), clamp(uint(0u), uint(0u), uint(0u))), 1u, ((1u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) - 0u))) >> _GLF_IDENTITY(uint(1u), uint(1u))), 1u))), uint(_GLF_IDENTITY(0u, (0u) >> (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))), (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false) ? _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), ~ (~ (uvec4(0u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))))), min(uint(uvec4(0u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)), uint(_GLF_IDENTITY(uvec4(0u, 1u, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), _GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), ~ (~ (uvec4(0u, 1u, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), _GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))))))))), uint(0u))), ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(0u, (0u) << 0u), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)), min(uint(uvec4(0u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)), uint(uvec4(0u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)))))), uint(0u)))) | ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)), min(uint(uvec4(0u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)), uint(uvec4(0u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)))))), uint(0u))))) >> _GLF_IDENTITY(uint(0u), uint(0u)) : _GLF_FUZZED(virtual_gid))))))) + 1), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x, (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(0u), (uint(0u)) | (uint(0u)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(0u), (uint(0u)) | (uint(0u)))), uint(uvec4(_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(0u), (uint(0u)) | (uint(0u)))), ~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(uint(0u), (uint(0u)) | (uint(0u))))), (~ (~ (_GLF_IDENTITY(uint(0u), (uint(0u)) | (uint(0u)))))) / 1u))), 0u, 0u, 0u)))) | (~ (_GLF_IDENTITY(uint(0u), (uint(0u)) | _GLF_IDENTITY((uint(0u)), _GLF_IDENTITY(uint(uvec2((uint(0u)), 1u)), clamp(uint(uvec2((uint(0u)), 1u)), uint(uvec2((uint(0u)), 1u)), uint(uvec2((uint(0u)), 1u)))))))))))))) + 1, _GLF_IDENTITY(max(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x, (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(uint(0u), uint(0u)))))) + 1, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x, max(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x, _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x, max(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x, GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x)))), (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), clamp(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(uint(0u), uint(0u)))), _GLF_IDENTITY(uint(0u), uint(0u)))))) + 1), (_GLF_IDENTITY(max(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x, (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(uint(0u), uint(0u)))))) + 1, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x, max(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x, _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x, max(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x, GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x)))), (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), clamp(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(uint(0u), uint(0u)))), _GLF_IDENTITY(uint(0u), uint(0u)))))) + 1), (max(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x, (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(uint(0u), uint(0u)))))) + 1, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x, max(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x, _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x, max(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x, GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x)))), (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), clamp(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(uint(0u), uint(0u)))), _GLF_IDENTITY(uint(0u), uint(0u)))))) + 1)) / 1u)) | (_GLF_IDENTITY(max(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x, (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(uint(0u), uint(0u)))))) + 1, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x, max(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x, _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x, max(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x, GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x)))), (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), clamp(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(uint(0u), uint(0u)))), _GLF_IDENTITY(uint(0u), uint(0u)))))) + 1), (false ? _GLF_FUZZED(workgroup_id) : max(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x, (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(uint(0u), uint(0u)))))) + 1, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x, max(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x, _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x, max(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x, GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x)))), (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), clamp(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(uint(0u), uint(0u)))), _GLF_IDENTITY(uint(0u), uint(0u)))))) + 1))))))), _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x, (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size, (_GLF_IDENTITY(true ? GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size : _GLF_FUZZED(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size), (true ? GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size : _GLF_FUZZED(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size)) | (true ? GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size : _GLF_FUZZED(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size))))).x) / ((1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (true ? uint(0u) : _GLF_FUZZED(clamp(subgroup_base, uint(-5.5), subgroup_local_id)))))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) + 1), uint(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x, (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(uint(false)) : _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 1u))))), min(0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, max(0u, 0u)))))))))) + 1), 0u, 0u, 0u), (_GLF_IDENTITY(uvec4((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x, (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size, ~ (~ (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size))).x) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) + 1), 0u, 0u, 0u), (uvec4((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x, (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size, ~ (~ (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size))).x) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) + 1), 0u, 0u, 0u)) << uvec4(0u, 0u, 0u, 0u))) - uvec4(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) >> 0u), _GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u)))))) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size, uvec2(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size[0], GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size[1])).x + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) << 0), 1))), 0u | ((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size, uvec2(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size[0], GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size[1])).x + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) << 0), 1))))) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), (true ? subgroup_size : _GLF_FUZZED(subgroup_size)))) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1) % subgroup_size, max(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x, (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x) / _GLF_IDENTITY(((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, min(0u, 0u))), uint(0u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(0u), uint(0u))), (~ (_GLF_IDENTITY(uint(0u), uint(0u)))) | 0u)))) >> _GLF_IDENTITY(uint(0u), uint(0u))), (true ? ((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(0u), uint(0u))), (~ (_GLF_IDENTITY(uint(0u), uint(0u)))) | 0u))), (false ? _GLF_FUZZED(workgroup_base) : 1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(0u), uint(0u))), (~ (_GLF_IDENTITY(uint(0u), uint(0u)))) | 0u)))))) >> _GLF_IDENTITY(uint(0u), uint(0u))) : _GLF_FUZZED(num_workgroup)))) + 1), clamp((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x, (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x) / (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), ~ (_GLF_IDENTITY(~ (uint(0u)), min(~ (uint(0u)), ~ (uint(0u)))))))) >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) - 0u)), min((_GLF_IDENTITY(1u, (1u) | (1u)) << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(uint(0u), uint(0u)))), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (true ? uint(1u) : _GLF_FUZZED(174180u))))), 0u, 0u)), (true ? uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(uint(0u), uint(0u)))), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (true ? uint(1u) : _GLF_FUZZED(174180u))))), 0u, 0u)) : _GLF_FUZZED(subgroup_local_id))))) >> _GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), (true ? (1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)) : _GLF_FUZZED(virtual_gid))))))) + 1), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x, (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x) / _GLF_IDENTITY((_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), uint(_GLF_IDENTITY(uvec2((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), 0u), (true ? _GLF_IDENTITY(uvec2((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), 0u), (uvec2((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), 0u)) | (uvec2((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), 0u))) : _GLF_FUZZED(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size)))))), max((_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), uint(_GLF_IDENTITY(uvec2((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), 0u), (true ? _GLF_IDENTITY(uvec2((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), 0u), (uvec2((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), 0u)) | (uvec2((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), 0u))) : _GLF_FUZZED(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size)))))), _GLF_IDENTITY((_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), uint(_GLF_IDENTITY(uvec2((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), 0u), (true ? _GLF_IDENTITY(uvec2((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), 0u), (uvec2((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), 0u)) | (uvec2((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), 0u))) : _GLF_FUZZED(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size)))))), clamp((_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), uint(_GLF_IDENTITY(uvec2((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), 0u), (true ? _GLF_IDENTITY(uvec2((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), 0u), (uvec2((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), 0u)) | (uvec2((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), 0u))) : _GLF_FUZZED(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size)))))), _GLF_IDENTITY((_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), uint(_GLF_IDENTITY(uvec2((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), 0u), (true ? _GLF_IDENTITY(uvec2((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), 0u), (uvec2((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), 0u)) | (uvec2((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), 0u))) : _GLF_FUZZED(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size)))))), ~ (~ ((_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), uint(_GLF_IDENTITY(uvec2((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), 0u), (true ? _GLF_IDENTITY(uvec2((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), 0u), (uvec2((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), 0u)) | (uvec2((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), 0u))) : _GLF_FUZZED(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size))))))))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), uint(_GLF_IDENTITY(uvec2((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), 0u), (true ? _GLF_IDENTITY(uvec2((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), 0u), (uvec2((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), 0u)) | (uvec2((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), 0u))) : _GLF_FUZZED(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size))))))))))) + 1, max(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size, min(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size, min(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size, GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size)), GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size)), (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size, min(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size, min(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size, GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size)), GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size))) * ((uvec2(1u, 1u) << _GLF_IDENTITY(uvec2(5u), _GLF_IDENTITY(uvec2(5u), (uvec2(5u)) - uvec2(0u, 0u)))) >> _GLF_IDENTITY(uvec2(5u), uvec2(5u))))) | (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size)).x, (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) + 1, _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x, (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) + 1))), _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x, (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) + 1), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size, (true ? GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size : _GLF_FUZZED(uvec2(103699u, 120918u)))), uvec2(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size, (true ? GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size : _GLF_FUZZED(uvec2(103699u, 120918u)))), (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size, (true ? GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size : _GLF_FUZZED(uvec2(103699u, 120918u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size, (true ? GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size : _GLF_FUZZED(uvec2(103699u, 120918u)))), uvec2(uvec4(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size, (true ? GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size : _GLF_FUZZED(uvec2(103699u, 120918u)))), 0u, 0u))))), 0u))).x) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), 1u * (_GLF_IDENTITY(uint(0u), uint(0u))))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) + 1), 0u, 0u, 0u), (uvec4((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x, (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size, (true ? GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size : _GLF_FUZZED(_GLF_IDENTITY(uvec2(103699u, 120918u), (uvec2(103699u, 120918u)) | (uvec2(103699u, 120918u)))))).x) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) + 1), 0u, 0u, 0u)) / uvec4(1u, 1u, 1u, 1u)), (uvec4((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x, (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x) / ((_GLF_IDENTITY(1u, (1u) / 1u) << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) << 0u)), _GLF_IDENTITY(uint(0u), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(uint(0u), ~ (~ (uint(0u))))) - (0u | 0u))), uint(uvec3((_GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(uint(0u), ~ (~ (uint(0u))))) - (0u | 0u))), 0u, 1u))), (false ? _GLF_FUZZED(subgroup_base) : ~ (_GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(uint(0u), ~ (~ (uint(0u))))) - (0u | 0u)))))))))) + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(18144) : 1))), 0u, 0u, 0u)) - uvec4(0u, 0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u)))))) % subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size, uvec2(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size, _GLF_IDENTITY(uvec2(_GLF_IDENTITY(uvec3(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size, 1u), (uvec3(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size, 1u)) >> uvec3(0u, 0u, 0u))), (uvec2(_GLF_IDENTITY(uvec3(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size, 1u), (uvec3(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size, 1u)) >> uvec3(0u, 0u, 0u)))) - uvec2(0u, 0u)))[0], GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size[1])), clamp(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size, uvec2(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size[_GLF_IDENTITY(0, (0) | (0))], _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size[1], (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size[1], uint(uint(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size[1])))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size, uvec2(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size[0], GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size[1])), max(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size, uvec2(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size[0], GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size[1])), _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size, uvec2(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size[0], GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size[1])))), _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size, uvec2(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size[0], GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size[1])))).x + _GLF_IDENTITY(1, min(1, 1))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(_GLF_IDENTITY(mat3x4(_GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 0.0, 1.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0))), transpose(_GLF_IDENTITY(transpose(mat3x4(_GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 0.0, 1.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)))), (transpose(mat3x4(_GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 0.0, 1.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0))))) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))))))), (_GLF_IDENTITY((_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1) % subgroup_size, max(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x, (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(0u), uint(0u))), (~ (_GLF_IDENTITY(uint(0u), uint(0u)))) | 0u)))) >> _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u) >> 0u))))) + 1), clamp((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x, (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x) / (_GLF_IDENTITY(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), uint(uvec2(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(uint(0u), min(uint(0u), uint(0u)))) - 0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), uint(uvec4((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), 1u, 0u, 1u))), uint(_GLF_ZERO(0.0, injectionSwitch.x))))), min((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) - 0u), uint(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size)))))) >> _GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), (true ? (1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)) : _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), (_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))) / 1u), virtual_gid))))))))) + 1), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x, (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x) / (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), min(_GLF_IDENTITY(uint(0u), min(uint(0u), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), 0u | (uint(0u))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), 0u | (uint(0u))), min(_GLF_IDENTITY(uint(0u), 0u | (uint(0u))), _GLF_IDENTITY(uint(0u), 0u | (uint(0u)))))) >> 0u))), uint(0u))))), (true ? (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) | (_GLF_IDENTITY(uint(0u), 0u ^ (_GLF_IDENTITY(uint(0u), (uint(0u)) - 0u))))), _GLF_IDENTITY(uint(0u), min(_GLF_IDENTITY(uint(0u), min(uint(0u), _GLF_IDENTITY(uint(0u), 0u | (uint(0u))))), uint(0u))))) : _GLF_FUZZED(subgroup_id))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) + 1, max(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x, (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x) / _GLF_IDENTITY(((_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(1u, 0u, 1u)), (uint(uvec3(1u, 0u, 1u))) >> 0u))) | 0u) << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u) - 0u)))) >> _GLF_IDENTITY(uint(0u), uint(0u))), (((_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(1u, 0u, 1u)), (uint(uvec3(1u, 0u, 1u))) >> 0u))) | 0u) << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u) - 0u)))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) | (_GLF_IDENTITY(((_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(1u, 0u, 1u)), (uint(uvec3(1u, 0u, 1u))) >> 0u))) | 0u) << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u) - 0u)))) >> _GLF_IDENTITY(uint(0u), uint(0u))), uint(uvec3(_GLF_IDENTITY(((_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(1u, 0u, 1u)), (uint(uvec3(1u, 0u, 1u))) >> 0u))) | 0u) << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u) - 0u)))) >> _GLF_IDENTITY(uint(0u), uint(0u))), (((_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(1u, 0u, 1u)), (uint(uvec3(1u, 0u, 1u))) >> 0u))) | 0u) << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u) - 0u)))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) >> 0u), 1u, 0u)))))) + 1, _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x, (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x, min(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x, GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x))) / (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(uint(0u), uint(uvec3(uint(0u), 1u, (0u ^ 0u))))) - (0u >> _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), clamp(uint(8u), uint(8u), uint(8u))))))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) << 0u), 1u, 1u, 0u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) << 0u), 1u, 1u, 0u))))))) + 1))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x, (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x) | (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x)), (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x) / _GLF_IDENTITY((_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u + (0u))), uint(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) + 0u)))))), 0u | ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u + (0u))), uint(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) + 0u)))))))) >> _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), max(~ (0u), ~ (0u)))))))))), ~ (~ (_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u + (0u))), uint(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) + 0u)))))) >> _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, min(0u, 0u))))), ((_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u + (0u))), uint(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) + 0u)))))) >> _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, min(0u, 0u)))), ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u + (0u))), uint(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) + 0u)))))) >> _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, min(0u, 0u))))) >> 0u))) ^ 0u))))) + 1), uint(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x, (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x) / ((_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, min(1u, 1u)), 1u)) << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) + 1), 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(packUnorm4x8(vec4(7520.3884, -70.75, -3526.1424, -6.1))) : 0u)), 0u), (uvec4((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size, uvec2(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size[0], GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size[1])).x, (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) + 1, max(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size, uvec2(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size[0], GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size[1])).x, (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) + 1, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size, uvec2(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size[0], GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size[1])).x, (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) + 1))), 0u, 0u, 0u)) - uvec4(_GLF_IDENTITY(0u, (0u) * 1u), 0u, 0u, 0u)))))) % subgroup_size, (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size, uvec2(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size[0], _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size, (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size) | uvec2(0u, 0u))[1])).x + _GLF_IDENTITY(1, min(1, 1))) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) * uint(_GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_IDENTITY((subgroup_size) * uint(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY((subgroup_size) * uint(_GLF_ONE(1.0, injectionSwitch.y)), ((subgroup_size) * uint(_GLF_ONE(1.0, injectionSwitch.y))) << 0u)) << 0u), (subgroup_size) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))))), (false ? _GLF_FUZZED(89192u) : (_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1) % subgroup_size, max(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x, (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), uint(0u))), (~ (_GLF_IDENTITY(uint(0u), uint(0u)))) | _GLF_IDENTITY(0u, (0u) ^ 0u))))) >> _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u) >> 0u))))) + 1), clamp((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x, (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x) / (_GLF_IDENTITY(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), uint(uvec2(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), uint(uvec4((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), 1u, 0u, 1u))), uint(_GLF_ZERO(0.0, injectionSwitch.x))))), min((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) - 0u), uint(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size)))))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), uint(0u)), _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), (true ? (1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, ~ (~ (0u)))), min(uint(_GLF_IDENTITY(0u, ~ (~ (0u)))), uint(_GLF_IDENTITY(0u, ~ (~ (0u))))))) : _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), virtual_gid))))))))) + 1), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x, (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x) / (_GLF_IDENTITY(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), min(_GLF_IDENTITY(uint(0u), min(uint(0u), _GLF_IDENTITY(uint(0u), 0u | (uint(0u))))), uint(0u))))), (true ? (1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), min(_GLF_IDENTITY(uint(0u), min(uint(0u), _GLF_IDENTITY(uint(0u), 0u | (uint(0u))))), uint(0u))))) : _GLF_FUZZED(subgroup_id))) >> _GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), min(_GLF_IDENTITY(uint(0u), min(uint(0u), _GLF_IDENTITY(uint(0u), 0u | (uint(0u))))), uint(0u))))), (true ? (1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), min(_GLF_IDENTITY(uint(0u), min(uint(0u), _GLF_IDENTITY(uint(0u), 0u | (uint(0u))))), uint(0u))))) : _GLF_FUZZED(subgroup_id))) >> _GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), min(_GLF_IDENTITY(uint(0u), min(uint(0u), _GLF_IDENTITY(uint(0u), 0u | (uint(0u))))), uint(0u))))), (true ? (1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), min(_GLF_IDENTITY(uint(0u), min(uint(0u), _GLF_IDENTITY(uint(0u), 0u | (uint(0u))))), uint(0u))))) : _GLF_FUZZED(subgroup_id))) >> _GLF_IDENTITY(uint(0u), uint(0u))) ^ 0u)) | (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), min(_GLF_IDENTITY(uint(0u), min(uint(0u), _GLF_IDENTITY(uint(0u), 0u | (uint(0u))))), uint(0u))))), (true ? (1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), min(_GLF_IDENTITY(uint(0u), min(uint(0u), _GLF_IDENTITY(uint(0u), 0u | (uint(0u))))), uint(0u))))) : _GLF_FUZZED(subgroup_id))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))) + 1, max(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x, (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x) / ((1u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u) - 0u)))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), 0u ^ (uint(0u))), uint(0u)))) + 1, _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x, (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x) / (_GLF_IDENTITY((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), 0u | (1u << _GLF_IDENTITY(uint(0u), uint(0u))))) >> _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, ~ (~ (0u))))), uint(uvec4(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, 0u | (0u))))) << 0u), 1u, 1u, 0u))))) + 1))), _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x, (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x) / _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u + (0u))), uint(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) + 0u)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, min(0u, 0u)))), min(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, min(0u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, min(0u, 0u)))), (_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, min(0u, 0u))))) << 0u)))), ~ (~ (_GLF_IDENTITY(((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, min(0u, 0u))))), max(uint(_GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, min(0u, 0u))))), uint(_GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, min(0u, 0u))))))), uint(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) + 0u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) + 0u), min(_GLF_IDENTITY(0u, (0u) + 0u), _GLF_IDENTITY(0u, (0u) + 0u)))))))))) >> _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, min(0u, 0u))))), (((_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (1u) - 0u), 1u)) << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u + (0u))), uint(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) + 0u)))))) >> _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, min(0u, 0u)))))) ^ 0u))))) + 1), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x, (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x) / ((_GLF_IDENTITY(1u, min(1u, 1u)) << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), 0u | (uint(0u))))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) + _GLF_IDENTITY(1, (1) | 0)), 0u, 0u, 0u), (uvec4((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size, uvec2(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size[0], GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size[1])).x, (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) + 1), 0u, 0u, 0u)) - uvec4(_GLF_IDENTITY(0u, (0u) * 1u), 0u, 0u, 0u))), uint(uvec2(uint(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x, (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x) / ((_GLF_IDENTITY(1u, min(1u, 1u)) << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), 0u | (uint(0u))))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) + _GLF_IDENTITY(1, (1) | 0)), 0u, 0u, 0u), (uvec4((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size, uvec2(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size[0], GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size[1])).x, (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) + 1), 0u, 0u, 0u)) - uvec4(_GLF_IDENTITY(0u, (0u) * 1u), 0u, 0u, 0u))), 1u)))))) % subgroup_size, (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size, uvec2(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size[0], _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size, (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size) | uvec2(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uint(0u)))) * 1u), 0u))[1])).x + _GLF_IDENTITY(1, min(1, 1))) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) * uint(_GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_IDENTITY((subgroup_size) * uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - 0.0), _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 0.0, 1.0, sqrt(1.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, sin(0.0)))))))), (_GLF_IDENTITY((subgroup_size) * uint(_GLF_ONE(1.0, injectionSwitch.y)), ((subgroup_size) * uint(_GLF_ONE(1.0, injectionSwitch.y))) << 0u)) << 0u), (subgroup_size) * uint(_GLF_ONE(1.0, injectionSwitch.y))))))))))) >> 0u)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), true)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), true)))), (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(false), true && (bool(false)))), bool(bvec2(! (_GLF_IDENTITY(bool(false), true && (bool(false)))), false)))))), bool(bvec2(bool(bool(false)), true))))) && true)))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true), bool(bvec2(bool(bool(false)), true)))))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), true))), ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), true)))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), true)))), bool(bvec4((_GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), true)))), false, false, true))), false, false, false))), (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), true && (bool(false))))))), bool(bvec2(bool(bool(false)), true))))) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), true)))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), true)))), bool(bvec4((_GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), true)))), false, false, true))), false, false, false))), (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), true && (bool(false))))))), bool(bvec2(bool(bool(false)), true))))) && true)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), true)))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), true)))), bool(bvec4((_GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), true)))), false, false, true))), false, false, false))), (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), true && (bool(false))))))), bool(bvec2(bool(bool(false)), true))))) && true)), false || ((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), true)))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), true)))), bool(bvec4((_GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), true)))), false, false, true))), false, false, false))), (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), true && (bool(false))))))), bool(bvec2(bool(bool(false)), true))))) && true)))))))) || false))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), true)))))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(bool(bvec2(bool(bool(false)), true)), ! (! (bool(bvec2(bool(bool(false)), true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), true)))), (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), true && (bool(false))))))), bool(bvec2(bool(bool(false)), true))))) && true)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), true)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), true)))), (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), true))), ! (! (_GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), true)))))))) && true)))))))))), true, false, true))) || false), _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true, false)))) && true)) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec4(true, false, true, true))))))), false || ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true)) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec4(true, false, true, true))))))))) || false), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), true)))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), true)))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), true)))))))) || false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true)) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec4(true, false, true, true))))))), false || ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true)) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec4(true, false, true, true))))))))) || false, (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true)) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec4(true, false, true, true))))))), false || ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true)) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec4(true, false, true, true))))))))) || false, (_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true)) && _GLF_IDENTITY(true, _GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), bool(bvec4(true, false, true, true))))))), false || ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (_GLF_IDENTITY(false, true && (false)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true)) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_IDENTITY(true, (true) || false), true))))))))) || _GLF_IDENTITY(false, (false) && true)) || false)) || false)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), true))))), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), (! (bool(false))) && true)))), true))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), true)))), bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), true)))), false, false))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(bool(bvec2(bool(bool(false)), true)), ! (_GLF_IDENTITY(! (bool(bvec2(bool(bool(false)), _GLF_IDENTITY(true, (true) || false)))), (! (bool(bvec2(bool(bool(false)), true)))) || false))))))))) || false), _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true), false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ((_GLF_IDENTITY(false, ! (! (false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)))) && true))), false, true, false)))) && _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), true && (_GLF_IDENTITY(true, bool(bvec4(true, false, true, true))))))), false || ((_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (false), true, true), bvec3(bvec3(bvec3(! (false), true, true))))), (bool(_GLF_IDENTITY(bvec3(! (false), true, true), bvec3(bvec3(bvec3(! (false), true, true)))))) || false))))) && _GLF_IDENTITY(true, bool(bvec3(true, true, true)))), (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true)) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec4(true, false, true, true))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true)) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec4(true, false, true, true))))), bool(bvec4((_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))), (injectionSwitch.x < injectionSwitch.y)))) && true)) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_IDENTITY(true, false || (true)), true))))), false, false, false))))))))) || false)) && true), true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     for(int _injected_loop_counter = _GLF_IDENTITY(1, ~ (~ (1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 & -21153)); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, true, true)))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(4762.4101)), bool(false))) > injectionSwitch.y)))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(4762.4101)), bool(false))) > injectionSwitch.y)))))))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         do
          {
           if(_GLF_DEAD(false))
            {
             do
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bool(false)))));
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       else
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           do
            {
             barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true))), true)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true))))), true), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true))))), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true))))), true), bvec2(bvec3(bvec2(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true))))), true), false)))))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true))))), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true))))), true), bvec2(bvec3(bvec2(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true))))), true), false)))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true))))), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true))))), true), bvec2(bvec3(bvec2(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true))))), true), false)))))), true))), false)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true))))), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true))))), true), bvec2(bvec3(bvec2(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true))))), true), false)))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true))))), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true))))), true), bvec2(bvec3(bvec2(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true))))), true), false)))))), true))), false))))))))), bvec2(bvec4(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))))))), true), false, true))))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           do
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))));
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))))
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
               if(_GLF_DEAD(false))
                {
                 for(int _injected_loop_counter = (((0 ^ 1) << _GLF_IDENTITY(_GLF_IDENTITY(int(5), 0 | (_GLF_IDENTITY(int(5), clamp(_GLF_IDENTITY(int(5), clamp(int(5), int(5), int(5))), int(5), _GLF_IDENTITY(int(5), (_GLF_IDENTITY(int(5), min(int(5), int(5)))) | (int(5))))))), _GLF_IDENTITY(int(5), 0 + (int(5))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(5, clamp(5, 5, 5))), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x))); _injected_loop_counter --)
                  {
                   barrier();
                  }
                }
              }
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
              barrier();
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0 >> _GLF_IDENTITY(int(0), int(0))) + (0))))), int(0)))); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, false)))))
                barrier();
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         else
          {
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) || false))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(true)), true && (_GLF_IDENTITY((bool(true)), ! (! (_GLF_IDENTITY((bool(true)), ! (! ((bool(true)))))))))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(bool(true), false || (_GLF_IDENTITY(bool(true), ! (! (bool(true))))))), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(! (_GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), bool(bvec2(bool(true), false)))) && true)), false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(! (bool(true)), false), bvec2(bvec3(bvec2(! (bool(true)), false), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))))))), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((bool(_GLF_IDENTITY(true, ! (! (true))))), false || ((bool(_GLF_IDENTITY(true, ! (! (true))))))), true && ((bool(true)))), bool(_GLF_IDENTITY(bvec2(! (bool(true)), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(! (bool(_GLF_IDENTITY(true, ! (! (true))))), false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(bvec2(! (bool(true)), _GLF_IDENTITY(false, (false) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))))))))))), _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec3(true, false, false)))))))))))))))) || _GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, true)))) || false)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, true)))) || false)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, true)))) || false)))), (bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, true)))) || false))))) && true))))))))))) || false, true && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, true)))) || false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, true)))) || false))), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, true)))) || false)))) || false), false, false)))))))), ! (! ((_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, true)))) || false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, true)))) || false))), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, true)))) || false)))) || false), false, false))))))))))), false || ((_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, true)))) || false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, true)))) || false))), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, true)))) || false)))) || false), false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, true)))) || false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), bool(bvec3(! _GLF_IDENTITY((true), false || ((true))), true, _GLF_IDENTITY(true, bool(bvec2(true, true))))))) || false))), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, true)))) || _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true))))))) || false), false, false)))) && true)))))))) || false))) && _GLF_IDENTITY(true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), (_GLF_IDENTITY(true, (true) && true)) || false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(true, (true) && true)) && true), true, true, false))), true, true, _GLF_IDENTITY(false, true && (false)))), ! (! _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), bool(bvec3(true && (true), false, false))))) && true), true, true, false))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((bool(bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true), true, true, false)))), (! ((bool(bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true), true, true, false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! ((bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true), ! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)))), true, true, false))))), true && (! (! ((bool(bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), bool(bvec2(_GLF_IDENTITY(true && (true), true && (true && (true))), true))))) && true), true, true, false))))))))))))))))))) && _GLF_IDENTITY(true, bool(bool(true)))))
  {
   atomicStore(buf[virtual_gid], uint(1), _GLF_IDENTITY(4, (4) | 0), 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         do
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-2150.2533, -1973.1726)))))).y))))
          barrier();
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-936.936)), float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), bool(true))) > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-936.936)), float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), bool(true))) > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-936.936)), float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), bool(true))) > injectionSwitch.y)))), true && (bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-936.936)), float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), bool(true))) > injectionSwitch.y))))))) || false))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY((_GLF_IDENTITY((false), false || _GLF_IDENTITY(((_GLF_IDENTITY(false, true && (false)))), (((_GLF_IDENTITY(false, ! (! (false)))))) && true))) && true, ! (! ((_GLF_IDENTITY((false), false || _GLF_IDENTITY(((_GLF_IDENTITY(false, true && (false)))), (((_GLF_IDENTITY(false, ! (! (false)))))) && true))) && true)))) && _GLF_IDENTITY(true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), (! (_GLF_IDENTITY(true, (true) && true))) || false))) && (true))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) && true))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false || (_GLF_IDENTITY(false, (false) && true)), ! (! (false || (_GLF_IDENTITY(false, (false) && true))))), ! (! (_GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(false, (false) && true))))))) && _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bvec4(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))), true, true, false)))), _GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7953.5715)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) + sin(abs(0.0)))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7953.5715)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) + sin(abs(0.0)))))), ! (! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7953.5715)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) + sin(abs(0.0)))))))))))) || (false)) || (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, true && ((false) && true)))))))) || false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     for(int _injected_loop_counter = (0 & 54099); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < (0 | 1)), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter < (0 | 1)))); _injected_loop_counter ++)
      {
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))))) : _GLF_FUZZED(7.8)))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           barrier();
          }
        }
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, ! (_GLF_IDENTITY(! (_injected_loop_counter != 1), false || (! (_injected_loop_counter != 1)))))); _GLF_IDENTITY(_injected_loop_counter ++, 0 + (_injected_loop_counter ++)))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     else
      {
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))
    barrier();
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-96304)), int(int((true ? 1 : _GLF_FUZZED(-96304)))))), (_GLF_IDENTITY(1, _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-96304)), int(int((true ? 1 : _GLF_FUZZED(-96304))))))) | (_GLF_IDENTITY(1, _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-96304)), int(int((true ? 1 : _GLF_FUZZED(-96304))))))))); _injected_loop_counter ++)
    {
     barrier();
    }
  }
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, true, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false, true, false)), false || (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, false)), ! (! (bool(bvec4(_GLF_DEAD(false), false, true, false)))))))) || false, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false, true, false)), false || (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, false)), ! (! (bool(bvec4(_GLF_DEAD(false), false, true, false)))))))) || false, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false, true, false)), false || (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, false)), ! (! (bool(bvec4(_GLF_DEAD(false), false, true, false)))))))) || false, ((_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false, true, false)), false || (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, false)), ! (! (bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false))))))), false, true, false)))))))) || false) && true))))))))), ((_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false, true, false)), false || (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, false)), ! (! (bool(bvec4(_GLF_DEAD(false), false, true, false)))))))) || false, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false, true, false)), false || (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, false)), ! (! (bool(bvec4(_GLF_DEAD(false), false, true, false)))))))) || false, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false, true, false)), false || (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, false)), ! (! (bool(bvec4(_GLF_DEAD(false), false, true, false)))))))) || false, ((_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false, true, false)), false || (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, false)), ! (! (bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false))))))), false, true, false)))))))) || false) && true)))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) >> 0))
        {
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
    }
   else
    {
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(243.698)), bool(false))) > injectionSwitch.y))))) || false), _GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (false) || false)) && true) || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(50.57)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), (bool(true)) && true))) > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(abs(injectionSwitch)) : injectionSwitch)).y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(50.57)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), (bool(true)) && true))) > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(abs(injectionSwitch)) : injectionSwitch)).y, true, true, true))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(50.57)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), (bool(true)) && true))) > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(abs(injectionSwitch)) : injectionSwitch)).y), false || ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(50.57)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), (bool(true)) && true))) > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(abs(injectionSwitch)) : injectionSwitch)).y)))), false || (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(50.57)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), (bool(true)) && true))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(abs(injectionSwitch)) : injectionSwitch)).y)))))))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(243.698)), bool(_GLF_IDENTITY(false, ! (! (false)))))) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))) || false), _GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (false) || false)) && true) || (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(50.57)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), (bool(true)) && true))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(abs(injectionSwitch)) : injectionSwitch)), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(abs(injectionSwitch)) : injectionSwitch)))).y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(50.57)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), (bool(true)) && true)), (true ? mix(float(_GLF_FUZZED(50.57)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), (bool(true)) && true)) : _GLF_FUZZED(-4.1)))) > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(abs(injectionSwitch)) : injectionSwitch)).y, true, true, true)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(50.57)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), (bool(true)) && true))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(abs(injectionSwitch)) : injectionSwitch)), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(abs(injectionSwitch)) : injectionSwitch)))).y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(50.57)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), (bool(true)) && true)), (true ? mix(float(_GLF_FUZZED(50.57)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), (bool(true)) && true)) : _GLF_FUZZED(-4.1)))) > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(abs(injectionSwitch)) : injectionSwitch)).y, true, true, true)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(50.57)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), (bool(true)) && true))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(abs(injectionSwitch)) : injectionSwitch)), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(abs(injectionSwitch)) : injectionSwitch)))).y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(50.57)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), (bool(true)) && true)), (true ? mix(float(_GLF_FUZZED(50.57)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), (bool(true)) && true)) : _GLF_FUZZED(-4.1)))) > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(abs(injectionSwitch)) : injectionSwitch)).y, true, true, true)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(50.57)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), (bool(true)) && true))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(abs(injectionSwitch)) : injectionSwitch)), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(abs(injectionSwitch)) : injectionSwitch)))).y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(50.57)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), (bool(true)) && true)), (true ? mix(float(_GLF_FUZZED(50.57)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), (bool(true)) && true)) : _GLF_FUZZED(-4.1)))) > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(abs(injectionSwitch)) : injectionSwitch)).y, true, true, true)))))))) && true)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(50.57)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), (bool(true)) && true))) > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(abs(injectionSwitch)) : injectionSwitch)).y), false || ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(50.57)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), (bool(true)) && true))) > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(abs(injectionSwitch)) : injectionSwitch)).y)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(50.57)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), (bool(true)) && true))) > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(abs(injectionSwitch)) : injectionSwitch)).y), false || ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(50.57)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), (bool(true)) && true))) > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(abs(injectionSwitch)) : injectionSwitch)).y)))), false || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(50.57)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), (bool(true)) && true))) > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(abs(injectionSwitch)) : injectionSwitch)).y), false || ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(50.57)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), (bool(true)) && true))) > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(abs(injectionSwitch)) : injectionSwitch)).y)))))), true, false, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(50.57)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), (bool(true)) && true))) > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(abs(injectionSwitch)) : injectionSwitch)).y), false || ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(50.57)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), (bool(true)) && true))) > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(abs(injectionSwitch)) : injectionSwitch)).y)))), false || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(50.57)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), (bool(true)) && true))) > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(abs(injectionSwitch)) : injectionSwitch)).y), false || ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(50.57)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), (bool(true)) && true))) > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(abs(injectionSwitch)) : injectionSwitch)).y)))))), true, false, false))) && true)), false || _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(50.57)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), (bool(true)) && true))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(abs(injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, sqrt(1.0), 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, determinant(mat4(exp(0.0), sin(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, exp(0.0), 0.0)), max(vec2(mat4x3(injectionSwitch, 0.0, sqrt(1.0), 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, determinant(mat4(exp(0.0), sin(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, exp(0.0), 0.0)), vec2(mat4x3(injectionSwitch, 0.0, sqrt(1.0), 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, determinant(mat4(exp(0.0), sin(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, exp(0.0), 0.0))))))).y))), ((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(50.57)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), (bool(true)) && true))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(abs(injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, sqrt(1.0), 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, determinant(mat4(exp(0.0), sin(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, exp(0.0), 0.0)), max(vec2(mat4x3(injectionSwitch, 0.0, sqrt(1.0), 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, determinant(mat4(exp(0.0), sin(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, exp(0.0), 0.0)), vec2(mat4x3(injectionSwitch, 0.0, sqrt(1.0), 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, determinant(mat4(exp(0.0), sin(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, exp(0.0), 0.0))))))).y)))) && true))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         do
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
            barrier();
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (false)), ((! (false))) || false)))))), ! (! ((_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (false)), ((! (false))) || false))))))))))))
          barrier();
        }
       atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(_GLF_IDENTITY(2, (2) / 1))), ~ (_GLF_IDENTITY(~ (int(int(2))), 0 + (~ (int(int(2))))))))), _GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) >> 0)) * 1), min(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) >> 0)) * 1), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) >> 0)) * 1)))) >> 0), 64, 4);
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
          }
         else
          {
          }
        }
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x < injectionSwitch.y) || false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(-26.26), (mat2(1.0) * (injectionSwitch))[1]), vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-15.48)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))).y, ! (! (injectionSwitch.x < injectionSwitch.y)))) || false), _GLF_IDENTITY(false, bool(bvec3(false, false, true)))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)))))) || false), false), true), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sin(0.0)))))) || false), false), true)))))))))) ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0) : _GLF_FUZZED(6.5))), _GLF_IDENTITY(false || (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0) : _GLF_IDENTITY(_GLF_FUZZED(6.5), (_GLF_FUZZED(6.5)) * 1.0))), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0) : _GLF_FUZZED(6.5)))))), false || (false || (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(1.6))), injectionSwitch.x)), (false ? _GLF_FUZZED(-5443.4213) : _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(1.6))), injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.y) * 1.0, mix(float(_GLF_IDENTITY((injectionSwitch.y) * 1.0, ((injectionSwitch.y) * 1.0) + _GLF_ZERO(0.0, injectionSwitch.x))), float(_GLF_FUZZED(4362.7172)), bool(false))), float(mat2x4(_GLF_IDENTITY((injectionSwitch.y) * 1.0, mix(float(_GLF_IDENTITY((injectionSwitch.y) * 1.0, ((injectionSwitch.y) * 1.0) + _GLF_ZERO(0.0, injectionSwitch.x))), float(_GLF_FUZZED(4362.7172)), bool(false))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), 1.0, abs(0.0), sqrt(0.0), 1.0, sin(_GLF_ZERO(0.0, injectionSwitch.x)), determinant(mat4(1.0, 0.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, sqrt(0.0), sin(0.0), 0.0, 0.0, 1.0)))))) : _GLF_FUZZED(6.5))), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0) : _GLF_FUZZED(6.5)))))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), float(vec3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), 1.0, 1.0))) : _GLF_FUZZED(6.5))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(false || (injectionSwitch.x < injectionSwitch.y), bool(bool(false || (injectionSwitch.x < injectionSwitch.y))))))) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), clamp(_GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), vec2(0.0, 0.0))), _GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0))), _GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), vec2(0.0, 0.0)))))).y, float(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(15.25) : 0.0)), sin(0.0), abs(1.0), 0.0, 1.0, 0.0, 0.0)))))) * 1.0) : _GLF_FUZZED(6.5))))))), bool(bool(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y) * 1.0) : _GLF_FUZZED(6.5))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), (mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(_GLF_IDENTITY(-3.5, max(_GLF_IDENTITY(-3.5, max(-3.5, -3.5)), _GLF_IDENTITY(-3.5, (false ? _GLF_FUZZED(-6.9) : -3.5)))))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))) / abs(vec2(1.0, 1.0))))) / vec2(1.0, 1.0)), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(true, true), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(true, true), true, false)), true, true))))), clamp(mix(vec2(_GLF_FUZZED(-7.4), _GLF_IDENTITY(_GLF_FUZZED(-3.5), clamp(_GLF_FUZZED(-3.5), _GLF_IDENTITY(_GLF_FUZZED(-3.5), min(_GLF_FUZZED(-3.5), _GLF_FUZZED(-3.5))), _GLF_FUZZED(-3.5)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), (mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))) * mat2(1.0)), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), min(mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(_GLF_IDENTITY(-3.5, clamp(-3.5, -3.5, -3.5)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), min(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), _GLF_IDENTITY(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), (_GLF_IDENTITY(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), (vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5))) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))))))) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)).y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), (mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(_GLF_IDENTITY(-3.5, max(_GLF_IDENTITY(-3.5, max(-3.5, -3.5)), _GLF_IDENTITY(-3.5, (false ? _GLF_FUZZED(-6.9) : -3.5)))))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))) / abs(vec2(1.0, 1.0))))) / vec2(1.0, 1.0)), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(true, true), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(true, true), true, false)), true, true))))), clamp(mix(vec2(_GLF_FUZZED(-7.4), _GLF_IDENTITY(_GLF_FUZZED(-3.5), clamp(_GLF_FUZZED(-3.5), _GLF_IDENTITY(_GLF_FUZZED(-3.5), min(_GLF_FUZZED(-3.5), _GLF_FUZZED(-3.5))), _GLF_FUZZED(-3.5)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), (mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))) * mat2(1.0)), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), min(mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(_GLF_IDENTITY(-3.5, clamp(-3.5, -3.5, -3.5)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), min(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), _GLF_IDENTITY(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), (_GLF_IDENTITY(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), (vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5))) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))))))) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)).y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), (mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(_GLF_IDENTITY(-3.5, max(_GLF_IDENTITY(-3.5, max(-3.5, -3.5)), _GLF_IDENTITY(-3.5, (false ? _GLF_FUZZED(-6.9) : -3.5)))))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))) / abs(vec2(1.0, 1.0))))) / vec2(1.0, 1.0)), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(true, true), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(true, true), true, false)), true, true))))), clamp(mix(vec2(_GLF_FUZZED(-7.4), _GLF_IDENTITY(_GLF_FUZZED(-3.5), clamp(_GLF_FUZZED(-3.5), _GLF_IDENTITY(_GLF_FUZZED(-3.5), min(_GLF_FUZZED(-3.5), _GLF_FUZZED(-3.5))), _GLF_FUZZED(-3.5)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), (mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))) * mat2(1.0)), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), min(mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(_GLF_IDENTITY(-3.5, clamp(-3.5, -3.5, -3.5)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), min(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), _GLF_IDENTITY(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), (_GLF_IDENTITY(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), (vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5))) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))))))) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)).y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), (mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(_GLF_IDENTITY(-3.5, max(_GLF_IDENTITY(-3.5, max(-3.5, -3.5)), _GLF_IDENTITY(-3.5, (false ? _GLF_FUZZED(-6.9) : -3.5)))))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))) / abs(vec2(1.0, 1.0))))) / vec2(1.0, 1.0)), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(true, true), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(true, true), true, false)), true, true))))), clamp(mix(vec2(_GLF_FUZZED(-7.4), _GLF_IDENTITY(_GLF_FUZZED(-3.5), clamp(_GLF_FUZZED(-3.5), _GLF_IDENTITY(_GLF_FUZZED(-3.5), min(_GLF_FUZZED(-3.5), _GLF_FUZZED(-3.5))), _GLF_FUZZED(-3.5)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), (mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))) * mat2(1.0)), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), min(mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(_GLF_IDENTITY(-3.5, clamp(-3.5, -3.5, -3.5)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), min(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), _GLF_IDENTITY(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), (_GLF_IDENTITY(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), (vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5))) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))))))) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), (mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(_GLF_IDENTITY(-3.5, max(_GLF_IDENTITY(-3.5, max(-3.5, -3.5)), _GLF_IDENTITY(-3.5, (false ? _GLF_FUZZED(-6.9) : -3.5)))))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))) / abs(vec2(1.0, 1.0))))) / vec2(1.0, 1.0)), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(true, true), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(true, true), true, false)), true, true))))), clamp(mix(vec2(_GLF_FUZZED(-7.4), _GLF_IDENTITY(_GLF_FUZZED(-3.5), clamp(_GLF_FUZZED(-3.5), _GLF_IDENTITY(_GLF_FUZZED(-3.5), min(_GLF_FUZZED(-3.5), _GLF_FUZZED(-3.5))), _GLF_FUZZED(-3.5)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), (mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))) * mat2(1.0)), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), min(mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(_GLF_IDENTITY(-3.5, clamp(-3.5, -3.5, -3.5)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), min(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), _GLF_IDENTITY(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), (_GLF_IDENTITY(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), (vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5))) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))))))) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)).y)))))) ? _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY((injectionSwitch[0]) * 1.0, ((injectionSwitch[0]) * _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.5)), float(1.0), bool(true)))) + 0.0)), _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-3.9) : _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))))).y) * 1.0) : _GLF_FUZZED(6.5), max(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), (mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(_GLF_IDENTITY(-3.5, max(_GLF_IDENTITY(-3.5, max(-3.5, -3.5)), _GLF_IDENTITY(-3.5, (false ? _GLF_FUZZED(-6.9) : -3.5)))))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))) / abs(vec2(1.0, 1.0))))) / vec2(1.0, 1.0)), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(true, true), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(true, true), true, false)), true, true))))), clamp(mix(vec2(_GLF_FUZZED(-7.4), _GLF_IDENTITY(_GLF_FUZZED(-3.5), clamp(_GLF_FUZZED(-3.5), _GLF_IDENTITY(_GLF_FUZZED(-3.5), min(_GLF_FUZZED(-3.5), _GLF_FUZZED(-3.5))), _GLF_FUZZED(-3.5)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), (mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))) * mat2(1.0)), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), min(mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(_GLF_IDENTITY(-3.5, clamp(-3.5, -3.5, -3.5)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), min(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), _GLF_IDENTITY(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), (_GLF_IDENTITY(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), (vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5))) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))))))) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)).y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), (mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(_GLF_IDENTITY(-3.5, max(_GLF_IDENTITY(-3.5, max(-3.5, -3.5)), _GLF_IDENTITY(-3.5, (false ? _GLF_FUZZED(-6.9) : -3.5)))))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))) / abs(vec2(1.0, 1.0))))) / vec2(1.0, 1.0)), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(true, true), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(true, true), true, false)), true, true))))), clamp(mix(vec2(_GLF_FUZZED(-7.4), _GLF_IDENTITY(_GLF_FUZZED(-3.5), clamp(_GLF_FUZZED(-3.5), _GLF_IDENTITY(_GLF_FUZZED(-3.5), min(_GLF_FUZZED(-3.5), _GLF_FUZZED(-3.5))), _GLF_FUZZED(-3.5)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), (mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))) * mat2(1.0)), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), min(mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(_GLF_IDENTITY(-3.5, clamp(-3.5, -3.5, -3.5)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), min(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), _GLF_IDENTITY(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), (_GLF_IDENTITY(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), (vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5))) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))))))) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)).y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), (mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(_GLF_IDENTITY(-3.5, max(_GLF_IDENTITY(-3.5, max(-3.5, -3.5)), _GLF_IDENTITY(-3.5, (false ? _GLF_FUZZED(-6.9) : -3.5)))))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))) / abs(vec2(1.0, 1.0))))) / vec2(1.0, 1.0)), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(true, true), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(true, true), true, false)), true, true))))), clamp(mix(vec2(_GLF_FUZZED(-7.4), _GLF_IDENTITY(_GLF_FUZZED(-3.5), clamp(_GLF_FUZZED(-3.5), _GLF_IDENTITY(_GLF_FUZZED(-3.5), min(_GLF_FUZZED(-3.5), _GLF_FUZZED(-3.5))), _GLF_FUZZED(-3.5)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), (mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))) * mat2(1.0)), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), min(mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(_GLF_IDENTITY(-3.5, clamp(-3.5, -3.5, -3.5)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), min(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), _GLF_IDENTITY(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), (_GLF_IDENTITY(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), (vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5))) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))))))) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)).y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), (mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(_GLF_IDENTITY(-3.5, max(_GLF_IDENTITY(-3.5, max(-3.5, -3.5)), _GLF_IDENTITY(-3.5, (false ? _GLF_FUZZED(-6.9) : -3.5)))))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))) / abs(vec2(1.0, 1.0))))) / vec2(1.0, 1.0)), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(true, true), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(true, true), true, false)), true, true))))), clamp(mix(vec2(_GLF_FUZZED(-7.4), _GLF_IDENTITY(_GLF_FUZZED(-3.5), clamp(_GLF_FUZZED(-3.5), _GLF_IDENTITY(_GLF_FUZZED(-3.5), min(_GLF_FUZZED(-3.5), _GLF_FUZZED(-3.5))), _GLF_FUZZED(-3.5)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), (mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))) * mat2(1.0)), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), min(mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(_GLF_IDENTITY(-3.5, clamp(-3.5, -3.5, -3.5)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), min(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), _GLF_IDENTITY(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), (_GLF_IDENTITY(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), (vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5))) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))))))) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), (mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(_GLF_IDENTITY(-3.5, max(_GLF_IDENTITY(-3.5, max(-3.5, -3.5)), _GLF_IDENTITY(-3.5, (false ? _GLF_FUZZED(-6.9) : -3.5)))))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))) / abs(vec2(1.0, 1.0))))) / vec2(1.0, 1.0)), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(true, true), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(true, true), true, false)), true, true))))), clamp(mix(vec2(_GLF_FUZZED(-7.4), _GLF_IDENTITY(_GLF_FUZZED(-3.5), clamp(_GLF_FUZZED(-3.5), _GLF_IDENTITY(_GLF_FUZZED(-3.5), min(_GLF_FUZZED(-3.5), _GLF_FUZZED(-3.5))), _GLF_FUZZED(-3.5)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), (mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))) * mat2(1.0)), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), min(mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(_GLF_IDENTITY(-3.5, clamp(-3.5, -3.5, -3.5)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), min(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), _GLF_IDENTITY(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), (_GLF_IDENTITY(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), (vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5))) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))))))) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)).y)))))) ? _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY((injectionSwitch[0]) * 1.0, ((injectionSwitch[0]) * _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.5)), float(1.0), bool(true)))) + 0.0)), _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-3.9) : _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))))).y) * 1.0) : _GLF_FUZZED(6.5), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), (mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(_GLF_IDENTITY(-3.5, max(_GLF_IDENTITY(-3.5, max(-3.5, -3.5)), _GLF_IDENTITY(-3.5, (false ? _GLF_FUZZED(-6.9) : -3.5)))))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))) / abs(vec2(1.0, 1.0))))) / vec2(1.0, 1.0)), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(true, true), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(true, true), true, false)), true, true))))), clamp(mix(vec2(_GLF_FUZZED(-7.4), _GLF_IDENTITY(_GLF_FUZZED(-3.5), clamp(_GLF_FUZZED(-3.5), _GLF_IDENTITY(_GLF_FUZZED(-3.5), min(_GLF_FUZZED(-3.5), _GLF_FUZZED(-3.5))), _GLF_FUZZED(-3.5)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), (mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))) * mat2(1.0)), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), min(mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(_GLF_IDENTITY(-3.5, clamp(-3.5, -3.5, -3.5)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), min(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), _GLF_IDENTITY(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), (_GLF_IDENTITY(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), (vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5))) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))))))) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)).y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), (mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(_GLF_IDENTITY(-3.5, max(_GLF_IDENTITY(-3.5, max(-3.5, -3.5)), _GLF_IDENTITY(-3.5, (false ? _GLF_FUZZED(-6.9) : -3.5)))))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))) / abs(vec2(1.0, 1.0))))) / vec2(1.0, 1.0)), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(true, true), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(true, true), true, false)), true, true))))), clamp(mix(vec2(_GLF_FUZZED(-7.4), _GLF_IDENTITY(_GLF_FUZZED(-3.5), clamp(_GLF_FUZZED(-3.5), _GLF_IDENTITY(_GLF_FUZZED(-3.5), min(_GLF_FUZZED(-3.5), _GLF_FUZZED(-3.5))), _GLF_FUZZED(-3.5)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), (mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))) * mat2(1.0)), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), min(mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(_GLF_IDENTITY(-3.5, clamp(-3.5, -3.5, -3.5)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), min(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), _GLF_IDENTITY(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), (_GLF_IDENTITY(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), (vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5))) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))))))) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)).y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), (mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(_GLF_IDENTITY(-3.5, max(_GLF_IDENTITY(-3.5, max(-3.5, -3.5)), _GLF_IDENTITY(-3.5, (false ? _GLF_FUZZED(-6.9) : -3.5)))))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))) / abs(vec2(1.0, 1.0))))) / vec2(1.0, 1.0)), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(true, true), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(true, true), true, false)), true, true))))), clamp(mix(vec2(_GLF_FUZZED(-7.4), _GLF_IDENTITY(_GLF_FUZZED(-3.5), clamp(_GLF_FUZZED(-3.5), _GLF_IDENTITY(_GLF_FUZZED(-3.5), min(_GLF_FUZZED(-3.5), _GLF_FUZZED(-3.5))), _GLF_FUZZED(-3.5)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), (mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))) * mat2(1.0)), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), min(mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(_GLF_IDENTITY(-3.5, clamp(-3.5, -3.5, -3.5)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), min(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), _GLF_IDENTITY(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), (_GLF_IDENTITY(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), (vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5))) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))))))) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)).y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), (mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(_GLF_IDENTITY(-3.5, max(_GLF_IDENTITY(-3.5, max(-3.5, -3.5)), _GLF_IDENTITY(-3.5, (false ? _GLF_FUZZED(-6.9) : -3.5)))))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))) / abs(vec2(1.0, 1.0))))) / vec2(1.0, 1.0)), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(true, true), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(true, true), true, false)), true, true))))), clamp(mix(vec2(_GLF_FUZZED(-7.4), _GLF_IDENTITY(_GLF_FUZZED(-3.5), clamp(_GLF_FUZZED(-3.5), _GLF_IDENTITY(_GLF_FUZZED(-3.5), min(_GLF_FUZZED(-3.5), _GLF_FUZZED(-3.5))), _GLF_FUZZED(-3.5)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), (mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))) * mat2(1.0)), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), min(mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(_GLF_IDENTITY(-3.5, clamp(-3.5, -3.5, -3.5)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), min(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), _GLF_IDENTITY(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), (_GLF_IDENTITY(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), (vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5))) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))))))) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), (mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(_GLF_IDENTITY(-3.5, max(_GLF_IDENTITY(-3.5, max(-3.5, -3.5)), _GLF_IDENTITY(-3.5, (false ? _GLF_FUZZED(-6.9) : -3.5)))))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))) / abs(vec2(1.0, 1.0))))) / vec2(1.0, 1.0)), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(true, true), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(true, true), true, false)), true, true))))), clamp(mix(vec2(_GLF_FUZZED(-7.4), _GLF_IDENTITY(_GLF_FUZZED(-3.5), clamp(_GLF_FUZZED(-3.5), _GLF_IDENTITY(_GLF_FUZZED(-3.5), min(_GLF_FUZZED(-3.5), _GLF_FUZZED(-3.5))), _GLF_FUZZED(-3.5)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), (mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))) * mat2(1.0)), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), min(mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(_GLF_IDENTITY(-3.5, clamp(-3.5, -3.5, -3.5)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), min(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), _GLF_IDENTITY(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), (_GLF_IDENTITY(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), (vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5))) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))))))) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)).y)))))) ? _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY((injectionSwitch[0]) * 1.0, ((injectionSwitch[0]) * _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.5)), float(1.0), bool(true)))) + 0.0)), _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-3.9) : _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))))).y) * 1.0) : _GLF_FUZZED(6.5)))), 0.0 + ((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(-3.5)), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, int(ivec2(1, 1)))]), bvec2(true, true)))) / vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)).y)) ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) * 1.0), injectionSwitch[1])).y) * _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) : _GLF_FUZZED(-8400.3873))), mix(float((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0]) * 1.0), injectionSwitch[1])).y) * 1.0), float(_GLF_FUZZED(-971.274)), bool(false)))) : _GLF_FUZZED(6.5)))))))))))))))), false || (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0))) : _GLF_FUZZED(-7.6))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(982.345, _GLF_IDENTITY(-2439.8368, (-2439.8368) / _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, abs(_GLF_IDENTITY(0.0, min(0.0, 0.0))) + (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((vec4(675.280, 9.7, 36.09, 5613.6397) - vec4(-8908.9465, 87.24, -9.7, -61.38)).w)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))) : mat2(1.0) * (injectionSwitch)))).y))))));
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))), bool(bvec4(! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))), false, false, true))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))));
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec2(bool(injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) || (false))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                barrier();
               barrier();
              }
             else
              {
              }
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, false))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(bvec3((false), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0))), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, abs(0.0)))))).y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), float(mat4x2(_GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), max(max(injectionSwitch.y, injectionSwitch.y), max(injectionSwitch.y, injectionSwitch.y))), 1.0, 0.0, 1.0, length(0.0), 0.0, 0.0, length(vec3(0.0, 0.0, 0.0))))))))))), false || (! (false)))))))
      {
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))) && true)))
        {
        }
       else
        {
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         do
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y))))
                      {
                       barrier();
                       if(_GLF_DEAD(false))
                        {
                         do
                          {
                           barrier();
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                        }
                       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))), ! (_GLF_IDENTITY(! ((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))), ! (_GLF_IDENTITY(! (! ((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))), true && (! (! ((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))))))))))
                        {
                         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec2(true, true)))))))
                          {
                           barrier();
                          }
                         else
                          {
                          }
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                      }
                     else
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                  }
                 else
                  {
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     else
      {
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     barrier();
    }
   else
    {
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
