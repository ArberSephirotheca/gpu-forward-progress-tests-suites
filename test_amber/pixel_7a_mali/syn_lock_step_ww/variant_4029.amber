#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, exp(0.0) * (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(361.695, -50.00)))).y, injectionSwitch.y, injectionSwitch.y))))))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, _GLF_ZERO(0.0, injectionSwitch.x) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-82.78), _GLF_FUZZED((3.3 * -597.768))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0))), 0.0, 1.0, 1.0, sin(abs(0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0))) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(25.25)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (false), false, false), bvec3(bvec3(bvec3(! (false), false, false))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(! (false), false, false), bvec3(bvec3(bvec3(! (false), false, false)))))), ! (! (! (bool(_GLF_IDENTITY(bvec3(! (false), false, false), bvec3(bvec3(bvec3(! (false), false, false)))))))))))))))), ((! (_GLF_IDENTITY(false, ! (! (false)))))) && true)))), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))), ! (! (! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, ! (! (false)))))), ! (! (! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))), bool(bvec4(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, ! (! (false)))))), ! (! (! _GLF_IDENTITY((! (! (_GLF_IDENTITY(false, ! (! (false)))))), false || ((! (! (_GLF_IDENTITY(false, ! (! (false))))))))))), false, false, true))), true)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 0.0, sin(0.0), 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(log2(-56.00)) : 0.0))))).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 0.0, sin(0.0), 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((false ? _GLF_FUZZED(log2(-56.00)) : 0.0), ((false ? _GLF_FUZZED(log2(-56.00)) : 0.0)) - 0.0))))).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)) : _GLF_FUZZED(injectionSwitch)), clamp((true ? _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)) : _GLF_FUZZED(injectionSwitch)), _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)) : _GLF_FUZZED(injectionSwitch)), clamp((true ? _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)) : _GLF_FUZZED(injectionSwitch)), (true ? _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)) : _GLF_FUZZED(injectionSwitch)), (true ? _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)) : _GLF_FUZZED(injectionSwitch)))), (true ? _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)) : _GLF_FUZZED(injectionSwitch))))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 0.0, sin(0.0), 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((false ? _GLF_FUZZED(log2(-56.00)) : 0.0), mix(float(_GLF_FUZZED(2959.0894)), float((false ? _GLF_FUZZED(log2(-56.00)) : 0.0)), bool(true))))))).x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 0.0, sin(0.0), _GLF_IDENTITY(0.0, float(mat2(0.0, tan(0.0), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), max(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))))), 1.0))), 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(log2(_GLF_IDENTITY(-56.00, mix(float(_GLF_FUZZED(-2393.2940)), float(-56.00), bool(true))))) : 0.0))))).x > injectionSwitch.y, true)))) || false)) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), 0.0 + (min(injectionSwitch.y, injectionSwitch.y))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bool(bool(bool(false))), (bool(bool(bool(false)))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), false))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (true), (! (true)) || false), true)), (bool(bvec2(_GLF_IDENTITY(! (true), (! (true)) || false), true))) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_base = _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (subgroup_id * subgroup_size)), ((~ (subgroup_id * subgroup_size))) ^ 0u), _GLF_IDENTITY((~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), uint(uvec4(~ (subgroup_id * subgroup_size), 1u, (1u ^ 0u), 0u))))) | (~ (~ (subgroup_id * subgroup_size))), max((~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), uint(uvec4(~ (subgroup_id * subgroup_size), 1u, (1u ^ 0u), 0u))))) | (~ (~ (subgroup_id * subgroup_size))), (~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), uint(uvec4(~ (subgroup_id * subgroup_size), 1u, (1u ^ 0u), 0u))))) | (~ (~ (subgroup_id * subgroup_size)))))))) - 0u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), bool(bvec3(false, _GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), (false) && true), (injectionSwitch.x > injectionSwitch.y)), true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(uvec2(workgroup_base, 0u), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec2(workgroup_base, 0u), ~ (_GLF_IDENTITY(~ (uvec2(workgroup_base, 0u)), _GLF_IDENTITY(max(~ (uvec2(workgroup_base, 0u)), ~ (uvec2(workgroup_base, 0u))), (max(~ (uvec2(workgroup_base, 0u)), ~ (_GLF_IDENTITY(uvec2(workgroup_base, 0u), (uvec2(workgroup_base, 0u)) / uvec2(1u, 1u))))) - uvec2(0u, 0u)))))), (false ? _GLF_FUZZED(uvec2(182785u, 67506u)) : ~ (_GLF_IDENTITY(uvec2(workgroup_base, 0u), ~ (_GLF_IDENTITY(~ (uvec2(workgroup_base, 0u)), _GLF_IDENTITY(max(_GLF_IDENTITY(~ (uvec2(workgroup_base, 0u)), _GLF_IDENTITY((~ (uvec2(workgroup_base, 0u))), (_GLF_IDENTITY((~ (uvec2(workgroup_base, 0u))), ((~ (uvec2(workgroup_base, 0u)))) - _GLF_IDENTITY(uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) >> uvec2(0u, 0u)))) | uvec2(0u, 0u)) << (uvec2(173877u, 60263u) & uvec2(0u, 0u))), _GLF_IDENTITY(~ (uvec2(workgroup_base, 0u)), (~ (uvec2(workgroup_base, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) >> 0u)))) - uvec2(0u, 0u))), (_GLF_IDENTITY(max(_GLF_IDENTITY(~ (uvec2(workgroup_base, 0u)), _GLF_IDENTITY((~ (uvec2(workgroup_base, 0u))), (_GLF_IDENTITY((~ (uvec2(workgroup_base, 0u))), ((~ (uvec2(workgroup_base, 0u)))) - _GLF_IDENTITY(uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) >> uvec2(0u, 0u)))) | uvec2(0u, 0u)) << (uvec2(173877u, 60263u) & uvec2(0u, 0u))), _GLF_IDENTITY(~ (uvec2(workgroup_base, 0u)), (~ (uvec2(workgroup_base, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) >> 0u)))) - uvec2(0u, 0u))), _GLF_IDENTITY(uvec2(uvec2(max(_GLF_IDENTITY(~ (uvec2(workgroup_base, 0u)), _GLF_IDENTITY((~ (uvec2(workgroup_base, 0u))), (_GLF_IDENTITY((~ (uvec2(workgroup_base, 0u))), ((~ (uvec2(workgroup_base, 0u)))) - _GLF_IDENTITY(uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) >> uvec2(0u, 0u)))) | uvec2(0u, 0u)) << (uvec2(173877u, 60263u) & uvec2(0u, 0u))), _GLF_IDENTITY(~ (uvec2(workgroup_base, 0u)), (~ (uvec2(workgroup_base, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) >> 0u)))) - uvec2(0u, 0u))))), (uvec2(uvec2(max(_GLF_IDENTITY(~ (uvec2(workgroup_base, 0u)), _GLF_IDENTITY((~ (uvec2(workgroup_base, 0u))), (_GLF_IDENTITY((~ (uvec2(workgroup_base, 0u))), ((~ (uvec2(workgroup_base, 0u)))) - _GLF_IDENTITY(uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) >> uvec2(0u, 0u)))) | uvec2(0u, 0u)) << (uvec2(173877u, 60263u) & uvec2(0u, 0u))), _GLF_IDENTITY(~ (uvec2(workgroup_base, 0u)), (~ (uvec2(workgroup_base, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) >> 0u)))) - uvec2(0u, 0u)))))) | (uvec2(uvec2(max(_GLF_IDENTITY(~ (uvec2(workgroup_base, 0u)), _GLF_IDENTITY((~ (uvec2(workgroup_base, 0u))), (_GLF_IDENTITY((~ (uvec2(workgroup_base, 0u))), ((~ (uvec2(workgroup_base, 0u)))) - _GLF_IDENTITY(uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) >> uvec2(0u, 0u)))) | uvec2(0u, 0u)) << (uvec2(173877u, 60263u) & uvec2(0u, 0u))), _GLF_IDENTITY(~ (uvec2(workgroup_base, 0u)), (~ (uvec2(workgroup_base, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) >> 0u)))) - uvec2(0u, 0u))))))))) - uvec2(0u, 0u))))))))), min((_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec2(workgroup_base, 0u), ~ (_GLF_IDENTITY(~ (uvec2(workgroup_base, 0u)), _GLF_IDENTITY(max(~ (uvec2(workgroup_base, 0u)), ~ (uvec2(workgroup_base, 0u))), (max(~ (uvec2(workgroup_base, 0u)), ~ (uvec2(workgroup_base, 0u)))) - uvec2(0u, 0u)))))), (false ? _GLF_FUZZED(uvec2(182785u, 67506u)) : ~ (_GLF_IDENTITY(uvec2(workgroup_base, 0u), ~ (_GLF_IDENTITY(~ (uvec2(workgroup_base, 0u)), max(_GLF_IDENTITY(~ (uvec2(workgroup_base, 0u)), _GLF_IDENTITY((~ (uvec2(workgroup_base, 0u))), (_GLF_IDENTITY((~ (uvec2(workgroup_base, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))), 0u))))), ((~ (uvec2(workgroup_base, 0u)))) - uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) | uvec2(0u, 0u)) << (uvec2(173877u, 60263u) & uvec2(0u, 0u))), _GLF_IDENTITY(~ (uvec2(workgroup_base, 0u)), (_GLF_IDENTITY(~ (uvec2(workgroup_base, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) >> 0u))), (~ (uvec2(workgroup_base, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) >> 0u)))) ^ uvec2(0u, 0u))) - uvec2(0u, 0u)))))))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec2(workgroup_base, 0u), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uvec2(workgroup_base, 0u)), (~ (uvec2(workgroup_base, 0u))) * _GLF_IDENTITY((uvec2(1u, 1u) | uvec2(1u, 1u)), ((uvec2(1u, 1u) | uvec2(1u, 1u))) | ((uvec2(1u, 1u) | uvec2(1u, 1u))))), _GLF_IDENTITY(max(~ (uvec2(workgroup_base, 0u)), ~ (uvec2(workgroup_base, 0u))), _GLF_IDENTITY((max(~ (uvec2(workgroup_base, 0u)), ~ (uvec2(workgroup_base, 0u)))) - uvec2(0u, 0u), clamp((max(~ (uvec2(workgroup_base, 0u)), ~ (uvec2(workgroup_base, 0u)))) - uvec2(0u, 0u), _GLF_IDENTITY((max(~ (uvec2(workgroup_base, 0u)), ~ (uvec2(workgroup_base, 0u)))) - uvec2(0u, 0u), ((max(~ (uvec2(workgroup_base, 0u)), ~ (uvec2(workgroup_base, 0u)))) - uvec2(0u, 0u)) / uvec2(1u, 1u)), (max(~ (uvec2(workgroup_base, 0u)), ~ (uvec2(workgroup_base, 0u)))) - uvec2(0u, 0u)))))))), (false ? _GLF_FUZZED(uvec2(182785u, 67506u)) : ~ (_GLF_IDENTITY(uvec2(workgroup_base, 0u), ~ (_GLF_IDENTITY(~ (uvec2(workgroup_base, 0u)), max(_GLF_IDENTITY(~ (uvec2(workgroup_base, 0u)), _GLF_IDENTITY((~ (uvec2(workgroup_base, 0u))), (_GLF_IDENTITY((~ (uvec2(workgroup_base, 0u))), ((~ (uvec2(workgroup_base, 0u)))) - uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) | uvec2(0u, 0u)) << (uvec2(173877u, 60263u) & uvec2(_GLF_IDENTITY(0u, 0u + (0u)), 0u))), _GLF_IDENTITY(~ (uvec2(workgroup_base, 0u)), (~ (uvec2(workgroup_base, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) >> 0u)))) - uvec2(0u, 0u))))))))))))))) + _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, (subgroup_base) << 0u)) >> 0u) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true, true, true)))), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), ! (! (bool(bool((injectionSwitch.x > injectionSwitch.y)))))))), false, true)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)) && true))), true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), mix(vec2((vec2(vec2(injectionSwitch)))[0], _GLF_FUZZED(8.7)), vec2(_GLF_FUZZED(-5396.5485), (vec2(vec2(injectionSwitch)))[1]), bvec2(false, true)))) : _GLF_FUZZED(log2(mat4x2(-956.491, 208.883, -393.658, 7.9, 5.0, 622.648, 418.236, -9.3)[2])))), 1.0, 0.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat4(_GLF_IDENTITY(7.3, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(7.3, (7.3) + 0.0), sqrt(1.0), 0.0, 0.0), mix(vec4(_GLF_FUZZED(4633.1154), (vec4(_GLF_IDENTITY(7.3, (7.3) + 0.0), sqrt(1.0), 0.0, 0.0))[1], (vec4(_GLF_IDENTITY(7.3, (7.3) + 0.0), sqrt(1.0), 0.0, 0.0))[2], (vec4(_GLF_IDENTITY(7.3, (7.3) + 0.0), sqrt(1.0), 0.0, 0.0))[3]), vec4((vec4(_GLF_IDENTITY(7.3, (7.3) + 0.0), sqrt(1.0), 0.0, 0.0))[0], _GLF_FUZZED(-6.2), _GLF_FUZZED(2226.2306), _GLF_FUZZED(-967.162)), bvec4(true, false, false, false))))), 2427.0390, 0.1, -3985.2922, -408.984, 48.27, -3274.8773, -70.32, 0.2, -6.9, -8.3, -777.030, -322.577, -8983.4677, 2.1, -63.59)) : _GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0), (true ? mat4(injectionSwitch, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(94.23)), float(1.0), bool(true))), 0.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0) : _GLF_FUZZED(_GLF_IDENTITY(mat4(-2.7, 0.3, 270.373, 5.7, 868.909, -1.2, 4.7, -606.167, -446.517, -2443.6209, -6.8, 7790.4922, 3.1, -206.494, 59.31, -88.36), (_GLF_IDENTITY(mat4(-2.7, 0.3, 270.373, 5.7, 868.909, -1.2, 4.7, -606.167, -446.517, -2443.6209, -6.8, 7790.4922, 3.1, -206.494, 59.31, -88.36), (true ? mat4(-2.7, 0.3, 270.373, 5.7, 868.909, -1.2, 4.7, -606.167, -446.517, -2443.6209, -6.8, 7790.4922, 3.1, -206.494, 59.31, -88.36) : _GLF_FUZZED(mat4(8.6, -40.53, 36.93, 1.7, 4.0, 22.70, 0.0, 1770.9437, -842.420, 5199.0121, -1.8, 0.5, 7139.3701, -1.7, -2.6, 7560.6973))))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))), (_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), mix(vec2((vec2(vec2(injectionSwitch)))[0], _GLF_FUZZED(8.7)), vec2(_GLF_FUZZED(-5396.5485), (vec2(vec2(injectionSwitch)))[1]), bvec2(false, true)))) : _GLF_FUZZED(log2(mat4x2(-956.491, 208.883, -393.658, 7.9, 5.0, 622.648, _GLF_IDENTITY(418.236, float(_GLF_IDENTITY(mat4(418.236, 1.0, 0.0, 0.0, 0.0, 0.0, length(vec2(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)), 0.0, 1.0), (mat4(418.236, 1.0, 0.0, 0.0, 0.0, 0.0, length(vec2(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)), 0.0, 1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), -9.3)[2])))), 1.0, 0.0, sqrt(0.0), _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat4(7.3, 2427.0390, 0.1, -3985.2922, -408.984, 48.27, -3274.8773, -70.32, 0.2, -6.9, -8.3, -777.030, -322.577, -8983.4677, 2.1, -63.59)) : _GLF_IDENTITY(mat4(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-256.125)), bool(false))), sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0), (true ? mat4(injectionSwitch, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(94.23)), float(1.0), bool(true))), 0.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0) : _GLF_FUZZED(_GLF_IDENTITY(mat4(-2.7, 0.3, 270.373, 5.7, 868.909, -1.2, 4.7, -606.167, -446.517, -2443.6209, -6.8, 7790.4922, 3.1, -206.494, 59.31, -88.36), (_GLF_IDENTITY(mat4(-2.7, _GLF_IDENTITY(0.3, mix(float(0.3), float(_GLF_FUZZED(6113.0485)), bool(false))), 270.373, 5.7, 868.909, -1.2, 4.7, -606.167, -446.517, -2443.6209, -6.8, 7790.4922, 3.1, -206.494, 59.31, -88.36), (true ? mat4(-2.7, 0.3, 270.373, 5.7, 868.909, -1.2, 4.7, -606.167, -446.517, -2443.6209, -6.8, 7790.4922, 3.1, -206.494, 59.31, -88.36) : _GLF_FUZZED(mat4(8.6, -40.53, 36.93, 1.7, 4.0, 22.70, 0.0, 1770.9437, -842.420, 5199.0121, -1.8, 0.5, 7139.3701, -1.7, -2.6, 7560.6973))))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))))) + mat4(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))).y)) || (false), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), false || (false)))) && true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)), (bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))) || false)))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, sqrt(1.0), 1.0, 0.0))).y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, ~ (~ _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, min(subgroup_base, _GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, uint(uvec3(subgroup_base, 1u, 0u))), subgroup_base)))), 1u * (subgroup_base))), max((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u) + _GLF_IDENTITY(subgroup_base, (0u | 0u) ^ (subgroup_base))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 1u * (workgroup_base))) >> _GLF_IDENTITY(0u, (0u) - 0u)) + subgroup_base, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 1u * (workgroup_base))) >> _GLF_IDENTITY(0u, (0u) - 0u)), (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 1u * (workgroup_base))) >> _GLF_IDENTITY(0u, (0u) - 0u))) + 0u) + subgroup_base, 0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 1u)))))))) + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, 0u ^ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u))) + 1) % subgroup_size), (((_GLF_IDENTITY(subgroup_local_id, 0u ^ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u))) + 1) % subgroup_size)) << 0u), max(_GLF_IDENTITY(workgroup_base + subgroup_base, ~ (~ _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, min(subgroup_base, _GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, uint(uvec3(subgroup_base, 1u, 0u))), subgroup_base)))), 1u * (subgroup_base))), max((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u) + _GLF_IDENTITY(subgroup_base, (0u | 0u) ^ (subgroup_base))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 1u * (workgroup_base))) >> _GLF_IDENTITY(0u, (0u) - 0u)) + subgroup_base, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 1u * (workgroup_base))) >> _GLF_IDENTITY(0u, (0u) - 0u)), (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 1u * (workgroup_base))) >> _GLF_IDENTITY(0u, (0u) - 0u))) + 0u) + subgroup_base, 0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 1u)))))))) + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, 0u ^ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u))) + 1) % subgroup_size), (((_GLF_IDENTITY(subgroup_local_id, 0u ^ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u))) + 1) % subgroup_size)) << 0u), _GLF_IDENTITY(workgroup_base + subgroup_base, ~ (~ _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, min(subgroup_base, _GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, uint(uvec3(subgroup_base, 1u, 0u))), subgroup_base)))), 1u * (subgroup_base))), max((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u) + _GLF_IDENTITY(subgroup_base, (0u | 0u) ^ (subgroup_base))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 1u * (workgroup_base))) >> _GLF_IDENTITY(0u, (0u) - 0u)) + subgroup_base, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 1u * (workgroup_base))) >> _GLF_IDENTITY(0u, (0u) - 0u)), (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 1u * (workgroup_base))) >> _GLF_IDENTITY(0u, (0u) - 0u))) + 0u) + subgroup_base, 0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 1u)))))))) + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, 0u ^ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u))) + 1) % subgroup_size), (((_GLF_IDENTITY(subgroup_local_id, 0u ^ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u))) + 1) % subgroup_size)) << 0u)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false)))) || false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (! (! (injectionSwitch.x > injectionSwitch.y))) || false)))))))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true, true))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))) && true))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(false || (_GLF_IDENTITY((! (false)), false || _GLF_IDENTITY((_GLF_IDENTITY((! (false)), true && ((! (false))))), ! (! ((_GLF_IDENTITY((! (false)), true && ((! (false)))))))))), (false || (_GLF_IDENTITY((! (false)), false || _GLF_IDENTITY((_GLF_IDENTITY((! (false)), true && ((! (false))))), ! (! ((_GLF_IDENTITY((! (false)), true && ((! (false))))))))))) || false))), true && (false)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false)))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), (bool(bvec4(false, true, false, false))) || false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), ! (! (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) / vec2(1.0, 1.0)).y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) / vec2(1.0, 1.0)).y), false || ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) / vec2(1.0, 1.0)).y)))) || false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, 0u + _GLF_IDENTITY((virtual_gid), min((virtual_gid), (virtual_gid)))), 0u ^ (_GLF_IDENTITY(virtual_gid, 0u + _GLF_IDENTITY((virtual_gid), min((virtual_gid), (virtual_gid))))))], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  barrier();
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(2), min(uint(2), uint(2))), (uint(2)) | _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : ~ (0u), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : ~ (0u), (false ? _GLF_FUZZED(workgroup_base) : false ? _GLF_FUZZED(subgroup_id) : ~ (0u)))) | (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : ~ (0u), (false ? _GLF_FUZZED(subgroup_id) : ~ (0u)) | (false ? _GLF_FUZZED(subgroup_id) : ~ (0u)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(subgroup_id) : ~ _GLF_IDENTITY((0u), max((0u), _GLF_IDENTITY((0u), ~ (~ ((0u)))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : ~ (0u), (false ? _GLF_FUZZED(workgroup_base) : false ? _GLF_FUZZED(subgroup_id) : ~ (0u)))) | (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(~ (0u), ~ (_GLF_IDENTITY(~ (~ (0u)), (~ (~ (0u))) << 0u))), (false ? _GLF_FUZZED(subgroup_id) : ~ (0u)) | (false ? _GLF_FUZZED(subgroup_id) : ~ (0u))))))) ^ 0u))))), 4, 64, _GLF_IDENTITY(4, (4) - 0));
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false, true, false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
