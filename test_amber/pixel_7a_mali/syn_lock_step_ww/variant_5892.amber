#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_56 {
 vec4 _f0;
 uvec4 _f1;
 bvec4 _f2;
 uvec3 _f3;
 mat2x3 _f4;
 mat3x2 _f5;
 mat3 _f6;
} ;

struct _GLF_struct_55 {
 mat3x4 _f0;
 mat2x4 _f1;
 uint virtual_gid;
 mat4 _f2;
} ;

struct _GLF_struct_54 {
 mat2x3 _f0;
} ;

struct _GLF_struct_57 {
 uvec4 _f0;
 _GLF_struct_54 _f1;
 _GLF_struct_55 _f2;
 _GLF_struct_56 _f3;
 mat4 _f4;
} ;

struct _GLF_struct_52 {
 int _f0;
 mat4x3 _f1;
 mat3 _f2;
 vec3 _f3;
 vec3 _f4;
 uint _f5;
 ivec4 _f6;
} ;

struct _GLF_struct_51 {
 bvec3 _f0;
} ;

struct _GLF_struct_53 {
 vec3 _f0;
 bvec4 _f1;
 _GLF_struct_51 _f2;
 bool _f3;
 _GLF_struct_52 _f4;
} ;

struct _GLF_struct_49 {
 uvec4 _f0;
 mat3x2 _f1;
 bvec3 _f2;
 vec2 _f3;
 bvec2 _f4;
 int _f5;
} ;

struct _GLF_struct_48 {
 bvec4 _f0;
 mat2x4 _f1;
} ;

struct _GLF_struct_47 {
 mat4x2 _f0;
 float _f1;
} ;

struct _GLF_struct_50 {
 _GLF_struct_47 _f0;
 _GLF_struct_48 _f1;
 bool _f2;
 mat4x3 _f3;
 _GLF_struct_49 _f4;
 uvec3 _f5;
} ;

struct _GLF_struct_45 {
 mat3x2 _f0;
 mat3x2 _f1;
 mat3x2 _f2;
} ;

struct _GLF_struct_44 {
 int _f0;
 mat2x4 _f1;
 mat4x3 _f2;
 uvec2 _f3;
 bvec2 _f4;
} ;

struct _GLF_struct_43 {
 mat3 _f0;
 float _f1;
 uvec3 _f2;
 bvec2 _f3;
 mat4x3 _f4;
 vec2 _f5;
 mat3x2 _f6;
} ;

struct _GLF_struct_42 {
 mat4x3 _f0;
} ;

struct _GLF_struct_41 {
 mat2x3 _f0;
 ivec4 _f1;
 uint _f2;
 mat3x4 _f3;
 bvec2 _f4;
} ;

struct _GLF_struct_40 {
 bvec3 _f0;
 mat3x2 _f1;
 uvec4 _f2;
 mat3x2 _f3;
 mat4x3 _f4;
} ;

struct _GLF_struct_46 {
 _GLF_struct_40 _f0;
 _GLF_struct_41 _f1;
 _GLF_struct_42 _f2;
 _GLF_struct_43 _f3;
 _GLF_struct_44 _f4;
 bool _f5;
 _GLF_struct_45 _f6;
} ;

struct _GLF_struct_58 {
 _GLF_struct_46 _f0;
 _GLF_struct_50 _f1;
 _GLF_struct_53 _f2;
 mat3x4 _f3;
 _GLF_struct_57 _f4;
} ;

struct _GLF_struct_37 {
 bool _f0;
 bvec2 _f1;
 mat3x4 _f2;
 mat2x3 _f3;
} ;

struct _GLF_struct_38 {
 int _f0;
 uint _f1;
 _GLF_struct_37 _f2;
} ;

struct _GLF_struct_36 {
 ivec3 _f0;
 bvec3 _f1;
 uvec2 _f2;
} ;

struct _GLF_struct_34 {
 mat3x2 _f0;
 mat2 _f1;
} ;

struct _GLF_struct_33 {
 float _f0;
} ;

struct _GLF_struct_35 {
 _GLF_struct_33 _f0;
 _GLF_struct_34 _f1;
 uvec2 _f2;
} ;

struct _GLF_struct_39 {
 _GLF_struct_35 _f0;
 mat2x4 _f1;
 uint subgroup_size;
 _GLF_struct_36 _f2;
 _GLF_struct_38 _f3;
} ;

struct _GLF_struct_30 {
 mat2x4 _f0;
 uvec2 _f1;
 mat4x3 _f2;
} ;

struct _GLF_struct_29 {
 vec4 _f0;
 mat4x2 _f1;
 mat2 _f2;
 bvec4 _f3;
 uvec3 _f4;
} ;

struct _GLF_struct_28 {
 bvec4 _f0;
 mat3x4 _f1;
 float _f2;
 bvec3 _f3;
 mat4 _f4;
} ;

struct _GLF_struct_27 {
 float _f0;
 ivec4 _f1;
 ivec4 _f2;
 vec3 _f3;
} ;

struct _GLF_struct_31 {
 _GLF_struct_27 _f0;
 _GLF_struct_28 _f1;
 _GLF_struct_29 _f2;
 mat3x4 _f3;
 _GLF_struct_30 _f4;
} ;

struct _GLF_struct_25 {
 mat2x4 _f0;
 ivec3 _f1;
 mat4 _f2;
 mat2x4 _f3;
 uvec3 _f4;
 vec4 _f5;
} ;

struct _GLF_struct_26 {
 mat4 _f0;
 _GLF_struct_25 _f1;
} ;

struct _GLF_struct_23 {
 ivec3 _f0;
 mat2x4 _f1;
} ;

struct _GLF_struct_22 {
 ivec2 _f0;
 vec4 _f1;
 uvec4 _f2;
 uvec2 _f3;
 mat4x3 _f4;
 uint workgroup_id;
 ivec3 _f5;
 float _f6;
} ;

struct _GLF_struct_21 {
 bvec2 _f0;
 bvec4 _f1;
 uvec3 _f2;
 mat2x3 _f3;
 vec2 _f4;
} ;

struct _GLF_struct_24 {
 _GLF_struct_21 _f0;
 _GLF_struct_22 _f1;
 _GLF_struct_23 _f2;
 uint _f3;
 mat2x3 _f4;
} ;

struct _GLF_struct_19 {
 vec4 _f0;
 mat2x4 _f1;
 mat4 _f2;
 vec2 _f3;
 mat4x2 _f4;
 float _f5;
} ;

struct _GLF_struct_18 {
 mat3 _f0;
 ivec4 _f1;
} ;

struct _GLF_struct_17 {
 mat4x3 _f0;
 bvec3 _f1;
 mat2x4 _f2;
 bool _f3;
} ;

struct _GLF_struct_20 {
 _GLF_struct_17 _f0;
 _GLF_struct_18 _f1;
 mat4x2 _f2;
 _GLF_struct_19 _f3;
} ;

struct _GLF_struct_32 {
 _GLF_struct_20 _f0;
 bvec2 _f1;
 _GLF_struct_24 _f2;
 mat2x4 _f3;
 _GLF_struct_26 _f4;
 _GLF_struct_31 _f5;
 mat4x3 _f6;
} ;

struct _GLF_struct_14 {
 int _f0;
 uvec3 _f1;
 ivec4 _f2;
 bool _f3;
 bvec2 _f4;
 ivec2 _f5;
 uvec3 _f6;
} ;

struct _GLF_struct_13 {
 vec2 _f0;
 ivec3 _f1;
} ;

struct _GLF_struct_12 {
 ivec2 _f0;
 uvec2 _f1;
 mat3x2 _f2;
 mat4x2 _f3;
} ;

struct _GLF_struct_15 {
 _GLF_struct_12 _f0;
 uint subgroup_local_id;
 uint _f1;
 _GLF_struct_13 _f2;
 _GLF_struct_14 _f3;
 ivec3 _f4;
} ;

struct _GLF_struct_10 {
 vec4 _f0;
} ;

struct _GLF_struct_11 {
 _GLF_struct_10 _f0;
 bvec4 _f1;
} ;

struct _GLF_struct_8 {
 mat3x4 _f0;
} ;

struct _GLF_struct_7 {
 ivec4 _f0;
 vec2 _f1;
 uint _f2;
 ivec2 _f3;
} ;

struct _GLF_struct_9 {
 bvec4 _f0;
 _GLF_struct_7 _f1;
 _GLF_struct_8 _f2;
} ;

struct _GLF_struct_5 {
 mat3x2 _f0;
 uvec4 _f1;
 uvec2 _f2;
} ;

struct _GLF_struct_4 {
 mat2 _f0;
} ;

struct _GLF_struct_3 {
 uvec3 _f0;
 bool _f1;
} ;

struct _GLF_struct_2 {
 mat4x2 _f0;
 bool _f1;
 mat3x2 _f2;
 vec4 _f3;
 mat4x2 _f4;
} ;

struct _GLF_struct_1 {
 ivec4 _f0;
 float _f1;
} ;

struct _GLF_struct_0 {
 vec4 _f0;
 mat3x4 _f1;
 float _f2;
} ;

struct _GLF_struct_6 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
 uvec3 _f3;
 _GLF_struct_3 _f4;
 _GLF_struct_4 _f5;
 _GLF_struct_5 _f6;
} ;

struct _GLF_struct_16 {
 _GLF_struct_6 _f0;
 _GLF_struct_9 _f1;
 _GLF_struct_11 _f2;
 vec2 _f3;
 bvec3 _f4;
 _GLF_struct_15 _f5;
 mat4x3 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) && true), (! (false)) || false), (_GLF_IDENTITY(! (false), (! (false)) || false)) || false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(_GLF_IDENTITY(bvec2(! (! (false)), false), bvec2(bvec3(bvec2(! (! (false)), false), false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))), bool(bvec4(! (_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(false, (false) && true), true)))), true, true, true))))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      barrier();
     barrier();
    }
  }
 _GLF_struct_39 _GLF_struct_replacement_39 = _GLF_struct_39(_GLF_struct_35(_GLF_struct_33(1.0), _GLF_struct_34(mat3x2(_GLF_IDENTITY(1.0, (1.0) - 0.0)), mat2(1.0)), uvec2(1u)), mat2x4(1.0), gl_SubgroupSize, _GLF_struct_36(ivec3(1), bvec3(true), uvec2(1u)), _GLF_struct_38(1, _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, 0u, _GLF_IDENTITY(1u, 0u | (1u))), (uvec3(1u, 0u, 1u)) / uvec3(1u, 1u, 1u)), uvec3(uvec4(_GLF_IDENTITY(uvec3(1u, 0u, 1u), uvec3(1u, 1u, 1u) * (uvec3(_GLF_IDENTITY(1u, (1u) | (1u)), 0u, 1u))), ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))))))), _GLF_struct_37(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bool(true)))), ! (! (! (_GLF_IDENTITY(true, bool(bool(true))))))))), bvec2(true), mat3x4(1.0), mat2x3(1.0))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
  return;
 _GLF_struct_16 _GLF_struct_replacement_16 = _GLF_struct_16(_GLF_struct_6(_GLF_struct_0(vec4(1.0), mat3x4(1.0), 1.0), _GLF_struct_1(ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 0, (0 | 1), 1), (ivec4(1, 0, (0 | 1), 1)) | (ivec4(1, 0, (0 | 1), 1)))))) | (1))), 1.0), _GLF_struct_2(mat4x2(1.0), true, mat3x2(1.0), _GLF_IDENTITY(vec4(1.0), vec4(mat2(vec4(1.0)))), mat4x2(1.0)), uvec3(1u), _GLF_struct_3(uvec3(1u), _GLF_IDENTITY(true, (true) || false)), _GLF_struct_4(mat2(1.0)), _GLF_struct_5(mat3x2(1.0), uvec4(_GLF_IDENTITY(1u, (1u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) | 0u), (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) | 0u)) | (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) | 0u))), 1u)), clamp(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) | 0u), (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) | 0u)) | (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) | 0u))), 1u)), _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) | 0u), (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) | 0u)) | (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) | 0u))), 1u)), _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) | 0u), (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) | 0u)) | (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) | 0u))), 1u))))))), _GLF_struct_9(bvec4(true), _GLF_struct_7(ivec4(1), vec2(1.0), 1u, _GLF_IDENTITY(ivec2(1), ivec2(0, 0) | (ivec2(1)))), _GLF_struct_8(mat3x4(1.0))), _GLF_struct_11(_GLF_struct_10(vec4(1.0)), bvec4(true)), vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0))), bvec3(true), _GLF_struct_15(_GLF_struct_12(ivec2(1), uvec2(1u), mat3x2(1.0), mat4x2(1.0)), gl_SubgroupInvocationID, 1u, _GLF_struct_13(vec2(1.0), ivec3(1)), _GLF_struct_14(_GLF_IDENTITY(1, (1) * 1), _GLF_IDENTITY(uvec3(1u), (uvec3(1u)) / uvec3(1u, 1u, 1u)), ivec4(1), true, bvec2(true), ivec2(1), _GLF_IDENTITY(uvec3(1u), max(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(uvec3(1u), uvec3(uvec3(uvec3(_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (1u) - 0u), 1u))))))))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(1u), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(uvec3(1u), uvec3(uvec3(uvec3(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, 0u, 1u, 1u)), clamp(uint(uvec4(1u, 0u, 1u, 1u)), uint(uvec4(1u, 0u, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) | 0u), 1u)), 1u)), uint(uvec4(1u, 0u, 1u, 1u)))))))))))), max(~ (_GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), max(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), min(uvec3(1u, 1u, 1u), uvec3(1u, 1u, _GLF_IDENTITY(1u, (1u) / 1u)))))) * (_GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY(uvec3(uvec3(uvec3(1u))), uvec3(uvec3(uvec3(uvec3(uvec3(1u)))))))))), ~ (_GLF_IDENTITY(uvec3(1u), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY(uvec3(uvec3(uvec3(1u))), (uvec3(uvec3(uvec3(1u)))) | (uvec3(uvec3(uvec3(1u)))))), uvec3(_GLF_IDENTITY(uvec3(uvec3(1u)), min(_GLF_IDENTITY(uvec3(uvec3(1u)), (true ? uvec3(uvec3(_GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(148684u) : 1u)))) : _GLF_FUZZED(uvec3(86218u, 123862u, 178786u)))), _GLF_IDENTITY(uvec3(uvec3(1u)), (uvec3(uvec3(1u))) + uvec3(0u, 0u, 0u)))))))))))), uvec3(_GLF_IDENTITY(uvec3(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(1u), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(uvec3(1u), uvec3(uvec3(uvec3(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, 0u, 1u, 1u)), clamp(uint(uvec4(1u, 0u, 1u, 1u)), uint(uvec4(1u, 0u, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) | 0u), 1u)), 1u)), uint(uvec4(1u, 0u, 1u, 1u)))))))))))), max(~ (_GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), max(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), min(uvec3(1u, 1u, 1u), uvec3(1u, 1u, _GLF_IDENTITY(1u, (1u) / 1u)))))) * (_GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY(uvec3(uvec3(uvec3(1u))), uvec3(uvec3(uvec3(uvec3(uvec3(1u)))))))))), ~ (_GLF_IDENTITY(uvec3(1u), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY(uvec3(uvec3(uvec3(1u))), (uvec3(uvec3(uvec3(1u)))) | (uvec3(uvec3(uvec3(1u)))))), uvec3(_GLF_IDENTITY(uvec3(uvec3(1u)), min(_GLF_IDENTITY(uvec3(uvec3(1u)), (true ? uvec3(uvec3(_GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(148684u) : 1u)))) : _GLF_FUZZED(uvec3(86218u, 123862u, 178786u)))), _GLF_IDENTITY(uvec3(uvec3(1u)), (uvec3(uvec3(1u))) + uvec3(0u, 0u, 0u))))))))))))), (uvec3(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(1u), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(uvec3(1u), uvec3(uvec3(uvec3(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, 0u, 1u, 1u)), clamp(uint(uvec4(1u, 0u, 1u, 1u)), uint(uvec4(1u, 0u, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) | 0u), 1u)), 1u)), uint(uvec4(1u, 0u, 1u, 1u)))))))))))), max(~ (_GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), max(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), min(uvec3(1u, 1u, 1u), uvec3(1u, 1u, _GLF_IDENTITY(1u, (1u) / 1u)))))) * (_GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY(uvec3(uvec3(uvec3(1u))), uvec3(uvec3(uvec3(uvec3(uvec3(1u)))))))))), ~ (_GLF_IDENTITY(uvec3(1u), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY(uvec3(uvec3(uvec3(1u))), (uvec3(uvec3(uvec3(1u)))) | (uvec3(uvec3(uvec3(1u)))))), uvec3(_GLF_IDENTITY(uvec3(uvec3(1u)), min(_GLF_IDENTITY(uvec3(uvec3(1u)), (true ? uvec3(uvec3(_GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(148684u) : 1u)))) : _GLF_FUZZED(uvec3(86218u, 123862u, 178786u)))), _GLF_IDENTITY(uvec3(uvec3(1u)), (uvec3(uvec3(1u))) + uvec3(0u, 0u, 0u)))))))))))))) | (uvec3(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(1u), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(uvec3(1u), uvec3(uvec3(uvec3(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, 0u, 1u, 1u)), clamp(uint(uvec4(1u, 0u, 1u, 1u)), uint(uvec4(1u, 0u, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) | 0u), 1u)), 1u)), uint(uvec4(1u, 0u, 1u, 1u)))))))))))), max(~ (_GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), max(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), min(uvec3(1u, 1u, 1u), uvec3(1u, 1u, _GLF_IDENTITY(1u, (1u) / 1u)))))) * (_GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY(uvec3(uvec3(uvec3(1u))), uvec3(uvec3(uvec3(uvec3(uvec3(1u)))))))))), ~ (_GLF_IDENTITY(uvec3(1u), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY(uvec3(uvec3(uvec3(1u))), (uvec3(uvec3(uvec3(1u)))) | (uvec3(uvec3(uvec3(1u)))))), uvec3(_GLF_IDENTITY(uvec3(uvec3(1u)), min(_GLF_IDENTITY(uvec3(uvec3(1u)), (true ? uvec3(uvec3(_GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(148684u) : 1u)))) : _GLF_FUZZED(uvec3(86218u, 123862u, 178786u)))), _GLF_IDENTITY(uvec3(uvec3(1u)), (uvec3(uvec3(1u))) + uvec3(0u, 0u, 0u)))))))))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(1u, 1u), (true ? uvec2(1u, 1u) : _GLF_FUZZED((uvec2(157808u, 62099u) % uvec2(27526u, 119087u)))))), 0u | (uint(uvec2(1u, 1u)))))) >> 0u)), (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(1u, 1u), uvec2(uvec2(uvec2(1u, 1u))))), 0u | (uint(uvec2(1u, 1u)))))) >> 0u)), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(1u, 1u), uvec2(uvec2(uvec2(1u, 1u))))), 0u | (uint(uvec2(1u, 1u)))))) >> 0u)))), ~ (_GLF_IDENTITY(~ (uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec2(1u, 1u)), 0u | (uint(uvec2(1u, 1u)))))) >> 0u))), uvec3(uvec4(~ (uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec2(1u, 1u)), 0u | (uint(uvec2(1u, 1u)))))) >> _GLF_IDENTITY(0u, (0u) >> 0u)))), 1u))))) : _GLF_FUZZED(uvec3(_GLF_IDENTITY(97978u, min(97978u, _GLF_IDENTITY(97978u, min(97978u, 97978u)))), 172682u, 25942u)), uvec3(0u, 0u, 0u) ^ (true ? _GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(1u, 1u), uvec2(uvec2(uvec2(1u, 1u))))), 0u | (uint(uvec2(1u, 1u)))))) >> 0u)), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(1u, 1u), uvec2(uvec2(uvec2(1u, 1u))))), 0u | (uint(uvec2(1u, 1u)))))) >> 0u)))), ~ (_GLF_IDENTITY(~ (uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec2(1u, 1u)), 0u | (uint(uvec2(1u, 1u)))))) >> 0u))), uvec3(uvec4(~ (uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec2(1u, 1u)), 0u | (uint(uvec2(1u, 1u)))))) >> _GLF_IDENTITY(0u, (0u) >> 0u)))), 1u))))) : _GLF_FUZZED(uvec3(_GLF_IDENTITY(97978u, min(97978u, _GLF_IDENTITY(97978u, min(97978u, 97978u)))), 172682u, 25942u)))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), (true ? uvec3(1u) : _GLF_FUZZED(uvec3(82561u, 4129u, 16578u))))) << uvec3(0u, 0u, 0u)), ~ (~ (_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) - uvec3(0u, 0u, 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), (true ? uvec3(1u) : _GLF_FUZZED(uvec3(82561u, 4129u, 16578u))))) << uvec3(0u, 0u, 0u)), ~ (~ (_GLF_IDENTITY(uvec3(1u), (uvec3(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))))) - uvec3(0u, 0u, _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, (0u) | (0u)), 1u, 1u, 1u), (uvec4(_GLF_IDENTITY(0u, (0u) | (0u)), 1u, 1u, 1u)) * uvec4(1u, 1u, 1u, 1u)))))))))) - uvec3(0u, 0u, 0u)))))))), ivec3(1)), mat4x3(1.0));
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), bool(bvec4(bool(bvec4(false, false, false, true)), false, true, true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y) && true), _GLF_IDENTITY(false, (false) || false), false)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), (bool(bvec4(false, false, true, true))) || false))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ((false) || false) || false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) || false)))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, false)), ! (! (bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, false)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 _GLF_struct_32 _GLF_struct_replacement_32 = _GLF_struct_32(_GLF_struct_20(_GLF_struct_17(mat4x3(1.0), bvec3(true), mat2x4(1.0), true), _GLF_struct_18(mat3(1.0), ivec4(1)), mat4x2(1.0), _GLF_struct_19(vec4(1.0), mat2x4(1.0), mat4(1.0), _GLF_IDENTITY(vec2(1.0), clamp(vec2(1.0), _GLF_IDENTITY(vec2(1.0), min(vec2(1.0), vec2(1.0))), vec2(1.0))), mat4x2(_GLF_IDENTITY(1.0, max(1.0, 1.0))), 1.0)), bvec2(true), _GLF_struct_24(_GLF_struct_21(bvec2(true), bvec4(true), uvec3(1u), mat2x3(1.0), vec2(1.0)), _GLF_struct_22(ivec2(1), vec4(1.0), uvec4(1u), uvec2(1u), mat4x3(1.0), gl_WorkGroupID.x, ivec3(1), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x4(1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(abs(1.0), (true ? abs(1.0) : _GLF_FUZZED(-1.0))), 0.0, log(_GLF_IDENTITY(1.0, (1.0) / cos(0.0))))), (float(mat3x4(1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 0.0))), 0.0, 0.0, 1.0, 1.0, abs(1.0), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2288.3131)), float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(733.138) : 0.0))), bool(true))), log(1.0)))) + 0.0))), _GLF_struct_23(ivec3(1), mat2x4(1.0)), 1u, mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0, 0.0, 0.0, 0.0, length(vec2(0.0, 0.0)), 1.0, 1.0)), min(_GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0, 0.0, 0.0, 0.0, length(vec2(0.0, 0.0)), 1.0, 1.0)), min(float(mat2x4(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0, 0.0, 0.0, 0.0, length(vec2(0.0, 0.0)), 1.0, 1.0)), float(mat2x4(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0, 0.0, 0.0, 0.0, length(vec2(0.0, 0.0)), 1.0, 1.0)))), float(mat2x4(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0, 0.0, 0.0, 0.0, length(vec2(0.0, 0.0)), 1.0, 1.0))))), _GLF_IDENTITY(min(1.0, 1.0), _GLF_IDENTITY((_GLF_IDENTITY(min(1.0, 1.0), clamp(min(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0)), 1.0), min(1.0, 1.0), min(1.0, 1.0)))), 0.0 + ((_GLF_IDENTITY(_GLF_IDENTITY(min(1.0, 1.0), clamp(min(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0 * (1.0), clamp(1.0 * (1.0), 1.0 * (1.0), 1.0 * (1.0)))), 1.0)), 1.0), min(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0), min(1.0, 1.0))), max(_GLF_IDENTITY(min(1.0, 1.0), clamp(min(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0 * (1.0), clamp(1.0 * (1.0), 1.0 * (1.0), 1.0 * (1.0)))), 1.0)), 1.0), min(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0), min(1.0, 1.0))), _GLF_IDENTITY(min(1.0, 1.0), clamp(min(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0 * (1.0), clamp(1.0 * (1.0), 1.0 * (1.0), 1.0 * (1.0)))), 1.0)), 1.0), min(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0), min(1.0, 1.0)))))))) + abs(0.0))))), mat2x4(1.0), _GLF_struct_26(mat4(1.0), _GLF_struct_25(mat2x4(1.0), ivec3(1), mat4(1.0), mat2x4(_GLF_IDENTITY(1.0, max(1.0, 1.0))), uvec3(1u), _GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (1.0) / abs(1.0))), _GLF_IDENTITY(clamp(vec4(_GLF_IDENTITY(1.0, (1.0) / abs(1.0))), _GLF_IDENTITY(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (1.0) / abs(1.0))), (true ? vec4(_GLF_IDENTITY(1.0, (1.0) / abs(1.0))) : _GLF_FUZZED(vec4(622.350, 6.7, -1.7, -4.6)))), min(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (1.0) / abs(1.0))), (true ? vec4(_GLF_IDENTITY(1.0, (1.0) / abs(1.0))) : _GLF_FUZZED(vec4(622.350, 6.7, -1.7, -4.6)))), _GLF_IDENTITY(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (1.0) / abs(1.0))), (true ? vec4(_GLF_IDENTITY(1.0, (1.0) / abs(1.0))) : _GLF_FUZZED(vec4(622.350, 6.7, -1.7, -4.6)))), mix(vec4((_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (1.0) / abs(1.0))), (true ? vec4(_GLF_IDENTITY(1.0, (1.0) / abs(1.0))) : _GLF_FUZZED(vec4(622.350, 6.7, -1.7, -4.6)))))[0], _GLF_FUZZED(80.08), (_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (1.0) / abs(1.0))), (true ? vec4(_GLF_IDENTITY(1.0, (1.0) / abs(1.0))) : _GLF_FUZZED(vec4(622.350, 6.7, -1.7, -4.6)))))[2], _GLF_FUZZED(2.7)), vec4(_GLF_FUZZED(407.960), _GLF_IDENTITY((_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (1.0) / abs(1.0))), (true ? vec4(_GLF_IDENTITY(1.0, (1.0) / abs(1.0))) : _GLF_FUZZED(vec4(622.350, 6.7, -1.7, -4.6)))))[1], min((_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (1.0) / abs(1.0))), (true ? vec4(_GLF_IDENTITY(1.0, (1.0) / abs(1.0))) : _GLF_FUZZED(vec4(622.350, 6.7, -1.7, -4.6)))))[1], (_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (1.0) / abs(1.0))), (true ? vec4(_GLF_IDENTITY(1.0, (1.0) / abs(1.0))) : _GLF_FUZZED(vec4(622.350, 6.7, -1.7, -4.6)))))[1])), _GLF_FUZZED(-1.8), (_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (1.0) / abs(1.0))), (true ? vec4(_GLF_IDENTITY(1.0, (1.0) / abs(1.0))) : _GLF_FUZZED(vec4(622.350, 6.7, -1.7, -4.6)))))[3]), bvec4(false, true, false, true))))), vec4(_GLF_IDENTITY(1.0, (1.0) / abs(1.0)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? clamp(vec4(_GLF_IDENTITY(1.0, (1.0) / abs(1.0))), _GLF_IDENTITY(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), (_GLF_IDENTITY((1.0), min((1.0), (1.0)))) - 0.0) / abs(1.0))), (true ? vec4(_GLF_IDENTITY(1.0, (1.0) / abs(1.0))) : _GLF_FUZZED(vec4(622.350, 6.7, -1.7, -4.6)))), min(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (1.0) / abs(1.0))), (true ? vec4(_GLF_IDENTITY(1.0, (1.0) / abs(1.0))) : _GLF_FUZZED(vec4(622.350, 6.7, -1.7, -4.6)))), _GLF_IDENTITY(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (1.0) / abs(1.0))), _GLF_IDENTITY((true ? vec4(_GLF_IDENTITY(1.0, (1.0) / abs(1.0))) : _GLF_FUZZED(vec4(622.350, 6.7, -1.7, -4.6))), min((true ? vec4(_GLF_IDENTITY(1.0, (1.0) / abs(1.0))) : _GLF_FUZZED(vec4(622.350, 6.7, -1.7, -4.6))), (true ? vec4(_GLF_IDENTITY(1.0, (1.0) / abs(1.0))) : _GLF_FUZZED(vec4(622.350, 6.7, -1.7, -4.6)))))), mix(vec4((_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (1.0) / abs(1.0))), (true ? vec4(_GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(abs(1.0), (abs(1.0)) - 0.0))) : _GLF_FUZZED(vec4(622.350, 6.7, -1.7, -4.6)))))[0], _GLF_FUZZED(_GLF_IDENTITY(80.08, mix(float(_GLF_FUZZED((-56.07 * -6573.0790))), float(80.08), bool(true)))), (_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (1.0) / abs(1.0))), (true ? vec4(_GLF_IDENTITY(1.0, (1.0) / abs(1.0))) : _GLF_IDENTITY(_GLF_FUZZED(vec4(622.350, 6.7, -1.7, -4.6)), (_GLF_FUZZED(vec4(622.350, 6.7, -1.7, -4.6))) / vec4(1.0, 1.0, 1.0, 1.0)))))[2], _GLF_FUZZED(2.7)), vec4(_GLF_FUZZED(407.960), _GLF_IDENTITY((_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (1.0) / abs(1.0))), (true ? vec4(_GLF_IDENTITY(1.0, (1.0) / abs(1.0))) : _GLF_FUZZED(vec4(622.350, 6.7, -1.7, -4.6)))))[1], min((_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(abs(1.0), mix(float(_GLF_FUZZED(-5889.3005)), float(abs(1.0)), bool(true))))), (true ? vec4(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), clamp((1.0), _GLF_IDENTITY((1.0), max((1.0), _GLF_IDENTITY((1.0), ((1.0)) - 0.0))), (1.0))) / abs(1.0))) : _GLF_FUZZED(vec4(622.350, 6.7, -1.7, -4.6)))))[1], (_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (1.0) / abs(1.0))), (true ? vec4(_GLF_IDENTITY(1.0, (1.0) / abs(1.0))) : _GLF_FUZZED(vec4(622.350, 6.7, -1.7, -4.6)))))[1])), _GLF_FUZZED(-1.8), (_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (1.0) / abs(1.0))), (true ? vec4(_GLF_IDENTITY(1.0, (1.0) / abs(1.0))) : _GLF_FUZZED(vec4(622.350, _GLF_IDENTITY(6.7, (false ? _GLF_FUZZED(2.5) : 6.7)), -1.7, -4.6)))))[3]), bvec4(false, true, false, true))))), vec4(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), float(_GLF_IDENTITY(mat2x4((1.0), log(1.0), 1.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 1.0, 1.0), (false ? _GLF_FUZZED(mat2x4(-9026.7981, -8505.5100, 0.3, 96.81, -3.8, 51.05, -1.1, -936.869)) : mat2x4((1.0), log(1.0), 1.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 1.0, 1.0))))) / abs(1.0)))) : _GLF_FUZZED(vec4(-440.013, 8443.1729, -1805.2834, -420.586))))))), _GLF_struct_31(_GLF_struct_27(1.0, ivec4(1), ivec4(1), vec3(1.0)), _GLF_struct_28(bvec4(true), mat3x4(1.0), 1.0, bvec3(true), mat4(1.0)), _GLF_struct_29(vec4(1.0), mat4x2(1.0), mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), bvec4(true), uvec3(1u)), mat3x4(1.0), _GLF_struct_30(mat2x4(1.0), uvec2(1u), mat4x3(1.0))), mat4x3(1.0));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) * abs(vec2(1.0, 1.0)))), _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), bool(bvec4((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), true, true, false)))))), false))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ! (! ((false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) * mat2(1.0), mix(vec2(_GLF_FUZZED(2.4), _GLF_FUZZED(-976.787)), vec2(((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) * mat2(1.0))[0], ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) * mat2(1.0))[1]), bvec2(true, true)))).y, ! (! (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))), bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0)), min(vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0)), vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0))))).y, ! (! (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))))))), true, false)), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), clamp(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch))), max(injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, ! (! (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))), bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, ! (! (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))))))), true, false))) || _GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (false))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(workgroup_size))) * _GLF_struct_replacement_32._f2._f1.workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 uint subgroup_base = subgroup_id * _GLF_struct_replacement_39.subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(mat3(injectionSwitch[1], 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, sqrt(0.0), 1.0, abs(1.0), 1.0, 1.0))))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(bvec3(true, false, true)))))) && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1928.5498) : _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_58 _GLF_struct_replacement_58 = _GLF_struct_58(_GLF_struct_46(_GLF_struct_40(bvec3(true), mat3x2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-2.1) : _GLF_IDENTITY(1.0, (1.0) + 0.0)))), uvec4(1u), mat3x2(1.0), mat4x3(1.0)), _GLF_struct_41(mat2x3(1.0), ivec4(1), 1u, mat3x4(1.0), bvec2(true)), _GLF_struct_42(mat4x3(1.0)), _GLF_struct_43(mat3(_GLF_IDENTITY(1.0, max(1.0, 1.0))), 1.0, uvec3(1u), bvec2(true), mat4x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), _GLF_IDENTITY(vec2(1.0), max(_GLF_IDENTITY(vec2(1.0), vec2(1.0, 1.0) * (vec2(1.0))), vec2(1.0))), mat3x2(1.0)), _GLF_struct_44(1, mat2x4(1.0), mat4x3(1.0), _GLF_IDENTITY(uvec2(1u), uvec2(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 0u, 1u)))) >> 0u), 0u) + (uvec2(_GLF_IDENTITY(1u, max(1u, 1u))))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, true && (true))), bvec2(bvec2(bvec2(true))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, true && (true))), bvec2(bvec2(bvec2(true))))))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, true && (true))), bvec2(bvec2(bvec2(true))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, true && (true))), bvec2(bvec2(bvec2(true)))))))))))))), true, _GLF_struct_45(mat3x2(1.0), mat3x2(1.0), mat3x2(1.0))), _GLF_struct_50(_GLF_struct_47(mat4x2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))), 1.0), _GLF_struct_48(bvec4(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))), mat2x4(1.0)), true, mat4x3(1.0), _GLF_struct_49(uvec4(1u), mat3x2(1.0), bvec3(true), vec2(1.0), bvec2(_GLF_IDENTITY(true, ! (! (true)))), 1), uvec3(1u)), _GLF_struct_53(vec3(1.0), bvec4(true), _GLF_struct_51(bvec3(true)), true, _GLF_struct_52(1, mat4x3(1.0), mat3(1.0), vec3(1.0), vec3(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(log2(-7.7)) : 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, log(1.0), 0.0, 0.0, 1.0, 0.0, 0.0)), min(float(mat4(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(log2(-7.7)) : 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, log(1.0), 0.0, 0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(float(mat4(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(log2(-7.7)) : 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, log(1.0), 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0 + (float(mat4(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(log2(-7.7)) : 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, log(1.0), 0.0, 0.0, 1.0, 0.0, 0.0)))))))))), 1u, ivec4(1))), mat3x4(1.0), _GLF_struct_57(uvec4(1u), _GLF_struct_54(mat2x3(1.0)), _GLF_struct_55(mat3x4(1.0), mat2x4(1.0), _GLF_IDENTITY(workgroup_base + subgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_16._f5.subgroup_local_id, (_GLF_struct_replacement_16._f5.subgroup_local_id) / 1u), uint(uvec2(workgroup_base + subgroup_base + _GLF_struct_replacement_16._f5.subgroup_local_id, 0u))), mat4(1.0)), _GLF_struct_56(vec4(1.0), uvec4(1u), bvec4(true), uvec3(1u), mat2x3(_GLF_IDENTITY(1.0, (1.0) - 0.0)), mat3x2(1.0), mat3(1.0)), mat4(1.0)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_base + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_16._f5.subgroup_local_id, (_GLF_struct_replacement_16._f5.subgroup_local_id) >> 0u) + 1) % _GLF_struct_replacement_39.subgroup_size, 0u ^ ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_16._f5.subgroup_local_id, (_GLF_struct_replacement_16._f5.subgroup_local_id) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_16._f5.subgroup_local_id, (_GLF_struct_replacement_16._f5.subgroup_local_id) >> 0u), ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_16._f5.subgroup_local_id, (_GLF_struct_replacement_16._f5.subgroup_local_id) >> 0u))))) ^ 0u) + 1) % _GLF_struct_replacement_39.subgroup_size)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[_GLF_struct_replacement_58._f4._f2.virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, ~ (~ (4)))) << 0));
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))], _GLF_IDENTITY(uint(2), max(_GLF_IDENTITY(uint(2), (uint(2)) / 1u), uint(2))), 4, _GLF_IDENTITY(64, min(_GLF_IDENTITY(64, max(_GLF_IDENTITY(64, (64) | (64)), _GLF_IDENTITY(64, min(64, 64)))), _GLF_IDENTITY(64, (_GLF_IDENTITY(64, _GLF_IDENTITY((64), ((64)) | 0) | 0)) | (64)))), 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), true, true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false, false, false)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bvec2(! (! (false)), false))))))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y, _GLF_IDENTITY(true && (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), (false ? _GLF_FUZZED(vec2(2.7, 99.62)) : _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))))).y), true && (true && (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), (false ? _GLF_FUZZED(vec2(2.7, 99.62)) : _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))))).y))))), false || ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch), vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch), (max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)) + vec2(0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), _GLF_IDENTITY(mat2(1.0) * (mat4x2(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch), (max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)) + vec2(0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), (true ? mat2(1.0) * (mat4x2(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch), (max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)) + vec2(0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(mat4x2(-8.1, -9859.3111, 192.614, 3.9, 4455.0171, 6.2, 3.4, 7498.4354)))))))))).y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)))).y, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)))))).y) - 0.0)) * _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((vec2(3.0, 2.9).y - -38.49))), bool(false))), float(vec2(1.0, 0.0))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), true, true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), false || (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))), true, true))), ! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0, 1.0))) * (injectionSwitch)).x > injectionSwitch.y)), false, false))), true, true)))))), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, sqrt(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y)))).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), false)))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, sqrt(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y)))).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), false)))))), bool(bool((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, sqrt(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y)))).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), false)))))))))) || false)), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), true, true))), ! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))))), false, false))), true, _GLF_IDENTITY(true, ! (! (true))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(63.77, 8928.2123)) : injectionSwitch)).y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), false, true, true)), true && (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), ! (! (true && ((injectionSwitch.x > injectionSwitch.y)))))), false, true, true)))), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true))))))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), true && (! (_GLF_IDENTITY(false, bool(bool(false)))))))))))))), false, true, true)), true && _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), ! (! (true && ((injectionSwitch.x > injectionSwitch.y)))))), false, true, true))), (_GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), ! (! (true && ((injectionSwitch.x > injectionSwitch.y)))))), false, true, true))), false || ((bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), ! (! (true && ((injectionSwitch.x > injectionSwitch.y)))))), false, true, true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y))))) || false))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).x), float(_GLF_FUZZED(2586.7147)), bool(false))) > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
