#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460
struct _GLF_struct_0 {
 mat3x2 _f0;
 uint _f1;
 bool _f2;
 mat3x4 _f3;
} ;

struct _GLF_struct_1 {
 vec2 _f0;
 ivec2 _f1;
 _GLF_struct_0 _f2;
} ;

struct _GLF_struct_2 {
 _GLF_struct_1 _f0;
 uint workgroup_size;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged2_0_3_68_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idsubgroup_base;
 uvec3 GLF_merged3_0_1_4_1_1_13_2_1_12readsubgroup_baseworkgroup_id;
 uvec2 GLF_merged2_0_1_4_1_1_11readsubgroup_id;
 uvec3 GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id;
 GLF_merged2_0_3_68_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idsubgroup_base.xyz = GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged2_0_1_4_1_1_11readsubgroup_id.y = subgroup_id;
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged2_0_3_68_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idsubgroup_base.xyz.x = subgroup_size;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(_GLF_struct_1(vec2(1.0), ivec2(1), _GLF_struct_0(mat3x2(1.0), 1u, true, mat3x4(1.0))), gl_WorkGroupSize.x);
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged3_0_1_4_1_1_13_2_1_12readsubgroup_baseworkgroup_id.z = workgroup_id;
 GLF_merged2_0_3_68_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idsubgroup_base.xyz.z = GLF_merged3_0_1_4_1_1_13_2_1_12readsubgroup_baseworkgroup_id.z;
 uint workgroup_base = _GLF_struct_replacement_2.workgroup_size * GLF_merged2_0_3_68_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idsubgroup_base.xyz.z;
 uint subgroup_base = GLF_merged2_0_1_4_1_1_11readsubgroup_id.y * GLF_merged2_0_3_68_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idsubgroup_base.xyz.x;
 GLF_merged2_0_3_68_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idsubgroup_base.w = subgroup_base;
 GLF_merged3_0_1_4_1_1_13_2_1_12readsubgroup_baseworkgroup_id.y = GLF_merged2_0_3_68_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idsubgroup_base.w;
 uint virtual_gid = workgroup_base + GLF_merged3_0_1_4_1_1_13_2_1_12readsubgroup_baseworkgroup_id.y + subgroup_local_id;
 GLF_merged2_0_3_68_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idsubgroup_base.xyz.y = virtual_gid;
 uint next_virtual_gid = workgroup_base + GLF_merged3_0_1_4_1_1_13_2_1_12readsubgroup_baseworkgroup_id.y + ((subgroup_local_id + 1) % GLF_merged2_0_3_68_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idsubgroup_base.xyz.x);
 uint read = atomicLoad(buf[GLF_merged2_0_3_68_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idsubgroup_base.xyz.y], 4, 64, 2);
 GLF_merged3_0_1_4_1_1_13_2_1_12readsubgroup_baseworkgroup_id.x = read;
 GLF_merged2_0_1_4_1_1_11readsubgroup_id.x = GLF_merged3_0_1_4_1_1_13_2_1_12readsubgroup_baseworkgroup_id.x;
 if((subgroup_local_id % 2) == 0)
  {
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
  }
 subgroupBarrier();
 atomicStore(checker[GLF_merged2_0_3_68_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idsubgroup_base.xyz.y], GLF_merged2_0_1_4_1_1_11readsubgroup_id.x, 4, 64, 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
