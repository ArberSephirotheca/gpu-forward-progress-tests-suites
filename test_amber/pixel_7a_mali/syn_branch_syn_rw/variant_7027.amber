#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id;
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)) > _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) - 0)); _injected_loop_counter --)
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), bool(bvec3(! (_GLF_WRAPPED_IF_FALSE(false)), false, true))))))
    {
    }
   else
    {
     GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.w = _GLF_IDENTITY(subgroup_size, 0u + (subgroup_size));
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : gl_NumWorkGroups.x)))), max(_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 0u ^ (gl_NumWorkGroups.x)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(! (false), false, false)), ! (! (_GLF_IDENTITY(bool(bvec3(! (false), false, false)), true && (bool(bvec3(! (false), false, false)))))))))))) ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))))) : _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((true ? gl_NumWorkGroups : _GLF_FUZZED(_GLF_IDENTITY(uvec3(71338u, 100176u, 197593u), max(uvec3(71338u, 100176u, 197593u), _GLF_IDENTITY(uvec3(71338u, 100176u, 197593u), clamp(uvec3(71338u, 100176u, 197593u), uvec3(71338u, 100176u, 197593u), uvec3(71338u, 100176u, 197593u))))))), (_GLF_IDENTITY((true ? gl_NumWorkGroups : _GLF_FUZZED(_GLF_IDENTITY(uvec3(71338u, 100176u, 197593u), max(uvec3(71338u, _GLF_IDENTITY(100176u, ~ (~ (100176u))), 197593u), _GLF_IDENTITY(uvec3(71338u, 100176u, 197593u), clamp(uvec3(71338u, 100176u, 197593u), uvec3(71338u, 100176u, 197593u), uvec3(71338u, 100176u, 197593u))))))), ((true ? gl_NumWorkGroups : _GLF_FUZZED(_GLF_IDENTITY(uvec3(71338u, 100176u, 197593u), max(uvec3(71338u, 100176u, 197593u), _GLF_IDENTITY(uvec3(71338u, 100176u, 197593u), clamp(uvec3(71338u, 100176u, 197593u), uvec3(71338u, 100176u, 197593u), _GLF_IDENTITY(uvec3(71338u, 100176u, 197593u), (uvec3(71338u, 100176u, 197593u)) ^ (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY(uvec3(1u), (uvec3(1u)) ^ uvec3(0u, 0u, 0u)))))))))))) | ((true ? gl_NumWorkGroups : _GLF_FUZZED(_GLF_IDENTITY(uvec3(71338u, 100176u, 197593u), max(uvec3(71338u, 100176u, 197593u), _GLF_IDENTITY(uvec3(71338u, 100176u, 197593u), clamp(uvec3(71338u, 100176u, 197593u), uvec3(71338u, 100176u, 197593u), uvec3(71338u, 100176u, 197593u)))))))))) - uvec3(0u, 0u, 0u))).x, 0u | (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), ~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u))))) : gl_NumWorkGroups.x)))))))), _GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) | 0u), 0u ^ (_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) | 0u)))) / uint(_GLF_ONE(1.0, injectionSwitch.y)), (1u ^ 1u) + ((_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (subgroup_id) - (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(dot(vec3(sin(0.0), 0.0, 1.0), vec3(0.0, 0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), dot(vec3(sin(0.0), 0.0, 1.0), vec3(0.0, 0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))))) * (injectionSwitch.x)))) & 38150u))), (_GLF_FUZZED(subgroup_id)) | 0u)) / uint(_GLF_ONE(1.0, injectionSwitch.y))))) : _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))))))));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), 1.0 * (min(injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), 1.0 * (min(injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y))), ((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), 1.0 * (min(injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y)))) || false)), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), 1.0 * (min(injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y))), ((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), 1.0 * (min(injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y)))) || false)), false), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), 1.0 * (min(injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y))), ((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), 1.0 * (min(injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y)))) || false)), false), true, false)))))))))))
  {
   GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.y = num_workgroup;
  }
 else
  {
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, min(gl_WorkGroupID.x, gl_WorkGroupID.x));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), (int(_GLF_ONE(1.0, injectionSwitch.y))) - (0 ^ 0)), (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y), _GLF_IDENTITY(max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(_GLF_IDENTITY(float(_GLF_ONE(1.0, injectionSwitch.y)), float(mat2(float(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, 0.0, cos(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0))))))), float(_GLF_FUZZED(468.624)), bool(false)))), max(max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(468.624)), bool(false)))), _GLF_IDENTITY(max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(468.624)), bool(false)))), min(max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(468.624)), bool(false)))), _GLF_IDENTITY(max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(468.624)), bool(false)))), mix(float(_GLF_FUZZED((-8.9 - 301.490))), float(max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(468.624)), bool(false))))), bool(true))))))))), _GLF_IDENTITY(clamp(int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(clamp(clamp(int(_GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) / 1.0), injectionSwitch.y)), int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1470.2390) : injectionSwitch.y)))), int(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(clamp(int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ONE(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(float(1.0)), clamp(float(float(1.0)), float(float(1.0)), float(float(1.0))))))), injectionSwitch.y)), int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y))), (clamp(int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ONE(1.0, injectionSwitch.y)))) ^ 0), _GLF_IDENTITY(clamp(int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ONE(1.0, injectionSwitch.y))), (false ? _GLF_FUZZED(max(38693, (60966 ^ 77902))) : _GLF_IDENTITY(clamp(int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ONE(1.0, injectionSwitch.y))), int(ivec4(_GLF_IDENTITY(clamp(int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ONE(1.0, injectionSwitch.y))), (clamp(int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ONE(1.0, injectionSwitch.y)))) | (clamp(int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ONE(1.0, injectionSwitch.y))))), (0 >> _GLF_IDENTITY(int(0), int(0))), 0, 0)))))), (clamp(clamp(int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(clamp(int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ONE(1.0, injectionSwitch.y))), (clamp(int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ONE(1.0, injectionSwitch.y)))) ^ _GLF_IDENTITY(0, (0) >> 0)), clamp(int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, (false ? _GLF_FUZZED(ceil(-8.7)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y) + 0.0))))), int(_GLF_ONE(1.0, injectionSwitch.y))))) + _GLF_IDENTITY((0 & 15642), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((0 & 15642), _GLF_IDENTITY(int(int(_GLF_IDENTITY((0 & 15642), ((0 & 15642)) | 0))), ~ (~ (int(int(_GLF_IDENTITY((0 & 15642), ((0 & 15642)) | 0))))))), (_GLF_IDENTITY((0 & 15642), _GLF_IDENTITY(int(int(_GLF_IDENTITY((0 & 15642), ((0 & 15642)) | 0))), ~ (~ (int(int(_GLF_IDENTITY((0 & 15642), ((0 & 15642)) | 0)))))))) | (_GLF_IDENTITY((0 & 15642), _GLF_IDENTITY(int(int(_GLF_IDENTITY((0 & 15642), ((0 & 15642)) | 0))), ~ (~ (int(int(_GLF_IDENTITY((0 & 15642), ((0 & 15642)) | 0)))))))))), (~ (_GLF_IDENTITY((0 & 15642), _GLF_IDENTITY(int(int(_GLF_IDENTITY((0 & 15642), ((0 & 15642)) | 0))), ~ (~ (int(int(_GLF_IDENTITY((0 & 15642), ((0 & 15642)) | 0))))))))) | (~ (_GLF_IDENTITY((0 & 15642), _GLF_IDENTITY(int(int(_GLF_IDENTITY((0 & 15642), ((_GLF_IDENTITY(0, (0) ^ (0 | 0)) & 15642)) | 0))), ~ (~ (int(int(_GLF_IDENTITY((0 & _GLF_IDENTITY(15642, (15642) ^ 0)), ((0 & 15642)) | 0)))))))))))))))) ^ 0); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(bitCount(60278u)) : _injected_loop_counter)) > 0); _injected_loop_counter --)
      {
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, (0 ^ 0) | (_injected_loop_counter --)))
            {
             do
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                  {
                   do
                    {
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                      {
                       do
                        {
                         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-6048.4454)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-3920.3901) : injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-3920.3901) : injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-3920.3901) : injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false), true, true)), bool(bvec2(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-3920.3901) : injectionSwitch.y)), false, true, true)), true))))), true && (bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-3920.3901) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch)))).y)), _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-3920.3901) : injectionSwitch.y)), false, true, true)), bool(bvec2(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-3920.3901) : injectionSwitch.y)), false, true, true)), true)))))))), true && (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-3920.3901) : injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(_GLF_IDENTITY(-3920.3901, min(-3920.3901, -3920.3901))) : injectionSwitch.y)), false, true, true)), bool(bvec2(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? _GLF_FUZZED(-3920.3901) : injectionSwitch.y)), false, true, true)), true))))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-42.91)), float(injectionSwitch.x), bool(true))))) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-3920.3901) : injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-3920.3901) : injectionSwitch.y)), false, true, true)), (bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-3920.3901) : injectionSwitch.y)), false, true, true))) && true), bool(bvec2(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))) ? _GLF_FUZZED(-3920.3901) : injectionSwitch.y)), false, true, true)), true)))))))))))))))))
                          {
                          }
                         else
                          {
                           do
                            {
                             do
                              {
                               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(0 ^ _GLF_IDENTITY(1, (1) | 0), (true ? 0 ^ _GLF_IDENTITY(1, (1) | 0) : _GLF_FUZZED(23666))))); _injected_loop_counter ++)
                                {
                                 do
                                  {
                                   do
                                    {
                                     do
                                      {
                                       GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.y = workgroup_id;
                                      }
                                     while(_GLF_WRAPPED_LOOP(false));
                                    }
                                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                  }
                                 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-114.723), _GLF_FUZZED(4.5)), vec2(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(0, int(ivec2(0, 1)))], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(6.4)), bool(false))), (injectionSwitch)[1]), bvec2(true, true))), min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-114.723), _GLF_FUZZED(_GLF_IDENTITY(4.5, clamp(4.5, _GLF_IDENTITY(4.5, min(4.5, 4.5)), 4.5)))), vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(6.4)), bool(false)), (_GLF_IDENTITY(mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(6.4)), bool(false)), clamp(mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(6.4)), bool(false)), mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(6.4)), bool(false)), mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(6.4)), bool(false))))) / _GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)))), vec2(1.0, 0.0)), dot(vec2(1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)))), vec2(1.0, 0.0))))), (injectionSwitch)[1]), bvec2(true, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-114.723), _GLF_FUZZED(4.5)), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(6.4)), bool(false))), (injectionSwitch)[1]), bvec2(true, true))))).x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))))))))), true && (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-0.2) : injectionSwitch.y))))))))))), (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-114.723), _GLF_FUZZED(4.5)), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(6.4)), bool(false))), (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 1.0))))[1]), bvec2(true, true))), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-114.723), _GLF_FUZZED(4.5)), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(6.4)), bool(false))), (injectionSwitch)[1]), bvec2(true, true))), _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-114.723), _GLF_IDENTITY(_GLF_FUZZED(4.5), mix(float(_GLF_FUZZED(4.5)), float(_GLF_FUZZED(51.91)), bool(false)))), clamp(vec2(_GLF_FUZZED(-114.723), _GLF_IDENTITY(_GLF_FUZZED(4.5), mix(float(_GLF_FUZZED(4.5)), float(_GLF_FUZZED(51.91)), bool(false)))), vec2(_GLF_FUZZED(-114.723), _GLF_IDENTITY(_GLF_FUZZED(4.5), mix(float(_GLF_FUZZED(4.5)), float(_GLF_FUZZED(51.91)), bool(false)))), vec2(_GLF_FUZZED(-114.723), _GLF_IDENTITY(_GLF_FUZZED(4.5), mix(float(_GLF_FUZZED(4.5)), float(_GLF_FUZZED(51.91)), bool(false)))))), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(6.4)), bool(false))), (injectionSwitch)[1]), bvec2(true, true)))), vec2(mat4(min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-114.723), _GLF_FUZZED(4.5)), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(6.4)), bool(false))), (injectionSwitch)[1]), bvec2(true, true))), _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-114.723), _GLF_IDENTITY(_GLF_FUZZED(4.5), mix(float(_GLF_FUZZED(4.5)), float(_GLF_FUZZED(51.91)), bool(false)))), clamp(vec2(_GLF_FUZZED(-114.723), _GLF_IDENTITY(_GLF_FUZZED(4.5), mix(float(_GLF_FUZZED(4.5)), float(_GLF_FUZZED(51.91)), bool(false)))), vec2(_GLF_FUZZED(-114.723), _GLF_IDENTITY(_GLF_FUZZED(4.5), mix(float(_GLF_FUZZED(4.5)), float(_GLF_FUZZED(51.91)), bool(false)))), vec2(_GLF_FUZZED(-114.723), _GLF_IDENTITY(_GLF_FUZZED(4.5), mix(float(_GLF_FUZZED(4.5)), float(_GLF_FUZZED(51.91)), bool(false)))))), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(6.4)), bool(false))), (injectionSwitch)[1]), bvec2(true, true)))), exp(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, length(0.0))))).x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(float(true))), float(injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))))))))), true && (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))).y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))).y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-114.723), _GLF_FUZZED(_GLF_IDENTITY(4.5, mix(float(4.5), float(_GLF_FUZZED(-488.073)), bool(false))))), vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), vec2(_GLF_FUZZED(-7.5), _GLF_FUZZED(3.6)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(6.4)), bool(false))), (injectionSwitch)[1]), bvec2(true, true))), min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-114.723), _GLF_FUZZED(4.5)), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(6.4)), bool(false))), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, (true) || false), true))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-114.723), _GLF_FUZZED(4.5)), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(6.4)), bool(false))), (injectionSwitch)[1]), bvec2(true, true)), min(mix(vec2(_GLF_FUZZED(-114.723), _GLF_FUZZED(4.5)), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(6.4)), bool(false))), (injectionSwitch)[1]), bvec2(true, true)), mix(vec2(_GLF_FUZZED(-114.723), _GLF_FUZZED(4.5)), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(6.4)), bool(false))), (injectionSwitch)[1]), bvec2(true, true))))))).x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), bool(bool(_GLF_IDENTITY(true, bool(bvec3(true, true, false)))))) && (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))))))))))), true && (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, ! (! (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((-7.2)) : injectionSwitch.x)) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))), true, false)))))))), ((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-114.723), _GLF_FUZZED(_GLF_IDENTITY(4.5, mix(float(4.5), float(_GLF_FUZZED(-488.073)), bool(false))))), vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), vec2(_GLF_FUZZED(-7.5), _GLF_FUZZED(3.6)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(6.4)), bool(false))), (injectionSwitch)[1]), bvec2(true, true))), min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-114.723), _GLF_FUZZED(4.5)), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(6.4)), bool(false))), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, (true) || false), true))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-114.723), _GLF_FUZZED(4.5)), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(6.4)), bool(false))), (injectionSwitch)[1]), bvec2(true, true)), min(mix(vec2(_GLF_FUZZED(-114.723), _GLF_FUZZED(4.5)), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(6.4)), bool(false))), (injectionSwitch)[1]), bvec2(true, true)), mix(vec2(_GLF_FUZZED(-114.723), _GLF_FUZZED(4.5)), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(6.4)), bool(false))), (injectionSwitch)[1]), bvec2(true, true))))))).x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), bool(bool(_GLF_IDENTITY(true, bool(bvec3(true, true, false)))))) && (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))))))))))), true && (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, ! (! (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((-7.2)) : injectionSwitch.x)) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))), true, false))))))))) || false)))));
                                }
                              }
                             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                            }
                           while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false)), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false)), ! (! ((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false)))))))));
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))));
                      }
                     else
                      {
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), mat2(mat3(transpose(mat2(1.0)))))))).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))));
                  }
                }
               else
                {
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(12.93)), float(injectionSwitch.y), bool(true)))))));
      }
    }
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(38240u) : workgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(1u, 0u + (1u)) * (workgroup_size), max(1u * (workgroup_size), 1u * (workgroup_size)))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(38240u) : workgroup_size)), _GLF_IDENTITY(1u * (workgroup_size), max(1u * (workgroup_size), 1u * (workgroup_size)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(38240u) : workgroup_size)), _GLF_IDENTITY(1u * (workgroup_size), max(1u * (workgroup_size), 1u * (workgroup_size))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(38240u) : workgroup_size)), _GLF_IDENTITY(1u * (workgroup_size), max(1u * (workgroup_size), 1u * (workgroup_size)))))) / 1u))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(38240u) : workgroup_size)), _GLF_IDENTITY(1u * (workgroup_size), max(1u * (workgroup_size), 1u * (workgroup_size)))))) * _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id, uvec2(GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id[_GLF_IDENTITY(0, min(0, 0))], GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id[1])).y;
 uint subgroup_base = _GLF_IDENTITY(subgroup_id * GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.w, min(subgroup_id * GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.w, _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size, _GLF_IDENTITY(max(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size, GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size), (max(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size, GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size)) ^ uvec4(0u, 0u, 0u, 0u))).w, 0u ^ (subgroup_id * GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.w))));
 for(int _injected_loop_counter = (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (1) >> 0))) | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY((0 & -16538), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (_GLF_IDENTITY(~ (0), ~ (~ (_GLF_IDENTITY(~ (0), (~ (0)) - 0))))) | (_GLF_IDENTITY(~ (0), int(int(~ (0)))))))) & -16538), ~ (~ ((0 & -16538))))))) >> _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter --)
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, _GLF_IDENTITY((0) | _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY((0), int(ivec2((0), 1))) | int(_GLF_ZERO(0.0, injectionSwitch.x))) | ((0) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) << 0))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(1, int(int(1)))), int(1)), (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), (_GLF_IDENTITY(int(int(1)), (int(int(1))) | (int(int(1))))) >> 0))), 0 ^ (int(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), (_GLF_IDENTITY(int(int(1)), (int(int(1))) | (int(int(1))))) >> 0))))), int(1))) | 0)))); _injected_loop_counter --)
            {
             GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.z = _GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base));
            }
          }
         else
          {
          }
        }
      }
    }
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size, _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size) | (GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size), min(_GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size) | (GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size), ((GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size) | (GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size)) - uvec4(0u, 0u, 0u, 0u)), (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size, uvec4(0u, 0u, 0u, 0u) + _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size), ((GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size)) | (_GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size), ((GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size)) | uvec4(0u, 0u, 0u, 0u)))))) | (GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size)))).z, 0u | (GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.z)) + subgroup_local_id;
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch), vec2(mat3(max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch), 0.0, sqrt(1.0), 1.0, abs(0.0), 1.0, 0.0, 0.0)))).x < injectionSwitch.y))))
    {
     GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = virtual_gid;
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) * _GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, uint(uvec2(1u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))))))))) | (workgroup_base)) + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size, ~ (~ (GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size)))) : GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size))) - uvec4(0u, 0u, 0u, 0u))) ^ uvec4(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u)).z + ((subgroup_local_id + 1) % GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.w);
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_WRAPPED_IF_TRUE(true))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_WRAPPED_IF_TRUE(true))), bool(bool(_GLF_IDENTITY(bool(bool(_GLF_WRAPPED_IF_TRUE(true))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_WRAPPED_IF_TRUE(true))), bool(bool(_GLF_IDENTITY(bool(bool(_GLF_WRAPPED_IF_TRUE(true))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_WRAPPED_IF_TRUE(true))), bool(bool(_GLF_IDENTITY(bool(bool(_GLF_WRAPPED_IF_TRUE(true))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))))))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_WRAPPED_IF_TRUE(true))), bool(bool(_GLF_IDENTITY(bool(bool(_GLF_WRAPPED_IF_TRUE(true))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec2(! (true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))))))))), true)))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       do
        {
         for(int _injected_loop_counter = (1 & _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), ~ (~ (1))) << _GLF_IDENTITY(_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), (int(3)) | (_GLF_IDENTITY(int(3), min(int(3), int(3))))))), int(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, (_GLF_IDENTITY(3, (false ? _GLF_FUZZED(-77760) : 3))) | 0)) / ((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), int(ivec2(int(1), 1))))) >> _GLF_IDENTITY(int(1), int(1))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), min(~ (1), ~ (1))))), ~ (~ (1))) << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), (int(3)) | (_GLF_IDENTITY(int(3), min(int(3), int(3))))))), int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (_GLF_IDENTITY(~ (3), (true ? ~ (3) : _GLF_FUZZED(58598)))))), clamp(int(3), int(_GLF_IDENTITY(3, (3) | (3))), _GLF_IDENTITY(int(3), (int(3)) | (_GLF_IDENTITY(int(3), min(int(3), int(3))))))), (_GLF_IDENTITY(int(3), clamp(_GLF_IDENTITY(int(3), (int(3)) - 0), int(3), _GLF_IDENTITY(int(3), (int(3)) | (_GLF_IDENTITY(int(3), min(int(3), int(3)))))))) * 1)))), int(_GLF_IDENTITY(3, (3) | (3)))))) >> (_GLF_IDENTITY(1, 0 ^ _GLF_IDENTITY((1), ((1)) ^ 0)) ^ 1)) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(int(3), int(3))) ^ 0)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(int(3), int(3))) ^ 0))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(int(3), int(3))) ^ 0))))))), ~ (~ ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), ~ (~ (1))) << _GLF_IDENTITY(_GLF_IDENTITY(int(3), clamp(int(3), int(_GLF_IDENTITY(3, max(3, _GLF_IDENTITY(3, int(ivec3(_GLF_IDENTITY(3, 1 * (3)), 0, 0)))))), _GLF_IDENTITY(int(3), (int(3)) | (_GLF_IDENTITY(int(3), min(int(3), int(3))))))), int(3))), ((_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), min(~ (1), ~ (1))))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (1), (_GLF_IDENTITY(_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), ~ (1))), min(_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), ~ (1))), _GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), ~ (1)))))) << 0)), min(_GLF_IDENTITY((_GLF_IDENTITY(~ (1), (_GLF_IDENTITY(_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), ~ (1))), min(_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), ~ (1))), _GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), ~ (1)))))) << 0)), ((_GLF_IDENTITY(~ (1), (_GLF_IDENTITY(_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), ~ (1))), min(_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), ~ (1))), _GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), ~ (1)))))) << 0))) >> 0), (_GLF_IDENTITY(~ (1), (_GLF_IDENTITY(_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), ~ (1))), min(_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), ~ (1))), _GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), ~ (1)))))) << 0))))) << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), (int(3)) | (_GLF_IDENTITY(int(3), min(int(3), int(3))))))), int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(3), clamp(int(3), int(_GLF_IDENTITY(3, (3) | (3))), _GLF_IDENTITY(int(3), _GLF_IDENTITY((int(3)), 0 ^ ((int(3)))) | (_GLF_IDENTITY(int(3), min(int(3), int(3))))))), (_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY((int(3)), _GLF_IDENTITY(1, 0 + (1)) * (_GLF_IDENTITY((int(3)), ((int(3))) | ((int(3)))))) | (_GLF_IDENTITY(int(3), min(int(3), int(3)))))))) * 1)))), int(_GLF_IDENTITY(_GLF_IDENTITY(3, int(int(3))), (3) | (3)))))) >> (_GLF_IDENTITY(1, 0 ^ (1)) ^ 1)) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(int(3), int(3))) ^ 0))))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), min(int(2), int(2))), _GLF_IDENTITY(int(2), clamp(int(2), int(2), _GLF_IDENTITY(int(2), int(ivec2(int(_GLF_IDENTITY(2, min(2, 2))), 1)))))), clamp(_GLF_IDENTITY(0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) | (int(2))), clamp(_GLF_IDENTITY(int(2), (true ? int(2) : _GLF_FUZZED(_injected_loop_counter))), int(2), _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(ivec2(int(2), 1), (true ? ivec2(int(2), 1) : _GLF_FUZZED((-86947 & ivec2(10770, 44680)))))))))), clamp(_GLF_IDENTITY(int(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, (2) ^ 0), 2, 2))), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) | _GLF_IDENTITY((int(2)), (true ? (int(2)) : _GLF_FUZZED(-93131)))), clamp(int(_GLF_IDENTITY(2, clamp(2, 2, 2))), int(2), _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(ivec2(int(2), 1), ivec2(0, 0) | (ivec2(int(2), 1)))))))), _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, ~ (~ (2)))), (int(2)) | (int(2))), clamp(int(2), int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(ivec2(int(2), 1))), (_GLF_IDENTITY(int(2), int(ivec2(int(2), 1)))) ^ 0)))), _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, max(2, _GLF_IDENTITY(2, (_GLF_IDENTITY(2, 0 + (2))) | (2)))))) | _GLF_IDENTITY((int(2)), clamp((int(2)), (int(2)), (int(2))))), clamp(int(2), int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(ivec2(_GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2))), 1))), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(ivec2(_GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2))), 1))), (_GLF_IDENTITY(int(2), int(ivec2(_GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2))), 1)))) | (_GLF_IDENTITY(int(2), int(ivec2(_GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2))), 1)))))) << 0)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) | (int(2)), int(int((int(2)) | (int(2)))))), clamp(int(2), int(2), _GLF_IDENTITY(int(2), int(ivec2(int(2), 1)))))), _GLF_IDENTITY((_GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)), clamp(_GLF_IDENTITY((int(2)), (true ? _GLF_IDENTITY((int(2)), ~ (_GLF_IDENTITY(~ ((int(2))), 0 ^ (~ ((int(2))))))) : _GLF_FUZZED(-44284))), (int(2)), (int(2)))) | (int(2))), clamp(int(2), int(2), _GLF_IDENTITY(int(2), int(ivec2(int(2), 1))))))) >> 0, ((_GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)), clamp(_GLF_IDENTITY((int(2)), (true ? _GLF_IDENTITY((int(2)), ~ (_GLF_IDENTITY(~ ((int(2))), 0 ^ (~ ((int(2))))))) : _GLF_FUZZED(-44284))), (int(2)), (int(2)))) | (int(2))), clamp(int(2), int(2), _GLF_IDENTITY(int(2), int(ivec2(int(2), 1))))))) >> 0) << 0))) >> 0, (false ? _GLF_FUZZED(-21513) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) | (int(2)), int(int((int(2)) | (int(2)))))), clamp(int(2), int(2), _GLF_IDENTITY(int(2), int(ivec2(int(2), 1)))))), _GLF_IDENTITY((_GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)), clamp(_GLF_IDENTITY((int(2)), (_GLF_IDENTITY(true ? _GLF_IDENTITY((int(2)), ~ (_GLF_IDENTITY(~ ((int(2))), 0 ^ (~ ((int(2))))))) : _GLF_FUZZED(-44284), (true ? _GLF_IDENTITY((int(2)), ~ (_GLF_IDENTITY(~ ((int(2))), 0 ^ (~ ((int(2))))))) : _GLF_FUZZED(-44284)) >> 0))), (int(2)), (int(2)))) | (int(2))), clamp(int(2), int(2), _GLF_IDENTITY(int(2), int(ivec2(int(2), 1))))))) >> 0, ((_GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY((int(2)), clamp(_GLF_IDENTITY((int(2)), (true ? _GLF_IDENTITY((int(2)), ~ (_GLF_IDENTITY(~ ((int(2))), 0 ^ (~ ((int(2))))))) : _GLF_FUZZED(-44284))), (int(2)), (int(2)))), min(_GLF_IDENTITY((int(2)), clamp(_GLF_IDENTITY((int(2)), (true ? _GLF_IDENTITY((int(2)), ~ (_GLF_IDENTITY(~ ((int(2))), 0 ^ (~ ((int(2))))))) : _GLF_FUZZED(-44284))), (int(2)), (int(2)))), _GLF_IDENTITY((int(2)), clamp(_GLF_IDENTITY((int(2)), (true ? _GLF_IDENTITY((int(2)), ~ (_GLF_IDENTITY(~ ((int(2))), 0 ^ (~ ((int(2))))))) : _GLF_FUZZED(-44284))), (int(2)), (int(2)))))) | (int(2))), clamp(int(2), int(2), _GLF_IDENTITY(int(2), int(ivec2(int(2), 1))))))) >> 0) << 0))), (0 & 64714) ^ ((_GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) | (int(2)), int(int((int(2)) | (int(2)))))), clamp(int(2), int(2), _GLF_IDENTITY(int(2), int(ivec2(int(2), 1)))))), _GLF_IDENTITY((_GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)), clamp(_GLF_IDENTITY((int(2)), (_GLF_IDENTITY(true ? _GLF_IDENTITY((int(2)), ~ (_GLF_IDENTITY(~ ((int(2))), 0 ^ (~ ((int(2))))))) : _GLF_FUZZED(-44284), (true ? _GLF_IDENTITY((int(2)), ~ (_GLF_IDENTITY(~ ((int(2))), 0 ^ (~ ((int(2))))))) : _GLF_FUZZED(-44284)) >> 0))), (int(2)), (int(2)))) | (int(2))), clamp(int(2), int(2), _GLF_IDENTITY(int(2), int(ivec2(int(2), 1))))))) >> 0, ((_GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY((int(2)), clamp(_GLF_IDENTITY((int(2)), (true ? _GLF_IDENTITY((int(2)), ~ (_GLF_IDENTITY(~ ((int(2))), 0 ^ (~ ((int(2))))))) : _GLF_FUZZED(-44284))), (int(2)), (int(2)))), min(_GLF_IDENTITY((int(2)), clamp(_GLF_IDENTITY((int(2)), (true ? _GLF_IDENTITY((int(2)), ~ (_GLF_IDENTITY(~ ((int(2))), 0 ^ (~ ((int(2))))))) : _GLF_FUZZED(-44284))), (int(2)), (int(2)))), _GLF_IDENTITY((int(2)), clamp(_GLF_IDENTITY((int(2)), (true ? _GLF_IDENTITY((int(2)), ~ (_GLF_IDENTITY(~ ((int(2))), 0 ^ (~ ((int(2))))))) : _GLF_FUZZED(-44284))), (int(2)), (int(2)))))) | (int(2))), clamp(int(2), int(2), _GLF_IDENTITY(int(2), int(ivec2(int(2), 1))))))) >> 0) << 0))))) >> 0))))), max(0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), int(2))), clamp(int(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(2, (2) >> 0)))), int(2), _GLF_IDENTITY(int(2), int(ivec2(int(_GLF_IDENTITY(2, 0 | (2))), 1)))))), 0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), clamp(int(2), _GLF_IDENTITY(int(2), (int(2)) / 1), _GLF_IDENTITY(int(2), int(ivec2(int(2), 1)))))))), 0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), 1 * (int(2))), clamp(int(2), int(_GLF_IDENTITY(2, min(2, 2))), _GLF_IDENTITY(int(2), int(ivec2(int(2), 1)))))), _GLF_IDENTITY(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), clamp(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), clamp(_GLF_IDENTITY(int(2), (int(2)) / 1), int(2), _GLF_IDENTITY(int(_GLF_IDENTITY(2, min(2, 2))), clamp(int(2), int(2), _GLF_IDENTITY(int(2), ~ (~ (int(2)))))))), clamp(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) ^ (0 >> _GLF_IDENTITY(int(8), int(8)))), (_GLF_IDENTITY(int(2), (int(2)) ^ (0 >> _GLF_IDENTITY(int(8), int(8))))) + 0), _GLF_IDENTITY(_GLF_IDENTITY(int(2), clamp(int(2), _GLF_IDENTITY(int(2), (int(2)) | 0), int(2))), (false ? _GLF_FUZZED(-68652) : _GLF_IDENTITY(int(2), clamp(int(2), _GLF_IDENTITY(int(2), (int(2)) | 0), int(2))))))), _GLF_IDENTITY(int(2), int(ivec2(int(2), 1)))))), min(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, true)))) || false) ? int(2) : _GLF_FUZZED(_injected_loop_counter))), clamp(int(2), int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(ivec2(int(2), 1))), (_GLF_IDENTITY(int(2), int(ivec2(int(2), 1)))) | (_GLF_IDENTITY(int(2), int(ivec2(int(2), 1)))))))), 0 ^ (0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), clamp(_GLF_IDENTITY(int(2), (int(2)) | 0), int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(ivec2(int(2), 1)), (int(ivec2(int(2), 1))) ^ 0))))))), 0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), clamp(int(2), int(2), _GLF_IDENTITY(int(2), int(ivec2(int(2), 1)))))))), (0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), clamp(int(_GLF_IDENTITY(2, (2) | 0)), int(2), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, 0 ^ (2))), max(int(_GLF_IDENTITY(2, 0 ^ (2))), int(_GLF_IDENTITY(2, 0 ^ (2))))), int(ivec2(int(2), 1))), (_GLF_IDENTITY(int(_GLF_IDENTITY(2, 0 ^ (2))), int(ivec2(int(2), 1)))) << 0))))) >> 0))))); _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter --, (_GLF_IDENTITY(_injected_loop_counter --, 0 + (_GLF_IDENTITY(_injected_loop_counter --, 0 | (_injected_loop_counter --))))) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter --, (_GLF_IDENTITY(_injected_loop_counter --, 0 + (_GLF_IDENTITY(_injected_loop_counter --, 0 | (_injected_loop_counter --))))) - 0), (_GLF_IDENTITY(_injected_loop_counter --, (_GLF_IDENTITY(_injected_loop_counter --, 0 + (_GLF_IDENTITY(_injected_loop_counter --, 0 | (_injected_loop_counter --))))) - 0)) << 0)) << 0))
          {
           GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x = next_virtual_gid;
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
      }
    }
   else
    {
    }
  }
 else
  {
  }
 uint read = _GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x, clamp(GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x, GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x, GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x))) | (GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x))))], (buf[_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x, clamp(GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x, GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x, GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x))) | (GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x))))]) + 0u), 4, 64, 2), (true ? atomicLoad(buf[_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id, uvec2(uvec2(GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id))).x) | (GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x))], 4, 64, _GLF_IDENTITY(2, (2) * 1)) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(max(workgroup_id, workgroup_id), 0u | (_GLF_IDENTITY(max(workgroup_id, workgroup_id), ~ (~ (max(workgroup_id, workgroup_id))))))))));
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) | 0))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id % 2), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id % 2), 0u | ((subgroup_local_id % 2))), max(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % 2, (false ? _GLF_FUZZED(67085u) : subgroup_local_id % 2))), 0u | ((subgroup_local_id % 2))), 0u | (_GLF_IDENTITY((subgroup_local_id % 2), 0u | ((subgroup_local_id % 2))))), _GLF_IDENTITY((subgroup_local_id % 2), 0u | (_GLF_IDENTITY((subgroup_local_id % 2), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id % 2), _GLF_IDENTITY(((subgroup_local_id % 2)) << 0u, (((subgroup_local_id % 2)) << 0u) / 1u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id % 2), _GLF_IDENTITY(((subgroup_local_id % 2)) << 0u, (((_GLF_IDENTITY(subgroup_local_id, uint(uvec3(_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)), 1u, 0u))) % 2)) << 0u) - 0u)), (true ? _GLF_IDENTITY((subgroup_local_id % 2), ((subgroup_local_id % 2)) << 0u) : _GLF_FUZZED(read))), _GLF_IDENTITY((subgroup_local_id % 2), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)) % 2), max((_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)) % 2), (_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)) % 2)))) << 0u), _GLF_IDENTITY((subgroup_local_id % 2), ((subgroup_local_id % 2)) << 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id % 2), ((subgroup_local_id % 2)) << 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id % 2), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u)) << 0u) % 2)) << 0u, (((subgroup_local_id % 2)) << 0u) - 0u)), (true ? _GLF_IDENTITY((subgroup_local_id % 2), ((subgroup_local_id % 2)) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) << 0u)) : _GLF_FUZZED(read))), _GLF_IDENTITY((subgroup_local_id % 2), ((_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)) % 2)) << _GLF_IDENTITY(0u, (0u) >> (0u << _GLF_IDENTITY(uint(0u), uint(0u))))), _GLF_IDENTITY((subgroup_local_id % 2), ((subgroup_local_id % 2)) << 0u))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id % 2), ((subgroup_local_id % 2)) << 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id % 2), _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id % 2)), (_GLF_IDENTITY(((subgroup_local_id % 2)), (_GLF_IDENTITY(((subgroup_local_id % 2)), ~ (~ (((subgroup_local_id % 2)))))) >> (0u ^ 0u))) + 0u) << 0u, (((_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_local_id)) : _GLF_FUZZED(subgroup_base))) % 2)) << 0u) - 0u)), (true ? _GLF_IDENTITY((subgroup_local_id % 2), ((subgroup_local_id % 2)) << 0u) : _GLF_FUZZED(read))), _GLF_IDENTITY((subgroup_local_id % 2), ((_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)) % 2)) << 0u), _GLF_IDENTITY((subgroup_local_id % 2), ((subgroup_local_id % 2)) << 0u))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id % 2), 0u | ((subgroup_local_id % 2))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 1u * _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))), ((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)))) ^ (0u << _GLF_IDENTITY(uint(8u), uint(8u))))) % 2), 0u | ((subgroup_local_id % 2))), 0u | (_GLF_IDENTITY((subgroup_local_id % 2), 0u | ((_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) % 2) << 0u)))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id % 2), 0u | ((subgroup_local_id % 2))), 0u | (_GLF_IDENTITY((subgroup_local_id % 2), 0u | ((subgroup_local_id % 2)))))), 0u | (~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id % 2), 0u | ((subgroup_local_id % 2))), 0u | (_GLF_IDENTITY((subgroup_local_id % 2), 0u | ((subgroup_local_id % 2)))))))))), _GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(2, (2) << 0)), 0u | (_GLF_IDENTITY((subgroup_local_id % 2), 0u + (_GLF_IDENTITY((subgroup_local_id % 2), ((subgroup_local_id % 2)) << 0u)))))))) | _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, 0u ^ (0u))))), _GLF_IDENTITY((subgroup_local_id % 2), min(_GLF_IDENTITY((subgroup_local_id % 2), 0u | ((subgroup_local_id % 2))), (subgroup_local_id % 2))), _GLF_IDENTITY((subgroup_local_id % 2), ((subgroup_local_id % 2)) >> 0u))), (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))) ? (_GLF_IDENTITY(subgroup_local_id % 2, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u)))) ^ (_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) >> 0u)))) : _GLF_FUZZED((+ 111055u)))) == 0)
    {
     do
      {
       do
        {
         atomicStore(buf[_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x, min(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x, GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x))], uint(1), _GLF_IDENTITY(4, (4) >> 0), 64, 4);
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, false, false))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9.6)), bool(false)))))).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))), true && ((_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), (injectionSwitch.y) * 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), (injectionSwitch.y) * 1.0)) / 1.0)))))))));
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), (_GLF_IDENTITY(false ? _GLF_FUZZED(clamp(_GLF_IDENTITY(-32128, (-32128) | (-32128)), _injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)))) : (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (1) / 1)), ~ (~ (~ (_GLF_IDENTITY(1, (1) / 1)))))))), ~ (_GLF_IDENTITY(~ (false ? _GLF_FUZZED(clamp(-32128, _injected_loop_counter, _injected_loop_counter)) : (1)), ~ (~ (~ (false ? _GLF_FUZZED(clamp(-32128, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ (0 << _GLF_IDENTITY(int(1), int(1)))), _injected_loop_counter)) : (1))))))))), min(_GLF_IDENTITY((1), (_GLF_IDENTITY(false ? _GLF_FUZZED(clamp(-32128, _injected_loop_counter, _injected_loop_counter)) : (1), ~ (~ (false ? _GLF_FUZZED(clamp(-32128, _injected_loop_counter, _injected_loop_counter)) : (1)))))), _GLF_IDENTITY((_GLF_IDENTITY(1, 0 | (1))), (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(clamp(-32128, _injected_loop_counter, _injected_loop_counter), clamp(clamp(-32128, _injected_loop_counter, _injected_loop_counter), clamp(-32128, _injected_loop_counter, _injected_loop_counter), clamp(-32128, _injected_loop_counter, _injected_loop_counter)))) : (1), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(clamp(-32128, _injected_loop_counter, _injected_loop_counter)) : (1), int(int(false ? _GLF_FUZZED(_GLF_IDENTITY(clamp(-32128, _injected_loop_counter, _injected_loop_counter), (clamp(-32128, _injected_loop_counter, _injected_loop_counter)) ^ (0 | 0))) : (1))))), min((_GLF_IDENTITY(false ? _GLF_FUZZED(clamp(-32128, _injected_loop_counter, _injected_loop_counter)) : (1), int(int(false ? _GLF_FUZZED(_GLF_IDENTITY(clamp(-32128, _injected_loop_counter, _injected_loop_counter), (clamp(-32128, _injected_loop_counter, _injected_loop_counter)) ^ (0 | 0))) : (1))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(clamp(-32128, _injected_loop_counter, _injected_loop_counter)) : (1), int(int(false ? _GLF_FUZZED(_GLF_IDENTITY(clamp(-32128, _injected_loop_counter, _injected_loop_counter), (clamp(-32128, _injected_loop_counter, _injected_loop_counter)) ^ (0 | 0))) : (1))))))))), ~ (~ (false ? _GLF_FUZZED(clamp(-32128, _injected_loop_counter, _injected_loop_counter)) : (1)))))))) >> 0), 1, 1))); _injected_loop_counter ++)
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 atomicStore(buf[_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size, ~ (~ (GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size))).x], _GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) | 0u), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), injectionSwitch.x)))) + (uint(1))), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (4) << (0 << _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (_GLF_IDENTITY(4, clamp(4, 4, 4))) | (_GLF_IDENTITY(4, clamp(4, 4, 4))))))) | 0), _GLF_IDENTITY(64, ~ (~ (64))), 4);
                }
              }
            }
           else
            {
            }
          }
        }
      }
    }
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   subgroupBarrier();
  }
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(! (! (true)), ! (! (! (! _GLF_IDENTITY((true), (_GLF_IDENTITY((true), bool(bool((true))))) && true))))), (_GLF_IDENTITY(! (! (true)), ! (! (_GLF_IDENTITY(! (! _GLF_IDENTITY((true), (_GLF_IDENTITY((true), bool(bool((true))))) && true)), ! (! (! (! _GLF_IDENTITY((true), (_GLF_IDENTITY((true), bool(bool((true))))) && true))))))))) || false)), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.1)), bool(false)))))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, true, false)), ! (! (bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, true, false)))))))), false, false, false)))))
            {
             do
              {
               for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 | (0))) | (0))); _injected_loop_counter --)
                {
                 for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), min(_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), ~ (~ (int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))), _GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), max(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), int(_GLF_ONE(1.0, injectionSwitch.y)))))), max(_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), min(_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), ~ (~ (int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))), _GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), max(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), int(_GLF_ONE(1.0, injectionSwitch.y)))))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), min(_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), ~ (~ (int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))), _GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), max(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), int(_GLF_ONE(1.0, injectionSwitch.y)))))), (_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), min(_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), ~ (~ (int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))), _GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), max(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), int(_GLF_ONE(1.0, injectionSwitch.y))))))) / 1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(0.0, float(mat3(0.0, sqrt(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)), vec3(1.0, log(1.0), 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec3(1.0, log(1.0), 1.0)), clamp(dot(vec3(0.0, 1.0, _GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x)), vec3(1.0, log(1.0), 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec3(1.0, log(1.0), 1.0)), (dot(vec3(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec3(1.0, log(1.0), 1.0))) * 1.0), dot(vec3(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec3(1.0, log(1.0), 1.0))))), 0.0))) + _GLF_IDENTITY((_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), abs(1.0), tan(0.0), 1.0, 1.0, 1.0)))))), float(mat3(_GLF_IDENTITY((_GLF_IDENTITY(0.0, min(0.0, 0.0))), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))) || false) ? _GLF_FUZZED(-584.031) : (_GLF_IDENTITY(0.0, min(0.0, 0.0))))), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(1.0, float(mat4x3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-9.7) : 1.0)), tan(0.0), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-156.413)), float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(8.4)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(true))), length(vec4(0.0, 0.0, 0.0, 0.0)), round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, log(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0]))), float(_GLF_FUZZED(-6.5)), bool(false))), injectionSwitch[1])))).y)), round(length(normalize(1.0))), 1.0, 1.0, cos(0.0))))))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)))), min(_GLF_IDENTITY(clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)))), max(clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)))), clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)))))), clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY(clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)))), min(_GLF_IDENTITY(clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)))), mix(float(_GLF_FUZZED(-171.123)), float(clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))))), bool(true))), clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)))))), min(clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)))), clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))))))), max(_GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-3.7)), bool(false))), 0.0)), _GLF_IDENTITY(0.0, (0.0) * 1.0)))), min(clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)))), clamp(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)), clamp(min(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)), min(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)), _GLF_IDENTITY(min(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)), 0.0 + (min(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))))))))))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), max(_GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_IDENTITY(0.0, (0.0) * 1.0)))), float(_GLF_FUZZED(-85.47)), bool(false)))))), _GLF_IDENTITY(min(clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)))), clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))))), (min(clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)))), clamp(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)), min(min(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)), min(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)))))))) - 0.0)))))) / 1.0), _GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false ? _GLF_FUZZED(distance(vec3(-1.3, -2.2, 6.4), vec3(2.0, -23.75, -8.0))) : _GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-2.0)), float(injectionSwitch.x), bool(true))), 1.0, 0.0))), mix(float(_GLF_FUZZED(-8.6)), float(false ? _GLF_FUZZED(distance(vec3(-1.3, -2.2, 6.4), vec3(2.0, -23.75, -8.0))) : _GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-2.0)), float(injectionSwitch.x), bool(true))), 1.0, 0.0)))), bool(true))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(float(subgroup_local_id)) : _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(distance(vec3(-1.3, -2.2, 6.4), vec3(2.0, -23.75, -8.0))) : _GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-2.0)), _GLF_IDENTITY(float(injectionSwitch.x), min(float(injectionSwitch.x), float(injectionSwitch.x))), bool(true))), 1.0, 0.0))), clamp(false ? _GLF_FUZZED(distance(vec3(-1.3, -2.2, 6.4), vec3(2.0, -23.75, -8.0))) : _GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-2.0)), _GLF_IDENTITY(float(injectionSwitch.x), min(float(injectionSwitch.x), float(injectionSwitch.x))), bool(true))), 1.0, 0.0))), false ? _GLF_FUZZED(distance(vec3(-1.3, -2.2, 6.4), vec3(2.0, -23.75, -8.0))) : _GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-2.0)), _GLF_IDENTITY(float(injectionSwitch.x), min(float(injectionSwitch.x), float(injectionSwitch.x))), bool(true))), 1.0, 0.0))), false ? _GLF_FUZZED(distance(vec3(-1.3, -2.2, 6.4), vec3(2.0, -23.75, -8.0))) : _GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-2.0)), _GLF_IDENTITY(float(injectionSwitch.x), min(float(injectionSwitch.x), float(injectionSwitch.x))), bool(true))), 1.0, 0.0))))), mix(float(_GLF_FUZZED(-8.6)), float(false ? _GLF_IDENTITY(_GLF_FUZZED(distance(vec3(-1.3, -2.2, 6.4), vec3(2.0, -23.75, -8.0))), clamp(_GLF_FUZZED(distance(vec3(-1.3, -2.2, 6.4), vec3(2.0, -23.75, -8.0))), _GLF_FUZZED(distance(vec3(-1.3, -2.2, 6.4), vec3(2.0, -23.75, -8.0))), _GLF_FUZZED(distance(vec3(-1.3, -2.2, 6.4), vec3(2.0, -23.75, -8.0))))) : _GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-2.0)), float(injectionSwitch.x), bool(true))), 1.0, 0.0)))), bool(true)))))))), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0)))[0], injectionSwitch[1])))).x))); _injected_loop_counter --)
                  {
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(46.53)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))), _GLF_ZERO(0.0, injectionSwitch.x))))); _injected_loop_counter --)
                    {
                     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                      {
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         do
                          {
                           do
                            {
                             if(_GLF_WRAPPED_IF_TRUE(true))
                              {
                               atomicStore(checker[_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x, clamp(GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x, _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x, _GLF_IDENTITY(clamp(GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x, GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x, GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x), max(_GLF_IDENTITY(clamp(GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x, GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x, GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x), (clamp(GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x, GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x, GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x)) - 0u), _GLF_IDENTITY(clamp(GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x, GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x, GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x), ~ (~ (clamp(GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x, GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x, GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x))))))), GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x))], _GLF_IDENTITY(_GLF_IDENTITY(read, (read) << 0u), ~ (~ (_GLF_IDENTITY(read, (read) << 0u)))), _GLF_IDENTITY(4, (4) + 0), 64, 4);
                              }
                             else
                              {
                              }
                            }
                           while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true)))))), (bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_IDENTITY(true, (true) && true), true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))));
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                        }
                       else
                        {
                        }
                      }
                    }
                  }
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
            }
           else
            {
            }
          }
         else
          {
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)));
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
