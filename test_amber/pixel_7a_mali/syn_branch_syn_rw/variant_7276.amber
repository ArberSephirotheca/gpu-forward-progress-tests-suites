#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))), false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), (bool(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), (! (! (_GLF_IDENTITY(false, ! (! (false)))))) && true)) && true)))) && true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), (true ? (injectionSwitch.x) : _GLF_FUZZED(sqrt(702.137)))) / 1.0)), float(_GLF_FUZZED(-9822.5159)), bool(false))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0))) * (injectionSwitch)))))).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), min(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (true ? _GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(gl_NumWorkGroups)) - uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(139839u, 107085u, 132878u)))), _GLF_IDENTITY(max(uvec3(gl_NumWorkGroups), _GLF_IDENTITY(uvec3(gl_NumWorkGroups), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (_GLF_IDENTITY(uvec3(gl_NumWorkGroups), min(uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups)))) | (_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(gl_NumWorkGroups)) - uvec3(0u, 0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id))))))), _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), false))) ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(155280u, clamp(_GLF_IDENTITY(155280u, 0u ^ (155280u)), _GLF_IDENTITY(155280u, (true ? 155280u : _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_FUZZED(subgroup_size)) >> 0u)))))), 155280u)), 8448u, 159658u)) : uvec3(gl_NumWorkGroups)), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), false))) ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(155280u, clamp(_GLF_IDENTITY(155280u, 0u ^ (155280u)), _GLF_IDENTITY(155280u, (true ? 155280u : _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_FUZZED(subgroup_size)) >> 0u)))))), 155280u)), 8448u, 159658u)) : uvec3(gl_NumWorkGroups)), max((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), false))) ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(155280u, clamp(_GLF_IDENTITY(155280u, 0u ^ (155280u)), _GLF_IDENTITY(155280u, (true ? 155280u : _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_FUZZED(subgroup_size)) >> 0u)))))), 155280u)), 8448u, 159658u)) : uvec3(gl_NumWorkGroups)), (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), false))) ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(155280u, clamp(_GLF_IDENTITY(155280u, 0u ^ (155280u)), _GLF_IDENTITY(155280u, (true ? 155280u : _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_FUZZED(subgroup_size)) >> 0u)))))), 155280u)), 8448u, 159658u)) : uvec3(gl_NumWorkGroups))))))))), min(uvec3(uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (false ? _GLF_FUZZED(uvec3(155280u, 8448u, 159658u)) : uvec3(gl_NumWorkGroups))))), uvec3(uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (false ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(155280u, clamp(155280u, 155280u, 155280u)), 8448u, 159658u)) : _GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(gl_NumWorkGroups)) << (uvec3(61578u, 10285u, 35819u) & uvec3(0u, 0u, 0u)))))))))), max(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (_GLF_IDENTITY(uvec3(gl_NumWorkGroups), min(uvec3(gl_NumWorkGroups), uvec3(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec4(gl_NumWorkGroups, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))))), ~ (~ (uvec3(uvec4(gl_NumWorkGroups, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))))))))))))) | (_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(gl_NumWorkGroups)) - uvec3(0u, 0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id))))))), (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), false))) ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(155280u, clamp(_GLF_IDENTITY(155280u, 0u ^ (155280u)), _GLF_IDENTITY(155280u, (true ? 155280u : _GLF_FUZZED(subgroup_size))), 155280u)), 8448u, 159658u)) : uvec3(gl_NumWorkGroups))))), min(uvec3(uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (false ? _GLF_FUZZED(uvec3(155280u, 8448u, 159658u)) : uvec3(gl_NumWorkGroups))))), uvec3(uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec3(_GLF_IDENTITY(155280u, clamp(155280u, 155280u, 155280u)), 8448u, 159658u)), ~ (~ (_GLF_FUZZED(uvec3(_GLF_IDENTITY(155280u, clamp(155280u, 155280u, 155280u)), 8448u, 159658u))))) : _GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(gl_NumWorkGroups)) << (uvec3(61578u, 10285u, 35819u) & uvec3(0u, 0u, 0u)))))))))), _GLF_IDENTITY(uvec3(gl_NumWorkGroups), _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (_GLF_IDENTITY(uvec3(gl_NumWorkGroups), min(uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups)))) | (_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(gl_NumWorkGroups)) - uvec3(0u, 0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id))))))), (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), false))), false))) ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(155280u, clamp(_GLF_IDENTITY(155280u, 0u ^ (155280u)), _GLF_IDENTITY(155280u, (true ? 155280u : _GLF_FUZZED(subgroup_size))), 155280u)), 8448u, 159658u)) : uvec3(gl_NumWorkGroups))))), min(uvec3(uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (false ? _GLF_FUZZED(uvec3(155280u, 8448u, 159658u)) : uvec3(gl_NumWorkGroups))))), uvec3(uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (false ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(155280u, clamp(155280u, 155280u, 155280u)), 8448u, 159658u)) : _GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(gl_NumWorkGroups)) << (uvec3(61578u, 10285u, 35819u) & uvec3(0u, 0u, 0u))))))))))))) + uvec3(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u))), clamp(max(uvec3(gl_NumWorkGroups), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (_GLF_IDENTITY(uvec3(gl_NumWorkGroups), min(uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups)))) | (_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(gl_NumWorkGroups)) - uvec3(0u, 0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id))))))), (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), false))) ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(155280u, clamp(_GLF_IDENTITY(155280u, 0u ^ (155280u)), _GLF_IDENTITY(155280u, (true ? 155280u : _GLF_FUZZED(subgroup_size))), 155280u)), 8448u, 159658u)) : uvec3(gl_NumWorkGroups))))), min(uvec3(uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (false ? _GLF_FUZZED(uvec3(155280u, 8448u, 159658u)) : uvec3(gl_NumWorkGroups))))), uvec3(uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (false ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(155280u, clamp(155280u, 155280u, 155280u)), 8448u, 159658u)) : _GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(gl_NumWorkGroups)) << (uvec3(61578u, 10285u, 35819u) & uvec3(0u, 0u, 0u)))))))))), max(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (_GLF_IDENTITY(uvec3(gl_NumWorkGroups), min(uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups)))) | (_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(gl_NumWorkGroups)) - uvec3(0u, 0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id))))))), (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), false))) ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(155280u, clamp(_GLF_IDENTITY(155280u, 0u ^ (155280u)), _GLF_IDENTITY(155280u, (true ? 155280u : _GLF_FUZZED(subgroup_size))), 155280u)), 8448u, 159658u)) : uvec3(gl_NumWorkGroups))))), min(uvec3(uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (false ? _GLF_FUZZED(uvec3(155280u, 8448u, 159658u)) : uvec3(gl_NumWorkGroups))))), uvec3(uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (false ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(155280u, clamp(155280u, 155280u, 155280u)), 8448u, 159658u)) : _GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(gl_NumWorkGroups)) << (uvec3(61578u, 10285u, 35819u) & uvec3(0u, 0u, 0u)))))))))), _GLF_IDENTITY(uvec3(gl_NumWorkGroups), _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (_GLF_IDENTITY(uvec3(gl_NumWorkGroups), min(uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups)))) | (_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(gl_NumWorkGroups)) - uvec3(0u, 0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id))))))), (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), false))) ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(155280u, clamp(_GLF_IDENTITY(155280u, 0u ^ (155280u)), _GLF_IDENTITY(155280u, (true ? 155280u : _GLF_FUZZED(subgroup_size))), 155280u)), 8448u, 159658u)) : uvec3(gl_NumWorkGroups))))), min(uvec3(uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (false ? _GLF_FUZZED(uvec3(155280u, 8448u, 159658u)) : uvec3(gl_NumWorkGroups))))), uvec3(uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (false ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(155280u, clamp(155280u, 155280u, 155280u)), 8448u, 159658u)) : _GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(gl_NumWorkGroups)) << (uvec3(61578u, 10285u, 35819u) & uvec3(0u, 0u, 0u))))))))))))) + uvec3(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u)), (_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (_GLF_IDENTITY(uvec3(gl_NumWorkGroups), min(uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups)))) | (_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(gl_NumWorkGroups)) - uvec3(0u, 0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id))))))), (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), false))) ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(155280u, clamp(_GLF_IDENTITY(155280u, 0u ^ (155280u)), _GLF_IDENTITY(155280u, (true ? 155280u : _GLF_FUZZED(subgroup_size))), 155280u)), 8448u, 159658u)) : uvec3(gl_NumWorkGroups))))), min(uvec3(uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (false ? _GLF_FUZZED(uvec3(155280u, 8448u, 159658u)) : uvec3(gl_NumWorkGroups))))), uvec3(uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (false ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(155280u, clamp(155280u, 155280u, 155280u)), 8448u, 159658u)) : _GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(gl_NumWorkGroups)) << (uvec3(61578u, 10285u, 35819u) & uvec3(0u, 0u, 0u)))))))))), max(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (_GLF_IDENTITY(uvec3(gl_NumWorkGroups), min(uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups)))) | (_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(gl_NumWorkGroups)) - uvec3(0u, 0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id))))))), (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), false))) ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(155280u, clamp(_GLF_IDENTITY(155280u, 0u ^ (155280u)), _GLF_IDENTITY(155280u, (true ? 155280u : _GLF_FUZZED(subgroup_size))), 155280u)), 8448u, 159658u)) : uvec3(gl_NumWorkGroups))))), min(uvec3(uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (false ? _GLF_FUZZED(uvec3(155280u, 8448u, 159658u)) : uvec3(gl_NumWorkGroups))))), uvec3(uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (false ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(155280u, clamp(155280u, 155280u, 155280u)), 8448u, 159658u)) : _GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(gl_NumWorkGroups)) << (uvec3(61578u, 10285u, 35819u) & uvec3(0u, 0u, 0u)))))))))), _GLF_IDENTITY(uvec3(gl_NumWorkGroups), _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (_GLF_IDENTITY(uvec3(gl_NumWorkGroups), min(uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups)))) | (_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(gl_NumWorkGroups)) - uvec3(0u, 0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id))))))), (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), false))) ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(155280u, clamp(_GLF_IDENTITY(155280u, 0u ^ (155280u)), _GLF_IDENTITY(155280u, (true ? 155280u : _GLF_FUZZED(subgroup_size))), 155280u)), 8448u, 159658u)) : uvec3(gl_NumWorkGroups))))), min(uvec3(uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (false ? _GLF_FUZZED(uvec3(155280u, 8448u, 159658u)) : uvec3(gl_NumWorkGroups))))), uvec3(uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (false ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(155280u, clamp(155280u, 155280u, 155280u)), 8448u, 159658u)) : _GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(gl_NumWorkGroups)) << (uvec3(61578u, 10285u, 35819u) & uvec3(0u, 0u, 0u))))))))))))) + uvec3(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u))) | uvec3(0u, 0u, 0u))), max(uvec3(gl_NumWorkGroups), _GLF_IDENTITY(uvec3(gl_NumWorkGroups), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (_GLF_IDENTITY(uvec3(gl_NumWorkGroups), min(uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups)))) | (_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(gl_NumWorkGroups)) - uvec3(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) | (1u ^ 1u)), 0u)), 0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id))))))), (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), false))) ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(155280u, clamp(_GLF_IDENTITY(155280u, 0u ^ (155280u)), _GLF_IDENTITY(155280u, (true ? 155280u : _GLF_FUZZED(subgroup_size))), 155280u)), 8448u, 159658u)) : uvec3(gl_NumWorkGroups))))), min(uvec3(uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (false ? _GLF_FUZZED(uvec3(155280u, 8448u, 159658u)) : uvec3(gl_NumWorkGroups))))), uvec3(uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (false ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(155280u, clamp(155280u, 155280u, 155280u)), 8448u, 159658u)) : _GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(gl_NumWorkGroups)) << (uvec3(61578u, 10285u, 35819u) & uvec3(0u, 0u, 0u)))))))))), max(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (_GLF_IDENTITY(uvec3(gl_NumWorkGroups), min(uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups)))) | (_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(gl_NumWorkGroups)) - uvec3(0u, 0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), false, true))))))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), false))) ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(155280u, clamp(_GLF_IDENTITY(155280u, 0u ^ (155280u)), _GLF_IDENTITY(155280u, (true ? 155280u : _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size))))), 155280u)), _GLF_IDENTITY(8448u, (0u | 0u) ^ (8448u)), 159658u)) : uvec3(gl_NumWorkGroups))))), min(uvec3(uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (false ? _GLF_FUZZED(uvec3(155280u, 8448u, _GLF_IDENTITY(159658u, clamp(_GLF_IDENTITY(159658u, (false ? _GLF_FUZZED(10642u) : 159658u)), 159658u, _GLF_IDENTITY(159658u, min(159658u, 159658u)))))) : uvec3(gl_NumWorkGroups))))), uvec3(uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (false ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(155280u, clamp(155280u, 155280u, 155280u)), 8448u, 159658u)) : _GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(gl_NumWorkGroups)) << (uvec3(61578u, 10285u, 35819u) & uvec3(0u, 0u, 0u)))))))))), _GLF_IDENTITY(uvec3(gl_NumWorkGroups), _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (_GLF_IDENTITY(uvec3(gl_NumWorkGroups), min(uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups)))) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(gl_NumWorkGroups)) - uvec3(0u, 0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id))))), (_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(gl_NumWorkGroups)) - uvec3(0u, 0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id)))))) * ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(6u), _GLF_IDENTITY(uvec3(6u), max(uvec3(6u), uvec3(6u))))) >> _GLF_IDENTITY(uvec3(6u), uvec3(6u)))))), (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), false))) ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(155280u, clamp(_GLF_IDENTITY(155280u, 0u ^ (155280u)), _GLF_IDENTITY(_GLF_IDENTITY(155280u, (155280u) - 0u), (true ? 155280u : _GLF_FUZZED(subgroup_size))), 155280u)), 8448u, 159658u)) : uvec3(gl_NumWorkGroups))))), min(uvec3(uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (false ? _GLF_FUZZED(uvec3(155280u, 8448u, 159658u)) : uvec3(gl_NumWorkGroups))))), uvec3(uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (false ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(155280u, clamp(155280u, 155280u, 155280u)), 8448u, 159658u)) : _GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(gl_NumWorkGroups)) << (uvec3(61578u, 10285u, 35819u) & uvec3(0u, 0u, 0u))))))))))))) + uvec3(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u))), max(uvec3(gl_NumWorkGroups), _GLF_IDENTITY(uvec3(gl_NumWorkGroups), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (_GLF_IDENTITY(uvec3(gl_NumWorkGroups), min(uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups)))) | (_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(gl_NumWorkGroups)) - uvec3(0u, 0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id))))))), (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), false))) ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(155280u, clamp(_GLF_IDENTITY(155280u, 0u ^ (155280u)), _GLF_IDENTITY(155280u, (true ? 155280u : _GLF_FUZZED(subgroup_size))), 155280u)), 8448u, 159658u)) : uvec3(gl_NumWorkGroups))))), min(uvec3(uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (false ? _GLF_FUZZED(uvec3(155280u, 8448u, 159658u)) : uvec3(gl_NumWorkGroups))))), uvec3(uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (false ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(155280u, clamp(155280u, 155280u, 155280u)), 8448u, 159658u)) : _GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(gl_NumWorkGroups)) << (uvec3(61578u, 10285u, 35819u) & uvec3(0u, 0u, 0u)))))))))), max(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (_GLF_IDENTITY(uvec3(gl_NumWorkGroups), min(uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups)))) | (_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(gl_NumWorkGroups)) - uvec3(0u, 0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id))))))), (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), false))) ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(155280u, _GLF_IDENTITY(clamp(_GLF_IDENTITY(155280u, 0u ^ (155280u)), _GLF_IDENTITY(155280u, (true ? 155280u : _GLF_FUZZED(subgroup_size))), 155280u), min(_GLF_IDENTITY(clamp(_GLF_IDENTITY(155280u, 0u ^ (155280u)), _GLF_IDENTITY(155280u, (true ? 155280u : _GLF_FUZZED(subgroup_size))), 155280u), (clamp(_GLF_IDENTITY(155280u, 0u ^ (155280u)), _GLF_IDENTITY(155280u, (true ? 155280u : _GLF_FUZZED(subgroup_size))), 155280u)) ^ 0u), clamp(_GLF_IDENTITY(155280u, 0u ^ (155280u)), _GLF_IDENTITY(155280u, (true ? 155280u : _GLF_FUZZED(subgroup_size))), 155280u)))), 8448u, 159658u)) : uvec3(gl_NumWorkGroups))))), min(uvec3(uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (false ? _GLF_FUZZED(uvec3(155280u, 8448u, 159658u)) : uvec3(gl_NumWorkGroups))))), uvec3(uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (false ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(155280u, clamp(155280u, _GLF_IDENTITY(155280u, (155280u) * 1u), 155280u)), 8448u, 159658u)) : _GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(gl_NumWorkGroups)) << (uvec3(61578u, 10285u, 35819u) & uvec3(0u, 0u, 0u)))))))))), _GLF_IDENTITY(uvec3(gl_NumWorkGroups), _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(gl_NumWorkGroups), min(uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups)))), (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(2u), uvec3(2u))) + (_GLF_IDENTITY((_GLF_IDENTITY(uvec3(gl_NumWorkGroups), min(uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups)))), min((_GLF_IDENTITY(uvec3(gl_NumWorkGroups), min(uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups)))), (_GLF_IDENTITY(uvec3(gl_NumWorkGroups), min(uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups)))))))) | (_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(gl_NumWorkGroups)) - uvec3(0u, 0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), false))) ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(155280u, clamp(_GLF_IDENTITY(155280u, 0u ^ _GLF_IDENTITY((155280u), uint(uvec2((155280u), 1u)))), _GLF_IDENTITY(155280u, (true ? 155280u : _GLF_FUZZED(subgroup_size))), 155280u)), 8448u, 159658u)) : uvec3(gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), false))) ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(155280u, clamp(_GLF_IDENTITY(155280u, 0u ^ _GLF_IDENTITY((155280u), uint(uvec2((155280u), 1u)))), _GLF_IDENTITY(155280u, (true ? 155280u : _GLF_FUZZED(subgroup_size))), 155280u)), 8448u, 159658u)) : uvec3(gl_NumWorkGroups))))))), min(uvec3(uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (false ? _GLF_FUZZED(uvec3(155280u, 8448u, 159658u)) : uvec3(gl_NumWorkGroups))))), uvec3(uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (false ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(155280u, clamp(155280u, 155280u, 155280u)), 8448u, 159658u)) : _GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(gl_NumWorkGroups)) << (uvec3(61578u, 10285u, 35819u) & uvec3(0u, 0u, 0u))), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(gl_NumWorkGroups)) << (uvec3(61578u, 10285u, 35819u) & uvec3(0u, 0u, 0u))))))))))))))) + uvec3(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u)))))), uvec3(gl_NumWorkGroups))))).x, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (_GLF_IDENTITY(uvec3(gl_NumWorkGroups), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) - uvec3(0u, 0u, 0u))[1], _GLF_IDENTITY(gl_NumWorkGroups[2], (gl_NumWorkGroups[2]) << 0u))))), (true ? (uvec3(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], (gl_NumWorkGroups[2]) << 0u))))) : _GLF_FUZZED((uvec3(119787u, 31275u, 108722u) ^ uvec3(87006u, 79955u, 120921u).bbr)))) >> uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u)), min(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), max(uvec3(gl_NumWorkGroups), uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))))), uvec3(gl_NumWorkGroups))))).x) | _GLF_IDENTITY((uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) * sqrt(1.0)), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((1.2 - -8.2))), bool(false))))) << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), uint(uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, 0u + (6u))), ~ (~ (uint(_GLF_IDENTITY(6u, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) * (_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, _GLF_IDENTITY((6u), ~ (~ ((6u)))) | (_GLF_IDENTITY(6u, ~ (_GLF_IDENTITY(~ (6u), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (6u)))))))))))))))), 0u, 0u, 1u))))), (true ? (uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(true ? 0.0 : _GLF_IDENTITY(_GLF_FUZZED(vec3(46.00, -2.0, -0.0).z), (_GLF_FUZZED(vec3(_GLF_IDENTITY(46.00, mix(float(_GLF_IDENTITY(46.00, max(_GLF_IDENTITY(46.00, max(46.00, 46.00)), 46.00))), float(_GLF_FUZZED(5.4)), bool(false))), -2.0, -0.0).z)) - 0.0), clamp(true ? 0.0 : _GLF_IDENTITY(_GLF_FUZZED(vec3(46.00, -2.0, -0.0).z), (_GLF_FUZZED(vec3(_GLF_IDENTITY(46.00, mix(float(_GLF_IDENTITY(46.00, max(_GLF_IDENTITY(46.00, max(46.00, 46.00)), 46.00))), float(_GLF_FUZZED(5.4)), bool(false))), -2.0, -0.0).z)) - 0.0), true ? 0.0 : _GLF_IDENTITY(_GLF_FUZZED(vec3(46.00, -2.0, -0.0).z), _GLF_IDENTITY((_GLF_FUZZED(vec3(_GLF_IDENTITY(46.00, mix(float(_GLF_IDENTITY(46.00, max(_GLF_IDENTITY(46.00, max(46.00, 46.00)), 46.00))), float(_GLF_FUZZED(5.4)), bool(false))), -2.0, -0.0).z)), mix(float(_GLF_FUZZED(-3.2)), float(_GLF_IDENTITY((_GLF_FUZZED(vec3(_GLF_IDENTITY(46.00, mix(float(_GLF_IDENTITY(46.00, max(_GLF_IDENTITY(46.00, max(46.00, 46.00)), 46.00))), float(_GLF_FUZZED(5.4)), bool(false))), -2.0, -0.0).z)), (false ? _GLF_FUZZED(-918.527) : (_GLF_FUZZED(vec3(_GLF_IDENTITY(46.00, mix(float(_GLF_IDENTITY(46.00, max(_GLF_IDENTITY(46.00, max(46.00, 46.00)), 46.00))), float(_GLF_FUZZED(5.4)), bool(false))), -2.0, -0.0).z))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) - 0.0), _GLF_IDENTITY(true ? 0.0 : _GLF_IDENTITY(_GLF_FUZZED(vec3(46.00, -2.0, -0.0).z), (_GLF_FUZZED(vec3(_GLF_IDENTITY(46.00, mix(float(_GLF_IDENTITY(46.00, max(_GLF_IDENTITY(46.00, max(46.00, 46.00)), 46.00))), float(_GLF_FUZZED(5.4)), bool(false))), -2.0, -0.0).z)) - 0.0), clamp(_GLF_IDENTITY(true ? 0.0 : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec3(46.00, -2.0, -0.0).z), (_GLF_FUZZED(vec3(_GLF_IDENTITY(46.00, mix(float(_GLF_IDENTITY(46.00, max(_GLF_IDENTITY(46.00, max(46.00, 46.00)), 46.00))), float(_GLF_FUZZED(5.4)), bool(false))), -2.0, -0.0).z)) - 0.0), max(_GLF_IDENTITY(_GLF_FUZZED(vec3(46.00, -2.0, -0.0).z), (_GLF_FUZZED(vec3(_GLF_IDENTITY(46.00, mix(float(_GLF_IDENTITY(46.00, max(_GLF_IDENTITY(46.00, max(46.00, 46.00)), 46.00))), float(_GLF_FUZZED(5.4)), bool(false))), -2.0, -0.0).z)) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec3(46.00, -2.0, -0.0).z), (_GLF_FUZZED(vec3(_GLF_IDENTITY(46.00, mix(float(_GLF_IDENTITY(46.00, max(_GLF_IDENTITY(46.00, max(46.00, 46.00)), 46.00))), float(_GLF_FUZZED(5.4)), bool(false))), -2.0, -0.0).z)) - 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec3(46.00, -2.0, -0.0).z), (_GLF_FUZZED(vec3(_GLF_IDENTITY(46.00, mix(float(_GLF_IDENTITY(46.00, max(_GLF_IDENTITY(46.00, max(46.00, 46.00)), 46.00))), float(_GLF_FUZZED(5.4)), bool(false))), -2.0, -0.0).z)) - 0.0), (_GLF_IDENTITY(_GLF_FUZZED(vec3(46.00, -2.0, -0.0).z), (_GLF_FUZZED(vec3(_GLF_IDENTITY(46.00, mix(float(_GLF_IDENTITY(46.00, max(_GLF_IDENTITY(46.00, max(46.00, 46.00)), 46.00))), float(_GLF_FUZZED(5.4)), bool(false))), -2.0, -0.0).z)) - 0.0)) - 0.0)) * 1.0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-3187.1726) : _GLF_IDENTITY(true ? 0.0 : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec3(46.00, -2.0, -0.0).z), (_GLF_FUZZED(vec3(_GLF_IDENTITY(46.00, mix(float(_GLF_IDENTITY(46.00, max(_GLF_IDENTITY(46.00, max(46.00, 46.00)), 46.00))), float(_GLF_FUZZED(5.4)), bool(false))), -2.0, -0.0).z)) - 0.0), max(_GLF_IDENTITY(_GLF_FUZZED(vec3(46.00, -2.0, -0.0).z), (_GLF_FUZZED(vec3(_GLF_IDENTITY(46.00, mix(float(_GLF_IDENTITY(46.00, max(_GLF_IDENTITY(46.00, max(46.00, 46.00)), 46.00))), float(_GLF_FUZZED(5.4)), bool(false))), -2.0, -0.0).z)) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec3(46.00, -2.0, -0.0).z), (_GLF_FUZZED(vec3(_GLF_IDENTITY(46.00, mix(float(_GLF_IDENTITY(46.00, max(_GLF_IDENTITY(46.00, max(46.00, 46.00)), 46.00))), float(_GLF_FUZZED(5.4)), bool(false))), -2.0, -0.0).z)) - 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec3(46.00, -2.0, -0.0).z), (_GLF_FUZZED(vec3(_GLF_IDENTITY(46.00, mix(float(_GLF_IDENTITY(46.00, max(_GLF_IDENTITY(46.00, max(46.00, 46.00)), 46.00))), float(_GLF_FUZZED(5.4)), bool(false))), -2.0, -0.0).z)) - 0.0), (_GLF_IDENTITY(_GLF_FUZZED(vec3(46.00, -2.0, -0.0).z), (_GLF_FUZZED(vec3(_GLF_IDENTITY(46.00, mix(float(_GLF_IDENTITY(46.00, max(_GLF_IDENTITY(46.00, max(46.00, 46.00)), 46.00))), float(_GLF_FUZZED(5.4)), bool(false))), -2.0, -0.0).z)) - 0.0)) - 0.0)) * 1.0))), (_GLF_IDENTITY(true ? 0.0 : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec3(46.00, -2.0, -0.0).z), (_GLF_FUZZED(vec3(_GLF_IDENTITY(46.00, mix(float(_GLF_IDENTITY(46.00, max(_GLF_IDENTITY(46.00, max(46.00, 46.00)), 46.00))), float(_GLF_FUZZED(5.4)), bool(false))), -2.0, -0.0).z)) - 0.0), max(_GLF_IDENTITY(_GLF_FUZZED(vec3(46.00, -2.0, -0.0).z), (_GLF_FUZZED(vec3(_GLF_IDENTITY(46.00, mix(float(_GLF_IDENTITY(46.00, max(_GLF_IDENTITY(46.00, max(46.00, 46.00)), 46.00))), float(_GLF_FUZZED(5.4)), bool(false))), -2.0, -0.0).z)) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec3(46.00, -2.0, -0.0).z), (_GLF_FUZZED(vec3(_GLF_IDENTITY(46.00, mix(float(_GLF_IDENTITY(46.00, max(_GLF_IDENTITY(46.00, max(46.00, 46.00)), 46.00))), float(_GLF_FUZZED(5.4)), bool(false))), -2.0, -0.0).z)) - 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec3(46.00, -2.0, -0.0).z), (_GLF_FUZZED(vec3(_GLF_IDENTITY(46.00, mix(float(_GLF_IDENTITY(46.00, max(_GLF_IDENTITY(46.00, max(46.00, 46.00)), 46.00))), float(_GLF_FUZZED(5.4)), bool(false))), -2.0, -0.0).z)) - 0.0), (_GLF_IDENTITY(_GLF_FUZZED(vec3(46.00, -2.0, -0.0).z), (_GLF_FUZZED(vec3(_GLF_IDENTITY(46.00, mix(float(_GLF_IDENTITY(46.00, max(_GLF_IDENTITY(46.00, max(46.00, 46.00)), 46.00))), float(_GLF_FUZZED(5.4)), bool(false))), -2.0, -0.0).z)) - 0.0)) - 0.0)) * 1.0))), min(true ? 0.0 : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec3(46.00, -2.0, -0.0).z), (_GLF_FUZZED(vec3(_GLF_IDENTITY(46.00, mix(float(_GLF_IDENTITY(46.00, max(_GLF_IDENTITY(46.00, max(46.00, 46.00)), 46.00))), float(_GLF_FUZZED(5.4)), bool(false))), -2.0, -0.0).z)) - 0.0), max(_GLF_IDENTITY(_GLF_FUZZED(vec3(46.00, -2.0, -0.0).z), (_GLF_FUZZED(vec3(_GLF_IDENTITY(46.00, mix(float(_GLF_IDENTITY(46.00, max(_GLF_IDENTITY(46.00, max(46.00, 46.00)), 46.00))), float(_GLF_FUZZED(5.4)), bool(false))), -2.0, -0.0).z)) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec3(46.00, -2.0, -0.0).z), (_GLF_FUZZED(vec3(_GLF_IDENTITY(46.00, mix(float(_GLF_IDENTITY(46.00, max(_GLF_IDENTITY(46.00, max(46.00, 46.00)), 46.00))), float(_GLF_FUZZED(5.4)), bool(false))), -2.0, -0.0).z)) - 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec3(46.00, -2.0, -0.0).z), (_GLF_FUZZED(vec3(_GLF_IDENTITY(46.00, mix(float(_GLF_IDENTITY(46.00, max(_GLF_IDENTITY(46.00, max(46.00, 46.00)), 46.00))), float(_GLF_FUZZED(5.4)), bool(false))), -2.0, -0.0).z)) - 0.0), (_GLF_IDENTITY(_GLF_FUZZED(vec3(46.00, -2.0, -0.0).z), (_GLF_FUZZED(vec3(_GLF_IDENTITY(46.00, mix(float(_GLF_IDENTITY(46.00, max(_GLF_IDENTITY(46.00, max(46.00, 46.00)), 46.00))), float(_GLF_FUZZED(5.4)), bool(false))), -2.0, -0.0).z)) - 0.0)) - 0.0)) * 1.0))), true ? 0.0 : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec3(46.00, -2.0, -0.0).z), (_GLF_FUZZED(vec3(_GLF_IDENTITY(46.00, mix(float(_GLF_IDENTITY(46.00, max(_GLF_IDENTITY(46.00, max(46.00, 46.00)), 46.00))), float(_GLF_FUZZED(5.4)), bool(false))), -2.0, -0.0).z)) - 0.0), max(_GLF_IDENTITY(_GLF_FUZZED(vec3(46.00, -2.0, -0.0).z), (_GLF_FUZZED(vec3(_GLF_IDENTITY(46.00, mix(float(_GLF_IDENTITY(46.00, max(_GLF_IDENTITY(46.00, max(46.00, 46.00)), 46.00))), float(_GLF_FUZZED(5.4)), bool(false))), -2.0, -0.0).z)) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec3(46.00, -2.0, -0.0).z), (_GLF_FUZZED(vec3(_GLF_IDENTITY(46.00, mix(float(_GLF_IDENTITY(46.00, max(_GLF_IDENTITY(46.00, max(46.00, 46.00)), 46.00))), float(_GLF_FUZZED(5.4)), bool(false))), -2.0, -0.0).z)) - 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec3(46.00, -2.0, -0.0).z), (_GLF_FUZZED(vec3(_GLF_IDENTITY(46.00, mix(float(_GLF_IDENTITY(46.00, max(_GLF_IDENTITY(46.00, max(46.00, 46.00)), 46.00))), float(_GLF_FUZZED(5.4)), bool(false))), -2.0, -0.0).z)) - 0.0), (_GLF_IDENTITY(_GLF_FUZZED(vec3(46.00, -2.0, -0.0).z), (_GLF_FUZZED(vec3(_GLF_IDENTITY(46.00, mix(float(_GLF_IDENTITY(46.00, max(_GLF_IDENTITY(46.00, max(46.00, 46.00)), 46.00))), float(_GLF_FUZZED(5.4)), bool(false))), -2.0, -0.0).z)) - 0.0)) - 0.0)) * 1.0)))))) / cos(0.0)))), true ? 0.0 : _GLF_IDENTITY(_GLF_FUZZED(vec3(46.00, -2.0, -0.0).z), (_GLF_FUZZED(vec3(_GLF_IDENTITY(46.00, mix(float(_GLF_IDENTITY(46.00, max(_GLF_IDENTITY(46.00, max(46.00, 46.00)), 46.00))), float(_GLF_FUZZED(5.4)), bool(false))), -2.0, -0.0).z)) - 0.0), _GLF_IDENTITY(true ? 0.0 : _GLF_IDENTITY(_GLF_FUZZED(vec3(46.00, -2.0, -0.0).z), (_GLF_FUZZED(vec3(_GLF_IDENTITY(46.00, mix(float(_GLF_IDENTITY(46.00, max(_GLF_IDENTITY(46.00, max(46.00, 46.00)), 46.00))), float(_GLF_FUZZED(5.4)), bool(false))), -2.0, -0.0).z)) - 0.0), (true ? 0.0 : _GLF_IDENTITY(_GLF_FUZZED(vec3(46.00, -2.0, -0.0).z), (_GLF_FUZZED(vec3(_GLF_IDENTITY(46.00, mix(float(_GLF_IDENTITY(46.00, max(_GLF_IDENTITY(46.00, max(46.00, _GLF_IDENTITY(46.00, 1.0 * (46.00)))), 46.00))), float(_GLF_FUZZED(5.4)), bool(false))), -2.0, -0.0).z)) - 0.0)) / 1.0))))))), injectionSwitch.x)) << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(109485u) : 6u))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (_GLF_IDENTITY(6u, (6u) - 0u)) * 1u)), uint(uint(uint(_GLF_IDENTITY(6u, (_GLF_IDENTITY(6u, (6u) - 0u)) * 1u))))), ~ (~ (uint(6u)))), 0u, 0u, 1u)))), min(_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), uint(uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, min(_GLF_IDENTITY(6u, ~ (~ (6u))), 6u))), ~ (~ (uint(6u)))), 0u, 0u, 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), uint(uvec4(_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(~ (~ (uint(6u))), max(~ (~ (uint(6u))), ~ (~ (uint(6u)))))), 0u, 0u, 1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), uint(uvec4(_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))), 0u, 0u, 1u)))), ~ (~ (_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), uint(uvec4(_GLF_IDENTITY(uint(6u), ~ _GLF_IDENTITY((~ (uint(6u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((~ (uint(6u))), ((~ (uint(6u)))) / (1u & 1u)), ((~ (uint(6u)))) | ((~ (uint(6u)))))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY((~ (uint(6u))), ((~ (uint(6u)))) | ((~ (uint(6u)))))), uint(uint(~ (_GLF_IDENTITY((~ (uint(6u))), ((~ (uint(6u)))) | ((~ (_GLF_IDENTITY(uint(6u), max(_GLF_IDENTITY(uint(6u), (uint(6u)) | (uint(6u))), uint(6u))))))))))), ~ (_GLF_IDENTITY((~ (uint(6u))), ((~ (uint(6u)))) | ((~ (uint(6u))))))))))), 0u, 0u, 1u)))))))) ^ 0u), clamp(_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))), 0u, 0u, 1u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))), 0u, 0u, 1u)), min(uint(uvec4(_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))), 0u, 0u, 1u)), uint(uvec4(_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))), 0u, 0u, 1u))))) / 1u, uint(_GLF_IDENTITY(uvec2((_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))), 0u, 0u, 1u)), min(uint(uvec4(_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))), 0u, 0u, 1u)), uint(uvec4(_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))), 0u, 0u, 1u))))) / 1u, (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), (uvec2((_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))), 0u, 0u, 1u)), min(uint(uvec4(_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))), 0u, 0u, 1u)), uint(uvec4(_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))), 0u, 0u, 1u))))) / 1u, (0u << _GLF_IDENTITY(uint(3u), uint(3u))))) | uvec2(0u, 0u))))))), _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), uint(uvec4(_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))), 0u, 0u, 1u)))), _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (_GLF_IDENTITY(_GLF_IDENTITY(6u, (_GLF_IDENTITY(6u, clamp(6u, 6u, 6u))) + 0u), (_GLF_IDENTITY(6u, (_GLF_IDENTITY(6u, clamp(6u, 6u, 6u))) + 0u)) | (_GLF_IDENTITY(6u, (_GLF_IDENTITY(6u, clamp(6u, 6u, 6u))) + 0u)))) / 1u)), uint(uvec4(_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))), 0u, 0u, 1u))))))))) : _GLF_FUZZED(uvec4(179778u, 165383u, 183539u, 140973u)[0]))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), false || (bool(bvec4(false, true, false, false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(1753.4188)), vec2(_GLF_FUZZED(4.8), (injectionSwitch)[1]), bvec2(false, true))).x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / 1.0, mix(float(_GLF_FUZZED(-5.2)), float((injectionSwitch.y) / 1.0), bool(true)))), injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), false, false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(vec3(-472.400, 17.07, -7.3).p)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))) || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) && true) && (false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) && true)))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id), ((workgroup_id)) ^ 0u) ^ 0u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1])), clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(1.2) : injectionSwitch[0])), injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) << 0)], injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) ^ 0)])))).y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false)))) && true))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u);
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base + subgroup_base), uint(uvec4(~ (workgroup_base + subgroup_base), 1u, 1u, (1u & 1u)))))) + subgroup_local_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(false)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), _GLF_IDENTITY(false, true && (false)))), true))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u)) >> ((0u ^ 0u) | 0u)) + subgroup_base + ((subgroup_local_id + _GLF_IDENTITY(1, min(1, 1))) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)) | (subgroup_local_id)) % 2) == 0)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), true && (! (! (false))))) || false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, false || (false)))), bool(bvec3(bool(bool(_GLF_IDENTITY(false, false || (false)))), false, true))))), (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))) || false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false, true, true)), true && (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false, true, true)))))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true, true, false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, bool(bool(false))), true, false))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false) || false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), max(_GLF_IDENTITY(uint(1), uint(_GLF_IDENTITY(uvec2(uint(1), 0u), (uvec2(uint(1), 0u)) - uvec2(0u, 0u)))), uint(1))), 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(740.264), _GLF_FUZZED(1.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x), (min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) * 1.0)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-8.3) : injectionSwitch.x)) > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) || false)))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), ! (! (bool(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(float(mat4x3(injectionSwitch[1], 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0)), clamp(float(mat4x3(injectionSwitch[1], 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0)), float(mat4x3(injectionSwitch[1], 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0)), float(mat4x3(injectionSwitch[1], 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0))))))).y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1], _GLF_IDENTITY(float(mat4x3(injectionSwitch[1], 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0)), clamp(float(mat4x3(injectionSwitch[1], 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0)), float(mat4x3(injectionSwitch[1], 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0)), float(mat4x3(injectionSwitch[1], 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0))))))).y, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(float(mat4x3(injectionSwitch[1], 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0)), clamp(float(mat4x3(injectionSwitch[1], 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0)), float(mat4x3(injectionSwitch[1], _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(5.4)), bool(false))), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0)), float(mat4x3(injectionSwitch[1], 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0))))))).y : _GLF_FUZZED(_GLF_IDENTITY(-0.7, max(_GLF_IDENTITY(-0.7, (-0.7) + 0.0), -0.7))))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(float(mat4x3(injectionSwitch[1], 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0)), clamp(float(mat4x3(injectionSwitch[1], 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0)), float(mat4x3(injectionSwitch[1], 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0)), float(mat4x3(injectionSwitch[1], 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0))))))).y)))), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(tan(vec2(926.902, -604.374))) : injectionSwitch)).y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), true, false, false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(38.84), _GLF_FUZZED(vec4(-9212.5875, 9.6, -0.9, -1217.5730).x)), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x)) + (injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / sqrt(vec2(1.0, 1.0)))))).y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(checker[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)), (_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid))) | (_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid))))], read, 4, _GLF_IDENTITY(64, (64) >> 0), _GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, 1 * (0))), clamp(~ (0), ~ (0), ~ (0))))) : _GLF_FUZZED((-98831 + -23211)))) ^ _GLF_IDENTITY((4), max((4), (4))), (0 ^ (4)) * 1)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
