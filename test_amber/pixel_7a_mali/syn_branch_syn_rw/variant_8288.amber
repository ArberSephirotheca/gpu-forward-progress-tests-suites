#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter --)
        {
         barrier();
        }
      }
    }
   barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basevirtual_gid;
 uint subgroup_id = gl_SubgroupID;
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, determinant(mat2(0.0, 0.0, 1.0, tan(0.0))), 0.0, 1.0))).x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
        {
        }
       else
        {
         barrier();
        }
      }
     barrier();
    }
  }
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(5.0)), vec2(_GLF_FUZZED(-0.0), (injectionSwitch)[1]), bvec2(false, true))) : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), false)), _GLF_IDENTITY((bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))) || false, ! (_GLF_IDENTITY(! ((bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))) || false), bool(bvec2(! ((bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))) || false), false)))))), true && (_GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))) || false))))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             do
              {
               do
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
            }
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
           do
            {
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter --)
                {
                 barrier();
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), 0 ^ (int(1)))))); _injected_loop_counter --)
            {
             barrier();
            }
          }
        }
       else
        {
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, (false ? _GLF_FUZZED(ivec3(-70379, 68810, 86490).r) : _injected_loop_counter --)))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           barrier();
          }
        }
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, false, false)), bool(bvec3(bool(bvec4(true, false, false, false)), true, true))))))
            {
             barrier();
            }
           else
            {
            }
          }
        }
       else
        {
        }
       barrier();
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
        barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | 0)) | (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) / 1))) < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
        {
         barrier();
        }
      }
    }
   else
    {
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     barrier();
    }
  }
 GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basevirtual_gid.y = _GLF_IDENTITY(num_workgroup, (_GLF_IDENTITY(num_workgroup, max(_GLF_IDENTITY(num_workgroup, max(num_workgroup, _GLF_IDENTITY(num_workgroup, (true ? num_workgroup : _GLF_FUZZED(num_workgroup))))), num_workgroup))) / (_GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_FUZZED((subgroup_size ^ num_workgroup)))) ^ 1u));
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) && true)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))) && true)))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((uvec3(_GLF_IDENTITY(88587u, (true ? _GLF_IDENTITY(88587u, clamp(88587u, 88587u, 88587u)) : _GLF_FUZZED(141906u))), 5947u, 199734u) & uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), uint(_GLF_IDENTITY(uint(~ (0u)), min(uint(~ (0u)), uint(~ (0u)))))))))), (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u), (false ? _GLF_FUZZED(uvec3(134135u, 189904u, 148976u)) : _GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u), (uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u)) >> uvec3(0u, 0u, 0u))))) * ((uvec3(88587u, 5947u, 199734u) & uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (0u), uint(_GLF_IDENTITY(uint(~ (0u)), min(uint(~ (0u)), uint(~ (0u))))))), ~ (~ ((_GLF_IDENTITY(~ (0u), uint(_GLF_IDENTITY(uint(~ (0u)), min(uint(~ (0u)), uint(~ (0u))))))))))))))), min(_GLF_IDENTITY((uvec3(88587u, 5947u, _GLF_IDENTITY(199734u, uint(uvec2(_GLF_IDENTITY(199734u, min(199734u, 199734u)), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))))))) & uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(~ (0u)), min(uint(~ (0u)), uint(~ (0u)))), ~ (~ (_GLF_IDENTITY(uint(~ (_GLF_IDENTITY(0u, (0u) | 0u))), min(uint(~ _GLF_IDENTITY((0u), max(_GLF_IDENTITY((0u), 0u | (_GLF_IDENTITY((0u), (true ? (0u) : _GLF_FUZZED(129605u))))), (0u)))), uint(~ (0u)))))))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(~ (0u)), min(uint(~ (0u)), uint(~ (0u)))), ~ (~ (_GLF_IDENTITY(uint(~ (_GLF_IDENTITY(0u, (0u) | 0u))), min(uint(~ _GLF_IDENTITY((0u), max(_GLF_IDENTITY((0u), 0u | (_GLF_IDENTITY((0u), (true ? (0u) : _GLF_FUZZED(129605u))))), (0u)))), uint(~ (0u)))))))), 0u ^ (uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(~ (0u)), min(uint(~ (0u)), uint(~ (0u)))), ~ (~ (_GLF_IDENTITY(uint(~ (_GLF_IDENTITY(0u, (0u) | 0u))), min(uint(~ _GLF_IDENTITY((0u), max(_GLF_IDENTITY((0u), 0u | (_GLF_IDENTITY((0u), (true ? (0u) : _GLF_FUZZED(129605u))))), (0u)))), uint(~ (0u))))))))))))))))), (uvec3(0u, 0u, 0u) ^ uvec3(_GLF_IDENTITY(1u, (1u) | (1u)), 1u, 1u)) * ((uvec3(88587u, 5947u, 199734u) & uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), uint(_GLF_IDENTITY(uint(~ (0u)), min(uint(~ (0u)), uint(~ (0u)))))))))))), _GLF_IDENTITY((uvec3(88587u, 5947u, 199734u) & uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), (~ (0u)) | (~ (0u))), uint(_GLF_IDENTITY(uint(~ (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) | (0u)))), min(uint(~ (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u)), 0u)))), uint(~ (0u)))))))))), (uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u)) * ((uvec3(88587u, 5947u, 199734u) & uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), uint(_GLF_IDENTITY(uint(~ (0u)), min(uint(~ (0u)), uint(~ (0u)))))))))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((uvec3(_GLF_IDENTITY(88587u, (true ? _GLF_IDENTITY(88587u, clamp(88587u, 88587u, 88587u)) : _GLF_FUZZED(141906u))), 5947u, 199734u) & uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), uint(_GLF_IDENTITY(uint(~ (0u)), min(uint(~ (0u)), uint(~ (0u)))))))))), (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u), (false ? _GLF_FUZZED(uvec3(134135u, 189904u, 148976u)) : _GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u), (uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u)) >> uvec3(0u, 0u, 0u))))) * ((uvec3(88587u, 5947u, 199734u) & uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (0u), uint(_GLF_IDENTITY(uint(~ (0u)), min(uint(~ (0u)), uint(~ (0u))))))), ~ (~ ((_GLF_IDENTITY(~ (0u), uint(_GLF_IDENTITY(uint(~ (0u)), min(uint(~ (0u)), uint(~ (0u))))))))))))))), min(_GLF_IDENTITY((uvec3(88587u, 5947u, _GLF_IDENTITY(199734u, uint(uvec2(_GLF_IDENTITY(199734u, min(199734u, 199734u)), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))))))) & uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(~ (0u)), min(uint(~ (0u)), uint(~ (0u)))), ~ (~ (_GLF_IDENTITY(uint(~ (_GLF_IDENTITY(0u, (0u) | 0u))), min(uint(~ _GLF_IDENTITY((0u), max(_GLF_IDENTITY((0u), 0u | (_GLF_IDENTITY((0u), (true ? (0u) : _GLF_FUZZED(129605u))))), (0u)))), uint(~ (0u)))))))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(~ (0u)), min(uint(~ (0u)), uint(~ (0u)))), ~ (~ (_GLF_IDENTITY(uint(~ (_GLF_IDENTITY(0u, (0u) | 0u))), min(uint(~ _GLF_IDENTITY((0u), max(_GLF_IDENTITY((0u), 0u | (_GLF_IDENTITY((0u), (true ? (0u) : _GLF_FUZZED(129605u))))), (0u)))), uint(~ (0u)))))))), 0u ^ (uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(~ (0u)), min(uint(~ (0u)), uint(~ (0u)))), ~ (~ (_GLF_IDENTITY(uint(~ (_GLF_IDENTITY(0u, (0u) | 0u))), min(uint(~ _GLF_IDENTITY((0u), max(_GLF_IDENTITY((0u), 0u | (_GLF_IDENTITY((0u), (true ? (0u) : _GLF_FUZZED(129605u))))), (0u)))), uint(~ (0u))))))))))))))))), (uvec3(0u, 0u, 0u) ^ uvec3(_GLF_IDENTITY(1u, (1u) | (1u)), 1u, 1u)) * ((uvec3(88587u, 5947u, 199734u) & uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), uint(_GLF_IDENTITY(uint(~ (0u)), min(uint(~ (0u)), uint(~ (0u)))))))))))), _GLF_IDENTITY((uvec3(88587u, 5947u, 199734u) & uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), (~ (0u)) | (~ (0u))), uint(_GLF_IDENTITY(uint(~ (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) | (0u)))), min(uint(~ (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u)), 0u)))), uint(~ (0u)))))))))), (uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u)) * ((uvec3(88587u, 5947u, 199734u) & uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), uint(_GLF_IDENTITY(uint(~ (0u)), min(uint(~ (0u)), uint(~ (0u)))))))))))))), (false ? _GLF_FUZZED(uvec3(119737u, 153473u, 59580u)) : _GLF_IDENTITY(_GLF_IDENTITY((uvec3(_GLF_IDENTITY(88587u, (true ? _GLF_IDENTITY(88587u, clamp(88587u, 88587u, 88587u)) : _GLF_FUZZED(141906u))), 5947u, 199734u) & uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), uint(_GLF_IDENTITY(uint(~ (0u)), min(uint(~ (0u)), uint(~ (0u)))))))))), (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u), (false ? _GLF_FUZZED(uvec3(134135u, 189904u, 148976u)) : _GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u), (uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u)) >> uvec3(0u, 0u, 0u))))) * ((uvec3(88587u, 5947u, 199734u) & uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (0u), uint(_GLF_IDENTITY(uint(~ (0u)), min(uint(~ (0u)), uint(~ (0u))))))), ~ (~ ((_GLF_IDENTITY(~ (0u), uint(_GLF_IDENTITY(uint(~ (0u)), min(uint(~ (0u)), uint(~ (0u))))))))))))))), min(_GLF_IDENTITY((uvec3(88587u, 5947u, _GLF_IDENTITY(199734u, uint(uvec2(_GLF_IDENTITY(199734u, min(199734u, 199734u)), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))))))) & uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(~ (0u)), min(uint(~ (0u)), uint(~ (0u)))), ~ (~ (_GLF_IDENTITY(uint(~ (_GLF_IDENTITY(0u, (0u) | 0u))), min(uint(~ _GLF_IDENTITY((0u), max(_GLF_IDENTITY((0u), 0u | (_GLF_IDENTITY((0u), (true ? (0u) : _GLF_FUZZED(129605u))))), (0u)))), uint(~ (0u)))))))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(~ (0u)), min(uint(~ (0u)), uint(~ (0u)))), ~ (~ (_GLF_IDENTITY(uint(~ (_GLF_IDENTITY(0u, (0u) | 0u))), min(uint(~ _GLF_IDENTITY((0u), max(_GLF_IDENTITY((0u), 0u | (_GLF_IDENTITY((0u), (true ? (0u) : _GLF_FUZZED(129605u))))), (0u)))), uint(~ (0u)))))))), 0u ^ (uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(~ (0u)), min(uint(~ (0u)), uint(~ (0u)))), ~ (~ (_GLF_IDENTITY(uint(~ (_GLF_IDENTITY(0u, (0u) | 0u))), min(uint(~ _GLF_IDENTITY((0u), max(_GLF_IDENTITY((0u), 0u | (_GLF_IDENTITY((0u), (true ? (0u) : _GLF_FUZZED(129605u))))), (0u)))), uint(~ (0u))))))))))))))))), (uvec3(0u, 0u, 0u) ^ uvec3(_GLF_IDENTITY(1u, (1u) | (1u)), 1u, 1u)) * ((uvec3(88587u, 5947u, 199734u) & uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), uint(_GLF_IDENTITY(uint(~ (0u)), min(uint(~ (0u)), uint(~ (0u)))))))))))), _GLF_IDENTITY((uvec3(88587u, 5947u, 199734u) & uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), (~ (0u)) | (~ (0u))), uint(_GLF_IDENTITY(uint(~ (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) | (0u)))), min(uint(~ (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u)), 0u)))), uint(~ (0u)))))))))), (uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u)) * ((uvec3(88587u, 5947u, 199734u) & uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), uint(_GLF_IDENTITY(uint(~ (0u)), min(uint(~ (0u)), uint(~ (0u)))))))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((uvec3(_GLF_IDENTITY(88587u, (true ? _GLF_IDENTITY(88587u, clamp(88587u, 88587u, 88587u)) : _GLF_FUZZED(141906u))), 5947u, 199734u) & uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), uint(_GLF_IDENTITY(uint(~ (0u)), min(uint(~ (0u)), uint(~ (0u)))))))))), (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u), (false ? _GLF_FUZZED(uvec3(134135u, 189904u, 148976u)) : _GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u), (uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u)) >> uvec3(0u, 0u, 0u))))) * ((uvec3(88587u, 5947u, 199734u) & uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (0u), uint(_GLF_IDENTITY(uint(~ (0u)), min(uint(~ (0u)), uint(~ (0u))))))), ~ (~ ((_GLF_IDENTITY(~ (0u), uint(_GLF_IDENTITY(uint(~ (0u)), min(uint(~ (0u)), uint(~ (0u))))))))))))))), min(_GLF_IDENTITY((uvec3(88587u, 5947u, _GLF_IDENTITY(199734u, uint(uvec2(_GLF_IDENTITY(199734u, min(199734u, 199734u)), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))))))) & uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(~ (0u)), min(uint(~ (0u)), uint(~ (0u)))), ~ (~ (_GLF_IDENTITY(uint(~ (_GLF_IDENTITY(0u, (0u) | 0u))), min(uint(~ _GLF_IDENTITY((0u), max(_GLF_IDENTITY((0u), 0u | (_GLF_IDENTITY((0u), (true ? (0u) : _GLF_FUZZED(129605u))))), (0u)))), uint(~ (0u)))))))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(~ (0u)), min(uint(~ (0u)), uint(~ (0u)))), ~ (~ (_GLF_IDENTITY(uint(~ (_GLF_IDENTITY(0u, (0u) | 0u))), min(uint(~ _GLF_IDENTITY((0u), max(_GLF_IDENTITY((0u), 0u | (_GLF_IDENTITY((0u), (true ? (0u) : _GLF_FUZZED(129605u))))), (0u)))), uint(~ (0u)))))))), 0u ^ (uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(~ (0u)), min(uint(~ (0u)), uint(~ (0u)))), ~ (~ (_GLF_IDENTITY(uint(~ (_GLF_IDENTITY(0u, (0u) | 0u))), min(uint(~ _GLF_IDENTITY((0u), max(_GLF_IDENTITY((0u), 0u | (_GLF_IDENTITY((0u), (true ? (0u) : _GLF_FUZZED(129605u))))), (0u)))), uint(~ (0u))))))))))))))))), (uvec3(0u, 0u, 0u) ^ uvec3(_GLF_IDENTITY(1u, (1u) | (1u)), 1u, 1u)) * ((uvec3(88587u, 5947u, 199734u) & uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), uint(_GLF_IDENTITY(uint(~ (0u)), min(uint(~ (0u)), uint(~ (0u)))))))))))), _GLF_IDENTITY((uvec3(88587u, 5947u, 199734u) & uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), (~ (0u)) | (~ (0u))), uint(_GLF_IDENTITY(uint(~ (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) | (0u)))), min(uint(~ (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u)), 0u)))), uint(~ (0u)))))))))), (uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u)) * ((uvec3(88587u, 5947u, 199734u) & uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), uint(_GLF_IDENTITY(uint(~ (0u)), min(uint(~ (0u)), uint(~ (0u)))))))))))))), max(_GLF_IDENTITY(_GLF_IDENTITY((uvec3(_GLF_IDENTITY(88587u, (true ? _GLF_IDENTITY(88587u, clamp(88587u, 88587u, 88587u)) : _GLF_FUZZED(141906u))), 5947u, 199734u) & uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), uint(_GLF_IDENTITY(uint(~ (0u)), min(uint(~ (0u)), uint(~ (0u)))))))))), (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u), (false ? _GLF_FUZZED(uvec3(134135u, 189904u, 148976u)) : _GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u), (uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u)) >> uvec3(0u, 0u, 0u))))) * ((uvec3(88587u, 5947u, 199734u) & uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (0u), uint(_GLF_IDENTITY(uint(~ (0u)), min(uint(~ (0u)), uint(~ (0u))))))), ~ (~ ((_GLF_IDENTITY(~ (0u), uint(_GLF_IDENTITY(uint(~ (0u)), min(uint(~ (0u)), uint(~ (0u))))))))))))))), min(_GLF_IDENTITY((uvec3(88587u, 5947u, _GLF_IDENTITY(199734u, uint(uvec2(_GLF_IDENTITY(199734u, min(199734u, 199734u)), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))))))) & uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(~ (0u)), min(uint(~ (0u)), uint(~ (0u)))), ~ (~ (_GLF_IDENTITY(uint(~ (_GLF_IDENTITY(0u, (0u) | 0u))), min(uint(~ _GLF_IDENTITY((0u), max(_GLF_IDENTITY((0u), 0u | (_GLF_IDENTITY((0u), (true ? (0u) : _GLF_FUZZED(129605u))))), (0u)))), uint(~ (0u)))))))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(~ (0u)), min(uint(~ (0u)), uint(~ (0u)))), ~ (~ (_GLF_IDENTITY(uint(~ (_GLF_IDENTITY(0u, (0u) | 0u))), min(uint(~ _GLF_IDENTITY((0u), max(_GLF_IDENTITY((0u), 0u | (_GLF_IDENTITY((0u), (true ? (0u) : _GLF_FUZZED(129605u))))), (0u)))), uint(~ (0u)))))))), 0u ^ (uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(~ (0u)), min(uint(~ (0u)), uint(~ (0u)))), ~ (~ (_GLF_IDENTITY(uint(~ (_GLF_IDENTITY(0u, (0u) | 0u))), min(uint(~ _GLF_IDENTITY((0u), max(_GLF_IDENTITY((0u), 0u | (_GLF_IDENTITY((0u), (true ? (0u) : _GLF_FUZZED(129605u))))), (0u)))), uint(~ (0u))))))))))))))))), (uvec3(0u, 0u, 0u) ^ uvec3(_GLF_IDENTITY(1u, (1u) | (1u)), 1u, 1u)) * ((uvec3(88587u, 5947u, 199734u) & uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), uint(_GLF_IDENTITY(uint(~ (0u)), min(uint(~ (0u)), uint(~ (0u)))))))))))), _GLF_IDENTITY((uvec3(88587u, 5947u, 199734u) & uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), (~ (0u)) | (~ (0u))), uint(_GLF_IDENTITY(uint(~ (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) | (0u)))), min(uint(~ (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u)), 0u)))), uint(~ (0u)))))))))), (uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u)) * ((uvec3(88587u, 5947u, 199734u) & uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), uint(_GLF_IDENTITY(uint(~ (0u)), min(uint(~ (0u)), uint(~ (0u)))))))))))))), _GLF_IDENTITY(_GLF_IDENTITY((uvec3(_GLF_IDENTITY(88587u, (true ? _GLF_IDENTITY(88587u, clamp(88587u, 88587u, 88587u)) : _GLF_FUZZED(141906u))), 5947u, 199734u) & uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), uint(_GLF_IDENTITY(uint(~ (0u)), min(uint(~ (0u)), uint(~ (0u)))))))))), (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u), (false ? _GLF_FUZZED(uvec3(134135u, 189904u, 148976u)) : _GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u), (uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u)) >> uvec3(0u, 0u, 0u))))) * ((uvec3(88587u, 5947u, 199734u) & uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (0u), uint(_GLF_IDENTITY(uint(~ (0u)), min(uint(~ (0u)), uint(~ (0u))))))), ~ (~ ((_GLF_IDENTITY(~ (0u), uint(_GLF_IDENTITY(uint(~ (0u)), min(uint(~ (0u)), uint(~ (0u))))))))))))))), min(_GLF_IDENTITY((uvec3(88587u, 5947u, _GLF_IDENTITY(199734u, uint(uvec2(_GLF_IDENTITY(199734u, min(199734u, 199734u)), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))))))) & uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(~ (0u)), min(uint(~ (0u)), uint(~ (0u)))), ~ (~ (_GLF_IDENTITY(uint(~ (_GLF_IDENTITY(0u, (0u) | 0u))), min(uint(~ _GLF_IDENTITY((0u), max(_GLF_IDENTITY((0u), 0u | (_GLF_IDENTITY((0u), (true ? (0u) : _GLF_FUZZED(129605u))))), (0u)))), uint(~ (0u)))))))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(~ (0u)), min(uint(~ (0u)), uint(~ (0u)))), ~ (~ (_GLF_IDENTITY(uint(~ (_GLF_IDENTITY(0u, (0u) | 0u))), min(uint(~ _GLF_IDENTITY((0u), max(_GLF_IDENTITY((0u), 0u | (_GLF_IDENTITY((0u), (true ? (0u) : _GLF_FUZZED(129605u))))), (0u)))), uint(~ (0u)))))))), 0u ^ (uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(~ (0u)), min(uint(~ (0u)), uint(~ (0u)))), ~ (~ (_GLF_IDENTITY(uint(~ (_GLF_IDENTITY(0u, (0u) | 0u))), min(uint(~ _GLF_IDENTITY((0u), max(_GLF_IDENTITY((0u), 0u | (_GLF_IDENTITY((0u), (true ? (0u) : _GLF_FUZZED(129605u))))), (0u)))), uint(~ (0u))))))))))))))))), (uvec3(0u, 0u, 0u) ^ uvec3(_GLF_IDENTITY(1u, (1u) | (1u)), 1u, 1u)) * ((uvec3(88587u, 5947u, 199734u) & uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), uint(_GLF_IDENTITY(uint(~ (0u)), min(uint(~ (0u)), uint(~ (0u)))))))))))), _GLF_IDENTITY((uvec3(88587u, 5947u, 199734u) & uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), (~ (0u)) | (~ (0u))), uint(_GLF_IDENTITY(uint(~ (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) | (0u)))), min(uint(~ (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u)), 0u)))), uint(~ (0u)))))))))), (uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u)) * ((uvec3(88587u, 5947u, 199734u) & uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), uint(_GLF_IDENTITY(uint(~ (0u)), min(uint(~ (0u)), uint(~ (0u)))))))))))))))))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))), (_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) + 0.0), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, abs(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(528.686)), float(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(239.970)), bool(false)))), bool(true)))), float(_GLF_FUZZED(-2.2)), bool(false)))), 0.0, 1.0, 0.0), transpose(transpose(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, abs(1.0), 0.0, 1.0, 0.0)))))), injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x)), min(uvec3(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))), (_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) + 0.0), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, abs(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(528.686)), float(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(239.970)), bool(false)))), bool(true)))), float(_GLF_FUZZED(-2.2)), bool(false)))), 0.0, 1.0, 0.0), transpose(transpose(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, abs(1.0), 0.0, 1.0, 0.0)))))), injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x)), uvec3(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))), (_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) + 0.0), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, abs(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(528.686)), float(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(239.970)), bool(false)))), bool(true)))), float(_GLF_FUZZED(-2.2)), bool(false)))), 0.0, 1.0, 0.0), transpose(transpose(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, abs(1.0), 0.0, 1.0, 0.0)))))), injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x)))) | (_GLF_IDENTITY(_GLF_IDENTITY((uvec3(88587u, 5947u, 199734u) & uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), uint(_GLF_IDENTITY(uint(~ (0u)), min(uint(~ (0u)), uint(_GLF_IDENTITY(~ (0u), ~ (_GLF_IDENTITY(~ (~ (0u)), uint(uvec3(_GLF_IDENTITY(~ (~ (0u)), 0u ^ (_GLF_IDENTITY(~ (~ (0u)), min(~ (~ (0u)), ~ (~ (0u)))))), 1u, 0u)))))))))))))), _GLF_IDENTITY((uvec3(0u, 0u, _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, min(0u, 0u))))) ^ uvec3(1u, 1u, 1u)), clamp((uvec3(0u, 0u, _GLF_IDENTITY(0u, 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), clamp(_GLF_IDENTITY(0u, min(0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u), _GLF_IDENTITY(0u, min(0u, 0u))))), max((_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), clamp(_GLF_IDENTITY(0u, min(0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u), _GLF_IDENTITY(0u, min(0u, 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), clamp(_GLF_IDENTITY(0u, min(0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u), _GLF_IDENTITY(0u, min(0u, 0u))))))))) ^ uvec3(1u, _GLF_IDENTITY(1u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1u : _GLF_FUZZED(subgroup_size))), 1u)), (uvec3(0u, 0u, _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, min(0u, 0u))))) ^ uvec3(1u, 1u, _GLF_IDENTITY(1u, (1u) / 1u))), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(0u, uint(uint(0u))), 0u, _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(uint(uint(0u)), 0u ^ (uint(uint(0u)))))))), 0u))))) ^ uvec3(1u, _GLF_IDENTITY(1u, uint(uvec2(1u, 0u))), 1u)), ~ (~ ((uvec3(0u, 0u, _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), 0u | (_GLF_IDENTITY(0u, min(0u, 0u))))))) ^ uvec3(1u, 1u, 1u))))))) * ((uvec3(88587u, 5947u, 199734u) & uvec3(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), uint(_GLF_IDENTITY(uint(~ (0u)), min(uint(~ (_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) * 1u)) | 0u, min(_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) * 1u)) | 0u, uint(uvec4((_GLF_IDENTITY(0u, (0u) * 1u)) | 0u, 1u, 1u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) * 1u)) | 0u, 0u + ((_GLF_IDENTITY(0u, (0u) * 1u)) | 0u))))))), uint(~ (0u)))))))), (_GLF_IDENTITY(true, (true) && true) ? _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), uint(_GLF_IDENTITY(uint(~ (_GLF_IDENTITY(0u, (0u) ^ 0u))), min(uint(~ (0u)), uint(~ (0u)))))))) : _GLF_FUZZED(subgroup_local_id))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((uvec3(88587u, 5947u, 199734u) & uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), uint(_GLF_IDENTITY(uint(~ (0u)), min(uint(~ (0u)), uint(~ (0u)))))))))), (uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u)) * ((uvec3(_GLF_IDENTITY(88587u, ~ (_GLF_IDENTITY(~ (88587u), min(~ (88587u), ~ (88587u))))), 5947u, 199734u) & _GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((0u), ((0u)) ^ 0u), uint(_GLF_IDENTITY(uint(~ (0u)), min(uint(~ (0u)), uint(~ (0u))))))))), (false ? _GLF_FUZZED(uvec3(123166u, 6258u, 26328u)) : _GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((0u), ((0u)) ^ 0u), uint(_GLF_IDENTITY(uint(~ (0u)), min(uint(~ (0u)), uint(~ (0u))))))))), clamp(uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((0u), ((0u)) ^ 0u), uint(_GLF_IDENTITY(uint(~ (0u)), min(uint(~ (0u)), uint(~ (0u))))))))), uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((0u), ((0u)) ^ 0u), uint(_GLF_IDENTITY(uint(~ (0u)), min(uint(~ (0u)), uint(~ (0u))))))))), _GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((0u), ((0u)) ^ 0u), uint(_GLF_IDENTITY(uint(~ (0u)), min(uint(~ (0u)), uint(~ (0u))))))))), ~ (~ (uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((0u), ((0u)) ^ 0u), uint(_GLF_IDENTITY(uint(~ (0u)), min(uint(~ (0u)), uint(~ (0u))))))))))))))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uvec3(88587u, 5947u, 199734u) & uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), uint(_GLF_IDENTITY(uint(~ (0u)), min(uint(~ (0u)), uint(~ (0u))))))))), uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(uvec3(88587u, 5947u, 199734u) & uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), uint(_GLF_IDENTITY(uint(~ (0u)), min(uint(~ (0u)), uint(~ (0u))))))))), (uvec3(88587u, 5947u, 199734u) & uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), uint(_GLF_IDENTITY(uint(~ (0u)), min(uint(~ (0u)), uint(~ (0u)))))))))) - uvec3(0u, 0u, 0u))))), (uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u)) * ((uvec3(88587u, 5947u, 199734u) & uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), uint(_GLF_IDENTITY(uint(~ (0u)), min(uint(~ (0u)), uint(~ (0u)))))))))))), max(_GLF_IDENTITY(_GLF_IDENTITY((uvec3(88587u, 5947u, 199734u) & uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), uint(_GLF_IDENTITY(uint(~ (0u)), min(uint(~ (0u)), uint(~ (0u)))))))))), (uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u)) * ((uvec3(88587u, 5947u, 199734u) & uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), uint(_GLF_IDENTITY(uint(~ (0u)), min(uint(~ (0u)), uint(~ (0u)))))))))))), (_GLF_IDENTITY((uvec3(88587u, 5947u, 199734u) & uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), uint(_GLF_IDENTITY(uint(~ (0u)), min(uint(~ (0u)), uint(~ (0u)))))))))), (uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u)) * ((uvec3(88587u, 5947u, 199734u) & uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), uint(_GLF_IDENTITY(uint(~ (0u)), min(uint(~ (0u)), uint(~ (0u))))))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY((uvec3(88587u, 5947u, 199734u) & uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), uint(_GLF_IDENTITY(uint(~ (0u)), min(uint(~ (0u)), uint(~ (0u)))))))))), (uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u)) * ((uvec3(88587u, 5947u, 199734u) & uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), uint(_GLF_IDENTITY(uint(~ (0u)), min(uint(~ (0u)), uint(~ (0u)))))))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((uvec3(88587u, 5947u, 199734u) & uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), uint(_GLF_IDENTITY(uint(~ (0u)), min(uint(~ (0u)), uint(~ (0u)))))))))), (uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u)) * ((uvec3(88587u, 5947u, 199734u) & uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), uint(_GLF_IDENTITY(uint(~ (0u)), min(uint(~ (0u)), uint(~ (0u)))))))))))), (_GLF_IDENTITY((uvec3(88587u, 5947u, 199734u) & uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), uint(_GLF_IDENTITY(uint(~ (0u)), min(uint(~ (0u)), uint(~ (0u)))))))))), (uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u)) * ((uvec3(88587u, 5947u, 199734u) & uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), uint(_GLF_IDENTITY(uint(~ (0u)), min(uint(~ (0u)), uint(~ (0u))))))))))))) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY((uvec3(88587u, 5947u, 199734u) & uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), uint(_GLF_IDENTITY(uint(~ (0u)), min(uint(~ (0u)), uint(~ (0u)))))))))), (uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u)) * ((uvec3(88587u, 5947u, 199734u) & uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), uint(_GLF_IDENTITY(uint(~ (0u)), min(uint(~ (0u)), uint(~ (0u)))))))))))), _GLF_IDENTITY((uvec3(88587u, 5947u, 199734u) & uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), uint(_GLF_IDENTITY(uint(~ (0u)), min(uint(~ (0u)), uint(~ (0u)))))))))), (uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u)) * ((uvec3(88587u, 5947u, 199734u) & uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), uint(_GLF_IDENTITY(uint(~ (0u)), min(uint(~ (0u)), uint(~ (0u)))))))))))))))), _GLF_IDENTITY(_GLF_IDENTITY((uvec3(88587u, 5947u, 199734u) & uvec3(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), ~ (_GLF_IDENTITY(~ (0u), uint(_GLF_IDENTITY(uint(~ (0u)), min(uint(~ (0u)), uint(~ (0u)))))))))), (uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u)) * ((uvec3(88587u, 5947u, 199734u) & uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((0u), ((0u)) * 1u), uint(_GLF_IDENTITY(uint(~ (_GLF_IDENTITY(0u, ((0u | 0u) & 127514u) ^ (0u)))), min(uint(~ (0u)), uint(~ (0u)))))))))))), uvec3(uvec3(_GLF_IDENTITY((uvec3(88587u, 5947u, 199734u) & uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), uint(_GLF_IDENTITY(uint(~ (0u)), min(uint(~ (0u)), uint(~ (0u)))))))))), (uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u)) * ((uvec3(88587u, 5947u, 199734u) & uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), uint(_GLF_IDENTITY(uint(~ (0u)), min(uint(~ (0u)), uint(~ _GLF_IDENTITY((0u), (false ? _GLF_FUZZED(workgroup_size) : (0u))))))))))))))))))), _GLF_IDENTITY(_GLF_IDENTITY((uvec3(88587u, 5947u, 199734u) & uvec3(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, (0u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), 0u | (uint(5u))))), 0u)), (uint(uvec3(0u, (0u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), 0u | (uint(5u))))), 0u))) / 1u)), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (0u), uint(_GLF_IDENTITY(uint(~ (0u)), min(uint(~ (0u)), uint(~ (0u))))))), (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(subgroup_id) : (_GLF_IDENTITY(~ (0u), uint(_GLF_IDENTITY(uint(~ (0u)), min(uint(~ (0u)), uint(~ (0u)))))))))))), (uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u)) * ((uvec3(_GLF_IDENTITY(88587u, (88587u) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), 5947u, _GLF_IDENTITY(199734u, (199734u) << 0u)) & uvec3(0u, _GLF_IDENTITY(0u, (0u) - 0u), _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), uint(_GLF_IDENTITY(uint(~ (0u)), min(uint(~ (0u)), uint(~ (0u)))))))))))), (_GLF_IDENTITY((uvec3(88587u, 5947u, 199734u) & uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), uint(_GLF_IDENTITY(uint(~ (0u)), min(uint(~ (0u)), _GLF_IDENTITY(uint(~ (0u)), (_GLF_IDENTITY(uint(~ (0u)), clamp(uint(~ (0u)), uint(~ (0u)), uint(~ (0u))))) | (uint(~ (0u)))))))))))), (uvec3(0u, 0u, 0u) ^ _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) | (uvec3(1u, 1u, 1u)))) * ((uvec3(88587u, 5947u, 199734u) & uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), uint(_GLF_IDENTITY(uint(~ (0u)), min(uint(_GLF_IDENTITY(~ (0u), uint(uvec2(_GLF_IDENTITY(~ (0u), clamp(~ (0u), ~ (0u), ~ (0u))), (0u << _GLF_IDENTITY(uint(7u), uint(7u))))))), uint(~ (0u))))))))))))) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY((uvec3(88587u, 5947u, 199734u) & uvec3(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), min(~ (0u), ~ (0u))))), _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), uint(_GLF_IDENTITY(uint(~ (0u)), min(uint(~ (0u)), uint(~ (0u)))))))))), _GLF_IDENTITY((uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u)) * ((uvec3(88587u, 5947u, 199734u) & uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), uint(_GLF_IDENTITY(uint(~ (0u)), min(uint(~ (0u)), uint(~ (0u))))))))))), uvec3(1u, 1u, 1u) * ((uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u)) * ((uvec3(88587u, 5947u, 199734u) & uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), uint(_GLF_IDENTITY(uint(~ (0u)), min(uint(~ (0u)), uint(~ (0u)))))))))))))), (_GLF_IDENTITY((uvec3(88587u, 5947u, 199734u) & uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), uint(_GLF_IDENTITY(uint(~ (0u)), min(uint(~ (0u)), uint(~ (0u)))))))))), (uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u)) * ((uvec3(88587u, 5947u, 199734u) & uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), uint(_GLF_IDENTITY(uint(~ _GLF_IDENTITY((0u), ((0u)) ^ 0u)), min(uint(~ (0u)), uint(~ (0u))))))))))))) - uvec3(0u, 0u, 0u)))))))))).x;
 do
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
    }
  }
 else
  {
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
  }
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec4(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, false)))) && true)), false, true))))))))))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 barrier();
                }
              }
             else
              {
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       else
        {
        }
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true))), false), true, false)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true))), false), true, false))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true))), false), true, false))), true, true)))))))))))));
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 1)); _injected_loop_counter ++)
      {
       GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basevirtual_gid.z = subgroup_base;
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basevirtual_gid.z + subgroup_local_id, max(workgroup_base + GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basevirtual_gid.z + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), workgroup_base + GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basevirtual_gid.z + subgroup_local_id));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basevirtual_gid.w = virtual_gid;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
      {
       do
        {
         barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
          }
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))));
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 0)); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
              {
              }
             else
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
            }
           for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
           barrier();
          }
        }
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(36.28, -0.6)) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basevirtual_gid.z + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = (-16503 & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), true && (bool(bvec2(false, true))))), true, true)))))
        barrier();
      }
    }
   else
    {
    }
  }
 GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basevirtual_gid.x = _GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, 0u | (next_virtual_gid))) + 0u);
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) / 1.0), injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     do
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 0)); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   barrier();
                  }
                 else
                  {
                  }
                }
              }
            }
           else
            {
            }
           do
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                {
                 for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) - 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 barrier();
                }
              }
             else
              {
              }
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                {
                 for(int _injected_loop_counter = (1 ^ int(_GLF_ONE(1.0, injectionSwitch.y))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                  {
                   barrier();
                  }
                }
               do
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   else
                    {
                    }
                   barrier();
                  }
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
               barrier();
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  {
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter ++)
                    {
                     barrier();
                    }
                  }
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
                    {
                    }
                   else
                    {
                     barrier();
                    }
                  }
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
              barrier();
            }
          }
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 barrier();
                }
              }
            }
          }
         else
          {
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_IDENTITY(! (! (_GLF_IDENTITY((false) && true, false || ((false) && _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, true))))))), (! (! (_GLF_IDENTITY((false) && true, false || ((false) && _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, true)))))))) || false)))));
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read = _GLF_IDENTITY(atomicLoad(buf[GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basevirtual_gid.w], 4, 64, 2), min(_GLF_IDENTITY(atomicLoad(buf[GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basevirtual_gid.w], 4, 64, 2), _GLF_IDENTITY(0u | (_GLF_IDENTITY(atomicLoad(buf[GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basevirtual_gid.w], 4, 64, 2), (atomicLoad(buf[GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basevirtual_gid.w], 4, 64, 2)) | 0u)), min(0u | (_GLF_IDENTITY(atomicLoad(buf[GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basevirtual_gid.w], 4, 64, 2), (_GLF_IDENTITY(atomicLoad(buf[GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basevirtual_gid.w], 4, 64, 2), (false ? _GLF_FUZZED(subgroup_size) : atomicLoad(buf[GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basevirtual_gid.w], 4, 64, 2)))) | 0u)), _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) | (_GLF_IDENTITY(atomicLoad(buf[GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basevirtual_gid.w], 4, 64, 2), (atomicLoad(buf[GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basevirtual_gid.w], 4, 64, 2)) | 0u))))), atomicLoad(buf[GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basevirtual_gid.w], 4, 64, 2)));
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     else
      {
      }
     barrier();
    }
   for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) | (int(_GLF_IDENTITY(3, max(3, 3))))))) >> _GLF_IDENTITY(int(3), int(3)), int(ivec3((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) | (int(3))))) >> _GLF_IDENTITY(int(3), int(3)), (-67290 & 0), 1))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) | (int(3))))) >> _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, _GLF_IDENTITY(int(ivec2(3, (0 | 0))), clamp(_GLF_IDENTITY(int(ivec2(3, _GLF_IDENTITY((0 | 0), 0 ^ (_GLF_IDENTITY((0 | 0), int(_GLF_IDENTITY(ivec2((0 | 0), 0), (ivec2((0 | 0), 0)) ^ ivec2(0, 0)))))))), (int(ivec2(3, _GLF_IDENTITY((0 | 0), 0 ^ (_GLF_IDENTITY((0 | 0), int(_GLF_IDENTITY(ivec2((0 | 0), 0), (ivec2((0 | 0), 0)) ^ ivec2(0, 0))))))))) >> 0), int(ivec2(3, (0 | 0))), int(ivec2(3, (0 | 0)))))))))), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ 0) != _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (~ (3)))), (int(3)) | (int(3)))), (true ? 1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (~ (3)))), (int(3)) | (int(3)))) : _GLF_FUZZED(73005))), 1 * (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (~ (3)))), (int(3)) | (int(3)))), (true ? 1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (~ (3)))), (int(3)) | (int(3)))) : _GLF_FUZZED(73005)))))), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (~ (3)))), _GLF_IDENTITY((int(3)) | (int(3)), (0 << _GLF_IDENTITY(int(1), int(1))) ^ ((int(3)) | (int(3)))))))) + 0) >> _GLF_IDENTITY(int(3), int(3))), 1 * ((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (~ (3)))), (int(3)) | (int(3))))), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (~ (3)))), (int(3)) | (int(3)))))) + 0) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), clamp(_GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(int(3), int(3))))))))))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY((int(3)) | (int(3)), max((int(3)) | (int(3)), (int(3)) | (int(3))))), 0 | (_GLF_IDENTITY(int(3), _GLF_IDENTITY((int(3)) | (int(3)), max((int(3)) | (int(3)), (int(3)) | (int(3))))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, _GLF_IDENTITY(int(ivec2(3, (0 | 0))), clamp(int(ivec2(3, (0 | 0))), int(ivec2(3, (0 | 0))), int(ivec2(3, (0 | 0)))))))), (false ? _GLF_FUZZED(-55862) : _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, _GLF_IDENTITY(int(ivec2(3, (0 | 0))), clamp(int(ivec2(3, (0 | 0))), int(ivec2(3, (0 | 0))), int(ivec2(3, (0 | 0)))))))), max(_GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, _GLF_IDENTITY(int(ivec2(3, (0 | 0))), clamp(int(ivec2(3, (0 | 0))), int(ivec2(3, (0 | 0))), int(ivec2(3, (0 | 0)))))))), _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, _GLF_IDENTITY(int(ivec2(3, (0 | 0))), clamp(int(ivec2(3, (0 | 0))), int(ivec2(3, (0 | 0))), int(ivec2(3, (0 | 0)))))))))))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, _GLF_IDENTITY(int(ivec2(3, (0 | 0))), clamp(int(ivec2(3, (0 | 0))), int(ivec2(3, (0 | 0))), int(ivec2(3, (0 | 0)))))))), (false ? _GLF_FUZZED(-55862) : _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, _GLF_IDENTITY(int(ivec2(3, (0 | 0))), clamp(int(ivec2(3, (0 | 0))), int(ivec2(3, (0 | 0))), int(ivec2(3, (0 | 0)))))))), max(_GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, _GLF_IDENTITY(int(ivec2(3, (0 | 0))), clamp(int(ivec2(3, (0 | 0))), int(ivec2(3, (0 | 0))), int(ivec2(3, (0 | 0)))))))), _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, _GLF_IDENTITY(int(ivec2(3, (0 | 0))), clamp(int(ivec2(3, (0 | 0))), int(ivec2(3, (0 | 0))), int(ivec2(3, (0 | 0)))))))))))), 1, 0), (true ? ivec3(_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, _GLF_IDENTITY(int(ivec2(3, (0 | 0))), clamp(int(ivec2(3, (0 | 0))), int(ivec2(3, (0 | 0))), int(ivec2(3, (0 | 0)))))))), (false ? _GLF_FUZZED(-55862) : _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, _GLF_IDENTITY(int(ivec2(3, (0 | 0))), clamp(int(ivec2(3, (0 | 0))), int(ivec2(3, (0 | 0))), int(ivec2(3, (0 | 0)))))))), max(_GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, _GLF_IDENTITY(int(ivec2(3, (0 | 0))), clamp(int(ivec2(3, (0 | 0))), int(ivec2(3, (0 | 0))), int(ivec2(3, (0 | 0)))))))), _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, _GLF_IDENTITY(int(ivec2(3, (0 | 0))), clamp(int(ivec2(3, (0 | 0))), int(ivec2(3, (0 | 0))), int(ivec2(3, (0 | 0)))))))))))), 1, 0) : _GLF_FUZZED(ivec3(44168, -78243, 5280)))))))), ! (! _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (~ (3)))), (int(3)) | (int(3)))), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (~ (3)))), (int(3)) | (int(3)))), (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (~ (3)))), (int(3)) | (int(3))))) | (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (~ (3)))), (int(3)) | (int(3))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (~ (3)))), (int(3)) | (int(3)))), (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (~ (3)))), (int(3)) | (int(3))))) ^ 0))), (true ? 1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (~ (3)))), (int(3)) | (int(3)))) : _GLF_FUZZED(73005)))), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (~ (3)))), (int(3)) | (int(3)))), min(_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (~ (3)))), (int(3)) | (int(3)))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (~ (3)))), (int(3)) | (int(3)))), 0, 1), ivec3(1, 1, 1) * (ivec3(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (~ (3)))), (int(3)) | (int(3)))), 0, 1))))), _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (~ (3)))), (int(3)) | (int(3)))), (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (~ (3)))), (int(3)) | (int(3))))) | (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (~ (3)))), (int(3)) | (int(3)))))))))) + 0) >> _GLF_IDENTITY(int(3), int(3))), 1 * ((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (~ (3)))), (int(3)) | (int(3))))), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, _GLF_IDENTITY(~ (~ (3)), max(~ (~ (3)), ~ (~ (3)))))), (int(3)) | (int(3)))))) + 0) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), clamp(_GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(int(_GLF_IDENTITY(3, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(3, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(3, (3) << 0) : _GLF_FUZZED(_injected_loop_counter))), 0, 0), (ivec3(_GLF_IDENTITY(3, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(3, (3) << 0) : _GLF_FUZZED(_injected_loop_counter))), 0, 0)) << ivec3(0, 0, 0))))), int(3)), _GLF_IDENTITY(int(3), int(3))))))), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (~ (3)))), (int(3)) | (int(3)))), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (~ (3)))), (int(3)) | (int(3)))), (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (~ (3)))), (int(3)) | (int(3))))) | (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (~ (3)))), (int(3)) | (int(3))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (~ (3)))), (int(3)) | (int(3)))), (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (~ (3)))), (int(3)) | (int(3))))) ^ 0))), (true ? 1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (~ (3)))), (int(3)) | (int(3)))) : _GLF_FUZZED(73005)))), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (~ (3)))), (int(3)) | (int(3)))), min(_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (~ (3)))), (int(3)) | (int(3)))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (~ (3)))), (int(3)) | (int(3)))), 0, 1), ivec3(1, 1, 1) * (ivec3(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (~ (3)))), (int(3)) | (int(3)))), 0, 1))))), _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (~ (3)))), (int(3)) | (int(3)))), (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (~ (3)))), (int(3)) | (int(3))))) | (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (~ (3)))), (int(3)) | (int(3)))))))))) + 0) >> _GLF_IDENTITY(int(3), int(3))), 1 * ((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (~ (3)))), (int(3)) | (int(3))))), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, _GLF_IDENTITY(~ (~ (3)), max(~ (~ (3)), ~ (~ (3)))))), (int(3)) | (int(3)))))) + 0) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), clamp(_GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(int(_GLF_IDENTITY(3, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(3, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(3, (3) << 0) : _GLF_FUZZED(_injected_loop_counter))), 0, 0), (ivec3(_GLF_IDENTITY(3, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(3, (3) << 0) : _GLF_FUZZED(_injected_loop_counter))), 0, 0)) << ivec3(0, 0, 0))))), int(3)), _GLF_IDENTITY(int(3), int(3)))))))) >> 0))), ((_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (~ (3)))), (int(3)) | (int(3)))), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (~ (3)))), (int(3)) | (int(3)))), (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (~ (3)))), (int(3)) | (int(3))))) | (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (~ (3)))), (int(3)) | (int(3))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (~ (3)))), (int(3)) | (int(3)))), (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (~ (3)))), (int(3)) | (int(3))))) ^ 0))), (true ? 1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (~ (3)))), (int(3)) | (int(3)))) : _GLF_FUZZED(73005)))), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (~ (3)))), (int(3)) | (int(3)))), min(_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (~ (3)))), (int(3)) | (int(3)))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (~ (3)))), (int(3)) | (int(3)))), 0, 1), ivec3(1, 1, 1) * (ivec3(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (~ (3)))), (int(3)) | (int(3)))), 0, 1))))), _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (~ (3)))), (int(3)) | (int(3)))), (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (~ (3)))), (int(3)) | (int(3))))) | (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (~ (3)))), (int(3)) | (int(3)))))))))) + 0) >> _GLF_IDENTITY(int(3), int(3))), 1 * ((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (~ (3)))), (int(3)) | (int(3))))), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, _GLF_IDENTITY(~ (~ (3)), max(~ (~ (3)), ~ (~ (3)))))), (int(3)) | (int(3)))))) + 0) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), clamp(_GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(int(_GLF_IDENTITY(3, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(3, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(3, (3) << 0) : _GLF_FUZZED(_injected_loop_counter))), 0, 0), (ivec3(_GLF_IDENTITY(3, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(3, (3) << 0) : _GLF_FUZZED(_injected_loop_counter))), 0, 0)) << ivec3(0, 0, 0))))), int(3)), _GLF_IDENTITY(int(3), int(3))))))), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (~ (3)))), (int(3)) | (int(3)))), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (~ (3)))), (int(3)) | (int(3)))), (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (~ (3)))), (int(3)) | (int(3))))) | (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (~ (3)))), (int(3)) | (int(3))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (~ (3)))), (int(3)) | (int(3)))), (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (~ (3)))), (int(3)) | (int(3))))) ^ 0))), (true ? 1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (~ (3)))), (int(3)) | (int(3)))) : _GLF_FUZZED(73005)))), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (~ (3)))), (int(3)) | (int(3)))), min(_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (~ (3)))), (int(3)) | (int(3)))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (~ (3)))), (int(3)) | (int(3)))), 0, 1), ivec3(1, 1, 1) * (ivec3(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (~ (3)))), (int(3)) | (int(3)))), 0, 1))))), _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (~ (3)))), (int(3)) | (int(3)))), (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (~ (3)))), (int(3)) | (int(3))))) | (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (~ (3)))), (int(3)) | (int(3)))))))))) + 0) >> _GLF_IDENTITY(int(3), int(3))), 1 * ((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (~ (3)))), (int(3)) | (int(3))))), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, _GLF_IDENTITY(~ (~ (3)), max(~ (~ (3)), ~ (~ (3)))))), (int(3)) | (int(3)))))) + 0) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), clamp(_GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(int(_GLF_IDENTITY(3, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(3, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(3, (3) << 0) : _GLF_FUZZED(_injected_loop_counter))), 0, 0), (ivec3(_GLF_IDENTITY(3, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(3, (3) << 0) : _GLF_FUZZED(_injected_loop_counter))), 0, 0)) << ivec3(0, 0, 0))))), int(3)), _GLF_IDENTITY(int(3), int(3)))))))) >> 0)))) && true)))) && true))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec2(true, true)))))))
        {
         barrier();
        }
       else
        {
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(false))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), bool(bvec2(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), true)))))));
 if(_GLF_DEAD(false))
  barrier();
 if((subgroup_local_id % 2) == 0)
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   else
    {
     atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basevirtual_gid.x], uint(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-27357)))), 4, 64, _GLF_IDENTITY(4, (false ? _GLF_FUZZED((-91274 | 50272)) : 4)));
    }
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))), true && (_GLF_DEAD(false))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! _GLF_IDENTITY((false), ! (! ((false)))))))))))
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           do
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   barrier();
                  }
                 else
                  {
                  }
                }
               else
                {
                }
              }
            }
           else
            {
             barrier();
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       do
        {
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            {
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = (1 ^ 0); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_GLF_IDENTITY(_injected_loop_counter, 0 | (_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(max(_injected_loop_counter, _injected_loop_counter), ~ (~ (max(_injected_loop_counter, _injected_loop_counter))))))), _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0))) != _GLF_IDENTITY((57594 & (-36596 & 0)), max((57594 & (-36596 & 0)), (57594 & (-36596 & 0))))); _injected_loop_counter --)
                {
                 barrier();
                }
              }
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 0.0, 0.0, sqrt(1.0), 0.0, 0.0, 1.0), (true ? _GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 0.0, 0.0, sqrt(1.0), 0.0, 0.0, 1.0), (mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 0.0, 0.0, sqrt(1.0), 0.0, 0.0, 1.0)) * mat2(1.0)) : _GLF_FUZZED(mat2x4(874.971, -898.896, 3.4, -789.102, -5.3, -3.4, -8.3, 63.58)))))).y))));
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY((1 & 1), 0 ^ ((1 & 1)))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         barrier();
        }
       else
        {
        }
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
      }
     else
      {
      }
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     barrier();
    }
   atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basevirtual_gid.x], uint(_GLF_IDENTITY(1, 1 * (1))), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false) && true, ! (! ((false) && true)))) && true))))))
          barrier();
         barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
    }
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
          barrier();
        }
      }
     subgroupBarrier();
     do
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) / 1.0))), injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))).y, bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))).y)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)))).y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
       else
        {
        }
      }
     else
      {
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
    }
   else
    {
    }
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter ++)
          {
           barrier();
          }
        }
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           for(int _injected_loop_counter = (1 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              barrier();
            }
          }
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-2189.7773, -0.4)) : injectionSwitch))) * mat2(1.0)).y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-2189.7773, -0.4)) : injectionSwitch))) * mat2(1.0)).y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-2189.7773, -0.4)) : injectionSwitch))) * mat2(1.0)).y)), true, true, false)))))))))))
        {
         do
          {
           for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (~ (int(1)))))) >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), true && (_GLF_IDENTITY(! ((! (false))), bool(bvec2(! ((! (false))), false))))))))));
        }
       else
        {
        }
      }
    }
  }
 atomicStore(checker[GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basevirtual_gid.w], read, _GLF_IDENTITY(4, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), min(_GLF_IDENTITY(4, max(4, 4)), _GLF_IDENTITY(4, max(4, 4))))) / 1), (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), max(0, 0)))) | 0), (_GLF_IDENTITY(0 ^ _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (1), 0 ^ (~ (1))), (false ? _GLF_FUZZED(77645) : _GLF_IDENTITY(_GLF_IDENTITY(~ (1), 0 ^ (~ (1))), ~ (~ (_GLF_IDENTITY(~ (1), 0 ^ (~ (1)))))))))), (0 ^ _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (1), 0 ^ (~ (1))), (false ? _GLF_IDENTITY(_GLF_FUZZED(77645), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_FUZZED(77645), (_GLF_FUZZED(77645)) | 0), 0, 1, 1), max(ivec4(_GLF_IDENTITY(_GLF_FUZZED(77645), (_GLF_FUZZED(77645)) | 0), 0, 1, 1), ivec4(_GLF_IDENTITY(_GLF_FUZZED(77645), (_GLF_FUZZED(77645)) | 0), 0, 1, 1))))) : _GLF_IDENTITY(_GLF_IDENTITY(~ (1), 0 ^ (~ (1))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (1), (~ (1)) / 1), 0 ^ (~ (1))))))))))) << 0)), 0), max(ivec4(_GLF_IDENTITY(4, max(4, 4)), (_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), 0 + (~ (0))))), _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), max(0, 0)))) | 0), (_GLF_IDENTITY(0, (0) << 0) ^ _GLF_IDENTITY(1, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (1), 0 ^ _GLF_IDENTITY((~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) | _GLF_IDENTITY(0, int(ivec3(0, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), 0)))), 1))) + 0))), 0 + (_GLF_IDENTITY((~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) | 0), 1))) + 0))), ~ (~ ((_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) | 0), 1))) + 0)), 0 ^ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) | 0), 1))) + 0)), (~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) | 0), 1))) + 0))) | 0))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (true) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false))))))) && true)))) ? (_GLF_IDENTITY(~ (1), 0 ^ (~ (1)))) : _GLF_FUZZED(-27973))))), 0), _GLF_IDENTITY(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, 4, 4))) - 0), _GLF_IDENTITY(max(4, 4), max(_GLF_IDENTITY(max(4, 4), (max(4, 4)) | 0), max(4, 4)))), (_GLF_IDENTITY(0, _GLF_IDENTITY(min(0, _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), max(0, 0))), (min(0, _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), max(0, 0)))) >> 0)) | 0), (0 ^ _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((1), clamp((1), (1), _GLF_IDENTITY((1), 0 ^ ((1))))), 0 ^ (~ (1)))))), 0), ivec4(0, 0, 0, 0) ^ _GLF_IDENTITY((ivec4(_GLF_IDENTITY(4, max(4, 4)), (_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), max(0, 0)))) | 0, max(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), max(0, 0)))) | 0, _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), max(0, 0)))) | 0))), (0 ^ _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), 0 ^ (~ _GLF_IDENTITY((1), ((1)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))))))), 0)), ((ivec4(_GLF_IDENTITY(4, max(4, 4)), (_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), max(0, 0)))) | 0, max(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), max(0, 0)))) | 0, _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), max(0, 0)))) | 0))), (0 ^ _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), 0 ^ (~ _GLF_IDENTITY((1), ((1)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))))))), 0))) | (_GLF_IDENTITY((ivec4(_GLF_IDENTITY(4, max(4, 4)), (_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), max(0, 0)))) | 0, max(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), max(0, 0)))) | 0, _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), max(0, 0)))) | 0))), (0 ^ _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), 0 ^ (~ _GLF_IDENTITY((1), ((1)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))))))), 0)), ((ivec4(_GLF_IDENTITY(4, max(4, 4)), (_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), max(0, 0)))) | 0, max(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), max(0, 0)))) | 0, _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), max(0, 0)))) | 0))), (0 ^ _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), 0 ^ (~ _GLF_IDENTITY((1), ((1)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))))))), 0))) * ivec4(1, 1, 1, 1))))), max(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, 4, 4))) - 0), max(4, 4)), (_GLF_IDENTITY(0, _GLF_IDENTITY(min(0, _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), max(0, 0))), (min(0, _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), max(0, 0)))) >> 0)) | 0), (0 ^ _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), 0 ^ (~ (1)))))), 0), ivec4(0, 0, 0, 0) ^ (ivec4(_GLF_IDENTITY(4, max(4, 4)), (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), max(0, 0)))) | 0), (0 ^ _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), 0 ^ (~ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), ((1)) | ((1)))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))))))), 0))), _GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, max(4, 4)), 4, 4))) - 0), max(4, _GLF_IDENTITY(4, int(ivec2(4, 0))))), (_GLF_IDENTITY(0, _GLF_IDENTITY(min(0, _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(min(0, 0), min(min(0, 0), min(0, 0)))), max(0, 0))), _GLF_IDENTITY((min(0, _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), max(0, 0)))) >> 0, ((min(0, _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), max(0, 0)))) >> 0) - 0))) | 0), (0 ^ _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), 0 ^ (~ (1)))))), 0), ivec4(0, _GLF_IDENTITY(0, (((1 | 0) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))) * (0)), 0, 0) ^ (ivec4(_GLF_IDENTITY(4, max(4, 4)), (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), max(0, 0)))) | 0), (0 ^ _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), 0 ^ (~ _GLF_IDENTITY((1), ((1)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))))))), 0))))))), _GLF_IDENTITY((ivec4(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, (4) * 1))), 4)))), (0 | 0), _GLF_IDENTITY((0 ^ 1), 1 * (_GLF_IDENTITY((0 ^ 1), (_GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) | ((0 ^ 1)))) << 0))), _GLF_IDENTITY(0, (0) / 1))) | (ivec4(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec4(4, 0, 1, _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, 0 ^ (0))))))), int(ivec4(int(ivec4(4, 0, 1, _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, 0 ^ (0))))))), 0, 0, 0)))), _GLF_IDENTITY(4, int(int(4))))), (0 | 0), (0 ^ 1), 0)), (_GLF_IDENTITY((ivec4(_GLF_IDENTITY(4, max(4, 4)), (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(16005) : 0)) | 0), (0 ^ _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) / 1)))), 0)), ivec4(_GLF_IDENTITY(0, (0) | (0)), 0, 0, 0) ^ ((ivec4(_GLF_IDENTITY(4, max(4, 4)), (_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(16005) : 0)) | 0, int(ivec4(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(16005) : 0)) | 0, (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(0), int(0)), (0 << _GLF_IDENTITY(int(0), int(0))) | (0 << _GLF_IDENTITY(int(0), int(0))))), 1, 0)))), (0 ^ 1), 0)))) | (ivec4(_GLF_IDENTITY(4, max(4, 4)), (0 | 0), (0 ^ 1), 0))) - ivec4(0, _GLF_IDENTITY(0, clamp(0, 0, 0)), 0, 0))))), 64, 4);
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
