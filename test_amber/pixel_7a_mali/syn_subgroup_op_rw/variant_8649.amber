#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 do
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      {
       for(int _injected_loop_counter = _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) << 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), true && ((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))))))
          {
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY((1 ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(((1 ^ 0)), (((1 ^ 0))) * 1) | (_GLF_IDENTITY((1 ^ 0), (_GLF_IDENTITY((1 ^ 0), clamp((1 ^ 0), (1 ^ 0), _GLF_IDENTITY((1 ^ 0), (true ? (1 ^ 0) : _GLF_FUZZED(_injected_loop_counter)))))) >> 0)), (_GLF_IDENTITY(((1 ^ 0)), (((1 ^ 0))) * 1) | (_GLF_IDENTITY((1 ^ 0), (_GLF_IDENTITY((1 ^ 0), clamp((1 ^ 0), (1 ^ 0), _GLF_IDENTITY((1 ^ 0), (true ? (1 ^ 0) : _GLF_FUZZED(_injected_loop_counter)))))) >> 0))) / 1))); _GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) / ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))))) * 1))
              {
               return;
              }
            }
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             return;
            }
          }
        }
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
      }
    }
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)).x, 0u | (gl_WorkGroupID.x)), (_GLF_IDENTITY(gl_WorkGroupID.x, 0u | (gl_WorkGroupID.x))) / 1u);
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(62107) : 1))) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      break;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) - _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) * 1u), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) * 1u), ~ (~ (_GLF_IDENTITY(0u, (0u) * 1u))))) / 1u)) * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) - _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) * _GLF_IDENTITY(1u, 0u + (_GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_size) : 1u)), 0u, 1u)))))), min(_GLF_IDENTITY(0u, (0u) * 1u), _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 0u)))) * 1u), min(_GLF_IDENTITY(0u, (0u) * 1u), _GLF_IDENTITY(0u, (0u) * 1u)))))) * subgroup_size, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) - _GLF_IDENTITY(0u, (0u) * 1u), max((subgroup_id) - _GLF_IDENTITY(0u, (0u) * 1u), _GLF_IDENTITY((subgroup_id) - _GLF_IDENTITY(0u, (0u) * 1u), 1u * ((subgroup_id) - _GLF_IDENTITY(0u, (0u) * 1u)))))) * subgroup_size, _GLF_IDENTITY(subgroup_id, (subgroup_id) - _GLF_IDENTITY(0u, (0u) * 1u)) * subgroup_size)), (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size), clamp(_GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), 1u * (_GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), uint(uint(_GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), (max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)) + 0u)))))), _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), uint(_GLF_IDENTITY(uvec4(max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u) * subgroup_size), 0u, 0u, _GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(uaddCarry((workgroup_id --), workgroup_id, subgroup_id))))), max(uvec4(max(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size, subgroup_id * subgroup_size), 0u, 0u, 0u), uvec4(max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size))), 0u, 0u, 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), min(max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) * 1u)), _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))), _GLF_IDENTITY(min(_GLF_IDENTITY(max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size))), _GLF_IDENTITY(min(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_id))) | (0u | 0u)) * subgroup_size), _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))))), min(min(_GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))), _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(max(subgroup_id * subgroup_size, subgroup_id * _GLF_IDENTITY(subgroup_size, 0u + (subgroup_size))), _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))))), min(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)))) * subgroup_size, subgroup_id * subgroup_size), max(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))))))), _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), subgroup_id * subgroup_size), min(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))) - _GLF_IDENTITY(0u, max(0u, 0u))) * subgroup_size, subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), subgroup_size, subgroup_size))), max(max(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size)), subgroup_id * subgroup_size), max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u)))))))))), clamp(_GLF_IDENTITY(min(_GLF_IDENTITY(max(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size, _GLF_IDENTITY(0u, (0u) ^ 0u) ^ (subgroup_id * subgroup_size))), min(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u) * subgroup_size, subgroup_id * subgroup_size), max(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(max(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_size, 1u, 1u), (true ? uvec3(subgroup_size, 1u, 1u) : _GLF_FUZZED(uvec3(139111u, 163153u, 60837u)))))))), subgroup_id * subgroup_size), max(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))) * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) + 0u)))))))), _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), min(max(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), subgroup_id * subgroup_size), _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec4(subgroup_id, 1u, (1u & 1u), 0u)), (uint(uvec4(subgroup_id, 1u, (1u & 1u), 0u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec2(subgroup_id, 1u), uvec2(0u, 0u) ^ (uvec2(subgroup_id, 1u))))) * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u)))))))))), 0u ^ (_GLF_IDENTITY(min(_GLF_IDENTITY(max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size))), min(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), _GLF_IDENTITY(max(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), subgroup_id * subgroup_size), max(max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size))), max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), subgroup_id * subgroup_size))))))))), _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), _GLF_IDENTITY(min(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), _GLF_IDENTITY(max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (0u | 0u) | (subgroup_id * subgroup_size))), max(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u)))))))), ~ (~ _GLF_IDENTITY((min(max(_GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u) : _GLF_FUZZED(subgroup_local_id))) * subgroup_size, subgroup_id * subgroup_size), _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u) : _GLF_FUZZED(150243u))))), 1u * (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u) : _GLF_FUZZED(150243u))))))))))))), ((min(max(_GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u) : _GLF_FUZZED(subgroup_local_id))) * subgroup_size, subgroup_id * subgroup_size), _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u) : _GLF_FUZZED(150243u))))), 1u * (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u) : _GLF_FUZZED(150243u)))))))))))))) | (_GLF_IDENTITY((min(max(_GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u) : _GLF_FUZZED(subgroup_local_id))) * subgroup_size, subgroup_id * subgroup_size), _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u) : _GLF_FUZZED(150243u))))), 1u * (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u) : _GLF_FUZZED(150243u))))))))))))), ((min(max(_GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u) : _GLF_FUZZED(subgroup_local_id))) * subgroup_size, subgroup_id * subgroup_size), _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u) : _GLF_FUZZED(150243u))))), 1u * (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u) : _GLF_FUZZED(150243u)))))))))))))) | (_GLF_IDENTITY((min(max(_GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u) : _GLF_FUZZED(subgroup_local_id))) * subgroup_size, subgroup_id * subgroup_size), _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u) : _GLF_FUZZED(150243u))))), 1u * (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u) : _GLF_FUZZED(150243u))))))))))))), min((min(max(_GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u) : _GLF_FUZZED(subgroup_local_id))) * subgroup_size, subgroup_id * subgroup_size), _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u) : _GLF_FUZZED(150243u))))), 1u * (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u) : _GLF_FUZZED(150243u))))))))))))), (min(max(_GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u) : _GLF_FUZZED(subgroup_local_id))) * subgroup_size, subgroup_id * subgroup_size), _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u) : _GLF_FUZZED(150243u))))), 1u * (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u) : _GLF_FUZZED(150243u))))))))))))))))))))))), (min(_GLF_IDENTITY(max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED((workgroup_base - packSnorm2x16(vec2(-9.3, -76.03)))) : subgroup_id * subgroup_size))))), min(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))))), _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), min(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))))))) * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))), _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), subgroup_size)), _GLF_IDENTITY((subgroup_id * subgroup_size), uint(uvec2((subgroup_id * subgroup_size), 0u))) >> 0u))))))))))) | (min(_GLF_IDENTITY(max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size))), min(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))), 0u ^ (_GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u) * subgroup_size), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))))))), _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), min(max(subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (0u ^ 1u), 1u))), subgroup_id * subgroup_size), _GLF_IDENTITY(max(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_id * subgroup_size), max(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u)))))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size))), uint(_GLF_IDENTITY(uvec3(max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size))), 0u, 0u), max(uvec3(max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size))), 0u, 0u), uvec3(max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size))), 0u, 0u))))), min(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(_GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(_GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), min(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), (max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)) - 0u))), _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), 0u | (max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))), _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))))), _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), min(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) >> 0u)))))))))), 0u | (min(_GLF_IDENTITY(max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size))), min(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))))), _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), min(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u) * subgroup_size) >> 0u)))))))))))), ~ (~ (_GLF_IDENTITY(min(_GLF_IDENTITY(max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size))), min(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(_GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), min(_GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))), _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), 0u | (max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))), _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size, subgroup_id * subgroup_size))))))), _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_id, (subgroup_id) - (0u | 0u)) * subgroup_size, subgroup_id * subgroup_size), min(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, (subgroup_id) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size), max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))), (uint(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))))) - 0u))))))))))), 0u | (min(_GLF_IDENTITY(max(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) - (0u << _GLF_IDENTITY(uint(5u), uint(5u)))) * subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))), min(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(~ (subgroup_size), 1u, 0u, 1u), max(uvec4(~ (subgroup_size), 1u, 0u, 1u), uvec4(~ (subgroup_size), 1u, 0u, 1u)))), (false ? _GLF_FUZZED(45902u) : uint(_GLF_IDENTITY(uvec4(~ (subgroup_size), 1u, 0u, 1u), max(uvec4(~ (subgroup_size), 1u, 0u, 1u), uvec4(~ (subgroup_size), 1u, 0u, 1u))))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, (0u << _GLF_IDENTITY(uint(8u), uint(8u))), _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 0u + (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), 1u), (uvec4(subgroup_id * subgroup_size, (0u << _GLF_IDENTITY(uint(8u), uint(8u))), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 1u)) | (uvec4(subgroup_id * subgroup_size, (0u << _GLF_IDENTITY(uint(8u), uint(8u))), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 1u)))), (false ? _GLF_FUZZED(workgroup_size) : uint(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, (0u << _GLF_IDENTITY(uint(8u), uint(8u))), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 1u), (uvec4(subgroup_id * subgroup_size, (0u << _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (8u) | (8u))))), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 1u)) | (uvec4(subgroup_id * subgroup_size, (0u << _GLF_IDENTITY(uint(8u), uint(8u))), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 1u))))))), subgroup_id * subgroup_size), max(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))))), _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), subgroup_id * subgroup_size), min(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u)) + 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u))))))), uint(uint(_GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size, (subgroup_id * subgroup_size) >> 0u)))))))))))))))))), _GLF_IDENTITY(min(_GLF_IDENTITY(max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size))), min(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), subgroup_id * subgroup_size))))))), _GLF_IDENTITY(_GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), min(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u))))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), min(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u)))))))))), (~ (_GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), min(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u))))))))))) ^ 0u)))), (min(_GLF_IDENTITY(max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size))), min(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), subgroup_id * subgroup_size))))))), _GLF_IDENTITY(_GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), min(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u))))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), min(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u)))))))))), (~ (_GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), min(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u))))))))))) ^ 0u))))) >> 0u))))))))))) - _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))) | 0u, uint(_GLF_IDENTITY(uint((uint(_GLF_ZERO(0.0, injectionSwitch.x))) | 0u), (uint((uint(_GLF_ZERO(0.0, injectionSwitch.x))) | 0u)) | (uint((uint(_GLF_ZERO(0.0, injectionSwitch.x))) | 0u)))))), (_GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-95.57))))), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u ^ (uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(396.101)), bool(false))))))) | _GLF_IDENTITY(0u, (0u) | (0u)), uint(_GLF_IDENTITY(uint((uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x))))) | 0u), (uint((uint(_GLF_ZERO(0.0, injectionSwitch.x))) | 0u)) | (uint((uint(_GLF_ZERO(0.0, injectionSwitch.x))) | 0u))))))) - 0u));
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | 0u) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_base + ((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u)), ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u))) | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u)), ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u))) | 0u))) | (subgroup_local_id + 1))) % subgroup_size);
 uint read = _GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), min(atomicLoad(buf[virtual_gid], 4, 64, 2), atomicLoad(buf[virtual_gid], 4, 64, 2))), min(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), _GLF_IDENTITY((atomicLoad(buf[virtual_gid], 4, 64, 2)) | (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (true ? atomicLoad(buf[virtual_gid], 4, 64, 2) : _GLF_FUZZED((145067u | 94926u))))), clamp((atomicLoad(buf[virtual_gid], 4, 64, 2)) | (atomicLoad(buf[virtual_gid], 4, 64, 2)), (atomicLoad(buf[virtual_gid], 4, 64, 2)) | (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) + 0), 64, _GLF_IDENTITY(2, (2) - 0))), (atomicLoad(buf[virtual_gid], 4, 64, 2)) | (atomicLoad(buf[virtual_gid], 4, 64, 2))))), atomicLoad(buf[virtual_gid], 4, 64, 2)));
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, false))), (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
  }
 else
  {
   if((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) % 2) == 0)
    {
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(log(injectionSwitch)) : injectionSwitch)).y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(log(injectionSwitch)) : injectionSwitch)).y))) && true)))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, tan(0.0), 0.0, 0.0, 1.0, 0.0))))))) > injectionSwitch.y))))
      {
      }
     else
      {
       subgroupAll(false);
      }
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, ~ (~ (4))))), 64, 4);
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && ((false)))))))
        break;
      }
     do
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       for(int _injected_loop_counter = _GLF_IDENTITY(0, 0 ^ (0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-0.4))), 0.0, 0.0)))), vec2(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), max((1.0), (1.0))) * abs(1.0)), 1.0))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-29.24, 8.3)) : _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)))).y, float(vec4(injectionSwitch.y, 1.0, cos(0.0), _GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0, 1.0, 1.0, sqrt(0.0)))))))), min(clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, cos(0.0), _GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-6003.6254)), bool(false))), 0.0, 0.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(float(float(0.0)), min(float(float(0.0)), float(float(0.0)))))), float(_GLF_FUZZED(8.0)), bool(false))))))))))), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, cos(0.0), _GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, _GLF_IDENTITY(sqrt(0.0), (true ? _GLF_IDENTITY(sqrt(0.0), min(sqrt(0.0), sqrt(0.0))) : _GLF_FUZZED(7.6)))))))))), (clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, cos(0.0), _GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0, 1.0, 1.0, sqrt(0.0))))))))) / 1.0))), (_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, cos(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, sqrt(1.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), exp(0.0), 0.0, 0.0), (false ? _GLF_FUZZED(mat2x3(-579.014, -85.23, 7.1, -9.1, 9.2, -769.143)) : mat2x3(0.0, sqrt(1.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), exp(0.0), 0.0, 0.0)))))), _GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), sqrt(0.0)))))))), min(clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(cos(0.0), 1.0 * (cos(_GLF_IDENTITY(0.0, (0.0) * 1.0)))), _GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-39.00)), float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), bool(true))), _GLF_IDENTITY(sqrt(0.0), float(_GLF_IDENTITY(_GLF_IDENTITY(mat4(sqrt(0.0), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0))), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, 0.0, 1.0, 0.0, 0.0, abs(0.0), 1.0, 0.0, 0.0, abs(0.0), 1.0), (false ? _GLF_FUZZED(mat4(984.106, -774.959, -355.067, -145.885, 5.8, -3.8, 676.921, 5.5, 8242.0650, 3526.8660, -4.6, 9.5, -1.4, -36.72, 4398.3369, -834.994)) : mat4(sqrt(0.0), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0))), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, 0.0, 1.0, 0.0, 0.0, abs(0.0), 1.0, 0.0, 0.0, abs(0.0), 1.0))), (_GLF_IDENTITY(mat4(sqrt(0.0), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0)), min(dot(vec3(1.0, 0.0, 0.0), vec3(determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0)))), dot(vec3(1.0, 0.0, 0.0), vec3(determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(102.606) : 0.0))) / 1.0)) + 0.0), 0.0, 1.0)), 0.0, 0.0))), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, 0.0, 1.0, 0.0, 0.0, abs(0.0), 1.0, 0.0, 0.0, abs(0.0), 1.0), (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_FUZZED(mat4(984.106, -774.959, -355.067, -145.885, 5.8, -3.8, 676.921, 5.5, 8242.0650, 3526.8660, -4.6, _GLF_IDENTITY(9.5, max(9.5, 9.5)), -1.4, -36.72, 4398.3369, -834.994)) : mat4(sqrt(0.0), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0))), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, 0.0, 1.0, 0.0, 0.0, abs(0.0), 1.0, 0.0, 0.0, abs(0.0), 1.0)))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))))))), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, cos(0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0, 1.0, 1.0, sqrt(0.0)))), float(mat3x2(_GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(vec4(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, 0.0, 1.0)))) - 0.0), 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), 1.0, 1.0, sqrt(0.0)))), 0.0, 0.0, 1.0, 1.0, abs(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((293.892 / 58.41))), float(0.0), bool(true))), 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))))))))))), _GLF_IDENTITY((clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, cos(0.0), _GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0, 1.0, 1.0, sqrt(0.0)))))), clamp(float(vec4(injectionSwitch.y, 1.0, cos(0.0), _GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0, 1.0, 1.0, sqrt(0.0)))))), _GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, cos(0.0), _GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0, 1.0, 1.0, sqrt(0.0)))))), (false ? _GLF_FUZZED(-6.9) : float(vec4(injectionSwitch.y, 1.0, cos(0.0), _GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0, 1.0, 1.0, sqrt(0.0)))))))), _GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, cos(0.0), _GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0, 1.0, 1.0, sqrt(0.0)))))), (float(vec4(injectionSwitch.y, 1.0, cos(0.0), _GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0, 1.0, 1.0, sqrt(0.0))))))) + 0.0)))))) / _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), min(_GLF_IDENTITY((clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, float(vec4(injectionSwitch.y, 1.0, cos(0.0), _GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0, 1.0, 1.0, sqrt(0.0))))))))) / _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * 1.0), (_GLF_IDENTITY((clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, cos(0.0), _GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0, 1.0, 1.0, sqrt(0.0))))))))), max((clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, cos(0.0), _GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), max(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0))), 0.0, 0.0, 1.0, 1.0, sqrt(0.0))))))))), (clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, _GLF_IDENTITY(cos(0.0), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(cos(0.0), max(cos(0.0), cos(0.0))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, log(1.0), 0.0, 0.0)), float(_GLF_IDENTITY(mat2x3(float(mat4x2(_GLF_IDENTITY(cos(0.0), max(cos(0.0), cos(0.0))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, log(1.0), 0.0, 0.0)), 1.0, sin(0.0), 1.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat2x3(3054.3969, -71.09, 4481.6864, 843.079, -28.95, 7.2)) : mat2x3(float(mat4x2(_GLF_IDENTITY(cos(0.0), max(cos(0.0), cos(0.0))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, log(1.0), 0.0, 0.0)), 1.0, sin(0.0), 1.0, 0.0, 1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0, 1.0, 1.0, sqrt(0.0)))), mix(float(_GLF_FUZZED(-4.7)), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0, 1.0, 1.0, sqrt(0.0)))), (_GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0, 1.0, 1.0, sqrt(0.0))))) - 0.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))) / 1.0) - 0.0), (clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, cos(0.0), _GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(0.0, _GLF_IDENTITY((true ? 0.0 : _GLF_FUZZED(7.5)), cos(0.0) * (_GLF_IDENTITY((true ? 0.0 : _GLF_FUZZED(7.5)), (_GLF_IDENTITY((true ? 0.0 : _GLF_FUZZED(7.5)), (true ? (true ? 0.0 : _GLF_FUZZED(7.5)) : _GLF_FUZZED(-880.522)))) + 0.0))))), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), clamp(1.0, 1.0, 1.0)), 1.0)), sqrt(0.0))))))))) / 1.0)))))) / 1.0))))))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)) != int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)) != int(_GLF_ONE(1.0, injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)) != int(_GLF_ONE(1.0, injectionSwitch.y)), false || (_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)) != int(_GLF_ONE(1.0, injectionSwitch.y))))))))), true && (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)) != int(_GLF_ONE(1.0, injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)) != int(_GLF_ONE(1.0, injectionSwitch.y)), false || (_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)) != int(_GLF_ONE(1.0, injectionSwitch.y))))))))))))); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              continue;
             return;
            }
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
        }
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   else
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))), bool(bvec3(_GLF_DEAD(false), false, true)))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 0.0)), (false ? _GLF_FUZZED(injectionSwitch) : vec2(vec3(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 0.0)))))[0], injectionSwitch[1])), max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0), (mat4x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)) * mat4(1.0)))))).y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(192.353))), injectionSwitch.y, injectionSwitch.y)), bool(bool(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(192.353))), injectionSwitch.y, injectionSwitch.y)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(bool((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0))), injectionSwitch.x)) > injectionSwitch.y)), true, true)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(bool((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), true, true)))), (bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0))), injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0))), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0))), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0))), injectionSwitch.x)))) > injectionSwitch.y)), true, true))))) || false)))))), bool(bvec4(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(bool((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8.9)), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(257.332)), float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7949.5125), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((+ -133.924))), bvec2(true, false))).x), bool(true)))), bool(true))))) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), true, true)))))), true, true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), false || (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))))))
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, exp(0.0))), (false ? _GLF_FUZZED(vec2(6.3, 1.2)) : _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, exp(0.0))), (false ? _GLF_FUZZED(injectionSwitch) : vec2(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, exp(0.0)))))))).x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, exp(0.0))), (false ? _GLF_FUZZED(vec2(6.3, 1.2)) : _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, exp(0.0))), (false ? _GLF_FUZZED(injectionSwitch) : vec2(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, exp(0.0)))))))).x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, exp(0.0))), (false ? _GLF_FUZZED(vec2(6.3, 1.2)) : _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, exp(0.0))), (false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) : vec2(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, exp(0.0)))))))).x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              break;
             return;
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        return;
       return;
      }
     subgroupAll(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec4(_GLF_IDENTITY(false || (false), _GLF_IDENTITY(! (! (false || (false))), _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY((true) || _GLF_IDENTITY(false, true && (false)), bool(bvec4((true) || _GLF_IDENTITY(false, true && (false)), true, false, true)))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))) && (! (! (false || _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (! ((false)))))))))))))), true, true, true)))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(injectionSwitch)))) / vec2(1.0, 1.0)), injectionSwitch)).y), _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (((injectionSwitch.x < injectionSwitch.y)))), false || (((injectionSwitch.x < injectionSwitch.y)))) || false)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)))), vec3(1.0, sqrt(0.0), 1.0)), dot(vec3(length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)))), vec3(1.0, sqrt(0.0), 1.0))), 1.0, 0.0)), min(float(vec4(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)))), vec3(1.0, sqrt(0.0), 1.0)), dot(vec3(length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)))), vec3(1.0, sqrt(0.0), 1.0))), 1.0, 0.0)), float(vec4(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)))), vec3(1.0, sqrt(0.0), 1.0)), dot(vec3(length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)))), vec3(1.0, sqrt(0.0), 1.0))), 1.0, 0.0))))))), bool(bvec4(! ((injectionSwitch.x < injectionSwitch.y)), false, false, false)))))), true)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(820.182) : injectionSwitch.x))) / _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(float(false)), min(_GLF_FUZZED(float(false)), _GLF_FUZZED(float(false))))), float(_GLF_IDENTITY(1.0, (1.0) / 1.0)), bool(true)))) < injectionSwitch.y)), true)), false, true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec4(_GLF_IDENTITY(false || (false), _GLF_IDENTITY(_GLF_IDENTITY(! (! (false || (false))), false || (! (! (false || (false))))), _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, true && (false))), bool(bvec4(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, true && (false))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x < injectionSwitch.y)) && (! (! (false || (false)))))), true, true, true)))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)), injectionSwitch)).y), _GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false || (((injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(false || (((injectionSwitch.x < injectionSwitch.y))), true, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec3(false || (((injectionSwitch.x < injectionSwitch.y))), true, false)))))) || false)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), bool(bvec4(! ((injectionSwitch.x < injectionSwitch.y)), false, false, false)))))), true)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) < injectionSwitch.y)), true)), false, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec4(_GLF_IDENTITY(false || (false), _GLF_IDENTITY(! (! (false || (false))), _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY((true) || _GLF_IDENTITY(false, true && (false)), ((true) || _GLF_IDENTITY(false, true && (false))) && true)), (injectionSwitch.x < injectionSwitch.y)) && (! (! (false || (false)))))), true, true, true)))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)), injectionSwitch)).y), _GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), false || (((injectionSwitch.x < injectionSwitch.y)))) || false)), _GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), false || ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), bool(bvec4(! ((injectionSwitch.x < injectionSwitch.y)), false, false, false)))))), true)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) < injectionSwitch.y)), true)), false, true)))), true && (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false || (false), _GLF_IDENTITY(! (! (false || (false))), _GLF_TRUE(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, true && (false))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + tan(0.0)))) && (! (! (false || (false)))))), ! (! (_GLF_IDENTITY(false || (false), _GLF_IDENTITY(! (! (false || (false))), _GLF_TRUE(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, true && (false))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + tan(0.0)))) && (! (! (false || (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))))))))), true, true, true)))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)), injectionSwitch)).y), _GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), false || _GLF_IDENTITY((((injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY((((injectionSwitch.x < injectionSwitch.y))), ! (! ((((injectionSwitch.x < injectionSwitch.y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false)), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).x, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).x)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).x)) < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), bool(bvec4(! _GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), true && (((injectionSwitch.x < injectionSwitch.y)))))), false, false, false)))))), true)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) < injectionSwitch.y)), true)), false, true))))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false || (false), false || (false || (false))), _GLF_IDENTITY(! (! (false || (false))), _GLF_TRUE(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, true && (false))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) && (! (! (false || (false)))))), true, true, true)))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)), injectionSwitch)), mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)), injectionSwitch)))[0], max((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)), injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)), injectionSwitch)))[0])), _GLF_FUZZED((false ? -480.311 : 4151.6635))), vec2(_GLF_FUZZED(5282.6220), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)), injectionSwitch)))[1]), bvec2(false, true))).y), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))))), false || (_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), (((injectionSwitch.x < injectionSwitch.y))) && true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bvec4(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), (((injectionSwitch.x < injectionSwitch.y))) && true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bool(bool(bvec4(_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), (((injectionSwitch.x < injectionSwitch.y))) && true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), true, true, true)))))) || false)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), bool(bvec4(! ((injectionSwitch.x < injectionSwitch.y)), false, false, false)))))), true)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), false)), (bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), false))) && true)) || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(234.553)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) / 1.0) < injectionSwitch.y)), true)), false, true)))), bool(bvec3(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec4(_GLF_IDENTITY(false || (false), _GLF_IDENTITY(! (! (false || (false))), _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, true && (false))), (injectionSwitch.x < injectionSwitch.y))) || false) && (! (! (false || (false)))))), true, _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, bool(bool(true)))))), true)))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)), injectionSwitch)).y), _GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), ! (! (((injectionSwitch.x < injectionSwitch.y)))))))), ! (! ((((injectionSwitch.x < injectionSwitch.y))))))) || false)), _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), bool(bvec4(! _GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bool(((injectionSwitch.x < injectionSwitch.y))), false || (bool(((injectionSwitch.x < injectionSwitch.y))))))), false, false, false)))))), ! (! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), bool(bvec4(! _GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bool(((injectionSwitch.x < injectionSwitch.y))), false || (bool(((injectionSwitch.x < injectionSwitch.y))))))), false, false, false))))))))), true)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) < injectionSwitch.y)), true)), false, true)))), false, false))), false)))) || false)), true && _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec4(_GLF_IDENTITY(false || (false), _GLF_IDENTITY(! (! (false || (false))), _GLF_TRUE(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && (false)))))), (injectionSwitch.x < injectionSwitch.y)) && (! (! (false || (false)))))), true, true, true)))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)), injectionSwitch)).y), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), false || (((injectionSwitch.x < injectionSwitch.y)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), false || (((injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), false || (((injectionSwitch.x < injectionSwitch.y))))), true, false)), (bool(bvec3(bool(_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), false || (((injectionSwitch.x < injectionSwitch.y))))), true, false))) && true)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), false || (((injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), false || (((injectionSwitch.x < injectionSwitch.y))))) || false))) || false)), _GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), ! (! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)))), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), bool(bvec4(! ((injectionSwitch.x < injectionSwitch.y)), false, false, false)))))), true)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat3x4(-27.34, -1.3, 447.163, 8.2, -6579.5123, -6.9, 4.3, -50.62, -630.107, -926.498, -6.8, 9703.2686)) : mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0))))), injectionSwitch)).x) / 1.0) < injectionSwitch.y)), true)), false, true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec4(_GLF_IDENTITY(false || (false), _GLF_IDENTITY(! (! (false || (false))), _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (true) || _GLF_IDENTITY(false, true && (false))), (injectionSwitch.x < injectionSwitch.y)) && (! (! (false || (false)))))), true, true, true)))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)), injectionSwitch)).y), _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), ! (! (((injectionSwitch.x < injectionSwitch.y))))), false || (((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))) || false)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), bool(bvec4(! ((injectionSwitch.x < injectionSwitch.y)), false, false, false)))))), true)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / 1.0, mix(float((injectionSwitch.x) / 1.0), float(_GLF_FUZZED(3771.7593)), bool(_GLF_IDENTITY(false, false || (false)))))) < injectionSwitch.y)), true)), false, true))), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(_GLF_IDENTITY(false || (false), _GLF_IDENTITY(! (! (false || (false))), _GLF_TRUE(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, true && (false))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) && (! (! _GLF_IDENTITY((false || (false)), false || ((false || (false)))))))), true, true, true)))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)), clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) / vec2(1.0, 1.0)), injectionSwitch)).y), _GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), false || (((injectionSwitch.x < injectionSwitch.y)))) || _GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, false || (false))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-9.8, 7012.0256)))).y) && true))), bool(bvec4(! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)), false, false, false)))))), true)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(true)), _GLF_FUZZED(417.260)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(6747.0050) : (injectionSwitch)[1]))), _GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(true, true)), bvec2(bvec3(bvec2(bvec2(true, true)), false)))))))))).x < injectionSwitch.y)), _GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, true)), bool(bvec4(bool(bvec3(true, false, true)), true, true, false))))) && true), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(1.8))), injectionSwitch.x))) / 1.0) < injectionSwitch.y)), true)), false, true))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec4(_GLF_IDENTITY(false || (false), _GLF_IDENTITY(! (! (false || (false))), _GLF_TRUE(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, true && (false))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)) && (! (! (false || (false)))))), true, _GLF_IDENTITY(true, ! (! (true))), true)))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))[1]))) / vec2(1.0, 1.0)), injectionSwitch)).y), _GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), (((injectionSwitch.x < injectionSwitch.y))) || false))))) || false)), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))))), bool(bvec4(! ((injectionSwitch.x < injectionSwitch.y)), false, false, false)))))), true)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, false || (false)), _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) < injectionSwitch.y)), true)), false, true)))), bool(bvec3(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec4(_GLF_IDENTITY(false || _GLF_IDENTITY((false), ((false)) || false), _GLF_IDENTITY(! (! (false || (false))), _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, true && (false))), (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, true && (false))), bool(bvec4(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, true && (false))), false, true, true)))) && true), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) && _GLF_IDENTITY((! (! (false || (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((! (! (false || (false)))), false || (_GLF_IDENTITY((! (! (false || (false)))), ! (! ((! (! (false || (false))))))))))))), true, true, true)))), _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)), injectionSwitch)).y), _GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), false || (((injectionSwitch.x < injectionSwitch.y)))) || false)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)), injectionSwitch)).y), _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), false || (((injectionSwitch.x < injectionSwitch.y)))) || false, ! (! (_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), ! (! (((injectionSwitch.x < injectionSwitch.y))))))) || false)))))), ! (_GLF_IDENTITY(! (! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x2(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)), (float(mat4x2(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0))) * 1.0)))), injectionSwitch)).y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false))))), false, true)), true && (bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false))))), false, true))))) || (((injectionSwitch.x < injectionSwitch.y)))) || false)))), (! (! (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(7160.2673), _GLF_FUZZED(-7.2)), bvec2(_GLF_IDENTITY(false, ! (! (false))), false))).x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)), injectionSwitch)).y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), false)))), false || (((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - length(vec3(0.0, 0.0, 0.0))) < injectionSwitch.y)))) || false))))) && true))))), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true)))))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), bool(bvec4(! ((injectionSwitch.x < injectionSwitch.y)), false, false, false)))))), true)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / 1.0, (true ? _GLF_IDENTITY((injectionSwitch.x), float(float((injectionSwitch.x)))) / 1.0 : _GLF_FUZZED(-5.0)))) < injectionSwitch.y)), true)), false, true)))), false, false))), false)))) || false))), ! (! (_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec4(_GLF_IDENTITY(false || (false), _GLF_IDENTITY(! (! (false || (false))), _GLF_TRUE(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && (false)))))), (injectionSwitch.x < injectionSwitch.y)) && (! (! (false || (false)))))), true, true, true)))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)), injectionSwitch)).y), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), false || (((injectionSwitch.x < injectionSwitch.y)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), false || (((injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), false || (((injectionSwitch.x < injectionSwitch.y))))), true, false)), (bool(bvec3(bool(_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), false || (((injectionSwitch.x < injectionSwitch.y))))), true, false))) && true)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), false || (((injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), false || (((injectionSwitch.x < injectionSwitch.y))))) || false))) || false)), _GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), ! (! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)))), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), bool(bvec4(! ((injectionSwitch.x < injectionSwitch.y)), false, false, false)))))), true)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat3x4(-27.34, -1.3, 447.163, 8.2, -6579.5123, -6.9, 4.3, -50.62, -630.107, -926.498, -6.8, 9703.2686)) : mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0))))), injectionSwitch)).x) / 1.0) < injectionSwitch.y)), true)), false, true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec4(_GLF_IDENTITY(false || (false), _GLF_IDENTITY(! (! (false || (false))), _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (true) || _GLF_IDENTITY(false, true && (false))), (injectionSwitch.x < injectionSwitch.y)) && (! (! (false || (false)))))), true, true, true)))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)), injectionSwitch)).y), _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), ! (! (((injectionSwitch.x < injectionSwitch.y))))), false || (((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))) || false)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), bool(bvec4(! ((injectionSwitch.x < injectionSwitch.y)), false, false, false)))))), true)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / 1.0, mix(float((injectionSwitch.x) / 1.0), float(_GLF_FUZZED(3771.7593)), bool(_GLF_IDENTITY(false, false || (false)))))) < injectionSwitch.y)), true)), false, true))), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(_GLF_IDENTITY(false || (false), _GLF_IDENTITY(! (! (false || (false))), _GLF_TRUE(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, true && (false))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) && (! (! _GLF_IDENTITY((false || (false)), false || ((false || (false)))))))), true, true, true)))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)), clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) / vec2(1.0, 1.0)), injectionSwitch)).y), _GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), false || (((injectionSwitch.x < injectionSwitch.y)))) || _GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, false || (false))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-9.8, 7012.0256)))).y) && true))), bool(bvec4(! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)), false, false, false)))))), true)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(true)), _GLF_FUZZED(417.260)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(6747.0050) : (injectionSwitch)[1]))), _GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(true, true)), bvec2(bvec3(bvec2(bvec2(true, true)), false)))))))))).x < injectionSwitch.y)), _GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, true)), bool(bvec4(bool(bvec3(true, false, true)), true, true, false))))) && true), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(1.8))), injectionSwitch.x))) / 1.0) < injectionSwitch.y)), true)), false, true))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec4(_GLF_IDENTITY(false || (false), _GLF_IDENTITY(! (! (false || (false))), _GLF_TRUE(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, true && (false))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)) && (! (! (false || (false)))))), true, _GLF_IDENTITY(true, ! (! (true))), true)))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))[1]))) / vec2(1.0, 1.0)), injectionSwitch)).y), _GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), (((injectionSwitch.x < injectionSwitch.y))) || false))))) || false)), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))))), bool(bvec4(! ((injectionSwitch.x < injectionSwitch.y)), false, false, false)))))), true)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, false || (false)), _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) < injectionSwitch.y)), true)), false, true)))), bool(bvec3(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec4(_GLF_IDENTITY(false || _GLF_IDENTITY((false), ((false)) || false), _GLF_IDENTITY(! (! (false || (false))), _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, true && (false))), (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, true && (false))), bool(bvec4(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, true && (false))), false, true, true)))) && true), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) && _GLF_IDENTITY((! (! (false || (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((! (! (false || (false)))), false || (_GLF_IDENTITY((! (! (false || (false)))), ! (! ((! (! (false || (false))))))))))))), true, true, true)))), _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)), injectionSwitch)).y), _GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), false || (((injectionSwitch.x < injectionSwitch.y)))) || false)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)), injectionSwitch)).y), _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), false || (((injectionSwitch.x < injectionSwitch.y)))) || false, ! (! (_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), ! (! (((injectionSwitch.x < injectionSwitch.y))))))) || false)))))), ! (_GLF_IDENTITY(! (! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x2(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)), (float(mat4x2(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0))) * 1.0)))), injectionSwitch)).y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false))))), false, true)), true && (bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false))))), false, true))))) || (((injectionSwitch.x < injectionSwitch.y)))) || false)))), (! (! (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(7160.2673), _GLF_FUZZED(-7.2)), bvec2(_GLF_IDENTITY(false, ! (! (false))), false))).x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)), injectionSwitch)).y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), false)))), false || (((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - length(vec3(0.0, 0.0, 0.0))) < injectionSwitch.y)))) || false))))) && true))))), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true)))))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), bool(bvec4(! ((injectionSwitch.x < injectionSwitch.y)), false, false, false)))))), true)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / 1.0, (true ? _GLF_IDENTITY((injectionSwitch.x), float(float((injectionSwitch.x)))) / 1.0 : _GLF_FUZZED(-5.0)))) < injectionSwitch.y)), true)), false, true)))), false, false))), false)))) || false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec4(_GLF_IDENTITY(false || (false), _GLF_IDENTITY(! (! (false || (false))), _GLF_TRUE(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && (false)))))), (injectionSwitch.x < injectionSwitch.y)) && (! (! (false || (false)))))), true, true, true)))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)), injectionSwitch)).y), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), false || (((injectionSwitch.x < injectionSwitch.y)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), false || (((injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), false || (((injectionSwitch.x < injectionSwitch.y))))), true, false)), (bool(bvec3(bool(_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), false || (((injectionSwitch.x < injectionSwitch.y))))), true, false))) && true)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), false || (((injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), false || (((injectionSwitch.x < injectionSwitch.y))))) || false))) || false)), _GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), ! (! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)))), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), bool(bvec4(! ((injectionSwitch.x < injectionSwitch.y)), false, false, false)))))), true)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat3x4(-27.34, -1.3, 447.163, 8.2, -6579.5123, -6.9, 4.3, -50.62, -630.107, -926.498, -6.8, 9703.2686)) : mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0))))), injectionSwitch)).x) / 1.0) < injectionSwitch.y)), true)), false, true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec4(_GLF_IDENTITY(false || (false), _GLF_IDENTITY(! (! (false || (false))), _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (true) || _GLF_IDENTITY(false, true && (false))), (injectionSwitch.x < injectionSwitch.y)) && (! (! (false || (false)))))), true, true, true)))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)), injectionSwitch)).y), _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), ! (! (((injectionSwitch.x < injectionSwitch.y))))), false || (((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))) || false)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), bool(bvec4(! ((injectionSwitch.x < injectionSwitch.y)), false, false, false)))))), true)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / 1.0, mix(float((injectionSwitch.x) / 1.0), float(_GLF_FUZZED(3771.7593)), bool(_GLF_IDENTITY(false, false || (false)))))) < injectionSwitch.y)), true)), false, true))), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(_GLF_IDENTITY(false || (false), _GLF_IDENTITY(! (! (false || (false))), _GLF_TRUE(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, true && (false))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) && (! (! _GLF_IDENTITY((false || (false)), false || ((false || (false)))))))), true, true, true)))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)), clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) / vec2(1.0, 1.0)), injectionSwitch)).y), _GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), false || (((injectionSwitch.x < injectionSwitch.y)))) || _GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, false || (false))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-9.8, 7012.0256)))).y) && true))), bool(bvec4(! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)), false, false, false)))))), true)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(true)), _GLF_FUZZED(417.260)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(6747.0050) : (injectionSwitch)[1]))), _GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(true, true)), bvec2(bvec3(bvec2(bvec2(true, true)), false)))))))))).x < injectionSwitch.y)), _GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, true)), bool(bvec4(bool(bvec3(true, false, true)), true, true, false))))) && true), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(1.8))), injectionSwitch.x))) / 1.0) < injectionSwitch.y)), true)), false, true))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec4(_GLF_IDENTITY(false || (false), _GLF_IDENTITY(! (! (false || (false))), _GLF_TRUE(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, true && (false))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)) && (! (! (false || (false)))))), true, _GLF_IDENTITY(true, ! (! (true))), true)))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))[1]))) / vec2(1.0, 1.0)), injectionSwitch)).y), _GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), (((injectionSwitch.x < injectionSwitch.y))) || false))))) || false)), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))))), bool(bvec4(! ((injectionSwitch.x < injectionSwitch.y)), false, false, false)))))), true)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, false || (false)), _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) < injectionSwitch.y)), true)), false, true)))), bool(bvec3(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec4(_GLF_IDENTITY(false || _GLF_IDENTITY((false), ((false)) || false), _GLF_IDENTITY(! (! (false || (false))), _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, true && (false))), (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, true && (false))), bool(bvec4(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, true && (false))), false, true, true)))) && true), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) && _GLF_IDENTITY((! (! (false || (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((! (! (false || (false)))), false || (_GLF_IDENTITY((! (! (false || (false)))), ! (! ((! (! (false || (false))))))))))))), true, true, true)))), _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)), injectionSwitch)).y), _GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), false || (((injectionSwitch.x < injectionSwitch.y)))) || false)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)), injectionSwitch)).y), _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), false || (((injectionSwitch.x < injectionSwitch.y)))) || false, ! (! (_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), ! (! (((injectionSwitch.x < injectionSwitch.y))))))) || false)))))), ! (_GLF_IDENTITY(! (! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x2(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)), (float(mat4x2(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0))) * 1.0)))), injectionSwitch)).y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false))))), false, true)), true && (bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false))))), false, true))))) || (((injectionSwitch.x < injectionSwitch.y)))) || false)))), (! (! (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(7160.2673), _GLF_FUZZED(-7.2)), bvec2(_GLF_IDENTITY(false, ! (! (false))), false))).x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)), injectionSwitch)).y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), false)))), false || (((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - length(vec3(0.0, 0.0, 0.0))) < injectionSwitch.y)))) || false))))) && true))))), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true)))))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), bool(bvec4(! ((injectionSwitch.x < injectionSwitch.y)), false, false, false)))))), true)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / 1.0, (true ? _GLF_IDENTITY((injectionSwitch.x), float(float((injectionSwitch.x)))) / 1.0 : _GLF_FUZZED(-5.0)))) < injectionSwitch.y)), true)), false, true)))), false, false))), false)))) || false))))))))))));
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       atomicStore(buf[next_virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, 0 | (4)), min(4, 4)));
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))))))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             do
              {
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y) && true)))))))
                return;
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              return;
            }
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           else
            {
            }
          }
        }
      }
     else
      {
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, 0.0, sqrt(0.0), 1.0, 0.0, abs(1.0), exp(0.0)), (true ? mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, 0.0, sqrt(0.0), 1.0, 0.0, abs(1.0), exp(0.0)) : _GLF_FUZZED(mat3(-98.06, 8.1, 4.7, -9.4, 969.206, -3.3, -4.0, 7.8, -0.6)))))).y)) || _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ((_GLF_IDENTITY(false, (false) || false))) || false)))))))))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         do
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(762.547) : injectionSwitch.y))))))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       return;
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         return;
        }
      }
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
   return;
  }
 subgroupBarrier();
 atomicStore(buf[virtual_gid], _GLF_IDENTITY(read, 0u | (_GLF_IDENTITY(read, (true ? read : _GLF_FUZZED(read))))), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) + 0)) << (0 | (1 ^ 1))), 64, 4);
 if(_GLF_DEAD(false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
