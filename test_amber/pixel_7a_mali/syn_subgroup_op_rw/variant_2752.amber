#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_8 {
 mat4x2 _f0;
 uvec4 _f1;
 ivec4 _f2;
 int _f3;
 uvec2 _f4;
 uvec3 _f5;
} ;

struct _GLF_struct_7 {
 ivec2 _f0;
 vec4 _f1;
} ;

struct _GLF_struct_9 {
 mat2x4 _f0;
 bool _f1;
 _GLF_struct_7 _f2;
 _GLF_struct_8 _f3;
 mat3x4 _f4;
} ;

struct _GLF_struct_6 {
 ivec4 _f0;
} ;

struct _GLF_struct_5 {
 mat2x3 _f0;
} ;

struct _GLF_struct_10 {
 _GLF_struct_5 _f0;
 _GLF_struct_6 _f1;
 mat3x2 _f2;
 mat2x4 _f3;
 uint subgroup_size;
 uvec3 _f4;
 _GLF_struct_9 _f5;
} ;

struct _GLF_struct_2 {
 mat2x3 _f0;
 vec3 _f1;
 uvec4 _f2;
 mat3x2 _f3;
 ivec3 _f4;
 uvec3 _f5;
 mat2x4 _f6;
} ;

struct _GLF_struct_1 {
 float _f0;
} ;

struct _GLF_struct_3 {
 mat3x4 _f0;
 bvec3 _f1;
 _GLF_struct_1 _f2;
 mat2x3 _f3;
 _GLF_struct_2 _f4;
} ;

struct _GLF_struct_0 {
 mat3x2 _f0;
 mat2x3 _f1;
 ivec2 _f2;
 vec2 _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_4 {
 int _f0;
 _GLF_struct_0 _f1;
 uint workgroup_size;
 _GLF_struct_3 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 _GLF_struct_10 _GLF_struct_replacement_10 = _GLF_struct_10(_GLF_struct_5(mat2x3(1.0)), _GLF_struct_6(ivec4(1)), mat3x2(1.0), mat2x4(1.0), gl_SubgroupSize, _GLF_IDENTITY(uvec3(1u), (uvec3(1u)) | uvec3(0u, 0u, 0u)), _GLF_struct_9(mat2x4(1.0), true, _GLF_struct_7(ivec2(1), vec4(1.0)), _GLF_struct_8(mat4x2(1.0), uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | _GLF_IDENTITY((1u), _GLF_IDENTITY(((1u)), (_GLF_IDENTITY(((1u)), (((1u))) - 0u)) | (((1u)))) - 0u)), (_GLF_IDENTITY(1u, 0u | _GLF_IDENTITY((1u), _GLF_IDENTITY(((1u)), (_GLF_IDENTITY(((1u)), (((1u))) - 0u)) | (((1u)))) - 0u))) | (_GLF_IDENTITY(1u, 0u | _GLF_IDENTITY((1u), _GLF_IDENTITY(((1u)), (_GLF_IDENTITY(((1u)), (((1u))) - 0u)) | (((1u)))) - 0u))))), ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, _GLF_IDENTITY(1, max(1, 1))), min(_GLF_IDENTITY(max(1, _GLF_IDENTITY(1, max(1, 1))), (max(1, _GLF_IDENTITY(1, max(1, 1)))) | (_GLF_IDENTITY(max(1, _GLF_IDENTITY(1, max(1, 1))), (false ? _GLF_FUZZED(15971) : max(1, _GLF_IDENTITY(1, max(1, 1))))))), max(1, _GLF_IDENTITY(1, max(1, 1))))))) | 0)), 1, _GLF_IDENTITY(uvec2(1u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), (true ? uvec2(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u), (true ? _GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u), min(uvec2(_GLF_IDENTITY(1u, _GLF_IDENTITY(~ (~ (1u)), (_GLF_IDENTITY(~ (~ (1u)), (~ (~ (1u))) - 0u)) * 1u)), 1u), uvec2(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u))) : _GLF_FUZZED(uvec2(19666u, 145464u))))), (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u), (true ? uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), ~ (~ (1u))), 1u) : _GLF_FUZZED(uvec2(19666u, 145464u)))))) | (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u), _GLF_IDENTITY((true ? uvec2(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u) : _GLF_FUZZED(uvec2(19666u, 145464u))), max(_GLF_IDENTITY((true ? uvec2(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u) : _GLF_FUZZED(uvec2(19666u, 145464u))), (false ? _GLF_FUZZED(uvec2(104239u, 70119u)) : (true ? uvec2(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u) : _GLF_FUZZED(uvec2(19666u, 145464u))))), _GLF_IDENTITY((true ? uvec2(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u) : _GLF_FUZZED(uvec2(19666u, 145464u))), uvec2(0u, 0u) + (_GLF_IDENTITY((true ? uvec2(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u) : _GLF_FUZZED(uvec2(19666u, 145464u))), ((true ? uvec2(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u) : _GLF_FUZZED(uvec2(19666u, 145464u)))) >> uvec2(0u, 0u))))))), max(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u), _GLF_IDENTITY((true ? uvec2(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u) : _GLF_FUZZED(uvec2(19666u, 145464u))), max(_GLF_IDENTITY((true ? uvec2(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u) : _GLF_FUZZED(uvec2(19666u, 145464u))), (false ? _GLF_FUZZED(uvec2(104239u, 70119u)) : (true ? uvec2(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u) : _GLF_FUZZED(uvec2(19666u, 145464u))))), _GLF_IDENTITY((true ? uvec2(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u) : _GLF_FUZZED(uvec2(19666u, 145464u))), uvec2(0u, 0u) + (_GLF_IDENTITY((true ? uvec2(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u) : _GLF_FUZZED(uvec2(19666u, 145464u))), ((true ? uvec2(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u) : _GLF_FUZZED(uvec2(19666u, 145464u)))) >> uvec2(0u, 0u))))))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u), _GLF_IDENTITY((true ? uvec2(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u) : _GLF_FUZZED(uvec2(19666u, 145464u))), max(_GLF_IDENTITY((true ? uvec2(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u) : _GLF_FUZZED(uvec2(19666u, 145464u))), (false ? _GLF_FUZZED(uvec2(104239u, 70119u)) : (true ? uvec2(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u) : _GLF_FUZZED(uvec2(19666u, 145464u))))), _GLF_IDENTITY((true ? uvec2(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u) : _GLF_FUZZED(uvec2(19666u, 145464u))), uvec2(0u, 0u) + (_GLF_IDENTITY((true ? uvec2(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u) : _GLF_FUZZED(uvec2(19666u, 145464u))), ((true ? uvec2(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u) : _GLF_FUZZED(uvec2(19666u, 145464u)))) >> uvec2(0u, 0u)))))))))))))) : _GLF_FUZZED(uvec2(subgroup_id)))), (uvec2(1u)) | (uvec2(1u))) : _GLF_IDENTITY(_GLF_FUZZED(uvec2(139459u, 37513u)), clamp(_GLF_FUZZED(uvec2(139459u, 37513u)), _GLF_FUZZED(uvec2(139459u, 37513u)), _GLF_FUZZED(uvec2(139459u, 37513u)))))), uvec3(1u)), mat3x4(1.0)));
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, max(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups)).x, _GLF_IDENTITY(gl_NumWorkGroups.x, 0u ^ (gl_NumWorkGroups.x))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, (false ? _GLF_FUZZED(0.3) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(7624.0630)), float(injectionSwitch.y), bool(true))), (injectionSwitch.x > injectionSwitch.y) && true)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(7624.0630)), float(injectionSwitch.y), bool(true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y) && true)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(7624.0630)), float(injectionSwitch.y), bool(true)), min(mix(float(_GLF_FUZZED(7624.0630)), float(injectionSwitch.y), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(7624.0630)), float(injectionSwitch.y), bool(true)), mix(float(mix(float(_GLF_FUZZED(7624.0630)), float(injectionSwitch.y), bool(true))), float(_GLF_FUZZED(-3.8)), bool(false)))))), (injectionSwitch.x > injectionSwitch.y) && true)))))), bool(bvec3(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(7624.0630)), float(injectionSwitch.y), bool(true))), (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, sqrt(abs(1.0)), length(0.0), 1.0, 0.0, round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))), 1.0, 0.0, cos(0.0), sqrt(log(1.0)), 1.0, length(0.0)))) > injectionSwitch.y) && true))), _GLF_IDENTITY(bool(bool((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(7624.0630)), float(injectionSwitch.y), bool(true))), (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, sqrt(abs(1.0)), length(0.0), 1.0, 0.0, round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))), 1.0, 0.0, cos(0.0), sqrt(log(1.0)), 1.0, length(0.0)))) > injectionSwitch.y) && true))))), bool(bvec4(bool(bool((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(7624.0630)), float(injectionSwitch.y), bool(true))), (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, sqrt(abs(1.0)), length(0.0), 1.0, 0.0, round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))), 1.0, 0.0, cos(0.0), sqrt(log(1.0)), 1.0, length(0.0)))) > injectionSwitch.y) && true))))), true, true, true))))))), false, false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(1, _GLF_struct_0(mat3x2(1.0), mat2x3(1.0), ivec2(1), vec2(1.0), uvec2(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, 1u))) << 0u))), _GLF_IDENTITY(gl_WorkGroupSize, (uvec3(75958u, 146657u, 12541u) & uvec3(0u, 0u, 0u)) | (gl_WorkGroupSize)).x, _GLF_struct_3(mat3x4(1.0), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (true) || false)), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (true) || false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(true, (true) || false))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(true, (true) || false))), true))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (true) || false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(true, (true) || false))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(true, (true) || false))), true))))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (true) || false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(true, (true) || false))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, true && (false))))), true))))))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (true) || false)), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))))), false))), false))), _GLF_struct_1(1.0), mat2x3(1.0), _GLF_struct_2(mat2x3(1.0), vec3(1.0), uvec4(1u), mat3x2(1.0), ivec3(1), uvec3(1u), mat2x4(1.0))));
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[_GLF_IDENTITY(1, (1) ^ 0)], gl_WorkGroupID[2])).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_struct_replacement_4.workgroup_size * _GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec4(workgroup_id, 0u, 1u, 0u), clamp(uvec4(workgroup_id, 0u, 1u, 0u), uvec4(workgroup_id, 0u, _GLF_IDENTITY(1u, uint(uvec2(1u, 1u))), 0u), uvec4(workgroup_id, 0u, 1u, 0u)))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_10.subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u)) ^ (_GLF_struct_replacement_10.subgroup_size), max(_GLF_IDENTITY(_GLF_IDENTITY(0u ^ (_GLF_struct_replacement_10.subgroup_size), (_GLF_IDENTITY(0u ^ (_GLF_struct_replacement_10.subgroup_size), (0u ^ (_GLF_struct_replacement_10.subgroup_size)) ^ 0u)) - 0u), clamp(0u ^ (_GLF_struct_replacement_10.subgroup_size), 0u ^ (_GLF_struct_replacement_10.subgroup_size), _GLF_IDENTITY(0u ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_10.subgroup_size, (_GLF_struct_replacement_10.subgroup_size) - 0u)), 1u * ((_GLF_IDENTITY(_GLF_struct_replacement_10.subgroup_size, (_GLF_struct_replacement_10.subgroup_size) - 0u)))), _GLF_IDENTITY(0u + (0u ^ (_GLF_struct_replacement_10.subgroup_size)), _GLF_IDENTITY(clamp(0u + (0u ^ (_GLF_struct_replacement_10.subgroup_size)), _GLF_IDENTITY(0u + (0u ^ (_GLF_struct_replacement_10.subgroup_size)), (0u + (0u ^ (_GLF_struct_replacement_10.subgroup_size))) + 0u), _GLF_IDENTITY(0u + (0u ^ (_GLF_struct_replacement_10.subgroup_size)), (0u + (0u ^ (_GLF_struct_replacement_10.subgroup_size))) ^ 0u)), (clamp(0u + (_GLF_IDENTITY(0u ^ (_GLF_struct_replacement_10.subgroup_size), (true ? 0u ^ (_GLF_struct_replacement_10.subgroup_size) : _GLF_FUZZED(workgroup_base)))), _GLF_IDENTITY(0u + (0u ^ (_GLF_struct_replacement_10.subgroup_size)), (0u + (0u ^ (_GLF_IDENTITY(_GLF_struct_replacement_10.subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_10.subgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_10.subgroup_size, (true ? _GLF_struct_replacement_10.subgroup_size : _GLF_FUZZED(workgroup_base))))))) ^ 0u)))) + 0u), _GLF_IDENTITY(0u + (0u ^ (_GLF_struct_replacement_10.subgroup_size)), _GLF_IDENTITY((0u + (0u ^ (_GLF_struct_replacement_10.subgroup_size))), (_GLF_IDENTITY((0u + (0u ^ (_GLF_struct_replacement_10.subgroup_size))), ~ (_GLF_IDENTITY(~ ((0u + (0u ^ (_GLF_struct_replacement_10.subgroup_size)))), clamp(~ ((0u + (0u ^ (_GLF_struct_replacement_10.subgroup_size)))), ~ ((0u + (0u ^ (_GLF_struct_replacement_10.subgroup_size)))), ~ ((0u + (0u ^ (_GLF_struct_replacement_10.subgroup_size))))))))) << 0u) ^ 0u))) / 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_struct_replacement_10.subgroup_size, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_struct_replacement_10.subgroup_size, max(_GLF_struct_replacement_10.subgroup_size, _GLF_struct_replacement_10.subgroup_size))), (uint(_GLF_IDENTITY(_GLF_struct_replacement_10.subgroup_size, max(_GLF_struct_replacement_10.subgroup_size, _GLF_struct_replacement_10.subgroup_size)))) | 0u)))), (0u ^ (_GLF_struct_replacement_10.subgroup_size)) >> 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_struct_replacement_10.subgroup_size, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_struct_replacement_10.subgroup_size, max(_GLF_struct_replacement_10.subgroup_size, _GLF_struct_replacement_10.subgroup_size))), (uint(_GLF_IDENTITY(_GLF_struct_replacement_10.subgroup_size, max(_GLF_struct_replacement_10.subgroup_size, _GLF_struct_replacement_10.subgroup_size)))) | 0u)))), (0u ^ (_GLF_struct_replacement_10.subgroup_size)) >> 0u), (_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_struct_replacement_10.subgroup_size, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_struct_replacement_10.subgroup_size, max(_GLF_struct_replacement_10.subgroup_size, _GLF_struct_replacement_10.subgroup_size))), (uint(_GLF_IDENTITY(_GLF_struct_replacement_10.subgroup_size, max(_GLF_struct_replacement_10.subgroup_size, _GLF_struct_replacement_10.subgroup_size)))) | 0u)))), (0u ^ (_GLF_struct_replacement_10.subgroup_size)) >> 0u)) | 0u), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_struct_replacement_10.subgroup_size, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_struct_replacement_10.subgroup_size, max(_GLF_struct_replacement_10.subgroup_size, _GLF_struct_replacement_10.subgroup_size))), (uint(_GLF_IDENTITY(_GLF_struct_replacement_10.subgroup_size, max(_GLF_struct_replacement_10.subgroup_size, _GLF_struct_replacement_10.subgroup_size)))) | 0u)))), (0u ^ (_GLF_struct_replacement_10.subgroup_size)) >> 0u))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, ~ (_GLF_IDENTITY(~ (workgroup_base + subgroup_base + subgroup_local_id), uint(uvec3(~ (workgroup_base + subgroup_base + subgroup_local_id), 1u, 1u)))));
 uint next_virtual_gid = workgroup_base + subgroup_base + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(74192) : 1)), max(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(74192) : 1)), 0u | (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(74192) : 1)), 0u | (subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(74192) : 1)))))), subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(74192) : 1))))), (true ? (subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(74192) : 1))) : _GLF_FUZZED(_GLF_IDENTITY(56744u, (56744u) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) % _GLF_struct_replacement_10.subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) || false)))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), true && (injectionSwitch.x > injectionSwitch.y)))) || false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), virtual_gid)), (virtual_gid) | (virtual_gid)), clamp(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))) | (virtual_gid)), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)))), (uint(uint(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid))))) | (uint(uint(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid))))))), _GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid))))) ^ 0u)], _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) | (4)), _GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) + 0))), 4))) ^ (0 | 0), (_GLF_IDENTITY((4) ^ _GLF_IDENTITY((0 | 0), (_GLF_IDENTITY((0 | 0), (_GLF_IDENTITY((0 | 0), min((0 | 0), (_GLF_IDENTITY(0, (0) + 0) | _GLF_IDENTITY(0, (0) / 1))))) - 0)) / _GLF_IDENTITY(1, max(1, 1))), _GLF_IDENTITY(((4) ^ (0 | 0)) >> 0, int(ivec4(((4) ^ (0 | 0)) >> 0, 1, 1, 0))))) - 0)), 64, 2);
 if(_GLF_IDENTITY((subgroup_local_id % 2) == 0, ! (! ((subgroup_local_id % 2) == 0))))
  {
   subgroupAll(false);
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false))))
        return;
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))) && true))))
    return;
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), bool(bvec2(bool(bvec4(false, false, false, true)), true))))), _GLF_IDENTITY(true && (! (false)), (_GLF_IDENTITY(true && (! (false)), (true && (! (false))) || false)) && true)))), true, true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec3(bvec3(bvec3(false, true, false))))))))), (_GLF_IDENTITY(false, ! (! (false)))) || false)) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, (false) || false) || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))), false || ((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, (false) || false) || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || false, bool(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)) || false, true && (_GLF_IDENTITY((_GLF_DEAD(false)) || false, ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))))), false, false)))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), ! (! (bool(bvec4(false, true, true, true))))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec2(injectionSwitch.x, 1.0), (vec2(injectionSwitch.x, 1.0)) * mat2(1.0)))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false)))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && true))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), false || (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))), false, true, true)))))))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   subgroupAll(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), bool(bvec4(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))) && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, (false) || false))))));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, false)), bool(bool(bool(bvec3(_GLF_DEAD(false), true, false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).x > injectionSwitch.y)) && true))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5304.1220), _GLF_IDENTITY((injectionSwitch)[1], float(mat2((injectionSwitch)[1], 1.0, 0.0, 1.0)))), vec2((injectionSwitch)[0], _GLF_FUZZED(-81.54)), bvec2(true, false))).y), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(vec2(-7.2, -2395.5280)) : (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))).x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true, true)), bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(vec2(-7.2, -2395.5280)) : (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))).x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true, true))))))), false)))), true && (bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5304.1220), _GLF_IDENTITY((injectionSwitch)[1], float(mat2((injectionSwitch)[1], 1.0, 0.0, 1.0)))), vec2((injectionSwitch)[0], _GLF_FUZZED(-81.54)), bvec2(true, false))).y), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(vec2(-7.2, -2395.5280)) : (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))).x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true, true)), bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(vec2(-7.2, -2395.5280)) : (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))).x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true, true))))))), false)))))), (_GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 1.0, exp(0.0), exp(0.0), 1.0, cos(0.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(log(cos(0.0)), clamp(_GLF_IDENTITY(log(cos(0.0)), float(mat3(log(cos(0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))), log(cos(0.0)), log(cos(0.0)))), 1.0, determinant(mat3(0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)))), clamp(_GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 1.0, exp(0.0), exp(0.0), 1.0, cos(0.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0, 1.0, log(cos(0.0)), 1.0, determinant(mat3(0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 1.0, 0.0, sqrt(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)))), 0.0, _GLF_IDENTITY(dot(vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec2(1.0, 0.0)), dot(vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec2(1.0, 0.0))), abs(0.0), 1.0, 0.0, 1.0, 0.0))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), 0.0)))), clamp(float(mat4x3(injectionSwitch.x, 1.0, exp(0.0), exp(0.0), 1.0, cos(0.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0, 1.0, log(cos(0.0)), 1.0, determinant(mat3(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), sin(0.0), 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)))), float(mat4x3(injectionSwitch.x, 1.0, exp(0.0), exp(0.0), 1.0, cos(0.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0, 1.0, log(cos(0.0)), 1.0, determinant(mat3(0.0, 0.0, _GLF_IDENTITY(sin(0.0), clamp(_GLF_IDENTITY(sin(0.0), clamp(sin(0.0), _GLF_IDENTITY(sin(0.0), (sin(0.0)) - 0.0), sin(0.0))), sin(0.0), sin(0.0))), 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)))), float(mat4x3(injectionSwitch.x, 1.0, exp(0.0), exp(0.0), 1.0, cos(0.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0, 1.0, log(cos(0.0)), 1.0, determinant(mat3(0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED((-498.846 + 4205.1031))), bool(false))), 0.0)))))), _GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 1.0, exp(0.0), exp(0.0), 1.0, cos(0.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, log(cos(0.0)), 1.0, determinant(mat3(0.0, 0.0, sin(0.0), 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-280.858)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)))), (true ? float(mat4x3(injectionSwitch.x, 1.0, exp(0.0), exp(0.0), 1.0, cos(0.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.5)), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(true))), 0.0, 0.0)), 1.0, 1.0, log(cos(0.0)), 1.0, determinant(mat3(0.0, 0.0, sin(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))), 1.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(_GLF_IDENTITY(0.0, (0.0) - 0.0)), (true ? float(_GLF_IDENTITY(0.0, (0.0) - 0.0)) : _GLF_FUZZED(-8.5))))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)))) : _GLF_FUZZED(5.9))), float(mat4x3(injectionSwitch.x, 1.0, exp(0.0), exp(0.0), 1.0, cos(0.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(vec4(0.0, 0.0, 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(vec3(-6.6, -67.23, -3.0)[1]) : _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)))), 0.0, 0.0)), 1.0, 1.0, log(cos(0.0)), 1.0, determinant(mat3(0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))))))) > injectionSwitch.y), true, true)), bool(bool(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) * round(length(normalize(vec3(1.0, 1.0, 1.0))))))).x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0, 1.0))))) + vec2(0.0, 0.0)).y), false || ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) * round(length(normalize(vec3(1.0, 1.0, 1.0))))))).x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0, 1.0))))) + vec2(0.0, 0.0)).y))), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) + vec2(0.0, 0.0)).y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) + vec2(0.0, 0.0)).y), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) + vec2(0.0, 0.0)).y), false)))) || false), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(vec3(4.5, 1529.7306, 82.19).y)), float(1.0), bool(true))), 1.0))) + vec2(0.0, 0.0)).y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) + vec2(0.0, 0.0)).y), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), vec2(1.0, 1.0))))))) + vec2(0.0, 0.0)).y, (false ? _GLF_FUZZED(4.3) : _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), vec2(1.0, 1.0))))))) + vec2(0.0, 0.0)).y))), false)))) || false)))) || false), true, true)))))) || false), true && _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)), bool(bool(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)), bool(bool(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), true, true))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)), bool(bool(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))))), false || (_GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)), bool(bool(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))))))) || false)))) || false)), bool(bvec3((_GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)), (_GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) > injectionSwitch.y), true, _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, true && (true))))))), bool(bool(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))))) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))
    return;
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), ! (! (bool(false))))))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), ! (! (bool(false))))))), false, true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), ! (! (bool(false))))))), false, true), false))))))))))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), false, true))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))) || false))), bool(bvec3(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), false, true)))) || false)))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-8877.1629)), vec2(_GLF_FUZZED(0.5), (injectionSwitch)[_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) | (~ (1)))))))]), bvec2(false, true))).y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0)))), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))))) - vec2(0.0, 0.0)).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0)))), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))))) - vec2(0.0, 0.0)).x > injectionSwitch.y))), (bool(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) * vec2(1.0, 1.0)), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(vec2(69.45, 121.012)) : (injectionSwitch))), (injectionSwitch))), mat2(1.0) * _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_IDENTITY(_GLF_FUZZED((56.12 + 9.4)), (_GLF_FUZZED((56.12 + 9.4))) - sin(0.0)), ((injectionSwitch))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(-4709.8561)), bvec2(true, false))), mat2(1.0) * (injectionSwitch)))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) * vec2(1.0, 1.0)), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(vec2(69.45, 121.012)) : (injectionSwitch))), (injectionSwitch))), mat2(1.0) * _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_IDENTITY(_GLF_FUZZED((56.12 + 9.4)), (_GLF_FUZZED((56.12 + 9.4))) - sin(0.0)), ((injectionSwitch))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(-4709.8561)), bvec2(true, false))), mat2(1.0) * (injectionSwitch)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) * vec2(1.0, 1.0)), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(vec2(69.45, 121.012)) : (injectionSwitch))), (injectionSwitch))), mat2(1.0) * _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_IDENTITY(_GLF_FUZZED((56.12 + 9.4)), (_GLF_FUZZED((56.12 + 9.4))) - sin(0.0)), ((injectionSwitch))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(-4709.8561)), bvec2(true, false))), mat2(1.0) * (injectionSwitch))))))) - vec2(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY((0.0) + 0.0, determinant(mat4(0.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)) + ((_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) + 0.0)), mix(float(_GLF_FUZZED(804.514)), float((_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x4(0.0, 0.0, abs(0.0), 1.0, 0.0, 1.0, 1.0, sqrt(0.0), 1.0, exp(0.0), 0.0, 0.0), (true ? mat3x4(0.0, 0.0, abs(0.0), 1.0, 0.0, 1.0, 1.0, sqrt(0.0), 1.0, exp(0.0), 0.0, 0.0) : _GLF_FUZZED(mat3x4(-5.5, 5.2, -873.292, -4.2, -2.0, 1095.6238, 3.4, -6.8, -690.377, -2.7, 108.099, -17.98))))))) + 0.0), bool(true)))), _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0)).x > injectionSwitch.y)) || _GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec2(bvec2((false), false)))))) && true))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[0], (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[1]), vec2(_GLF_FUZZED(200.223), _GLF_FUZZED(-451.906)), bvec2(false, false))), injectionSwitch)).x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[0], (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[1]), vec2(_GLF_FUZZED(200.223), _GLF_FUZZED(-451.906)), bvec2(false, false))), injectionSwitch)).x > injectionSwitch.y), (_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[0], (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[1]), vec2(_GLF_FUZZED(200.223), _GLF_FUZZED(-451.906)), bvec2(false, false))), injectionSwitch)).x > injectionSwitch.y), (bool(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[0], (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[1]), vec2(_GLF_FUZZED(200.223), _GLF_FUZZED(-451.906)), bvec2(false, false))), injectionSwitch)).x > injectionSwitch.y)) || false)) && true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[0], (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[1]), vec2(_GLF_FUZZED(200.223), _GLF_FUZZED(-451.906)), bvec2(false, false))), injectionSwitch)).x > injectionSwitch.y), (_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[0], (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[1]), vec2(_GLF_FUZZED(200.223), _GLF_FUZZED(-451.906)), bvec2(false, false))), injectionSwitch)).x > injectionSwitch.y), (bool(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[0], (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[1]), vec2(_GLF_FUZZED(200.223), _GLF_FUZZED(-451.906)), bvec2(false, false))), injectionSwitch)).x > injectionSwitch.y)) || false)) && true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_IDENTITY(bool(bvec2(bool(bool(injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(_GLF_IDENTITY(bvec2(bool(bool(injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bool(injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec3(bvec2(bool(bool(injectionSwitch.x > injectionSwitch.y)), true), false))), false)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bool(injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec3(bvec2(bool(bool(injectionSwitch.x > injectionSwitch.y)), true), false))), false))))))))))), bool(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), max((injectionSwitch) - vec2(0.0, 0.0), (injectionSwitch) - vec2(0.0, 0.0)))), injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(bool(bool(injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec2(bool(bool(injectionSwitch.x > injectionSwitch.y)), true)))))))))) || _GLF_IDENTITY(false, (false) && true)))))))
    barrier();
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true))))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true))))))), bool(bvec4((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))) && true))))
    barrier();
  }
 atomicStore(buf[virtual_gid], _GLF_IDENTITY(read, ~ (~ (_GLF_IDENTITY(read, (read) >> 0u)))), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))))))), false, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, cos(0.0))))))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), true && (! ((false)))))), ! (! (! (false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), ! (! (! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false)))))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, max(1, 1))])).y), false, false, true))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 0.0, 0.0, 1.0))).x > injectionSwitch.y)) || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, ! (! ((injectionSwitch.x > injectionSwitch.y) || false))), true, false, false))))) || false), bool(bool(injectionSwitch.x > injectionSwitch.y)))) || false)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)), (! (false)) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY((! (false)) && true, ((! (false)) && true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (false)) && true))), (_GLF_IDENTITY(false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (false)) && true))), (false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (false)) && true)))) && true)) || false))), (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) || false)), (! (false)) && true)), _GLF_IDENTITY(false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (false)) && true))), true && (false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, (false) || false))))))), (! (false)) && true)))))))) && true))))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
