#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bool(! (! (false)))), bool(bvec4(bool(bool(! (! (false)))), false, true, false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-33.23, -1.0)) : injectionSwitch), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4((false ? _GLF_FUZZED(vec2(-33.23, -1.0)) : injectionSwitch), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))), cos(0.0), 0.0, 1.0, length(vec2(0.0, 0.0))), (mat2x4((false ? _GLF_FUZZED(vec2(-33.23, -1.0)) : injectionSwitch), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))), cos(0.0), 0.0, 1.0, length(_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * mat2(1.0))))) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (true ? vec2(_GLF_IDENTITY(mat2x4((false ? _GLF_FUZZED(vec2(-33.23, -1.0)) : injectionSwitch), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))), cos(0.0), 0.0, 1.0, length(vec2(0.0, 0.0))), (mat2x4((false ? _GLF_FUZZED(vec2(-33.23, _GLF_IDENTITY(-1.0, float(vec4(-1.0, 0.0, 1.0, 1.0))))) : injectionSwitch), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))), cos(0.0), 0.0, 1.0, length(vec2(0.0, 0.0)))) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) : _GLF_FUZZED(injectionSwitch))))) : _GLF_FUZZED(injectionSwitch), _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-33.23, -1.0)) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(injectionSwitch)) * mat2(1.0), min(_GLF_IDENTITY(_GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-33.23, -1.0)) : injectionSwitch)) : _GLF_FUZZED(injectionSwitch)) * mat2(1.0), min((true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-33.23, -1.0)), vec2(vec3(_GLF_FUZZED(vec2(-33.23, -1.0)), 1.0))) : injectionSwitch)) : _GLF_FUZZED(injectionSwitch)) * mat2(1.0), (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-33.23, -1.0)) : injectionSwitch)) : _GLF_FUZZED(injectionSwitch)) * mat2(1.0))), min(_GLF_IDENTITY(_GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-33.23, -1.0)) : injectionSwitch)) : _GLF_FUZZED(injectionSwitch)) * mat2(1.0), min((true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-33.23, -1.0)) : injectionSwitch)) : _GLF_FUZZED(injectionSwitch)) * mat2(1.0), (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-33.23, -1.0)) : injectionSwitch)) : _GLF_FUZZED(injectionSwitch)) * mat2(1.0))), mix(vec2((_GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-33.23, -1.0)) : injectionSwitch)) : _GLF_FUZZED(injectionSwitch)) * mat2(1.0), min((true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-33.23, -1.0)) : injectionSwitch)) : _GLF_FUZZED(injectionSwitch)) * mat2(1.0), (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-33.23, -1.0)) : injectionSwitch), mix(vec2(_GLF_FUZZED(3.4), _GLF_FUZZED(-624.920)), vec2(((false ? _GLF_FUZZED(vec2(-33.23, -1.0)) : injectionSwitch))[0], ((false ? _GLF_FUZZED(vec2(-33.23, -1.0)) : injectionSwitch))[1]), bvec2(true, true)))) : _GLF_FUZZED(injectionSwitch)) * mat2(1.0))))[0], _GLF_FUZZED(3.3)), vec2(_GLF_FUZZED(-2.7), (_GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-33.23, -1.0)) : injectionSwitch)) : _GLF_FUZZED(injectionSwitch)) * mat2(1.0), _GLF_IDENTITY(min((true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-33.23, -1.0)) : injectionSwitch)) : _GLF_FUZZED(injectionSwitch)) * mat2(1.0), (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-33.23, -1.0)) : injectionSwitch)) : _GLF_FUZZED(injectionSwitch)) * mat2(1.0)), vec2(mat3x4(min((true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-33.23, -1.0)) : injectionSwitch)) : _GLF_FUZZED(injectionSwitch)) * mat2(1.0), (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-33.23, -1.0)) : injectionSwitch)) : _GLF_FUZZED(injectionSwitch)) * mat2(1.0)), 0.0, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), (dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0))) - 0.0)), sin(0.0), log(sqrt(1.0)), 1.0, 1.0, log(1.0))))))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-33.23, -1.0)) : injectionSwitch)) : _GLF_FUZZED(injectionSwitch)) * mat2(1.0), min(_GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-33.23, -1.0)) : injectionSwitch)) : _GLF_FUZZED(injectionSwitch)) * mat2(1.0), clamp((true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-33.23, -1.0)) : injectionSwitch)) : _GLF_FUZZED(injectionSwitch)) * mat2(1.0), (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-33.23, -1.0)) : injectionSwitch)) : _GLF_FUZZED(injectionSwitch)) * mat2(1.0), (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-33.23, -1.0)) : injectionSwitch)) : _GLF_FUZZED(injectionSwitch)) * mat2(1.0))), (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-33.23, -1.0)) : injectionSwitch)) : _GLF_FUZZED(injectionSwitch)) * mat2(1.0))))), (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-33.23, -1.0)) : injectionSwitch)) : _GLF_FUZZED(injectionSwitch)) * mat2(1.0)))))).y))), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), false || (bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))))) && true)))))), true && (false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), false || (bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))))) && true))))))))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))))))), _GLF_IDENTITY(bool(bvec4(true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(4.5), _GLF_FUZZED(18.97)), bvec2(false, false))).x > injectionSwitch.y) && true), (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), min(_GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), ((injectionSwitch) / vec2(1.0, 1.0)) * vec2(1.0, 1.0)), _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), min((injectionSwitch) / vec2(1.0, 1.0), (injectionSwitch) / vec2(1.0, 1.0)))))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(4.5), _GLF_FUZZED(18.97)), bvec2(false, false))).x > injectionSwitch.y) && true), (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), min(_GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), ((injectionSwitch) / vec2(1.0, 1.0)) * vec2(1.0, 1.0)), _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), min((injectionSwitch) / vec2(1.0, 1.0), (injectionSwitch) / vec2(1.0, 1.0)))))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))) || false)))))), false, false, true)), (bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, true)), (_GLF_IDENTITY(bool(bvec3(true, false, true)), (bool(bvec3(true, false, true))) || _GLF_IDENTITY(false, (false) || false))) && true)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))) && true)))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, ! (! (false))))), false || (! ((_GLF_IDENTITY(false, ! (! (false))))))))), (! (_GLF_IDENTITY(false, ! (! (false))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4(injectionSwitch.x, length(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), cos(0.0), 0.0, 1.0, abs(1.0), 0.0, tan(0.0), 1.0)), (false ? _GLF_FUZZED(507.583) : float(mat4(injectionSwitch.x, length(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), cos(0.0), 0.0, 1.0, abs(1.0), 0.0, tan(0.0), 1.0))))) < injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, round(length(normalize(vec2(1.0, 1.0)))) * (injectionSwitch.x)) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false, false, true))) || false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec4(false, false, false, false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(-321.975)), float(_GLF_IDENTITY(injectionSwitch[0], float(mat4x3(injectionSwitch[0], sqrt(1.0), 0.0, round(length(normalize(1.0))), 1.0, 0.0, 1.0, 1.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0 * (injectionSwitch[0])), injectionSwitch[1])).y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(exp(vec2(0.0, 0.0)), (exp(vec2(0.0, 0.0))) / vec2(1.0, 1.0))), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (true ? _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), mat2(1.0) * (injectionSwitch))) : _GLF_FUZZED(vec2(134.077, -2.9))))).y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3.5), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(4.9)), bvec2(true, false))).x > injectionSwitch.y, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))) - 0.0) > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false))), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(((5.5 - -5.2)))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))) || false)))), false || ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(((5.5 - -5.2)))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))) || false))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(((5.5 - -5.2)))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))) || false)))), false || ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(((5.5 - -5.2)))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))) || false))))))), bool(_GLF_IDENTITY(bvec3((! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(((5.5 - -5.2)))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))) || false)))), false || ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(((5.5 - -5.2)))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))) || false))))))), false, false), bvec3(bvec3(bvec3((! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(((5.5 - -5.2)))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))) || false)))), false || ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(((5.5 - -5.2)))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))) || false))))))), false, false)))))), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(((5.5 - -5.2)))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))) || false)))), false || ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(((5.5 - -5.2)))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))) || false))))))), bool(_GLF_IDENTITY(bvec3((! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(((5.5 - -5.2)))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))) || false)))), false || ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(((5.5 - -5.2)))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))) || false))))))), false, false), bvec3(bvec3(bvec3((! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(((5.5 - -5.2)))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))) || false)))), false || ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(((5.5 - -5.2)))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))) || false))))))), false, false)))))), true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(((5.5 - -5.2)))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))) || false)))), false || ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(((5.5 - -5.2)))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))) || false))))))), bool(_GLF_IDENTITY(bvec3((! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(((5.5 - -5.2)))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))) || false)))), false || ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(((5.5 - -5.2)))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))) || false))))))), false, false), bvec3(bvec3(bvec3((! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(((5.5 - -5.2)))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))) || false)))), false || ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(((5.5 - -5.2)))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))) || false))))))), false, false)))))), true, false))), true)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec2((! (false)), _GLF_IDENTITY(true, bool(bvec2(true, false)))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))))), false || (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))))))))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 0.0)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), true && ((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2.7), _GLF_FUZZED(901.927)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2.7), _GLF_FUZZED(901.927)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y)), ! (! (bool((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2.7), _GLF_FUZZED(901.927)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y)))))))))))) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bool(_GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bool((! (false))), (bool((! (false)))) && true)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, true && (false)))), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, true && (false)))), bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, true && (false)))), true))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, 0.0)), vec2(_GLF_IDENTITY(vec3(vec2(mat2(injectionSwitch, 1.0, 0.0)), 0.0), vec3(mat3x2(vec3(vec2(mat2(injectionSwitch, 1.0, 0.0)), 0.0), 1.0, 0.0, 0.0)))))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5413.3896), _GLF_FUZZED(float(_GLF_IDENTITY(63144u, (_GLF_IDENTITY(63144u, ~ (~ (63144u)))) ^ 0u)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-1.1)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false))))))) || false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 1.0), mat3(1.0) * (mat2x3(injectionSwitch, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 1.0))))).y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0))), injectionSwitch.x)) > injectionSwitch.y)))), false)))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(5349.2644)), vec2(_GLF_FUZZED(-6.6), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).y), ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(5349.2644)), vec2(_GLF_FUZZED(-6.6), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(5349.2644)), vec2(_GLF_FUZZED(-6.6), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), mix(vec2(_GLF_FUZZED((-1.9)), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(5349.2644)), vec2(_GLF_FUZZED(-6.6), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))[1]), vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(5349.2644)), vec2(_GLF_FUZZED(-6.6), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))[0], _GLF_FUZZED(10.08)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(5349.2644)), vec2(_GLF_FUZZED(-6.6), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))).y)) || false)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true, false)))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) >> 0u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, clamp(workgroup_size * workgroup_id, workgroup_size * workgroup_id, workgroup_size * workgroup_id));
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uint(5u) : _GLF_FUZZED(workgroup_base))), uint(5u)))), (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, (workgroup_id) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))) : 0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u)))))), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))) ^ 0u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (_GLF_IDENTITY(0u, ~ (~ (0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) << 0u)))), 1u * (_GLF_IDENTITY(0u, ~ (~ (0u))))))) >> _GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec3(0u, (1u & 1u), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)) * (_GLF_ZERO(0.0, injectionSwitch.x))))))), (_GLF_IDENTITY(0u, uint(uvec3(0u, (1u & 1u), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)) * (_GLF_ZERO(0.0, injectionSwitch.x)))))))) | (_GLF_IDENTITY(0u, uint(uvec3(0u, (1u & 1u), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)) * (_GLF_ZERO(0.0, injectionSwitch.x))))))))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(5u, max(5u, 5u))))), uint(5u))) ^ _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size))))) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) - 0u))) | (subgroup_local_id));
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), false))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), false))), false, _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true))), (_GLF_DEAD(false)) || false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, false, true)), bool(bvec3(bool(bvec4(_GLF_DEAD(false), true, false, true)), true, false)))), bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true)), true))))), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), bool(bvec2((_GLF_IDENTITY(false, (false) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true)), bool(bvec3(bool(bvec4(_GLF_DEAD(false), true, false, _GLF_IDENTITY(true, false || (true)))), true, false)))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, false || _GLF_IDENTITY((true), ((true)) && true)), true)), (bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true)), true))) || false))), ! (! (true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, false, true)), bool(bvec3(bool(bvec4(_GLF_DEAD(false), true, false, true)), true, false)))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, true)))), _GLF_IDENTITY(true, false || (true)), true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, false, true)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, false, true)), true, false)))), bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true)), true))))))))))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), bool(bvec2((_GLF_IDENTITY(false, (false) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true)), bool(bvec3(bool(bvec4(_GLF_DEAD(false), true, false, _GLF_IDENTITY(true, false || (true)))), true, false)))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, false || _GLF_IDENTITY((true), ((true)) && true)), true)), (bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true)), true))) || false))), ! (! (true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, false, true)), bool(bvec3(bool(bvec4(_GLF_DEAD(false), true, false, true)), true, false)))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, true)))), _GLF_IDENTITY(true, false || (true)), true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, false, true)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, false, true)), true, false)))), bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true)), true)))))))))))), bool(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), bool(bvec2((_GLF_IDENTITY(false, (false) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true)), bool(bvec3(bool(bvec4(_GLF_DEAD(false), true, false, _GLF_IDENTITY(true, false || (true)))), true, false)))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, false || _GLF_IDENTITY((true), ((true)) && true)), true)), (bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true)), true))) || false))), ! (! (true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, false, true)), bool(bvec3(bool(bvec4(_GLF_DEAD(false), true, false, true)), true, false)))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, true)))), _GLF_IDENTITY(true, false || (true)), true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, false, true)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, false, true)), true, false)))), bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true)), true)))))))))))), bool(bvec3(bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), bool(bvec2((_GLF_IDENTITY(false, (false) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true)), bool(bvec3(bool(bvec4(_GLF_DEAD(false), true, false, _GLF_IDENTITY(true, false || (true)))), true, false)))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, false || _GLF_IDENTITY((true), ((true)) && true)), true)), (bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true)), true))) || false))), ! (! (true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, false, true)), bool(bvec3(bool(bvec4(_GLF_DEAD(false), true, false, true)), true, false)))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, true)))), _GLF_IDENTITY(true, false || (true)), true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, false, true)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, false, true)), true, false)))), bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true)), true)))))))))))), false, false))))))))), ((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), bool(bvec2((_GLF_IDENTITY(false, (false) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true)), bool(bvec3(bool(bvec4(_GLF_DEAD(false), true, false, _GLF_IDENTITY(true, false || (true)))), true, false)))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, false || _GLF_IDENTITY((true), ((true)) && true)), true)), (bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true)), true))) || false))), ! (! (true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, false, true)), bool(bvec3(bool(bvec4(_GLF_DEAD(false), true, false, true)), true, false)))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, true)))), _GLF_IDENTITY(true, false || (true)), true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, false, true)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, false, true)), true, false)))), bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true)), true))))))))))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), bool(bvec2((_GLF_IDENTITY(false, (false) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true)), bool(bvec3(bool(bvec4(_GLF_DEAD(false), true, false, _GLF_IDENTITY(true, false || (true)))), true, false)))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, false || _GLF_IDENTITY((true), ((true)) && true)), true)), (bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true)), true))) || false))), ! (! (true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, false, true)), bool(bvec3(bool(bvec4(_GLF_DEAD(false), true, false, true)), true, false)))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, true)))), _GLF_IDENTITY(true, false || (true)), true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, false, true)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, false, true)), true, false)))), bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true)), true)))))))))))), bool(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), bool(bvec2((_GLF_IDENTITY(false, (false) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true)), bool(bvec3(bool(bvec4(_GLF_DEAD(false), true, false, _GLF_IDENTITY(true, false || (true)))), true, false)))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, false || _GLF_IDENTITY((true), ((true)) && true)), true)), (bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true)), true))) || false))), ! (! (true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, false, true)), bool(bvec3(bool(bvec4(_GLF_DEAD(false), true, false, true)), true, false)))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, true)))), _GLF_IDENTITY(true, false || (true)), true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, false, true)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, false, true)), true, false)))), bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true)), true)))))))))))), bool(bvec3(bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), bool(bvec2((_GLF_IDENTITY(false, (false) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true)), bool(bvec3(bool(bvec4(_GLF_DEAD(false), true, false, _GLF_IDENTITY(true, false || (true)))), true, false)))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, false || _GLF_IDENTITY((true), ((true)) && true)), true)), (bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true)), true))) || false))), ! (! (true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, false, true)), bool(bvec3(bool(bvec4(_GLF_DEAD(false), true, false, true)), true, false)))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, true)))), _GLF_IDENTITY(true, false || (true)), true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, false, true)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, false, true)), true, false)))), bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true)), true)))))))))))), false, false)))))))))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, 1.0)), (true ? _GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, 1.0)), vec2(1.0, 1.0) * (_GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, 1.0)), (true ? vec2(mat2(injectionSwitch, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)) : _GLF_FUZZED(vec2(55.47, 39.54)))))) : _GLF_FUZZED(mat4x2(-6727.5381, -4.6, 2.3, -2.2, _GLF_IDENTITY(8.8, (8.8) / round(length(normalize(1.0)))), 7.2, -2.9, _GLF_IDENTITY(-0.4, clamp(-0.4, _GLF_IDENTITY(-0.4, float(vec4(-0.4, 1.0, 0.0, 1.0))), -0.4)))[3])))).y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1])), injectionSwitch)).y))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), false || (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), true && (! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false))))))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 uint read = _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) << 0), 2), 0u + (atomicLoad(buf[virtual_gid], 4, 64, 2)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(true, false || (true)) && (! (! (false)))))))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, false)), _GLF_IDENTITY(bool(bool(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, false)))), _GLF_IDENTITY(true, ! (! (true))) && (bool(bool(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, false)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)).y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, ! (! (false))), false, false)), bool(bool(bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (_GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec4(bool(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), (! (_GLF_IDENTITY(true, false || (true)))) || false))))), true, false, false)))) && true)), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 1.0, tan(0.0), 1.0, 0.0, 1.0), mat2x3(mat2x3(mat2x3(injectionSwitch.x, 1.0, _GLF_IDENTITY(tan(0.0), mix(float(_GLF_FUZZED(-2.2)), float(tan(0.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0, 0.0, 1.0))))), (false ? _GLF_FUZZED(7.0) : float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 1.0, tan(0.0), 1.0, 0.0, 1.0), mat2x3(mat2x3(mat2x3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sqrt(sqrt(0.0))), 1.0, tan(0.0), 1.0, 0.0, 1.0)))))))) > injectionSwitch.y))), false, false, false))))))))) || false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id % 2) == _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, _GLF_IDENTITY((0), 0 ^ ((0))) >> 0), _GLF_IDENTITY(0, (0) * 1), 0)), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)) << 0u), max(subgroup_local_id, subgroup_local_id)) % 2, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) % _GLF_IDENTITY(2, (2) >> (int(_GLF_ZERO(0.0, injectionSwitch.x)) | (19183 & 0))), (0u >> _GLF_IDENTITY(uint(2u), uint(2u))) | (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) % 2))) << 0u)) == 0, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)) << 0u), max(subgroup_local_id, subgroup_local_id)) % 2, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) % _GLF_IDENTITY(2, (2) >> (int(_GLF_ZERO(0.0, injectionSwitch.x)) | (19183 & 0))), (0u >> _GLF_IDENTITY(uint(2u), uint(2u))) | (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) % 2))) << 0u)) == 0, bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)) << 0u), max(subgroup_local_id, subgroup_local_id)) % 2, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) % _GLF_IDENTITY(2, (2) >> (int(_GLF_ZERO(0.0, injectionSwitch.x)) | (19183 & 0))), (0u >> _GLF_IDENTITY(uint(2u), uint(2u))) | (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) % 2))) << 0u)) == 0, true, true)))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uint(subgroup_local_id), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroup_local_id), (_GLF_IDENTITY(uint(subgroup_local_id), (uint(subgroup_local_id)) / 1u)) | (uint(subgroup_local_id))), (uint(subgroup_local_id)) | (uint(subgroup_local_id))), uint(subgroup_local_id))))) % _GLF_IDENTITY(2, (2) / ((1 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(4, (4) - 0), 1, 1)), 0 ^ (_GLF_IDENTITY(int(ivec3(4, 1, 1)), (int(ivec3(4, 1, 1))) / int(_GLF_ONE(1.0, injectionSwitch.y))))))) | 0)))) >> _GLF_IDENTITY(int(4), int(4)))), (subgroup_local_id % 2) >> _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, 1u)), ~ (~ (uint(uvec3(0u, 1u, 1u)))))), (0u) >> 0u))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id))), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id))), _GLF_IDENTITY((_GLF_IDENTITY(uint(subgroup_local_id), (uint(subgroup_local_id)) / 1u)), uint(_GLF_IDENTITY(uvec2((_GLF_IDENTITY(uint(subgroup_local_id), (uint(subgroup_local_id)) / 1u)), uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(uvec2((_GLF_IDENTITY(uint(subgroup_local_id), (uint(subgroup_local_id)) / 1u)), uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(uvec2(uvec2((_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroup_local_id), min(uint(subgroup_local_id), uint(subgroup_local_id))), (uint(subgroup_local_id)) / 1u)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) | (uvec2((_GLF_IDENTITY(uint(subgroup_local_id), (uint(subgroup_local_id)) / 1u)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) | (uint(subgroup_local_id))), (uint(subgroup_local_id)) | (uint(subgroup_local_id))), uint(subgroup_local_id)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id))), _GLF_IDENTITY((_GLF_IDENTITY(uint(subgroup_local_id), (uint(subgroup_local_id)) / 1u)), uint(_GLF_IDENTITY(uvec2((_GLF_IDENTITY(uint(subgroup_local_id), (uint(subgroup_local_id)) / 1u)), uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(uvec2((_GLF_IDENTITY(uint(subgroup_local_id), (uint(subgroup_local_id)) / 1u)), uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(uvec2(uvec2((_GLF_IDENTITY(uint(subgroup_local_id), (uint(subgroup_local_id)) / 1u)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) | (uvec2((_GLF_IDENTITY(uint(subgroup_local_id), (uint(subgroup_local_id)) / 1u)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) | (uint(subgroup_local_id))), 1u * (_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id))), _GLF_IDENTITY((_GLF_IDENTITY(uint(subgroup_local_id), (uint(subgroup_local_id)) / 1u)), uint(_GLF_IDENTITY(uvec2((_GLF_IDENTITY(uint(subgroup_local_id), (uint(subgroup_local_id)) / 1u)), uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(uvec2((_GLF_IDENTITY(uint(subgroup_local_id), (uint(subgroup_local_id)) / 1u)), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mat2(1.0) * ((injectionSwitch) * mat2(1.0)))).x))), uvec2(uvec2(uvec2((_GLF_IDENTITY(uint(subgroup_local_id), (uint(subgroup_local_id)) / 1u)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) | (uvec2(_GLF_IDENTITY((_GLF_IDENTITY(uint(subgroup_local_id), (uint(subgroup_local_id)) / 1u)), clamp((_GLF_IDENTITY(uint(subgroup_local_id), (uint(subgroup_local_id)) / 1u)), (_GLF_IDENTITY(uint(subgroup_local_id), (uint(subgroup_local_id)) / 1u)), (_GLF_IDENTITY(uint(subgroup_local_id), (uint(subgroup_local_id)) / 1u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) | (uint(subgroup_local_id))))), (uint(subgroup_local_id)) | (uint(subgroup_local_id))), uint(subgroup_local_id)))), (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id))), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id))), _GLF_IDENTITY((_GLF_IDENTITY(uint(subgroup_local_id), (uint(subgroup_local_id)) / 1u)), uint(_GLF_IDENTITY(uvec2((_GLF_IDENTITY(uint(subgroup_local_id), (uint(subgroup_local_id)) / 1u)), uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(uvec2((_GLF_IDENTITY(uint(subgroup_local_id), (uint(subgroup_local_id)) / 1u)), uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(uvec2(uvec2((_GLF_IDENTITY(uint(subgroup_local_id), (uint(subgroup_local_id)) / 1u)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) | (uvec2((_GLF_IDENTITY(uint(subgroup_local_id), (uint(subgroup_local_id)) / 1u)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) | (uint(subgroup_local_id))), (uint(subgroup_local_id)) | (uint(subgroup_local_id))), uint(subgroup_local_id))))) - 0u)) << 0u)) % _GLF_IDENTITY(2, (2) / ((1 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 1, 1)), 0 ^ (int(ivec3(4, 1, 1)))))) | 0)))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), max(int(4), int(4))), int(4)))), (subgroup_local_id % 2) >> 0u))) | ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uint(subgroup_local_id), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroup_local_id), (_GLF_IDENTITY(uint(subgroup_local_id), (uint(subgroup_local_id)) / 1u)) | (uint(subgroup_local_id))), (uint(subgroup_local_id)) | (uint(subgroup_local_id))), uint(subgroup_local_id))))) % _GLF_IDENTITY(2, (2) / ((1 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-59748) : 4)), 1, 1)), 0 ^ (int(ivec3(4, 1, 1)))))) | 0)))) >> _GLF_IDENTITY(int(4), int(4)))), (subgroup_local_id % 2) >> 0u)))) == 0)))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) && true)) || false)), true), bvec2(bvec4(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) && true)) || false)), true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))), _GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 ^ (1)), _GLF_IDENTITY(1, int(ivec3(1, 0, 0)))))])).x > injectionSwitch.y), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x : _GLF_FUZZED(8.2))) > injectionSwitch.y)))))))))), true && (! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))) && true), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), ! (! (! (false))))) && true))) || ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 ^ (1)), _GLF_IDENTITY(1, int(ivec3(1, 0, 0)))))])).x > injectionSwitch.y), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x : _GLF_FUZZED(8.2))) > injectionSwitch.y)))))))))), true && (! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))) && true), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), ! (! (! (false))))) && true))) || ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))))))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 ^ (1)), _GLF_IDENTITY(1, int(ivec3(1, 0, 0)))))])).x > injectionSwitch.y), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x : _GLF_FUZZED(8.2))) > injectionSwitch.y)))))))))), true && (! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))) && true), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), ! (! (! (false))))) && true))) || ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))))))))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))))))), (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))))))), ! (! ((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))))))))))) && true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))], _GLF_IDENTITY(uint(1), _GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (uint(1)), min(_GLF_IDENTITY(~ (uint(1)), (~ (uint(1))) / 1u), _GLF_IDENTITY(~ (uint(1)), (~ (uint(1))) | (_GLF_IDENTITY(~ (uint(1)), (~ (uint(1))) | 0u)))))), 0u ^ ((_GLF_IDENTITY(~ (uint(1)), min(_GLF_IDENTITY(~ (uint(1)), (~ (uint(1))) / 1u), _GLF_IDENTITY(~ (uint(1)), (~ (uint(1))) | (_GLF_IDENTITY(~ (uint(1)), (~ (uint(1))) | 0u)))))))), (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (uint(1)), min(_GLF_IDENTITY(~ (uint(1)), (~ (uint(1))) / 1u), _GLF_IDENTITY(~ (uint(1)), (~ (uint(1))) | (_GLF_IDENTITY(~ (uint(1)), (~ (uint(1))) | 0u)))))), 0u ^ ((_GLF_IDENTITY(~ (uint(1)), min(_GLF_IDENTITY(~ (uint(1)), (~ (uint(1))) / 1u), _GLF_IDENTITY(~ (uint(1)), (~ (uint(1))) | (_GLF_IDENTITY(~ (uint(1)), (~ (uint(1))) | 0u))))))))) << 0u)), _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, (4) * 1))), 4)), _GLF_IDENTITY(64, (64) / 1), 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(sqrt(1.0), (false ? _GLF_FUZZED(-9479.9267) : sqrt(1.0))), 0.0, 1.0, 0.0, 1.0))).y) && true)), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), bool(bool(! (! ((injectionSwitch.x > injectionSwitch.y)))))))), ! (_GLF_IDENTITY(! (bool(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_IDENTITY(! (bool(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), ! (! (! (! ((injectionSwitch.x > injectionSwitch.y))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(! (bool(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), (! (bool(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))) && true)))))))))), true, true, true)))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   subgroupAll(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(! (! (false)), false || (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))))) && true));
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, ~ (~ ((1) / 1)))), _GLF_IDENTITY(1, max(1, 1))))), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), true && ((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), true && ((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), true && ((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))))))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), true && ((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))))))))))), false || (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), true && ((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))))))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), true && ((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))))))))))))))), false)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), true && ((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), true && ((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))))))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), true && ((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))))))))))), false || (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), true && ((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))))))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), true && ((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))))))))))))))), false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))))))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(1.9, -62.43)))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))) && true)) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, false || (false))), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(1413.4836) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(8.6)), float(injectionSwitch.y), bool(true))))), injectionSwitch.y, injectionSwitch.y)))), false), false)))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))), bool(bvec2((_GLF_IDENTITY(! (false), true && (! (false)))), false)))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[virtual_gid], read, 4, 64, 4);
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-67.68)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false)))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false)))), true, true), true))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((+ -553.619))), bool(false))) > injectionSwitch.y)), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((+ -553.619))), bool(false))) > injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))), (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false)))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
