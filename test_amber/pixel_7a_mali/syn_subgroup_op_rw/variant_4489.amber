#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_3 {
 mat2x4 _f0;
 mat2x3 _f1;
 bvec2 _f2;
} ;

struct _GLF_struct_4 {
 vec2 _f0;
 _GLF_struct_3 _f1;
 mat3x2 _f2;
 mat3 _f3;
} ;

struct _GLF_struct_1 {
 mat2 _f0;
 mat4x2 _f1;
 bvec3 _f2;
 bvec3 _f3;
 int _f4;
 mat4 _f5;
 ivec3 _f6;
} ;

struct _GLF_struct_0 {
 bvec4 _f0;
 vec4 _f1;
} ;

struct _GLF_struct_2 {
 mat4x3 _f0;
 uint num_workgroup;
 _GLF_struct_0 _f1;
 vec3 _f2;
 vec3 _f3;
 _GLF_struct_1 _f4;
} ;

struct _GLF_struct_5 {
 vec2 _f0;
 uint _f1;
 mat3x4 _f2;
 _GLF_struct_2 _f3;
 _GLF_struct_4 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), true && ((false)))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), min(1.0, 1.0))), (vec2(1.0)) / vec2(1.0, 1.0)), 1u, mat3x4(1.0), _GLF_struct_2(mat4x3(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-26.45)))))), gl_NumWorkGroups.x, _GLF_struct_0(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), bool(_GLF_IDENTITY(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true))))), false || (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), bool(bool(_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), false, false, true)), bool(bvec2(bool(bvec4((true), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), (bool(false)) || false)) && true))), false, true)), true)))))))))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), ! _GLF_IDENTITY((! (_GLF_IDENTITY((true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((true)), bool(_GLF_IDENTITY(bvec3(bool((true)), true, true), bvec3(bvec4(bvec3(bool((true)), true, true), false)))))), false || _GLF_IDENTITY((bool(_GLF_IDENTITY(bool((true)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bool((true)), true, true), bvec3(bvec4(bvec3(bool((true)), true, true), false))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bool((true)), true, true), bvec3(bvec4(bvec3(bool((true)), true, true), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bool((true)), true, true), bvec3(bvec4(bvec3(bool((true)), true, true), false))), false))), true))))))), ! (! (_GLF_IDENTITY((bool(_GLF_IDENTITY(bool((true)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bool((true)), true, true), bvec3(bvec4(bvec3(bool((true)), true, true), false))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bool((true)), true, true), bvec3(bvec4(bvec3(bool((true)), true, true), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bool((true)), true, true), bvec3(bvec4(bvec3(bool((true)), true, true), false))), false))), true))))))), false || ((bool(_GLF_IDENTITY(bool((true)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bool((true)), true, true), bvec3(bvec4(bvec3(bool((true)), true, true), false))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bool((true)), true, true), bvec3(bvec4(bvec3(bool((true)), true, true), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bool((true)), true, true), bvec3(bvec4(bvec3(bool((true)), true, true), false))), false))), true)))))))))))))))), ((! ((true)))) || false))))))), false || (! ((_GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), ! (! ((true)))))))))))))), ! (! ((! _GLF_IDENTITY((_GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), bool(bool(_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), false, false, true)), _GLF_IDENTITY(bool(bvec2(bool(bvec4((true), false, false, true)), true)), true && (bool(bvec2(bool(bvec4((true), false, false, true)), true)))))))))))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY((true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((true)), bool(_GLF_IDENTITY(bvec3(bool((true)), true, true), bvec3(bvec4(bvec3(bool((true)), true, true), false)))))), false || (bool(_GLF_IDENTITY(bool((true)), bool(_GLF_IDENTITY(bvec3(bool((true)), true, true), bvec3(bvec4(bvec3(bool((true)), true, true), false))))))))))), ((! ((true)))) || false), (! _GLF_IDENTITY((! (_GLF_IDENTITY((true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((true)), bool(_GLF_IDENTITY(bvec3(bool((true)), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool((true)), true && (bool((true)))), true, true), false)))))), false || (bool(_GLF_IDENTITY(bool((true)), bool(_GLF_IDENTITY(bvec3(bool((true)), true, true), bvec3(bvec4(bvec3(bool((true)), true, true), false))))))))))), ((! ((true)))) || false)) && true))))))), false || (! ((_GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), ! (! ((true)))))))))))))))))))))))))), vec4(1.0)), vec3(1.0), vec3(1.0), _GLF_struct_1(mat2(1.0), mat4x2(1.0), bvec3(true), bvec3(true), 1, mat4(1.0), ivec3(1))), _GLF_struct_4(vec2(1.0), _GLF_struct_3(mat2x4(1.0), mat2x3(1.0), bvec2(true)), mat3x2(1.0), mat3(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, _GLF_IDENTITY((false ? _GLF_FUZZED(-36.53) : 1.0), max((false ? _GLF_FUZZED(-36.53) : 1.0), _GLF_IDENTITY((false ? _GLF_FUZZED(-36.53) : 1.0), clamp((false ? _GLF_FUZZED(-36.53) : 1.0), (false ? _GLF_IDENTITY(_GLF_FUZZED(-36.53), (_GLF_FUZZED(-36.53)) / _GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, sqrt(0.0), 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))) : 1.0), (false ? _GLF_FUZZED(-36.53) : 1.0)))))))))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(204.536)), vec2(_GLF_FUZZED(1.0), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(sqrt(vec2(1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), (sqrt(vec2(1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))) * mat2(1.0))), vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) - vec2(0.0, 0.0), clamp((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))) * mat2(1.0)), mix(vec2(_GLF_FUZZED(0.5), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[1]), vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[0], _GLF_FUZZED(-7.9)), bvec2(true, false)))) - vec2(0.0, 0.0), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) - vec2(0.0, 0.0), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) - vec2(0.0, 0.0), _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) + vec2(0.0, 0.0)) * mat2(1.0))) - _GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-353.568)), bool(false)))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) + 0.0))), 0.0), _GLF_IDENTITY((vec2(0.0, 0.0)) * mat2(1.0), vec2(vec3((vec2(0.0, 0.0)) * mat2(1.0), 0.0)))), vec2(0.0, 0.0)))), vec2(mat3x2((false ? _GLF_FUZZED(injectionSwitch) : (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) + vec2(0.0, 0.0)) * mat2(1.0))) - _GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-353.568)), bool(false)))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) + 0.0))), 0.0), _GLF_IDENTITY((vec2(0.0, 0.0)) * mat2(1.0), vec2(vec3((vec2(0.0, 0.0)) * mat2(1.0), 0.0)))), vec2(0.0, 0.0)))), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-9.0) : 0.0))))))))), 0.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))), vec2(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED((7951.4901 + -1.7)) : 1.0)))))), (vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(ceil(621.361)))), max(0.0, 0.0))), vec2(1.0, 1.0))))) / vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, float(float(1.0)))), float(_GLF_FUZZED(31.33)), bool(false))), 1.0, 1.0)), vec3(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0))), dot(vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(68.57) : 0.0)), 0.0), _GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED(tan(injectionSwitch)) : vec2(1.0, 1.0)))))), vec3(1.0, 1.0, 1.0))), 0.0))).y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) - _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * mat2(1.0)), clamp(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-912.949), _GLF_FUZZED(4.2)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) * mat2(1.0))) - vec2(0.0, 0.0), vec2(_GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) - vec2(0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) * mat2(1.0)) / abs(vec2(1.0, 1.0))))) - vec2(0.0, 0.0), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) - vec2(0.0, 0.0), (false ? _GLF_FUZZED(injectionSwitch) : (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) - vec2(0.0, 0.0)))))), 0.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), 1.0)), dot(vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))), vec2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0)))), (vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))), vec2(1.0, 1.0))))) / vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0)), _GLF_IDENTITY(mat3(1.0) * (vec3(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0))), _GLF_IDENTITY(min(mat3(1.0) * (vec3(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0))), _GLF_IDENTITY(mat3(1.0) * (vec3(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), min(_GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY(1.0, (1.0) + 0.0))))), max(mat3(1.0) * (vec3(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0))), mat3(1.0) * (vec3(1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) + 0.0)))))), clamp(min(mat3(1.0) * (vec3(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0))), _GLF_IDENTITY(mat3(1.0) * (vec3(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), min(_GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY(1.0, (1.0) + 0.0))))), max(mat3(1.0) * (vec3(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0))), mat3(1.0) * (vec3(1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) + 0.0)))))), min(mat3(1.0) * (vec3(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0))), _GLF_IDENTITY(mat3(1.0) * (vec3(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), min(_GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY(1.0, (1.0) + 0.0))))), max(mat3(1.0) * (vec3(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0))), mat3(1.0) * (vec3(1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) + 0.0)))))), min(mat3(1.0) * (vec3(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0))), _GLF_IDENTITY(mat3(1.0) * (vec3(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), min(_GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY(1.0, (1.0) + 0.0))))), max(mat3(1.0) * (vec3(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0))), mat3(1.0) * (vec3(1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) + 0.0))))))))))), dot(_GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(68.57) : 0.0)), (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(68.57) : 0.0))) / exp(0.0)), 0.0), vec2(1.0, 1.0)))), max(vec3(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(68.57) : _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0), transpose(transpose(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0), (false ? _GLF_FUZZED(mat3x4(-2.1, -777.122, 76.39, -1.4, 79.05, 9457.1655, 2598.2641, 8.2, -1.3, -1344.2587, 4.3, -93.22)) : mat3x4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0))))))), (float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0), transpose(transpose(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0), (false ? _GLF_FUZZED(mat3x4(-2.1, -777.122, 76.39, -1.4, 79.05, 9457.1655, 2598.2641, 8.2, -1.3, -1344.2587, 4.3, -93.22)) : mat3x4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0)))))))) * 1.0)))), (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(68.57) : 0.0))) / exp(0.0)), 0.0), vec2(1.0, 1.0)))), vec3(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0)), 1.0)), dot(vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(68.57) : 0.0)), (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(68.57) : 0.0))) / exp(0.0)), 0.0), vec2(1.0, 1.0)))))), vec3(1.0, 1.0, 1.0))), 0.0))).y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) - vec2(0.0, 0.0), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) - vec2(0.0, 0.0)) * mat2(1.0)), clamp((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * mat2(1.0))) - vec2(0.0, 0.0), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) - vec2(0.0, 0.0), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) - vec2(0.0, 0.0), (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mat2(1.0) * (_GLF_FUZZED(injectionSwitch))) : (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) - vec2(0.0, 0.0)))))), 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, 0.0 + (0.0)), max(0.0, 0.0))), vec2(1.0, 1.0)), (dot(vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))), vec2(1.0, 1.0))) / abs(1.0)))), (vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))), vec2(1.0, 1.0))))) / vec3(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0)), vec3(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0))), min(dot(_GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))), vec2(1.0, 1.0)), (dot(vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))), vec2(1.0, 1.0))) / abs(1.0)))), (vec3(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6.7) : 0.0)), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))), vec2(1.0, 1.0))))) / vec3(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, 1.0, 1.0, 1.0)))) + length(vec2(0.0, 0.0))), 1.0)), vec3(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0))), dot(_GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))), vec2(1.0, 1.0)), (dot(vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))), vec2(1.0, 1.0))) / abs(1.0)))), (vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))), vec2(1.0, 1.0))))) / vec3(1.0, 1.0, 1.0)), vec3(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0))))), dot(vec3(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(68.57) : 0.0)), 0.0), vec2(1.0, 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(68.57) : 0.0)), 0.0), vec2(1.0, 1.0))), mix(float(_GLF_FUZZED(-993.121)), float(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED(float(-85440)), _GLF_IDENTITY((vec2(0.0, 0.0))[1], float(vec4((vec2(0.0, 0.0))[1], 1.0, 1.0, 1.0)))), vec2((vec2(0.0, 0.0))[0], _GLF_IDENTITY(_GLF_FUZZED(-4.5), mix(float(_GLF_FUZZED(84.19)), float(_GLF_FUZZED(-4.5)), bool(true)))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), vec2(1.0, 1.0)), dot(vec2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(68.57) : 0.0)), 0.0), vec2(1.0, 1.0)))), bool(true)))) / 1.0)), vec3(1.0, 1.0, 1.0))), 0.0))).y), true, true, false)))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec4(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) << 0u), (_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) >> 0u)) << 0u, ~ (~ ((_GLF_IDENTITY(0u, (0u) >> 0u)) << 0u))))) / ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))), (_GLF_IDENTITY(0u | 0u, ~ (~ (0u | 0u)))), 1u)));
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)], injectionSwitch[1], injectionSwitch[1]))))) + sqrt(vec2(0.0, 0.0))).x > injectionSwitch.y), false || _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), min(vec4(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec4(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))))), min(float(_GLF_IDENTITY(vec4(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), min(vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(vec2(2958.6024, -25.58).t)), float(_GLF_IDENTITY(injectionSwitch.x, float(vec2(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec4(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))))), float(_GLF_IDENTITY(vec4(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), min(vec4(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec4(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))))))) > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(_GLF_IDENTITY(bool(((injectionSwitch.x > injectionSwitch.y))), (bool(((injectionSwitch.x > injectionSwitch.y)))) && true))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bool(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))), (_GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bool((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))) || false), true)))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((3058.5198 * -4.2)), _GLF_FUZZED(5656.2368)), vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((3058.5198 * -4.2)), _GLF_FUZZED(5656.2368)), vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true)))) * mat2(1.0))[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))[1]))))) + sqrt(vec2(0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, abs(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((74.69 * -52.29))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))).x > injectionSwitch.y), false || _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 1.0, 0.0, 0.0, _GLF_IDENTITY(abs(0.0), mix(float(abs(0.0)), float(_GLF_FUZZED(2690.7996)), bool(false))), 1.0)), (float(mat2x3(injectionSwitch.y, 1.0, 0.0, 0.0, abs(0.0), 1.0))) - 0.0))), ((injectionSwitch.x > injectionSwitch.y)) && true)), bool(bvec3(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(10.29, 7.3)) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), true, true))), ! (_GLF_IDENTITY(! (bool(bool(((injectionSwitch.x > injectionSwitch.y))))), (! (bool(bool(((injectionSwitch.x > injectionSwitch.y)))))) && true))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bool(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-215.970)), float(injectionSwitch.y), bool(true)))) - abs(0.0))))))))), true)))))), bool(bvec2(_GLF_IDENTITY(bool(bool(((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(26.33, -1.4)))).y)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-32.68) : injectionSwitch.y))))), bool(bvec4(bool(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-32.68) : injectionSwitch.y))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (bool(bool(((injectionSwitch.x > injectionSwitch.y))))))), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bool(((injectionSwitch.x > injectionSwitch.y))))))), true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bool(((injectionSwitch.x > injectionSwitch.y))))))), true))), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(bool(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))), ! (! (bool(bool(((injectionSwitch.x > injectionSwitch.y))))))), true))), false)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(bool(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))), ! (! (bool(bool(((injectionSwitch.x > injectionSwitch.y))))))), true))), false)), true)), bvec2(bvec4(bvec2(bvec3(bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(bool(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))), ! (! (bool(bool(((injectionSwitch.x > injectionSwitch.y))))))), true))), false)), true)), true, true)))), bvec2(bvec3(bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bool(((injectionSwitch.x > injectionSwitch.y))))))), true))), false)), false)))))))))), false)))))))))))), bool(_GLF_IDENTITY(bvec2(bool(bool(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1]))))) + sqrt(vec2(0.0, 0.0))).x > injectionSwitch.y), false || _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), min(vec4(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec4(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))))), min(float(_GLF_IDENTITY(vec4(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), min(vec4(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec4(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))))), float(_GLF_IDENTITY(vec4(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), min(vec4(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec4(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))))))) > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bool(((injectionSwitch.x > injectionSwitch.y))))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bool(((injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bool((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))) || false), true)))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[_GLF_IDENTITY(1, int(int(_GLF_IDENTITY(1, (1) | 0))))]))))) + sqrt(vec2(0.0, 0.0))).x > injectionSwitch.y), false || _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), min(vec4(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec4(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))))), min(float(_GLF_IDENTITY(vec4(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), min(vec4(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec4(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))))), float(_GLF_IDENTITY(vec4(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), min(vec4(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec4(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))))))) > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bool(((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x > injectionSwitch.y))))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bool(((injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY(bool(bool(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (bool(bool((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 1.0, cos(0.0))), mix(vec2((vec2(mat3x2(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 1.0, cos(0.0))))[0], _GLF_FUZZED(-7.3)), vec2(_GLF_FUZZED(-3.9), (vec2(mat3x2(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 1.0, cos(0.0))))[1]), bvec2(false, true)))).x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))) || false), true)))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mix(vec2(_GLF_FUZZED((3058.5198 * -4.2)), _GLF_FUZZED(5656.2368)), vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(min((injectionSwitch)[0], (injectionSwitch)[0]), max(_GLF_IDENTITY(min((injectionSwitch)[0], (injectionSwitch)[0]), max(min((injectionSwitch)[0], (injectionSwitch)[0]), min((injectionSwitch)[0], (injectionSwitch)[0]))), _GLF_IDENTITY(min((injectionSwitch)[0], (injectionSwitch)[0]), (min((injectionSwitch)[0], (injectionSwitch)[0])) * 1.0)))), (injectionSwitch)[1]), bvec2(true, true))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((3058.5198 * -4.2)), _GLF_FUZZED(5656.2368)), vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), mix(float(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0]))), float(_GLF_FUZZED((-0.7 * -900.820))), bool(false))), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, ! (! (true))), true)))) * mat2(1.0))[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1]))))) + sqrt(vec2(0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, abs(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((74.69 * -52.29))), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))))))).x > injectionSwitch.y), false || _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 1.0, 0.0, 0.0, abs(0.0), 1.0)), (float(mat2x3(injectionSwitch.y, 1.0, 0.0, 0.0, abs(0.0), 1.0))) - 0.0)), mix(float(_GLF_FUZZED(52.20)), float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 1.0, 0.0, 0.0, abs(0.0), 1.0)), (float(mat2x3(injectionSwitch.y, 1.0, 0.0, 0.0, abs(0.0), 1.0))) - 0.0))), bool(true)))), ((injectionSwitch.x > injectionSwitch.y)) && true)), bool(bvec3(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bool((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (bool(bool(((injectionSwitch.x > injectionSwitch.y))))), (! (bool(bool(((injectionSwitch.x > injectionSwitch.y)))))) && true))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bool(((injectionSwitch.x > injectionSwitch.y))))))), true)))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bool(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(26.33, -1.4)))).y)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bool((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))))), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bool(((injectionSwitch.x > injectionSwitch.y))))))), true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (bool(bool(((injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(! (bool(bool(((injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(! (bool(bool(((injectionSwitch.x > injectionSwitch.y))))), false, true, true))))))), true))), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bool(((injectionSwitch.x > injectionSwitch.y))))))), true))), false)), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), true && (bool(bool(((injectionSwitch.x > injectionSwitch.y))))))))), true))), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), true && (bool(bool(((injectionSwitch.x > injectionSwitch.y))))))))), true))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), true && (bool(bool(((injectionSwitch.x > injectionSwitch.y))))))))), true))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec4(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), true && (bool(bool(((injectionSwitch.x > injectionSwitch.y))))))))), true))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), true && (bool(bool(((injectionSwitch.x > injectionSwitch.y))))))))), true))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec4(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), true && (bool(bool(((injectionSwitch.x > injectionSwitch.y))))))))), true))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true))))))), false)))))))))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(bool(bool(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(26.33, -1.4)))).y)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bool((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))))), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bool(((injectionSwitch.x > injectionSwitch.y))))))), true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (bool(bool(((injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(! (bool(bool(((injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(! (bool(bool(((injectionSwitch.x > injectionSwitch.y))))), false, true, true))))))), true))), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bool(((injectionSwitch.x > injectionSwitch.y))))))), true))), false)), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), true && (bool(bool(((injectionSwitch.x > injectionSwitch.y))))))))), true))), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), true && (bool(bool(((injectionSwitch.x > injectionSwitch.y))))))))), true))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), true && (bool(bool(((injectionSwitch.x > injectionSwitch.y))))))))), true))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec4(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), true && (bool(bool(((injectionSwitch.x > injectionSwitch.y))))))))), true))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), true && (bool(bool(((injectionSwitch.x > injectionSwitch.y))))))))), true))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec4(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), true && (bool(bool(((injectionSwitch.x > injectionSwitch.y))))))))), true))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true))))))), false)))))))))), false))))))))))))))), false), bvec2(bvec4(bvec2(bool(bool(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1]))))) + sqrt(vec2(0.0, 0.0))).x > injectionSwitch.y), false || _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), min(vec4(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec4(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))))), min(float(_GLF_IDENTITY(vec4(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), min(vec4(injectionSwitch.x, 1.0, 0.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) / 1.0), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), vec4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) / vec2(1.0, 1.0)).x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))))), float(_GLF_IDENTITY(vec4(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), min(vec4(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec4(injectionSwitch.x, 1.0, 0.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(mat3x2(_GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, cos(0.0), 0.0, sqrt(0.0))))))))))) > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(_GLF_IDENTITY(bool(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)), bool(bvec4(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))), ! (! (_GLF_IDENTITY(bool(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)), bool(bvec4(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))), ! (! (bool(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)), bool(bvec4(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))))))))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bool(((injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bool((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))))))))))))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bool((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))))))))))))))))))), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3((_GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bool((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))))))))))))))))))), false, true)), bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bool((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))))))))))))))))))), false, true)))))))), true && (bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bool((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))))))))))))))))))), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3((_GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bool((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))))))))))))))))))), false, true)), bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bool((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))))))))))))))))))), false, true))))))))))) || false), true)))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mix(vec2(_GLF_FUZZED((3058.5198 * -4.2)), _GLF_FUZZED(5656.2368)), vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((3058.5198 * -4.2)), _GLF_FUZZED(5656.2368)), vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true)))) * mat2(1.0))[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1]))), float(_GLF_FUZZED(-5071.8310)), bool(false))), clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], max(_GLF_IDENTITY(injectionSwitch[1], 1.0 * (injectionSwitch[1])), injectionSwitch[1]))))))) + sqrt(vec2(0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, abs(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((74.69 * -52.29))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))).x > injectionSwitch.y), false || _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 1.0, 0.0, 0.0, abs(0.0), 1.0)), (float(mat2x3(injectionSwitch.y, 1.0, 0.0, 0.0, abs(0.0), 1.0))) - 0.0))), ((injectionSwitch.x > injectionSwitch.y)) && true)), bool(bvec3(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (bool(bool(((injectionSwitch.x > injectionSwitch.y))))), (! (bool(bool(((injectionSwitch.x > injectionSwitch.y)))))) && true))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bool(((injectionSwitch.x > injectionSwitch.y))))))), true)))))), bool(bvec2(_GLF_IDENTITY(bool(bool(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(26.33, -1.4)))).y)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bool(((injectionSwitch.x > injectionSwitch.y))))))), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bool(((injectionSwitch.x > injectionSwitch.y))))))), true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bool(((injectionSwitch.x > injectionSwitch.y))))))), true))), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bool(((injectionSwitch.x > injectionSwitch.y))))))), true))), false)), bvec2(bvec3(bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bool(((injectionSwitch.x > injectionSwitch.y))))))), true))), false)), false)))))))))), false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 1.0, 0.0, 0.0, abs(0.0), 1.0)), (float(mat2x3(injectionSwitch.y, 1.0, 0.0, 0.0, abs(0.0), 1.0))) - 0.0))), ((injectionSwitch.x > injectionSwitch.y)) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 1.0, 0.0, 0.0, abs(0.0), 1.0)), (float(mat2x3(injectionSwitch.y, 1.0, 0.0, 0.0, abs(0.0), 1.0))) - 0.0))), ((injectionSwitch.x > injectionSwitch.y)) && true)))), bool(bvec3(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (bool(bool(((injectionSwitch.x > injectionSwitch.y))))), (! (bool(bool(((injectionSwitch.x > injectionSwitch.y)))))) && true))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bool(((injectionSwitch.x > injectionSwitch.y))))))), true)))))), bool(bvec2(_GLF_IDENTITY(bool(bool(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(26.33, -1.4)))).y)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bool(((injectionSwitch.x > injectionSwitch.y))))))), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bool(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y)))))))))), true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), ! _GLF_IDENTITY((! (bool(bool(((injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY((! (bool(bool(((injectionSwitch.x > injectionSwitch.y)))))), ! (! ((! (bool(bool(((injectionSwitch.x > injectionSwitch.y)))))))))) || false)), true))), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bool(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), true))), false)), bvec2(bvec3(bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bool(((injectionSwitch.x > injectionSwitch.y))))))), true))), false)), false)))))))))), false)))))))))))))), false), false, false))))), true && (bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, ~ (~ (workgroup_size * workgroup_id)))) | 0u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = subgroup_id * subgroup_size;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_base), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint((subgroup_base)), min(uint((subgroup_base)), uint((subgroup_base))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uint(uint((subgroup_base))) : _GLF_FUZZED(workgroup_size)))) | (subgroup_base), 0u + ((subgroup_base) | (subgroup_base)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base))) | _GLF_IDENTITY((subgroup_base), 0u ^ ((subgroup_base)))), (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base) | _GLF_IDENTITY((subgroup_base), 0u ^ ((subgroup_base))), ~ (~ (_GLF_IDENTITY((subgroup_base) | _GLF_IDENTITY((subgroup_base), 0u ^ ((subgroup_base))), (false ? _GLF_FUZZED((subgroup_size / workgroup_base)) : (subgroup_base) | _GLF_IDENTITY(_GLF_IDENTITY((subgroup_base), 0u ^ ((subgroup_base))), max(_GLF_IDENTITY((subgroup_base), 0u ^ ((subgroup_base))), _GLF_IDENTITY((subgroup_base), 0u ^ ((subgroup_base)))))))))))) ^ _GLF_IDENTITY((93130u & 0u), ~ (~ ((93130u & 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(1u * (subgroup_base), 0u | (1u * (subgroup_base))))) | _GLF_IDENTITY((subgroup_base), clamp((subgroup_base), (subgroup_base), (subgroup_base)))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) | _GLF_IDENTITY((subgroup_base), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_base), (_GLF_IDENTITY((subgroup_base), min((subgroup_base), (subgroup_base)))) ^ _GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_base))), 1u))))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY((subgroup_base), (_GLF_IDENTITY((subgroup_base), min((subgroup_base), (subgroup_base)))) ^ _GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, (_GLF_IDENTITY(true, ! (! (true))) ? 0u : _GLF_FUZZED(workgroup_base))), 1u)))))), clamp(_GLF_IDENTITY(~ ((_GLF_IDENTITY((subgroup_base), (_GLF_IDENTITY((subgroup_base), min((subgroup_base), (subgroup_base)))) ^ _GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_base))), min(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_base))), _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_base))))), 1u)))))), min(~ ((_GLF_IDENTITY((subgroup_base), (_GLF_IDENTITY((subgroup_base), min((subgroup_base), (subgroup_base)))) ^ _GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_base))), 1u)))))), ~ ((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_base), (false ? _GLF_FUZZED(workgroup_base) : (subgroup_base))), (_GLF_IDENTITY((subgroup_base), min((subgroup_base), (subgroup_base)))) ^ _GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_base))), (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_base)))) + 0u), 1u)))))))), ~ ((_GLF_IDENTITY((subgroup_base), (_GLF_IDENTITY((subgroup_base), min((_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base))), (subgroup_base)))) ^ _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), max(0u, 0u)), uint(uvec2(_GLF_IDENTITY(0u, (_GLF_IDENTITY(true ? 0u : _GLF_FUZZED(workgroup_base), 0u ^ (_GLF_IDENTITY(true ? 0u : _GLF_FUZZED(workgroup_base), uint(uint(true ? 0u : _GLF_FUZZED(workgroup_base)))))))), 1u)))))), ~ (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_base), (_GLF_IDENTITY((subgroup_base), min((subgroup_base), (subgroup_base)))) ^ _GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_base))), 1u))))), ((_GLF_IDENTITY((subgroup_base), (_GLF_IDENTITY((subgroup_base), min((subgroup_base), (subgroup_base)))) ^ _GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_base))), 1u)))))) | ((_GLF_IDENTITY((subgroup_base), (_GLF_IDENTITY((subgroup_base), min((subgroup_base), (subgroup_base)))) ^ _GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_base))), 1u)))))))))))) | (_GLF_IDENTITY((subgroup_base), clamp(_GLF_IDENTITY((subgroup_base), min((subgroup_base), (subgroup_base))), (subgroup_base), (subgroup_base)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base) | _GLF_IDENTITY((subgroup_base), ((subgroup_base)) >> 0u), (_GLF_IDENTITY((subgroup_base), ((subgroup_base)) / 1u) | _GLF_IDENTITY((subgroup_base), ((subgroup_base)) - 0u)) >> 0u)), clamp(_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_base) | _GLF_IDENTITY((subgroup_base), ((subgroup_base)) >> 0u), max(_GLF_IDENTITY((subgroup_base) | _GLF_IDENTITY((subgroup_base), ((subgroup_base)) >> 0u), ((subgroup_base) | _GLF_IDENTITY((subgroup_base), ((subgroup_base)) >> 0u)) | ((subgroup_base) | _GLF_IDENTITY((subgroup_base), ((subgroup_base)) >> 0u))), (subgroup_base) | _GLF_IDENTITY((subgroup_base), ((subgroup_base)) >> 0u))), (_GLF_IDENTITY((subgroup_base), ((subgroup_base)) / 1u) | _GLF_IDENTITY((subgroup_base), ((subgroup_base)) - 0u)) >> 0u)), _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base) | _GLF_IDENTITY((subgroup_base), _GLF_IDENTITY(((subgroup_base)) >> 0u, (_GLF_IDENTITY(((subgroup_base)) >> 0u, (true ? ((subgroup_base)) >> 0u : _GLF_FUZZED((workgroup_size --))))) | 0u)), (_GLF_IDENTITY((subgroup_base), ((subgroup_base)) / 1u) | _GLF_IDENTITY((subgroup_base), ((subgroup_base)) - 0u)) >> 0u)), _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base) | _GLF_IDENTITY((subgroup_base), ((subgroup_base)) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base)))), _GLF_IDENTITY(((subgroup_base)), (_GLF_IDENTITY(((subgroup_base)), (((subgroup_base))) / 1u)) / 1u) / 1u) | _GLF_IDENTITY((subgroup_base), ((subgroup_base)) - 0u)) >> 0u)))), _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_base) | (subgroup_base), (_GLF_IDENTITY((subgroup_base) | (subgroup_base), max((subgroup_base) | (subgroup_base), (subgroup_base) | (subgroup_base)))) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u + (_GLF_IDENTITY((subgroup_base) | (subgroup_base), (_GLF_IDENTITY((subgroup_base) | (subgroup_base), max((subgroup_base) | (subgroup_base), (subgroup_base) | (subgroup_base)))) + uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), 1u, (0u << _GLF_IDENTITY(uint(5u), uint(5u))), (1u & 1u))), max(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) | _GLF_IDENTITY((subgroup_base), (_GLF_IDENTITY((subgroup_base), (_GLF_IDENTITY((subgroup_base), min((subgroup_base), (subgroup_base)))) ^ _GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (true ? 0u : _GLF_FUZZED(workgroup_base))), 1u))))) | (_GLF_IDENTITY((subgroup_base), clamp(_GLF_IDENTITY((subgroup_base), min((subgroup_base), (subgroup_base))), (subgroup_base), (subgroup_base)))))), max(_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base) | (_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))), _GLF_IDENTITY(((subgroup_base) | _GLF_IDENTITY((subgroup_base), ((subgroup_base)) - 0u)), (((subgroup_base) | _GLF_IDENTITY((subgroup_base), ((subgroup_base)) - 0u))) | (((subgroup_base) | _GLF_IDENTITY((subgroup_base), ((subgroup_base)) - 0u)))) >> 0u)), _GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base)))), 1u, (0u << _GLF_IDENTITY(uint(5u), uint(5u))), (1u & _GLF_IDENTITY(1u, max(1u, 1u))))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) | _GLF_IDENTITY((subgroup_base), (_GLF_IDENTITY((subgroup_base), (_GLF_IDENTITY((subgroup_base), min((subgroup_base), (subgroup_base)))) ^ _GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, (true ? 0u : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) | 0u))))), 1u))))) | (_GLF_IDENTITY((subgroup_base), clamp(_GLF_IDENTITY((subgroup_base), min(_GLF_IDENTITY((subgroup_base), (false ? _GLF_FUZZED(workgroup_base) : (subgroup_base))), (subgroup_base))), _GLF_IDENTITY((subgroup_base), clamp((subgroup_base), (subgroup_base), (subgroup_base))), (subgroup_base)))))), _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base) | (subgroup_base), ((subgroup_base) | _GLF_IDENTITY((subgroup_base), ((subgroup_base)) - 0u)) >> 0u)), _GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base))), (max(_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base) | (subgroup_base), ((subgroup_base) | _GLF_IDENTITY((subgroup_base), ((subgroup_base)) - 0u)) >> 0u)), _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, (subgroup_base) << 0u)) | (subgroup_base)))) | (_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) - 0u), _GLF_IDENTITY((subgroup_base) | (subgroup_base), ((subgroup_base) | _GLF_IDENTITY((subgroup_base), ((subgroup_base)) - 0u)) >> 0u)), _GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base))), (max(_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base) | (subgroup_base), ((subgroup_base) | _GLF_IDENTITY((subgroup_base), ((subgroup_base)) - 0u)) >> 0u)), _GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base)))) ^ 0u)))), 1u, (0u << _GLF_IDENTITY(uint(5u), uint(5u))), (1u & _GLF_IDENTITY(1u, min(1u, 1u)))))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, clamp(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base)), subgroup_base, _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base))) | 0u)) / 1u)))) * 1u), _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base)))) | _GLF_IDENTITY((subgroup_base), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_base), _GLF_IDENTITY(0u + (_GLF_IDENTITY((subgroup_base), ((subgroup_base)) | ((subgroup_base)))), (_GLF_IDENTITY(0u + (_GLF_IDENTITY((subgroup_base), ((subgroup_base)) | ((_GLF_IDENTITY(subgroup_base, (0u | 0u) + (subgroup_base)))))), _GLF_IDENTITY((_GLF_IDENTITY(0u + (_GLF_IDENTITY((subgroup_base), (_GLF_IDENTITY((subgroup_base), ((subgroup_base)) << 0u)) | ((subgroup_base)))), max(0u + (_GLF_IDENTITY((subgroup_base), ((subgroup_base)) | (_GLF_IDENTITY((subgroup_base), uint(uvec2((subgroup_base), 1u)))))), _GLF_IDENTITY(0u + (_GLF_IDENTITY((subgroup_base), ((subgroup_base)) | ((subgroup_base)))), (0u + (_GLF_IDENTITY((subgroup_base), ((subgroup_base)) | ((subgroup_base))))) >> 0u)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((_GLF_IDENTITY(0u + (_GLF_IDENTITY((subgroup_base), (_GLF_IDENTITY((subgroup_base), ((subgroup_base)) << 0u)) | ((subgroup_base)))), max(0u + (_GLF_IDENTITY((subgroup_base), ((subgroup_base)) | (_GLF_IDENTITY((subgroup_base), uint(uvec2((subgroup_base), 1u)))))), _GLF_IDENTITY(0u + (_GLF_IDENTITY((subgroup_base), ((subgroup_base)) | ((subgroup_base)))), (0u + (_GLF_IDENTITY((subgroup_base), ((subgroup_base)) | ((subgroup_base))))) >> 0u)))), min((_GLF_IDENTITY(0u + (_GLF_IDENTITY((subgroup_base), (_GLF_IDENTITY((subgroup_base), ((subgroup_base)) << 0u)) | ((subgroup_base)))), max(0u + (_GLF_IDENTITY((subgroup_base), ((subgroup_base)) | (_GLF_IDENTITY((subgroup_base), uint(uvec2((subgroup_base), 1u)))))), _GLF_IDENTITY(0u + (_GLF_IDENTITY((subgroup_base), ((subgroup_base)) | ((subgroup_base)))), (0u + (_GLF_IDENTITY((subgroup_base), ((subgroup_base)) | ((subgroup_base))))) >> 0u)))), (_GLF_IDENTITY(0u + (_GLF_IDENTITY((subgroup_base), (_GLF_IDENTITY((subgroup_base), ((subgroup_base)) << 0u)) | ((subgroup_base)))), max(0u + (_GLF_IDENTITY((subgroup_base), ((subgroup_base)) | (_GLF_IDENTITY((subgroup_base), uint(uvec2((subgroup_base), 1u)))))), _GLF_IDENTITY(0u + (_GLF_IDENTITY((subgroup_base), ((subgroup_base)) | ((subgroup_base)))), (0u + (_GLF_IDENTITY((subgroup_base), ((subgroup_base)) | ((subgroup_base))))) >> 0u)))))) : _GLF_FUZZED(subgroup_size))) / 1u)) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), (_GLF_IDENTITY(false, bool(bvec3(false, true, true))) ? _GLF_FUZZED(-21.91) : max(injectionSwitch.y, injectionSwitch.y)))) : _GLF_FUZZED(-4.7)))))))), min((_GLF_IDENTITY((subgroup_base), _GLF_IDENTITY(0u + (_GLF_IDENTITY((subgroup_base), _GLF_IDENTITY(((subgroup_base)) | ((subgroup_base)), ~ (~ (((subgroup_base)) | ((subgroup_base))))))), (_GLF_IDENTITY(0u + (_GLF_IDENTITY((subgroup_base), ((subgroup_base)) | ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)), (0u | 0u) + (subgroup_base)))))), (_GLF_IDENTITY(0u + (_GLF_IDENTITY((subgroup_base), (_GLF_IDENTITY((subgroup_base), ((subgroup_base)) << 0u)) | ((subgroup_base)))), max(0u + (_GLF_IDENTITY((subgroup_base), ((subgroup_base)) | (_GLF_IDENTITY((subgroup_base), uint(uvec2((subgroup_base), 1u)))))), _GLF_IDENTITY(0u + (_GLF_IDENTITY((subgroup_base), ((subgroup_base)) | ((subgroup_base)))), (0u + (_GLF_IDENTITY((subgroup_base), ((subgroup_base)) | ((subgroup_base))))) >> 0u)))) / 1u)) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-4.7)))))))), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_base), clamp(_GLF_IDENTITY((subgroup_base), (_GLF_IDENTITY((subgroup_base), uint(uvec3((subgroup_base), 0u, 1u)))) | 0u), (subgroup_base), (subgroup_base))), _GLF_IDENTITY(0u + (_GLF_IDENTITY((subgroup_base), ((subgroup_base)) | ((subgroup_base)))), (_GLF_IDENTITY(0u + (_GLF_IDENTITY((subgroup_base), ((subgroup_base)) | ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (0u | 0u) + (subgroup_base)), min(_GLF_IDENTITY(subgroup_base, (0u | 0u) + (subgroup_base)), _GLF_IDENTITY(subgroup_base, (0u | 0u) + (subgroup_base)))))))), (_GLF_IDENTITY(0u + (_GLF_IDENTITY((subgroup_base), (_GLF_IDENTITY((subgroup_base), ((subgroup_base)) << 0u)) | ((subgroup_base)))), max(0u + (_GLF_IDENTITY((subgroup_base), ((subgroup_base)) | (_GLF_IDENTITY((subgroup_base), uint(uvec2((subgroup_base), 1u)))))), _GLF_IDENTITY(0u + (_GLF_IDENTITY((subgroup_base), ((subgroup_base)) | ((subgroup_base)))), (0u + (_GLF_IDENTITY((subgroup_base), ((subgroup_base)) | ((subgroup_base))))) >> 0u)))) / 1u)) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-4.7)))))))))) - 0u, ((_GLF_IDENTITY((subgroup_base), _GLF_IDENTITY(0u + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_base), _GLF_IDENTITY(((subgroup_base)), (((subgroup_base))) << 0u) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_base), ((subgroup_base)) - 0u), ((subgroup_base)) / (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(7u), uint(7u))), ((1u << _GLF_IDENTITY(uint(7u), uint(7u)))) << ((0u >> _GLF_IDENTITY(uint(1u), uint(1u))) ^ 0u)) >> _GLF_IDENTITY(uint(7u), uint(7u)))))), (0u | 0u) ^ (_GLF_IDENTITY((subgroup_base), _GLF_IDENTITY(((subgroup_base)), ((_GLF_IDENTITY((subgroup_base), (_GLF_IDENTITY((subgroup_base), (false ? _GLF_FUZZED(subgroup_size) : (subgroup_base)))) >> (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))) << 0u) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_base), ((subgroup_base)) - 0u), ((subgroup_base)) / (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(7u), uint(7u))), ((1u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), 0u ^ (uint(7u)))))) << ((0u >> _GLF_IDENTITY(uint(1u), uint(1u))) ^ _GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(subgroup_size))))) >> _GLF_IDENTITY(uint(7u), uint(7u))))))))), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_base), _GLF_IDENTITY(((subgroup_base)), _GLF_IDENTITY((((subgroup_base))), 0u ^ ((((subgroup_base))))) << _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) | (_GLF_IDENTITY((subgroup_base), ((subgroup_base)) / ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, clamp(7u, 7u, 7u))), _GLF_IDENTITY(uint(7u), uint(uvec3(uint(7u), (0u << _GLF_IDENTITY(uint(7u), uint(7u))), 0u))))))))), (101790u & 0u) ^ ((_GLF_IDENTITY((subgroup_base), _GLF_IDENTITY(((subgroup_base)), _GLF_IDENTITY((((subgroup_base))) << _GLF_IDENTITY(0u, (0u) - 0u), (_GLF_IDENTITY(((_GLF_IDENTITY((subgroup_base), (_GLF_IDENTITY((subgroup_base), ((subgroup_base)) | ((subgroup_base)))) | ((subgroup_base))))) << 0u, min((((subgroup_base))) << 0u, (((subgroup_base))) << 0u))) / 1u)) | (_GLF_IDENTITY((subgroup_base), ((subgroup_base)) / _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), _GLF_IDENTITY((uint(7u)) << 0u, (_GLF_IDENTITY((uint(7u)) << 0u, ~ (~ ((uint(7u)) << 0u)))) << 0u)))) >> _GLF_IDENTITY(uint(7u), uint(7u))), uint(uint(_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), (uint(7u)) + 0u), (_GLF_IDENTITY(uint(_GLF_IDENTITY(7u, 0u ^ (7u))), 0u + (uint(_GLF_IDENTITY(7u, 0u ^ (7u)))))) << 0u))) >> _GLF_IDENTITY(uint(7u), uint(7u))), (((1u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) << 0u))) >> _GLF_IDENTITY(uint(7u), uint(7u)))) << 0u))))))))))) >> 0u), (_GLF_IDENTITY(0u + (_GLF_IDENTITY((subgroup_base), ((subgroup_base)) | ((subgroup_base)))), (_GLF_IDENTITY(0u + (_GLF_IDENTITY((subgroup_base), ((subgroup_base)) | ((subgroup_base)))), max(0u + (_GLF_IDENTITY((subgroup_base), ((subgroup_base)) | ((subgroup_base)))), 0u + (_GLF_IDENTITY((subgroup_base), _GLF_IDENTITY(((subgroup_base)) | ((subgroup_base)), (_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_base)) | _GLF_IDENTITY(((subgroup_base)), (((subgroup_base))) | (((subgroup_base)))), max(_GLF_IDENTITY(((subgroup_base)) | ((subgroup_base)), ~ (~ (((subgroup_base)) | ((subgroup_base))))), ((subgroup_base)) | ((subgroup_base)))), (_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_base)) | ((subgroup_base)), max(_GLF_IDENTITY(((subgroup_base)) | ((subgroup_base)), ~ (~ _GLF_IDENTITY((((subgroup_base)) | ((subgroup_base))), ((((subgroup_base)) | ((subgroup_base)))) >> 0u))), (_GLF_IDENTITY((subgroup_base), min(_GLF_IDENTITY((subgroup_base), ((subgroup_base)) + 0u), (subgroup_base)))) | ((subgroup_base)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_base)) | ((subgroup_base)), max(_GLF_IDENTITY(((subgroup_base)) | ((subgroup_base)), ~ (~ (((subgroup_base)) | ((subgroup_base))))), ((subgroup_base)) | ((subgroup_base)))), max(_GLF_IDENTITY(((subgroup_base)) | _GLF_IDENTITY(((subgroup_base)), clamp(((subgroup_base)), ((subgroup_base)), ((subgroup_base)))), max(_GLF_IDENTITY(((subgroup_base)) | ((subgroup_base)), ~ (~ (_GLF_IDENTITY(((subgroup_base)), 0u | (((subgroup_base)))) | ((subgroup_base))))), ((subgroup_base)) | ((subgroup_base)))), _GLF_IDENTITY(((subgroup_base)) | ((subgroup_base)), max(_GLF_IDENTITY(((subgroup_base)) | ((subgroup_base)), ~ (~ (((subgroup_base)) | ((subgroup_base))))), ((subgroup_base)) | ((subgroup_base))))))) | 0u, 0u | ((_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_base)) | ((subgroup_base)), max(_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_base)) | ((subgroup_base)), ~ (~ (((subgroup_base)) | ((subgroup_base))))), uint(uvec4(_GLF_IDENTITY(((subgroup_base)) | ((subgroup_base)), ~ (~ (((subgroup_base)) | ((subgroup_base))))), 0u, 0u, (((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))) & 1u)))), ((subgroup_base)) | ((subgroup_base)))), max(_GLF_IDENTITY(((subgroup_base)) | ((subgroup_base)), max(_GLF_IDENTITY(((subgroup_base)) | _GLF_IDENTITY(((subgroup_base)), (_GLF_IDENTITY(((subgroup_base)), (((subgroup_base))) + 0u)) + (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(3u), uint(3u)))), ~ (~ (((subgroup_base)) | ((subgroup_base))))), _GLF_IDENTITY(((subgroup_base)) | ((subgroup_base)), 0u ^ (((subgroup_base)) | ((subgroup_base)))))), _GLF_IDENTITY(((subgroup_base)) | ((subgroup_base)), max(_GLF_IDENTITY(((subgroup_base)) | ((subgroup_base)), ~ (~ (((subgroup_base)) | ((subgroup_base))))), ((subgroup_base)) | ((subgroup_base))))))) | 0u)))) | (_GLF_IDENTITY(((subgroup_base)) | ((subgroup_base)), max(_GLF_IDENTITY(((subgroup_base)) | ((subgroup_base)), ~ (~ (((subgroup_base)) | ((subgroup_base))))), ((subgroup_base)) | ((subgroup_base))))))) ^ 0u)))))) / 1u)) / uint(_GLF_ONE(1.0, injectionSwitch.y))))) - 0u) - 0u))))), (workgroup_base + subgroup_base) | _GLF_IDENTITY((workgroup_base + subgroup_base), min((workgroup_base + subgroup_base), (workgroup_base + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : subgroup_base), ~ (~ (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : subgroup_base), max((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : subgroup_base), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : subgroup_base))))))))))) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], buf[virtual_gid])), 4, 64, 2);
 if((_GLF_IDENTITY(subgroup_local_id % 2, clamp(_GLF_IDENTITY(subgroup_local_id % 2, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (subgroup_local_id % 2), ~ (_GLF_IDENTITY(~ (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (subgroup_local_id % 2)), 0u ^ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (subgroup_local_id % 2))))))), subgroup_local_id % 2, subgroup_local_id % 2))) == 0)
  {
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))) || false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, 0 | (4)), 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)), _GLF_IDENTITY(virtual_gid, 0u | (_GLF_IDENTITY(virtual_gid, ~ (_GLF_IDENTITY(~ (virtual_gid), ~ (~ (~ (virtual_gid)))))))))), (virtual_gid) >> _GLF_IDENTITY(0u, max(0u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), _GLF_IDENTITY(uint(uvec4((virtual_gid), 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), (_GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, 0u ^ (1u))))) + 0u), 0u)), 1u * (uint(uvec4((virtual_gid), 1u, 1u, 0u))))) >> 0u)), ((_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), _GLF_IDENTITY(uint(uvec4((virtual_gid), 1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 0u)), 1u * (uint(uvec4((_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid))), 1u, 1u, 0u))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), _GLF_IDENTITY(uint(uvec4((virtual_gid), 1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 0u)), 1u * (uint(uvec4((virtual_gid), 1u, 1u, 0u))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), (uint(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY(uint(uvec4((virtual_gid), 1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 0u)), 1u * (uint(uvec4((virtual_gid), 1u, 1u, 0u))))))))))) >> 0u))) | _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), _GLF_IDENTITY(uint(uvec4((virtual_gid), 1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 0u)), 1u * (uint(uvec4((virtual_gid), 1u, 1u, 0u))))) >> 0u)), ((_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), _GLF_IDENTITY(uint(uvec4((virtual_gid), 1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 0u)), 1u * (uint(uvec4((virtual_gid), 1u, 1u, 0u))))) >> 0u))) | ((_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), _GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))) ^ (0u | 0u))), 1u, _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) | (~ (1u))))))), 0u)), 1u * (uint(uvec4((virtual_gid), 1u, _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) | (1u)))), 0u))))) >> 0u))))), 0u ^ ((_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), _GLF_IDENTITY(uint(uvec4((virtual_gid), 1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 0u)), 1u * (uint(uvec4((virtual_gid), 1u, 1u, 0u))))) >> 0u)), ((_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), _GLF_IDENTITY(uint(uvec4((virtual_gid), 1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 0u)), 1u * (uint(uvec4((virtual_gid), 1u, 1u, 0u))))) >> 0u))) | ((_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), _GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))) ^ (0u | 0u))), 1u, _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) | (~ (1u))))))), 0u)), 1u * (uint(uvec4((virtual_gid), 1u, _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) | (1u)))), 0u))))) >> 0u)))))))) / (_GLF_IDENTITY(1u | _GLF_IDENTITY(1u, 0u ^ (1u)), 0u ^ (_GLF_IDENTITY(1u, (1u) >> 0u) | 1u))), ((_GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u)) / (_GLF_IDENTITY(1u | 1u, _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_size) : 1u | 1u), ((false ? _GLF_FUZZED(workgroup_size) : 1u | 1u)) ^ 0u), clamp((false ? _GLF_FUZZED(workgroup_size) : 1u | 1u), (false ? _GLF_FUZZED(workgroup_size) : 1u | 1u), (false ? _GLF_FUZZED(workgroup_size) : 1u | 1u)))))) * _GLF_IDENTITY((0u ^ 1u), ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY((0u ^ 1u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (0u ^ 1u) : _GLF_FUZZED(27477u))))), (0u & 52017u) | ((~ (_GLF_IDENTITY((0u ^ 1u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (0u ^ 1u) : _GLF_FUZZED(27477u))))))), (_GLF_IDENTITY((~ (_GLF_IDENTITY((0u ^ 1u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (0u ^ 1u) : _GLF_FUZZED(27477u))))), ((~ (_GLF_IDENTITY((0u ^ 1u), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))) ? (0u ^ 1u) : _GLF_FUZZED(27477u)))))) / 1u)) | (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))))))], read, 4, 64, _GLF_IDENTITY(4, _GLF_IDENTITY(0, max(0, 0)) | (4)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
