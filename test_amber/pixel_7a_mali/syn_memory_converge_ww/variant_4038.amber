#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, exp(0.0), 1.0))).y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0))).x, log(1.0) + (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0))).x)) > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) / 1.0)) || false)) && true)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), true)))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) && true)))))), true)), (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) || false))))), true), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) || false))))), true)))))) || false)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8.6)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, 0.0, 1.0))) : _GLF_FUZZED(vec2(-38.96, -400.932)))).y, (injectionSwitch.x > injectionSwitch.y) && true), (injectionSwitch.x > injectionSwitch.y) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))))), true, false, true)), false || (bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))))), true, false, true)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || false, ! (! ((_GLF_DEAD(false)) || false)))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8678.5284), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((- 4142.8320))), bvec2(true, false))).x, injectionSwitch.x))), float(_GLF_FUZZED(_GLF_IDENTITY(-3.6, (-3.6) / 1.0))), bool(false))) > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), true, false, true)))))))), (_GLF_DEAD(false)) || false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), false || (_GLF_IDENTITY(bool(false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(true, bool(bvec2(true, true)))))), true && (_GLF_IDENTITY((! (_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(true, bool(bvec2(true, true)))))), ((! (_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(true, bool(bvec2(true, true))))))) && true)))))), false || (_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), false))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)), true && (_GLF_IDENTITY((bool(false)), ! (! ((bool(false))))))) && _GLF_IDENTITY(true, bool(bvec2(true, true))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)), true && (_GLF_IDENTITY((bool(false)), ! (! ((bool(false))))))) && _GLF_IDENTITY(true, bool(bvec2(true, true))))), ! (! (! (_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)), true && (_GLF_IDENTITY((bool(false)), ! (! ((bool(false))))))) && _GLF_IDENTITY(true, bool(bvec2(true, true))))))))) || false))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), false || (bool(false))), true && (_GLF_IDENTITY(bool(false), (bool(false)) && true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, false, true))))), _GLF_IDENTITY(bool(bool((! (_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, false, true))))))), ! (! (bool(bool((! (_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, false, true)))))))))))), ! (! (_GLF_IDENTITY(bool(false), (bool(false)) && true)))))))))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 1.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat3x2(injectionSwitch.x, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 1.0, 0.0), transpose(transpose(mat3x2(injectionSwitch.x, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 1.0, 0.0)))))))), clamp(float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 1.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat3x2(injectionSwitch.x, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 1.0, 0.0), transpose(transpose(mat3x2(injectionSwitch.x, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 1.0, 0.0)))))))), float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 1.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat3x2(injectionSwitch.x, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 1.0, 0.0), transpose(transpose(mat3x2(injectionSwitch.x, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 1.0, 0.0)))))))), float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 1.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat3x2(injectionSwitch.x, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 1.0, 0.0), transpose(transpose(mat3x2(injectionSwitch.x, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 1.0, 0.0))))))))))) > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 0.0, cos(0.0)))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.0)), float(injectionSwitch.y), bool(true))))), true, false)), bvec3(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))))))))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, ! (! (false))) || (false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-4371.1838, 5.5)) : injectionSwitch)).x > injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))) || false)))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))), false)))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))), false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7055.5557), _GLF_FUZZED(-550.217)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0), transpose(transpose(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))))))) + vec2(0.0, 0.0)), injectionSwitch), max(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)))).y, clamp(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(8.2)), vec2(_GLF_FUZZED(5.9), _GLF_IDENTITY((injectionSwitch)[1], max(_GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1])), (injectionSwitch)[1]))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), mat2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(mat2(1.0), (true ? _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))) : _GLF_FUZZED(mat2(3.3, -6409.9172, 9.8, 3.6))))), (false ? _GLF_FUZZED(mat4x3(51.60, -1.3, 436.820, 7.1, 3.2, -2.0, 5412.6779, 9065.2612, 7.8, 4.9, -48.78, 279.550)) : _GLF_IDENTITY(mat4x3(_GLF_IDENTITY(mat2(1.0), (true ? _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))) : _GLF_FUZZED(mat2(3.3, -6409.9172, 9.8, 3.6))))), (false ? _GLF_FUZZED(mat4x3(664.078, 4.4, 755.773, -357.457, -864.385, 4.8, -812.850, -7.4, 3.1, 54.85, 9263.6557, 8029.3756)) : mat4x3(_GLF_IDENTITY(mat2(1.0), (true ? _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))) : _GLF_FUZZED(mat2(3.3, -6409.9172, 9.8, 3.6))))))))))) * (injectionSwitch)), (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), (_GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), clamp((injectionSwitch) + vec2(0.0, 0.0), (injectionSwitch) + vec2(0.0, 0.0), (injectionSwitch) + vec2(0.0, 0.0)))) + vec2(0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || false)))), (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, true)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false))), ! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), (((injectionSwitch.x > injectionSwitch.y))) || false)), bool(bvec4((_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), (((injectionSwitch.x > injectionSwitch.y))) || false)), false, true, false))))))), false, false)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false), bool(bvec4(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false, false)), true, false, false)))))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false))), ! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), (((injectionSwitch.x > injectionSwitch.y))) || false)), bool(bvec4((_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), (((injectionSwitch.x > injectionSwitch.y))) || false)), false, true, false))))))), false, false)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false), bool(bvec4(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false, false)), true, false, false))))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y))))))))))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false))), ! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), bool(bvec3(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), ! (! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))), false, true))), (((injectionSwitch.x > injectionSwitch.y))) || false)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), bool(bvec3(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), ! (! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))), false, true))), (((injectionSwitch.x > injectionSwitch.y))) || false))))), bool(bvec4((_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0) : _GLF_FUZZED(470.711))))), (((injectionSwitch.x > injectionSwitch.y))) || false)), false, true, false))))))), false, false)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false), bool(bvec4(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), bool(bvec2(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), false)))) || false), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false, false)), true, false, false))))))), bool(bvec4((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false))), ! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), bool(bvec3(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), ! (! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))), false, true))), (((injectionSwitch.x > injectionSwitch.y))) || false)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), bool(bvec3(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), ! (! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))), false, true))), (((injectionSwitch.x > injectionSwitch.y))) || false))))), bool(bvec4((_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0) : _GLF_FUZZED(470.711))))), (((injectionSwitch.x > injectionSwitch.y))) || false)), false, true, false))))))), false, false)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false), bool(bvec4(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), bool(bvec2(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), false)))) || false), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false, false)), true, false, false))))))), true, true, true)))), (_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false))), ! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), bool(bvec3(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), ! (! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))), false, true))), (((injectionSwitch.x > injectionSwitch.y))) || false)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), bool(bvec3(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), ! (! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))), false, true))), (((injectionSwitch.x > injectionSwitch.y))) || false))))), bool(bvec4((_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0) : _GLF_FUZZED(470.711))))), (((injectionSwitch.x > injectionSwitch.y))) || false)), false, true, false))))))), false, false)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false), bool(bvec4(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), bool(bvec2(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), false)))) || false), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false, false)), true, false, false))))))), bool(bvec4((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false))), ! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), bool(bvec3(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), ! (! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))), false, true))), (((injectionSwitch.x > injectionSwitch.y))) || false)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), bool(bvec3(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), ! (! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))), false, true))), (((injectionSwitch.x > injectionSwitch.y))) || false))))), bool(bvec4((_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0) : _GLF_FUZZED(470.711))))), (((injectionSwitch.x > injectionSwitch.y))) || false)), false, true, false))))))), false, false)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false), bool(bvec4(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), bool(bvec2(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), false)))) || false), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false, false)), true, false, false))))))), true, true, true)))), ! (_GLF_IDENTITY(! ((! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false))), ! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), bool(bvec3(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), ! (! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))), false, true))), (((injectionSwitch.x > injectionSwitch.y))) || false)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), bool(bvec3(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), ! (! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))), false, true))), (((injectionSwitch.x > injectionSwitch.y))) || false))))), bool(bvec4((_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0) : _GLF_FUZZED(470.711))))), (((injectionSwitch.x > injectionSwitch.y))) || false)), false, true, false))))))), false, false)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false), bool(bvec4(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), bool(bvec2(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), false)))) || false), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false, false)), true, false, false))))))), bool(bvec4((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false))), ! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), bool(bvec3(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), ! (! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))), false, true))), (((injectionSwitch.x > injectionSwitch.y))) || false)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), bool(bvec3(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), ! (! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))), false, true))), (((injectionSwitch.x > injectionSwitch.y))) || false))))), bool(bvec4((_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0) : _GLF_FUZZED(470.711))))), (((injectionSwitch.x > injectionSwitch.y))) || false)), false, true, false))))))), false, false)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false), bool(bvec4(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), bool(bvec2(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), false)))) || false), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false, false)), true, false, false))))))), true, true, true))))), bool(bvec4(! ((! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false))), ! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), bool(bvec3(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), ! (! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))), false, true))), (((injectionSwitch.x > injectionSwitch.y))) || false)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), bool(bvec3(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), ! (! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))), false, true))), (((injectionSwitch.x > injectionSwitch.y))) || false))))), bool(bvec4((_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0) : _GLF_FUZZED(470.711))))), (((injectionSwitch.x > injectionSwitch.y))) || false)), false, true, false))))))), false, false)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false), bool(bvec4(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), bool(bvec2(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), false)))) || false), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false, false)), true, false, false))))))), bool(bvec4((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false))), ! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), bool(bvec3(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), ! (! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))), false, true))), (((injectionSwitch.x > injectionSwitch.y))) || false)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), bool(bvec3(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), ! (! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))), false, true))), (((injectionSwitch.x > injectionSwitch.y))) || false))))), bool(bvec4((_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0) : _GLF_FUZZED(470.711))))), (((injectionSwitch.x > injectionSwitch.y))) || false)), false, true, false))))))), false, false)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false), bool(bvec4(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), bool(bvec2(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), false)))) || false), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false, false)), true, false, false))))))), true, true, true))))), false, false, false)))))) || false))))), ((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), (((injectionSwitch.x > injectionSwitch.y))) || false), ! (! (_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), (((injectionSwitch.x > injectionSwitch.y))) || false))))), bool(bvec4((_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0))), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), (((injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, false || (false)))), false, true, false))))))), false, false)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false), bool(bvec4(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false), bool(bvec4(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false, false)), true, false, false))))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec4(true, false, false, false))) && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))), false)))), false, true)))))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))))), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false)))))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false))))))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false))))))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))), false)), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false))))))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))), false)))))))))), false, true))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false)))))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))), (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))) : _GLF_FUZZED(abs(vec2(858.102, _GLF_IDENTITY(-3.9, (-3.9) / 1.0)))))).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 1.0, 1.0)), (true ? float(vec3(injectionSwitch.y, 1.0, 1.0)) : _GLF_FUZZED(34.01))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / sqrt(1.0)) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true && (bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false)))), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-806.411)), float(injectionSwitch.y), bool(true)))) && true))), false)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), true, false, true)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))))) && true)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-286.035), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-3.8)), bvec2(true, false))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_size, 0u), (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_size, 0u), uvec2(0u, 0u) | (_GLF_IDENTITY(uvec2(subgroup_size, 0u), (uvec2(subgroup_size, _GLF_IDENTITY(0u, ~ (~ (0u))))) >> uvec2(0u, 0u)))), uvec2(1u, 1u) * (_GLF_IDENTITY(uvec2(subgroup_size, 0u), uvec2(0u, 0u) | (_GLF_IDENTITY(uvec2(subgroup_size, 0u), (uvec2(subgroup_size, 0u)) >> uvec2(0u, 0u))))))) << uvec2(0u, 0u)))), subgroup_size, subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), subgroup_size, subgroup_size))) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u), (false ? _GLF_FUZZED(write_val) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u)) >> 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), clamp(~ (subgroup_size), ~ (subgroup_size), _GLF_IDENTITY(~ (subgroup_size), clamp(~ (subgroup_size), ~ (subgroup_size), ~ (subgroup_size))))))), uint(uvec2(subgroup_size, 0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), clamp(~ (subgroup_size), ~ (subgroup_size), _GLF_IDENTITY(~ (subgroup_size), clamp(~ (subgroup_size), ~ (subgroup_size), ~ (subgroup_size))))))), uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), clamp(~ (subgroup_size), ~ (subgroup_size), _GLF_IDENTITY(~ (subgroup_size), clamp(~ (subgroup_size), ~ (subgroup_size), ~ (subgroup_size))))))), uint(uvec2(subgroup_size, 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), min(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))))), subgroup_size, _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (subgroup_size) + (0u >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (false ? _GLF_FUZZED(num_workgroup) : uint(4u)))))), subgroup_size))))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u), (false ? _GLF_FUZZED(write_val) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u)) >> 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), clamp(~ (subgroup_size), ~ (subgroup_size), _GLF_IDENTITY(~ (subgroup_size), clamp(~ (subgroup_size), ~ (subgroup_size), ~ (subgroup_size))))))), uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), max(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))), min(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))))), subgroup_size, _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))), (true ? (_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u), (false ? _GLF_FUZZED(write_val) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u)) >> 0u)))), ~ (~ (uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) | 0u)))), (false ? _GLF_FUZZED(write_val) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u)))) - 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u)) >> 0u)))))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), clamp(~ (subgroup_size), ~ (subgroup_size), _GLF_IDENTITY(~ (subgroup_size), clamp(~ (subgroup_size), ~ (subgroup_size), ~ (subgroup_size))))), min(_GLF_IDENTITY(~ (subgroup_size), clamp(~ (subgroup_size), ~ (subgroup_size), _GLF_IDENTITY(~ (subgroup_size), clamp(~ (subgroup_size), ~ (subgroup_size), ~ (subgroup_size))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), clamp(~ (subgroup_size), ~ (subgroup_size), _GLF_IDENTITY(~ (subgroup_size), clamp(~ (subgroup_size), ~ (subgroup_size), ~ (subgroup_size))))), (_GLF_IDENTITY(~ (subgroup_size), clamp(~ (subgroup_size), ~ (subgroup_size), _GLF_IDENTITY(~ (subgroup_size), clamp(~ (subgroup_size), ~ (subgroup_size), ~ (subgroup_size)))))) ^ 0u))))), uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), min(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))))), subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), min(subgroup_size, subgroup_size))))) : _GLF_FUZZED(workgroup_base))))), clamp((_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), subgroup_size, subgroup_size))) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(subgroup_size, 0u))) | (0u << _GLF_IDENTITY(uint(6u), uint(6u))))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u), _GLF_IDENTITY((false ? _GLF_FUZZED(write_val) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), uint(uvec2(subgroup_size, 0u)))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u)) >> 0u)), (_GLF_IDENTITY((false ? _GLF_FUZZED(write_val) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), uint(uvec2(subgroup_size, 0u)))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u)) >> 0u)), ~ (~ ((false ? _GLF_FUZZED(write_val) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), uint(uvec2(subgroup_size, 0u)))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u)) >> 0u)))))) ^ (0u << _GLF_IDENTITY(uint(8u), uint(8u))))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_size), clamp(~ (subgroup_size), ~ (subgroup_size), _GLF_IDENTITY(~ (subgroup_size), clamp(~ (subgroup_size), ~ (subgroup_size), ~ (subgroup_size)))))), 1u * (~ (_GLF_IDENTITY(~ (subgroup_size), clamp(~ (subgroup_size), ~ (subgroup_size), _GLF_IDENTITY(~ (subgroup_size), clamp(~ (subgroup_size), ~ (subgroup_size), ~ (subgroup_size))))))))), uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), min(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))))), subgroup_size, _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 1u)), ~ (~ (uint(uvec2(subgroup_size, 1u)))))), uint(uvec2(subgroup_size, 0u))), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_size, 0u), (false ? _GLF_FUZZED(uvec2(42364u, 63384u)) : uvec2(subgroup_size, 0u)))))) << 0u), (false ? _GLF_FUZZED(write_val) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_size, 0u), (uvec2(subgroup_size, 0u)) | uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u)) >> 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), clamp(~ (subgroup_size), ~ (subgroup_size), _GLF_IDENTITY(~ (subgroup_size), clamp(~ (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), ~ (subgroup_size), ~ (subgroup_size))))))), uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), min(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(uvec2(subgroup_size, 0u))))))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))))), subgroup_size, _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))), (true ? (_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u), (false ? _GLF_FUZZED(write_val) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), max(uint(uvec2(subgroup_size, 0u)), uint(uvec2(subgroup_size, 0u))))) | 0u)), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u)) >> 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), clamp(~ (subgroup_size), ~ (subgroup_size), _GLF_IDENTITY(~ (subgroup_size), clamp(~ (subgroup_size), ~ (subgroup_size), ~ (subgroup_size))))))), uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_size, 0u), (uvec2(subgroup_size, 0u)) >> _GLF_IDENTITY(uvec2(0u, 0u), (uvec2(0u, 0u)) | uvec2(0u, 0u))))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), min(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))))), subgroup_size, _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))) : _GLF_FUZZED(workgroup_base)))), uint(_GLF_IDENTITY(uvec3((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 1u)), ~ (~ (uint(uvec2(subgroup_size, 1u)))))), uint(uvec2(subgroup_size, 0u))), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_size, 0u), (false ? _GLF_FUZZED(uvec2(42364u, 63384u)) : uvec2(subgroup_size, 0u)))))) << 0u), (false ? _GLF_FUZZED(write_val) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_size, 0u), (uvec2(subgroup_size, 0u)) | uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u)) >> 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), clamp(~ (subgroup_size), ~ (subgroup_size), _GLF_IDENTITY(~ (subgroup_size), clamp(~ (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), ~ (subgroup_size), ~ (subgroup_size))))))), uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), min(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(uvec2(subgroup_size, 0u))))))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))))), subgroup_size, _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))), (true ? (_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u), (false ? _GLF_FUZZED(write_val) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), max(uint(uvec2(subgroup_size, 0u)), uint(uvec2(subgroup_size, 0u))))) | 0u)), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u)) >> 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), clamp(~ (subgroup_size), ~ (subgroup_size), _GLF_IDENTITY(~ (subgroup_size), clamp(~ (subgroup_size), ~ (subgroup_size), ~ (subgroup_size))))))), uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_size, 0u), (uvec2(subgroup_size, 0u)) >> _GLF_IDENTITY(uvec2(0u, 0u), (uvec2(0u, 0u)) | uvec2(0u, 0u))))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), min(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))))), subgroup_size, _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))) : _GLF_FUZZED(workgroup_base)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), (1u & 1u)), uvec3(0u, 0u, 0u) + (uvec3((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 1u)), ~ (~ (uint(uvec2(subgroup_size, 1u)))))), uint(uvec2(subgroup_size, 0u))), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_size, 0u), (false ? _GLF_FUZZED(uvec2(42364u, 63384u)) : uvec2(subgroup_size, 0u)))))) << 0u), (false ? _GLF_FUZZED(write_val) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_size, 0u), (uvec2(subgroup_size, 0u)) | uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u)) >> 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), clamp(~ (subgroup_size), ~ (subgroup_size), _GLF_IDENTITY(~ (subgroup_size), clamp(~ (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), ~ (subgroup_size), ~ (subgroup_size))))))), uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), min(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(uvec2(subgroup_size, 0u))))))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))))), subgroup_size, _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))), (true ? (_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u), (false ? _GLF_FUZZED(write_val) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), max(uint(uvec2(subgroup_size, 0u)), uint(uvec2(subgroup_size, 0u))))) | 0u)), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u)) >> 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), clamp(~ (subgroup_size), ~ (subgroup_size), _GLF_IDENTITY(~ (subgroup_size), clamp(~ (subgroup_size), ~ (subgroup_size), ~ (subgroup_size))))))), uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_size, 0u), (uvec2(subgroup_size, 0u)) >> _GLF_IDENTITY(uvec2(0u, 0u), (uvec2(0u, 0u)) | uvec2(0u, 0u))))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), min(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))))), subgroup_size, _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))) : _GLF_FUZZED(workgroup_base)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), (1u & 1u))))))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), subgroup_size, subgroup_size))) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u), (false ? _GLF_FUZZED(write_val) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u)) >> 0u))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u), (false ? _GLF_FUZZED(write_val) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u)) >> 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u), (false ? _GLF_FUZZED(write_val) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u)) >> 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u), (false ? _GLF_FUZZED(write_val) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u)) >> 0u))))))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), clamp(~ (subgroup_size), ~ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u), min(uvec4(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u), (uvec4(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)) + uvec4(0u, 0u, 0u, 0u))))), 0u ^ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u), min(uvec4(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u), (uvec4(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)) + uvec4(0u, 0u, 0u, 0u))))), (false ? _GLF_FUZZED(subgroup_id) : uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u), min(uvec4(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u), (uvec4(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)) + uvec4(0u, 0u, 0u, 0u))))))))))), _GLF_IDENTITY(~ (subgroup_size), clamp(~ (subgroup_size), ~ (subgroup_size), ~ (subgroup_size))))))), uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), min(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)) >> 0u), uint(uvec2(subgroup_size, 0u))))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))))), subgroup_size, _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : subgroup_size)), uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u, min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u, (false ? _GLF_FUZZED(subgroup_local_id) : (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u)), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u))), (false ? _GLF_FUZZED(write_val) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), uint(uvec2(subgroup_size, 0u)))) << 0u)) >> 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_size), clamp(~ (subgroup_size), ~ (subgroup_size), _GLF_IDENTITY(~ (subgroup_size), clamp(~ (subgroup_size), ~ (subgroup_size), ~ (subgroup_size)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (~ (_GLF_IDENTITY(~ (subgroup_size), clamp(~ (subgroup_size), ~ (subgroup_size), _GLF_IDENTITY(~ (subgroup_size), clamp(~ (subgroup_size), ~ (subgroup_size), ~ (subgroup_size))))))))), uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_size, 0u), (uvec2(subgroup_size, 0u)) | uvec2(0u, 0u)))), min(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))))), subgroup_size, _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))), (true ? (_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u), (false ? _GLF_FUZZED(write_val) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u)) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u)) >> 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) ^ 0u)))), clamp(~ (subgroup_size), ~ (subgroup_size), _GLF_IDENTITY(~ (subgroup_size), clamp(~ (subgroup_size), ~ (subgroup_size), ~ (subgroup_size))))))), uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(subgroup_size, 0u))) ^ 0u)), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), min(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))))), subgroup_size, _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))) : _GLF_FUZZED(workgroup_base))))), uint(uvec4((_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), subgroup_size, subgroup_size))) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_size, 0u), max(uvec2(subgroup_size, 0u), uvec2(subgroup_size, 0u))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u), (false ? _GLF_FUZZED(write_val) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u)) >> 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(packHalf2x16(injectionSwitch))))), clamp(~ (subgroup_size), ~ (subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), clamp(~ (subgroup_size), ~ (subgroup_size), ~ (subgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), clamp(~ (subgroup_size), ~ (subgroup_size), ~ (subgroup_size))), clamp(_GLF_IDENTITY(~ (subgroup_size), clamp(~ (subgroup_size), ~ (subgroup_size), ~ (subgroup_size))), _GLF_IDENTITY(~ (subgroup_size), clamp(~ (subgroup_size), ~ (subgroup_size), ~ (subgroup_size))), _GLF_IDENTITY(~ (subgroup_size), clamp(~ (subgroup_size), ~ (subgroup_size), ~ (subgroup_size)))))) ^ 0u))))), uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), min(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))))), subgroup_size, _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 1u)), (uint(uvec2(subgroup_size, 1u))) - 0u)), 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u), (false ? _GLF_FUZZED(write_val) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_size, 0u), (uvec2(subgroup_size, 0u)) << uvec2(0u, 0u)))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u)) >> 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), clamp(~ (subgroup_size), ~ (subgroup_size), _GLF_IDENTITY(~ (subgroup_size), clamp(~ (subgroup_size), ~ (subgroup_size), ~ (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u)))))))))), uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), min(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))))), subgroup_size, _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u), (false ? _GLF_FUZZED(write_val) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u)) >> 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), clamp(~ (subgroup_size), ~ (subgroup_size), _GLF_IDENTITY(~ (subgroup_size), clamp(~ (subgroup_size), ~ (subgroup_size), ~ (subgroup_size))))))), uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), min(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u), (false ? _GLF_FUZZED(write_val) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u)) >> 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), clamp(~ (subgroup_size), ~ (subgroup_size), _GLF_IDENTITY(~ (subgroup_size), clamp(~ (subgroup_size), ~ (subgroup_size), ~ (subgroup_size))))))), uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), min(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u), (false ? _GLF_FUZZED(write_val) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u)) >> 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), clamp(~ (subgroup_size), ~ (subgroup_size), _GLF_IDENTITY(~ (subgroup_size), clamp(~ (subgroup_size), ~ (subgroup_size), ~ (subgroup_size))))))), uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), min(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))))) : _GLF_FUZZED(packSnorm4x8(vec4(5.3, -8.2, 3.2, -0.9))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u), (false ? _GLF_FUZZED(write_val) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u)) >> 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), clamp(~ (subgroup_size), ~ (subgroup_size), _GLF_IDENTITY(~ (subgroup_size), clamp(~ (subgroup_size), ~ (subgroup_size), ~ (subgroup_size))))))), uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), min(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u), (false ? _GLF_FUZZED(write_val) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u)) >> 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), clamp(~ (subgroup_size), ~ (subgroup_size), _GLF_IDENTITY(~ (subgroup_size), clamp(~ (subgroup_size), ~ (subgroup_size), ~ (subgroup_size))))))), uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), min(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))))))), ~ (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u), (false ? _GLF_FUZZED(write_val) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u)) >> 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), clamp(~ (subgroup_size), ~ (subgroup_size), _GLF_IDENTITY(~ (subgroup_size), clamp(~ (subgroup_size), ~ (subgroup_size), ~ (subgroup_size))))))), uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), min(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))))))))))))), subgroup_size, _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))) : _GLF_FUZZED(workgroup_base))))), 0u, 1u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))))), (_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), subgroup_size, subgroup_size))) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 1u, 0u))), uint(uvec2(subgroup_size, 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u), (false ? _GLF_FUZZED(write_val) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u)) >> 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), clamp(~ (subgroup_size), ~ (subgroup_size), _GLF_IDENTITY(~ (subgroup_size), clamp(~ (subgroup_size), ~ (subgroup_size), ~ (subgroup_size))))))), uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), min(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))))), subgroup_size, _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u), (false ? _GLF_FUZZED(write_val) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u)) >> 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), clamp(~ (subgroup_size), ~ (subgroup_size), _GLF_IDENTITY(~ (subgroup_size), clamp(~ (subgroup_size), ~ (subgroup_size), ~ (subgroup_size))))))), uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), min(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u), (false ? _GLF_IDENTITY(_GLF_FUZZED(write_val), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : _GLF_FUZZED(write_val))) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))), 0u | ((_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))))))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)))) << 0u)) >> 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), clamp(~ (subgroup_size), ~ (subgroup_size), _GLF_IDENTITY(~ (subgroup_size), clamp(_GLF_IDENTITY(~ (subgroup_size), (0u | 0u) ^ (~ (subgroup_size))), ~ (subgroup_size), ~ (subgroup_size))))))), uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), min(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(subgroup_size, 0u))) >> 0u)))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))))) : _GLF_FUZZED(subgroup_id))), subgroup_size, _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size))))), (true ? (_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), uint(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(56.54)), float(1.0), bool(true))), injectionSwitch.y)) * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u), (false ? _GLF_FUZZED(write_val) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u)) >> 0u, max((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u)) >> 0u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u)) >> 0u, uint(uvec4((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u)) >> 0u, 0u, 0u, 0u))))))))), (false ? _GLF_FUZZED(subgroup_id) : (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u), (false ? _GLF_FUZZED(write_val) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u)) >> 0u, max((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u)) >> 0u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u)) >> 0u, uint(uvec4((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) << 0u)) >> 0u, 0u, 0u, 0u)))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_size), clamp(~ (subgroup_size), ~ (subgroup_size), _GLF_IDENTITY(~ (subgroup_size), clamp(~ (subgroup_size), ~ (subgroup_size), ~ (subgroup_size)))))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_size), clamp(~ (subgroup_size), ~ (subgroup_size), _GLF_IDENTITY(~ (subgroup_size), clamp(~ (subgroup_size), ~ (subgroup_size), ~ (subgroup_size)))))), ((_GLF_IDENTITY(~ (subgroup_size), clamp(~ (subgroup_size), ~ (subgroup_size), _GLF_IDENTITY(~ (subgroup_size), clamp(~ (subgroup_size), ~ (subgroup_size), ~ (subgroup_size))))))) * 1u)))), uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), min(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))))), subgroup_size, _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))) : _GLF_FUZZED(workgroup_base))))))))) | (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), min((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(true, false || (true)) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), uint(uvec4(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), 0u, ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | (5u))))), 0u))) : _GLF_FUZZED(workgroup_id))), uint(uvec2(subgroup_size, 0u))), subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), 0u))), subgroup_size, subgroup_size))) | (_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), subgroup_size, subgroup_size))))) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))), subgroup_size, _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_id))), subgroup_size)))), (_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), subgroup_size, subgroup_size))) ^ 0u), (_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), subgroup_size, subgroup_size))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_size, 0u), (uvec2(subgroup_size, 0u)) | (uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uvec2(1u), uvec2(1u)))))), subgroup_size, subgroup_size)), clamp(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) + 0u), subgroup_size, subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), subgroup_size, subgroup_size)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), subgroup_size, subgroup_size)), uint(uvec4(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), subgroup_size, subgroup_size)), 0u, (0u ^ 1u), 1u))), _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), subgroup_size, subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), subgroup_size, subgroup_size))) | (_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), subgroup_size, subgroup_size)))), uint(uvec3(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), subgroup_size, subgroup_size)), 0u, 0u))))), _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), subgroup_size, subgroup_size)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_size, 0u), uvec2(uvec2(_GLF_IDENTITY(uvec2(subgroup_size, 0u), (uvec2(subgroup_size, 0u)) << uvec2(0u, 0u))))))), subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), subgroup_size, subgroup_size))) ^ 0u), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), subgroup_size, subgroup_size), (clamp(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) / 1u), 0u, 0u))) | (0u))))), subgroup_size, subgroup_size)) - 0u))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), subgroup_size, subgroup_size), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), subgroup_size, subgroup_size), (clamp(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), subgroup_size, subgroup_size)) / 1u)) | 0u), (clamp(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) | (0u))))), subgroup_size, subgroup_size)) - 0u))), ((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_size, 0u), max(uvec2(subgroup_size, 0u), uvec2(subgroup_size, 0u))))), subgroup_size, subgroup_size), _GLF_IDENTITY((clamp(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) | (0u))))), subgroup_size, subgroup_size)) - 0u, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((clamp(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) | (0u))))), subgroup_size, subgroup_size)) - 0u, max((clamp(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) | (0u))))), subgroup_size, subgroup_size)) - 0u, (clamp(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) | (0u))))), subgroup_size, subgroup_size)) - 0u)))))))) ^ 0u)) | 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), subgroup_size, subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size)), clamp(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u))), subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))), subgroup_size)), _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), subgroup_size, subgroup_size))))) | (_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), subgroup_size, subgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), subgroup_size, subgroup_size)), clamp(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), subgroup_size, subgroup_size), (clamp(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), subgroup_size, subgroup_size)) | 0u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), clamp(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), subgroup_size, subgroup_size)), uint(uvec3(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), subgroup_size, subgroup_size)), 0u, 0u))))), _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), subgroup_size, _GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))))))))) - 0u)) | (subgroup_size))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / uint(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u & (105089u), _GLF_IDENTITY(uint(uvec2(0u & (105089u), 0u)), min(_GLF_IDENTITY(uint(uvec2(0u & (105089u), 0u)), min(uint(uvec2(0u & (105089u), 0u)), uint(uvec2(0u & (105089u), 0u)))), uint(uvec2(0u & (105089u), 0u)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ 0u), (0u) >> 0u))), max(_GLF_IDENTITY(0u, (0u) >> 0u), 0u))))) ^ (workgroup_base))) << _GLF_IDENTITY(0u, (0u) | (0u | _GLF_IDENTITY(0u, ~ (~ (0u)))))) + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), ((false)) || false), true, true, true))))), true && (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), ((false)) || false), true, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec4(bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, true, false)))))))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, tan(0.0)), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, tan(0.0)), vec3(1.0, 0.0, 0.0))), (_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, tan(0.0)), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, tan(0.0)), vec3(1.0, 0.0, 0.0))), mix(float(_GLF_FUZZED((694.102 - 34.50))), float(_GLF_IDENTITY(dot(vec3(1.0, 0.0, tan(0.0)), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, tan(0.0)), vec3(1.0, 0.0, 0.0)))), bool(true)))) + determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)))) > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(30.64, 55.80)) : injectionSwitch)).x), _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), cos(0.0), 0.0, sin(0.0), 1.0, abs(0.0), 0.0)))), float(mat3x4(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), cos(0.0), 0.0, sin(0.0), 1.0, abs(0.0), 0.0)))), clamp(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), cos(0.0), 0.0, sin(0.0), 1.0, abs(0.0), 0.0)))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), cos(0.0), 0.0, sin(0.0), 1.0, abs(0.0), 0.0)))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), cos(0.0), 0.0, sin(0.0), 1.0, abs(0.0), 0.0)))))), 0.0, 1.0, 0.0, 1.0, log(1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)))) + (injectionSwitch)).y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 atomicStore(write_val, uint(virtual_gid), 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, false || (false)), false, false), true))), false))))))), (bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, false))) && true))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), _GLF_IDENTITY(true && (false), (true && (false)) || false))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), (! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))) || false))), true && ((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false)))))))))))), ((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false))))))))))))) || false), (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))), ! (! ((! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))))) || false))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), (! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), ((false)) && true)), ! (! ((! _GLF_IDENTITY((false), ((false)) && true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), ((false)) && true)), ! (! ((! _GLF_IDENTITY((false), ((false)) && true))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), ((false)) && true)), ! (! ((! _GLF_IDENTITY((false), ((false)) && true))))))), false || (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ((false)) && true)), ! (! ((! _GLF_IDENTITY((false), ((false)) && true)))))))))))))))))) || false))), true && ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), (! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY((false), ((false)) && true)), ! (! ((! _GLF_IDENTITY((false), ((false)) && true))))), true && (_GLF_IDENTITY((! _GLF_IDENTITY((false), ((false)) && true)), ! (! ((! _GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(true, false || (true)))))))))))))) || false))))), true && _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))))), (! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))) || false)))), bool(bvec2(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))))), (! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))) || false)))), _GLF_IDENTITY(bool(bvec2(((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))))), (! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))) || false)))), false)), bool(bvec2(bool(bvec2(((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))))), (! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))) || false)))), false)), true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), (! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((! (false))), ! (! (_GLF_IDENTITY(bool((! (false))), bool(bvec4(bool((! (false))), false, false, false))))))), bool(bvec4(bool(_GLF_IDENTITY(bool((! (false))), ! (! (_GLF_IDENTITY(bool((! (false))), bool(bvec4(bool((! (false))), false, false, false))))))), true, false, true))))))))) || false))), true && ((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))), bool(bvec2(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))), true)))) || false), (! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))) || false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / cos(vec2(0.0, 0.0))), injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / cos(vec2(0.0, 0.0))), injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / cos(vec2(0.0, 0.0))), injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / cos(vec2(0.0, 0.0))), injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / cos(vec2(0.0, 0.0))), injectionSwitch)).y)))), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / cos(vec2(0.0, 0.0))), injectionSwitch)).y) / cos(abs(0.0)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(true, true && (true)) && ((injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, true && (true)) && ((injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, true && (true)) && ((injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, true && (true)) && ((injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, true && (true)) && ((injectionSwitch.x > injectionSwitch.y)))))))))) && true))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))))))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bool(bool(bool(_GLF_DEAD(false))))))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true), false, true, true)))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint read_val = atomicLoad(write_val, 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), bool(bvec2(_GLF_IDENTITY(true, false || (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false) && (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, false, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 buf[virtual_gid] = uint(subgroupAllEqual(read_val));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec2(injectionSwitch.x, abs(1.0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(6724.8218) : float(vec2(injectionSwitch.x, abs(1.0)))))) > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((-123.072 - -5244.5212))), vec2(_GLF_FUZZED((1304.9967 / (199.901))), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 1
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
