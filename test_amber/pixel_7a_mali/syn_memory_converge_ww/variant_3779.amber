#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_16 {
 bvec2 _f0;
 bool _f1;
 mat3 _f2;
} ;

struct _GLF_struct_14 {
 mat2 _f0;
 mat2x3 _f1;
} ;

struct _GLF_struct_13 {
 ivec2 _f0;
 mat2x4 _f1;
 mat4x2 _f2;
 mat4x3 _f3;
 mat3 _f4;
} ;

struct _GLF_struct_15 {
 mat4x3 _f0;
 _GLF_struct_13 _f1;
 mat2 _f2;
 _GLF_struct_14 _f3;
} ;

struct _GLF_struct_12 {
 uint subgroup_size;
 mat2 _f0;
} ;

struct _GLF_struct_11 {
 mat2x4 _f0;
} ;

struct _GLF_struct_17 {
 _GLF_struct_11 _f0;
 _GLF_struct_12 _f1;
 bvec4 _f2;
 _GLF_struct_15 _f3;
 mat3 _f4;
 _GLF_struct_16 _f5;
} ;

struct _GLF_struct_8 {
 mat3x2 _f0;
 uvec4 _f1;
 bool _f2;
 ivec3 _f3;
 bvec2 _f4;
} ;

struct _GLF_struct_7 {
 ivec2 _f0;
 float _f1;
 bvec2 _f2;
 bvec4 _f3;
 uvec4 _f4;
 mat2 _f5;
 vec2 _f6;
} ;

struct _GLF_struct_9 {
 _GLF_struct_7 _f0;
 _GLF_struct_8 _f1;
 vec3 _f2;
} ;

struct _GLF_struct_5 {
 int _f0;
 mat3 _f1;
 vec4 _f2;
 bvec2 _f3;
 bvec2 _f4;
 mat3x2 _f5;
 mat3 _f6;
} ;

struct _GLF_struct_4 {
 mat2x3 _f0;
 uint _f1;
 bvec2 _f2;
 mat2x4 _f3;
 float _f4;
} ;

struct _GLF_struct_6 {
 mat4 _f0;
 mat2 _f1;
 _GLF_struct_4 _f2;
 mat4x2 _f3;
 _GLF_struct_5 _f4;
} ;

struct _GLF_struct_2 {
 mat4x2 _f0;
 mat3x4 _f1;
 ivec3 _f2;
 uvec2 _f3;
 vec2 _f4;
 float _f5;
 mat2x3 _f6;
} ;

struct _GLF_struct_1 {
 vec2 _f0;
 vec3 _f1;
 mat3 _f2;
 uint _f3;
} ;

struct _GLF_struct_0 {
 int _f0;
 mat2 _f1;
 bool _f2;
 bvec3 _f3;
 int _f4;
 mat2x4 _f5;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 ivec4 _f1;
 uint _f2;
 _GLF_struct_1 _f3;
 _GLF_struct_2 _f4;
} ;

struct _GLF_struct_10 {
 _GLF_struct_3 _f0;
 _GLF_struct_6 _f1;
 mat4x3 _f2;
 uvec3 GLF_merged3_0_1_8_1_1_17_2_1_13read_valsubgroup_local_idsubgroup_size;
 _GLF_struct_9 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_10 _GLF_struct_replacement_10;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_17 _GLF_struct_replacement_17 = _GLF_struct_17(_GLF_struct_11(mat2x4(1.0)), _GLF_struct_12(gl_SubgroupSize, mat2(1.0)), bvec4(true), _GLF_struct_15(mat4x3(1.0), _GLF_struct_13(ivec2(1), mat2x4(1.0), mat4x2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_IDENTITY(_GLF_FUZZED(-31.44), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(-31.44), min(_GLF_FUZZED(-31.44), _GLF_FUZZED(-31.44))) : _GLF_FUZZED(-5.6)))), bool(_GLF_IDENTITY(false, ! (! (false)))))), min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), 1.0))), mat4x3(1.0), mat3(1.0)), mat2(1.0), _GLF_struct_14(_GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(mat2(1.0), mat2(mat4x2(mat2(1.0))))) - mat2(0.0, 0.0, 0.0, 0.0)), mat2x3(1.0))), mat3(1.0), _GLF_struct_16(bvec2(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec4(_GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (bool(true)), true && (! (bool(true)))))), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, true))))), true, true))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, true))), bool(bvec2(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, true))), true)))) && true)), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, true))), bool(bvec2(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, true))), true)))) && true)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, true))), bool(bvec2(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, true))), true)))) && true)), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, true))), bool(bvec2(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, true))), true)))) && true)), false, true, false))), true)), (bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, true))), bool(bvec2(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, true))), true)))) && true)), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, true))), bool(bvec2(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, true))), true)))) && true)), false, true, false))), true))) || false))) && true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, true))), (_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, true)))) && true)))) && true, bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, true))), bool(bvec2(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, true))), true)))) && true)), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, true))), bool(bvec2(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, true))), true)))) && true)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, true))), bool(bvec2(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, true))), true)))) && true)), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, true))), bool(bvec2(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, true))), true)))) && true)), false, true, false))), true)), (bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, true))), bool(bvec2(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, true))), true)))) && true)), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, true))), bool(bvec2(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, true))), true)))) && true)), false, true, false))), true))) || false))) && true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, true))), (_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, true)))) && true)))) && true, false), bvec2(bvec3(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, true))), bool(bvec2(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, true))), true)))) && true)), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, true))), bool(bvec2(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, true))), true)))) && true)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, true))), bool(bvec2(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, true))), true)))) && true)), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, true))), bool(bvec2(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, true))), true)))) && true)), false, true, false))), true)), (bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, true))), bool(bvec2(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, true))), true)))) && true)), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, true))), bool(bvec2(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, true))), true)))) && true)), false, true, false))), true))) || false))) && true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, true))), (_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, true)))) && true)))) && true, false), false)))))))))))), true, mat3(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(464.711) : 1.0))))), float(_GLF_FUZZED(-5.6)), bool(false))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
  {
   do
    {
     barrier();
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_WRAPPED_LOOP(false))));
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))) || false); _injected_loop_counter --)
        {
         barrier();
        }
      }
    }
  }
 do
  {
   _GLF_struct_replacement_10.GLF_merged3_0_1_8_1_1_17_2_1_13read_valsubgroup_local_idsubgroup_size.z = _GLF_struct_replacement_17._f1.subgroup_size;
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_WRAPPED_LOOP(false))))));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! (true), (! (true)) && true)), bool(bool((_GLF_IDENTITY(! (true), (! (true)) && true))))))))
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     _GLF_struct_replacement_10.GLF_merged3_0_1_8_1_1_17_2_1_13read_valsubgroup_local_idsubgroup_size.y = subgroup_local_id;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * vec2(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) + 0.0)) / 1.0))))).y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), true && (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), false, true))))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y)), false, true))), true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))));
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) && true)))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), ~ (~ (uvec3(uvec3(gl_WorkGroupSize)))))), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)) || false, bool(bool(_GLF_IDENTITY((bool(false)) || false, ! (! ((bool(false)) || false))))))))) ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) | (0u))) + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), (uvec3(46646u, 95536u, 2178u)) | (uvec3(46646u, 95536u, 2178u))), (_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), max(uvec3(46646u, 95536u, 2178u), uvec3(46646u, 95536u, 2178u)))) / _GLF_IDENTITY(uvec3(1u, 1u, _GLF_IDENTITY(1u, (1u) >> 0u)), (true ? _GLF_IDENTITY(uvec3(1u, 1u, 1u), max(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) + uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(_GLF_IDENTITY(5453u, max(5453u, 5453u)), 111830u, 69289u)))))), _GLF_IDENTITY(((_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), (_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), max(uvec3(46646u, 95536u, 2178u), uvec3(46646u, 95536u, 2178u)))) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (true ? _GLF_IDENTITY(uvec3(1u, 1u, 1u), max(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) + uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(5453u, 111830u, 69289u))))))) | ((_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), (_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), max(uvec3(46646u, 95536u, 2178u), uvec3(46646u, 95536u, 2178u)))) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (true ? _GLF_IDENTITY(uvec3(1u, 1u, 1u), max(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) + uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(5453u, 111830u, 69289u))))))), max(((_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), (_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), max(uvec3(46646u, 95536u, 2178u), uvec3(46646u, 95536u, 2178u)))) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (true ? _GLF_IDENTITY(uvec3(1u, 1u, 1u), max(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) + uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(5453u, 111830u, 69289u))))))) | ((_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), (_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), max(uvec3(46646u, 95536u, 2178u), uvec3(46646u, 95536u, 2178u)))) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (true ? _GLF_IDENTITY(uvec3(1u, 1u, 1u), max(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) + uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(5453u, 111830u, 69289u))))))), ((_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), (_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), max(uvec3(46646u, 95536u, 2178u), uvec3(46646u, 95536u, 2178u)))) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (true ? _GLF_IDENTITY(uvec3(1u, 1u, 1u), max(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) + uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(5453u, 111830u, 69289u))))))) | ((_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), (_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), max(uvec3(46646u, 95536u, 2178u), uvec3(46646u, 95536u, 2178u)))) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (true ? _GLF_IDENTITY(uvec3(1u, 1u, 1u), max(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) + uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(5453u, 111830u, 69289u))))))))))), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) | (0u))) + _GLF_IDENTITY((_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), (_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), max(uvec3(46646u, 95536u, 2178u), uvec3(46646u, 95536u, 2178u)))) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (true ? _GLF_IDENTITY(uvec3(1u, 1u, 1u), max(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) + uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(5453u, 111830u, 69289u)))))), ((_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), (_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), max(uvec3(46646u, 95536u, 2178u), uvec3(46646u, 95536u, 2178u)))) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (true ? _GLF_IDENTITY(uvec3(1u, 1u, 1u), max(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) + uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(5453u, 111830u, 69289u))))))) | ((_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), (_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), max(uvec3(46646u, 95536u, 2178u), uvec3(46646u, 95536u, 2178u)))) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (true ? _GLF_IDENTITY(uvec3(1u, 1u, 1u), max(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) + uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(5453u, 111830u, 69289u))))))))), 0u), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) | (0u))) + _GLF_IDENTITY((_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), (_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), max(uvec3(46646u, 95536u, 2178u), uvec3(46646u, 95536u, 2178u)))) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (true ? _GLF_IDENTITY(uvec3(1u, 1u, 1u), max(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) + uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(5453u, 111830u, 69289u)))))), ((_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), (_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), max(uvec3(46646u, 95536u, 2178u), uvec3(46646u, 95536u, 2178u)))) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (true ? _GLF_IDENTITY(uvec3(1u, 1u, 1u), max(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) + uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(5453u, 111830u, 69289u))))))) | ((_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), (_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), max(uvec3(46646u, 95536u, 2178u), uvec3(46646u, 95536u, 2178u)))) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (true ? _GLF_IDENTITY(uvec3(1u, 1u, 1u), max(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) + uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(5453u, 111830u, 69289u))))))))), 0u), max(uvec4(_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) | (0u))) + _GLF_IDENTITY((_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), (_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), max(uvec3(46646u, 95536u, 2178u), uvec3(46646u, 95536u, 2178u)))) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (true ? _GLF_IDENTITY(uvec3(1u, 1u, 1u), max(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) + uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(5453u, 111830u, 69289u)))))), ((_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), (_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), max(uvec3(46646u, 95536u, 2178u), uvec3(46646u, 95536u, 2178u)))) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (true ? _GLF_IDENTITY(uvec3(1u, 1u, 1u), max(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) + uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(5453u, 111830u, 69289u))))))) | ((_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), (_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), max(uvec3(46646u, 95536u, 2178u), uvec3(46646u, 95536u, 2178u)))) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (true ? _GLF_IDENTITY(uvec3(1u, 1u, 1u), max(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) + uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(5453u, 111830u, 69289u))))))))), 0u), uvec4(_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) | (0u))) + _GLF_IDENTITY((_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), (_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), max(uvec3(46646u, 95536u, 2178u), uvec3(46646u, 95536u, 2178u)))) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (true ? _GLF_IDENTITY(uvec3(1u, 1u, 1u), max(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) + uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(5453u, 111830u, 69289u)))))), ((_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), (_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), max(uvec3(46646u, 95536u, 2178u), uvec3(46646u, 95536u, 2178u)))) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (true ? _GLF_IDENTITY(uvec3(1u, 1u, 1u), max(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) + uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(5453u, 111830u, 69289u))))))) | ((_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), (_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), max(uvec3(46646u, 95536u, 2178u), uvec3(46646u, 95536u, 2178u)))) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (true ? _GLF_IDENTITY(uvec3(1u, 1u, 1u), max(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) + uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(5453u, 111830u, 69289u))))))))), 0u)))) | uvec4(0u, 0u, 0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) | (0u))) + _GLF_IDENTITY((_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), (_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), max(uvec3(46646u, 95536u, 2178u), uvec3(46646u, 95536u, 2178u)))) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (true ? _GLF_IDENTITY(uvec3(1u, 1u, 1u), max(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) + uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(5453u, 111830u, 69289u)))))), ((_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), (_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), max(uvec3(46646u, 95536u, 2178u), uvec3(46646u, 95536u, 2178u)))) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (true ? _GLF_IDENTITY(uvec3(1u, 1u, 1u), max(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) + uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(5453u, 111830u, 69289u))))))) | ((_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), (_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), max(uvec3(46646u, 95536u, 2178u), uvec3(46646u, 95536u, 2178u)))) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (true ? _GLF_IDENTITY(uvec3(1u, 1u, 1u), max(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) + uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(5453u, 111830u, 69289u))))))))), 0u), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) | (0u))) + _GLF_IDENTITY((_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), (_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), max(uvec3(46646u, 95536u, 2178u), uvec3(46646u, 95536u, 2178u)))) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (true ? _GLF_IDENTITY(uvec3(1u, 1u, 1u), max(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) + uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(5453u, 111830u, 69289u)))))), ((_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), (_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), max(uvec3(46646u, 95536u, 2178u), uvec3(46646u, 95536u, 2178u)))) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (true ? _GLF_IDENTITY(uvec3(1u, 1u, 1u), max(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) + uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(5453u, 111830u, 69289u))))))) | ((_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), (_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), max(uvec3(46646u, 95536u, 2178u), uvec3(46646u, 95536u, 2178u)))) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (true ? _GLF_IDENTITY(uvec3(1u, 1u, 1u), max(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) + uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(5453u, 111830u, 69289u))))))))), 0u), max(uvec4(_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) | (0u))) + _GLF_IDENTITY((_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), (_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), max(uvec3(46646u, 95536u, 2178u), uvec3(46646u, 95536u, 2178u)))) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (true ? _GLF_IDENTITY(uvec3(1u, 1u, 1u), max(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) + uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(5453u, 111830u, 69289u)))))), ((_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), (_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), max(uvec3(46646u, 95536u, 2178u), uvec3(46646u, 95536u, 2178u)))) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (true ? _GLF_IDENTITY(uvec3(1u, 1u, 1u), max(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) + uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(5453u, 111830u, 69289u))))))) | ((_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), (_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), max(uvec3(46646u, 95536u, 2178u), uvec3(46646u, 95536u, 2178u)))) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (true ? _GLF_IDENTITY(uvec3(1u, 1u, 1u), max(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) + uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(5453u, 111830u, 69289u))))))))), 0u), uvec4(_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) | (0u))) + _GLF_IDENTITY((_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), (_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), max(uvec3(46646u, 95536u, 2178u), uvec3(46646u, 95536u, 2178u)))) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (true ? _GLF_IDENTITY(uvec3(1u, 1u, 1u), max(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) + uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(5453u, 111830u, 69289u)))))), ((_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), (_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), max(uvec3(46646u, 95536u, 2178u), uvec3(46646u, 95536u, 2178u)))) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (true ? _GLF_IDENTITY(uvec3(1u, 1u, 1u), max(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) + uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(5453u, 111830u, 69289u))))))) | ((_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), (_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), max(uvec3(46646u, 95536u, 2178u), uvec3(46646u, 95536u, 2178u)))) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (true ? _GLF_IDENTITY(uvec3(1u, 1u, 1u), max(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) + uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(5453u, 111830u, 69289u))))))))), 0u)))) | uvec4(0u, 0u, 0u, 0u)), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) | (0u))) + _GLF_IDENTITY((_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), (_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), max(uvec3(46646u, 95536u, 2178u), uvec3(46646u, 95536u, 2178u)))) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (true ? _GLF_IDENTITY(uvec3(1u, 1u, 1u), max(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) + uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(5453u, 111830u, 69289u)))))), ((_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), (_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), max(uvec3(46646u, 95536u, 2178u), uvec3(46646u, 95536u, 2178u)))) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (true ? _GLF_IDENTITY(uvec3(1u, 1u, 1u), max(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) + uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(5453u, 111830u, 69289u))))))) | ((_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), (_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), max(uvec3(46646u, 95536u, 2178u), uvec3(46646u, 95536u, 2178u)))) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (true ? _GLF_IDENTITY(uvec3(1u, 1u, 1u), max(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) + uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(5453u, 111830u, 69289u))))))))), 0u), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) | (0u))) + _GLF_IDENTITY((_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), (_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), max(uvec3(46646u, 95536u, 2178u), uvec3(46646u, 95536u, 2178u)))) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (true ? _GLF_IDENTITY(uvec3(1u, 1u, 1u), max(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) + uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(5453u, 111830u, 69289u)))))), ((_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), (_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), max(uvec3(46646u, 95536u, 2178u), uvec3(46646u, 95536u, 2178u)))) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (true ? _GLF_IDENTITY(uvec3(1u, 1u, 1u), max(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) + uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(5453u, 111830u, 69289u))))))) | ((_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), (_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), max(uvec3(46646u, 95536u, 2178u), uvec3(46646u, 95536u, 2178u)))) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (true ? _GLF_IDENTITY(uvec3(1u, 1u, 1u), max(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) + uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(5453u, 111830u, 69289u))))))))), 0u), max(uvec4(_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) | (0u))) + _GLF_IDENTITY((_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), (_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), max(uvec3(46646u, 95536u, 2178u), uvec3(46646u, 95536u, 2178u)))) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (true ? _GLF_IDENTITY(uvec3(1u, 1u, 1u), max(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) + uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(5453u, 111830u, 69289u)))))), ((_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), (_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), max(uvec3(46646u, 95536u, 2178u), uvec3(46646u, 95536u, 2178u)))) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (true ? _GLF_IDENTITY(uvec3(1u, 1u, 1u), max(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) + uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(5453u, 111830u, 69289u))))))) | ((_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), (_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), max(uvec3(46646u, 95536u, 2178u), uvec3(46646u, 95536u, 2178u)))) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (true ? _GLF_IDENTITY(uvec3(1u, 1u, 1u), max(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) + uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(5453u, 111830u, 69289u))))))))), 0u), uvec4(_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) | (0u))) + _GLF_IDENTITY((_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), (_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), max(uvec3(46646u, 95536u, 2178u), uvec3(46646u, 95536u, 2178u)))) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (true ? _GLF_IDENTITY(uvec3(1u, 1u, 1u), max(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) + uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(5453u, 111830u, 69289u)))))), ((_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), (_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), max(uvec3(46646u, 95536u, 2178u), uvec3(46646u, 95536u, 2178u)))) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (true ? _GLF_IDENTITY(uvec3(1u, 1u, 1u), max(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) + uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(5453u, 111830u, 69289u))))))) | ((_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), (_GLF_IDENTITY(uvec3(46646u, 95536u, 2178u), max(uvec3(46646u, 95536u, 2178u), uvec3(46646u, 95536u, 2178u)))) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (true ? _GLF_IDENTITY(uvec3(1u, 1u, 1u), max(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) + uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(5453u, 111830u, 69289u))))))))), 0u)))) | uvec4(0u, 0u, 0u, 0u))) * uvec4(1u, 1u, 1u, 1u))) >> uvec4(0u, 0u, 0u, 0u))))) : gl_WorkGroupSize)).x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 uint subgroup_base = subgroup_id * _GLF_struct_replacement_10.GLF_merged3_0_1_8_1_1_17_2_1_13read_valsubgroup_local_idsubgroup_size.z;
 uint virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_10.GLF_merged3_0_1_8_1_1_17_2_1_13read_valsubgroup_local_idsubgroup_size, clamp(_GLF_struct_replacement_10.GLF_merged3_0_1_8_1_1_17_2_1_13read_valsubgroup_local_idsubgroup_size, _GLF_struct_replacement_10.GLF_merged3_0_1_8_1_1_17_2_1_13read_valsubgroup_local_idsubgroup_size, _GLF_IDENTITY(_GLF_struct_replacement_10.GLF_merged3_0_1_8_1_1_17_2_1_13read_valsubgroup_local_idsubgroup_size, (false ? _GLF_FUZZED(uvec3(65954u, 110194u, 7404u)) : _GLF_struct_replacement_10.GLF_merged3_0_1_8_1_1_17_2_1_13read_valsubgroup_local_idsubgroup_size)))), (_GLF_struct_replacement_10.GLF_merged3_0_1_8_1_1_17_2_1_13read_valsubgroup_local_idsubgroup_size) - uvec3(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u, 0u)).y, max(_GLF_IDENTITY(_GLF_struct_replacement_10.GLF_merged3_0_1_8_1_1_17_2_1_13read_valsubgroup_local_idsubgroup_size, (_GLF_struct_replacement_10.GLF_merged3_0_1_8_1_1_17_2_1_13read_valsubgroup_local_idsubgroup_size) - uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u) ^ 0u, ~ (~ ((0u) ^ 0u))), (_GLF_IDENTITY((0u) ^ 0u, ~ (~ ((0u) ^ 0u)))) | (_GLF_IDENTITY((0u) ^ 0u, ~ (~ ((0u) ^ 0u)))))), 0u, 0u)).y, _GLF_IDENTITY(_GLF_struct_replacement_10.GLF_merged3_0_1_8_1_1_17_2_1_13read_valsubgroup_local_idsubgroup_size, (_GLF_struct_replacement_10.GLF_merged3_0_1_8_1_1_17_2_1_13read_valsubgroup_local_idsubgroup_size) - _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u, _GLF_IDENTITY(0u, ~ (~ (0u)))), (uvec3(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u, 0u)) | (uvec3(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u, 0u)))).y));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) && true))
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false))))
    {
    }
   else
    {
     do
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(vec3(4259.3315, -6562.8923, -758.665).g, (vec3(4259.3315, -6562.8923, -758.665).g) - 0.0)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(261.864)), bvec2(true, false))).x > injectionSwitch.y))));
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(72.33)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(5.4), (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(-4.6) : _GLF_FUZZED(5.4))), (injectionSwitch)[1]), min(vec2(_GLF_IDENTITY(_GLF_FUZZED(5.4), (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(-4.6) : _GLF_FUZZED(5.4))), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(5.4, max(5.4, 5.4))), _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(-4.6) : _GLF_FUZZED(5.4)), min((_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(-4.6) : _GLF_FUZZED(5.4)), (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(-4.6) : _GLF_FUZZED(5.4))))), (injectionSwitch)[1]), max(vec2(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(5.4, clamp(5.4, 5.4, 5.4))), _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(-4.6) : _GLF_FUZZED(5.4)), clamp(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(-4.6) : _GLF_FUZZED(5.4)), mix(float(_GLF_FUZZED(-6.1)), float((_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(-4.6) : _GLF_FUZZED(5.4))), bool(true))), (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(-4.6) : _GLF_FUZZED(5.4)), (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(-4.6) : _GLF_FUZZED(5.4))))), _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), vec2(mat3((injectionSwitch), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, cos(0.0), 0.0, 1.0)))))[1]), _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(5.4), (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(-4.6) : _GLF_FUZZED(5.4))), (injectionSwitch)[1]), (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(5.1, 363.722), clamp(vec2(5.1, 363.722), _GLF_IDENTITY(vec2(5.1, 363.722), mix(vec2(_GLF_FUZZED(8722.6058), _GLF_FUZZED(28.89)), vec2((vec2(5.1, 363.722))[0], (vec2(5.1, 363.722))[1]), bvec2(true, true))), vec2(5.1, 363.722)))) : vec2(_GLF_IDENTITY(_GLF_FUZZED(5.4), (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), true && (false))) && true) ? _GLF_FUZZED(-4.6) : _GLF_FUZZED(5.4))), (injectionSwitch)[1]))))))), bvec2(false, true))).x > injectionSwitch.y))));
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))), bool(_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))), bool(bvec3(bool(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))), true, false)))))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
    {
    }
   else
    {
     do
      {
       atomicStore(write_val, uint(virtual_gid), 4, 64, 0);
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec3(_GLF_IDENTITY(false || (false), ! (! (false || (false)))), false, false))))), false, true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec3(_GLF_IDENTITY(false || (false), ! (! (false || (false)))), false, false))))), false, true), false))))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))), false, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))), false, true), false)))))))));
     if(_GLF_DEAD(false))
      {
       do
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(44660, (false ? _GLF_FUZZED(_injected_loop_counter) : 44660)) & 0)); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), ! (! (bool(bvec3(false, true, false)))))), (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter --)
          {
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))
            barrier();
          }
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
  }
 for(int _injected_loop_counter = ((-31361 >> 23682) & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         for(int _injected_loop_counter = (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), (true ? _GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), ~ (~ (0 << _GLF_IDENTITY(int(7), int(7))))) : _GLF_FUZZED(_injected_loop_counter)))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(0 + (_GLF_IDENTITY(_injected_loop_counter, 0 ^ (_injected_loop_counter))), ~ (~ (0 + (_GLF_IDENTITY(_injected_loop_counter, 0 ^ (_injected_loop_counter)))))))) | (_injected_loop_counter)), min(_injected_loop_counter, _injected_loop_counter)) != 1); _injected_loop_counter ++)
          {
           barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true))), (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), min(_GLF_IDENTITY((injectionSwitch) - vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0)))), _GLF_ZERO(0.0, injectionSwitch.x)), mix(vec2(_GLF_FUZZED(6383.4195), ((injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))[1]), vec2(((injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))[_GLF_IDENTITY(0, int(ivec2(0, 1)))], _GLF_FUZZED(-1.9)), bvec2(true, false))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))))))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), min(_GLF_IDENTITY((injectionSwitch) - vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0)))), _GLF_ZERO(0.0, injectionSwitch.x)), mix(vec2(_GLF_FUZZED(6383.4195), ((injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))[1]), vec2(((injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))[_GLF_IDENTITY(0, int(ivec2(0, 1)))], _GLF_FUZZED(-1.9)), bvec2(true, false))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))))))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), min(_GLF_IDENTITY((injectionSwitch) - vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0)))), _GLF_ZERO(0.0, injectionSwitch.x)), mix(vec2(_GLF_FUZZED(6383.4195), ((injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))[1]), vec2(((injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))[_GLF_IDENTITY(0, int(ivec2(0, 1)))], _GLF_FUZZED(-1.9)), bvec2(true, false))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))))))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), (true ? _GLF_IDENTITY((injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), min(_GLF_IDENTITY((injectionSwitch) - vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0)))), _GLF_ZERO(0.0, injectionSwitch.x)), mix(vec2(_GLF_FUZZED(6383.4195), ((injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))[1]), vec2(((injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))[_GLF_IDENTITY(0, int(ivec2(0, 1)))], _GLF_FUZZED(-1.9)), bvec2(true, false))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))))))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) : _GLF_FUZZED(vec2(-1.3, -687.469))))) / vec2(1.0, 1.0)), _GLF_IDENTITY((injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), min(_GLF_IDENTITY((injectionSwitch) - vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0)))), _GLF_ZERO(0.0, injectionSwitch.x)), mix(vec2(_GLF_FUZZED(6383.4195), ((injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))[1]), vec2(((injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))[_GLF_IDENTITY(0, int(ivec2(0, 1)))], _GLF_FUZZED(-1.9)), bvec2(true, false))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))))))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), min(_GLF_IDENTITY((injectionSwitch) - vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0)))), _GLF_ZERO(0.0, injectionSwitch.x)), mix(vec2(_GLF_FUZZED(6383.4195), ((injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))[1]), vec2(((injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))[_GLF_IDENTITY(0, int(ivec2(0, 1)))], _GLF_FUZZED(-1.9)), bvec2(true, false))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))))))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), vec2(mat3x2(_GLF_IDENTITY((injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), min(_GLF_IDENTITY((injectionSwitch) - vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0)))), _GLF_ZERO(0.0, injectionSwitch.x)), mix(vec2(_GLF_FUZZED(6383.4195), ((injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))[1]), vec2(((injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))[_GLF_IDENTITY(0, int(ivec2(0, 1)))], _GLF_FUZZED(-1.9)), bvec2(true, false))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))))))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), 1.0, 1.0, 1.0, 1.0)))))).x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-51.65), ((injectionSwitch))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(vec2(-46.02, -8.6).g)), bvec2(true, false))) - _GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), max(_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), clamp(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), min(_GLF_IDENTITY((injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0)), 0.0)), injectionSwitch.x)), mix(vec2(_GLF_FUZZED(6383.4195), ((injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))[1]), vec2(((injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))[0], _GLF_FUZZED(-1.9)), bvec2(true, false))), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)) : _GLF_FUZZED(vec2(-793.126, 8064.4378)))).x), _GLF_IDENTITY((_GLF_ZERO(0.0, injectionSwitch.x)) + 0.0, float(mat2x3((_GLF_ZERO(0.0, injectionSwitch.x)) + 0.0, 0.0, log(1.0), 1.0, 0.0, 0.0)))), _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-90.01) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 1.0)))))), mix(float(_GLF_FUZZED(-7439.8930)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))))))))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-51.65), ((injectionSwitch))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(vec2(-46.02, -8.6).g)), bvec2(true, false))) - _GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), max(_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), clamp(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), min(_GLF_IDENTITY((injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0)), 0.0)), injectionSwitch.x)), mix(vec2(_GLF_FUZZED(6383.4195), ((injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))[1]), vec2(((injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))[0], _GLF_FUZZED(-1.9)), bvec2(true, false))), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)) : _GLF_FUZZED(vec2(-793.126, 8064.4378)))).x), _GLF_IDENTITY((_GLF_ZERO(0.0, injectionSwitch.x)) + 0.0, float(mat2x3((_GLF_ZERO(0.0, injectionSwitch.x)) + 0.0, 0.0, log(1.0), 1.0, 0.0, 0.0)))), _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-90.01) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 1.0)))))), mix(float(_GLF_FUZZED(-7439.8930)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))))))))).x > injectionSwitch.y)) && true) && true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)), (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)), (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)), (injectionSwitch) - _GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), mix(vec2(_GLF_FUZZED(-1.6), (vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))[1]), vec2((vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))[0], _GLF_FUZZED((- -745.456))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))).x > injectionSwitch.y) || false)) || false)))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(float(true)), _GLF_FUZZED(-2.2)), vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_IDENTITY((mat2(_GLF_IDENTITY(1.0, (1.0) - 0.0)) * (injectionSwitch))[1], (false ? _GLF_FUZZED(-45.17) : (mat2(1.0) * _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))))))[1]))), bvec2(true, true)))).x))).x > injectionSwitch.y)))) || false)), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)), (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)), (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)), (injectionSwitch) - _GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), mix(vec2(_GLF_FUZZED(-1.6), (vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))[1]), vec2((vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))[0], _GLF_FUZZED((- -745.456))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))).x > injectionSwitch.y) || false)) || false)))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(float(true)), _GLF_FUZZED(-2.2)), vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_IDENTITY((mat2(_GLF_IDENTITY(1.0, (1.0) - 0.0)) * (injectionSwitch))[1], (false ? _GLF_FUZZED(-45.17) : (mat2(1.0) * _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))))))[1]))), bvec2(true, true)))).x))).x > injectionSwitch.y)))) || false)), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)), (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)), (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)), (injectionSwitch) - _GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), mix(vec2(_GLF_FUZZED(-1.6), (vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))[1]), vec2((vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))[0], _GLF_FUZZED((- -745.456))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))).x > injectionSwitch.y) || false)) || false)))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(float(true)), _GLF_FUZZED(-2.2)), vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_IDENTITY((mat2(_GLF_IDENTITY(1.0, (1.0) - 0.0)) * (injectionSwitch))[1], (false ? _GLF_FUZZED(-45.17) : (mat2(1.0) * _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))))))[1]))), bvec2(true, true)))).x))).x > injectionSwitch.y)))) || false)))), ! (! (bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)), (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)), (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)), (injectionSwitch) - _GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), mix(vec2(_GLF_FUZZED(-1.6), (vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))[1]), vec2((vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))[0], _GLF_FUZZED((- -745.456))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))).x > injectionSwitch.y) || false)) || false)))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(float(true)), _GLF_FUZZED(-2.2)), vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_IDENTITY((mat2(_GLF_IDENTITY(1.0, (1.0) - 0.0)) * (injectionSwitch))[1], (false ? _GLF_FUZZED(-45.17) : (mat2(1.0) * _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))))))[1]))), bvec2(true, true)))).x))).x > injectionSwitch.y)))) || false)))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y))));
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 uint read_val = atomicLoad(write_val, 4, _GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(80622) : 0)), 0)) | (~ (64))))), 0);
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_replacement_10.GLF_merged3_0_1_8_1_1_17_2_1_13read_valsubgroup_local_idsubgroup_size.x = _GLF_IDENTITY(read_val, (read_val) ^ _GLF_IDENTITY(0u, max(0u, 0u)));
 for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY((0 ^ 1), (_GLF_IDENTITY((0 ^ 1), _GLF_IDENTITY(int(ivec3((0 ^ 1), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))), 0)), min(int(ivec3((0 ^ 1), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))), 0)), int(ivec3((0 ^ 1), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))), 0)))))) - 0), 1 * (_GLF_IDENTITY((_GLF_IDENTITY(0 ^ 1, min(0 ^ 1, 0 ^ 1))), max((0 ^ 1), (0 ^ 1))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 buf[virtual_gid] = _GLF_IDENTITY(uint(subgroupAllEqual(_GLF_IDENTITY(_GLF_struct_replacement_10.GLF_merged3_0_1_8_1_1_17_2_1_13read_valsubgroup_local_idsubgroup_size.x, min(_GLF_struct_replacement_10.GLF_merged3_0_1_8_1_1_17_2_1_13read_valsubgroup_local_idsubgroup_size.x, _GLF_struct_replacement_10.GLF_merged3_0_1_8_1_1_17_2_1_13read_valsubgroup_local_idsubgroup_size.x)))), (uint(subgroupAllEqual(_GLF_struct_replacement_10.GLF_merged3_0_1_8_1_1_17_2_1_13read_valsubgroup_local_idsubgroup_size.x))) ^ 0u);
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false)))))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(! (false || (_GLF_IDENTITY(false, false || (false)))), (! (false || (_GLF_IDENTITY(false, false || (false))))) || false)))))), (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(! (! (! (false))), ! _GLF_IDENTITY((! (! _GLF_IDENTITY(_GLF_IDENTITY((! (! (_GLF_IDENTITY(false, (false) || false)))), ((! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, false || (false)))) || false, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, false || (false)))), ! (! ((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, false || (false))))))) || false)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bool(_GLF_IDENTITY((! (! (_GLF_IDENTITY(false, (false) || false)))), ((! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, false || (false)))) || false, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, false || (false)))), ! (! ((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, false || (false))))))) || false)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (! ((! (! _GLF_IDENTITY(_GLF_IDENTITY((! (! (_GLF_IDENTITY(false, (false) || false)))), ((! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, false || (false)))) || false, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, false || (false)))), ! (! ((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, false || (false))))))) || false)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bool(_GLF_IDENTITY((! (! (_GLF_IDENTITY(false, (false) || false)))), ((! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, false || (false)))) || false, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, false || (false)))), ! (! ((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, false || (false))))))) || false)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, abs(0.0), 1.0, sqrt(0.0)))), mix(float(_GLF_FUZZED(623.949)), float(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, abs(0.0), 1.0, sqrt(0.0))))), bool(true)))) * 1.0) > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
      {
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(bool(bool(_GLF_WRAPPED_IF_FALSE(false))), ! (! (bool(bool(_GLF_WRAPPED_IF_FALSE(false))))))))
  {
  }
 else
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6230.6022), _GLF_IDENTITY((injectionSwitch)[1], clamp(_GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(2712.8090))), (injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(3831.0310)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))).y, max(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6230.6022), _GLF_IDENTITY((injectionSwitch)[1], clamp(_GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(2712.8090))), (injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(3831.0310)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))).y, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6230.6022), _GLF_IDENTITY((injectionSwitch)[1], clamp(_GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(2712.8090))), (injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(3831.0310)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))).y))))));
  }
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 1
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
