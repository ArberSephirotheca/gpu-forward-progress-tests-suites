#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))))) && true)))) && true));
 uint num_workgroup = gl_NumWorkGroups.x;
 for(int _injected_loop_counter = (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (1))) | 0) ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(vec2(192.024, -38.46)))).x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))).y) && true))))))))))), true && (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
  }
 else
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, 0 ^ (_injected_loop_counter --)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY((min(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), ((min(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) / vec2(1.0, 1.0)))).y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          break;
         barrier();
         if(_GLF_DEAD(false))
          break;
        }
       for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(int(_GLF_IDENTITY(int(6), (int(6)) | (int(6)))))), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((+ 9.8))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y) && true)))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) && true))))
          return;
         if(_GLF_DEAD(false))
          continue;
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), determinant(mat4(0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0))), 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, sqrt(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))))), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     return;
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(radians(injectionSwitch)), mix(vec2((_GLF_FUZZED(radians(injectionSwitch)))[0], _GLF_FUZZED(-5.3)), vec2(_GLF_FUZZED(-845.308), (_GLF_FUZZED(radians(injectionSwitch)))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) : injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) && true))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           barrier();
          }
         for(int _injected_loop_counter = (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY(1, int(ivec3(1, 0, 1))), 1)) ^ (0 >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), int(int(int(_GLF_IDENTITY(8, 0 | (_GLF_IDENTITY(_GLF_IDENTITY(8, max(_GLF_IDENTITY(8, (8) | (8)), 8)), max(_GLF_IDENTITY(8, max(_GLF_IDENTITY(8, (8) | (8)), 8)), _GLF_IDENTITY(8, max(_GLF_IDENTITY(8, (8) | (8)), 8))))))))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            continue;
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
              {
               if(_GLF_DEAD(false))
                continue;
               barrier();
              }
             if(_GLF_DEAD(false))
              break;
            }
           else
            {
            }
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, true, true))))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(83.36))), injectionSwitch.y)), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(false, ! (! (false))), true, true)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(83.36))), clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(83.36))), _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(83.36))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(83.36))), clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(83.36))), _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(83.36))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(83.36))), float(vec4(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(83.36))), 0.0, 0.0, 1.0))))))), injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(false, ! (! (false))), true, true))))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(bvec4(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(false, ! (! (false))), true, true)))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   else
    {
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID), clamp((gl_WorkGroupID), (_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (_GLF_IDENTITY(gl_WorkGroupID, clamp(_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))), gl_WorkGroupID, gl_WorkGroupID)))))), (gl_WorkGroupID))) - uvec3(0u, 0u, 0u), ((gl_WorkGroupID) - uvec3(0u, 0u, 0u)) | ((gl_WorkGroupID) - uvec3(0u, 0u, 0u)))).x, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])), (gl_WorkGroupID) - uvec3(0u, 0u, 0u)), min(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID), max((gl_WorkGroupID), (gl_WorkGroupID))) - uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) + 0u)) << 0u), 0u)))).x, clamp(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) >> 0u), 0u, 0u), (_GLF_IDENTITY(false ? _GLF_FUZZED(uvec3(115007u, 192167u, _GLF_IDENTITY(102807u, min(_GLF_IDENTITY(102807u, ~ (~ (102807u))), 102807u)))) : _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) / uvec3(1u, 1u, 1u)), uvec3(uvec3(false ? _GLF_IDENTITY(_GLF_FUZZED(uvec3(115007u, 192167u, 102807u)), max(_GLF_IDENTITY(_GLF_FUZZED(uvec3(115007u, 192167u, 102807u)), (_GLF_FUZZED(uvec3(115007u, 192167u, 102807u))) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_FUZZED(uvec3(115007u, 192167u, 102807u)), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(uvec3(115007u, 192167u, 102807u))), (~ (_GLF_FUZZED(uvec3(115007u, 192167u, 102807u)))) | (~ (_GLF_FUZZED(uvec3(115007u, 192167u, 102807u))))))))) : _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(39370u, 40174u, 72177u)) : uvec3(0u, 0u, 0u)))) / uvec3(1u, 1u, 1u)))))))).x, _GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), _GLF_IDENTITY(0u, max(0u, 0u)))), 0u))) - uvec3(0u, 0u, 0u)).x, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (_GLF_IDENTITY(~ (uvec3(0u, 0u, 0u)), (false ? _GLF_FUZZED(uvec3(114988u, 112317u, 143073u)) : ~ (uvec3(0u, 0u, 0u))))))).x)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, 1u) * (gl_WorkGroupID)), (gl_WorkGroupID) - uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u), 0u, 0u)), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, _GLF_IDENTITY(0u, 0u | (0u))))) - (uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), uint(uvec2(min(0u, 0u), _GLF_IDENTITY(0u, (0u) - 0u))))), 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u)))).x, _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, clamp(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, 1u) * (gl_WorkGroupID)))), _GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupID, 0u), (uvec4(gl_WorkGroupID, _GLF_IDENTITY(0u, max(0u, 0u)))) - uvec4(0u, 0u, _GLF_IDENTITY(0u, (0u) >> 0u), 0u)))), gl_WorkGroupID))) - uvec3(0u, 0u, 0u))) - (uvec3(0u, _GLF_IDENTITY(0u, min(0u, 0u)), _GLF_IDENTITY(0u, min(0u, 0u))) << _GLF_IDENTITY(uvec3(2u), uvec3(2u)))).x : _GLF_FUZZED(mix(workgroup_size, num_workgroup, true))), max((true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(gl_WorkGroupID, 0u), (uvec4(gl_WorkGroupID, 0u)) - uvec4(0u, 0u, 0u, 0u)), clamp(_GLF_IDENTITY(uvec4(gl_WorkGroupID, 0u), (uvec4(gl_WorkGroupID, 0u)) - uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY(uvec4(gl_WorkGroupID, 0u), (uvec4(gl_WorkGroupID, 0u)) - uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY(uvec4(gl_WorkGroupID, 0u), (uvec4(gl_WorkGroupID, 0u)) - uvec4(0u, 0u, 0u, 0u))))), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(gl_WorkGroupID, 0u), (uvec4(gl_WorkGroupID, 0u)) - uvec4(0u, 0u, 0u, 0u)), clamp(_GLF_IDENTITY(uvec4(gl_WorkGroupID, 0u), (uvec4(gl_WorkGroupID, 0u)) - uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY(uvec4(gl_WorkGroupID, 0u), (uvec4(gl_WorkGroupID, 0u)) - uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY(uvec4(gl_WorkGroupID, 0u), (uvec4(gl_WorkGroupID, 0u)) - uvec4(0u, 0u, 0u, 0u)))))) | (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(2u), uvec3(2u))))), gl_WorkGroupID))) - uvec3(0u, 0u, 0u))) - (uvec3(0u, _GLF_IDENTITY(0u, min(0u, 0u)), _GLF_IDENTITY(0u, (0u) ^ 0u)) << _GLF_IDENTITY(uvec3(2u), uvec3(2u)))).x : _GLF_FUZZED(mix(workgroup_size, num_workgroup, true))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u)), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupID, 0u), (uvec4(gl_WorkGroupID, 0u)) - uvec4(0u, 0u, 0u, 0u)))), gl_WorkGroupID))) - uvec3(0u, 0u, 0u))) - (uvec3(0u, _GLF_IDENTITY(0u, min(0u, 0u)), 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))), uvec3(1u, 1u, 1u) * ((_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupID, 0u), (uvec4(gl_WorkGroupID, 0u)) - uvec4(0u, 0u, 0u, 0u)))), gl_WorkGroupID))) - uvec3(0u, 0u, 0u))) - (uvec3(0u, _GLF_IDENTITY(0u, min(0u, 0u)), 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u)))))).x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u)), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupID, 0u), (uvec4(gl_WorkGroupID, 0u)) - uvec4(0u, 0u, 0u, 0u)))), gl_WorkGroupID))) - uvec3(0u, 0u, 0u))) - (uvec3(0u, _GLF_IDENTITY(0u, min(0u, 0u)), 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))), uvec3(1u, 1u, 1u) * ((_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupID, 0u), (uvec4(gl_WorkGroupID, 0u)) - uvec4(0u, 0u, 0u, 0u)))), gl_WorkGroupID))) - uvec3(0u, 0u, 0u))) - (uvec3(0u, _GLF_IDENTITY(0u, min(0u, 0u)), 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u)))))).x) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u)), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupID, 0u), (uvec4(gl_WorkGroupID, 0u)) - uvec4(0u, 0u, 0u, 0u)))), gl_WorkGroupID))) - uvec3(0u, 0u, 0u))) - (uvec3(0u, _GLF_IDENTITY(0u, min(0u, 0u)), 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))), uvec3(1u, 1u, 1u) * ((_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupID, 0u), (uvec4(gl_WorkGroupID, 0u)) - uvec4(0u, 0u, 0u, 0u)))), gl_WorkGroupID))) - uvec3(0u, 0u, 0u))) - (uvec3(0u, _GLF_IDENTITY(0u, min(0u, 0u)), 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u)))))).x)) : _GLF_FUZZED(mix(workgroup_size, num_workgroup, true)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u)).x, (false ? _GLF_FUZZED(packSnorm2x16(vec2(1664.2296, 96.48))) : _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u)).x)), _GLF_IDENTITY((gl_WorkGroupID.x) | (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(0u), uint(0u)), min(0u << _GLF_IDENTITY(uint(0u), uint(0u)), 0u << _GLF_IDENTITY(uint(0u), uint(0u))))), 0u | (_GLF_IDENTITY((gl_WorkGroupID.x), 0u | ((gl_WorkGroupID.x))) | (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u)).x, (false ? _GLF_FUZZED(packSnorm2x16(vec2(1664.2296, 96.48))) : _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u)).x)), _GLF_IDENTITY((gl_WorkGroupID.x) | (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(0u), uint(0u)), min(0u << _GLF_IDENTITY(uint(0u), uint(0u)), 0u << _GLF_IDENTITY(uint(0u), uint(0u))))), 0u | (_GLF_IDENTITY((gl_WorkGroupID.x), 0u | ((gl_WorkGroupID.x))) | (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u)).x, (false ? _GLF_FUZZED(packSnorm2x16(vec2(1664.2296, 96.48))) : _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u)).x)), _GLF_IDENTITY((gl_WorkGroupID.x) | (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(0u), uint(0u)), min(0u << _GLF_IDENTITY(uint(0u), uint(0u)), 0u << _GLF_IDENTITY(uint(0u), uint(0u))))), 0u | (_GLF_IDENTITY((gl_WorkGroupID.x), 0u | ((gl_WorkGroupID.x))) | (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u)).x, (false ? _GLF_FUZZED(packSnorm2x16(vec2(1664.2296, 96.48))) : _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u)).x)), _GLF_IDENTITY((gl_WorkGroupID.x) | (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(0u), uint(0u)), min(0u << _GLF_IDENTITY(uint(0u), uint(0u)), 0u << _GLF_IDENTITY(uint(0u), uint(0u))))), 0u | (_GLF_IDENTITY((gl_WorkGroupID.x), 0u | ((gl_WorkGroupID.x))) | (0u << _GLF_IDENTITY(uint(0u), uint(0u))))))))) + 0u), _GLF_IDENTITY(min(_GLF_IDENTITY(gl_WorkGroupID.x, min(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u), gl_WorkGroupID.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)), gl_WorkGroupID)), gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID))) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), uvec3(uvec3(uvec3(1u, 1u, 1u))))).x), (min(_GLF_IDENTITY(gl_WorkGroupID.x, min(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x) << 0u), gl_WorkGroupID.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID))) / uvec3(1u, 1u, 1u)).x)) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(gl_WorkGroupID.x, min(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u), gl_WorkGroupID.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID))) / uvec3(1u, 1u, 1u)).x), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(min(_GLF_IDENTITY(gl_WorkGroupID.x, min(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u), gl_WorkGroupID.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID))) / uvec3(1u, 1u, 1u)).x), max(min(_GLF_IDENTITY(gl_WorkGroupID.x, min(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u), gl_WorkGroupID.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID))) / uvec3(1u, 1u, 1u)).x), min(_GLF_IDENTITY(gl_WorkGroupID.x, min(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u), gl_WorkGroupID.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID))) / uvec3(1u, 1u, 1u)).x))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(gl_WorkGroupID.x, min(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u), gl_WorkGroupID.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID))) / uvec3(1u, 1u, 1u)).x), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(min(_GLF_IDENTITY(gl_WorkGroupID.x, min(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u), gl_WorkGroupID.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID))) / uvec3(1u, 1u, 1u)).x), max(min(_GLF_IDENTITY(gl_WorkGroupID.x, min(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u), gl_WorkGroupID.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID))) / uvec3(1u, 1u, 1u)).x), min(_GLF_IDENTITY(gl_WorkGroupID.x, min(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u), gl_WorkGroupID.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID))) / uvec3(1u, 1u, 1u)).x))))), (_GLF_IDENTITY(min(_GLF_IDENTITY(gl_WorkGroupID.x, min(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u), gl_WorkGroupID.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID))) / uvec3(1u, 1u, 1u)).x), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(min(_GLF_IDENTITY(gl_WorkGroupID.x, min(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u), gl_WorkGroupID.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID))) / uvec3(1u, 1u, 1u)).x), max(min(_GLF_IDENTITY(gl_WorkGroupID.x, min(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u), gl_WorkGroupID.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID))) / uvec3(1u, 1u, 1u)).x), min(_GLF_IDENTITY(gl_WorkGroupID.x, min(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u), gl_WorkGroupID.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID))) / uvec3(1u, 1u, 1u)).x)))))) | 0u)))), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(gl_WorkGroupID.x, min(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u), gl_WorkGroupID.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID))) / uvec3(1u, 1u, 1u)).x), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(min(_GLF_IDENTITY(gl_WorkGroupID.x, min(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u), gl_WorkGroupID.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID))) / uvec3(1u, 1u, 1u)).x), max(min(_GLF_IDENTITY(gl_WorkGroupID.x, min(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u), gl_WorkGroupID.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID))) / uvec3(1u, 1u, 1u)).x), min(_GLF_IDENTITY(gl_WorkGroupID.x, min(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u), gl_WorkGroupID.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID))) / uvec3(1u, 1u, 1u)).x))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(gl_WorkGroupID.x, min(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u), gl_WorkGroupID.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID))) / uvec3(1u, 1u, 1u)).x), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(min(_GLF_IDENTITY(gl_WorkGroupID.x, min(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u), gl_WorkGroupID.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID))) / uvec3(1u, 1u, 1u)).x), max(min(_GLF_IDENTITY(gl_WorkGroupID.x, min(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u), gl_WorkGroupID.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID))) / uvec3(1u, 1u, 1u)).x), min(_GLF_IDENTITY(gl_WorkGroupID.x, min(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u), gl_WorkGroupID.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID))) / uvec3(1u, 1u, 1u)).x))))), (_GLF_IDENTITY(min(_GLF_IDENTITY(gl_WorkGroupID.x, min(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u), gl_WorkGroupID.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID))) / uvec3(1u, 1u, 1u)).x), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(min(_GLF_IDENTITY(gl_WorkGroupID.x, min(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u), gl_WorkGroupID.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID))) / uvec3(1u, 1u, 1u)).x), max(min(_GLF_IDENTITY(gl_WorkGroupID.x, min(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u), gl_WorkGroupID.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID))) / uvec3(1u, 1u, 1u)).x), min(_GLF_IDENTITY(gl_WorkGroupID.x, min(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u), gl_WorkGroupID.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID))) / uvec3(1u, 1u, 1u)).x)))))) | 0u)))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(gl_WorkGroupID.x, min(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u), gl_WorkGroupID.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID))) / uvec3(1u, 1u, 1u)).x), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(min(_GLF_IDENTITY(gl_WorkGroupID.x, min(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u), gl_WorkGroupID.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID))) / uvec3(1u, 1u, 1u)).x), max(min(_GLF_IDENTITY(gl_WorkGroupID.x, min(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u), gl_WorkGroupID.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID))) / uvec3(1u, 1u, 1u)).x), min(_GLF_IDENTITY(gl_WorkGroupID.x, min(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u), gl_WorkGroupID.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID))) / uvec3(1u, 1u, 1u)).x))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(gl_WorkGroupID.x, min(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u), gl_WorkGroupID.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID))) / uvec3(1u, 1u, 1u)).x), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(min(_GLF_IDENTITY(gl_WorkGroupID.x, min(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u), gl_WorkGroupID.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID))) / uvec3(1u, 1u, 1u)).x), max(min(_GLF_IDENTITY(gl_WorkGroupID.x, min(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u), gl_WorkGroupID.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID))) / uvec3(1u, 1u, 1u)).x), min(_GLF_IDENTITY(gl_WorkGroupID.x, min(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u), gl_WorkGroupID.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID))) / uvec3(1u, 1u, 1u)).x))))), (_GLF_IDENTITY(min(_GLF_IDENTITY(gl_WorkGroupID.x, min(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u), gl_WorkGroupID.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID))) / uvec3(1u, 1u, 1u)).x), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(min(_GLF_IDENTITY(gl_WorkGroupID.x, min(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u), gl_WorkGroupID.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID))) / uvec3(1u, 1u, 1u)).x), max(min(_GLF_IDENTITY(gl_WorkGroupID.x, min(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u), gl_WorkGroupID.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID))) / uvec3(1u, 1u, 1u)).x), min(_GLF_IDENTITY(gl_WorkGroupID.x, min(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u), gl_WorkGroupID.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID))) / uvec3(1u, 1u, 1u)).x)))))) | 0u))))))), (_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(gl_WorkGroupID.x, min(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u), gl_WorkGroupID.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID))) / uvec3(1u, 1u, 1u)).x), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(min(_GLF_IDENTITY(gl_WorkGroupID.x, min(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u), gl_WorkGroupID.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID))) / uvec3(1u, 1u, 1u)).x), max(min(_GLF_IDENTITY(gl_WorkGroupID.x, min(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u), gl_WorkGroupID.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID))) / uvec3(1u, 1u, 1u)).x), min(_GLF_IDENTITY(gl_WorkGroupID.x, min(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u), gl_WorkGroupID.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID))) / uvec3(1u, 1u, 1u)).x))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(gl_WorkGroupID.x, min(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u), gl_WorkGroupID.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID))) / uvec3(1u, 1u, 1u)).x), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(min(_GLF_IDENTITY(gl_WorkGroupID.x, min(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u), gl_WorkGroupID.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID))) / uvec3(1u, 1u, 1u)).x), max(min(_GLF_IDENTITY(gl_WorkGroupID.x, min(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u), gl_WorkGroupID.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID))) / uvec3(1u, 1u, 1u)).x), min(_GLF_IDENTITY(gl_WorkGroupID.x, min(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u), gl_WorkGroupID.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID))) / uvec3(1u, 1u, 1u)).x))))), (_GLF_IDENTITY(min(_GLF_IDENTITY(gl_WorkGroupID.x, min(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u), gl_WorkGroupID.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID))) / uvec3(1u, 1u, 1u)).x), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(min(_GLF_IDENTITY(gl_WorkGroupID.x, min(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u), gl_WorkGroupID.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID))) / uvec3(1u, 1u, 1u)).x), max(min(_GLF_IDENTITY(gl_WorkGroupID.x, min(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u), gl_WorkGroupID.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID))) / uvec3(1u, 1u, 1u)).x), min(_GLF_IDENTITY(gl_WorkGroupID.x, min(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u), gl_WorkGroupID.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID))) / uvec3(1u, 1u, 1u)).x)))))) | 0u))))))));
 uint workgroup_base = workgroup_size * workgroup_id;
 uint subgroup_base = subgroup_id * subgroup_size;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + subgroup_base)) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_base + (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), min(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), (false ? _GLF_FUZZED(-43299) : (1) | (1)))), min(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((_GLF_IDENTITY(1, int(int(1)))), min((_GLF_IDENTITY(1, int(int(1)))), (_GLF_IDENTITY(1, int(int(1))))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)))), (~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))))) + 0u), ~ (_GLF_IDENTITY(~ (~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))))), (false ? _GLF_FUZZED(workgroup_id) : ~ (~ (~ (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), 0u + (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))))) << 0u))))))))), (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) ? _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ((1) | (_GLF_IDENTITY(1, int(int(1))))) / ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))))), (true ? _GLF_IDENTITY(~ (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ((1) | (_GLF_IDENTITY(1, int(int(1))))) / ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))))), ~ (~ (~ (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ((1) | (_GLF_IDENTITY(1, int(int(1))))) / ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))))))))) : _GLF_FUZZED(workgroup_base)))), ~ (_GLF_IDENTITY(~ (~ (~ _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))), max(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))), ~ (~ ((subgroup_local_id + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED((-48318 / 87727)))))))))), (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))))))), (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, (workgroup_id) * 1u)) : ~ (~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)))))))))) : _GLF_FUZZED(subgroup_id)))))))), ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-67131)))), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1)) / _GLF_IDENTITY(1u, (1u) + 0u))) >> _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : 0u)))))))), max(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), (_GLF_IDENTITY((1), max((1), (1)))) - 0)), min(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), ((1)) | 0)), min(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), clamp((1) | (1), (1) | (1), (1) | (1)))), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED(-91909)))), _GLF_IDENTITY(~ (~ _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))), ~ (_GLF_IDENTITY(~ ((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)))), 0u | (~ ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) + 0u)))))))), ~ (_GLF_IDENTITY(~ (~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))))), (false ? _GLF_FUZZED(workgroup_id) : ~ (~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))))))))))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1)) / _GLF_IDENTITY(1u, (1u) + 0u))), ((_GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1)) / _GLF_IDENTITY(1u, (1u) + 0u)))) | 0u) >> _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : 0u)))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1)) / _GLF_IDENTITY(1u, (1u) + 0u))), ((_GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1)) / _GLF_IDENTITY(1u, (1u) + 0u)))) | 0u) >> _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : 0u)))))), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1)) / _GLF_IDENTITY(1u, (1u) + 0u))), ((_GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1)) / _GLF_IDENTITY(1u, (1u) + 0u)))) | 0u) >> _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : 0u))))))))), max(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1)) / _GLF_IDENTITY(1u, (1u) + 0u))), ((_GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1)) / _GLF_IDENTITY(1u, (1u) + 0u)))) | 0u) >> _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : 0u)))))), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1)) / _GLF_IDENTITY(1u, (1u) + 0u))), ((_GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1)) / _GLF_IDENTITY(1u, (1u) + 0u)))) | 0u) >> _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : 0u))))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1)) / _GLF_IDENTITY(1u, (1u) + 0u))), ((_GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1)) / _GLF_IDENTITY(1u, (1u) + 0u)))) | 0u) >> _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : 0u)))))), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1)) / _GLF_IDENTITY(1u, (1u) + 0u))), ((_GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1)) / _GLF_IDENTITY(1u, (1u) + 0u)))) | 0u) >> _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : 0u))))))))))))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), clamp(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (1) | (1))) ^ 0), subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)))), min(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), min(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)))), ~ (_GLF_IDENTITY(~ (~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))))), (false ? _GLF_FUZZED(workgroup_id) : ~ (~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)))))))))), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)))), ~ (_GLF_IDENTITY(~ (~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))))), (false ? _GLF_FUZZED(workgroup_id) : ~ (~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))))))))))) | 0u), 0u + (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)))), ~ (_GLF_IDENTITY(~ (~ (~ (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((1) | (1)), (~ ((1) | (1))) | 0), clamp(_GLF_IDENTITY(~ ((1) | (1)), (~ ((1) | (1))) | 0), _GLF_IDENTITY(~ ((1) | (1)), (~ ((1) | (1))) | 0), _GLF_IDENTITY(~ ((1) | (1)), (~ ((1) | (1))) | 0))))))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), 1u * (_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), uint(uvec2(_GLF_FUZZED(workgroup_id), 0u))))) : ~ (~ (_GLF_IDENTITY(~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))), min(_GLF_IDENTITY(~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))), ~ (~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)))))), ~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))))))))))))))))))), ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), (subgroup_local_id) - 0u) + 1)) / _GLF_IDENTITY(1u, (1u) + 0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) + 0u)))) ^ 0u, ((_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) + 0u)))) ^ 0u) | ((_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) + 0u)))) ^ 0u))), max(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : 0u, max(false ? _GLF_FUZZED(num_workgroup) : 0u, false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, (num_workgroup) | (num_workgroup))) : 0u)))))))))), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u) + _GLF_IDENTITY(1, _GLF_IDENTITY((1), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(36628) : _GLF_IDENTITY((1), max(_GLF_IDENTITY((1), int(ivec2((1), 0))), (1))))) | _GLF_IDENTITY((1), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2((1), 1), min(ivec2((1), 1), ivec2((1), 1)))), (int(_GLF_IDENTITY(ivec2((1), 1), min(ivec2((1), 1), ivec2((1), 1))))) | (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2((1), 1), min(ivec2((1), 1), ivec2((1), 1)))), ~ (~ (int(_GLF_IDENTITY(ivec2((1), 1), min(ivec2((1), 1), ivec2((1), 1))))))))))), min(subgroup_local_id + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) | (0 & -64277)))), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), max(~ (1), ~ (1)))))) << 0))))), min(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (0 | 0) | (1))) | (1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (0 | 0) | (1))) | (1))), (~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (0 | 0) | (1))) | (1)))) >> 0))), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), (1) | _GLF_IDENTITY((1), ((1)) + int(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)))), _GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))))), (false ? _GLF_FUZZED(workgroup_id) : ~ (~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)))))))), min((_GLF_IDENTITY(~ (~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))))), (false ? _GLF_FUZZED(workgroup_id) : ~ (~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)))))))), (_GLF_IDENTITY(~ (~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))))), (false ? _GLF_FUZZED(workgroup_id) : ~ (~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)))))))))), min(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))))), (false ? _GLF_FUZZED(workgroup_id) : ~ (~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)))))))), min((_GLF_IDENTITY(~ (~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))))), (false ? _GLF_FUZZED(workgroup_id) : ~ (~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)))))))), (_GLF_IDENTITY(~ (~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))))), (false ? _GLF_FUZZED(workgroup_id) : ~ (~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)))))))))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))))), (false ? _GLF_FUZZED(workgroup_id) : ~ (~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)))))))), min((_GLF_IDENTITY(~ (~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))))), (false ? _GLF_FUZZED(workgroup_id) : ~ (~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)))))))), (_GLF_IDENTITY(~ (~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))))), (false ? _GLF_FUZZED(workgroup_id) : ~ (~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))))))))))))))))))), ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))) ^ 0u)) - 0u) + 1)) / _GLF_IDENTITY(1u, _GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), ~ (~ ((1u))))) + 0u) + 0u))) >> _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : 0u, (false ? _GLF_FUZZED(num_workgroup) : 0u) | 0u), 1u * (false ? _GLF_FUZZED(num_workgroup) : 0u)))))))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), min(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) >> 0u), (0u << _GLF_IDENTITY(uint(7u), uint(7u))), 0u, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), max(_GLF_IDENTITY(uint(7u), uint(7u)), _GLF_IDENTITY(uint(7u), uint(7u))))) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), clamp(_GLF_IDENTITY(uint(7u), uint(7u)), _GLF_IDENTITY(uint(7u), uint(7u)), _GLF_IDENTITY(uint(7u), uint(7u))))))) >> _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (_GLF_IDENTITY(7u, ~ (~ (7u)))) >> (0u >> _GLF_IDENTITY(uint(7u), uint(7u))))))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | 0u) | (uint(uvec4(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) >> 0u), (0u << _GLF_IDENTITY(uint(7u), uint(7u))), 0u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) | (1u ^ 1u)), min(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)))), ~ (_GLF_IDENTITY(~ (~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))))), (false ? _GLF_FUZZED(workgroup_id) : ~ (~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) | (1u ^ 1u)), min(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)))), ~ (_GLF_IDENTITY(~ (~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))))), (false ? _GLF_FUZZED(workgroup_id) : ~ (~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))))))))))))) >> 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), min(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) >> 0u), (0u << _GLF_IDENTITY(uint(7u), uint(7u))), 0u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (uint(uvec4(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) >> 0u), (0u << _GLF_IDENTITY(uint(7u), uint(7u))), 0u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)))))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id)))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) + _GLF_IDENTITY(1, (1) | (1))) | (1u ^ 1u)), min(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ((1) | (1)) + 0)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)))), ~ (_GLF_IDENTITY(~ (~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))))), (false ? _GLF_FUZZED(workgroup_id) : ~ (~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)))))))))), min(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)))), ~ (_GLF_IDENTITY(~ (~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))))), (false ? _GLF_FUZZED(workgroup_id) : ~ (~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)))))))))), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)))), ~ (_GLF_IDENTITY(~ (~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))))), (false ? _GLF_FUZZED(workgroup_id) : ~ (~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))))))))))))))))), _GLF_IDENTITY(uint(uvec2((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), min(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) >> 0u), (0u << _GLF_IDENTITY(uint(7u), uint(7u))), 0u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (uint(uvec4(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) >> 0u), (0u << _GLF_IDENTITY(uint(7u), uint(7u))), 0u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)))))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id)))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) + _GLF_IDENTITY(1, (1) | (1))) | (1u ^ 1u)), min(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ((1) | (1)) + 0)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)))), ~ (_GLF_IDENTITY(~ (~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))))), (false ? _GLF_FUZZED(workgroup_id) : ~ (~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)))))))))), min(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)))), ~ (_GLF_IDENTITY(~ (~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))))), (false ? _GLF_FUZZED(workgroup_id) : ~ (~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)))))))))), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)))), ~ (_GLF_IDENTITY(~ (~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))))), (false ? _GLF_FUZZED(workgroup_id) : ~ (~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))))))))))))))))), 1u)), min(uint(uvec2((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), min(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) >> 0u), (0u << _GLF_IDENTITY(uint(7u), uint(7u))), 0u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (uint(uvec4(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) >> 0u), (0u << _GLF_IDENTITY(uint(7u), uint(7u))), 0u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)))))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id)))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) + _GLF_IDENTITY(1, (1) | (1))) | (1u ^ 1u)), min(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ((1) | (1)) + 0)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)))), ~ (_GLF_IDENTITY(~ (~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))))), (false ? _GLF_FUZZED(workgroup_id) : ~ (~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)))))))))), min(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)))), ~ (_GLF_IDENTITY(~ (~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))))), (false ? _GLF_FUZZED(workgroup_id) : ~ (~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)))))))))), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)))), ~ (_GLF_IDENTITY(~ (~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))))), (false ? _GLF_FUZZED(workgroup_id) : ~ (~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))))))))))))))))), 1u)), uint(uvec2((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), min(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) >> 0u), (0u << _GLF_IDENTITY(uint(7u), uint(7u))), 0u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (uint(uvec4(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) >> 0u), (0u << _GLF_IDENTITY(uint(7u), uint(7u))), 0u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)))))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id)))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) + _GLF_IDENTITY(1, (1) | (1))) | (1u ^ 1u)), min(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ((1) | (1)) + 0)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)))), ~ (_GLF_IDENTITY(~ (~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))))), (false ? _GLF_FUZZED(workgroup_id) : ~ (~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)))))))))), min(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)))), ~ (_GLF_IDENTITY(~ (~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))))), (false ? _GLF_FUZZED(workgroup_id) : ~ (~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)))))))))), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)))), ~ (_GLF_IDENTITY(~ (~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))))), (false ? _GLF_FUZZED(workgroup_id) : ~ (~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))))))))))))))))), 1u))))), min((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), min(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) >> 0), (1) | (1)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) >> 0u), (0u << _GLF_IDENTITY(uint(7u), uint(7u))), 0u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (uint(uvec4(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ (0 << _GLF_IDENTITY(int(0), int(0))))) | (1)), (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) >> 0u), _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (7u) | (7u))))), 0u | (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (7u) | (7u))))), clamp((0u << _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (7u) | (7u))))), (0u << _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (7u) | (7u))))), (0u << _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (7u) | (7u))))))))), 0u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)))))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) | (1u ^ 1u)), min(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)))), ~ (_GLF_IDENTITY(~ (~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))))), (false ? _GLF_FUZZED(workgroup_id) : ~ (~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))))))))))))))), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), min(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), max((1), (1)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) >> 0u), (_GLF_IDENTITY(0u, (0u) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) << _GLF_IDENTITY(uint(7u), uint(7u))), 0u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)))), max(uvec4(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) >> 0u), (_GLF_IDENTITY(0u, (0u) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) << _GLF_IDENTITY(uint(7u), uint(7u))), 0u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)))), uvec4(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) >> 0u), (_GLF_IDENTITY(0u, (0u) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) << _GLF_IDENTITY(uint(7u), uint(7u))), 0u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (uint(uvec4(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), clamp(_GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), 0 ^ (_GLF_IDENTITY(1, (1) | (1))))) / 1)))) >> 0u), (0u << _GLF_IDENTITY(uint(7u), uint(7u))), 0u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)))))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) | (1u ^ 1u)), min(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)))), ~ (_GLF_IDENTITY(~ (~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))))), (false ? _GLF_FUZZED(workgroup_id) : ~ (_GLF_IDENTITY(~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)))), max(~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)))), _GLF_IDENTITY(~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)))), clamp(~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)))), _GLF_IDENTITY(~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)))), ~ (~ (~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))))))), ~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)))))))))))))))))))))) ^ 0u), ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_local_id + 1))), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1)) / _GLF_IDENTITY(1u, (1u) + 0u)), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1)) / _GLF_IDENTITY(1u, (1u) + 0u)), uint(uvec2(_GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u), 1u * (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + 0u) + 1)) / _GLF_IDENTITY(1u, (1u) + 0u)), _GLF_IDENTITY(0u, (0u) / 1u))))) + 0u)) >> _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : 0u)))), ~ (~ (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : 0u))))))))))))))) % subgroup_size);
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))))) / vec2(1.0, 1.0)).y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))), false)))) || false), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(5650.0820, -48.42)))) : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(injectionSwitch))).x, (true ? injectionSwitch.x : _GLF_FUZZED(acosh(_GLF_IDENTITY(-7.0, (false ? _GLF_FUZZED(tanh(2.3)) : -7.0)))))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) * mat2(1.0)).y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((+ 7.7)), _GLF_FUZZED((- 87.40))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(_GLF_IDENTITY(mat3((injectionSwitch), 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), max(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))), 1.0), mat3(_GLF_ONE(1.0, injectionSwitch.y)) * (mat3((injectionSwitch), 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), max(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))), 1.0))))) * mat2(1.0)).y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(_GLF_IDENTITY(mat3((injectionSwitch), 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), max(dot(vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0), vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(mat4x2(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), 1.0, exp(0.0), 1.0, 0.0, 0.0, exp(0.0), 0.0)))))), 1.0), mat3(_GLF_ONE(1.0, injectionSwitch.y)) * (mat3((injectionSwitch), 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) - 0.0)) - 0.0)) / _GLF_ONE(1.0, injectionSwitch.y)), 0.0), vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), max(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))), 1.0))))) * mat2(1.0)).y)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          break;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))
        break;
       break;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, false || (false)), true))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
      break;
    }
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(false));
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))).y))))), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)), bool(bvec4(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)), true, true, false)))))) || false))), true, false))))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), true && (_GLF_IDENTITY(true && (true), bool(bvec2(true && (true), true)))))))))
        {
         barrier();
        }
       else
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(315.657)), bool(false))), 1.0, 0.0, 1.0, _GLF_IDENTITY(length(vec2(0.0, 0.0)), _GLF_IDENTITY(float(mat2x3(length(vec2(0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0)), (false ? _GLF_FUZZED(298.523) : float(mat2x3(length(vec2(0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0)))))), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0))), 0.0, 0.0) + (mat4x2(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(315.657)), bool(false))), 1.0, 0.0, 1.0, _GLF_IDENTITY(length(vec2(0.0, 0.0)), (length(vec2(0.0, 0.0))) + 0.0))))))))))
          return;
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              break;
             barrier();
            }
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, false)))) || false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
            return;
           return;
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true))))))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
          }
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, sin(0.0) + (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(float(true))), float(injectionSwitch.y), bool(true)))))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, sin(0.0) + (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(float(true))), float(injectionSwitch.y), bool(true)))))))))
          barrier();
         do
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          return;
        }
      }
     else
      {
       atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, (1) - 0)), 4, 64, 4);
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / 1.0) > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
         do
          {
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(vec4(-65.44, -344.058, 258.549, -16.13).t)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), sin(0.0) + (injectionSwitch.y))), bool(true)), (mix(float(_GLF_FUZZED(vec4(-65.44, -344.058, 258.549, -16.13).t)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), clamp(max(injectionSwitch.y, injectionSwitch.y), max(injectionSwitch.y, injectionSwitch.y), max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), sin(0.0) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), bool(true))) / cos(0.0)))))) && true)))
            break;
           do
            {
             if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(true, ! (! (true))))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(true, ! (! (true))))))))), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))), false || (false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) || false)), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))))))))))))))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                  barrier();
                 barrier();
                }
               if(_GLF_DEAD(false))
                continue;
               barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
              {
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-0.1, 63.15)) : _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y)), (true ? int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(-0.1, (false ? _GLF_FUZZED(-719.839) : -0.1)), 63.15)) : _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! (true)))))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y)) : _GLF_FUZZED((false ? -98812 : 25516)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 0.0 + (_GLF_ZERO(0.0, injectionSwitch.x))), 0.0, determinant(mat4(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(0.0), (float(0.0)) + 0.0))), 1.0, 1.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, sin(0.0), log(1.0), 0.0, 1.0, 0.0)), 1.0)), mix(_GLF_IDENTITY(float(float(vec4(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) + 0.0), injectionSwitch.x), 0.0 + (_GLF_ZERO(0.0, injectionSwitch.x))), 0.0, determinant(mat4(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5.9)), float(1.0), bool(true))), 0.0))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, sin(0.0), log(1.0), 0.0, 1.0, 0.0)), 1.0))), (true ? float(float(vec4(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) + 0.0), injectionSwitch.x), 0.0 + (_GLF_ZERO(0.0, injectionSwitch.x))), 0.0, determinant(mat4(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5.9)), float(1.0), bool(true))), 0.0))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, sin(0.0), log(1.0), 0.0, 1.0, 0.0)), 1.0))) : _GLF_FUZZED(-386.110))), float(_GLF_FUZZED(-4031.3670)), bool(false))))), (int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 0.0 + (_GLF_ZERO(0.0, injectionSwitch.x))), 0.0, determinant(mat4(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-28.75) : 0.0)), 1.0, 1.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, sin(0.0), log(1.0), 0.0, 1.0, 0.0)), 1.0)), mix(float(float(vec4(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, float(mat3x2(0.0, abs(1.0), sqrt(1.0), 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))), injectionSwitch.x), 0.0 + (_GLF_ZERO(0.0, injectionSwitch.x))), 0.0, determinant(mat4(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), sin(0.0), log(1.0), 0.0, 1.0, 0.0)), 1.0))), float(_GLF_FUZZED(-4031.3670)), bool(false)))))) | 0)); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y))))
                break;
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, abs(0.0), 0.0, 1.0))) > injectionSwitch.y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, abs(0.0), 0.0, 1.0))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, abs(0.0), 0.0, 1.0))) > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) - vec2(0.0, 0.0)).x > injectionSwitch.y)))), _GLF_IDENTITY(true, ! (! (true))) && ((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))))), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2081.3312) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2081.3312) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
                {
                 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
                  continue;
                 barrier();
                }
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), _GLF_IDENTITY((bool(bvec4(false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y)), false))), ! (! ((bool(bvec4(false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y)), false)))))) || false))))
                  {
                  }
                 else
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if(_GLF_DEAD(false))
                      return;
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       do
                        {
                         return;
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                      }
                     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec3(-2709.0390, 6.7, -6.4).zx) : injectionSwitch)).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec3(-2709.0390, 6.7, -6.4).zx) : injectionSwitch)).y)) || false)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! ((injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (false) && true), (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)) / 1.0) : _GLF_FUZZED(-4.3))) > injectionSwitch.y)))))))) && _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))))))
                      {
                       for(int _injected_loop_counter = (_GLF_IDENTITY(0, (0) - 0) & 94759); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                        {
                         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                          {
                           for(int _injected_loop_counter = (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (int(7)), (~ (int(7))) - 0)), (~ (_GLF_IDENTITY(~ (int(7)), (~ (int(7))) - 0))) * 1)))) >> _GLF_IDENTITY(int(7), int(7)), min((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), ~ (_GLF_IDENTITY(~ (int(7)), (~ (int(7))) - 0))))) >> _GLF_IDENTITY(int(7), int(7)), (1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((int(7)), ~ (_GLF_IDENTITY(~ ((int(7))), max(~ ((int(7))), ~ ((int(7))))))), (~ (int(7))) - 0))))) >> _GLF_IDENTITY(int(7), int(7))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                            {
                             barrier();
                            }
                          }
                        }
                      }
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                  }
                }
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(false))
                  {
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | 0)); _injected_loop_counter --)
                    {
                     if(_GLF_DEAD(false))
                      break;
                     barrier();
                    }
                  }
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _GLF_IDENTITY(_injected_loop_counter --, _GLF_IDENTITY((_injected_loop_counter --) - 0, 0 + ((_injected_loop_counter --) - 0))))
                  {
                   if(_GLF_DEAD(false))
                    return;
                   return;
                  }
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
                  break;
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
        }
      }
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(1, 0 ^ (1)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(-38321) : _injected_loop_counter)) > _GLF_IDENTITY((0 | 0), clamp((0 | 0), (0 | 0), _GLF_IDENTITY((_GLF_IDENTITY(0 | 0, (0 | 0) / 1)), max((0 | 0), (0 | 0)))))); _GLF_IDENTITY(_injected_loop_counter --, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(55048) : _injected_loop_counter))), (_GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(55048) : _injected_loop_counter)))) | 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(55048) : _injected_loop_counter))), clamp(_GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(55048) : _injected_loop_counter))), _GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(55048) : _injected_loop_counter))), _GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(55048) : _injected_loop_counter))))), (_GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(55048) : _injected_loop_counter)))) | 0)) - 0) : _injected_loop_counter --), (false ? _GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(54399, 0 ^ (_GLF_IDENTITY(54399, clamp(54399, 54399, 54399)))) & _injected_loop_counter), _GLF_IDENTITY(clamp((_GLF_IDENTITY(54399, int(int(54399))) & _injected_loop_counter), (54399 & _injected_loop_counter), (54399 & _injected_loop_counter)), (clamp((54399 & _injected_loop_counter), (54399 & _injected_loop_counter), (54399 & _injected_loop_counter))) * 1))) : (false ? _GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(55048) : _injected_loop_counter))) : _injected_loop_counter --)))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, true, false)), bool(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, true, false)), (bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, true, false))) && true), false)))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))) / sqrt(exp(vec2(0.0, 0.0))), (_GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))) / sqrt(exp(_GLF_IDENTITY(vec2(0.0, 0.0), clamp(_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) / vec2(1.0, 1.0)), vec2(0.0, 0.0), vec2(0.0, 0.0)))))) + vec2(0.0, 0.0))).y, exp(length(vec3(_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), (min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))) * 1.0)), 0.0, 0.0))) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(exp(_GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0)))) - vec2(0.0, 0.0))))).y))))))
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       if(_GLF_DEAD(false))
        continue;
      }
     else
      {
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), (_GLF_IDENTITY(bool(bvec4(false, false, true, false)), bool(bvec2(bool(bvec4(false, false, true, false)), false)))) || false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 0.0, abs(0.0), 0.0))), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(float(64609), float(mat2x4(float(64609), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 0.0, length(0.0)))))))))))))))))) && true), false || (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false || ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))), _GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(float(64609)))))))))), (_GLF_IDENTITY(false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.4)), float(injectionSwitch.y), bool(true))) : _GLF_FUZZED(float(64609)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(float(64609)))), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(float(64609)))), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, determinant(mat4(log(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 0.0, 0.0)), (true ? float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(float(64609)))), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, determinant(mat4(log(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 0.0, 0.0)) : _GLF_FUZZED(-4168.0348))))))))))))) || false)))))), ((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(float(64609)))))))))), (_GLF_IDENTITY(false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.4)), float(injectionSwitch.y), bool(true))) : _GLF_FUZZED(float(64609)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(float(64609)))), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(float(64609)))), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, determinant(mat4(log(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 0.0, 0.0)), (true ? float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(float(64609)))), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, determinant(mat4(log(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 0.0, 0.0)) : _GLF_FUZZED(-4168.0348))))))))))))) || false))))))) && true) && true), false || (! _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))), bool(bool((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, bool(bool(true)))))))))))))))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0))).y))))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (! (false)) || false)) || false)))), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)), (! _GLF_IDENTITY((false), _GLF_IDENTITY(true, ! (! (true))) && ((false)))) || false)))))), ! (! (_GLF_IDENTITY((! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! _GLF_IDENTITY((false), _GLF_IDENTITY(true, ! (! (true))) && _GLF_IDENTITY(((false)), (((false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)))))), false || ((! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! _GLF_IDENTITY((false), _GLF_IDENTITY(true, ! (! (true))) && ((false)))) || false)))))))))))) || false)), (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (! (false)) || false)) || false)))), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)), (! _GLF_IDENTITY((false), _GLF_IDENTITY(true, ! (! (true))) && ((false)))) || false)))))), ! (! (_GLF_IDENTITY((! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! _GLF_IDENTITY((false), _GLF_IDENTITY(true, ! (! (true))) && _GLF_IDENTITY(((false)), (((false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)))))), false || ((! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! _GLF_IDENTITY((false), _GLF_IDENTITY(true, ! (! (true))) && ((false)))) || false)))))))))))) || false, (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (! (false)) || false)) || _GLF_IDENTITY(false, bool(bvec3(false, false, false))))))), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)), (! _GLF_IDENTITY((false), _GLF_IDENTITY(true, ! (! (true))) && ((false)))) || false)))))), ! (! (_GLF_IDENTITY((! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), (! (false)) && true))), (! _GLF_IDENTITY((false), _GLF_IDENTITY(true, ! (! (true))) && _GLF_IDENTITY(((false)), (((false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)))))), false || ((! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || ((_GLF_IDENTITY(false, ! (! (false)))))), (! _GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), true))))), ! (! (true))) && ((false)))) || false)))))))))))) || false) && true)))) || false))
          {
          }
         else
          {
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-22.11))))) > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), bool(bvec4(bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), true, false, false)))))))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            break;
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, true && (true)) && (_GLF_WRAPPED_LOOP(false))));
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = ((_GLF_IDENTITY(1, min(1, 1)) << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, (4) << 0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(612.004))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y) / 1.0), injectionSwitch.y))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * cos(vec2(0.0, 0.0))).x < injectionSwitch.y)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(false, ! (! (false))) || (true))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, 0 ^ (1))))); _injected_loop_counter ++)
            {
             barrier();
            }
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(_GLF_IDENTITY(bvec2(! (! (false)), _GLF_IDENTITY(false, bool(bool(false)))), bvec2(bvec3(bvec2(! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))) || false))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))), false))))))))
          break;
         barrier();
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       barrier();
      }
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))))) && _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec4((_GLF_DEAD(false)), false, false, false)), bool(bvec3(_GLF_IDENTITY(bool(bvec4((_GLF_DEAD(false)), false, false, false)), ! (! (bool(bvec4((_GLF_DEAD(false)), false, false, false))))), true, true))))))
  {
   do
    {
     if(_GLF_DEAD(false))
      break;
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    barrier();
  }
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), (false ? _GLF_FUZZED(vec2(-8.7, -7966.3806)) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), min(_GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(mat2(1.0) * (vec2(0.0, 0.0)), vec2(mat2x3(mat2(1.0) * (vec2(0.0, 0.0)), 0.0, 0.0, 1.0, 0.0)))), _GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), vec2(0.0, 0.0))))) + (injectionSwitch)))), (_GLF_IDENTITY(injectionSwitch, vec2(0.0, _GLF_IDENTITY(0.0, (0.0) / abs(1.0))) + (injectionSwitch))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y), ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, vec2(0.0, _GLF_IDENTITY(0.0, (0.0) / abs(_GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, sqrt(0.0), 0.0, 0.0, 1.0)))))) + (injectionSwitch))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y)) && true))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   subgroupBarrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x > injectionSwitch.y))))
      continue;
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(9885.6312)), float(injectionSwitch.y), bool(true))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, 0 ^ _GLF_IDENTITY((_injected_loop_counter), int(_GLF_IDENTITY(int((_injected_loop_counter)), 0 ^ (int((_injected_loop_counter))))))) != 0); _injected_loop_counter --)
      {
       barrier();
      }
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      continue;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, round(length(normalize(abs(vec3(1.0, 1.0, 1.0))))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 1.0, sqrt(0.0), 1.0), mat3x4(mat4(mat3x4(injectionSwitch, 0.0, round(length(normalize(abs(vec3(1.0, 1.0, 1.0))))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 1.0, sqrt(0.0), 1.0))))), mix(vec2(_GLF_FUZZED(2.3), (vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, round(length(normalize(abs(vec3(1.0, 1.0, 1.0))))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 1.0, sqrt(0.0), 1.0), mat3x4(mat4(mat3x4(injectionSwitch, 0.0, round(length(normalize(abs(vec3(1.0, 1.0, 1.0))))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 1.0, sqrt(0.0), 1.0))))))[1]), vec2((vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, round(length(normalize(abs(vec3(1.0, 1.0, 1.0))))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 1.0, sqrt(0.0), 1.0), mat3x4(mat4(mat3x4(injectionSwitch, 0.0, round(length(normalize(abs(vec3(1.0, 1.0, 1.0))))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 1.0, sqrt(0.0), 1.0))))))[0], _GLF_FUZZED(6.3)), bvec2(true, false)))).x, float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, 0.0, 1.0, 0.0), mat3x2(mat3x4(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(4745.1314)), bool(false))), injectionSwitch.x)), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(7.5)), bool(false))), 0.0, 0.0, 1.0, 0.0)))))) < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
   atomicStore(checker[_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))], read, 4, 64, 4);
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
