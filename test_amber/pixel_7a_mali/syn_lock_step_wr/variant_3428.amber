#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uvec4 GLF_merged2_0_2_53_2_2_42GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidGLF_merged2_0_1_4_1_1_14readworkgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8.8)), bool(false)))))))
    barrier();
   barrier();
  }
 uvec3 GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_sizeworkgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(! (! (bool(false))), (_GLF_IDENTITY(! (! (bool(false))), bool(bvec3(! (! (bool(false))), false, true)))) && true))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uvec3 GLF_merged2_0_2_53_2_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidworkgroup_size;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uvec2 GLF_merged2_0_1_4_1_1_14readworkgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 GLF_merged2_0_2_53_2_2_42GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidGLF_merged2_0_1_4_1_1_14readworkgroup_size.zw = GLF_merged2_0_1_4_1_1_14readworkgroup_size;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (false) || false))) || false))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (false) || false))) || false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) && true), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) && true), false, true), false))))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uvec2 GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid;
 GLF_merged2_0_2_53_2_2_42GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidGLF_merged2_0_1_4_1_1_14readworkgroup_size.xy = _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid, (GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid) | (GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4(injectionSwitch.x, 0.0, 1.0, sin(0.0), determinant(mat2(0.0, determinant(mat4(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, float(mat4x2(1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0)), sqrt(1.0), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), cos(0.0), 0.0, log(1.0))), min(float(mat4(injectionSwitch.x, 0.0, 1.0, sin(0.0), determinant(mat2(0.0, determinant(mat4(1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, sin(0.0), _GLF_IDENTITY(1.0, (1.0) * 1.0)))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0)), sqrt(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-167.152)))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(1.0, 0.0, 1.0, 0.0, 1.0, sqrt(1.0), 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0)), (float(mat4x3(1.0, 0.0, 1.0, 0.0, 1.0, sqrt(1.0), 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0))) / 1.0)), cos(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-4.3)))), 0.0, log(1.0))), float(_GLF_IDENTITY(mat4(injectionSwitch.x, 0.0, 1.0, sin(0.0), determinant(mat2(0.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(float(67026u)))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0)), sqrt(1.0), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, cos(0.0), 0.0, _GLF_IDENTITY(log(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9.5)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(log(1.0), (log(1.0)) * 1.0), float(vec2(_GLF_IDENTITY(log(1.0), (log(1.0)) * 1.0), 0.0))), log(1.0), log(1.0)))), transpose(transpose(mat4(injectionSwitch.x, 0.0, 1.0, sin(0.0), determinant(_GLF_IDENTITY(mat2(0.0, _GLF_IDENTITY(determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), (false ? _GLF_FUZZED(2109.3445) : determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), 0.0, 0.0), (mat2(0.0, _GLF_IDENTITY(determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-113.869))), 0.0, 0.0, 1.0)), (false ? _GLF_FUZZED(2109.3445) : determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), 0.0, 0.0)) / mat2(1.0, 1.0, 1.0, 1.0))), sqrt(1.0), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, cos(0.0), 0.0, log(1.0))))))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], float(mat2x3(injectionSwitch[0], 1.0, 0.0, 0.0, 1.0, 1.0))))), injectionSwitch[1])).x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), false || (bool(bool(_GLF_DEAD(false)))))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)), false)), bool(bool(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_IDENTITY(bool(bvec4(bool(bvec4(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false, false, true)), ! (_GLF_IDENTITY(! (bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), false)), false, false, true))), true && (! (bool(bvec4(bool(bvec4(_GLF_DEAD(false), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)), false, false, true)))))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY(false || (bool(bool(_GLF_DEAD(false)))), bool(bvec3(false || (bool(bool(_GLF_DEAD(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), false, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(intBitsToFloat(75495)) : injectionSwitch.x)), (injectionSwitch.x) - 0.0) > injectionSwitch.y)), false)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_IDENTITY(bool(bvec4(bool(bvec4(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false, false, true)), ! (_GLF_IDENTITY(! (bool(bvec4(bool(bvec4(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false, false, true))), true && (! (bool(bvec4(bool(bvec4(_GLF_DEAD(false), false, _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)), false, false, true)))))))), bool(bvec4(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(2.8)), bool(false))))), false)), _GLF_IDENTITY(bool(bvec4(bool(bvec4(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false, false, true)), ! (_GLF_IDENTITY(! (bool(bvec4(bool(bvec4(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false, false, true))), true && (! _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(bool(bvec4(_GLF_DEAD(false), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)), false, false, true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(bvec4(bool(bvec4(_GLF_DEAD(false), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)), false, false, true))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bool(bvec4(bool(bvec4(_GLF_DEAD(false), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)), false, false, true))), (bool(bool(bvec4(bool(bvec4(_GLF_DEAD(false), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)), false, false, true)))) && true), false, true, true)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(bool(bool(bvec4(bool(bvec4(_GLF_DEAD(false), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)), false, false, true))), (bool(bool(bvec4(bool(bvec4(_GLF_DEAD(false), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)), false, false, true)))) && true), false, true, true)), false))))), (bool(_GLF_IDENTITY(bool(bool(bvec4(bool(bvec4(_GLF_DEAD(false), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)), false, false, true))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bool(bvec4(bool(bvec4(_GLF_DEAD(false), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)), false, false, true))), (bool(bool(bvec4(bool(bvec4(_GLF_DEAD(false), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)), false, false, true)))) && true), false, true, true)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(bool(bool(bvec4(bool(bvec4(_GLF_DEAD(false), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)), false, false, true))), (bool(bool(bvec4(bool(bvec4(_GLF_DEAD(false), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)), false, false, true)))) && true), false, true, true)), false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && ((_GLF_IDENTITY(bool(bvec4(bool(bvec4(_GLF_DEAD(false), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)), false, false, true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(bvec4(bool(bvec4(_GLF_DEAD(false), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)), false, false, true))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bool(bvec4(bool(bvec4(_GLF_DEAD(false), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)), false, false, true))), (bool(bool(bvec4(bool(bvec4(_GLF_DEAD(false), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)), false, false, true)))) && true), false, true, true)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(bool(bool(bvec4(bool(bvec4(_GLF_DEAD(false), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)), false, false, true))), (bool(bool(bvec4(bool(bvec4(_GLF_DEAD(false), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)), false, false, true)))) && true), false, true, true)), false))))), (bool(_GLF_IDENTITY(bool(bool(bvec4(bool(bvec4(_GLF_DEAD(false), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)), false, false, true))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bool(bvec4(bool(bvec4(_GLF_DEAD(false), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)), false, false, true))), (bool(bool(bvec4(bool(bvec4(_GLF_DEAD(false), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)), false, false, true)))) && true), false, true, true)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(bool(bool(bvec4(bool(bvec4(_GLF_DEAD(false), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)), false, false, true))), (bool(bool(bvec4(bool(bvec4(_GLF_DEAD(false), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)), false, false, true)))) && true), false, true, true)), false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), true, false, true)))))))))))
  barrier();
 _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_53_2_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidworkgroup_size.xy = GLF_merged2_0_2_53_2_2_42GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidGLF_merged2_0_1_4_1_1_14readworkgroup_size.xy, (_GLF_IDENTITY(GLF_merged2_0_2_53_2_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidworkgroup_size.xy = GLF_merged2_0_2_53_2_2_42GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidGLF_merged2_0_1_4_1_1_14readworkgroup_size.xy, (GLF_merged2_0_2_53_2_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidworkgroup_size.xy = GLF_merged2_0_2_53_2_2_42GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidGLF_merged2_0_1_4_1_1_14readworkgroup_size.xy) ^ uvec2(0u, 0u))) / uvec2(1u, 1u)), _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_2_53_2_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidworkgroup_size.xy = GLF_merged2_0_2_53_2_2_42GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidGLF_merged2_0_1_4_1_1_14readworkgroup_size.xy, uvec2(0u, 0u) ^ (GLF_merged2_0_2_53_2_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidworkgroup_size.xy = _GLF_IDENTITY(GLF_merged2_0_2_53_2_2_42GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidGLF_merged2_0_1_4_1_1_14readworkgroup_size.xy, (GLF_merged2_0_2_53_2_2_42GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidGLF_merged2_0_1_4_1_1_14readworkgroup_size.xy) + uvec2(0u, 0u))))), ((_GLF_IDENTITY(GLF_merged2_0_2_53_2_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidworkgroup_size.xy = GLF_merged2_0_2_53_2_2_42GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidGLF_merged2_0_1_4_1_1_14readworkgroup_size.xy, uvec2(0u, 0u) ^ (GLF_merged2_0_2_53_2_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidworkgroup_size.xy = _GLF_IDENTITY(GLF_merged2_0_2_53_2_2_42GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidGLF_merged2_0_1_4_1_1_14readworkgroup_size.xy, (GLF_merged2_0_2_53_2_2_42GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidGLF_merged2_0_1_4_1_1_14readworkgroup_size.xy) + uvec2(0u, 0u)))))) ^ uvec2(0u, 0u)) / (_GLF_IDENTITY((_GLF_IDENTITY(uvec2(1u, _GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1u))) << _GLF_IDENTITY(uvec2(6u), uvec2(6u)), clamp(uvec2(1u, _GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1u))) << _GLF_IDENTITY(uvec2(6u), uvec2(6u)), uvec2(1u, _GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1u))) << _GLF_IDENTITY(uvec2(6u), uvec2(6u)), _GLF_IDENTITY(uvec2(1u, _GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1u))) << _GLF_IDENTITY(uvec2(6u), uvec2(6u)), (uvec2(1u, _GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, 1u * (1u)), 1u, _GLF_IDENTITY(1u, (1u) | (1u))))))))) << _GLF_IDENTITY(uvec2(6u), uvec2(6u))) / uvec2(1u, 1u))))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, (1u) | (1u)), _GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1u))) << _GLF_IDENTITY(uvec2(6u), uvec2(6u)), clamp(uvec2(1u, _GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1u))) << _GLF_IDENTITY(uvec2(6u), uvec2(6u)), uvec2(1u, _GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1u))) << _GLF_IDENTITY(uvec2(6u), uvec2(6u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, _GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1u))), ~ (_GLF_IDENTITY(~ (uvec2(1u, _GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1u)))), (~ (uvec2(1u, _GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1u))))) | (~ (uvec2(1u, _GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1u)))))))) << _GLF_IDENTITY(_GLF_IDENTITY(uvec2(6u), uvec2(6u)), (_GLF_IDENTITY(uvec2(6u), uvec2(6u))) | (_GLF_IDENTITY(uvec2(6u), uvec2(6u)))), (uvec2(1u, _GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(1u, (1u) - (0u | 0u))))) << _GLF_IDENTITY(uvec2(6u), uvec2(6u))) / uvec2(1u, 1u)))))), (~ ((_GLF_IDENTITY(uvec2(1u, _GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1u))) << _GLF_IDENTITY(uvec2(6u), uvec2(6u)), clamp(uvec2(1u, _GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1u))) << _GLF_IDENTITY(uvec2(6u), uvec2(6u)), uvec2(1u, _GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1u))) << _GLF_IDENTITY(uvec2(6u), uvec2(6u)), _GLF_IDENTITY(uvec2(1u, _GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1u))) << _GLF_IDENTITY(_GLF_IDENTITY(uvec2(6u), min(uvec2(6u), uvec2(6u))), _GLF_IDENTITY(uvec2(6u), uvec2(0u, 0u) + (_GLF_IDENTITY(uvec2(6u), (uvec2(6u)) << uvec2(0u, 0u))))), (uvec2(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1u))) << _GLF_IDENTITY(uvec2(6u), uvec2(6u))) / uvec2(1u, 1u))))))) * uvec2(1u, 1u)))) >> _GLF_IDENTITY(uvec2(6u), uvec2(6u))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))) && true))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-5.3)), bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch)).x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-5.3)), bool(false)))) * 1.0) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_sizeworkgroup_id.y = subgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))))), ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)), injectionSwitch))) * mat2(1.0)) * vec2(1.0, 1.0))))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))).y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-2658.2353) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) * mat2(1.0)).x > injectionSwitch.y)) && true)))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), float(mat3x4((injectionSwitch.y), cos(0.0), 0.0, 1.0, 0.0, abs(1.0), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), vec2(1.0, 1.0)), dot(_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_FUZZED(0.7)), bool(false))) : _GLF_FUZZED(364.368)))), max(vec2(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_FUZZED(0.7)), bool(false))) : _GLF_FUZZED(364.368)))), _GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_FUZZED(0.7)), bool(false))) : _GLF_FUZZED(364.368)))), _GLF_IDENTITY(vec2(mat3(vec2(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_FUZZED(0.7)), bool(false))) : _GLF_FUZZED(364.368)))), 1.0, 1.0, exp(0.0), 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 0.0)), vec2(vec4(vec2(mat3(vec2(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_FUZZED(0.7)), bool(false))) : _GLF_FUZZED(364.368)))), 1.0, 1.0, exp(0.0), 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 0.0)), 0.0, 0.0)))))), vec2(1.0, 1.0))), 0.0, 1.0, 0.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0))) - 0.0))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false))))))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((-5.2 + 4207.2003))), bool(false)))) / 1.0), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))), true && (_GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true, false)), false || (bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true, false)))), bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false)))) || false), bool(bvec2(false, true))), true, true, false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), true, false)))), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((mat4(4872.3788, -8.9, -6097.2980, -2.8, 6.6, -1156.0310, _GLF_IDENTITY(2369.3807, _GLF_ZERO(0.0, injectionSwitch.x) + (_GLF_IDENTITY(2369.3807, (2369.3807) - log(1.0)))), 517.181, 91.55, 62.38, -0.5, -5828.4715, -9.0, 0.7, 21.50, 974.265)[2] * mat2x4(637.855, -5.5, -57.31, -7263.3627, 0.4, -11.50, -5.3, -1382.6253))) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))), bool(bvec3(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || (_GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true)))))))), true, true, false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), false, true, true))))), true, false)))), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((mat4(4872.3788, -8.9, -6097.2980, -2.8, 6.6, -1156.0310, 2369.3807, 517.181, _GLF_IDENTITY(91.55, min(91.55, 91.55)), 62.38, -0.5, -5828.4715, -9.0, 0.7, 21.50, 974.265)[2] * mat2x4(637.855, -5.5, -57.31, -7263.3627, 0.4, -11.50, -5.3, -1382.6253))) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))), true, true))))))))))) || false)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec2(-741.229, 30.39).g), _GLF_FUZZED(7.5)), bvec2(false, false))).y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY((true), true && (_GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(true, (true) && true))), bool(bool(! ((true))))))))) && true), true, true, true)), bool(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, ! (! ((true) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))))))), true, true, true)), true && (bool(bvec4(_GLF_IDENTITY(true, (true) && true), true, true, true)))))))), true))), false), bvec3(bvec4(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY((true), true && (_GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(true, (true) && true))), bool(bool(! ((true))))))))) && true), true, true, true)), bool(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, ! (! ((true) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))))))), true, true, true)), true && (bool(bvec4(_GLF_IDENTITY(true, (true) && true), true, true, true)))))))), true))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((false ? _GLF_FUZZED(-1.2) : injectionSwitch.x), ((false ? _GLF_FUZZED(-1.2) : injectionSwitch.x)) / 1.0)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_IDENTITY(GLF_merged2_0_2_53_2_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidworkgroup_size.xy.x = subgroup_local_id, (true ? _GLF_IDENTITY(GLF_merged2_0_2_53_2_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidworkgroup_size.xy.x = subgroup_local_id, (_GLF_IDENTITY(GLF_merged2_0_2_53_2_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidworkgroup_size.xy.x = subgroup_local_id, 0u ^ (GLF_merged2_0_2_53_2_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidworkgroup_size.xy.x = subgroup_local_id))) - 0u) : _GLF_FUZZED(bitfieldInsert(subgroup_local_id, subgroup_id, 74885, 72023))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))))) && true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY((injectionSwitch.x), min((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x), mix(float(_GLF_FUZZED(94.09)), float((injectionSwitch.x)), bool(true))), clamp((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), _GLF_IDENTITY((injectionSwitch.x), mix(float(_GLF_FUZZED(-8.3)), float((injectionSwitch.x)), bool(true))), _GLF_IDENTITY((injectionSwitch.x), min((injectionSwitch.x), _GLF_IDENTITY((injectionSwitch.x), min((injectionSwitch.x), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x), min(_GLF_IDENTITY((injectionSwitch.x), mix(float(_GLF_FUZZED(6.8)), float((injectionSwitch.x)), bool(true))), _GLF_IDENTITY((injectionSwitch.x), 0.0 + ((injectionSwitch.x))))), clamp(_GLF_IDENTITY((injectionSwitch.x), min(_GLF_IDENTITY((injectionSwitch.x), mix(float(_GLF_FUZZED(6.8)), float((injectionSwitch.x)), bool(true))), _GLF_IDENTITY((injectionSwitch.x), 0.0 + ((injectionSwitch.x))))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x), min(_GLF_IDENTITY((injectionSwitch.x), mix(float(_GLF_FUZZED(6.8)), float((injectionSwitch.x)), bool(true))), _GLF_IDENTITY((injectionSwitch.x), 0.0 + ((injectionSwitch.x))))), float(mat3x4(_GLF_IDENTITY((injectionSwitch.x), min(_GLF_IDENTITY((injectionSwitch.x), mix(float(_GLF_FUZZED(6.8)), float((injectionSwitch.x)), bool(true))), _GLF_IDENTITY((injectionSwitch.x), 0.0 + ((injectionSwitch.x))))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, log(1.0), 1.0, 1.0))), _GLF_IDENTITY((injectionSwitch.x), min(_GLF_IDENTITY((injectionSwitch.x), mix(float(_GLF_FUZZED(6.8)), float((injectionSwitch.x)), bool(true))), _GLF_IDENTITY((injectionSwitch.x), 0.0 + ((injectionSwitch.x))))))))))))))) + _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0)))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 0.0))), min(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 0.0))), max(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 0.0))))))), injectionSwitch))[_GLF_IDENTITY(1, ~ (~ (1)))])), 1.0, 0.0, 1.0, 1.0)), (_GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), vec2(mat2(vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 0.0, 1.0, 1.0)), 0.0, 1.0)))) - sqrt(vec2(0.0, 0.0))), (_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), (_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), vec2(0.0, 0.0) + (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0))))) - vec2(0.0, 0.0))) + vec2(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), max(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))), (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0))) + vec2(0.0, 0.0)), max(_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0))) + vec2(0.0, 0.0)), _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9768.1111)), bool(false))), 0.0, 1.0, 1.0)), (vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, _GLF_IDENTITY(0.0, exp(0.0) * _GLF_IDENTITY((0.0), min((0.0), (0.0)))), 1.0, 1.0))) + vec2(0.0, 0.0))))) - vec2(0.0, _GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, log(1.0), 0.0)))))).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, true)), true && (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, true))))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, uint(uvec3(gl_NumWorkGroups.x, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(7u, ~ (~ (7u)))), (uint(_GLF_IDENTITY(7u, ~ (~ _GLF_IDENTITY((7u), clamp((7u), (7u), (7u))))))) >> 0u), (_GLF_IDENTITY(uint(7u), clamp(uint(7u), uint(7u), uint(7u)))) / 1u), uint(7u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), clamp(_GLF_IDENTITY(uint(7u), uint(7u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (7u) | (7u))), uint(7u))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (7u) | (7u)))), (true ? _GLF_IDENTITY(uint(7u), uint(7u)) : _GLF_FUZZED(subgroup_local_id))), _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), 0u + (_GLF_IDENTITY(uint(7u), uint(7u))))))))), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) << 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id))), (0u) + 0u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(true ? 0u : _GLF_FUZZED(subgroup_local_id), (true ? 0u : _GLF_FUZZED(subgroup_local_id)) | (_GLF_IDENTITY(true ? 0u : _GLF_FUZZED(subgroup_local_id), (true ? 0u : _GLF_FUZZED(subgroup_local_id)) * 1u))))), (0u) + 0u))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-3477.9419)))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_sizeworkgroup_id.x = num_workgroup;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 GLF_merged2_0_2_53_2_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidworkgroup_size.z = workgroup_size;
 _GLF_IDENTITY(GLF_merged2_0_2_53_2_2_42GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidGLF_merged2_0_1_4_1_1_14readworkgroup_size.zw.y = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_53_2_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidworkgroup_size, (GLF_merged2_0_2_53_2_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidworkgroup_size) >> (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(1u), uvec3(1u)))), ~ (~ (GLF_merged2_0_2_53_2_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidworkgroup_size))), (_GLF_IDENTITY(GLF_merged2_0_2_53_2_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidworkgroup_size, max(GLF_merged2_0_2_53_2_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidworkgroup_size, GLF_merged2_0_2_53_2_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidworkgroup_size))) | (GLF_merged2_0_2_53_2_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidworkgroup_size)).z, 0u ^ (GLF_merged2_0_2_53_2_2_42GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidGLF_merged2_0_1_4_1_1_14readworkgroup_size.zw.y = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_53_2_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidworkgroup_size, ~ (~ (GLF_merged2_0_2_53_2_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidworkgroup_size))), (_GLF_IDENTITY(GLF_merged2_0_2_53_2_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidworkgroup_size, max(GLF_merged2_0_2_53_2_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidworkgroup_size, GLF_merged2_0_2_53_2_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidworkgroup_size))) | (GLF_merged2_0_2_53_2_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidworkgroup_size)).z));
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_sizeworkgroup_id.z = workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))
  barrier();
 uint workgroup_base = GLF_merged2_0_2_53_2_2_42GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidGLF_merged2_0_1_4_1_1_14readworkgroup_size.zw.y * GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_sizeworkgroup_id.z;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) || false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (false || (false)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))) || false), false)), _GLF_IDENTITY(bool(bvec2(bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))) || false), false)), false)), bool(bvec3(bool(bvec2(bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))) || false), false)), false)), true, false)))))), false || (false))))), (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), false || (false))))), true && (! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bool(true && (false))), ! (! (bool(bool(true && (false))))))))) || false), false || (false)))))))) || false)), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (false)))))))))), bool(bvec3(_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (false)))))))))), ! (! (! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (false))))))))))))), true, true))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))) || false), false)), _GLF_IDENTITY(bool(bvec2(bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))) || false), false)), false)), bool(bvec3(bool(bvec2(bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))) || false), false)), false)), true, false)))))), false || (false))))), (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), false || (false))))), true && (! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bool(true && (false))), ! (! (bool(bool(true && (false))))))))) || false), false || (false)))))))) || false)), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (false)))))))))), bool(bvec3(_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (false)))))))))), ! (! (! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (false))))))))))))), true, true))))))) || false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_sizeworkgroup_id, clamp(GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_sizeworkgroup_id, GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_sizeworkgroup_id, GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_sizeworkgroup_id)).y;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(false, (false) && true)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_53_2_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidworkgroup_size, clamp(_GLF_IDENTITY(GLF_merged2_0_2_53_2_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidworkgroup_size, (GLF_merged2_0_2_53_2_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidworkgroup_size) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY(GLF_merged2_0_2_53_2_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidworkgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(GLF_merged2_0_2_53_2_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidworkgroup_size, uvec3(GLF_merged2_0_2_53_2_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidworkgroup_size[0], GLF_merged2_0_2_53_2_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidworkgroup_size[1], GLF_merged2_0_2_53_2_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidworkgroup_size[2])) : _GLF_FUZZED(GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_sizeworkgroup_id))), GLF_merged2_0_2_53_2_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidworkgroup_size)).xy, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_53_2_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidworkgroup_size.xy, (false ? _GLF_FUZZED(uvec2(35050u, 167399u)) : GLF_merged2_0_2_53_2_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidworkgroup_size.xy)), clamp(GLF_merged2_0_2_53_2_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidworkgroup_size.xy, GLF_merged2_0_2_53_2_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidworkgroup_size.xy, GLF_merged2_0_2_53_2_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidworkgroup_size.xy))) + uvec2(_GLF_IDENTITY(0u, (0u) | (0u)), 0u)).x;
 GLF_merged2_0_2_53_2_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidworkgroup_size.xy.y = virtual_gid;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base)) + _GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)) + (_GLF_IDENTITY((GLF_merged2_0_2_53_2_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidworkgroup_size.xy.x + 1), ~ (_GLF_IDENTITY(~ ((GLF_merged2_0_2_53_2_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidworkgroup_size.xy.x + 1)), (~ ((GLF_merged2_0_2_53_2_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidworkgroup_size.xy.x + 1))) | (~ ((GLF_merged2_0_2_53_2_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidworkgroup_size.xy.x + 1)))))) % _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_sizeworkgroup_id.y, (GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_sizeworkgroup_id.y) / 1u));
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, bool(bool(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(dot(vec2(_GLF_IDENTITY(-7.3, mix(float(-7.3), float(_GLF_FUZZED(float(72556u))), bool(false))), -618.611), injectionSwitch)) : injectionSwitch.x)), 0.0, 0.0))) > injectionSwitch.y))) || false, true && ((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))), (injectionSwitch.x > injectionSwitch.y))) || false))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), true && (bool(bvec4(false, true, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(false)), false, false), bvec3(bvec4(bvec3(! (_GLF_DEAD(false)), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, true, true))), false), true))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(~ (next_virtual_gid), (_GLF_IDENTITY(~ (next_virtual_gid), (~ (next_virtual_gid)) + 0u)) | 0u))), next_virtual_gid)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)), _GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) >> (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))))), _GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(min(next_virtual_gid, next_virtual_gid), (min(next_virtual_gid, next_virtual_gid)) | 0u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, uint(_GLF_IDENTITY(uvec2(next_virtual_gid, (0u ^ 0u)), ((uvec2(1u, 1u) << _GLF_IDENTITY(uvec2(6u), uvec2(6u))) >> _GLF_IDENTITY(uvec2(6u), uvec2(6u))) * (uvec2(next_virtual_gid, (0u ^ 0u))))))))), ~ (~ (~ (_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))))))))), (clamp(_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)), _GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)), _GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(min(next_virtual_gid, next_virtual_gid), _GLF_IDENTITY((min(next_virtual_gid, next_virtual_gid)), ~ (_GLF_IDENTITY(~ ((min(next_virtual_gid, next_virtual_gid))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY((min(next_virtual_gid, next_virtual_gid)), ((min(next_virtual_gid, next_virtual_gid))) ^ 0u)), max(~ ((min(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ (0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), 0u | (uint(3u)))))), next_virtual_gid))), ~ ((min(next_virtual_gid, next_virtual_gid))))), ~ ((min(next_virtual_gid, next_virtual_gid))))))) | 0u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, uint(uvec2(next_virtual_gid, (_GLF_IDENTITY(0u, (0u) + 0u) ^ 0u))))))), ~ (~ (~ (_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)))))))))) << 0u))], _GLF_IDENTITY(uint(1), (uint(1)) >> 0u), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, (true ? 4 : _GLF_IDENTITY(_GLF_FUZZED(-21802), (_GLF_IDENTITY(_GLF_FUZZED(-21802), (_GLF_FUZZED(-21802)) - 0)) + (50230 & 0)))), 0, 0))))), (_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-21802))), 0, 0)))))) ^ 0));
 uint read = atomicLoad(buf[_GLF_IDENTITY(GLF_merged2_0_2_53_2_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidworkgroup_size.xy.y, 0u + (_GLF_IDENTITY(GLF_merged2_0_2_53_2_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidworkgroup_size.xy.y, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(GLF_merged2_0_2_53_2_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidworkgroup_size.xy, uvec2(_GLF_IDENTITY(uvec4(GLF_merged2_0_2_53_2_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidworkgroup_size.xy, 0u, 1u), uvec4(1u, 1u, 1u, 1u) * (uvec4(GLF_merged2_0_2_53_2_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidworkgroup_size.xy, 0u, _GLF_IDENTITY(1u, (1u) | 0u)))))).y), (_GLF_IDENTITY(uint(_GLF_IDENTITY(GLF_merged2_0_2_53_2_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidworkgroup_size.xy, uvec2(_GLF_IDENTITY(uvec4(GLF_merged2_0_2_53_2_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidworkgroup_size.xy, 0u, 1u), _GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u) * (uvec4(GLF_merged2_0_2_53_2_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidworkgroup_size.xy, 0u, _GLF_IDENTITY(1u, (1u) | 0u))), (uvec4(1u, 1u, 1u, 1u) * (uvec4(GLF_merged2_0_2_53_2_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidworkgroup_size.xy, 0u, _GLF_IDENTITY(1u, (1u) | 0u)))) | (uvec4(1u, 1u, 1u, 1u) * (uvec4(GLF_merged2_0_2_53_2_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidworkgroup_size.xy, 0u, _GLF_IDENTITY(1u, (1u) | 0u)))))))).y), (uint(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_53_2_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidworkgroup_size.xy, clamp(GLF_merged2_0_2_53_2_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidworkgroup_size.xy, GLF_merged2_0_2_53_2_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidworkgroup_size.xy, GLF_merged2_0_2_53_2_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidworkgroup_size.xy)), uvec2(_GLF_IDENTITY(uvec4(GLF_merged2_0_2_53_2_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidworkgroup_size.xy, 0u, 1u), uvec4(1u, 1u, 1u, 1u) * (uvec4(GLF_merged2_0_2_53_2_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidworkgroup_size.xy, 0u, _GLF_IDENTITY(1u, (1u) | 0u)))))).y)) * 1u)) - 0u)))))], _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / 1)) << (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) / 1)), int(4)))), 64, 2);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_53_2_2_42GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidGLF_merged2_0_1_4_1_1_14readworkgroup_size.zw.x = _GLF_IDENTITY(read, (true ? read : _GLF_FUZZED(subgroup_local_id))), 0u ^ (GLF_merged2_0_2_53_2_2_42GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidGLF_merged2_0_1_4_1_1_14readworkgroup_size.zw.x = _GLF_IDENTITY(read, (true ? read : _GLF_FUZZED(subgroup_local_id))))), (GLF_merged2_0_2_53_2_2_42GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidGLF_merged2_0_1_4_1_1_14readworkgroup_size.zw.x = _GLF_IDENTITY(read, (true ? read : _GLF_FUZZED(subgroup_local_id)))) >> (_GLF_IDENTITY(0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(uint(4u), uint(4u))) * 1u))), (true ? _GLF_IDENTITY(0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(uint(4u), uint(4u))) * 1u))), ~ (~ (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(uint(4u), uint(4u))) * 1u)))))) : _GLF_FUZZED(workgroup_id)))));
 subgroupBarrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(checker[GLF_merged2_0_2_53_2_1_14GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidworkgroup_size.xy.y], _GLF_IDENTITY(GLF_merged2_0_2_53_2_2_42GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidGLF_merged2_0_1_4_1_1_14readworkgroup_size.zw.x, (_GLF_IDENTITY(GLF_merged2_0_2_53_2_2_42GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidGLF_merged2_0_1_4_1_1_14readworkgroup_size.zw.x, _GLF_IDENTITY((GLF_merged2_0_2_53_2_2_42GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidGLF_merged2_0_1_4_1_1_14readworkgroup_size.zw.x), uint(uvec3((GLF_merged2_0_2_53_2_2_42GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidGLF_merged2_0_1_4_1_1_14readworkgroup_size.zw.x), 0u, 1u))) * 1u)) >> uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0))), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) >> 0)) / _GLF_IDENTITY(1, (1) | (1))), max(4, 4)));
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), true && (_GLF_IDENTITY(false || (_GLF_DEAD(false)), ! (! (false || _GLF_IDENTITY((_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))))), true)))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), true && (_GLF_IDENTITY(false || (_GLF_DEAD(false)), ! (! (false || _GLF_IDENTITY((_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))))), true)))))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), true && (_GLF_IDENTITY(false || (_GLF_DEAD(false)), ! (! (false || _GLF_IDENTITY((_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))))), true)))))))))))), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), true && (_GLF_IDENTITY(false || (_GLF_DEAD(false)), ! (! (false || _GLF_IDENTITY((_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))))), true))))))))))))) || false), false, false, false)))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))))
    barrier();
   barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
