#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))
    barrier();
   for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > (1 ^ 1)); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), true), false))), true, true)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), true), false))), true, true))))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     else
      {
      }
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (false), true, false), bvec3(bvec4(bvec3(! (false), true, false), false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (false), true, false), bvec3(bvec4(bvec3(! (false), true, false), false)))), (bool(_GLF_IDENTITY(bvec3(! (false), true, false), bvec3(bvec4(bvec3(! (false), true, false), false))))) && true)), true && (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (false), true, false), bvec3(bvec4(bvec3(! (false), true, false), false)))), (bool(_GLF_IDENTITY(bvec3(! (false), true, false), bvec3(bvec4(bvec3(! (false), true, false), false))))) && true)))))))), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (false), true, false), bvec3(bvec4(bvec3(! (false), true, false), false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (false), true, false), bvec3(bvec4(bvec3(! (false), true, false), false)))), (bool(_GLF_IDENTITY(bvec3(! (false), true, false), bvec3(bvec4(bvec3(! (false), true, false), false))))) && true)), true && (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (false), true, false), bvec3(bvec4(bvec3(! (false), true, false), false)))), (bool(_GLF_IDENTITY(bvec3(! (false), true, false), bvec3(bvec4(bvec3(! (false), true, false), false))))) && true)))))))))), (bool(bool(! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (false), true, false), bvec3(bvec4(bvec3(! (false), true, false), false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (false), true, false), bvec3(bvec4(bvec3(! (false), true, false), false)))), (bool(_GLF_IDENTITY(bvec3(! (false), true, false), bvec3(bvec4(bvec3(! (false), true, false), false))))) && true)), true && (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (false), true, false), bvec3(bvec4(bvec3(! (false), true, false), false)))), (bool(_GLF_IDENTITY(bvec3(! (false), true, false), bvec3(bvec4(bvec3(! (false), true, false), false))))) && true))))))))))) || false)))), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), false || ((! (_GLF_DEAD(false)))))))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uvec2 GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id;
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uvec4 GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base;
 uvec3 GLF_merged3_0_1_13_1_1_4_2_1_13num_workgroupreadsubgroup_base;
 uvec3 GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_basesubgroup_idworkgroup_size;
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  barrier();
 uvec4 GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) && true)) && true))))
        {
        }
       else
        {
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), ! (! (_GLF_IDENTITY(true, true && (true)))))))
          {
           barrier();
          }
         else
          {
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))));
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), (true ? _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))) : _GLF_FUZZED(faceforward(vec2(53.17, 4.9), injectionSwitch, injectionSwitch))))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false, false))))))
      barrier();
     barrier();
    }
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) - 0.0), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))), float(_GLF_FUZZED(-7938.0189)), bool(false))) > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       else
        {
        }
      }
    }
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 do
  {
   GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.x = subgroup_id;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_basesubgroup_idworkgroup_size.y = GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.x;
                  }
                }
               else
                {
                }
              }
            }
           else
            {
            }
          }
         else
          {
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.y = subgroup_size;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(2), int(2)), int(ivec4(0 >> _GLF_IDENTITY(int(2), int(2)), (0 >> _GLF_IDENTITY(int(2), int(2))), 1, 0))))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) || false), true, false)), (bool(bvec3(_GLF_IDENTITY(false, (false) || false), true, false))) && true))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x = subgroup_local_id, 0u ^ (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x = subgroup_local_id, (false ? _GLF_FUZZED(68783u) : GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x = subgroup_local_id))));
 GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z = GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ 1)); _injected_loop_counter --)
    {
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           barrier();
          }
        }
      }
    }
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(1u * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (_GLF_IDENTITY(gl_NumWorkGroups.x, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups.x), (~ (gl_NumWorkGroups.x)) | (~ (gl_NumWorkGroups.x))))))), _GLF_IDENTITY((false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z) : gl_NumWorkGroups.x), ~ (~ (_GLF_IDENTITY((false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z) : gl_NumWorkGroups.x), (false ? _GLF_FUZZED(subgroup_id) : (false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z) : gl_NumWorkGroups.x)))))))), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY(((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z) : gl_NumWorkGroups.x)))), uint(uvec4(((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z) : gl_NumWorkGroups.x)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u))), min(~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z, uint(uvec4(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z, 0u, (0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (6u)))), min(uint(_GLF_IDENTITY(6u, uint(uvec2(6u, 0u)))), uint(6u))))), 1u)))) : gl_NumWorkGroups.x)))), ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z) : gl_NumWorkGroups.x)))))))), (_GLF_IDENTITY(1u * (_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z) : gl_NumWorkGroups.x))), (1u * (_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z) : gl_NumWorkGroups.x)))) | (1u * (_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && true)) ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z) : gl_NumWorkGroups.x)))))) >> 0u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(1u * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (_GLF_IDENTITY(gl_NumWorkGroups.x, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups.x), (~ (gl_NumWorkGroups.x)) | (~ (gl_NumWorkGroups.x))))))), _GLF_IDENTITY((false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z) : gl_NumWorkGroups.x), ~ (~ (_GLF_IDENTITY((false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z) : gl_NumWorkGroups.x), (false ? _GLF_FUZZED(subgroup_id) : (false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z) : gl_NumWorkGroups.x)))))))), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY(((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z) : gl_NumWorkGroups.x)))), uint(uvec4(((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z) : gl_NumWorkGroups.x)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u))), min(~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z, uint(uvec4(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z, 0u, (0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (6u)))), min(uint(_GLF_IDENTITY(6u, uint(uvec2(6u, 0u)))), uint(6u))))), 1u)))) : gl_NumWorkGroups.x)))), ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z) : gl_NumWorkGroups.x)))))))), (_GLF_IDENTITY(1u * (_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z) : gl_NumWorkGroups.x))), (1u * (_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z) : gl_NumWorkGroups.x)))) | (1u * (_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && true)) ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z) : gl_NumWorkGroups.x)))))) >> 0u)), (_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(1u * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (_GLF_IDENTITY(gl_NumWorkGroups.x, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups.x), (~ (gl_NumWorkGroups.x)) | (~ (gl_NumWorkGroups.x))))))), _GLF_IDENTITY((false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z) : gl_NumWorkGroups.x), ~ (~ (_GLF_IDENTITY((false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z) : gl_NumWorkGroups.x), (false ? _GLF_FUZZED(subgroup_id) : (false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z) : gl_NumWorkGroups.x)))))))), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY(((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z) : gl_NumWorkGroups.x)))), uint(uvec4(((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z) : gl_NumWorkGroups.x)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u))), min(~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z, uint(uvec4(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z, 0u, (0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (6u)))), min(uint(_GLF_IDENTITY(6u, uint(uvec2(6u, 0u)))), uint(6u))))), 1u)))) : gl_NumWorkGroups.x)))), ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z) : gl_NumWorkGroups.x)))))))), (_GLF_IDENTITY(1u * (_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z) : gl_NumWorkGroups.x))), (1u * (_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z) : gl_NumWorkGroups.x)))) | (1u * (_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && true)) ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z) : gl_NumWorkGroups.x)))))) >> 0u))) + 0u)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(1u * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (_GLF_IDENTITY(gl_NumWorkGroups.x, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups.x), (~ (gl_NumWorkGroups.x)) | (~ (gl_NumWorkGroups.x))))))), _GLF_IDENTITY((false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z) : gl_NumWorkGroups.x), ~ (~ (_GLF_IDENTITY((false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z) : gl_NumWorkGroups.x), (false ? _GLF_FUZZED(subgroup_id) : (false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z) : gl_NumWorkGroups.x)))))))), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY(((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z) : gl_NumWorkGroups.x)))), uint(uvec4(((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z) : gl_NumWorkGroups.x)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u))), min(~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z, uint(uvec4(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z, 0u, (0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (6u)))), min(uint(_GLF_IDENTITY(6u, uint(uvec2(6u, 0u)))), uint(6u))))), 1u)))) : gl_NumWorkGroups.x)))), ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z) : gl_NumWorkGroups.x)))))))), (_GLF_IDENTITY(1u * (_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z) : gl_NumWorkGroups.x))), (1u * (_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z) : gl_NumWorkGroups.x)))) | (1u * (_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && true)) ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z) : gl_NumWorkGroups.x)))))) >> 0u)), (_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(1u * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (_GLF_IDENTITY(gl_NumWorkGroups.x, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups.x), (~ (gl_NumWorkGroups.x)) | (~ (gl_NumWorkGroups.x))))))), _GLF_IDENTITY((false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z) : gl_NumWorkGroups.x), ~ (~ (_GLF_IDENTITY((false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z) : gl_NumWorkGroups.x), (false ? _GLF_FUZZED(subgroup_id) : (false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z) : gl_NumWorkGroups.x)))))))), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY(((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z) : gl_NumWorkGroups.x)))), uint(uvec4(((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z) : gl_NumWorkGroups.x)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u))), min(~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z, uint(uvec4(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z, 0u, (0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (6u)))), min(uint(_GLF_IDENTITY(6u, uint(uvec2(6u, 0u)))), uint(6u))))), 1u)))) : gl_NumWorkGroups.x)))), ~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z) : gl_NumWorkGroups.x)))))))), (_GLF_IDENTITY(1u * (_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z) : gl_NumWorkGroups.x))), (1u * (_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z) : gl_NumWorkGroups.x)))) | (1u * (_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && true)) ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z) : gl_NumWorkGroups.x)))))) >> 0u))) + 0u))) << 0u)))) | (gl_NumWorkGroups.x));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 else
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       GLF_merged3_0_1_13_1_1_4_2_1_13num_workgroupreadsubgroup_base.x = num_workgroup;
      }
    }
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) + _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(_GLF_IDENTITY(1u, 0u ^ (1u)), _GLF_IDENTITY(1u, (1u) >> (1u ^ 1u)), 1u))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)), (gl_WorkGroupSize) / uvec3(_GLF_IDENTITY(1u, 0u ^ (1u)), _GLF_IDENTITY(1u, (1u) >> (1u ^ 1u)), 1u))), uvec3(uvec3((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(_GLF_IDENTITY(1u, 0u ^ (1u)), _GLF_IDENTITY(1u, (1u) >> (1u ^ 1u)), 1u))))))) >> uvec3(0u, 0u, 0u)), ((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) * uvec3(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(13.24)), float(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)))), bool(true))), injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) / uvec3(1u, _GLF_IDENTITY(1u, (1u) >> (1u ^ 1u)), 1u)))) >> uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(0u, ((0u | 0u) | 0u), 1u), clamp(_GLF_IDENTITY(uvec3(0u, ((0u | 0u) | 0u), 1u), ~ (~ (uvec3(0u, ((0u | 0u) | 0u), 1u)))), uvec3(0u, ((0u | 0u) | 0u), 1u), uvec3(0u, ((0u | 0u) | 0u), 1u)))), ~ (~ (uint(_GLF_IDENTITY(uvec3(0u, ((0u | 0u) | 0u), 1u), clamp(_GLF_IDENTITY(uvec3(0u, ((0u | 0u) | 0u), 1u), ~ (~ (uvec3(0u, ((0u | 0u) | 0u), 1u)))), uvec3(0u, ((0u | 0u) | 0u), 1u), uvec3(0u, ((0u | 0u) | 0u), 1u))))))))))).x;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_basesubgroup_idworkgroup_size.z = workgroup_size;
  }
 else
  {
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, 0u ^ (gl_WorkGroupID.x));
 GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.y = _GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(subgroup_size)));
 uint workgroup_base = GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_basesubgroup_idworkgroup_size.z * GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.y;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true), _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))), ! (! (! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
      barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.w = workgroup_base;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.w = _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.w, (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.w, clamp(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.w, GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.w, GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.w))) >> (0u << _GLF_IDENTITY(uint(5u), uint(5u))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_basesubgroup_idworkgroup_size.y, max(GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_basesubgroup_idworkgroup_size.y, GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_basesubgroup_idworkgroup_size.y)) * GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.y, (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_basesubgroup_idworkgroup_size.y, max(GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_basesubgroup_idworkgroup_size.y, GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_basesubgroup_idworkgroup_size.y)) * GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.y) | 0u);
 GLF_merged3_0_1_13_1_1_4_2_1_13num_workgroupreadsubgroup_base.z = subgroup_base;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false) || (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(determinant(mat2(1.0, cos(0.0), 0.0, 1.0)), mix(float(_GLF_IDENTITY(determinant(mat2(1.0, cos(0.0), 0.0, 1.0)), float(vec2(determinant(mat2(1.0, cos(0.0), 0.0, 1.0)), 0.0)))), float(_GLF_FUZZED(9214.6762)), bool(false))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))), 1.0)), vec2(_GLF_IDENTITY(mat4x3(vec2(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), determinant(mat2(1.0, cos(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9555.9431)), float(0.0), bool(true)))), 0.0, 1.0)), 1.0, _GLF_ZERO(_GLF_IDENTITY(0.0, 1.0 * (0.0)), injectionSwitch.x), 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), min(dot(vec4(0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec3(0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))), (vec3(0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))) / vec3(1.0, 1.0, 1.0))))), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)))), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(65.42)), float(0.0), bool(true))), 0.0, 1.0))), 1.0)), 0.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0), mat4x3(mat4(mat4x3(vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), determinant(mat2(1.0, cos(0.0), 0.0, 1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(1.0, (1.0) * sqrt(1.0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((+ mat3(4521.1829, 0.3, -9.1, 4.3, -9.5, -66.67, 9.0, -4.4, -700.112))) : mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), determinant(mat2(1.0, cos(0.0), 0.0, 1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(1.0, (1.0) * sqrt(1.0)))))), 0.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))))).y))))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch), vec2(mat2(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 0.0, 0.0)))).x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false) || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(mat4x3(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, log(1.0), 1.0))) - vec2(_GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), cos(0.0) * (0.0)), 0.0)))), _GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), determinant(mat2(1.0, cos(0.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)) : _GLF_FUZZED(90.89), mix(float(_GLF_FUZZED(vec4(-376.676, -23.93, -3.1, 6380.2931).t)), float(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)) : _GLF_FUZZED(90.89), max(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)) : _GLF_FUZZED(90.89), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)) : _GLF_FUZZED(90.89), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)) : _GLF_FUZZED(90.89)) * 1.0)))), bool(true)))), min((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)) : _GLF_FUZZED(90.89), mix(float(_GLF_FUZZED(vec4(-376.676, -23.93, -3.1, 6380.2931).t)), float(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)) : _GLF_FUZZED(90.89), max(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)) : _GLF_FUZZED(90.89), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)) : _GLF_FUZZED(90.89), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)) : _GLF_FUZZED(90.89)) * 1.0)))), bool(true)))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)) : _GLF_FUZZED(90.89), mix(float(_GLF_FUZZED(vec4(-376.676, -23.93, -3.1, 6380.2931).t)), float(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)) : _GLF_FUZZED(90.89), max(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)) : _GLF_FUZZED(90.89), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)) : _GLF_FUZZED(90.89), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)) : _GLF_FUZZED(90.89)) * 1.0)))), bool(true))))))), 1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY((true ? 0.0 : _GLF_FUZZED(-7.3)), (_GLF_IDENTITY((true ? 0.0 : _GLF_FUZZED(-7.3)), mix(float((true ? 0.0 : _GLF_FUZZED(-7.3))), float(_GLF_FUZZED(8473.3901)), bool(false)))) / 1.0)), 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), 1.0))), 1.0)), vec2(_GLF_IDENTITY(mat4x3(vec2(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-7.4) : _GLF_IDENTITY(0.0, 1.0 * (0.0)))), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(908.269)), _GLF_IDENTITY(float(0.0), 0.0 + (float(0.0))), bool(true)), max(mix(float(_GLF_FUZZED(908.269)), float(0.0), bool(true)), mix(float(_GLF_FUZZED(908.269)), float(0.0), bool(true))))), _GLF_IDENTITY(0.0, sqrt(0.0) + (0.0)))))), determinant(mat2(1.0, cos(0.0), 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))), 1.0)), 0.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0), mat4x3(mat4(mat4x3(vec2(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), determinant(mat2(_GLF_IDENTITY(1.0, (1.0) - 0.0), cos(0.0), 0.0, 1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0))), 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))), 1.0)), 0.0, 1.0, 0.0, sin(0.0), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) - 0.0) : _GLF_FUZZED(5447.2492))), _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0, 1.0, 1.0))))))).y))))))), false || (! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch), vec2(mat2(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 0.0, 0.0)))).x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, cos(0.0) * (0.0)), 0.0)))), _GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), determinant(mat2(1.0, cos(0.0), _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)) : _GLF_FUZZED(90.89))), 1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-7.3))), 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), 1.0))), 1.0)), vec2(_GLF_IDENTITY(mat4x3(vec2(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-7.4) : _GLF_IDENTITY(0.0, 1.0 * (0.0)))), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(908.269)), float(0.0), bool(true)), max(mix(float(_GLF_FUZZED(908.269)), float(0.0), bool(true)), mix(float(_GLF_FUZZED(908.269)), float(0.0), bool(true))))), _GLF_IDENTITY(0.0, sqrt(0.0) + (0.0)))))), determinant(mat2(1.0, cos(0.0), 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))), 1.0)), 0.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0), mat4x3(mat4(mat4x3(vec2(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), determinant(mat2(_GLF_IDENTITY(1.0, (1.0) - 0.0), cos(0.0), 0.0, 1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))), 1.0)), 0.0, 1.0, 0.0, sin(0.0), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) - 0.0) : _GLF_FUZZED(5447.2492))), _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0, 1.0, 1.0))))))).y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, cos(0.0) * (0.0)), 0.0)))), _GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), determinant(mat2(1.0, cos(0.0), _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)) : _GLF_FUZZED(90.89))), 1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-7.3))), 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), 1.0))), 1.0)), vec2(_GLF_IDENTITY(mat4x3(vec2(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-7.4) : _GLF_IDENTITY(0.0, 1.0 * (0.0)))), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(908.269)), float(0.0), bool(true)), max(mix(float(_GLF_FUZZED(908.269)), float(0.0), bool(true)), mix(float(_GLF_FUZZED(908.269)), float(0.0), bool(true))))), _GLF_IDENTITY(0.0, sqrt(0.0) + (0.0)))))), determinant(mat2(1.0, cos(0.0), 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))), 1.0)), 0.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0), mat4x3(mat4(mat4x3(vec2(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), determinant(mat2(_GLF_IDENTITY(1.0, (1.0) - 0.0), cos(0.0), 0.0, 1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))), 1.0)), 0.0, 1.0, 0.0, sin(0.0), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) - 0.0) : _GLF_FUZZED(5447.2492))), _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0, 1.0, 1.0))))))).y)), true, false, false))))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch), vec2(mat2(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 0.0, 0.0)))).x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (false) || false) || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, float(vec3(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0, 0.0))), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, cos(0.0) * (0.0)), 0.0)))), _GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (0.0) * sqrt(1.0)) : _GLF_FUZZED(-6.0))))), determinant(mat2(1.0, cos(0.0), _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)) : _GLF_FUZZED(90.89))), 1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-7.3))), 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), 1.0))), 1.0)), vec2(_GLF_IDENTITY(mat4x3(vec2(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(-7.4, _GLF_IDENTITY(float(vec2(-7.4, 1.0)), float(float(_GLF_IDENTITY(float(vec2(-7.4, 1.0)), 0.0 + (float(vec2(-7.4, 1.0))))))))) : _GLF_IDENTITY(0.0, 1.0 * (0.0)))), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(908.269)), float(0.0), bool(true)), max(mix(float(_GLF_FUZZED(908.269)), float(0.0), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(908.269)), float(0.0), bool(true)), _GLF_IDENTITY(float(vec4(mix(float(_GLF_FUZZED(908.269)), float(0.0), bool(true)), 1.0, sin(0.0), 0.0)), min(float(vec4(mix(float(_GLF_FUZZED(908.269)), float(0.0), bool(_GLF_IDENTITY(true, (true) && true))), 1.0, sin(0.0), 0.0)), float(vec4(mix(float(_GLF_FUZZED(908.269)), float(0.0), bool(true)), 1.0, sin(0.0), 0.0)))))))), _GLF_IDENTITY(0.0, sqrt(0.0) + (0.0)))))), determinant(mat2(1.0, cos(0.0), 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), clamp(min(1.0, 1.0), _GLF_IDENTITY(min(1.0, 1.0), min(min(1.0, 1.0), min(1.0, 1.0))), min(1.0, 1.0)))))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(float(subgroup_size)))), 0.0, 1.0)), dot(vec4(0.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(3.3))), 1.0, 1.0)), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(35.28)), bool(false))))), 0.0), vec4(1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0))), 1.0)), 0.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))))), 1.0, 1.0), mat4x3(mat4(mat4x3(vec2(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), determinant(mat2(_GLF_IDENTITY(1.0, (1.0) - 0.0), cos(0.0), 0.0, 1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), (_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), (dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(3.5)), float(0.0), bool(true))), 1.0))) - 0.0)) - 0.0)), 1.0)), 0.0, 1.0, 0.0, sin(0.0), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), max((1.0), _GLF_IDENTITY((1.0), mix(float(_GLF_FUZZED(-63.31)), float((1.0)), bool(true))))) - 0.0) : _GLF_FUZZED(5447.2492))), _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0, 1.0, 1.0))))))).y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch), vec2(mat2(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 0.0, 0.0)))).x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false) || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, cos(0.0) * (0.0)), 0.0)))), _GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), determinant(mat2(1.0, cos(0.0), _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)) : _GLF_FUZZED(90.89))), 1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-7.3))), 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), 1.0))), 1.0)), vec2(_GLF_IDENTITY(mat4x3(vec2(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-7.4) : _GLF_IDENTITY(0.0, 1.0 * (0.0)))), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(908.269)), float(0.0), bool(true)), max(mix(float(_GLF_FUZZED(908.269)), float(0.0), bool(true)), mix(float(_GLF_FUZZED(908.269)), float(0.0), bool(true))))), _GLF_IDENTITY(0.0, sqrt(0.0) + (0.0)))))), determinant(mat2(1.0, cos(0.0), 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))), 1.0)), 0.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0), mat4x3(mat4(mat4x3(vec2(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), determinant(mat2(_GLF_IDENTITY(1.0, (1.0) - 0.0), cos(0.0), 0.0, 1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))), 1.0)), 0.0, 1.0, 0.0, sin(0.0), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) - 0.0) : _GLF_FUZZED(5447.2492))), _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0, 1.0, 1.0))))))).y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch), vec2(mat2(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 0.0, 0.0)))).x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (false) || false) || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, cos(0.0) * (0.0)), 0.0)))), _GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), determinant(mat2(1.0, cos(0.0), _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)) : _GLF_FUZZED(90.89))), 1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-7.3))), 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), 1.0))), 1.0)), vec2(_GLF_IDENTITY(mat4x3(vec2(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(-7.4, _GLF_IDENTITY(float(vec2(-7.4, 1.0)), float(float(_GLF_IDENTITY(float(vec2(-7.4, 1.0)), 0.0 + (float(vec2(-7.4, 1.0))))))))) : _GLF_IDENTITY(0.0, 1.0 * (0.0)))), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(908.269)), float(0.0), bool(true)), max(mix(float(_GLF_FUZZED(908.269)), float(0.0), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(908.269)), float(0.0), bool(true)), _GLF_IDENTITY(float(vec4(mix(float(_GLF_FUZZED(908.269)), float(0.0), bool(true)), 1.0, sin(0.0), 0.0)), min(float(vec4(mix(float(_GLF_FUZZED(908.269)), float(0.0), bool(true)), 1.0, sin(0.0), 0.0)), float(vec4(mix(float(_GLF_FUZZED(908.269)), float(0.0), bool(true)), 1.0, sin(0.0), 0.0)))))))), _GLF_IDENTITY(0.0, sqrt(0.0) + (0.0)))))), determinant(mat2(1.0, cos(0.0), 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), clamp(min(1.0, 1.0), _GLF_IDENTITY(min(1.0, 1.0), min(min(1.0, 1.0), min(1.0, 1.0))), min(1.0, 1.0)))))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(float(subgroup_size)))), 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))), 1.0)), 0.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))))), 1.0, 1.0), mat4x3(mat4(mat4x3(vec2(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), determinant(mat2(_GLF_IDENTITY(1.0, (1.0) - 0.0), cos(0.0), 0.0, 1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), (_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), (dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))) - 0.0)) - 0.0)), 1.0)), 0.0, 1.0, 0.0, sin(0.0), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) - 0.0) : _GLF_FUZZED(5447.2492))), _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0, 1.0, 1.0))))))).y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch), vec2(mat2(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 0.0, 0.0)))).x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false) || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, cos(0.0) * (0.0)), 0.0)))), _GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), determinant(mat2(1.0, cos(0.0), _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)) : _GLF_FUZZED(90.89))), 1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-7.3))), 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), 1.0))), 1.0)), vec2(_GLF_IDENTITY(mat4x3(vec2(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-7.4) : _GLF_IDENTITY(0.0, 1.0 * (0.0)))), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(908.269)), float(0.0), bool(true)), max(mix(float(_GLF_FUZZED(908.269)), float(0.0), bool(true)), mix(float(_GLF_FUZZED(908.269)), float(0.0), bool(true))))), _GLF_IDENTITY(0.0, sqrt(0.0) + (0.0)))))), determinant(mat2(1.0, cos(0.0), 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))), 1.0)), 0.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0), mat4x3(mat4(mat4x3(vec2(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), determinant(mat2(_GLF_IDENTITY(1.0, (1.0) - 0.0), cos(0.0), 0.0, 1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))), 1.0)), 0.0, 1.0, 0.0, sin(0.0), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) - 0.0) : _GLF_FUZZED(5447.2492))), _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0, 1.0, 1.0))))))).y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch), vec2(mat2(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 0.0, 0.0)))).x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (false) || false) || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, cos(0.0) * (0.0)), 0.0)))), _GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), determinant(mat2(1.0, cos(0.0), _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)) : _GLF_FUZZED(90.89))), 1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-7.3))), 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), 1.0))), 1.0)), vec2(_GLF_IDENTITY(mat4x3(vec2(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(-7.4, _GLF_IDENTITY(float(vec2(-7.4, 1.0)), float(float(_GLF_IDENTITY(float(vec2(-7.4, 1.0)), 0.0 + (float(vec2(-7.4, 1.0))))))))) : _GLF_IDENTITY(0.0, 1.0 * (0.0)))), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(908.269)), float(0.0), bool(true)), max(mix(float(_GLF_FUZZED(908.269)), float(0.0), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(908.269)), float(0.0), bool(true)), _GLF_IDENTITY(float(vec4(mix(float(_GLF_FUZZED(908.269)), float(0.0), bool(true)), 1.0, sin(0.0), 0.0)), min(float(vec4(mix(float(_GLF_FUZZED(908.269)), float(0.0), bool(true)), 1.0, sin(0.0), 0.0)), float(vec4(mix(float(_GLF_FUZZED(908.269)), float(0.0), bool(true)), 1.0, sin(0.0), 0.0)))))))), _GLF_IDENTITY(0.0, sqrt(0.0) + (0.0)))))), determinant(mat2(1.0, cos(0.0), 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), clamp(min(1.0, 1.0), _GLF_IDENTITY(min(1.0, 1.0), min(min(1.0, 1.0), min(1.0, 1.0))), min(1.0, 1.0)))))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(float(subgroup_size)))), 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))), 1.0)), 0.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))))), 1.0, 1.0), mat4x3(mat4(mat4x3(vec2(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), determinant(mat2(_GLF_IDENTITY(1.0, (1.0) - 0.0), cos(0.0), 0.0, 1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), (_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), (dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))) - 0.0)) - 0.0)), 1.0)), 0.0, 1.0, 0.0, sin(0.0), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) - 0.0) : _GLF_FUZZED(5447.2492))), _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0, 1.0, 1.0))))))).y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)))))))))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     barrier();
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_basesubgroup_idworkgroup_size.x = GLF_merged3_0_1_13_1_1_4_2_1_13num_workgroupreadsubgroup_base.z;
  }
 else
  {
  }
 uint virtual_gid = GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.w + GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_basesubgroup_idworkgroup_size.x + GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z;
 _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.z = virtual_gid, (true ? _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.z = virtual_gid, (true ? GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.z = virtual_gid : _GLF_FUZZED(subgroup_local_id))) : _GLF_FUZZED(virtual_gid)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uint next_virtual_gid = GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.w + GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_basesubgroup_idworkgroup_size.x + _GLF_IDENTITY((_GLF_IDENTITY((GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z + 1) % GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.y, min((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z, clamp(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z, GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z, GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z))) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z, (GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z) << 0u)))) - 0u), 0u | (GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z)))) + 1) % GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.y, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base, (GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base) | (GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base)).z + 1) % GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.y, ((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base, uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base, (GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base) - uvec4(0u, 0u, 0u, 0u)))).z + 1) % GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.y) | (_GLF_IDENTITY((GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z + 1) % GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.y, max(_GLF_IDENTITY((GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z + 1) % GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.y, ((GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) << 0))))) % GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.y) | ((GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z + 1) % GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.y)), (GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z + 1) % GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.y))))))), max(_GLF_IDENTITY(((GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z + 1) % GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.y), ((_GLF_IDENTITY((GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z + 1) % GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.y, ((GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z + 1) % GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.y) | 0u))) - 0u), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z + 1), clamp((GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z + 1), _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z + 1), ((GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z + 1)) ^ 0u), (GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z + 1))) % GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.y), (((GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z + 1) % GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.y)) / 1u), min(_GLF_IDENTITY((_GLF_IDENTITY((GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z + 1), clamp((GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z + 1), _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z + 1), ((GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z + 1)) ^ 0u), (GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z + 1))) % GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.y), (((GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z + 1) % GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.y)) / 1u), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z + 1), clamp((GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z + 1), _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z + 1), ((GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z + 1)) ^ 0u), (GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z + 1))) % GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.y), (((GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z + 1) % GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.y)) / 1u), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z + 1), clamp((GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z + 1), _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z + 1), ((GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z + 1)) ^ 0u), (GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z + 1))) % GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.y), (((GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z + 1) % GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.y)) / 1u))))))));
 for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(0, 0 + (0)), (_GLF_IDENTITY(0, 0 + (0))) >> 0); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, ! (! (_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec3(_injected_loop_counter < 1, false, false))))))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
   GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.x = next_virtual_gid;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) / 1), _GLF_IDENTITY(1, (1) - 0), 1))), _GLF_IDENTITY(int(1), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (int(1))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), bool(bvec2(bool(false), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true))))))))))))))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
          }
        }
       else
        {
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x < injectionSwitch.y)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7.1)), bool(false))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-7276.0229))))) > injectionSwitch.y))))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
         atomicStore(buf[GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.x], uint(1), 4, 64, 4);
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) | 0))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (_GLF_IDENTITY(~ (3), clamp(~ (3), ~ (3), ~ (3)))))), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(8), int(8)), ~ (~ (0 << _GLF_IDENTITY(int(8), int(8)))))) | 0)); _injected_loop_counter --)
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
            }
           else
            {
            }
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = (1 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) - 0)))); _injected_loop_counter --)
      {
       barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.z, ~ (~ (GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.z))), max(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.z, ~ (~ (GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.z))), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.z, ~ (~ (GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.z))), (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.z, ~ (~ (GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.z)))) | (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.z, ~ (~ (GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.z))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.z, ~ (~ (GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.z))), max(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.z, ~ (~ _GLF_IDENTITY((GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.z), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY((GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.z), min((GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.z), (GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.z))))))), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.z, ~ (~ (GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.z))), (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.z, ~ (~ (GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.z)))) | (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.z, _GLF_IDENTITY(~ (~ (GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.z)), max(~ (~ (GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.z)), ~ (~ (GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.z))))))))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.z, ~ (~ (GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.z))), max(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.z, ~ (~ (GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.z))), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.z, ~ (~ (GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.z))), (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.z, ~ (~ (GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.z)))) | (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.z, ~ (~ (GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.z))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.z, ~ (~ (GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.z))), max(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.z, ~ (~ (GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.z))), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.z, ~ (~ (GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.z))), (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.z, ~ (~ (GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.z)))) | (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.z, ~ (~ (GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.z))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.z, ~ (~ (GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.z))), max(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.z, ~ (~ (GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.z))), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.z, ~ (~ (GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.z))), (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.z, ~ (~ (GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.z)))) | (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.z, ~ (~ (GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.z))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.z, ~ (~ (GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.z))), max(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.z, ~ (~ (GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.z))), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.z, ~ (~ (GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.z))), (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.z, ~ (~ (GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.z)))) | (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.z, ~ (~ (GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.z)))))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.z, ~ (~ (GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.z))), max(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.z, ~ (~ (GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.z))), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.z, ~ (~ (GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.z))), (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.z, ~ (~ (GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.z)))) | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.z, uint(uvec4(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.z, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u))), ~ (~ (GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base.z)))))))))], 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, _GLF_IDENTITY((64), clamp((64), (64), (64))) ^ 0)) >> _GLF_IDENTITY(0, max(0, 0))), 2);
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 else
  {
  }
 GLF_merged3_0_1_13_1_1_4_2_1_13num_workgroupreadsubgroup_base.y = read;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) | (0)))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))); _injected_loop_counter ++)
    {
     _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.y = _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_4_2_1_13num_workgroupreadsubgroup_base, ((uvec3(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (1u))) | (_GLF_IDENTITY(1u, 0u ^ (1u)))), 1u) ^ uvec3(0u, 0u, 0u)) & uvec3(1u, 1u, 1u)) * (GLF_merged3_0_1_13_1_1_4_2_1_13num_workgroupreadsubgroup_base)).y, (GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.y = _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_4_2_1_13num_workgroupreadsubgroup_base, ((uvec3(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (1u))) | (_GLF_IDENTITY(1u, _GLF_IDENTITY(0u, (0u) * 1u) ^ (1u)))), 1u) ^ uvec3(0u, 0u, 0u)) & uvec3(1u, 1u, 1u)) * (GLF_merged3_0_1_13_1_1_4_2_1_13num_workgroupreadsubgroup_base)).y) + uint(_GLF_ZERO(0.0, injectionSwitch.x)));
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       do
        {
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec2(injectionSwitch.x, 1.0)), min(float(vec2(injectionSwitch.x, 1.0)), float(_GLF_IDENTITY(vec2(injectionSwitch.x, 1.0), clamp(vec2(injectionSwitch.x, 1.0), _GLF_IDENTITY(vec2(injectionSwitch.x, 1.0), (true ? _GLF_IDENTITY(vec2(injectionSwitch.x, 1.0), min(vec2(injectionSwitch.x, 1.0), vec2(injectionSwitch.x, 1.0))) : _GLF_FUZZED(vec2(17.42, 7.4)))), vec2(injectionSwitch.x, 1.0))))))) > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, ! (! (_GLF_IDENTITY(_injected_loop_counter < 1, true && (_injected_loop_counter < 1)))))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)) && true); _injected_loop_counter ++)
          {
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   subgroupBarrier();
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_WRAPPED_IF_FALSE(false))))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
           else
            {
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         do
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     else
      {
       atomicStore(checker[_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base, min(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base, uvec4(0u, 0u, 0u, 0u) ^ (GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base)), GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_base)).z], GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.y, 4, 64, 4);
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
