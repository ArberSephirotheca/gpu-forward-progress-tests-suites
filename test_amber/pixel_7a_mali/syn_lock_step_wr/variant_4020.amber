#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0)) || false); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     return;
    }
   else
    {
    }
  }
 uint subgroup_size = gl_SubgroupSize;
 do
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, true, false))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false || _GLF_IDENTITY((_GLF_DEAD(false)), bool(bool(_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false))))), false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, true, false))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false || _GLF_IDENTITY((_GLF_DEAD(false)), bool(bool(_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false))))), false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, true, false))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false || _GLF_IDENTITY((_GLF_DEAD(false)), bool(bool(_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false))))), false)))) || false))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(0.2)))), max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(53.46)), vec2(_GLF_FUZZED(-7056.0152), (injectionSwitch)[1]), bvec2(false, true))).x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(53.46)), vec2(_GLF_FUZZED(-7056.0152), (injectionSwitch)[1]), bvec2(false, true))).x, float(vec3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(53.46)), vec2(_GLF_FUZZED(-7056.0152), (injectionSwitch)[1]), bvec2(false, true))).x, 0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(53.46)), vec2(_GLF_FUZZED(-7056.0152), (injectionSwitch)[1]), bvec2(false, true))).x, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(53.46)), vec2(_GLF_FUZZED(-7056.0152), (injectionSwitch)[1]), bvec2(false, true))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(53.46)), vec2(_GLF_FUZZED(-7056.0152), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(53.46)), vec2(_GLF_FUZZED(-7056.0152), (injectionSwitch)[1]), bvec2(false, true))).x)))))) > injectionSwitch.y))))
      {
       do
        {
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) && _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, 0.0, 0.0))) < injectionSwitch.y))) && (false))))
      break;
     break;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      continue;
    }
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(58.38)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       continue;
       if(_GLF_DEAD(false))
        return;
      }
     break;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    break;
  }
 while(_GLF_WRAPPED_LOOP(false));
 do
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       do
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             return;
            }
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            break;
           break;
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        break;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 & 4098)); _injected_loop_counter --)
    {
     return;
    }
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) << uvec3(0u, 0u, 0u)) >> uvec3(0u, _GLF_IDENTITY(0u, 1u * (0u)), 0u)).x;
 for(int _injected_loop_counter = ((1 & 1) & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (_GLF_IDENTITY(6u, clamp(_GLF_IDENTITY(6u, max(6u, 6u)), _GLF_IDENTITY(6u, (true ? 6u : _GLF_FUZZED(subgroup_local_id))), 6u))) / 1u)), _GLF_IDENTITY(uint(6u), (uint(6u)) | (uint(6u))))))));
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))); _injected_loop_counter ++)
  {
   do
    {
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(100554u, 19622u, 181618u)) : gl_WorkGroupID)).x, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, 1u * (gl_WorkGroupID.x)), ~ (~ (_GLF_IDENTITY(gl_WorkGroupID.x, 1u * (gl_WorkGroupID.x))))))), 1u * ((~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, 1u * (gl_WorkGroupID.x)), ~ (~ (_GLF_IDENTITY(gl_WorkGroupID.x, 1u * (gl_WorkGroupID.x))))))))));
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 1.0)), mix(_GLF_IDENTITY(float(_GLF_FUZZED(638.855)), max(float(_GLF_FUZZED(638.855)), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(638.855, (638.855) * 1.0))), (float(_GLF_FUZZED(638.855))) - 0.0))), float(float(mat4x3(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 1.0))), bool(true))))), ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 1.0)), mix(_GLF_IDENTITY(float(_GLF_FUZZED(638.855)), max(float(_GLF_FUZZED(638.855)), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(638.855, (638.855) * 1.0))), (float(_GLF_FUZZED(638.855))) - 0.0))), float(float(mat4x3(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, (1.0) + abs(length(vec4(0.0, 0.0, 0.0, 0.0)))), 1.0, 0.0, 1.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 1.0))), bool(true)))))), (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(sin(0.0), min(sin(0.0), sin(0.0))), 0.0, 0.0, 0.0, 0.0, 1.0)), mix(_GLF_IDENTITY(float(_GLF_FUZZED(638.855)), max(float(_GLF_FUZZED(638.855)), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(638.855, (638.855) * 1.0), (true ? _GLF_IDENTITY(638.855, (638.855) * 1.0) : _GLF_FUZZED(-43.74))))), _GLF_IDENTITY((float(_GLF_FUZZED(638.855))), (_GLF_IDENTITY((float(_GLF_FUZZED(638.855))), float(mat4x2((float(_GLF_FUZZED(638.855))), 1.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))) - 0.0) - 0.0))), float(float(mat4x3(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 1.0))), bool(true))))))) && true), true && (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(injectionSwitch.y, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, 0.0, 1.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), mix(_GLF_IDENTITY(float(_GLF_FUZZED(638.855)), max(float(_GLF_FUZZED(638.855)), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(638.855, (638.855) * 1.0))), (float(_GLF_FUZZED(638.855))) - 0.0))), float(float(mat4x3(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 1.0))), bool(true)))))), (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 1.0)), mix(_GLF_IDENTITY(float(_GLF_FUZZED(638.855)), max(float(_GLF_FUZZED(638.855)), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(638.855, _GLF_IDENTITY((638.855), min((638.855), _GLF_IDENTITY((638.855), (false ? _GLF_FUZZED(5.3) : (638.855))))) * 1.0))), (float(_GLF_FUZZED(638.855))) - 0.0), min(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(638.855, _GLF_IDENTITY((638.855), min((638.855), _GLF_IDENTITY((638.855), (false ? _GLF_FUZZED(5.3) : (638.855))))) * 1.0))), (float(_GLF_FUZZED(638.855))) - 0.0), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(638.855, _GLF_IDENTITY((638.855), min((638.855), _GLF_IDENTITY((638.855), (false ? _GLF_FUZZED(5.3) : (638.855))))) * 1.0))), (float(_GLF_FUZZED(638.855))) - 0.0))))), float(float(mat4x3(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 1.0))), bool(true))))))) && true)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 1.0)), mix(_GLF_IDENTITY(float(_GLF_FUZZED(638.855)), max(float(_GLF_FUZZED(638.855)), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(638.855, (638.855) * 1.0))), (float(_GLF_FUZZED(638.855))) - 0.0))), float(float(mat4x3(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, (1.0) + abs(length(vec4(0.0, 0.0, 0.0, 0.0)))), 1.0, 0.0, 1.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 1.0))), bool(true)))))), (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(sin(0.0), min(sin(0.0), sin(0.0))), 0.0, 0.0, 0.0, 0.0, 1.0)), mix(_GLF_IDENTITY(float(_GLF_FUZZED(638.855)), max(float(_GLF_FUZZED(638.855)), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(638.855, (638.855) * 1.0), (true ? _GLF_IDENTITY(638.855, (638.855) * 1.0) : _GLF_FUZZED(-43.74))))), _GLF_IDENTITY((float(_GLF_FUZZED(638.855))), (_GLF_IDENTITY((float(_GLF_FUZZED(638.855))), float(mat4x2((float(_GLF_FUZZED(638.855))), 1.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))) - 0.0) - 0.0))), float(float(mat4x3(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 1.0))), bool(true))))))) && true), true && (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(injectionSwitch.y, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, 0.0, 1.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), mix(_GLF_IDENTITY(float(_GLF_FUZZED(638.855)), max(float(_GLF_FUZZED(638.855)), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(638.855, (638.855) * 1.0))), (float(_GLF_FUZZED(638.855))) - 0.0))), float(float(mat4x3(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 1.0))), bool(true)))))), (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 1.0)), mix(_GLF_IDENTITY(float(_GLF_FUZZED(638.855)), max(float(_GLF_FUZZED(638.855)), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(638.855, _GLF_IDENTITY((638.855), min((638.855), _GLF_IDENTITY((638.855), (false ? _GLF_FUZZED(5.3) : (638.855))))) * 1.0))), (float(_GLF_FUZZED(638.855))) - 0.0), min(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(638.855, _GLF_IDENTITY((638.855), min((638.855), _GLF_IDENTITY((638.855), (false ? _GLF_FUZZED(5.3) : (638.855))))) * 1.0))), (float(_GLF_FUZZED(638.855))) - 0.0), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(638.855, _GLF_IDENTITY((638.855), min((638.855), _GLF_IDENTITY((638.855), (false ? _GLF_FUZZED(5.3) : (638.855))))) * 1.0))), (float(_GLF_FUZZED(638.855))) - 0.0))))), float(float(mat4x3(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 1.0))), bool(true))))))) && true)))), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 1.0)), mix(_GLF_IDENTITY(float(_GLF_FUZZED(638.855)), max(float(_GLF_FUZZED(638.855)), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(638.855, (638.855) * 1.0))), (float(_GLF_FUZZED(638.855))) - 0.0))), float(float(mat4x3(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, (1.0) + abs(length(vec4(0.0, 0.0, 0.0, 0.0)))), 1.0, 0.0, 1.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 1.0))), bool(true)))))), (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(sin(0.0), min(sin(0.0), sin(0.0))), 0.0, 0.0, 0.0, 0.0, 1.0)), mix(_GLF_IDENTITY(float(_GLF_FUZZED(638.855)), max(float(_GLF_FUZZED(638.855)), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(638.855, (638.855) * 1.0), (true ? _GLF_IDENTITY(638.855, (638.855) * 1.0) : _GLF_FUZZED(-43.74))))), _GLF_IDENTITY((float(_GLF_FUZZED(638.855))), (_GLF_IDENTITY((float(_GLF_FUZZED(638.855))), float(mat4x2((float(_GLF_FUZZED(638.855))), 1.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))) - 0.0) - 0.0))), float(float(mat4x3(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 1.0))), bool(true))))))) && true), true && (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(injectionSwitch.y, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, 0.0, 1.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), mix(_GLF_IDENTITY(float(_GLF_FUZZED(638.855)), max(float(_GLF_FUZZED(638.855)), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(638.855, (638.855) * 1.0))), (float(_GLF_FUZZED(638.855))) - 0.0))), float(float(mat4x3(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 1.0))), bool(true)))))), (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 1.0)), mix(_GLF_IDENTITY(float(_GLF_FUZZED(638.855)), max(float(_GLF_FUZZED(638.855)), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(638.855, _GLF_IDENTITY((638.855), min((638.855), _GLF_IDENTITY((638.855), (false ? _GLF_FUZZED(5.3) : (638.855))))) * 1.0))), (float(_GLF_FUZZED(638.855))) - 0.0), min(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(638.855, _GLF_IDENTITY((638.855), min((638.855), _GLF_IDENTITY((638.855), (false ? _GLF_FUZZED(5.3) : (638.855))))) * 1.0))), (float(_GLF_FUZZED(638.855))) - 0.0), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(638.855, _GLF_IDENTITY((638.855), min((638.855), _GLF_IDENTITY((638.855), (false ? _GLF_FUZZED(5.3) : (638.855))))) * 1.0))), (float(_GLF_FUZZED(638.855))) - 0.0))))), float(float(mat4x3(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 1.0))), bool(true))))))) && true)))), false, false)))) || false)), bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true) && true, ! (! ((injectionSwitch.x > injectionSwitch.y) && true)))))))))))
  return;
 uint subgroup_base = _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ~ (~ (_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)), min(_GLF_IDENTITY(((subgroup_size)), min(((subgroup_size)), ((subgroup_size)))), _GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) | (((subgroup_size)))))) / 1u)))) << _GLF_IDENTITY(0u, 0u ^ (0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, uint(uvec2(0u, 1u)))))) | _GLF_IDENTITY(0u, (false ? _GLF_FUZZED((any(bvec4(false, true, false, true)) ? uvec2(2789u, 194911u)[1] : num_workgroup)) : 0u)))), 1u)))) | 0u), _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))), ~ (~ (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u)), (~ (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u))) << (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(5u), uint(5u)), (0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (0u << _GLF_IDENTITY(uint(5u), uint(5u)))))))) << 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY(0u, (0u) | 0u)), 1u)))) | 0u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY(0u, (0u) | 0u)), 1u)), (uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY(0u, (0u) | 0u)), 1u))) | (uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY(0u, (0u) | 0u)), 1u)))))) | 0u) : _GLF_FUZZED(packUnorm4x8(vec4(0.8, -166.248, -196.539, 8.2))))), _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), max(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))))), (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ~ (~ (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u)))), (_GLF_IDENTITY((subgroup_size), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u)), clamp((_GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u)), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u)), clamp((_GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u)), (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u)), (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u)))), (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u))))))) | 0u) << 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), uint(uvec2(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, (1u & 1u), 1u)))) << _GLF_IDENTITY(0u, (0u) | 0u)), 1u)))), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY(0u, (0u) | 0u)), 1u)), clamp(uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY(0u, (0u) | 0u)), 1u)), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY(0u, (0u) | 0u)), 1u)), max(uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY(0u, (0u) | 0u)), 1u)), uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY(0u, (0u) | 0u)), 1u)))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY(0u, (0u) | 0u)), 1u)), (true ? uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY(0u, (0u) | 0u)), 1u)) : _GLF_FUZZED(workgroup_base))))))) : _GLF_FUZZED(86080u))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY(0u, (0u) | 0u)), 1u)))), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY(0u, (0u) | 0u)), 1u)))) : _GLF_FUZZED(86080u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY(0u, ~ (~ (0u)))), uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY(0u, (0u) | 0u)), 1u)))), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY(0u, (0u) | 0u)), 1u)))) : _GLF_FUZZED(86080u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) | 0u)), 1u)))), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY(0u, (0u) | 0u)), 1u)))) : _GLF_FUZZED(86080u))))) | 0u), _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) << 0u))), (subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) + 0u)) / 1u))), 0u ^ ((~ (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u)))))) << 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (subgroup_size) << 0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), min(~ (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), ~ (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))))), (subgroup_size) << _GLF_IDENTITY(0u, (0u) / 1u)), uint(uvec2(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) << _GLF_IDENTITY(0u, (0u) | 0u), ((subgroup_size) << _GLF_IDENTITY(0u, (0u) | 0u)) | ((subgroup_size) << _GLF_IDENTITY(0u, (0u) | 0u)))), 1u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY(0u, (0u) / 1u)), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY(0u, (0u) | 0u)), 1u)), (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY(0u, (0u) | 0u)), 1u)), (0u & 199132u) + (uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY(0u, (0u) | 0u)), 1u))))) / 1u)))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u + (0u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), 0u + (subgroup_size))))), ~ (~ (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u)))) << 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY(0u, (0u) | 0u)), 1u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY(0u, (0u) | 0u)), 1u))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), uint(uvec2(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_size), ~ (~ (uint(subgroup_size))))), (uint(_GLF_IDENTITY(uint(subgroup_size), ~ (~ (uint(subgroup_size)))))) | 0u))) << _GLF_IDENTITY(0u, (0u) | 0u)), 1u)))))) | 0u), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) << 0u, uint(uvec2((subgroup_size) << 0u, 1u)))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u)) * ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), (_GLF_IDENTITY(uint(7u), uint(7u))) | (_GLF_IDENTITY(uint(7u), uint(7u)))))) << 0u)))) ^ 0u)) / 1u)) | (_GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)), subgroup_id, subgroup_id)) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_size), ((_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 1u, 1u))))) / 1u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(~ (_GLF_IDENTITY((subgroup_size), ((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_size, 1u, 1u)), uint(_GLF_IDENTITY(uvec3(uint(uvec3(subgroup_size, 1u, 1u)), 1u, 0u), uvec3(_GLF_IDENTITY(uvec3(uvec3(uint(uvec3(subgroup_size, 1u, 1u)), 1u, 0u)), (false ? _GLF_FUZZED(uvec3(112935u, 77687u, 71845u)) : uvec3(uvec3(uint(uvec3(subgroup_size, 1u, 1u)), 1u, 0u))))))))))) / 1u)), 1u), ~ (~ (uvec2(~ (_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 1u, 1u))))) / 1u, (((_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 1u, 1u))))) / 1u) >> 0u))), 1u))))), (uint(_GLF_IDENTITY(uvec2(~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), 0u | (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) >> 0u))), ((_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 1u, 1u))))) / 1u)), 1u), ~ (~ (uvec2(~ (_GLF_IDENTITY((subgroup_size), ((_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 1u, 1u))))) / 1u)), 1u)))))) - 0u))), ~ (_GLF_IDENTITY(~ ((~ (_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 1u, 1u))))), min(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 1u, 1u))))), (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 1u, 1u))))), (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 1u, 1u))))), (((_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 1u, 1u)))))) << 0u)) * 1u)) * 1u), ((_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 1u, 1u))))))) / 1u)))), (~ ((~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), 0u | ((subgroup_size))), ((_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 1u, 1u))))) / 1u))))) / 1u)))) << 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY(0u, (0u) | 0u)), 1u)))) | 0u), _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))))))));
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), (false || ((injectionSwitch.x > injectionSwitch.y))) || false))))))))), ! (_GLF_IDENTITY(! ((! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) || false))))), ! (_GLF_IDENTITY(! (! ((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))))), bool(bool(! _GLF_IDENTITY((! ((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY((! ((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec4((! ((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, false, false)))) || false)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(true && (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec4(_GLF_IDENTITY(true && (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))), (true && (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false)))) || false), true, _GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(true && (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0)), 0.0, sin(0.0))), clamp(_GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0)), 0.0, sin(0.0))), mix(float(_GLF_FUZZED(4843.8283)), float(float(mat2x4(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0)), 0.0, sin(0.0)))), bool(true))), float(mat2x4(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0)), 0.0, sin(0.0))), _GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0)), 0.0, sin(0.0))), max(float(mat2x4(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0)), 0.0, sin(0.0))), float(mat2x4(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0)), 0.0, sin(0.0)))))))), mix(float(_GLF_FUZZED(567.287)), float(injectionSwitch.y), bool(true)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0)), 0.0, sin(0.0))), clamp(_GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0)), 0.0, sin(0.0))), mix(float(_GLF_FUZZED(4843.8283)), float(float(mat2x4(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0)), 0.0, sin(0.0)))), bool(true))), float(mat2x4(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0)), 0.0, sin(0.0))), _GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0)), 0.0, sin(0.0))), max(float(mat2x4(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0)), 0.0, sin(0.0))), float(mat2x4(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0)), 0.0, sin(0.0)))))))), mix(float(_GLF_FUZZED(567.287)), float(injectionSwitch.y), bool(true)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), true && (bool(true && (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).x > injectionSwitch.y)) && true), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).x > injectionSwitch.y)) && true))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), false || (_GLF_IDENTITY(bool(true && (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), false, false))))), true, false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), false, false))))), true, false)), false || (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), false, false))))), true, false))))), false || (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), false, false))))), true, false)), false || (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), false, false))))), true, false)))))))))), _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) || false)), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true)))), ! (! (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true)))))))))))) && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) || false)), bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) || false)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true)))), ! (! (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true)))))))))))) && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) || false)), bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) || false)))))), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true)))), ! (! (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true)))))))))))) && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) || false)), bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) || false))))))) || false))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(0.0)), float((injectionSwitch)[1]), bool(true)))), vec2(_GLF_FUZZED(1.7), _GLF_FUZZED((-4.7 - -6.8))), bvec2(false, false))), injectionSwitch)).x > injectionSwitch.y))))))))), _GLF_IDENTITY(true && (bool(true && (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(bvec3(true && (bool(_GLF_IDENTITY(true && (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && (true && (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), false, true))))))))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), (bool(bvec4(false, true, true, false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        return;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         do
          {
           for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > ((0 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) << (0 >> _GLF_IDENTITY(int(2), int(2)))), (int(_GLF_IDENTITY(0, 1 * (_GLF_IDENTITY(0, (0) ^ 0))))) / 1))) << _GLF_IDENTITY(int(6), int(6)))), (_GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY((0 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (_GLF_IDENTITY(int(0), min(int(0), _GLF_IDENTITY(int(0), 0 | (int(0)))))) / 1))) << _GLF_IDENTITY(int(6), int(6)), int(_GLF_IDENTITY(int((0 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (_GLF_IDENTITY(int(0), min(int(0), _GLF_IDENTITY(int(0), 0 | (int(0)))))) / 1))) << _GLF_IDENTITY(int(6), int(6))), min(int((0 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (_GLF_IDENTITY(int(0), min(int(0), _GLF_IDENTITY(int(0), 0 | (int(0)))))) / 1))) << _GLF_IDENTITY(int(6), int(6))), int((0 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (_GLF_IDENTITY(int(0), min(int(0), _GLF_IDENTITY(int(0), 0 | (int(0)))))) / 1))) << _GLF_IDENTITY(int(6), int(6)))))))))) || false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter > ((0 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) / 1))) << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, max(6, 6))))))), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > ((0 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) / 1))) << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, max(_GLF_IDENTITY(_GLF_IDENTITY(6, clamp(6, _GLF_IDENTITY(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) / 1)) | 0), (_GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) / 1)) | 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) / 1)) | 0), clamp(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) / 1)) | 0), _GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) / 1)) | 0), _GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) / 1)) | 0))))), 6)), 1 * (_GLF_IDENTITY(6, max(6, 6)))), _GLF_IDENTITY(6, (6) * 1)))))), ! (! (_injected_loop_counter > (_GLF_IDENTITY((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(65292) : int(0))), _GLF_IDENTITY(int(0), (int(0)) / 1))) << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, max(_GLF_IDENTITY(_GLF_IDENTITY(6, clamp(6, _GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) / 1)) | 0), 6)), 1 * (_GLF_IDENTITY(6, max(6, _GLF_IDENTITY(6, int(ivec3(6, 0, 1))))))), _GLF_IDENTITY(6, (6) * 1))))), clamp(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) / 1))) << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, max(_GLF_IDENTITY(_GLF_IDENTITY(6, clamp(6, _GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) / 1)) | 0), 6)), 1 * (_GLF_IDENTITY(6, max(6, 6)))), _GLF_IDENTITY(6, (6) * 1))))), ((0 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) / 1))) << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(6, clamp(6, _GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) / 1)) | 0), 6)), 1 * (_GLF_IDENTITY(6, max(6, 6)))), _GLF_IDENTITY(6, (6) * 1)), (max(_GLF_IDENTITY(_GLF_IDENTITY(6, clamp(6, _GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) / 1)) | 0), 6)), 1 * (_GLF_IDENTITY(6, max(6, 6)))), _GLF_IDENTITY(6, (6) * 1))) | 0))))) | ((0 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) / 1))) << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, max(_GLF_IDENTITY(_GLF_IDENTITY(6, clamp(6, _GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) / 1)) | 0), 6)), 1 * (_GLF_IDENTITY(6, max(6, 6)))), _GLF_IDENTITY(6, (6) * 1))))))), _GLF_IDENTITY((0 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) / 1))) << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, max(_GLF_IDENTITY(_GLF_IDENTITY(6, clamp(6, _GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) / 1)) | 0), 6)), 1 * (_GLF_IDENTITY(6, max(6, 6)))), _GLF_IDENTITY(6, (6) * 1))))), clamp(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) / 1))) << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, max(_GLF_IDENTITY(_GLF_IDENTITY(6, clamp(6, _GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) / 1)) | 0), 6)), 1 * (_GLF_IDENTITY(6, max(6, 6)))), _GLF_IDENTITY(6, (6) * 1))))), int(ivec3((0 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) / 1))) << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, max(_GLF_IDENTITY(_GLF_IDENTITY(6, clamp(6, _GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) / 1)) | 0), 6)), 1 * (_GLF_IDENTITY(6, max(6, 6)))), _GLF_IDENTITY(6, (6) * 1))))), 1, 0))), (0 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) / 1))) << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, max(_GLF_IDENTITY(_GLF_IDENTITY(6, clamp(6, _GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) / 1)) | 0), 6)), 1 * (_GLF_IDENTITY(6, max(6, 6)))), _GLF_IDENTITY(6, (6) * 1))))), (0 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) / 1))) << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, max(_GLF_IDENTITY(_GLF_IDENTITY(6, clamp(6, _GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) / 1)) | 0), 6)), 1 * (_GLF_IDENTITY(6, max(6, 6)))), _GLF_IDENTITY(6, (6) * 1))))))), _GLF_IDENTITY((0 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) / 1))) << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, max(_GLF_IDENTITY(_GLF_IDENTITY(6, clamp(6, _GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) / 1)) | 0), 6)), 1 * (_GLF_IDENTITY(6, max(6, 6)))), _GLF_IDENTITY(6, (6) * 1))))), (0 >> _GLF_IDENTITY(int(5), int(5))) ^ ((0 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) / 1))) << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, max(_GLF_IDENTITY(_GLF_IDENTITY(6, clamp(6, _GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) / 1)) | 0), 6)), 1 * (_GLF_IDENTITY(6, max(6, 6)))), _GLF_IDENTITY(6, (6) * 1))))))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((_GLF_WRAPPED_LOOP(_injected_loop_counter > ((0 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(_GLF_IDENTITY(int(0), (_GLF_IDENTITY(int(0), (int(0)) | (int(0)))) | (_GLF_IDENTITY(int(0), (int(0)) ^ 0))), (int(0)) / 1))) << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(6, clamp(6, _GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) / 1)) | 0), 6)), 1 * (_GLF_IDENTITY(6, max(6, 6)))), _GLF_IDENTITY(6, (6) * 1)), (max(_GLF_IDENTITY(_GLF_IDENTITY(6, clamp(6, _GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) / 1)) | 0), 6)), 1 * (_GLF_IDENTITY(6, max(6, 6)))), _GLF_IDENTITY(6, (6) * 1))) >> 0))))))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(bool(bvec4((_GLF_WRAPPED_LOOP(_injected_loop_counter > ((0 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) / 1))) << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, max(_GLF_IDENTITY(_GLF_IDENTITY(6, clamp(6, _GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) / 1)) | 0), 6)), 1 * (_GLF_IDENTITY(6, max(6, 6)))), _GLF_IDENTITY(6, (6) * 1)))))))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4((_GLF_WRAPPED_LOOP(_injected_loop_counter > ((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) / 1)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) / 1)), (_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) / 1))) >> 0), _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) / 1)), _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) / 1))))) << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, max(_GLF_IDENTITY(_GLF_IDENTITY(6, clamp(6, _GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) / 1)) | 0), 6)), 1 * (_GLF_IDENTITY(6, max(6, 6)))), _GLF_IDENTITY(6, (6) * 1)))))))), false, _GLF_IDENTITY(true, (true) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (_GLF_IDENTITY(bool(bvec4((_GLF_WRAPPED_LOOP(_injected_loop_counter > ((0 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(_GLF_IDENTITY(int(0), (_GLF_IDENTITY(int(0), (int(0)) | (int(0)))) | (_GLF_IDENTITY(int(0), (int(0)) ^ 0))), (int(0)) / 1))) << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, max(_GLF_IDENTITY(_GLF_IDENTITY(6, clamp(6, _GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) / 1)) | 0), 6)), 1 * (_GLF_IDENTITY(6, max(6, 6)))), _GLF_IDENTITY(6, (6) * 1)))))))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(((0 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(_GLF_IDENTITY(0, (0) * 1))) / 1))) << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, max(_GLF_IDENTITY(_GLF_IDENTITY(6, clamp(6, _GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) / 1)) | 0), 6)), 1 * (_GLF_IDENTITY(6, max(6, 6)))), _GLF_IDENTITY(_GLF_IDENTITY(6, (6) * 1), (_GLF_IDENTITY(6, (6) * 1)) * 1)))))), (true ? ((0 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(_GLF_IDENTITY(0, (0) * 1))) / 1))) << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, max(_GLF_IDENTITY(_GLF_IDENTITY(6, clamp(6, _GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) / 1)) | 0), 6)), 1 * (_GLF_IDENTITY(6, max(6, 6)))), _GLF_IDENTITY(_GLF_IDENTITY(6, (6) * 1), (_GLF_IDENTITY(6, (6) * 1)) * 1)))))) : _GLF_FUZZED(_injected_loop_counter))))), true && (_GLF_IDENTITY((_GLF_WRAPPED_LOOP(_injected_loop_counter > ((0 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) / 1))) << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, max(_GLF_IDENTITY(_GLF_IDENTITY(6, clamp(6, _GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) / 1)) | 0), 6)), 1 * (_GLF_IDENTITY(6, max(6, 6)))), _GLF_IDENTITY(6, (6) * 1)))))))), ! (! ((_GLF_WRAPPED_LOOP(_injected_loop_counter > ((0 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) / 1))) << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, max(_GLF_IDENTITY(_GLF_IDENTITY(6, clamp(6, _GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) / 1)) | 0), 6)), 1 * (_GLF_IDENTITY(6, max(6, 6)))), _GLF_IDENTITY(6, (6) * 1))))))))))))), false, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(30.70, 9.3)) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_IDENTITY((_GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY((0 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(0), max(int(0), _GLF_IDENTITY(int(0), (int(0)) ^ 0))), _GLF_IDENTITY(int(0), (int(0)) / 1)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) / 1)), (_GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) | (0))), _GLF_IDENTITY(int(0), (int(0)) / 1))) >> 0), _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) / 1)), _GLF_IDENTITY(int(0), _GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) / 1), (_GLF_IDENTITY(int(0), (int(0)) / 1)) | (0 >> _GLF_IDENTITY(int(8), int(8)))))))) << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, max(_GLF_IDENTITY(_GLF_IDENTITY(6, clamp(6, _GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) / 1)) | 0), 6)), 1 * (_GLF_IDENTITY(6, max(6, 6)))), _GLF_IDENTITY(6, (6) * 1))))), ((0 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(0), max(int(0), _GLF_IDENTITY(int(0), (int(0)) ^ 0))), _GLF_IDENTITY(int(0), (int(0)) / 1)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) / 1)), (_GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) | (0))), _GLF_IDENTITY(int(0), (int(0)) / 1))) >> 0), _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) / 1)), _GLF_IDENTITY(int(0), _GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) / 1), (_GLF_IDENTITY(int(0), (int(0)) / 1)) | (0 >> _GLF_IDENTITY(int(8), int(8)))))))) << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, max(_GLF_IDENTITY(_GLF_IDENTITY(6, clamp(6, _GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) / 1)) | 0), 6)), 1 * (_GLF_IDENTITY(6, max(6, 6)))), _GLF_IDENTITY(6, (6) * 1)))))) | ((0 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(0), max(int(0), _GLF_IDENTITY(int(0), (int(0)) ^ 0))), _GLF_IDENTITY(int(0), (int(0)) / 1)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) / 1)), (_GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) | (0))), _GLF_IDENTITY(int(0), (int(0)) / 1))) >> 0), _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) / 1)), _GLF_IDENTITY(int(0), _GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) / 1), (_GLF_IDENTITY(int(0), (int(0)) / 1)) | (0 >> _GLF_IDENTITY(int(8), int(8)))))))) << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, max(_GLF_IDENTITY(_GLF_IDENTITY(6, clamp(6, _GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) / 1)) | 0), 6)), 1 * (_GLF_IDENTITY(6, max(6, 6)))), _GLF_IDENTITY(6, (6) * 1)))))))))), false || ((_GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY((0 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(0), max(int(0), _GLF_IDENTITY(int(0), (int(0)) ^ 0))), _GLF_IDENTITY(int(0), (int(0)) / 1)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) / 1)), (_GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) | (0))), _GLF_IDENTITY(int(0), (int(0)) / 1))) >> 0), _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) / 1)), _GLF_IDENTITY(int(0), _GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) / 1), (_GLF_IDENTITY(int(0), (int(0)) / 1)) | (0 >> _GLF_IDENTITY(int(8), int(8)))))))) << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, max(_GLF_IDENTITY(_GLF_IDENTITY(6, clamp(6, _GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) / 1)) | 0), 6)), 1 * (_GLF_IDENTITY(6, max(6, 6)))), _GLF_IDENTITY(6, (6) * 1))))), ((0 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(0), max(int(0), _GLF_IDENTITY(int(0), (int(0)) ^ 0))), _GLF_IDENTITY(int(0), (int(0)) / 1)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) / 1)), (_GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) | (0))), _GLF_IDENTITY(int(0), (int(0)) / 1))) >> 0), _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) / 1)), _GLF_IDENTITY(int(0), _GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) / 1), (_GLF_IDENTITY(int(0), (int(0)) / 1)) | (0 >> _GLF_IDENTITY(int(8), int(8)))))))) << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, max(_GLF_IDENTITY(_GLF_IDENTITY(6, clamp(6, _GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) / 1)) | 0), 6)), 1 * (_GLF_IDENTITY(6, max(6, 6)))), _GLF_IDENTITY(6, (6) * 1)))))) | ((0 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(0), max(int(0), _GLF_IDENTITY(int(0), (int(0)) ^ 0))), _GLF_IDENTITY(int(0), (int(0)) / 1)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) / 1)), (_GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) | (0))), _GLF_IDENTITY(int(0), (int(0)) / 1))) >> 0), _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) / 1)), _GLF_IDENTITY(int(0), _GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) / 1), (_GLF_IDENTITY(int(0), (int(0)) / 1)) | (0 >> _GLF_IDENTITY(int(8), int(8)))))))) << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, max(_GLF_IDENTITY(_GLF_IDENTITY(6, clamp(6, _GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) / 1)) | 0), 6)), 1 * (_GLF_IDENTITY(6, max(6, 6)))), _GLF_IDENTITY(6, (6) * 1)))))))))))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))) || false)))), true && (_GLF_IDENTITY(! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > ((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(0), clamp(int(0), _GLF_IDENTITY(int(0), (true ? _GLF_IDENTITY(int(0), int(ivec3(int(0), 1, 0))) : _GLF_FUZZED(36526))), _GLF_IDENTITY(int(0), clamp(int(0), int(0), _GLF_IDENTITY(int(0), int(int(int(0)))))))), _GLF_IDENTITY(int(0), _GLF_IDENTITY((int(0)) / 1, ~ (~ (_GLF_IDENTITY((int(0)) / 1, max(_GLF_IDENTITY(_GLF_IDENTITY((int(0)) / 1, 0 | ((int(0)) / 1)), (_GLF_IDENTITY((int(0)) / 1, 0 | ((int(0)) / 1))) | (_GLF_IDENTITY((int(0)) / 1, 0 | ((int(0)) / 1)))), (int(0)) / 1)))))))) << _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, max(_GLF_IDENTITY(_GLF_IDENTITY(6, clamp(6, _GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) / 1)) | 0), 6)), 1 * (_GLF_IDENTITY(6, max(_GLF_IDENTITY(6, clamp(6, 6, 6)), 6)))), _GLF_IDENTITY(6, (6) * 1))))), 0 | (_GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, max(_GLF_IDENTITY(_GLF_IDENTITY(6, clamp(6, _GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) / 1)) | 0), 6)), 1 * (_GLF_IDENTITY(6, max(_GLF_IDENTITY(6, clamp(6, 6, 6)), 6)))), _GLF_IDENTITY(6, (6) * 1))))))))))), (! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > ((0 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (_GLF_IDENTITY(int(0), ~ (~ (_GLF_IDENTITY(int(0), (int(0)) | (int(0))))))) / 1))) << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, max(_GLF_IDENTITY(_GLF_IDENTITY(6, clamp(6, _GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) / 1)) | 0), 6)), 1 * _GLF_IDENTITY((_GLF_IDENTITY(6, max(6, 6))), ((_GLF_IDENTITY(6, max(6, 6)))) / 1)), _GLF_IDENTITY(_GLF_IDENTITY(6, (false ? _GLF_FUZZED((10233 / (_injected_loop_counter --))) : _GLF_IDENTITY(6, (6) ^ 0))), (6) * 1)))))))))) && true))))))); _injected_loop_counter --)
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 return;
                }
               else
                {
                }
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
                return;
               if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
                continue;
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))), true && (false))));
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         else
          {
          }
        }
       else
        {
        }
      }
    }
   else
    {
    }
  }
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | 0u) % subgroup_size);
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY((46535 & 0), (false ? _GLF_FUZZED(_injected_loop_counter) : (46535 & 0)))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        continue;
       return;
      }
     continue;
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y)), false, true, false)), bool(bvec3(bool(bvec4(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y)), false, true, false)), false, true))))); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY((false) && true, _GLF_IDENTITY((_GLF_IDENTITY((false) && true, true && (_GLF_IDENTITY((false) && true, ((false) && true) || false)))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(! (! (_GLF_IDENTITY((_GLF_IDENTITY((false) && true, true && (_GLF_IDENTITY((false) && true, ((false) && true) || false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2((_GLF_IDENTITY((false) && true, true && (_GLF_IDENTITY((false) && true, ((false) && true) || false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), ! (! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((false) && true, ((false) && true) && true), _GLF_IDENTITY(true && (_GLF_IDENTITY((false) && true, ((false) && true) || false)), ! (! (true && (_GLF_IDENTITY((false) && true, ((false) && true) || false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2((_GLF_IDENTITY((false) && true, true && (_GLF_IDENTITY((false) && true, ((false) && true) || false)))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(vec3(2001.6919, -89.29, 55.61).r)), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y)), false))))))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(16.53)), bool(false))))) > injectionSwitch.y)))))))
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(22.48)), bool(false))))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
              return;
             break;
             if(_GLF_DEAD(false))
              continue;
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                continue;
               return;
              }
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(false))
                {
                 do
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       do
                        {
                         if(_GLF_DEAD(false))
                          return;
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x4(injectionSwitch.y, tan(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 0.0)), min(float(mat2x4(injectionSwitch.y, tan(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 0.0)), float(mat2x4(injectionSwitch.y, tan(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 0.0)))))) - 0.0)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x4(injectionSwitch.y, tan(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 0.0)), min(float(mat2x4(injectionSwitch.y, tan(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 0.0)), float(mat2x4(injectionSwitch.y, tan(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 0.0)))))) - 0.0)), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x4(injectionSwitch.y, tan(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 0.0)), min(float(mat2x4(injectionSwitch.y, tan(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 0.0)), float(mat2x4(injectionSwitch.y, tan(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 0.0)))))) - 0.0)), false)), bool(bvec3(bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x4(injectionSwitch.y, tan(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 0.0)), min(float(mat2x4(injectionSwitch.y, tan(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 0.0)), float(mat2x4(injectionSwitch.y, tan(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 0.0)))))) - 0.0)), false)), false, true)))), false, true, false)), bool(bool(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x4(injectionSwitch.y, tan(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 0.0)), min(float(mat2x4(injectionSwitch.y, tan(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 0.0)), float(mat2x4(injectionSwitch.y, tan(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 0.0)))))) - 0.0)), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x4(injectionSwitch.y, tan(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 0.0)), min(float(mat2x4(injectionSwitch.y, tan(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 0.0)), float(mat2x4(injectionSwitch.y, tan(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 0.0)))))) - 0.0)), false)), bool(bvec3(bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x4(injectionSwitch.y, tan(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 0.0)), min(float(mat2x4(injectionSwitch.y, tan(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 0.0)), float(mat2x4(injectionSwitch.y, tan(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 0.0)))))) - 0.0)), false)), false, true)))), false, true, false)))))))));
                       return;
                      }
                     else
                      {
                       if(_GLF_DEAD(false))
                        continue;
                      }
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    continue;
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 break;
                }
               return;
               if(_GLF_DEAD(false))
                continue;
              }
             else
              {
               if(_GLF_DEAD(false))
                continue;
              }
            }
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             do
              {
               return;
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(false, (false) && true)))), bool(bool(_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(false, (false) && true)))), ! (! (bool(bool((_GLF_IDENTITY(false, (false) && true))))))))))), false, false, true)))) && true)))));
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
            }
           else
            {
            }
          }
        }
       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_WRAPPED_LOOP(false))));
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && (false)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
     continue;
    }
  }
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false)))))
      {
       atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) << 0)), max(uint(_GLF_IDENTITY(1, (1) << 0)), uint(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (1) << 0)))), 4, 64, 4);
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) - (0 | 0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) | (-56193 & 0)), (int(2)) * 1), (0 ^ 0) | (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(_GLF_IDENTITY(2, int(ivec4(2, 1, 1, 1)))), (_GLF_IDENTITY(int(_GLF_IDENTITY(2, int(ivec4(2, 1, 1, 1)))), (int(_GLF_IDENTITY(2, int(ivec4(2, 1, 1, 1))))) >> 0)) | (int(_GLF_IDENTITY(2, int(ivec4(2, 1, 1, 1))))))) * 1))))), int(_GLF_IDENTITY(int((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), ~ (~ (int(2)))), 1, 1)), (int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY(~ (~ (int(2))), (~ (~ (int(2)))) ^ 0)), 1, 1))) | (int(ivec3(_GLF_IDENTITY(int(2), ~ (~ (int(2)))), 1, 1))))), _GLF_IDENTITY(int(2), (int(2)) * 1)))), max(int((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) + int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(int(2), (int(2)) * 1)))), int((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)), max(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)), 1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))), ~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) - 0)) * 1)) | (_GLF_IDENTITY(int(2), (int(2)) * 1)))), 0 ^ (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (int(2)) * 1)) << 0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)), ((int(2))) | 0) * 1)), max(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, (1) - 0))), 1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))), ~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) - 0)) * 1)) | (_GLF_IDENTITY(int(2), (int(2)) * 1)))), 0 ^ (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (int(2)) * 1)) << 0)))))))) + 0))))))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) + (int(2)), ~ (~ (int(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((int(2)), 0 | (_GLF_IDENTITY((int(2)), min((int(2)), (int(2)))))))))))), _GLF_IDENTITY(((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) | (2))), _GLF_IDENTITY((int(2)) * 1, (_GLF_IDENTITY((int(2)) * 1, 1 * ((int(2)) * 1))) | (_GLF_IDENTITY((int(2)) * 1, int(ivec3(_GLF_IDENTITY((int(2)) * 1, 0 ^ ((int(2)) * 1)), 1, 0)))))))), int(_GLF_IDENTITY(int((_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)), int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1))), (int(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))) - 0))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)), int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1))), (int(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))) - 0))), _GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)), int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1))), (int(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))) - 0))), ~ (~ (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)), int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1))), (int(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))) - 0)))))))))), max(int((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) << 0)) * 1)))), _GLF_IDENTITY(int((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))), clamp(_GLF_IDENTITY(int((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))), 0 ^ (int((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))))), int((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))), int((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))))))))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(int(2), (int(2)) - 0)))))) << 0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1))), int(_GLF_IDENTITY(int((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))), max(int((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, min(2, 2))))) << 0)), (int(2)) << 0)), max((_GLF_IDENTITY(int(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, min(2, 2))))) << 0)), (int(2)) << 0)), (_GLF_IDENTITY(int(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, min(2, 2))))) << 0)), (int(2)) << 0)))) * 1)))), int((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))))))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (int(2)))))) << 0, max(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), min(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) | (int(2)))) ^ 0)) | (int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0)), (int(2)) * 1), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) ^ (0 | 0))) * 1))))), int(_GLF_IDENTITY(int((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))), max(int((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2)))) * 1))), (int(2)) << 0), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2)))) * 1))), (int(2)) << 0)) ^ 0)) * 1)))), int((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) * 1, (false ? _GLF_FUZZED(-17968) : (int(2)) * 1)))))))))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (int(2)))))) << 0, clamp(_GLF_IDENTITY(((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), min(_GLF_IDENTITY(int(2), (int(2)) * 1), _GLF_IDENTITY(int(2), (int(2)) * 1))))), int(_GLF_IDENTITY(int((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))), max(int((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2)))) * 1))), (int(2)) << 0)) * 1)))), int((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) * 1, (false ? _GLF_FUZZED(-17968) : (int(2)) * 1)))))))))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (int(2)))))) << 0, (((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), min(_GLF_IDENTITY(int(2), (int(2)) * 1), _GLF_IDENTITY(int(2), (int(2)) * 1))))), int(_GLF_IDENTITY(int((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))), max(int((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2)))) * 1))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2)))) * 1))), clamp(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2)))) * 1))), _GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2)))) * 1))), _GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2)))) * 1))))))), _GLF_IDENTITY((int(2)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (int(2)) : _GLF_FUZZED(-21527))) << 0)) * 1)))), int((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) * 1, (false ? _GLF_FUZZED(-17968) : (int(2)) * 1))), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) * 1, _GLF_IDENTITY((false ? _GLF_FUZZED(-17968) : (int(2)) * 1), (_GLF_IDENTITY((false ? _GLF_FUZZED(-17968) : (int(2)) * 1), 0 + ((false ? _GLF_FUZZED(-17968) : (int(2)) * 1)))) / 1)))))))))))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (int(2)))))) << 0) / 1), ((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), min(_GLF_IDENTITY(int(2), (int(2)) * 1), _GLF_IDENTITY(int(2), (int(2)) * 1))))), int(_GLF_IDENTITY(int((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))), max(int((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2)))) * 1))), (int(2)) << 0)) * 1)), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2)))) * 1))), (int(2)) << 0)) * 1)), 0 ^ (_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2)))) * 1))), (int(2)) << 0)) * 1)))))))), int((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) * 1, (false ? _GLF_FUZZED(-17968) : (int(2)) * 1)))))))))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (int(2)))))) << 0, ((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), min(_GLF_IDENTITY(int(2), (int(2)) * 1), _GLF_IDENTITY(int(2), (int(2)) * 1))))), int(_GLF_IDENTITY(int((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))), max(int((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2)))) * 1))), (int(2)) << 0)) * 1)))), int((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) * 1, (false ? _GLF_FUZZED(-17968) : (int(2)) * 1)))))))))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (int(2)))))) << _GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) ^ 0))), (((_GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec3(1, 1, 0))) << _GLF_IDENTITY(int(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) - 0)) ^ 0)), _GLF_IDENTITY(int(2), (int(2)) * 1))), int(_GLF_IDENTITY(int((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))), max(int((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) << 0)) * 1)))), int((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))))))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (int(2)))))) << 0) ^ 0), ((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) | (2))), (int(2)) * 1))), int(_GLF_IDENTITY(_GLF_IDENTITY(int((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (int(2)) * 1)) ^ 0)))), min(int((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) - 0), _GLF_IDENTITY(int(2), (int(2)) * 1)))), int((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))))), max(int((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY((_GLF_IDENTITY(int(2), (int(2)) << 0)) * 1, ((_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, (2) | (2)))) << 0)) * 1) + 0))))), int((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))))))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (int(2)))))) << 0))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) - (0 | 0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, (2) | (2)))) | (-56193 & 0)), (_GLF_IDENTITY(int(2), clamp(int(2), _GLF_IDENTITY(int(2), (int(2)) - 0), int(2)))) * 1), (0 ^ 0) | (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(_GLF_IDENTITY(2, int(ivec4(2, 1, 1, 1)))), (_GLF_IDENTITY(int(_GLF_IDENTITY(2, int(ivec4(2, 1, 1, 1)))), (int(_GLF_IDENTITY(2, int(ivec4(2, 1, 1, 1))))) >> 0)) | (int(_GLF_IDENTITY(2, int(ivec4(2, 1, 1, 1))))))) * 1))))), int(_GLF_IDENTITY(int((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), ~ (~ (int(2)))), 1, 1)), _GLF_IDENTITY((int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY(~ (~ (int(2))), (~ (~ (int(2)))) ^ 0)), 1, 1))) | (int(ivec3(_GLF_IDENTITY(int(2), ~ (~ (int(2)))), 1, 1))), min(_GLF_IDENTITY((int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY(~ (~ (int(2))), (~ (~ (int(2)))) ^ 0)), 1, 1))) | (int(ivec3(_GLF_IDENTITY(int(2), ~ (~ (int(2)))), 1, 1))), min(_GLF_IDENTITY((int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY(~ (~ (int(2))), (~ (~ (int(2)))) ^ 0)), 1, 1))) | (int(ivec3(_GLF_IDENTITY(int(2), ~ (~ (int(2)))), 1, 1))), ~ (~ ((int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY(~ (~ (int(2))), (~ (~ (int(2)))) ^ 0)), 1, 1))) | (int(ivec3(_GLF_IDENTITY(int(2), ~ (~ (int(2)))), 1, 1)))))), (int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY(~ (~ (int(2))), (~ (~ (int(2)))) ^ 0)), 1, 1))) | (int(ivec3(_GLF_IDENTITY(int(2), ~ (~ (int(2)))), 1, 1))))), (int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY(~ (~ (int(2))), (~ (~ (int(2)))) ^ 0)), 1, 1))) | (int(ivec3(_GLF_IDENTITY(int(2), ~ (~ (int(2)))), 1, 1))))))), _GLF_IDENTITY(int(2), (int(2)) * 1)))), max(int((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) + int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(int(2), (int(2)) * 1)))), _GLF_IDENTITY(int((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) | (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter)))))))))), max(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)), 1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))), ~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) - 0)) * 1), (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) | (2))), (int(2)) - 0)) * 1)) / 1)) | (_GLF_IDENTITY(int(2), (int(2)) * 1)))), 0 ^ (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (int(2)) * 1)) << 0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)), ((int(2))) | 0) * 1)), max(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, (1) - 0))), 1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))), ~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) - 0)) * 1)) | (_GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, int(int(1))))))), 0 ^ (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (int(2)) * 1)) << 0)))))))) + 0))), min(int((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) | (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter)))))))))), max(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)), 1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))), ~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) - 0)) * 1), (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) | (2))), (int(2)) - 0)) * 1)) / 1)) | (_GLF_IDENTITY(int(2), (int(2)) * 1)))), 0 ^ (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (int(2)) * 1)) << 0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)), ((int(2))) | 0) * 1)), max(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, (1) - 0))), 1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))), ~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) - 0)) * 1)) | (_GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, int(int(1))))))), 0 ^ (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (int(2)) * 1)) << 0)))))))) + 0))), _GLF_IDENTITY(int((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) | (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter)))))))))), max(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)), 1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))), ~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) - 0)) * 1), (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) | (2))), (int(2)) - 0)) * 1)) / 1)) | (_GLF_IDENTITY(int(2), (int(2)) * 1)))), 0 ^ (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (int(2)) * 1)) << 0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)), ((int(2))) | 0) * 1)), max(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, (1) - 0))), 1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))), ~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) - 0)) * 1)) | (_GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, int(int(1))))))), 0 ^ (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (int(2)) * 1)) << 0)))))))) + 0))), clamp(int((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) | (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter)))))))))), max(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)), 1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))), ~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) - 0)) * 1), (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) | (2))), (int(2)) - 0)) * 1)) / 1)) | (_GLF_IDENTITY(int(2), (int(2)) * 1)))), 0 ^ (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (int(2)) * 1)) << 0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)), ((int(2))) | 0) * 1)), max(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, (1) - 0))), 1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))), ~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) - 0)) * 1)) | (_GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, int(int(1))))))), 0 ^ (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (int(2)) * 1)) << 0)))))))) + 0))), int((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) | (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter)))))))))), max(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)), 1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))), ~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) - 0)) * 1), (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) | (2))), (int(2)) - 0)) * 1)) / 1)) | (_GLF_IDENTITY(int(2), (int(2)) * 1)))), 0 ^ (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (int(2)) * 1)) << 0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)), ((int(2))) | 0) * 1)), max(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, (1) - 0))), 1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))), ~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) - 0)) * 1)) | (_GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, int(int(1))))))), 0 ^ (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (int(2)) * 1)) << 0)))))))) + 0))), int((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) | (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter)))))))))), max(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)), 1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))), ~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) - 0)) * 1), (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) | (2))), (int(2)) - 0)) * 1)) / 1)) | (_GLF_IDENTITY(int(2), (int(2)) * 1)))), 0 ^ (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (int(2)) * 1)) << 0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)), ((int(2))) | 0) * 1)), max(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, (1) - 0))), 1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))), ~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) - 0)) * 1)) | (_GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, int(int(1))))))), 0 ^ (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (int(2)) * 1)) << 0)))))))) + 0))))))))))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) + (int(2)), ~ (~ (int(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((int(2)), 0 | (_GLF_IDENTITY((int(2)), min((int(2)), (int(2)))))))))))), max(_GLF_IDENTITY((_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) - (0 | 0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, (2) | (2)))) | (-56193 & 0)), (_GLF_IDENTITY(int(2), clamp(int(2), _GLF_IDENTITY(int(2), (int(2)) - 0), int(2)))) * 1), (0 ^ 0) | (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(_GLF_IDENTITY(2, int(ivec4(2, 1, 1, 1)))), (_GLF_IDENTITY(int(_GLF_IDENTITY(2, int(ivec4(2, 1, 1, 1)))), (int(_GLF_IDENTITY(2, int(ivec4(2, 1, 1, 1))))) >> 0)) | (int(_GLF_IDENTITY(2, int(ivec4(2, 1, 1, 1))))))) * 1))))), int(_GLF_IDENTITY(int((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), ~ (~ (int(2)))), 1, 1)), _GLF_IDENTITY((int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY(~ (~ (int(2))), (~ (~ (int(2)))) ^ 0)), 1, 1))) | (int(ivec3(_GLF_IDENTITY(int(2), ~ (~ (int(2)))), 1, 1))), min(_GLF_IDENTITY((int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY(~ (~ (int(2))), (~ (~ (int(2)))) ^ 0)), 1, 1))) | (int(ivec3(_GLF_IDENTITY(int(2), ~ (~ (int(2)))), 1, 1))), min(_GLF_IDENTITY((int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY(~ (~ (int(2))), (~ (~ (int(2)))) ^ 0)), 1, 1))) | (int(ivec3(_GLF_IDENTITY(int(2), ~ (~ (int(2)))), 1, 1))), ~ (~ ((int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY(~ (~ (int(2))), (~ (~ (int(2)))) ^ 0)), 1, 1))) | (int(ivec3(_GLF_IDENTITY(int(2), ~ (~ (int(2)))), 1, 1)))))), (int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY(~ (~ (int(2))), (~ (~ (int(2)))) ^ 0)), 1, 1))) | (int(ivec3(_GLF_IDENTITY(int(2), ~ (~ (int(2)))), 1, 1))))), (int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY(~ (~ (int(2))), (~ (~ (int(2)))) ^ 0)), 1, 1))) | (int(ivec3(_GLF_IDENTITY(int(2), ~ (~ (int(2)))), 1, 1))))))), _GLF_IDENTITY(int(2), (int(2)) * 1)))), max(int((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) + int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(int(2), (int(2)) * 1)))), _GLF_IDENTITY(int((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) | (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter)))))))))), max(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)), 1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))), ~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) - 0)) * 1), (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) | (2))), (int(2)) - 0)) * 1)) / 1)) | (_GLF_IDENTITY(int(2), (int(2)) * 1)))), 0 ^ (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (int(2)) * 1)) << 0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)), ((int(2))) | 0) * 1)), max(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, (1) - 0))), 1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))), ~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) - 0)) * 1)) | (_GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, int(int(1))))))), 0 ^ (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (int(2)) * 1)) << 0)))))))) + 0))), min(int((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) | (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter)))))))))), max(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)), 1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))), ~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) - 0)) * 1), (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) | (2))), (int(2)) - 0)) * 1)) / 1)) | (_GLF_IDENTITY(int(2), (int(2)) * 1)))), 0 ^ (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (int(2)) * 1)) << 0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)), ((int(2))) | 0) * 1)), max(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, (1) - 0))), 1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))), ~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) - 0)) * 1)) | (_GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, int(int(1))))))), 0 ^ (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (int(2)) * 1)) << 0)))))))) + 0))), _GLF_IDENTITY(int((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) | (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter)))))))))), max(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)), 1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))), ~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) - 0)) * 1), (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) | (2))), (int(2)) - 0)) * 1)) / 1)) | (_GLF_IDENTITY(int(2), (int(2)) * 1)))), 0 ^ (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (int(2)) * 1)) << 0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)), ((int(2))) | 0) * 1)), max(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, (1) - 0))), 1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))), ~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) - 0)) * 1)) | (_GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, int(int(1))))))), 0 ^ (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (int(2)) * 1)) << 0)))))))) + 0))), clamp(int((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) | (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter)))))))))), max(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)), 1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))), ~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) - 0)) * 1), (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) | (2))), (int(2)) - 0)) * 1)) / 1)) | (_GLF_IDENTITY(int(2), (int(2)) * 1)))), 0 ^ (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (int(2)) * 1)) << 0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)), ((int(2))) | 0) * 1)), max(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, (1) - 0))), 1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))), ~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) - 0)) * 1)) | (_GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, int(int(1))))))), 0 ^ (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (int(2)) * 1)) << 0)))))))) + 0))), int((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) | (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter)))))))))), max(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)), 1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))), ~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) - 0)) * 1), (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) | (2))), (int(2)) - 0)) * 1)) / 1)) | (_GLF_IDENTITY(int(2), (int(2)) * 1)))), 0 ^ (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (int(2)) * 1)) << 0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)), ((int(2))) | 0) * 1)), max(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, (1) - 0))), 1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))), ~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) - 0)) * 1)) | (_GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, int(int(1))))))), 0 ^ (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (int(2)) * 1)) << 0)))))))) + 0))), int((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) | (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter)))))))))), max(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)), 1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))), ~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) - 0)) * 1), (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) | (2))), (int(2)) - 0)) * 1)) / 1)) | (_GLF_IDENTITY(int(2), (int(2)) * 1)))), 0 ^ (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (int(2)) * 1)) << 0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)), ((int(2))) | 0) * 1)), max(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, (1) - 0))), 1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))), ~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) - 0)) * 1)) | (_GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, int(int(1))))))), 0 ^ (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (int(2)) * 1)) << 0)))))))) + 0))))))))))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) + (int(2)), ~ (~ (int(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((int(2)), 0 | (_GLF_IDENTITY((int(2)), min((int(2)), (int(2)))))))))))), ((_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) - (0 | 0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, (2) | (2)))) | (-56193 & 0)), (_GLF_IDENTITY(int(2), clamp(int(2), _GLF_IDENTITY(int(2), (int(2)) - 0), int(2)))) * 1), (0 ^ 0) | (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(_GLF_IDENTITY(2, int(ivec4(2, 1, 1, 1)))), (_GLF_IDENTITY(int(_GLF_IDENTITY(2, int(ivec4(2, 1, 1, 1)))), (int(_GLF_IDENTITY(2, int(ivec4(2, 1, 1, 1))))) >> 0)) | (int(_GLF_IDENTITY(2, int(ivec4(2, 1, 1, 1))))))) * 1))))), int(_GLF_IDENTITY(int((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), ~ (~ (int(2)))), 1, 1)), _GLF_IDENTITY((int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY(~ (~ (int(2))), (~ (~ (int(2)))) ^ 0)), 1, 1))) | (int(ivec3(_GLF_IDENTITY(int(2), ~ (~ (int(2)))), 1, 1))), min(_GLF_IDENTITY((int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY(~ (~ (int(2))), (~ (~ (int(2)))) ^ 0)), 1, 1))) | (int(ivec3(_GLF_IDENTITY(int(2), ~ (~ (int(2)))), 1, 1))), min(_GLF_IDENTITY((int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY(~ (~ (int(2))), (~ (~ (int(2)))) ^ 0)), 1, 1))) | (int(ivec3(_GLF_IDENTITY(int(2), ~ (~ (int(2)))), 1, 1))), ~ (~ ((int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY(~ (~ (int(2))), (~ (~ (int(2)))) ^ 0)), 1, 1))) | (int(ivec3(_GLF_IDENTITY(int(2), ~ (~ (int(2)))), 1, 1)))))), (int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY(~ (~ (int(2))), (~ (~ (int(2)))) ^ 0)), 1, 1))) | (int(ivec3(_GLF_IDENTITY(int(2), ~ (~ (int(2)))), 1, 1))))), (int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY(~ (~ (int(2))), (~ (~ (int(2)))) ^ 0)), 1, 1))) | (int(ivec3(_GLF_IDENTITY(int(2), ~ (~ (int(2)))), 1, 1))))))), _GLF_IDENTITY(int(2), (int(2)) * 1)))), max(int((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) + int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(int(2), (int(2)) * 1)))), _GLF_IDENTITY(int((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) | (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter)))))))))), max(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)), 1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))), ~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) - 0)) * 1), (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) | (2))), (int(2)) - 0)) * 1)) / 1)) | (_GLF_IDENTITY(int(2), (int(2)) * 1)))), 0 ^ (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (int(2)) * 1)) << 0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)), ((int(2))) | 0) * 1)), max(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, (1) - 0))), 1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))), ~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) - 0)) * 1)) | (_GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, int(int(1))))))), 0 ^ (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (int(2)) * 1)) << 0)))))))) + 0))), min(int((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) | (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter)))))))))), max(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)), 1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))), ~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) - 0)) * 1), (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) | (2))), (int(2)) - 0)) * 1)) / 1)) | (_GLF_IDENTITY(int(2), (int(2)) * 1)))), 0 ^ (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (int(2)) * 1)) << 0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)), ((int(2))) | 0) * 1)), max(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, (1) - 0))), 1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))), ~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) - 0)) * 1)) | (_GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, int(int(1))))))), 0 ^ (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (int(2)) * 1)) << 0)))))))) + 0))), _GLF_IDENTITY(int((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) | (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter)))))))))), max(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)), 1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))), ~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) - 0)) * 1), (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) | (2))), (int(2)) - 0)) * 1)) / 1)) | (_GLF_IDENTITY(int(2), (int(2)) * 1)))), 0 ^ (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (int(2)) * 1)) << 0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)), ((int(2))) | 0) * 1)), max(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, (1) - 0))), 1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))), ~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) - 0)) * 1)) | (_GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, int(int(1))))))), 0 ^ (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (int(2)) * 1)) << 0)))))))) + 0))), clamp(int((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) | (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter)))))))))), max(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)), 1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))), ~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) - 0)) * 1), (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) | (2))), (int(2)) - 0)) * 1)) / 1)) | (_GLF_IDENTITY(int(2), (int(2)) * 1)))), 0 ^ (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (int(2)) * 1)) << 0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)), ((int(2))) | 0) * 1)), max(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, (1) - 0))), 1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))), ~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) - 0)) * 1)) | (_GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, int(int(1))))))), 0 ^ (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (int(2)) * 1)) << 0)))))))) + 0))), int((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) | (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter)))))))))), max(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)), 1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))), ~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) - 0)) * 1), (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) | (2))), (int(2)) - 0)) * 1)) / 1)) | (_GLF_IDENTITY(int(2), (int(2)) * 1)))), 0 ^ (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (int(2)) * 1)) << 0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)), ((int(2))) | 0) * 1)), max(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, (1) - 0))), 1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))), ~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) - 0)) * 1)) | (_GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, int(int(1))))))), 0 ^ (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (int(2)) * 1)) << 0)))))))) + 0))), int((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) | (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter)))))))))), max(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)), 1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))), ~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) - 0)) * 1), (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) | (2))), (int(2)) - 0)) * 1)) / 1)) | (_GLF_IDENTITY(int(2), (int(2)) * 1)))), 0 ^ (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (int(2)) * 1)) << 0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)), ((int(2))) | 0) * 1)), max(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, (1) - 0))), 1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))), ~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) - 0)) * 1)) | (_GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, int(int(1))))))), 0 ^ (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (int(2)) * 1)) << 0)))))))) + 0))))))))))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) + (int(2)), ~ (~ (int(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((int(2)), 0 | (_GLF_IDENTITY((int(2)), min((int(2)), (int(2))))))))))))) | ((_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) - (0 | 0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, (2) | (2)))) | (-56193 & 0)), (_GLF_IDENTITY(int(2), clamp(int(2), _GLF_IDENTITY(int(2), (int(2)) - 0), int(2)))) * 1), (0 ^ 0) | (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(_GLF_IDENTITY(2, int(ivec4(2, 1, 1, 1)))), (_GLF_IDENTITY(int(_GLF_IDENTITY(2, int(ivec4(2, 1, 1, 1)))), (int(_GLF_IDENTITY(2, int(ivec4(2, 1, 1, 1))))) >> 0)) | (int(_GLF_IDENTITY(2, int(ivec4(2, 1, 1, 1))))))) * 1))))), int(_GLF_IDENTITY(int((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), ~ (~ (int(2)))), 1, 1)), _GLF_IDENTITY((int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY(~ (~ (int(2))), (~ (~ (int(2)))) ^ 0)), 1, 1))) | (int(ivec3(_GLF_IDENTITY(int(2), ~ (~ (int(2)))), 1, 1))), min(_GLF_IDENTITY((int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY(~ (~ (int(2))), (~ (~ (int(2)))) ^ 0)), 1, 1))) | (int(ivec3(_GLF_IDENTITY(int(2), ~ (~ (int(2)))), 1, 1))), min(_GLF_IDENTITY((int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY(~ (~ (int(2))), (~ (~ (int(2)))) ^ 0)), 1, 1))) | (int(ivec3(_GLF_IDENTITY(int(2), ~ (~ (int(2)))), 1, 1))), ~ (~ ((int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY(~ (~ (int(2))), (~ (~ (int(2)))) ^ 0)), 1, 1))) | (int(ivec3(_GLF_IDENTITY(int(2), ~ (~ (int(2)))), 1, 1)))))), (int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY(~ (~ (int(2))), (~ (~ (int(2)))) ^ 0)), 1, 1))) | (int(ivec3(_GLF_IDENTITY(int(2), ~ (~ (int(2)))), 1, 1))))), (int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY(~ (~ (int(2))), (~ (~ (int(2)))) ^ 0)), 1, 1))) | (int(ivec3(_GLF_IDENTITY(int(2), ~ (~ (int(2)))), 1, 1))))))), _GLF_IDENTITY(int(2), (int(2)) * 1)))), max(int((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) + int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(int(2), (int(2)) * 1)))), _GLF_IDENTITY(int((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) | (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter)))))))))), max(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)), 1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))), ~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) - 0)) * 1), (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) | (2))), (int(2)) - 0)) * 1)) / 1)) | (_GLF_IDENTITY(int(2), (int(2)) * 1)))), 0 ^ (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (int(2)) * 1)) << 0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)), ((int(2))) | 0) * 1)), max(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, (1) - 0))), 1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))), ~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) - 0)) * 1)) | (_GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, int(int(1))))))), 0 ^ (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (int(2)) * 1)) << 0)))))))) + 0))), min(int((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) | (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter)))))))))), max(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)), 1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))), ~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) - 0)) * 1), (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) | (2))), (int(2)) - 0)) * 1)) / 1)) | (_GLF_IDENTITY(int(2), (int(2)) * 1)))), 0 ^ (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (int(2)) * 1)) << 0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)), ((int(2))) | 0) * 1)), max(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, (1) - 0))), 1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))), ~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) - 0)) * 1)) | (_GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, int(int(1))))))), 0 ^ (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (int(2)) * 1)) << 0)))))))) + 0))), _GLF_IDENTITY(int((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) | (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter)))))))))), max(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)), 1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))), ~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) - 0)) * 1), (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) | (2))), (int(2)) - 0)) * 1)) / 1)) | (_GLF_IDENTITY(int(2), (int(2)) * 1)))), 0 ^ (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (int(2)) * 1)) << 0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)), ((int(2))) | 0) * 1)), max(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, (1) - 0))), 1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))), ~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) - 0)) * 1)) | (_GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, int(int(1))))))), 0 ^ (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (int(2)) * 1)) << 0)))))))) + 0))), clamp(int((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) | (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter)))))))))), max(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)), 1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))), ~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) - 0)) * 1), (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) | (2))), (int(2)) - 0)) * 1)) / 1)) | (_GLF_IDENTITY(int(2), (int(2)) * 1)))), 0 ^ (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (int(2)) * 1)) << 0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)), ((int(2))) | 0) * 1)), max(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, (1) - 0))), 1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))), ~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) - 0)) * 1)) | (_GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, int(int(1))))))), 0 ^ (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (int(2)) * 1)) << 0)))))))) + 0))), int((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) | (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter)))))))))), max(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)), 1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))), ~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) - 0)) * 1), (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) | (2))), (int(2)) - 0)) * 1)) / 1)) | (_GLF_IDENTITY(int(2), (int(2)) * 1)))), 0 ^ (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (int(2)) * 1)) << 0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)), ((int(2))) | 0) * 1)), max(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, (1) - 0))), 1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))), ~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) - 0)) * 1)) | (_GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, int(int(1))))))), 0 ^ (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (int(2)) * 1)) << 0)))))))) + 0))), int((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) | (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter)))))))))), max(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)), 1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))), ~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) - 0)) * 1), (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) | (2))), (int(2)) - 0)) * 1)) / 1)) | (_GLF_IDENTITY(int(2), (int(2)) * 1)))), 0 ^ (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (int(2)) * 1)) << 0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)), ((int(2))) | 0) * 1)), max(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, (1) - 0))), 1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))), ~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) - 0)) * 1)) | (_GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, int(int(1))))))), 0 ^ (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (int(2)) * 1)) << 0)))))))) + 0))))))))))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) + (int(2)), ~ (~ (int(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((int(2)), 0 | (_GLF_IDENTITY((int(2)), min((int(2)), (int(2)))))))))))))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) - (0 | 0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, (2) | (2)))) | (-56193 & 0)), (_GLF_IDENTITY(int(2), clamp(int(2), _GLF_IDENTITY(int(2), (int(2)) - 0), int(2)))) * 1), (0 ^ 0) | (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(_GLF_IDENTITY(2, int(ivec4(2, 1, 1, 1)))), (_GLF_IDENTITY(int(_GLF_IDENTITY(2, int(ivec4(2, 1, 1, 1)))), (int(_GLF_IDENTITY(2, int(ivec4(2, 1, 1, 1))))) >> 0)) | (int(_GLF_IDENTITY(2, int(ivec4(2, 1, 1, 1))))))) * 1))))), int(_GLF_IDENTITY(int((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(2), ~ (~ (int(2)))), 1, 1)), _GLF_IDENTITY((int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY(~ (~ (int(2))), (~ (~ (int(2)))) ^ 0)), 1, 1))) | (int(ivec3(_GLF_IDENTITY(int(2), ~ (~ (int(2)))), 1, 1))), min(_GLF_IDENTITY((int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY(~ (~ (int(2))), (~ (~ (int(2)))) ^ 0)), 1, 1))) | (int(ivec3(_GLF_IDENTITY(int(2), ~ (~ (int(2)))), 1, 1))), min(_GLF_IDENTITY((int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY(~ (~ (int(2))), (~ (~ (int(2)))) ^ 0)), 1, 1))) | (int(ivec3(_GLF_IDENTITY(int(2), ~ (~ (int(2)))), 1, 1))), ~ (~ ((int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY(~ (~ (int(2))), (~ (~ (int(2)))) ^ 0)), 1, 1))) | (int(ivec3(_GLF_IDENTITY(int(2), ~ (~ (int(2)))), 1, 1)))))), (int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY(~ (~ (int(2))), (~ (~ (int(2)))) ^ 0)), 1, 1))) | (int(ivec3(_GLF_IDENTITY(int(2), ~ (~ (int(2)))), 1, 1))))), (int(ivec3(_GLF_IDENTITY(int(2), _GLF_IDENTITY(~ (~ (int(2))), (~ (~ (int(2)))) ^ 0)), 1, 1))) | (int(ivec3(_GLF_IDENTITY(int(2), ~ (~ (int(2)))), 1, 1))))))), _GLF_IDENTITY(int(2), (int(2)) * 1)))), max(int((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) + int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(int(2), (int(2)) * 1)))), _GLF_IDENTITY(int((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) | (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter)))))))))), max(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)), 1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))), ~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) - 0)) * 1), (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) | (2))), (int(2)) - 0)) * 1)) / 1)) | (_GLF_IDENTITY(int(2), (int(2)) * 1)))), 0 ^ (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (int(2)) * 1)) << 0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)), ((int(2))) | 0) * 1)), max(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, (1) - 0))), 1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))), ~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) - 0)) * 1)) | (_GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, int(int(1))))))), 0 ^ (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (int(2)) * 1)) << 0)))))))) + 0))), min(int((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) | (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter)))))))))), max(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)), 1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))), ~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) - 0)) * 1), (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) | (2))), (int(2)) - 0)) * 1)) / 1)) | (_GLF_IDENTITY(int(2), (int(2)) * 1)))), 0 ^ (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (int(2)) * 1)) << 0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)), ((int(2))) | 0) * 1)), max(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, (1) - 0))), 1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))), ~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) - 0)) * 1)) | (_GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, int(int(1))))))), 0 ^ (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (int(2)) * 1)) << 0)))))))) + 0))), _GLF_IDENTITY(int((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) | (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter)))))))))), max(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)), 1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))), ~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) - 0)) * 1), (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) | (2))), (int(2)) - 0)) * 1)) / 1)) | (_GLF_IDENTITY(int(2), (int(2)) * 1)))), 0 ^ (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (int(2)) * 1)) << 0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)), ((int(2))) | 0) * 1)), max(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, (1) - 0))), 1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))), ~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) - 0)) * 1)) | (_GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, int(int(1))))))), 0 ^ (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (int(2)) * 1)) << 0)))))))) + 0))), clamp(int((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) | (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter)))))))))), max(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)), 1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))), ~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) - 0)) * 1), (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) | (2))), (int(2)) - 0)) * 1)) / 1)) | (_GLF_IDENTITY(int(2), (int(2)) * 1)))), 0 ^ (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (int(2)) * 1)) << 0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)), ((int(2))) | 0) * 1)), max(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, (1) - 0))), 1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))), ~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) - 0)) * 1)) | (_GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, int(int(1))))))), 0 ^ (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (int(2)) * 1)) << 0)))))))) + 0))), int((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) | (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter)))))))))), max(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)), 1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))), ~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) - 0)) * 1), (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) | (2))), (int(2)) - 0)) * 1)) / 1)) | (_GLF_IDENTITY(int(2), (int(2)) * 1)))), 0 ^ (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (int(2)) * 1)) << 0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)), ((int(2))) | 0) * 1)), max(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, (1) - 0))), 1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))), ~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) - 0)) * 1)) | (_GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, int(int(1))))))), 0 ^ (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (int(2)) * 1)) << 0)))))))) + 0))), int((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) | (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter)))))))))), max(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)), 1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))), ~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) - 0)) * 1), (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) | (2))), (int(2)) - 0)) * 1)) / 1)) | (_GLF_IDENTITY(int(2), (int(2)) * 1)))), 0 ^ (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (int(2)) * 1)) << 0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)), ((int(2))) | 0) * 1)), max(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, (1) - 0))), 1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))), ~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) - 0)) * 1)) | (_GLF_IDENTITY(int(2), (int(2)) * _GLF_IDENTITY(1, int(int(1))))))), 0 ^ (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), (_GLF_IDENTITY(int(2), (int(2)) * 1)) << 0)))))))) + 0))))))))))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) + (int(2)), ~ (~ (int(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((int(2)), 0 | (_GLF_IDENTITY((int(2)), min((int(2)), (int(2)))))))))))))), _GLF_IDENTITY(((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) | (2))), _GLF_IDENTITY((int(2)) * 1, (_GLF_IDENTITY((int(2)) * 1, 1 * ((int(2)) * 1))) | (_GLF_IDENTITY((int(2)) * 1, int(ivec3(_GLF_IDENTITY((int(2)) * 1, 0 ^ ((int(2)) * 1)), 1, _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), min(~ (0), ~ (0))))))))))))), int(_GLF_IDENTITY(int((_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)), int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1))), (_GLF_IDENTITY(int(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1))), (int(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))) | (int(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))))) - 0))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)), int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1))), (int(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))) - 0))), _GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)), int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, (2) | (2)))) * 1))), (int(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))) - 0))), ~ (~ (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)), int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1))), (int(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))) - _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) >> (0 << _GLF_IDENTITY(int(6), int(6))))) >> 0))))))))))), max(int((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) << 0)) * 1)))), _GLF_IDENTITY(int((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))), clamp(_GLF_IDENTITY(int((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))), 0 ^ (int((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)), (_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1))) ^ 0))))), int((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))), int((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), min(int(2), int(2)))) | (_GLF_IDENTITY(int(2), ~ (~ (int(2)))))), int(2))), _GLF_IDENTITY(int(2), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(int(2), (int(2)) - 0)))))) << 0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1))), int(_GLF_IDENTITY(int((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))), max(int((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, min(2, 2))))) << 0)), (int(2)) << 0)), max((_GLF_IDENTITY(int(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, min(2, 2))))) << 0)), (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) | (0 | 0))) - 0)) << 0)), (_GLF_IDENTITY(int(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, min(2, 2))))) << 0)), (int(2)) << 0)))) * 1)))), int((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))))))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (int(2)))))) << 0, max(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), min(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) | (int(2)))) ^ 0)) | (int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0)), (int(2)) * 1), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) ^ (0 | 0))) * 1))))), int(_GLF_IDENTITY(int(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, clamp(2, 2, 2)))) * 1))), clamp((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, clamp(2, 2, 2)))) * 1))), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, clamp(2, 2, 2)))) * 1))), (true ? (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, clamp(2, 2, 2)))) * 1))) : _GLF_FUZZED(_injected_loop_counter))), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, clamp(2, 2, 2)))) * 1))), max((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, clamp(2, 2, 2)))) * 1))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, clamp(2, 2, 2)))) * 1)))))))), max(int((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), _GLF_IDENTITY(clamp(int(2), int(2), int(2)), ~ (~ (clamp(int(2), int(2), int(2))))))) * 1))), (int(2)) << 0), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2)))) * 1))), (int(2)) << 0)) ^ 0)) * 1)))), int((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) * 1, (false ? _GLF_FUZZED(-17968) : (int(2)) * 1)))))))))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (int(2)))))) << 0, clamp(_GLF_IDENTITY(((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), min(_GLF_IDENTITY(int(2), (int(2)) * 1), _GLF_IDENTITY(int(2), (int(2)) * 1))))), int(_GLF_IDENTITY(int((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))), max(int((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2)))) * 1))), (int(2)) << 0)) * 1)))), int((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) * 1, (false ? _GLF_FUZZED(-17968) : (int(2)) * 1)))))))))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), min(_GLF_IDENTITY(int(2), max(int(2), int(2))), int(2)))) ^ 0)))))) << 0, (((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), min(_GLF_IDENTITY(int(2), (int(2)) * 1), _GLF_IDENTITY(int(2), (int(2)) * 1))))), int(_GLF_IDENTITY(int((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))), max(int((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2)))) * 1))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2)))) * 1))), clamp(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2)))) * 1))), _GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2)))) * 1))), _GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2)))) * 1))))))), _GLF_IDENTITY((int(2)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (int(2)) : _GLF_FUZZED(-21527))) << 0), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2)))) * 1))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2)))) * 1))), clamp(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2)))) * 1))), _GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2)))) * 1))), _GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2)))) * 1))))))), _GLF_IDENTITY((int(2)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (int(2)) : _GLF_FUZZED(-21527))) << 0)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2)))) * 1))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2)))) * 1))), clamp(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2)))) * 1))), _GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2)))) * 1))), _GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2)))) * 1))))))), _GLF_IDENTITY((int(2)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (int(2)) : _GLF_FUZZED(-21527))) << 0))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2)))) * 1))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2)))) * 1))), clamp(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2)))) * 1))), _GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2)))) * 1))), _GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2)))) * 1))))))), _GLF_IDENTITY((int(2)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (int(2)) : _GLF_FUZZED(-21527))) << 0))))))) * 1)))), int((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) * 1, (false ? _GLF_FUZZED(-17968) : (int(2)) * 1))), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) * 1, _GLF_IDENTITY((false ? _GLF_FUZZED(-17968) : (int(2)) * 1), (_GLF_IDENTITY((false ? _GLF_FUZZED(-17968) : (int(2)) * 1), 0 + ((false ? _GLF_FUZZED(-17968) : (int(2)) * 1)))) / 1)))))))))))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (int(2)))))) << 0) / 1), ((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), min(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) | (int(2)))) * 1), _GLF_IDENTITY(int(2), (int(2)) * 1))))), int(_GLF_IDENTITY(int((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))), max(int((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2)))) * 1))), (int(2)) << 0)) * 1)), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2)))) * 1))), (int(2)) << 0)) * 1)), 0 ^ (_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2)))) * 1))), (int(2)) << 0)) * 1)))))))), int((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) * 1, (false ? _GLF_FUZZED(-17968) : (int(2)) * 1)))))))))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (int(2)))))) << 0, ((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), min(_GLF_IDENTITY(int(2), (int(2)) * 1), _GLF_IDENTITY(int(2), (int(2)) * 1))))), int(_GLF_IDENTITY(int((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) * 1, 0 | ((int(2)) * 1)))))), max(int(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2)))) * 1))), (int(2)) << 0)) * 1))), int(_GLF_ZERO(0.0, injectionSwitch.x)) | ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2)))) * 1))), (int(2)) << 0)) * 1)))))), int((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) * 1, (false ? _GLF_FUZZED(-17968) : (int(2)) * 1)))))))))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (int(2)))))) << _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) ^ 0), min(_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) ^ 0), int(int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) ^ 0)))), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) ^ 0))))), (((_GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec3(1, 1, 0))) << _GLF_IDENTITY(int(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) - 0)) ^ 0)), _GLF_IDENTITY(int(2), (int(2)) * 1))), int(_GLF_IDENTITY(int((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))), max(int((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)), (0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x))) | ((int(2)))) << 0)) * 1)))), int((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))))))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (int(2)))))) << 0) ^ 0), ((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) | (2))), (int(2)) * 1))), int(_GLF_IDENTITY(_GLF_IDENTITY(int((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), _GLF_IDENTITY((_GLF_IDENTITY(int(2), (int(2)) * 1)), ((_GLF_IDENTITY(int(2), (int(2)) * 1))) << int(_GLF_ZERO(0.0, injectionSwitch.x))) ^ 0)))), min(int((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) - 0), _GLF_IDENTITY(int(2), (int(2)) * 1)))), int((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))))), max(int((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY((_GLF_IDENTITY(int(2), (int(2)) << 0)) * 1, ((_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, (2) | (2)))) << 0)) * 1) + 0))))), int((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1)))))))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (int(2)))))) << 0))))) : _GLF_FUZZED(_injected_loop_counter)))); _GLF_IDENTITY(_injected_loop_counter ++, 0 + (_injected_loop_counter ++)))
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 0)); _injected_loop_counter --)
            {
             return;
            }
          }
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     else
      {
      }
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    {
    }
   else
    {
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           return;
          }
        }
      }
     else
      {
      }
     return;
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, true && (false))))))), true, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), true && ((injectionSwitch.x < injectionSwitch.y)))))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
      }
    }
   else
    {
    }
   for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(8), int(8))); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      continue;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec3(bvec2(_GLF_DEAD(false), true), true)))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint read = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, (false ? _GLF_FUZZED(-60157) : 2)));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       while(_GLF_WRAPPED_LOOP(false));
       return;
      }
     return;
    }
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_IDENTITY(false, (false) || false))))))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_IDENTITY(false, (false) || false))))))), true, false))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
  {
   subgroupBarrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      continue;
     continue;
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, true))), (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-4522.4559), (injectionSwitch)[_GLF_IDENTITY(1, (1) ^ 0)]), min(vec2(_GLF_FUZZED(-4522.4559), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4522.4559), (injectionSwitch)[1]))), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])))), _GLF_FUZZED(1.8)), bvec2(true, false))).x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
        {
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              return;
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               return;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
              }
            }
           else
            {
            }
          }
        }
      }
     else
      {
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-35.94), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(vec4(48.59, 4.0, -470.540, -9198.3639).g)), bvec2(true, false))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(5.0), _GLF_FUZZED(-728.451)), bvec2(false, false))).y))))
        return;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           return;
          }
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(injectionSwitch.y, 1.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), 1.0, exp(0.0), 0.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), determinant(mat2(0.0, 0.0, 1.0, 0.0)), abs(1.0))), 0.0 + (float(mat4x3(injectionSwitch.y, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, exp(0.0), 0.0, 1.0, 1.0, length(vec4(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(88.47)), float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), bool(true))), 0.0, 0.0)), determinant(mat2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-3.9))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-186.700)), float(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(1.0, 1.0, 1.0)), max(float(vec3(1.0, 1.0, 1.0)), float(vec3(1.0, 1.0, 1.0))))), 1.0, 1.0)), 0.0, 0.0))), 1.0))), bool(true))), 0.0)), abs(1.0)))))))), ! (! (_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(injectionSwitch.y, 1.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), 1.0, exp(0.0), 0.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), determinant(mat2(0.0, 0.0, 1.0, 0.0)), abs(1.0))), 0.0 + (float(mat4x3(injectionSwitch.y, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, exp(0.0), 0.0, 1.0, 1.0, length(vec4(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(88.47)), float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), bool(true))), 0.0, 0.0)), determinant(mat2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-3.9))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-186.700)), float(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(1.0, 1.0, 1.0)), max(float(vec3(1.0, 1.0, 1.0)), float(vec3(1.0, 1.0, 1.0))))), 1.0, 1.0)), 0.0, 0.0))), 1.0))), bool(true))), 0.0)), abs(1.0)))))))), false || (_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(injectionSwitch.y, 1.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), 1.0, exp(0.0), 0.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), determinant(mat2(0.0, 0.0, 1.0, 0.0)), abs(1.0))), 0.0 + (float(mat4x3(injectionSwitch.y, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, exp(0.0), 0.0, 1.0, 1.0, length(vec4(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(88.47)), float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), bool(true))), 0.0, 0.0)), determinant(mat2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-3.9))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-186.700)), float(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(1.0, 1.0, 1.0)), max(float(vec3(1.0, 1.0, 1.0)), float(vec3(1.0, 1.0, 1.0))))), 1.0, 1.0)), 0.0, 0.0))), 1.0))), bool(true))), 0.0)), abs(1.0)))))))), ! (! (_injected_loop_counter != int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(injectionSwitch.y, 1.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), 1.0, exp(0.0), 0.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), determinant(mat2(0.0, 0.0, 1.0, 0.0)), abs(1.0))), 0.0 + (float(mat4x3(injectionSwitch.y, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, exp(0.0), 0.0, 1.0, 1.0, length(vec4(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(88.47)), float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), bool(true))), 0.0, 0.0)), determinant(mat2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-3.9))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-186.700)), float(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(1.0, 1.0, 1.0)), max(float(vec3(1.0, 1.0, 1.0)), float(vec3(1.0, 1.0, 1.0))))), 1.0, 1.0)), 0.0, 0.0))), 1.0))), bool(true)), max(mix(float(_GLF_FUZZED(-186.700)), float(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(1.0, 1.0, 1.0)), max(float(vec3(1.0, 1.0, 1.0)), float(vec3(1.0, 1.0, 1.0))))), 1.0, 1.0)), 0.0, 0.0))), 1.0))), bool(true)), mix(float(_GLF_FUZZED(-186.700)), float(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(1.0, 1.0, 1.0)), max(float(vec3(1.0, 1.0, 1.0)), float(vec3(1.0, 1.0, 1.0))))), 1.0, 1.0)), 0.0, 0.0))), 1.0))), bool(true))))), 0.0)), abs(1.0)))))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(injectionSwitch.y, 1.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), 1.0, exp(0.0), 0.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), determinant(mat2(0.0, 0.0, 1.0, 0.0)), abs(1.0))), 0.0 + (float(mat4x3(injectionSwitch.y, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, exp(0.0), 0.0, 1.0, 1.0, length(vec4(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(88.47)), float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), bool(true))), 0.0, 0.0)), determinant(mat2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-3.9))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-186.700)), float(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(1.0, 1.0, 1.0)), max(float(vec3(1.0, 1.0, 1.0)), float(vec3(1.0, 1.0, 1.0))))), 1.0, 1.0)), 0.0, 0.0))), 1.0))), bool(true))), 0.0)), abs(1.0)))))))), ! (! (_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(injectionSwitch.y, 1.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), 1.0, exp(0.0), 0.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), determinant(mat2(0.0, 0.0, 1.0, 0.0)), abs(1.0))), 0.0 + (float(mat4x3(injectionSwitch.y, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, exp(0.0), 0.0, 1.0, 1.0, length(vec4(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(88.47)), float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), bool(true))), 0.0, 0.0)), determinant(mat2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-3.9))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-186.700)), float(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(1.0, 1.0, 1.0)), max(float(vec3(1.0, 1.0, 1.0)), float(vec3(1.0, 1.0, 1.0))))), 1.0, 1.0)), 0.0, 0.0))), 1.0))), bool(true))), 0.0)), abs(1.0)))))))), false || (_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(injectionSwitch.y, 1.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), 1.0, exp(0.0), 0.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), determinant(mat2(0.0, 0.0, 1.0, 0.0)), abs(1.0))), 0.0 + (float(mat4x3(injectionSwitch.y, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, exp(0.0), 0.0, 1.0, 1.0, length(vec4(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(88.47)), float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), bool(true))), 0.0, 0.0)), determinant(mat2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-3.9))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-186.700)), float(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(1.0, 1.0, 1.0)), max(float(vec3(1.0, 1.0, 1.0)), float(vec3(1.0, 1.0, 1.0))))), 1.0, 1.0)), 0.0, 0.0))), 1.0))), bool(true))), 0.0)), abs(1.0)))))))), ! (! (_injected_loop_counter != int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(injectionSwitch.y, 1.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), 1.0, exp(0.0), 0.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), determinant(mat2(0.0, 0.0, 1.0, 0.0)), abs(1.0))), 0.0 + (float(mat4x3(injectionSwitch.y, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, exp(0.0), 0.0, 1.0, 1.0, length(vec4(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(88.47)), float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), bool(true))), 0.0, 0.0)), determinant(mat2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-3.9))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-186.700)), float(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(1.0, 1.0, 1.0)), max(float(vec3(1.0, 1.0, 1.0)), float(vec3(1.0, 1.0, 1.0))))), 1.0, 1.0)), 0.0, 0.0))), 1.0))), bool(true)), max(mix(float(_GLF_FUZZED(-186.700)), float(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(1.0, 1.0, 1.0)), max(float(vec3(1.0, 1.0, 1.0)), float(vec3(1.0, 1.0, 1.0))))), 1.0, 1.0)), 0.0, 0.0))), 1.0))), bool(true)), mix(float(_GLF_FUZZED(-186.700)), float(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(1.0, 1.0, 1.0)), max(float(vec3(1.0, 1.0, 1.0)), float(vec3(1.0, 1.0, 1.0))))), 1.0, 1.0)), 0.0, 0.0))), 1.0))), bool(true))))), 0.0)), abs(1.0)))))))))))))))), bool(bvec2(_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(injectionSwitch.y, 1.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), 1.0, exp(0.0), 0.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), determinant(mat2(0.0, 0.0, 1.0, 0.0)), abs(1.0))), 0.0 + (float(mat4x3(injectionSwitch.y, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, exp(0.0), 0.0, 1.0, 1.0, length(vec4(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(88.47)), float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), bool(true))), 0.0, 0.0)), determinant(mat2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-3.9))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-186.700)), float(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(1.0, 1.0, 1.0)), max(float(vec3(1.0, 1.0, 1.0)), float(vec3(1.0, 1.0, 1.0))))), 1.0, 1.0)), 0.0, 0.0))), 1.0))), bool(true))), 0.0)), abs(1.0)))))))), ! (! (_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(injectionSwitch.y, 1.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), 1.0, exp(0.0), 0.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), determinant(mat2(0.0, 0.0, 1.0, 0.0)), abs(1.0))), 0.0 + (float(mat4x3(injectionSwitch.y, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, exp(0.0), 0.0, 1.0, 1.0, length(vec4(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(88.47)), float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), bool(true))), 0.0, 0.0)), determinant(mat2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-3.9))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-186.700)), float(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(1.0, 1.0, 1.0)), max(float(vec3(1.0, 1.0, 1.0)), float(vec3(1.0, 1.0, 1.0))))), 1.0, 1.0)), 0.0, 0.0))), 1.0))), bool(true))), 0.0)), abs(1.0)))))))), false || (_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(injectionSwitch.y, 1.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), 1.0, exp(0.0), 0.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), determinant(mat2(0.0, 0.0, 1.0, 0.0)), abs(1.0))), 0.0 + (float(mat4x3(injectionSwitch.y, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, exp(0.0), 0.0, 1.0, 1.0, length(vec4(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(88.47)), float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), bool(true))), 0.0, 0.0)), determinant(mat2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-3.9))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-186.700)), float(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(1.0, 1.0, 1.0)), max(float(vec3(1.0, 1.0, 1.0)), float(vec3(1.0, 1.0, 1.0))))), 1.0, 1.0)), 0.0, 0.0))), 1.0))), bool(true))), 0.0)), abs(1.0)))))))), ! (! (_injected_loop_counter != int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(injectionSwitch.y, 1.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), 1.0, exp(0.0), 0.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), determinant(mat2(0.0, 0.0, 1.0, 0.0)), abs(1.0))), 0.0 + (float(mat4x3(injectionSwitch.y, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, exp(0.0), 0.0, 1.0, 1.0, length(vec4(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(88.47)), float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), bool(true))), 0.0, 0.0)), determinant(mat2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-3.9))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-186.700)), float(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(1.0, 1.0, 1.0)), max(float(vec3(1.0, 1.0, 1.0)), float(vec3(1.0, 1.0, 1.0))))), 1.0, 1.0)), 0.0, 0.0))), 1.0))), bool(true)), max(mix(float(_GLF_FUZZED(-186.700)), float(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(1.0, 1.0, 1.0)), max(float(vec3(1.0, 1.0, 1.0)), float(vec3(1.0, 1.0, 1.0))))), 1.0, 1.0)), 0.0, 0.0))), 1.0))), bool(true)), mix(float(_GLF_FUZZED(-186.700)), float(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(1.0, 1.0, 1.0)), max(float(vec3(1.0, 1.0, 1.0)), float(vec3(1.0, 1.0, 1.0))))), 1.0, 1.0)), 0.0, 0.0))), 1.0))), bool(true))))), 0.0)), abs(1.0)))))))))))))))), false)))) || false)); _injected_loop_counter ++)
          {
           for(int _injected_loop_counter = int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) - vec2(0.0, 0.0)).y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(false, false, false, _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y)))))))) ? _GLF_FUZZED(workgroup_id) : read)), _GLF_IDENTITY(4, int(int(4))), 64, 4);
              }
             else
              {
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, determinant(mat3(1.0, 0.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 1.0, 1.0)), abs(1.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), abs(0.0)), transpose(transpose(mat4x3(injectionSwitch.x, determinant(mat3(1.0, 0.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 1.0, 1.0)), abs(1.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), abs(0.0)))))), (_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, determinant(mat3(1.0, 0.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 1.0, 1.0)), abs(1.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), abs(0.0)), transpose(transpose(mat4x3(injectionSwitch.x, determinant(mat3(1.0, 0.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 1.0, 1.0)), abs(1.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), abs(0.0)))))), max(float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, determinant(mat3(1.0, 0.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 1.0, 1.0)), abs(1.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), abs(0.0)), transpose(transpose(mat4x3(injectionSwitch.x, determinant(mat3(1.0, 0.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 1.0, 1.0)), abs(1.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), abs(0.0)))))), float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, determinant(mat3(1.0, 0.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 1.0, 1.0)), abs(1.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), abs(0.0)), transpose(transpose(mat4x3(injectionSwitch.x, determinant(mat3(1.0, 0.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 1.0, 1.0)), abs(1.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), abs(0.0))))))))) - 0.0)) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 1.0, 1.0))), injectionSwitch.y))) * 1.0)))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             break;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           if(_GLF_DEAD(false))
            return;
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-9.2)), float(injectionSwitch.x), bool(true))))) > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(ldexp(vec2(1.7, -9.2), ivec2(27201, -75868))) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(87.78, -80.37)) : injectionSwitch)))).y))))
        return;
      }
     else
      {
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
      return;
     return;
    }
   for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 for(int _injected_loop_counter = ((0 | 0) >> _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, (false) && true), false), true, true))))), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           return;
          }
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
         if(_GLF_DEAD(false))
          break;
        }
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
