#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), true))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), true))), false, false), true)))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), true))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), true))), false, false), true)))))))))))
        {
        }
       else
        {
         for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) >> 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), mix(float(_GLF_FUZZED((-439.733))), float(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-6471.7698) : injectionSwitch.y)), injectionSwitch.y))), bool(true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), mix(float(_GLF_FUZZED((-439.733))), float(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-6471.7698) : injectionSwitch.y)), injectionSwitch.y))), bool(true))), false || (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), mix(float(_GLF_FUZZED((-439.733))), float(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-6471.7698) : injectionSwitch.y)), injectionSwitch.y))), bool(true)))))), true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), mix(float(_GLF_FUZZED((-439.733))), float(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-6471.7698) : injectionSwitch.y)), injectionSwitch.y))), bool(true)))), true, false), bvec3(bvec3(bvec3((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), mix(float(_GLF_FUZZED((-439.733))), float(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(-6471.7698), (_GLF_FUZZED(-6471.7698)) * 1.0) : injectionSwitch.y)), injectionSwitch.y))), bool(true)))), true, false)))), false))))))))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
            {
            }
           else
            {
             barrier();
            }
          }
         do
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > (0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), (_injected_loop_counter > (0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))) || false)); _injected_loop_counter --)
              {
               barrier();
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, int(int(0))), (_GLF_IDENTITY(_GLF_IDENTITY(0, int(int(0))), 0 ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), ~ (~ (~ (0)))))))), int(int(0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), ~ (~ (~ (0)))))))), int(int(0))))) ^ 0))) / int(_GLF_ONE(1.0, injectionSwitch.y)))) - 0), (_GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, int(int(0))), (_GLF_IDENTITY(_GLF_IDENTITY(0, int(int(0))), 0 ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), ~ (_GLF_IDENTITY(~ (~ (0)), max(_GLF_IDENTITY(~ (~ (0)), (~ (~ (0))) | (_GLF_IDENTITY(~ (~ (0)), ~ (~ (~ (~ (0))))))), ~ (~ (0)))))))))), int(int(0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), ~ (~ (~ (0)))))))), ~ (~ (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), ~ _GLF_IDENTITY((~ _GLF_IDENTITY((~ (0)), ((~ (0))) | ((~ (0))))), ((~ _GLF_IDENTITY((~ (0)), ((~ (0))) | ((~ (0)))))) * 1))))))))), int(int(0))))) ^ 0))) / int(_GLF_ONE(1.0, injectionSwitch.y)))) - 0)) - 0); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), max(_GLF_IDENTITY(int(6), int(6)), _GLF_IDENTITY(int(6), int(6))))), ~ (~ ((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, clamp(6, 6, 6))) - (0 << _GLF_IDENTITY(int(4), int(4))))), (int(6)) << 0)))))))) >> _GLF_IDENTITY(int(6), int(6)))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), max(_GLF_IDENTITY(int(6), int(6)), _GLF_IDENTITY(int(6), int(6))))), ~ (~ ((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), _GLF_IDENTITY(int(6), (int(6)) << 0)))))))) >> _GLF_IDENTITY(int(6), int(6))))))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
            }
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) >> 0))
      {
       barrier();
      }
    }
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) ^ 0u, ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) ^ 0u) >> 0u)), _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), min(~ (subgroup_size), _GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | 0u))))), subgroup_size)), (subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size), (clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)) ^ (0u << _GLF_IDENTITY(uint(4u), uint(4u)))))) >> (0u ^ 0u)), (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), max(_GLF_IDENTITY(~ (~ (subgroup_size)), 0u | (~ (~ (subgroup_size)))), ~ (~ (subgroup_size))))), subgroup_size)), (subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) + 0u))), subgroup_size), (clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)) ^ _GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(uint(4u), uint(4u))) << 0u)), ~ (_GLF_IDENTITY(~ ((0u << _GLF_IDENTITY(uint(4u), uint(4u)))), (~ ((0u << _GLF_IDENTITY(uint(4u), uint(4u))))) << (0u >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), 0u | (_GLF_IDENTITY(uint(1u), max(uint(1u), uint(1u))))))))))))) >> _GLF_IDENTITY((0u ^ 0u), _GLF_IDENTITY(((0u ^ 0u)), min(_GLF_IDENTITY(((0u ^ 0u)), (((0u ^ 0u))) / 1u), ((0u ^ 0u)))) | ((0u ^ 0u))))) ^ 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), mix(vec2((min(injectionSwitch, injectionSwitch))[0], (min(injectionSwitch, injectionSwitch))[1]), vec2(_GLF_FUZZED(-87.86), _GLF_FUZZED(float(-82458))), bvec2(false, false)))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter --)
        {
         do
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             barrier();
            }
           else
            {
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           do
            {
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))
              {
              }
             else
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((0u | 0u), ((0u | 0u)) / (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), uint(0u))), 0u | ((1u << _GLF_IDENTITY(uint(0u), uint(0u))))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) ^ (subgroup_base))) - uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat4x3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))) / 1.0))))) + ((subgroup_local_id + 1) % subgroup_size);
 uint read = _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(59515))))), (_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(59515)))))) / 1), (_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, _GLF_IDENTITY((true ? 0 : _GLF_FUZZED(59515)), ((true ? 0 : _GLF_FUZZED(59515))) >> 0))))) / 1))), (true ? _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(59515))))))) : _GLF_FUZZED((94065))));
 do
  {
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
  }
 while(_GLF_WRAPPED_LOOP(false));
 if((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, _GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((1u), ((1u)) / 1u), ((1u)) | ((1u))) >> 0u)), (uvec3(subgroup_local_id, 0u, _GLF_IDENTITY(1u, _GLF_IDENTITY((1u), ((1u)) | ((1u))) >> 0u))) | uvec3(0u, 0u, 0u)))), subgroup_local_id)), max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (0u << _GLF_IDENTITY(uint(6u), uint(6u)))))) % 2) == 0)
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (0) >> 0)); _injected_loop_counter --)
      {
       switch(_GLF_SWITCH(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) | (0))))
        {
         case 63:
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           do
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               bvec2(false, true);
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         case 0:
         case 53:
         case 23:
         case 75:
         case 89:
         case 76:
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (0 << _GLF_IDENTITY(int(0), int(0))), _GLF_IDENTITY(bool(bvec4(_injected_loop_counter != (0 << _GLF_IDENTITY(int(0), int(0))), true, true, false)), (bool(bvec4(_injected_loop_counter != (0 << _GLF_IDENTITY(int(0), int(0))), true, true, false))) && true))); _injected_loop_counter --)
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 do
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
                    barrier();
                   do
                    {
                     if(_GLF_DEAD(false))
                      {
                       for(int _injected_loop_counter = (1 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0))))))); _GLF_IDENTITY(_injected_loop_counter --, (true ? _injected_loop_counter -- : _GLF_FUZZED(899))))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         do
                          {
                           do
                            {
                             if(_GLF_WRAPPED_IF_FALSE(false))
                              {
                              }
                             else
                              {
                               if(_GLF_DEAD(false))
                                barrier();
                              }
                             barrier();
                            }
                           while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_WRAPPED_LOOP(false))))));
                          }
                         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                        }
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))))));
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))));
                }
              }
            }
           else
            {
            }
          }
         else
          {
          }
         case 28:
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           do
            {
             do
              {
               do
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x < injectionSwitch.y))))
                  {
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                    {
                     do
                      {
                       for(int _injected_loop_counter = (1 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, clamp(0, 0, 0))))); _injected_loop_counter --)
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                       subgroupAll(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) || false))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (_GLF_IDENTITY(bool(bvec3(false, false, false)), false || (bool(bvec3(false, false, false))))) || false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), true && (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))))))) && true), _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))), bool(bvec4((false), true, true, true))) || false)))), false || (! ((! (_GLF_IDENTITY(false, (false) || false))))))))));
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                  }
                 else
                  {
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         else
          {
          }
         case 20:
         case 57:
         case 37:
         if(_GLF_DEAD(false))
          {
           do
            {
             if(_GLF_DEAD(false))
              barrier();
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) + 0u)], 4, 64, 2);
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         break;
         case 43:
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         do
          {
           do
            {
             mat2x4(879.783, 8575.4906, _GLF_IDENTITY(654.663, (true ? 654.663 : _GLF_FUZZED(5637.9482))), -914.051, 0.3, _GLF_IDENTITY(9.7, mix(float(9.7), float(_GLF_FUZZED(1.4)), bool(false))), 903.827, _GLF_IDENTITY(_GLF_IDENTITY(-8.9, (false ? _GLF_FUZZED(2.7) : -8.9)), (true ? -8.9 : _GLF_FUZZED(-1.5))));
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (_GLF_IDENTITY(true && (false), false || (true && (false)))) && true))) && true)));
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))) || (_GLF_IDENTITY(false, (false) && true)))) && true)));
         case 84:
         while(true)
          {
           for(uvec2 _GLF_SWITCH_0_0v[97], _GLF_SWITCH_0_1v, _GLF_SWITCH_0_2v; (ivec3(_GLF_IDENTITY(_GLF_IDENTITY(97176, _GLF_IDENTITY(clamp(_GLF_IDENTITY(97176, (97176) | (97176)), 97176, 97176), min(_GLF_IDENTITY(clamp(_GLF_IDENTITY(97176, (97176) | (97176)), 97176, 97176), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(97176, min(97176, _GLF_IDENTITY(97176, max(97176, 97176)))), (97176) | (97176)), 97176, 97176), _GLF_IDENTITY((clamp(_GLF_IDENTITY(_GLF_IDENTITY(97176, (97176) | _GLF_IDENTITY((97176), ~ (~ ((97176))))), (_GLF_IDENTITY(97176, (97176) | _GLF_IDENTITY((97176), ~ (~ ((97176)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(97176, (97176) | _GLF_IDENTITY((97176), ~ _GLF_IDENTITY((~ ((97176))), (_GLF_IDENTITY((~ ((97176))), (true ? (~ ((97176))) : _GLF_FUZZED(_injected_loop_counter)))) / 1))), int(ivec2(_GLF_IDENTITY(97176, (97176) | _GLF_IDENTITY((97176), ~ (~ ((97176))))), 1))))), 97176, 97176)), int(ivec4((clamp(_GLF_IDENTITY(_GLF_IDENTITY(97176, (97176) | _GLF_IDENTITY((97176), ~ (~ ((97176))))), (_GLF_IDENTITY(97176, (97176) | _GLF_IDENTITY((97176), ~ (~ ((97176)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(97176, (97176) | _GLF_IDENTITY((97176), ~ _GLF_IDENTITY((~ ((97176))), (_GLF_IDENTITY((~ ((97176))), (true ? (~ ((97176))) : _GLF_FUZZED(_injected_loop_counter)))) / 1))), int(ivec2(_GLF_IDENTITY(97176, (97176) | _GLF_IDENTITY((97176), ~ (~ ((97176))))), 1))))), 97176, 97176)), 0, 0, 1))) / (1 | 1))) >> int(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(_GLF_IDENTITY(97176, (_GLF_IDENTITY(97176, min(97176, 97176))) | (97176)), 97176, 97176)))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(97176, (false ? _GLF_FUZZED(-32570) : 97176)), clamp(_GLF_IDENTITY(97176, (97176) | (97176)), 97176, 97176)))), 31340, _GLF_IDENTITY(-68551, _GLF_IDENTITY(_GLF_IDENTITY((-68551) * 1, _GLF_IDENTITY(((-68551) * 1), min(_GLF_IDENTITY(((-68551) * 1), ((_GLF_IDENTITY((-68551), (_GLF_IDENTITY((-68551), min((-68551), _GLF_IDENTITY((-68551), (_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(65.11), _GLF_FUZZED(373.051)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).y))) ? (-68551) : _GLF_FUZZED(-71332)))))) << 0) * 1)) | (_GLF_IDENTITY(((-68551) * 1), (((_GLF_IDENTITY(-68551, (_GLF_IDENTITY(-68551, (-68551) | (-68551))) / 1)) * 1)) | (_GLF_IDENTITY(((-68551) * 1), int(int((_GLF_IDENTITY((-68551) * 1, ~ (~ ((-68551) * 1))))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(-68551, 0 | (_GLF_IDENTITY(-68551, (-68551) >> 0)))) * 1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY(-68551, 0 | (_GLF_IDENTITY(-68551, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-68551, ~ (~ (-68551))), (_GLF_IDENTITY(-68551, (-68551) | 0)) * 1)) >> 0, ((_GLF_IDENTITY(-68551, _GLF_IDENTITY((_GLF_IDENTITY(-68551, _GLF_IDENTITY((-68551) | 0, 1 * ((-68551) | 0)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(5339) : _GLF_IDENTITY((_GLF_IDENTITY(-68551, _GLF_IDENTITY((-68551) | 0, 1 * ((-68551) | 0)))), ((_GLF_IDENTITY(-68551, _GLF_IDENTITY((-68551) | 0, 1 * ((-68551) | 0))))) << 0))) * 1)) >> 0) ^ 0))))) * 1 : _GLF_FUZZED(atomicLoad(_injected_loop_counter, _injected_loop_counter, 95616, _injected_loop_counter))))))) << 0), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY((-68551) * 1, max((-68551) * 1, (-68551) * 1)), (_GLF_IDENTITY((_GLF_IDENTITY(-68551, 0 | (-68551))), max((_GLF_IDENTITY(-68551, 0 | (-68551))), _GLF_IDENTITY((_GLF_IDENTITY(-68551, 0 | (-68551))), (true ? (_GLF_IDENTITY(-68551, 0 | (-68551))) : _GLF_FUZZED(_injected_loop_counter))))) * 1) << 0))))) == ivec3(-32684, -33337, 4816)); -2.0)
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               mat4x2(7.7, 2.1, 3.3, _GLF_IDENTITY(3.4, _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(3.4, (3.4) / 1.0), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, sqrt(_GLF_IDENTITY(1.0, (1.0) * 1.0)), 1.0, 0.0), (true ? mat3(3.4, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, sqrt(1.0), 1.0, 0.0) : _GLF_FUZZED(mat3(_GLF_IDENTITY(-24.74, (false ? _GLF_FUZZED(-2.9) : -24.74)), -25.86, 3.0, -0.7, -124.310, 249.037, 86.73, -6.2, -653.423))))), min(float(_GLF_IDENTITY(mat3(3.4, 1.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2.8)), bool(false)))), 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4(1.0, 1.0, exp(0.0), sin(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0), transpose(transpose(mat4(1.0, 1.0, exp(0.0), sin(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))))), sqrt(1.0), 1.0, 0.0), (true ? mat3(3.4, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, sqrt(1.0), 1.0, 0.0) : _GLF_FUZZED(mat3(-24.74, -25.86, 3.0, -0.7, -124.310, 249.037, 86.73, -6.2, -653.423))))), float(_GLF_IDENTITY(mat3(3.4, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, sqrt(1.0), 1.0, 0.0), (true ? mat3(3.4, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, sqrt(1.0), 1.0, 0.0) : _GLF_FUZZED(mat3(-24.74, -25.86, 3.0, -0.7, -124.310, 249.037, 86.73, -6.2, -653.423))))))), (_GLF_IDENTITY(float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(3.4, (3.4) / 1.0), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, sqrt(_GLF_IDENTITY(1.0, (1.0) * 1.0)), 1.0, 0.0), (true ? _GLF_IDENTITY(mat3(3.4, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, sqrt(1.0), 1.0, 0.0), transpose(transpose(mat3(3.4, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, sqrt(1.0), 1.0, 0.0)))) : _GLF_FUZZED(mat3(_GLF_IDENTITY(-24.74, (false ? _GLF_FUZZED(-2.9) : -24.74)), -25.86, 3.0, -0.7, -124.310, 249.037, 86.73, -6.2, -653.423))))), min(float(_GLF_IDENTITY(mat3(3.4, 1.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2.8)), bool(false)))), 1.0, 1.0, sqrt(1.0), 1.0, 0.0), (true ? mat3(3.4, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, sqrt(1.0), 1.0, 0.0) : _GLF_FUZZED(mat3(-24.74, -25.86, _GLF_IDENTITY(3.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(3.0, float(mat3x2(3.0, 1.0, 1.0, 1.0, 1.0, 1.0))) : _GLF_FUZZED(296.156))), -0.7, -124.310, 249.037, 86.73, -6.2, -653.423))))), float(_GLF_IDENTITY(mat3(3.4, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, sqrt(1.0), 1.0, 0.0), (true ? mat3(3.4, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, sqrt(1.0), 1.0, 0.0) : _GLF_FUZZED(mat3(-24.74, -25.86, 3.0, -0.7, -124.310, 249.037, 86.73, -6.2, -653.423)))))))) + 0.0)), -1.7, -58.78, 357.219, -7502.1804);
              }
             else
              {
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-9.3, 4362.5592)))) : _GLF_FUZZED(vec2(3.4, -373.602)))).y, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false) || (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (true ? _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-9.3, _GLF_IDENTITY(4362.5592, min(_GLF_IDENTITY(4362.5592, mix(float(_GLF_FUZZED(6.8)), float(_GLF_IDENTITY(4362.5592, (4362.5592) + 0.0)), bool(true))), 4362.5592)))))) : _GLF_IDENTITY(_GLF_FUZZED(vec2(3.4, -373.602)), max(_GLF_IDENTITY(_GLF_FUZZED(vec2(3.4, -373.602)), min(_GLF_FUZZED(vec2(3.4, -373.602)), _GLF_IDENTITY(_GLF_FUZZED(vec2(_GLF_IDENTITY(3.4, clamp(3.4, 3.4, 3.4)), -373.602)), vec2(1.0, 1.0) * (_GLF_FUZZED(vec2(3.4, -373.602)))))), _GLF_FUZZED(vec2(3.4, -373.602)))))).y))))))
              barrier();
             while(lessThan(_GLF_IDENTITY(vec4(370.126, -6.2, 972.285, _GLF_IDENTITY(-3705.3449, max(_GLF_IDENTITY(-3705.3449, clamp(_GLF_IDENTITY(-3705.3449, min(-3705.3449, _GLF_IDENTITY(-3705.3449, (-3705.3449) / 1.0))), -3705.3449, _GLF_IDENTITY(-3705.3449, 1.0 * (-3705.3449)))), _GLF_IDENTITY(-3705.3449, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-7.4)), float(_GLF_IDENTITY(-3705.3449, mix(float(_GLF_FUZZED(86.87)), float(-3705.3449), bool(true)))), bool(true)), mix(float(mix(float(_GLF_FUZZED(-7.4)), float(_GLF_IDENTITY(-3705.3449, mix(float(_GLF_FUZZED(86.87)), float(-3705.3449), bool(true)))), bool(true))), float(_GLF_FUZZED(-261.646)), bool(false))))))), clamp(vec4(_GLF_IDENTITY(370.126, 0.0 + (370.126)), _GLF_IDENTITY(_GLF_IDENTITY(-6.2, (-6.2) / 1.0), min(_GLF_IDENTITY(-6.2, (-6.2) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(-6.2, (-6.2) / 1.0), mix(float(_GLF_IDENTITY(-6.2, (-6.2) / 1.0)), float(_GLF_FUZZED(-2.9)), bool(false))))), _GLF_IDENTITY(972.285, (972.285) - 0.0), _GLF_IDENTITY(-3705.3449, clamp(-3705.3449, -3705.3449, -3705.3449))), vec4(_GLF_IDENTITY(370.126, (_GLF_IDENTITY(370.126, min(_GLF_IDENTITY(370.126, (370.126) / 1.0), 370.126))) - 0.0), -6.2, _GLF_IDENTITY(972.285, min(972.285, 972.285)), _GLF_IDENTITY(-3705.3449, max(-3705.3449, -3705.3449))), vec4(_GLF_IDENTITY(370.126, _GLF_IDENTITY((370.126) / 1.0, (_GLF_IDENTITY((370.126), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(-5.5) : (370.126))) / 1.0) + 0.0)), -6.2, 972.285, -3705.3449))), vec4(-469.864, 171.836, -7848.5889, -831.178)).r)
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             ;
             do
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                        {
                         uvec4(23232u, 46490u, _GLF_IDENTITY(69132u, ~ (_GLF_IDENTITY(~ (69132u), 0u + (_GLF_IDENTITY(~ (69132u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(~ (69132u), (_GLF_IDENTITY(~ (69132u), clamp(~ (69132u), ~ (69132u), ~ (69132u)))) - 0u), _GLF_IDENTITY((true ? ~ (69132u) : _GLF_FUZZED(_GLF_IDENTITY(read, clamp(read, read, _GLF_IDENTITY(_GLF_IDENTITY(read, min(read, read)), max(_GLF_IDENTITY(read, min(read, read)), _GLF_IDENTITY(_GLF_IDENTITY(read, min(read, read)), (_GLF_IDENTITY(read, min(read, read))) << 0u))))))), clamp((true ? ~ (69132u) : _GLF_FUZZED(read)), (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), (! (_GLF_IDENTITY(true, ! (! (true))))) && true))) ? ~ (69132u) : _GLF_FUZZED(read)), (true ? ~ (69132u) : _GLF_FUZZED(read))))) : _GLF_FUZZED(subgroup_base))))))), 14211u);
                        }
                      }
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   else
                    {
                    }
                  }
                 else
                  {
                  }
                }
               else
                {
                }
              }
             while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))));
            }
           bool _GLF_SWITCH_0_3v[76], _GLF_SWITCH_0_4v, _GLF_SWITCH_0_5v;
          }
         default:
         1;
        }
      }
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         do
          {
           do
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x), clamp(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(4718.5317, 8.6)))))).x), float(injectionSwitch.x), float(injectionSwitch.x)))), max(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))), (true ? injectionSwitch : _GLF_FUZZED(vec2(4718.5317, 8.6)))))).x), float(injectionSwitch.x), float(injectionSwitch.x)))), float(mat4x3(_GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))), (true ? injectionSwitch : _GLF_FUZZED(vec2(4718.5317, 8.6)))))).x), float(injectionSwitch.x), float(injectionSwitch.x)))), max(float(_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))), (true ? injectionSwitch : _GLF_FUZZED(vec2(4718.5317, 8.6)))))).x), float(injectionSwitch.x), float(injectionSwitch.x)))), float(_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))), (true ? injectionSwitch : _GLF_FUZZED(vec2(4718.5317, 8.6)))))).x), float(injectionSwitch.x), float(injectionSwitch.x)))))), 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), (false ? _GLF_FUZZED(5510.7227) : float(_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(4718.5317, 8.6)))))).x), float(injectionSwitch.x), float(injectionSwitch.x)))))), float(_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(vec2(4718.5317, 8.6))), vec2(mat3x4((true ? injectionSwitch : _GLF_FUZZED(vec2(4718.5317, 8.6))), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat2(cos(0.0), 0.0, 0.0, 1.0)), cos(length(0.0)), 0.0)))))).x), float(injectionSwitch.x), float(injectionSwitch.x))))))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-36.27)), vec2(_GLF_FUZZED(-7029.4163), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))))), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), false || (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))), (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), false || (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))) || false))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))), bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), ! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(dot(vec4(4.5, 8.0, -7954.3402, 5771.5047), vec4(6103.7807, -60.27, -228.123, -76.76))) : injectionSwitch.y)), _GLF_IDENTITY(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))), (false ? _GLF_FUZZED(2.9) : max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))))))))) || false)))) && true)))));
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   else
    {
    }
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
    }
   else
    {
     switch(_GLF_IDENTITY(_GLF_SWITCH(_GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (0)), _GLF_IDENTITY((false ? _GLF_FUZZED(-67216) : _GLF_IDENTITY(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, 0))) | 0) | (_GLF_IDENTITY(0, int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, int(int(0))), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (0) >> 0)) / 1, int(int((_GLF_IDENTITY(0, (0) >> 0)) / 1)))), int(_GLF_IDENTITY(int(0), clamp(int(0), int(0), int(0))))), 0, 1, 1))), 0, 1, 1)))))), min(_GLF_IDENTITY((false ? _GLF_FUZZED(-67216) : _GLF_IDENTITY(0, _GLF_IDENTITY(0, (0) - 0) | (_GLF_IDENTITY(0, int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, int(int(0))), int(ivec4(_GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), (true ? int(int(0)) : _GLF_FUZZED(69807)))), 0, 1, 1))), 0, 1, 1)))))), (_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(-67216), (_GLF_FUZZED(-67216)) >> 0) : _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, int(int(0))), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), int(int(0))), 0, 1, 1)), 0 ^ (_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), int(int(0))), 0, 1, 1)), (true ? int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), int(int(0))), 0, 1, 1)) : _GLF_IDENTITY(_GLF_FUZZED(78649), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(_GLF_FUZZED(78649), max(_GLF_FUZZED(78649), _GLF_FUZZED(78649))), 1, 0, 1)), clamp(int(ivec4(_GLF_IDENTITY(_GLF_FUZZED(78649), max(_GLF_FUZZED(78649), _GLF_FUZZED(78649))), 1, 0, 1)), int(ivec4(_GLF_IDENTITY(_GLF_FUZZED(78649), max(_GLF_FUZZED(78649), _GLF_FUZZED(78649))), 1, 0, 1)), int(ivec4(_GLF_IDENTITY(_GLF_FUZZED(78649), max(_GLF_FUZZED(78649), _GLF_FUZZED(78649))), 1, 0, 1)))))))))), 0, 1, 1)))))), _GLF_IDENTITY(((_GLF_IDENTITY(false ? _GLF_FUZZED(-67216) : _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, _GLF_IDENTITY((true ? 0 : _GLF_FUZZED(80205)), max((true ? 0 : _GLF_FUZZED(80205)), (true ? 0 : _GLF_FUZZED(80205))))))), int(_GLF_IDENTITY(int(0), clamp(int(0), int(0), int(0))))), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, int(int(0))), ~ (~ (_GLF_IDENTITY(0, int(int(0)))))), 0, _GLF_IDENTITY(1, 0 | (1)), 1)), _GLF_IDENTITY(max(int(ivec4(_GLF_IDENTITY(0, int(int(0))), 0, 1, 1)), int(ivec4(_GLF_IDENTITY(0, int(int(0))), 0, 1, 1))), (true ? max(int(ivec4(_GLF_IDENTITY(0, int(int(0))), 0, 1, 1)), int(ivec4(_GLF_IDENTITY(0, int(_GLF_IDENTITY(int(0), (false ? _GLF_FUZZED(3555) : int(0))))), 0, 1, 1))) : _GLF_FUZZED(-58761))))), 0, 1, 1))))), max(false ? _GLF_FUZZED(-67216) : _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, _GLF_IDENTITY((true ? 0 : _GLF_FUZZED(80205)), max(_GLF_IDENTITY((true ? 0 : _GLF_FUZZED(80205)), (_GLF_IDENTITY((true ? 0 : _GLF_FUZZED(80205)), max((true ? 0 : _GLF_FUZZED(80205)), (true ? 0 : _GLF_FUZZED(80205))))) / ((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), int(ivec2(int(6), 1))))) >> _GLF_IDENTITY(int(6), int(6)))), (true ? 0 : _GLF_FUZZED(80205))))))), int(_GLF_IDENTITY(int(0), clamp(int(0), int(0), int(0))))), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, int(int(0))), 0, _GLF_IDENTITY(1, 0 | (1)), 1)), _GLF_IDENTITY(max(int(ivec4(_GLF_IDENTITY(0, int(int(0))), 0, 1, _GLF_IDENTITY(1, (1) | (1)))), int(ivec4(_GLF_IDENTITY(0, int(int(0))), 0, 1, 1))), (true ? max(int(ivec4(_GLF_IDENTITY(0, int(int(0))), 0, 1, 1)), int(ivec4(_GLF_IDENTITY(0, int(int(0))), 0, 1, 1))) : _GLF_FUZZED(-58761))))), 0, 1, _GLF_IDENTITY(1, max(1, 1))))))), false ? _GLF_FUZZED(-67216) : _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, _GLF_IDENTITY((true ? 0 : _GLF_FUZZED(80205)), max((true ? 0 : _GLF_FUZZED(80205)), (true ? 0 : _GLF_FUZZED(80205))))))), int(_GLF_IDENTITY(int(0), clamp(int(0), int(0), int(0))))), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, int(int(0))), 0, _GLF_IDENTITY(1, 0 | (1)), 1)), _GLF_IDENTITY(max(int(ivec4(_GLF_IDENTITY(0, int(int(0))), 0, 1, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, min(1, 1))), (true ? ~ (_GLF_IDENTITY(1, min(1, 1))) : _GLF_FUZZED(3113))))))), int(ivec4(_GLF_IDENTITY(0, int(int(0))), 0, 1, 1))), (true ? max(int(ivec4(_GLF_IDENTITY(0, int(_GLF_IDENTITY(int(0), int(int(int(0)))))), 0, 1, 1)), int(ivec4(_GLF_IDENTITY(0, int(int(0))), 0, 1, 1))) : _GLF_FUZZED(-58761))))), 0, 1, 1))))))))) / 1, 0 + (((_GLF_IDENTITY(false ? _GLF_FUZZED(-67216) : _GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(true ? 0 : _GLF_FUZZED(80205), ~ (_GLF_IDENTITY(~ (true ? 0 : _GLF_FUZZED(80205)), (~ (true ? 0 : _GLF_FUZZED(80205))) - 0)))), max((true ? 0 : _GLF_FUZZED(80205)), (true ? 0 : _GLF_FUZZED(80205))))))), int(_GLF_IDENTITY(int(0), clamp(int(0), int(0), int(0))))), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, int(int(0))), 0, _GLF_IDENTITY(1, 0 | (1)), 1)), _GLF_IDENTITY(max(int(ivec4(_GLF_IDENTITY(0, int(int(0))), 0, 1, 1)), int(ivec4(_GLF_IDENTITY(0, int(int(0))), 0, 1, 1))), (true ? max(int(ivec4(_GLF_IDENTITY(0, int(int(_GLF_IDENTITY(0, (0) ^ 0)))), 0, 1, 1)), int(ivec4(_GLF_IDENTITY(0, int(int(0))), 0, 1, 1))) : _GLF_FUZZED(-58761))))), 0, 1, 1))))), max(_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(true ? 0 : _GLF_FUZZED(80205), ~ (_GLF_IDENTITY(~ (true ? 0 : _GLF_FUZZED(80205)), (~ (true ? 0 : _GLF_FUZZED(80205))) - 0)))), max((true ? 0 : _GLF_FUZZED(80205)), (true ? 0 : _GLF_FUZZED(80205))))))), int(_GLF_IDENTITY(int(0), clamp(int(0), int(0), int(0))))), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, int(int(0))), 0, _GLF_IDENTITY(1, 0 | (1)), 1)), _GLF_IDENTITY(max(int(ivec4(_GLF_IDENTITY(0, int(int(0))), 0, 1, 1)), int(ivec4(_GLF_IDENTITY(0, int(int(0))), 0, 1, 1))), (true ? max(int(ivec4(_GLF_IDENTITY(0, int(int(_GLF_IDENTITY(0, (0) ^ 0)))), 0, 1, 1)), int(ivec4(_GLF_IDENTITY(0, int(int(0))), 0, 1, 1))) : _GLF_FUZZED(-58761))))), 0, 1, 1))))), _GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(true ? 0 : _GLF_FUZZED(80205), ~ (_GLF_IDENTITY(~ (true ? 0 : _GLF_FUZZED(80205)), (~ (true ? 0 : _GLF_FUZZED(80205))) - 0)))), max((true ? 0 : _GLF_FUZZED(80205)), (true ? 0 : _GLF_FUZZED(80205))))))), int(_GLF_IDENTITY(int(0), clamp(int(0), int(0), int(0))))), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, int(int(0))), 0, _GLF_IDENTITY(1, 0 | (1)), 1)), _GLF_IDENTITY(max(int(ivec4(_GLF_IDENTITY(0, int(int(0))), 0, 1, 1)), int(ivec4(_GLF_IDENTITY(0, int(int(0))), 0, 1, 1))), (true ? max(int(ivec4(_GLF_IDENTITY(0, int(int(_GLF_IDENTITY(0, (0) ^ 0)))), 0, 1, 1)), int(ivec4(_GLF_IDENTITY(0, int(int(0))), 0, 1, 1))) : _GLF_FUZZED(-58761))))), 0, 1, 1))))), (_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(true ? 0 : _GLF_FUZZED(80205), ~ (_GLF_IDENTITY(~ (true ? 0 : _GLF_FUZZED(80205)), (~ (true ? 0 : _GLF_FUZZED(80205))) - 0)))), max((true ? 0 : _GLF_FUZZED(80205)), (true ? 0 : _GLF_FUZZED(80205))))))), int(_GLF_IDENTITY(int(0), clamp(int(0), int(0), int(0))))), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, int(int(0))), 0, _GLF_IDENTITY(1, 0 | (1)), 1)), _GLF_IDENTITY(max(int(ivec4(_GLF_IDENTITY(0, int(int(0))), 0, 1, 1)), int(ivec4(_GLF_IDENTITY(0, int(int(0))), 0, 1, 1))), (true ? max(int(ivec4(_GLF_IDENTITY(0, int(int(_GLF_IDENTITY(0, (0) ^ 0)))), 0, 1, 1)), int(ivec4(_GLF_IDENTITY(0, int(int(0))), 0, 1, 1))) : _GLF_FUZZED(-58761))))), 0, 1, 1)))))) >> 0))), max(false ? _GLF_FUZZED(-67216) : _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, _GLF_IDENTITY((true ? 0 : _GLF_FUZZED(80205)), max((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) ? 0 : _GLF_FUZZED(80205)), (true ? 0 : _GLF_FUZZED(80205))))))), int(_GLF_IDENTITY(int(0), clamp(int(0), int(0), int(0))))), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, int(int(0))), 0, _GLF_IDENTITY(1, 0 | (1)), 1)), _GLF_IDENTITY(max(int(ivec4(_GLF_IDENTITY(0, int(int(0))), 0, 1, 1)), int(ivec4(_GLF_IDENTITY(0, int(int(0))), 0, 1, 1))), (true ? max(int(ivec4(_GLF_IDENTITY(0, int(int(0))), 0, 1, 1)), int(ivec4(_GLF_IDENTITY(0, int(int(0))), 0, 1, 1))) : _GLF_FUZZED(-58761))))), 0, 1, 1))))), false ? _GLF_FUZZED(-67216) : _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) / 1)) | (_GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY((true ? 0 : _GLF_IDENTITY(_GLF_FUZZED(80205), ~ (~ (_GLF_FUZZED(80205))))), max((true ? 0 : _GLF_IDENTITY(_GLF_FUZZED(80205), ~ (~ (_GLF_FUZZED(80205))))), (true ? 0 : _GLF_IDENTITY(_GLF_FUZZED(80205), ~ (~ (_GLF_FUZZED(80205))))))), max((true ? 0 : _GLF_FUZZED(80205)), (true ? 0 : _GLF_FUZZED(80205))))))), int(_GLF_IDENTITY(int(0), clamp(int(0), int(0), int(0))))), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, int(int(0))), 0, _GLF_IDENTITY(1, 0 | (1)), 1)), _GLF_IDENTITY(max(int(ivec4(_GLF_IDENTITY(0, int(int(0))), 0, 1, 1)), int(ivec4(_GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), (int(int(_GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, 0 ^ (0))))))) | (_GLF_IDENTITY(int(int(0)), (int(int(0))) | 0)))), 0, 1, 1))), (true ? max(int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, int(int(0))), 0, 1, 1), ivec4(1, 1, 1, 1) * (ivec4(_GLF_IDENTITY(0, int(int(0))), 0, 1, 1)))), int(ivec4(_GLF_IDENTITY(0, int(int(0))), 0, 1, 1))) : _GLF_FUZZED(-58761))))), 0, 1, 1))))))))) / 1)))) ^ 0), _GLF_IDENTITY((false ? _GLF_FUZZED(-67216) : _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, int(int(0))), int(ivec4(_GLF_IDENTITY(0, int(int(_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, (false ? _GLF_FUZZED(mix(56746, 3150, true)) : 0)) : _GLF_FUZZED(-94107)))))), 0, 1, 1))), 0, 1, 1)))))), ((false ? _GLF_FUZZED(-67216) : _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, int(int(0))), (_GLF_IDENTITY(0, int(int(0)))) - 0), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, int(int(0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, int(int(0))), (_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), (_GLF_IDENTITY(int(int(0)), min(int(int(0)), int(int(0))))) | (int(int(0))))), (true ? _GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), (_GLF_IDENTITY(int(int(0)), int(ivec2(int(int(0)), 0)))) | (int(int(0))))) : _GLF_FUZZED(21670)))) << 0), (_GLF_IDENTITY(_GLF_IDENTITY(0, int(int(0))), (_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), (_GLF_IDENTITY(int(int(0)), min(int(int(0)), int(int(0))))) | (int(int(0))))), (true ? _GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), (_GLF_IDENTITY(int(int(0)), int(ivec2(int(int(0)), 0)))) | (int(int(0))))) : _GLF_FUZZED(21670)))) << 0)) << (0 | 0))) | (_GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), (int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0) + (int(int(0))))))), _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | _GLF_IDENTITY((0), (true ? _GLF_IDENTITY((0), min((0), (0))) : _GLF_FUZZED(31232)))), 0, _GLF_IDENTITY(0, ~ (~ (0))))), 1, 1))), 0, 1, 1))))))) | 0))))), ~ (_GLF_IDENTITY(~ (_GLF_SWITCH(_GLF_IDENTITY(0, 0 | (0)))), (~ _GLF_IDENTITY((_GLF_SWITCH(_GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY(0 | (0), (0 | (0)) << 0), _GLF_IDENTITY(0, min(0, 0)) + (_GLF_IDENTITY(0 | (0), (0 | (0)) << 0)))))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_SWITCH(_GLF_IDENTITY(0, 0 | (0))), 0 | (_GLF_SWITCH(_GLF_IDENTITY(0, 0 | (0))))), (false ? _GLF_FUZZED(ivec2(-37561, -6212).x) : _GLF_SWITCH(_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY((0), (false ? _GLF_FUZZED(21437) : (0))) + 0, max(_GLF_IDENTITY((0), (false ? _GLF_FUZZED(21437) : (0))) + 0, _GLF_IDENTITY((0), (false ? _GLF_FUZZED(21437) : (0))) + 0))) | (0)), int(ivec2(_GLF_IDENTITY(0, _GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((0), int(_GLF_IDENTITY(ivec2((0), 0), (ivec2((0), 0)) - ivec2(0, 0)))))))) | (0)), 0)))))))), (((_GLF_IDENTITY(_GLF_SWITCH(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), 0 | _GLF_IDENTITY((0), ((0)) >> 0))), (false ? _GLF_FUZZED(ivec2(-37561, -6212).x) : _GLF_SWITCH(_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(0, (0) + 0) | (0)), int(ivec2(_GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), min(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), _GLF_IDENTITY((_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((0), min((0), (0)))))), ((_GLF_IDENTITY(0, ~ (~ (0))))) + _GLF_IDENTITY(0, max(0, 0))) / 1))), _GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ _GLF_IDENTITY((0), ((0)) + 0)), min(_GLF_IDENTITY((~ _GLF_IDENTITY((0), ((0)) + 0)), ~ (~ (_GLF_IDENTITY((~ _GLF_IDENTITY((0), ((0)) + 0)), (false ? _GLF_FUZZED(92467) : (~ _GLF_IDENTITY((0), ((0)) + 0))))))), (~ _GLF_IDENTITY((0), ((0)) + 0))))))))) | (0), 0 | (_GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), min(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), _GLF_IDENTITY((_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((0), min((0), (0)))))), ((_GLF_IDENTITY(0, ~ (~ (0))))) + _GLF_IDENTITY(0, max(0, 0))) / 1))), _GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ _GLF_IDENTITY((0), ((0)) + 0)), min(_GLF_IDENTITY((~ _GLF_IDENTITY((0), ((0)) + 0)), ~ (~ (_GLF_IDENTITY((~ _GLF_IDENTITY((0), ((0)) + 0)), (false ? _GLF_FUZZED(92467) : (~ _GLF_IDENTITY((0), ((0)) + 0))))))), (~ _GLF_IDENTITY((0), ((0)) + 0))))))))) | (0)))), 0))))))))) | ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_SWITCH(_GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (0)), (_GLF_IDENTITY(0, 0 | (0))) / int(_GLF_ONE(1.0, injectionSwitch.y)))), (false ? _GLF_FUZZED(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(-37561, (-37561) ^ 0), -6212), (ivec2(-37561, _GLF_IDENTITY(-6212, (-6212) >> 0))) << ivec2(_GLF_IDENTITY(0, 1 * (_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, (0) | (0)), 0)))), 0)).x) : _GLF_SWITCH(_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(0, (0) + 0) | (0)), int(ivec2(_GLF_IDENTITY(0, _GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), (_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), min(~ (0), _GLF_IDENTITY(~ (0), 0 | (~ (0)))))))) / 1))) | (0)), 0))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-97868) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_SWITCH(_GLF_IDENTITY(0, 0 | (0))), (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(-37561, -6212), (ivec2(-37561, -6212)) << ivec2(0, 0)), max(_GLF_IDENTITY(ivec2(-37561, -6212), (ivec2(-37561, -6212)) << ivec2(0, 0)), _GLF_IDENTITY(_GLF_IDENTITY(ivec2(-37561, -6212), (ivec2(-37561, -6212)) << ivec2(0, 0)), ivec2(0, 0) + (_GLF_IDENTITY(ivec2(-37561, -6212), (ivec2(-37561, -6212)) << ivec2(0, 0)))))).x) : _GLF_SWITCH(_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(0, _GLF_IDENTITY((0), clamp((0), (0), (0))) + 0) | (0)), int(ivec2(_GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, min(0, 0)))), 0 + (_GLF_IDENTITY(0, ~ (~ (0))))) | (0)), 0))))))), int(ivec4((_GLF_IDENTITY(_GLF_SWITCH(_GLF_IDENTITY(0, 0 | (0))), (false ? _GLF_FUZZED(_GLF_IDENTITY(ivec2(-37561, -6212), (ivec2(-37561, -6212)) << ivec2(0, 0)).x) : _GLF_SWITCH(_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(0, (0) + 0) | (_GLF_IDENTITY(0, max(0, 0)))), int(ivec2(_GLF_IDENTITY(0, _GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, ~ (~ (0))))) | (0)), 0))))))), 0, 1, 1)))))))) / 1)) - int(_GLF_ZERO(0.0, injectionSwitch.x))))))
      {
       case 30:
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         for(int _injected_loop_counter = (_GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(8076) : 1)) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (true ? _GLF_IDENTITY(_GLF_IDENTITY(0, 0 | _GLF_IDENTITY((0), ((0)) | 0)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) + 0)) | (0)), 0 | (0))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) + 0)) | (0)), 0 | (0))), min((_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) + 0)) | (0)), 0 | (0))), (_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) + 0)) | (0)), 0 | (0)))))) | 0) + 0) : _GLF_FUZZED(_injected_loop_counter)))), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, int(ivec4(_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec3(0, 1, 1), ivec3(0, 0, 0) | (ivec3(0, 1, 1))))), 0, (0 ^ 1), ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (true ? int(4) : _GLF_FUZZED(_injected_loop_counter))))) >> _GLF_IDENTITY(int(4), int(4)))))))) : _GLF_FUZZED(_injected_loop_counter)))), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, 0 | (0)) : _GLF_FUZZED(_injected_loop_counter)))), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, 0 | (0)) : _GLF_FUZZED(_injected_loop_counter)))), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, 0 | (0)) : _GLF_FUZZED(_injected_loop_counter)))), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, 0 | (0)) : _GLF_FUZZED(_injected_loop_counter)))), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, 0 | (0)) : _GLF_FUZZED(_injected_loop_counter)))), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)) && (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)))) && true)))))))))); _injected_loop_counter --)
            {
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), bool(bvec4(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true))))) || false)), false, false, _GLF_IDENTITY(false, (false) && true)))))))
              {
               bvec3(bvec2(_GLF_IDENTITY(true, false || (true)), true), false);
              }
             else
              {
              }
            }
          }
        }
       else
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
          }
        }
       case 0:
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)) > 0); _injected_loop_counter --)
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                }
              }
            }
          }
         else
          {
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       case 51:
       case 19:
       case 41:
       case 8:
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 ^ 0) & 1)); _injected_loop_counter ++)
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
          }
        }
       case 14:
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
        {
        }
       else
        {
         subgroupAll(false);
        }
       case 29:
       case 43:
       if(_GLF_DEAD(false))
        barrier();
       case 4:
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-127.840)), bool(false)), (mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-127.840)), bool(false))) + log(1.0))) : _GLF_FUZZED(-7477.5456))))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-127.840)), bool(false)), (mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-127.840)), bool(false))) + log(1.0))) : _GLF_FUZZED(-7477.5456))))), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-127.840)), bool(false)), (mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-127.840)), bool(false))) + log(1.0))) : _GLF_FUZZED(-7477.5456))))), false, true, true)))) || false)))
              {
               if(_GLF_DEAD(false))
                barrier();
               for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                  {
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
                    {
                    }
                   else
                    {
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (true ? mat2(1.0) * (injectionSwitch) : _GLF_FUZZED(vec2(-4.5, 8329.1260)))))) * sqrt(_GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED(vec2(-2.8, 1.6)) : _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 1.0, log(1.0), _GLF_ONE(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(7.3) : _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)))), injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 1.0, exp(0.0), 1.0, 0.0)))), vec2(vec2(vec2(1.0, 1.0))))))), mix(vec2(_GLF_FUZZED(-6.0), _GLF_IDENTITY(_GLF_FUZZED(109.742), min(_GLF_FUZZED(109.742), _GLF_FUZZED(109.742)))), vec2(((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (true ? mat2(1.0) * (injectionSwitch) : _GLF_FUZZED(vec2(-4.5, 8329.1260)))))) * sqrt(_GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(-2.8, (false ? _GLF_FUZZED(24.76) : -2.8)), 1.6)) : _GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(vec2(vec2(1.0, 1.0))), vec2(mat4x2(vec2(vec2(vec2(1.0, 1.0))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), length(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))))))))))[0], ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch))), (true ? _GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)) * (mat2(1.0))) * (injectionSwitch) : _GLF_FUZZED(vec2(-4.5, 8329.1260)))))) * sqrt(_GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-2.8, 1.6), clamp(_GLF_IDENTITY(vec2(-2.8, 1.6), clamp(vec2(-2.8, 1.6), _GLF_IDENTITY(vec2(-2.8, 1.6), max(vec2(-2.8, 1.6), vec2(-2.8, 1.6))), vec2(-2.8, 1.6))), _GLF_IDENTITY(vec2(-2.8, 1.6), (vec2(-2.8, 1.6)) * mat2(1.0)), vec2(-2.8, 1.6)))) : _GLF_IDENTITY(vec2(1.0, 1.0), vec2(vec2(vec2(1.0, 1.0))))))))[1]), bvec2(_GLF_IDENTITY(true, (true) || false), true)))).y), _GLF_IDENTITY(! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))) * sqrt(_GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(-2.8, (-2.8) / 1.0), 1.6)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 1.0), min(_GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED(vec2(4406.1373, 6.2)) : vec2(1.0, 1.0))), vec2(1.0, 1.0))), mix(vec2(_GLF_FUZZED(-23.46), _GLF_FUZZED(50.00)), vec2(_GLF_IDENTITY(_GLF_IDENTITY((vec2(1.0, 1.0)), max((vec2(1.0, 1.0)), (vec2(1.0, 1.0))))[0], (false ? _GLF_FUZZED(-2.6) : _GLF_IDENTITY((vec2(1.0, 1.0)), min((vec2(1.0, 1.0)), (vec2(1.0, 1.0))))[0])), (vec2(1.0, 1.0))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)))))), vec2(vec2(vec2(1.0, 1.0)))))))).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))) * sqrt(_GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-2.8, 1.6), (false ? _GLF_FUZZED(inversesqrt(injectionSwitch)) : vec2(-2.8, 1.6)))) : _GLF_IDENTITY(vec2(1.0, 1.0), vec2(vec2(_GLF_IDENTITY(vec2(1.0, 1.0), clamp(_GLF_IDENTITY(vec2(1.0, 1.0), (true ? vec2(1.0, 1.0) : _GLF_FUZZED(vec2(6.7, 1888.1920)))), vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) * vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) - 0.0), 1.0))))))))))).y)))))), (! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * (injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * (injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * (injectionSwitch))))) - log(vec2(1.0, 1.0)))))) * sqrt(_GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(-2.8, (-2.8) / 1.0), 1.6)) : _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2(_GLF_FUZZED(-23.46), _GLF_FUZZED(50.00)), vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((vec2(1.0, 1.0)), vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + ((vec2(1.0, 1.0))))[_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), clamp(_GLF_IDENTITY(~ (0), 0 ^ (~ (0))), _GLF_IDENTITY(~ (0), min(~ (0), ~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) / 1), max(_GLF_IDENTITY(~ (0), (~ (0)) / 1), _GLF_IDENTITY(~ (0), (~ (0)) / 1)))))))], (false ? _GLF_FUZZED(-2.6) : (vec2(1.0, 1.0))[0])), float(mat2(_GLF_IDENTITY(_GLF_IDENTITY((vec2(1.0, 1.0)), vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + ((vec2(1.0, 1.0))))[_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), clamp(_GLF_IDENTITY(~ (0), 0 ^ (~ (0))), _GLF_IDENTITY(~ (0), min(~ (0), ~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) / 1), max(_GLF_IDENTITY(~ (0), (~ (0)) / 1), _GLF_IDENTITY(~ (0), (~ (0)) / 1)))))))], (false ? _GLF_FUZZED(-2.6) : (vec2(1.0, 1.0))[0])), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), determinant(mat2(0.0, abs(0.0), 0.0, 0.0))))), (vec2(1.0, 1.0))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))))), vec2(vec2(vec2(1.0, 1.0)))))))).y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))) + sin(vec2(0.0, 0.0))), max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), _GLF_IDENTITY(mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), min(_GLF_IDENTITY(mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), mix(vec2((mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))[0], (mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))[1]), vec2(_GLF_FUZZED(6597.7748), _GLF_FUZZED(-12.33)), bvec2(false, false))), mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))))) + sin(vec2(0.0, 0.0))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))) + sin(vec2(0.0, 0.0))))) * sqrt(_GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-2.8, 1.6)), max(_GLF_FUZZED(vec2(-2.8, 1.6)), _GLF_FUZZED(vec2(-2.8, 1.6)))) : _GLF_IDENTITY(vec2(1.0, 1.0), vec2(vec2(_GLF_IDENTITY(vec2(1.0, 1.0), clamp(_GLF_IDENTITY(vec2(1.0, 1.0), (true ? vec2(1.0, 1.0) : _GLF_FUZZED(vec2(6.7, _GLF_IDENTITY(_GLF_IDENTITY(1888.1920, float(mat4x3(1888.1920, abs(1.0), 1.0, 1.0, 0.0, 0.0, 0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, cos(0.0), 0.0, sqrt(0.0), 0.0)), 0.0, 1.0, 1.0, sin(0.0)))), (_GLF_IDENTITY(1888.1920, float(mat4x3(1888.1920, abs(1.0), 1.0, 1.0, 0.0, 0.0, 0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, cos(0.0), 0.0, sqrt(0.0), 0.0)), 0.0, 1.0, 1.0, sin(0.0))))) + 0.0))))), vec2(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), _GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) * vec2(1.0, 1.0))))))))))).y))))))) || false))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (true ? mat2(1.0) * (injectionSwitch) : _GLF_FUZZED(vec2(-4.5, 8329.1260)))))) * sqrt(_GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED(vec2(-2.8, 1.6)) : _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 1.0, log(1.0), _GLF_ONE(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(7.3) : _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)))), injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 1.0, exp(0.0), 1.0, 0.0)))), vec2(vec2(vec2(1.0, 1.0))))))), mix(vec2(_GLF_FUZZED(-6.0), _GLF_IDENTITY(_GLF_FUZZED(109.742), min(_GLF_FUZZED(109.742), _GLF_FUZZED(109.742)))), vec2(((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (true ? mat2(1.0) * (injectionSwitch) : _GLF_FUZZED(vec2(-4.5, 8329.1260)))))) * sqrt(_GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(-2.8, (false ? _GLF_FUZZED(24.76) : -2.8)), 1.6)) : _GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(vec2(vec2(1.0, 1.0))), vec2(mat4x2(vec2(vec2(vec2(1.0, 1.0))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), length(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))))))))))[0], ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch))), (true ? _GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)) * (mat2(1.0))) * (injectionSwitch) : _GLF_FUZZED(vec2(-4.5, 8329.1260)))))) * sqrt(_GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-2.8, 1.6), clamp(_GLF_IDENTITY(vec2(-2.8, 1.6), clamp(vec2(-2.8, 1.6), _GLF_IDENTITY(vec2(-2.8, 1.6), max(vec2(-2.8, 1.6), vec2(-2.8, 1.6))), vec2(-2.8, 1.6))), _GLF_IDENTITY(vec2(-2.8, 1.6), (vec2(-2.8, 1.6)) * mat2(1.0)), vec2(-2.8, 1.6)))) : _GLF_IDENTITY(vec2(1.0, 1.0), vec2(vec2(vec2(1.0, 1.0))))))))[1]), bvec2(_GLF_IDENTITY(true, (true) || false), true)))).y), _GLF_IDENTITY(! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))) * sqrt(_GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(-2.8, (-2.8) / 1.0), 1.6)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 1.0), min(_GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED(vec2(4406.1373, 6.2)) : vec2(1.0, 1.0))), vec2(1.0, 1.0))), mix(vec2(_GLF_FUZZED(-23.46), _GLF_FUZZED(50.00)), vec2(_GLF_IDENTITY(_GLF_IDENTITY((vec2(1.0, 1.0)), max((vec2(1.0, 1.0)), (vec2(1.0, 1.0))))[0], (false ? _GLF_FUZZED(-2.6) : _GLF_IDENTITY((vec2(1.0, 1.0)), min((vec2(1.0, 1.0)), (vec2(1.0, 1.0))))[0])), (vec2(1.0, 1.0))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)))))), vec2(vec2(vec2(1.0, 1.0)))))))).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))) * sqrt(_GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-2.8, 1.6), (false ? _GLF_FUZZED(inversesqrt(injectionSwitch)) : vec2(-2.8, 1.6)))) : _GLF_IDENTITY(vec2(1.0, 1.0), vec2(vec2(_GLF_IDENTITY(vec2(1.0, 1.0), clamp(_GLF_IDENTITY(vec2(1.0, 1.0), (true ? vec2(1.0, 1.0) : _GLF_FUZZED(vec2(6.7, 1888.1920)))), vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) * vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) - 0.0), 1.0))))))))))).y)))))), (! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * (injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * (injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * (injectionSwitch))))) - log(vec2(1.0, 1.0)))))) * sqrt(_GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(-2.8, (-2.8) / 1.0), 1.6)) : _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2(_GLF_FUZZED(-23.46), _GLF_FUZZED(50.00)), vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((vec2(1.0, 1.0)), vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + ((vec2(1.0, 1.0))))[_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), clamp(_GLF_IDENTITY(~ (0), 0 ^ (~ (0))), _GLF_IDENTITY(~ (0), min(~ (0), ~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) / 1), max(_GLF_IDENTITY(~ (0), (~ (0)) / 1), _GLF_IDENTITY(~ (0), (~ (0)) / 1)))))))], (false ? _GLF_FUZZED(-2.6) : (vec2(1.0, 1.0))[0])), float(mat2(_GLF_IDENTITY(_GLF_IDENTITY((vec2(1.0, 1.0)), vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + ((vec2(1.0, 1.0))))[_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), clamp(_GLF_IDENTITY(~ (0), 0 ^ (~ (0))), _GLF_IDENTITY(~ (0), min(~ (0), ~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) / 1), max(_GLF_IDENTITY(~ (0), (~ (0)) / 1), _GLF_IDENTITY(~ (0), (~ (0)) / 1)))))))], (false ? _GLF_FUZZED(-2.6) : (vec2(1.0, 1.0))[0])), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), determinant(mat2(0.0, abs(0.0), 0.0, 0.0))))), (vec2(1.0, 1.0))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))))), vec2(vec2(vec2(1.0, 1.0)))))))).y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))) + sin(vec2(0.0, 0.0))), max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), _GLF_IDENTITY(mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), min(_GLF_IDENTITY(mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), mix(vec2((mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))[0], (mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))[1]), vec2(_GLF_FUZZED(6597.7748), _GLF_FUZZED(-12.33)), bvec2(false, false))), mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))))) + sin(vec2(0.0, 0.0))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))) + sin(vec2(0.0, 0.0))))) * sqrt(_GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-2.8, 1.6)), max(_GLF_FUZZED(vec2(-2.8, 1.6)), _GLF_FUZZED(vec2(-2.8, 1.6)))) : _GLF_IDENTITY(vec2(1.0, 1.0), vec2(vec2(_GLF_IDENTITY(vec2(1.0, 1.0), clamp(_GLF_IDENTITY(vec2(1.0, 1.0), (true ? vec2(1.0, 1.0) : _GLF_FUZZED(vec2(6.7, _GLF_IDENTITY(_GLF_IDENTITY(1888.1920, float(mat4x3(1888.1920, abs(1.0), 1.0, 1.0, 0.0, 0.0, 0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, cos(0.0), 0.0, sqrt(0.0), 0.0)), 0.0, 1.0, 1.0, sin(0.0)))), (_GLF_IDENTITY(1888.1920, float(mat4x3(1888.1920, abs(1.0), 1.0, 1.0, 0.0, 0.0, 0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, cos(0.0), 0.0, sqrt(0.0), 0.0)), 0.0, 1.0, 1.0, sin(0.0))))) + 0.0))))), vec2(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), _GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) * vec2(1.0, 1.0))))))))))).y))))))) || false))), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))))))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)) ? mat2(1.0) * (injectionSwitch) : _GLF_FUZZED(vec2(-4.5, 8329.1260)))))) * sqrt(_GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED(vec2(-2.8, 1.6)) : _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 1.0, log(1.0), _GLF_ONE(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(7.3) : _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), min(1.0, 1.0)), 1.0)))), injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 1.0, exp(0.0), 1.0, 0.0)))), vec2(vec2(vec2(1.0, 1.0))))))), mix(vec2(_GLF_FUZZED(-6.0), _GLF_IDENTITY(_GLF_FUZZED(109.742), min(_GLF_FUZZED(109.742), _GLF_FUZZED(109.742)))), vec2(((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (true ? mat2(1.0) * (injectionSwitch) : _GLF_FUZZED(vec2(-4.5, 8329.1260)))))) * sqrt(_GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(-2.8, (false ? _GLF_FUZZED(24.76) : -2.8)), 1.6)) : _GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(vec2(vec2(1.0, 1.0))), vec2(mat4x2(vec2(vec2(vec2(1.0, 1.0))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), length(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))))))))))[0], ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch))), (true ? _GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)) * (mat2(1.0))) * (injectionSwitch) : _GLF_FUZZED(vec2(-4.5, 8329.1260)))))) * sqrt(_GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-2.8, 1.6), clamp(_GLF_IDENTITY(vec2(-2.8, 1.6), clamp(vec2(-2.8, 1.6), _GLF_IDENTITY(vec2(-2.8, 1.6), max(vec2(-2.8, 1.6), vec2(-2.8, 1.6))), vec2(-2.8, 1.6))), _GLF_IDENTITY(vec2(-2.8, 1.6), (vec2(-2.8, 1.6)) * mat2(1.0)), vec2(-2.8, 1.6)))) : _GLF_IDENTITY(vec2(1.0, 1.0), vec2(vec2(vec2(1.0, 1.0))))))))[1]), bvec2(_GLF_IDENTITY(true, (true) || false), true)))).y), _GLF_IDENTITY(! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))) * sqrt(_GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(-2.8, (-2.8) / 1.0), 1.6)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 1.0), min(_GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED(vec2(4406.1373, 6.2)) : vec2(1.0, 1.0))), vec2(1.0, 1.0))), mix(vec2(_GLF_FUZZED(-23.46), _GLF_FUZZED(50.00)), vec2(_GLF_IDENTITY(_GLF_IDENTITY((vec2(1.0, 1.0)), max((_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2(_GLF_FUZZED(vec3(-6851.5099, -8.0, 60.52).x), _GLF_FUZZED(994.908)), vec2((vec2(1.0, 1.0))[0], _GLF_IDENTITY((vec2(1.0, 1.0))[1], (false ? _GLF_FUZZED(-24.65) : (vec2(1.0, 1.0))[1]))), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (vec2(1.0, 1.0))))[0], (false ? _GLF_FUZZED(-2.6) : _GLF_IDENTITY((vec2(1.0, 1.0)), min((vec2(1.0, 1.0)), (vec2(1.0, 1.0))))[0])), (vec2(1.0, 1.0))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)))))), vec2(vec2(vec2(1.0, 1.0)))))))).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))) * sqrt(_GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-2.8, 1.6), (false ? _GLF_FUZZED(inversesqrt(injectionSwitch)) : vec2(-2.8, 1.6)))) : _GLF_IDENTITY(vec2(1.0, 1.0), vec2(vec2(_GLF_IDENTITY(vec2(1.0, 1.0), clamp(_GLF_IDENTITY(vec2(1.0, 1.0), (true ? vec2(1.0, 1.0) : _GLF_FUZZED(vec2(6.7, 1888.1920)))), vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) * vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) - 0.0), 1.0))))))))))).y)))))), (! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * (injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * (injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * (injectionSwitch))))) - log(vec2(1.0, 1.0)))))) * sqrt(_GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(-2.8, (-2.8) / 1.0), 1.6)) : _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2(_GLF_FUZZED(-23.46), _GLF_FUZZED(50.00)), vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((vec2(1.0, 1.0)), vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + ((vec2(1.0, 1.0))))[_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), clamp(_GLF_IDENTITY(~ (0), 0 ^ (~ (0))), _GLF_IDENTITY(~ (0), min(~ (0), ~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) / 1), max(_GLF_IDENTITY(~ (0), (~ (0)) / 1), _GLF_IDENTITY(~ (0), (~ (0)) / 1)))))))], (false ? _GLF_FUZZED(-2.6) : (vec2(1.0, 1.0))[0])), float(mat2(_GLF_IDENTITY(_GLF_IDENTITY((vec2(1.0, 1.0)), vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + ((vec2(1.0, 1.0))))[_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), clamp(_GLF_IDENTITY(~ (0), 0 ^ (~ (0))), _GLF_IDENTITY(~ (0), min(~ (0), ~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) / 1), max(_GLF_IDENTITY(~ (0), (~ (0)) / 1), _GLF_IDENTITY(~ _GLF_IDENTITY((0), ((0)) << 0), (~ (0)) / 1)))))))], (false ? _GLF_FUZZED(-2.6) : (vec2(1.0, 1.0))[0])), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0 * (_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), determinant(mat2(0.0, abs(0.0), 0.0, 0.0))))), (vec2(1.0, 1.0))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))), ! (! ((! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))))))))), vec2(vec2(vec2(1.0, 1.0)))))))).y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(317.753), _GLF_FUZZED(float(false))), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(-6860.7807)), float((injectionSwitch)[0]), bool(true))), (injectionSwitch)[1]), bvec2(true, true)))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))) + sin(vec2(0.0, 0.0))), max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), _GLF_IDENTITY(mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), min(_GLF_IDENTITY(mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), mix(vec2((mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-8308.7695)), vec2(_GLF_FUZZED(-3.0), (mat2(1.0) * (injectionSwitch))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))[0], (mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))[1]), vec2(_GLF_FUZZED(6597.7748), _GLF_FUZZED(-12.33)), bvec2(false, false))), mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))))) + sin(vec2(0.0, 0.0))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))) + sin(vec2(0.0, 0.0))))) * sqrt(_GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-2.8, 1.6)), max(_GLF_FUZZED(vec2(-2.8, 1.6)), _GLF_FUZZED(vec2(-2.8, 1.6)))) : _GLF_IDENTITY(vec2(1.0, 1.0), vec2(vec2(_GLF_IDENTITY(vec2(1.0, 1.0), clamp(_GLF_IDENTITY(vec2(1.0, 1.0), (true ? vec2(1.0, 1.0) : _GLF_FUZZED(vec2(6.7, _GLF_IDENTITY(_GLF_IDENTITY(1888.1920, float(mat4x3(1888.1920, abs(1.0), 1.0, 1.0, 0.0, 0.0, 0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, cos(0.0), 0.0, sqrt(_GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)))), 0.0)), 0.0, 1.0, 1.0, sin(0.0)))), (_GLF_IDENTITY(1888.1920, float(mat4x3(1888.1920, abs(1.0), 1.0, 1.0, 0.0, 0.0, 0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), cos(0.0), 0.0, sqrt(0.0), 0.0)), 0.0, 1.0, 1.0, sin(0.0))))) + 0.0))))), vec2(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), _GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) * vec2(1.0, 1.0))))))))))).y))))))) || false)))) && true))))))
                      {
                      }
                     else
                      {
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         read = atomicLoad(buf[virtual_gid], 4, 64, 2);
                        }
                       else
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                        }
                      }
                    }
                  }
                }
              }
             else
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                }
              }
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), true, true, true)))))
              barrier();
            }
          }
         else
          {
          }
        }
       break;
       case 60:
       for(int _injected_loop_counter = (1 | ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec2(0, 1), max(ivec2(0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, int(int(_GLF_IDENTITY(1, 0 + _GLF_IDENTITY((1), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY((1), ~ (~ ((1)))), 0), max(ivec2(_GLF_IDENTITY((1), ~ (~ ((1)))), 0), ivec2(_GLF_IDENTITY((1), ~ (~ ((1)))), 0)))), (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY((1), ~ (~ ((1)))), 0), max(ivec2(_GLF_IDENTITY((1), ~ (~ ((1)))), 0), ivec2(_GLF_IDENTITY((1), ~ (~ ((1)))), 0))))) / 1)))))), max(1, 1)), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, int(int(_GLF_IDENTITY(1, _GLF_IDENTITY(0, ~ (~ (0))) + (1))))), max(1, 1)), 0, ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))))), _GLF_IDENTITY(ivec2(0, 1), ivec2(0, 0) + (ivec2(0, 1)))))))), int(_GLF_IDENTITY(0, (0) / 1))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! _GLF_IDENTITY((! (false)), true && ((! (false)))))))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | int(_GLF_ONE(1.0, injectionSwitch.y)))); _injected_loop_counter ++)
          {
           do
            {
             do
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                {
                 do
                  {
                   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(true, false || (true)) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec4(_GLF_WRAPPED_IF_TRUE(true), false, false, false))), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec4(_GLF_WRAPPED_IF_TRUE(true), false, false, false)))))) || _GLF_IDENTITY(false, ! (! (false)))))))))
                    {
                     barrier();
                    }
                   else
                    {
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))), 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(4082.7317))), 0.0, 0.0)), length(vec3(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), clamp(0.0, 0.0, 0.0)) : _GLF_FUZZED(0.6)), clamp((true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), clamp(0.0, 0.0, 0.0)) : _GLF_FUZZED(0.6)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), clamp(0.0, 0.0, 0.0)) : _GLF_FUZZED(0.6)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), clamp(0.0, 0.0, 0.0)) : _GLF_FUZZED(0.6))))), mix(float(_GLF_IDENTITY(0.0, _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), clamp(0.0, 0.0, 0.0)) : _GLF_FUZZED(0.6)), clamp((true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), clamp(0.0, 0.0, 0.0)) : _GLF_FUZZED(0.6)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), clamp(0.0, 0.0, 0.0)) : _GLF_FUZZED(0.6)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), clamp(0.0, 0.0, 0.0)) : _GLF_FUZZED(0.6)))))), float(_GLF_FUZZED(-5.0)), bool(false))))), 1.0, abs(1.0), 0.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(993.468))), 0.0))).x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))), ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-96.61), _GLF_FUZZED(5.1)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y)))) && true))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))));
          }
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(_GLF_IDENTITY((1 ^ 1), ((1 ^ 1)) >> (0 << _GLF_IDENTITY(int(6), int(6)))), (_GLF_IDENTITY((1 ^ 1), ((1 ^ 1)) + 0)) | _GLF_IDENTITY(0, (0) | 0)) << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), max(int(3), int(3)))))); _injected_loop_counter --)
          {
           _GLF_IDENTITY(ivec2(80417, -26195), ivec2(0, 0) + (_GLF_IDENTITY(ivec2(80417, -26195), (_GLF_IDENTITY(ivec2(80417, -26195), max(ivec2(80417, -26195), _GLF_IDENTITY(ivec2(80417, -26195), ivec2(0, 0) | (ivec2(80417, -26195)))))) * ivec2(1, 1))));
          }
        }
       default:
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         do
          {
           1;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       else
        {
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(uintBitsToFloat(workgroup_id)) : injectionSwitch.x)) > injectionSwitch.y)))))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 subgroupBarrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ! (! ((! (true)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false)))), true && (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false))))))))))))) && true)))))) && true)))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))).y)), true)))) && true)) || false))))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       do
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                barrier();
               barrier();
              }
            }
           else
            {
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   else
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(8), int(8)))); _injected_loop_counter --)
      {
       atomicStore(checker[_GLF_IDENTITY(virtual_gid, uint(uvec4(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)))), 0u, 1u, (1u ^ 0u))))], read, 4, 64, _GLF_IDENTITY(4, (4) - (62933 & 0)));
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, length(vec3(0.0, 0.0, 0.0)), 1.0)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
