#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, true, false)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, true, false)))), true))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))))), (! (bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))))) && true)))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))) && true), (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) / 1.0))) < injectionSwitch.y)))), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))) && true), (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) / 1.0))) < injectionSwitch.y)))))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))), ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))), ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(false, (false) && true))))), (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))))))) && true))) && true, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), (false) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) + 0.0) / 1.0))))))) || false))), false || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true)), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true))) || false)), false))))))), ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) && _GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))), (injectionSwitch.x < injectionSwitch.y))))))), ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || ((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) && true))))) && true, false || (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), false || (! ((false)))))) && true), ! (! (_GLF_IDENTITY(false, (false) && true)))), (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! ((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), false, false, false)), (bool(bvec4((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false))), _GLF_IDENTITY((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! ((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (! ((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), false, false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))) && true))) && true, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false, false, false)), (bool(bvec4((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) && _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y))))))), false, false, false))) && true))) && true), ! (! (! ((_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, true, true)), bool(bvec2(bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, true, true)), true))))))))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false, false, false)), (bool(bvec4((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) && _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y))))))), false, false, false))) && true))) && true))))))))) && _GLF_IDENTITY(true, false || (true))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, injectionSwitch.y)), 0.0, _GLF_IDENTITY(dot(vec4(0.0, sqrt(1.0), 0.0, 1.0), _GLF_IDENTITY(vec4(1.0, 0.0, 1.0, 0.0), mix(vec4(_GLF_FUZZED(-330.739), _GLF_FUZZED((+ _GLF_IDENTITY(-89.40, min(_GLF_IDENTITY(-89.40, max(-89.40, _GLF_IDENTITY(-89.40, (-89.40) + 0.0))), _GLF_IDENTITY(-89.40, clamp(-89.40, -89.40, -89.40)))))), _GLF_FUZZED(_GLF_IDENTITY(float(171371u), (false ? _GLF_FUZZED(floor(96.24)) : float(171371u)))), _GLF_IDENTITY((vec4(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), _GLF_IDENTITY(float(mat2x4(min(1.0, 1.0), 0.0, tan(0.0), abs(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), 1.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y))), (float(mat2x4(min(1.0, 1.0), 0.0, tan(0.0), abs(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), 1.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y)))) - 0.0))))), _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8.2)))))[3], mix(float(_GLF_FUZZED(95.58)), float((vec4(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8.2)))))[3]), bool(true)))), vec4(_GLF_IDENTITY((vec4(1.0, 0.0, 1.0, 0.0))[0], min((vec4(1.0, 0.0, 1.0, 0.0))[_GLF_IDENTITY(0, min(0, 0))], _GLF_IDENTITY((vec4(1.0, 0.0, 1.0, 0.0))[0], min((vec4(1.0, 0.0, 1.0, 0.0))[0], (vec4(1.0, 0.0, 1.0, 0.0))[0])))), (vec4(1.0, 0.0, 1.0, 0.0))[1], (vec4(1.0, 0.0, 1.0, 0.0))[2], _GLF_FUZZED(_GLF_IDENTITY(0.5, mix(float(0.5), float(_GLF_FUZZED(2.1)), bool(false))))), bvec4(_GLF_IDENTITY(true, (true) && true), true, true, false)))), dot(vec4(0.0, sqrt(1.0), 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))), 0.0, sqrt(1.0), 0.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(trunc(_GLF_IDENTITY(-6.4, 0.0 + (-6.4)))))), 1.0, 1.0, 0.0, 1.0)), sqrt(1.0), 1.0, abs(0.0), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(2181.5778) : 0.0)), 0.0, 0.0, 1.0)))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, injectionSwitch.y)), mix(float(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))))) - vec2(0.0, 0.0)))).y, injectionSwitch.y))), float(_GLF_FUZZED(123.787)), bool(false))), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, sqrt(1.0), 0.0, 1.0), _GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0, 0.0, 1.0, 0.0), mix(vec4(_GLF_FUZZED(-330.739), _GLF_FUZZED((+ -89.40)), _GLF_FUZZED(_GLF_IDENTITY(float(171371u), (false ? _GLF_FUZZED(floor(96.24)) : float(171371u)))), (vec4(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8.2)))))[3]), vec4((vec4(1.0, 0.0, 1.0, 0.0))[0], _GLF_IDENTITY((vec4(1.0, 0.0, 1.0, 0.0))[1], max((vec4(1.0, 0.0, 1.0, 0.0))[1], (vec4(1.0, 0.0, 1.0, 0.0))[1])), _GLF_IDENTITY((vec4(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(vec3(-724.655, -9.5, -538.247).s))), 1.0, 0.0)), ((vec4(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(vec3(-724.655, -9.5, -538.247).s))), 1.0, 0.0))) * mat4(1.0))[2], _GLF_FUZZED(_GLF_IDENTITY(0.5, mix(float(0.5), float(_GLF_FUZZED(2.1)), bool(false))))), bvec4(true, true, true, false))), mix(vec4((_GLF_IDENTITY(vec4(1.0, 0.0, 1.0, 0.0), mix(vec4(_GLF_FUZZED(-330.739), _GLF_FUZZED((+ -89.40)), _GLF_FUZZED(_GLF_IDENTITY(float(171371u), (false ? _GLF_FUZZED(floor(96.24)) : float(171371u)))), (vec4(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8.2)))))[3]), vec4((vec4(1.0, 0.0, 1.0, 0.0))[0], _GLF_IDENTITY((vec4(1.0, 0.0, 1.0, 0.0))[1], max((vec4(1.0, 0.0, 1.0, 0.0))[1], (vec4(1.0, 0.0, 1.0, 0.0))[1])), _GLF_IDENTITY((vec4(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(vec3(-724.655, -9.5, -538.247).s))), 1.0, 0.0)), ((vec4(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(vec3(-724.655, -9.5, -538.247).s))), 1.0, 0.0))) * mat4(1.0))[2], _GLF_FUZZED(_GLF_IDENTITY(0.5, mix(float(0.5), float(_GLF_FUZZED(2.1)), bool(false))))), bvec4(true, true, true, false))))[0], (_GLF_IDENTITY(vec4(1.0, 0.0, 1.0, 0.0), mix(vec4(_GLF_FUZZED(-330.739), _GLF_FUZZED((+ -89.40)), _GLF_FUZZED(_GLF_IDENTITY(float(171371u), (false ? _GLF_FUZZED(floor(96.24)) : float(171371u)))), (vec4(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8.2)))))[3]), vec4((vec4(1.0, 0.0, 1.0, 0.0))[0], _GLF_IDENTITY((vec4(1.0, 0.0, 1.0, 0.0))[1], max((vec4(1.0, 0.0, 1.0, 0.0))[1], (vec4(1.0, 0.0, 1.0, 0.0))[1])), _GLF_IDENTITY((vec4(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(vec3(-724.655, -9.5, -538.247).s))), 1.0, 0.0)), ((vec4(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(vec3(-724.655, -9.5, -538.247).s))), 1.0, 0.0))) * mat4(1.0))[2], _GLF_FUZZED(_GLF_IDENTITY(0.5, mix(float(0.5), float(_GLF_FUZZED(2.1)), bool(false))))), bvec4(true, true, true, false))))[1], (_GLF_IDENTITY(vec4(1.0, 0.0, 1.0, 0.0), mix(vec4(_GLF_FUZZED(-330.739), _GLF_FUZZED((+ -89.40)), _GLF_FUZZED(_GLF_IDENTITY(float(171371u), (false ? _GLF_FUZZED(floor(96.24)) : float(171371u)))), (vec4(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8.2)))))[3]), vec4((vec4(1.0, 0.0, 1.0, 0.0))[0], _GLF_IDENTITY((vec4(1.0, 0.0, 1.0, 0.0))[1], max((vec4(1.0, 0.0, 1.0, 0.0))[1], (vec4(1.0, 0.0, 1.0, 0.0))[1])), _GLF_IDENTITY((vec4(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(vec3(-724.655, -9.5, -538.247).s))), 1.0, 0.0)), ((vec4(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(vec3(-724.655, -9.5, -538.247).s))), 1.0, 0.0))) * mat4(1.0))[2], _GLF_FUZZED(_GLF_IDENTITY(0.5, mix(float(0.5), float(_GLF_FUZZED(2.1)), bool(false))))), bvec4(true, true, true, false))))[2], _GLF_IDENTITY((_GLF_IDENTITY(vec4(1.0, 0.0, 1.0, 0.0), mix(vec4(_GLF_FUZZED(-330.739), _GLF_FUZZED((+ -89.40)), _GLF_FUZZED(_GLF_IDENTITY(float(171371u), (false ? _GLF_FUZZED(floor(96.24)) : float(171371u)))), (vec4(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8.2)))))[3]), vec4((vec4(1.0, 0.0, 1.0, 0.0))[0], _GLF_IDENTITY((vec4(1.0, 0.0, 1.0, 0.0))[1], max((vec4(1.0, 0.0, 1.0, 0.0))[1], (vec4(1.0, 0.0, 1.0, 0.0))[1])), _GLF_IDENTITY((vec4(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(vec3(-724.655, -9.5, -538.247).s))), 1.0, 0.0)), ((vec4(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(vec3(-724.655, -9.5, -538.247).s))), 1.0, 0.0))) * mat4(1.0))[2], _GLF_FUZZED(_GLF_IDENTITY(0.5, mix(float(0.5), float(_GLF_FUZZED(2.1)), bool(false))))), bvec4(true, true, true, false))))[3], max((_GLF_IDENTITY(vec4(1.0, 0.0, 1.0, 0.0), mix(vec4(_GLF_FUZZED(-330.739), _GLF_FUZZED((+ -89.40)), _GLF_FUZZED(_GLF_IDENTITY(float(171371u), (false ? _GLF_FUZZED(floor(96.24)) : float(171371u)))), (vec4(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8.2)))))[3]), vec4((vec4(1.0, 0.0, 1.0, 0.0))[0], _GLF_IDENTITY((vec4(1.0, 0.0, 1.0, 0.0))[1], max((vec4(1.0, 0.0, 1.0, 0.0))[1], (vec4(1.0, 0.0, 1.0, 0.0))[1])), _GLF_IDENTITY((vec4(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(vec3(-724.655, -9.5, -538.247).s))), 1.0, 0.0)), ((vec4(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(vec3(-724.655, -9.5, -538.247).s))), 1.0, 0.0))) * mat4(1.0))[2], _GLF_FUZZED(_GLF_IDENTITY(0.5, mix(float(0.5), float(_GLF_FUZZED(2.1)), bool(false))))), bvec4(true, true, true, false))))[3], (_GLF_IDENTITY(vec4(1.0, 0.0, 1.0, 0.0), mix(vec4(_GLF_FUZZED(-330.739), _GLF_FUZZED((+ -89.40)), _GLF_FUZZED(_GLF_IDENTITY(float(171371u), (false ? _GLF_FUZZED(floor(96.24)) : float(171371u)))), (vec4(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8.2)))))[3]), vec4((vec4(1.0, 0.0, 1.0, 0.0))[0], _GLF_IDENTITY((vec4(1.0, 0.0, 1.0, 0.0))[1], max((vec4(1.0, 0.0, 1.0, 0.0))[1], (vec4(1.0, 0.0, 1.0, 0.0))[1])), _GLF_IDENTITY((vec4(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(vec3(-724.655, -9.5, -538.247).s))), 1.0, 0.0)), ((vec4(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(vec3(-724.655, -9.5, -538.247).s))), 1.0, 0.0))) * mat4(1.0))[2], _GLF_FUZZED(_GLF_IDENTITY(0.5, mix(float(0.5), float(_GLF_FUZZED(2.1)), bool(false))))), bvec4(true, true, true, false))))[3]))), vec4(_GLF_FUZZED((-479.891 * -5.0)), _GLF_FUZZED((+ 2.5)), _GLF_FUZZED(8631.9447), _GLF_FUZZED(547.527)), bvec4(false, false, false, false)))), min(dot(vec4(0.0, sqrt(1.0), 0.0, 1.0), _GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0, 0.0, 1.0, 0.0), mix(vec4(_GLF_FUZZED(-330.739), _GLF_FUZZED((+ -89.40)), _GLF_FUZZED(_GLF_IDENTITY(float(171371u), (false ? _GLF_FUZZED(floor(96.24)) : float(171371u)))), (vec4(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8.2)))))[3]), vec4((vec4(1.0, 0.0, 1.0, 0.0))[0], _GLF_IDENTITY((vec4(1.0, 0.0, 1.0, 0.0))[1], max((vec4(1.0, 0.0, 1.0, 0.0))[1], (vec4(1.0, 0.0, 1.0, 0.0))[1])), _GLF_IDENTITY((vec4(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(vec3(-724.655, -9.5, -538.247).s))), 1.0, 0.0)), ((vec4(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(vec3(-724.655, -9.5, -538.247).s))), 1.0, 0.0))) * mat4(1.0))[2], _GLF_FUZZED(_GLF_IDENTITY(0.5, mix(float(0.5), float(_GLF_FUZZED(2.1)), bool(false))))), bvec4(true, true, true, false))), mix(vec4((_GLF_IDENTITY(vec4(1.0, 0.0, 1.0, 0.0), mix(vec4(_GLF_FUZZED(-330.739), _GLF_FUZZED((+ -89.40)), _GLF_FUZZED(_GLF_IDENTITY(float(171371u), (false ? _GLF_FUZZED(floor(96.24)) : float(171371u)))), (vec4(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8.2)))))[3]), vec4((vec4(1.0, 0.0, 1.0, 0.0))[0], _GLF_IDENTITY((vec4(1.0, 0.0, 1.0, 0.0))[1], max((vec4(1.0, 0.0, 1.0, 0.0))[1], (vec4(1.0, 0.0, 1.0, 0.0))[1])), _GLF_IDENTITY((vec4(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(vec3(-724.655, -9.5, -538.247).s))), 1.0, 0.0)), ((vec4(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(vec3(-724.655, -9.5, -538.247).s))), 1.0, 0.0))) * mat4(1.0))[2], _GLF_FUZZED(_GLF_IDENTITY(0.5, mix(float(0.5), float(_GLF_FUZZED(2.1)), bool(false))))), bvec4(true, true, true, false))))[0], (_GLF_IDENTITY(vec4(1.0, 0.0, 1.0, 0.0), mix(vec4(_GLF_FUZZED(-330.739), _GLF_FUZZED((+ -89.40)), _GLF_FUZZED(_GLF_IDENTITY(float(171371u), (false ? _GLF_FUZZED(floor(96.24)) : float(171371u)))), (vec4(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8.2)))))[3]), vec4((vec4(1.0, 0.0, 1.0, 0.0))[0], _GLF_IDENTITY((vec4(1.0, 0.0, 1.0, 0.0))[1], max((vec4(1.0, 0.0, 1.0, 0.0))[1], (vec4(1.0, 0.0, 1.0, 0.0))[1])), _GLF_IDENTITY((vec4(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(vec3(-724.655, -9.5, -538.247).s))), 1.0, 0.0)), ((vec4(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(vec3(-724.655, -9.5, -538.247).s))), 1.0, 0.0))) * mat4(1.0))[2], _GLF_FUZZED(_GLF_IDENTITY(0.5, mix(float(0.5), float(_GLF_FUZZED(2.1)), bool(false))))), bvec4(true, true, true, false))))[1], (_GLF_IDENTITY(vec4(1.0, 0.0, 1.0, 0.0), mix(vec4(_GLF_FUZZED(-330.739), _GLF_FUZZED((+ -89.40)), _GLF_FUZZED(_GLF_IDENTITY(float(171371u), (false ? _GLF_FUZZED(floor(96.24)) : float(171371u)))), (vec4(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8.2)))))[3]), vec4((vec4(1.0, 0.0, 1.0, 0.0))[0], _GLF_IDENTITY((vec4(1.0, 0.0, 1.0, 0.0))[1], max((vec4(1.0, 0.0, 1.0, 0.0))[1], (vec4(1.0, 0.0, 1.0, 0.0))[1])), _GLF_IDENTITY((vec4(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(vec3(-724.655, -9.5, -538.247).s))), 1.0, 0.0)), ((vec4(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(vec3(-724.655, -9.5, -538.247).s))), 1.0, 0.0))) * mat4(1.0))[2], _GLF_FUZZED(_GLF_IDENTITY(0.5, mix(float(0.5), float(_GLF_FUZZED(2.1)), bool(false))))), bvec4(true, true, true, false))))[2], _GLF_IDENTITY((_GLF_IDENTITY(vec4(1.0, 0.0, 1.0, 0.0), mix(vec4(_GLF_FUZZED(-330.739), _GLF_FUZZED((+ -89.40)), _GLF_FUZZED(_GLF_IDENTITY(float(171371u), (false ? _GLF_FUZZED(floor(96.24)) : float(171371u)))), (vec4(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8.2)))))[3]), vec4((vec4(1.0, 0.0, 1.0, 0.0))[0], _GLF_IDENTITY((vec4(1.0, 0.0, 1.0, 0.0))[1], max((vec4(1.0, 0.0, 1.0, 0.0))[1], (vec4(1.0, 0.0, 1.0, 0.0))[1])), _GLF_IDENTITY((vec4(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(vec3(-724.655, -9.5, -538.247).s))), 1.0, 0.0)), ((vec4(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(vec3(-724.655, -9.5, -538.247).s))), 1.0, 0.0))) * mat4(1.0))[2], _GLF_FUZZED(_GLF_IDENTITY(0.5, mix(float(0.5), float(_GLF_FUZZED(2.1)), bool(false))))), bvec4(true, true, true, false))))[3], max((_GLF_IDENTITY(vec4(1.0, 0.0, 1.0, 0.0), mix(vec4(_GLF_FUZZED(-330.739), _GLF_FUZZED((+ -89.40)), _GLF_FUZZED(_GLF_IDENTITY(float(171371u), (false ? _GLF_FUZZED(floor(96.24)) : float(171371u)))), (vec4(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8.2)))))[3]), vec4((vec4(1.0, 0.0, 1.0, 0.0))[0], _GLF_IDENTITY((vec4(1.0, 0.0, 1.0, 0.0))[1], max((vec4(1.0, 0.0, 1.0, 0.0))[1], (vec4(1.0, 0.0, 1.0, 0.0))[1])), _GLF_IDENTITY((vec4(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(vec3(-724.655, -9.5, -538.247).s))), 1.0, 0.0)), ((vec4(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(vec3(-724.655, -9.5, -538.247).s))), 1.0, 0.0))) * mat4(1.0))[2], _GLF_FUZZED(_GLF_IDENTITY(0.5, mix(float(0.5), float(_GLF_FUZZED(2.1)), bool(false))))), bvec4(true, true, true, false))))[3], (_GLF_IDENTITY(vec4(1.0, 0.0, 1.0, 0.0), mix(vec4(_GLF_FUZZED(-330.739), _GLF_FUZZED((+ -89.40)), _GLF_FUZZED(_GLF_IDENTITY(float(171371u), (false ? _GLF_FUZZED(floor(96.24)) : float(171371u)))), (vec4(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8.2)))))[3]), vec4((vec4(1.0, 0.0, 1.0, 0.0))[0], _GLF_IDENTITY((vec4(1.0, 0.0, 1.0, 0.0))[1], max((vec4(1.0, 0.0, 1.0, 0.0))[1], (vec4(1.0, 0.0, 1.0, 0.0))[1])), _GLF_IDENTITY((vec4(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(vec3(-724.655, -9.5, -538.247).s))), 1.0, 0.0)), ((vec4(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(vec3(-724.655, -9.5, -538.247).s))), 1.0, 0.0))) * mat4(1.0))[2], _GLF_FUZZED(_GLF_IDENTITY(0.5, mix(float(0.5), float(_GLF_FUZZED(2.1)), bool(false))))), bvec4(true, true, true, false))))[3]))), vec4(_GLF_FUZZED((-479.891 * -5.0)), _GLF_FUZZED((+ 2.5)), _GLF_FUZZED(8631.9447), _GLF_FUZZED(547.527)), bvec4(false, false, false, false)))), _GLF_IDENTITY(dot(vec4(0.0, sqrt(1.0), 0.0, 1.0), _GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0, 0.0, 1.0, 0.0), mix(vec4(_GLF_FUZZED(-330.739), _GLF_FUZZED((+ -89.40)), _GLF_FUZZED(_GLF_IDENTITY(float(171371u), (false ? _GLF_FUZZED(floor(96.24)) : float(171371u)))), (vec4(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8.2)))))[3]), vec4((vec4(1.0, 0.0, 1.0, 0.0))[0], _GLF_IDENTITY((vec4(1.0, 0.0, 1.0, 0.0))[1], max((vec4(1.0, 0.0, 1.0, 0.0))[1], (vec4(1.0, 0.0, 1.0, 0.0))[1])), _GLF_IDENTITY((vec4(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(vec3(-724.655, -9.5, -538.247).s))), 1.0, 0.0)), ((vec4(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(vec3(-724.655, -9.5, -538.247).s))), 1.0, 0.0))) * mat4(1.0))[2], _GLF_FUZZED(_GLF_IDENTITY(0.5, mix(float(0.5), float(_GLF_FUZZED(2.1)), bool(false))))), bvec4(true, true, true, false))), mix(vec4((_GLF_IDENTITY(vec4(1.0, 0.0, 1.0, 0.0), mix(vec4(_GLF_FUZZED(-330.739), _GLF_FUZZED((+ -89.40)), _GLF_FUZZED(_GLF_IDENTITY(float(171371u), (false ? _GLF_FUZZED(floor(96.24)) : float(171371u)))), (vec4(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8.2)))))[3]), vec4((vec4(1.0, 0.0, 1.0, 0.0))[0], _GLF_IDENTITY((vec4(1.0, 0.0, 1.0, 0.0))[1], max((vec4(1.0, 0.0, 1.0, 0.0))[1], (vec4(1.0, 0.0, 1.0, 0.0))[1])), _GLF_IDENTITY((vec4(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(vec3(-724.655, -9.5, -538.247).s))), 1.0, 0.0)), ((vec4(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(vec3(-724.655, -9.5, -538.247).s))), 1.0, 0.0))) * mat4(1.0))[2], _GLF_FUZZED(_GLF_IDENTITY(0.5, mix(float(0.5), float(_GLF_FUZZED(2.1)), bool(false))))), bvec4(true, true, true, false))))[0], (_GLF_IDENTITY(vec4(1.0, 0.0, 1.0, 0.0), mix(vec4(_GLF_FUZZED(-330.739), _GLF_FUZZED((+ -89.40)), _GLF_FUZZED(_GLF_IDENTITY(float(171371u), (false ? _GLF_FUZZED(floor(96.24)) : float(171371u)))), (vec4(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8.2)))))[3]), vec4((vec4(1.0, 0.0, 1.0, 0.0))[0], _GLF_IDENTITY((vec4(1.0, 0.0, 1.0, 0.0))[1], max((vec4(1.0, 0.0, 1.0, 0.0))[1], (vec4(1.0, 0.0, 1.0, 0.0))[1])), _GLF_IDENTITY((vec4(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(vec3(-724.655, -9.5, -538.247).s))), 1.0, 0.0)), ((vec4(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(vec3(-724.655, -9.5, -538.247).s))), 1.0, 0.0))) * mat4(1.0))[2], _GLF_FUZZED(_GLF_IDENTITY(0.5, mix(float(0.5), float(_GLF_FUZZED(2.1)), bool(false))))), bvec4(true, true, true, false))))[1], (_GLF_IDENTITY(vec4(1.0, 0.0, 1.0, 0.0), mix(vec4(_GLF_FUZZED(-330.739), _GLF_FUZZED((+ -89.40)), _GLF_FUZZED(_GLF_IDENTITY(float(171371u), (false ? _GLF_FUZZED(floor(96.24)) : float(171371u)))), (vec4(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8.2)))))[3]), vec4((vec4(1.0, 0.0, 1.0, 0.0))[0], _GLF_IDENTITY((vec4(1.0, 0.0, 1.0, 0.0))[1], max((vec4(1.0, 0.0, 1.0, 0.0))[1], (vec4(1.0, 0.0, 1.0, 0.0))[1])), _GLF_IDENTITY((vec4(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(vec3(-724.655, -9.5, -538.247).s))), 1.0, 0.0)), ((vec4(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(vec3(-724.655, -9.5, -538.247).s))), 1.0, 0.0))) * mat4(1.0))[2], _GLF_FUZZED(_GLF_IDENTITY(0.5, mix(float(0.5), float(_GLF_FUZZED(2.1)), bool(false))))), bvec4(true, true, true, false))))[2], _GLF_IDENTITY((_GLF_IDENTITY(vec4(1.0, 0.0, 1.0, 0.0), mix(vec4(_GLF_FUZZED(-330.739), _GLF_FUZZED((+ -89.40)), _GLF_FUZZED(_GLF_IDENTITY(float(171371u), (false ? _GLF_FUZZED(floor(96.24)) : float(171371u)))), (vec4(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8.2)))))[3]), vec4((vec4(1.0, 0.0, 1.0, 0.0))[0], _GLF_IDENTITY((vec4(1.0, 0.0, 1.0, 0.0))[1], max((vec4(1.0, 0.0, 1.0, 0.0))[1], (vec4(1.0, 0.0, 1.0, 0.0))[1])), _GLF_IDENTITY((vec4(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(vec3(-724.655, -9.5, -538.247).s))), 1.0, 0.0)), ((vec4(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(vec3(-724.655, -9.5, -538.247).s))), 1.0, 0.0))) * mat4(1.0))[2], _GLF_FUZZED(_GLF_IDENTITY(0.5, mix(float(0.5), float(_GLF_FUZZED(2.1)), bool(false))))), bvec4(true, true, true, false))))[3], max((_GLF_IDENTITY(vec4(1.0, 0.0, 1.0, 0.0), mix(vec4(_GLF_FUZZED(-330.739), _GLF_FUZZED((+ -89.40)), _GLF_FUZZED(_GLF_IDENTITY(float(171371u), (false ? _GLF_FUZZED(floor(96.24)) : float(171371u)))), (vec4(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8.2)))))[3]), vec4((vec4(1.0, 0.0, 1.0, 0.0))[0], _GLF_IDENTITY((vec4(1.0, 0.0, 1.0, 0.0))[1], max((vec4(1.0, 0.0, 1.0, 0.0))[1], (vec4(1.0, 0.0, 1.0, 0.0))[1])), _GLF_IDENTITY((vec4(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(vec3(-724.655, -9.5, -538.247).s))), 1.0, 0.0)), ((vec4(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(vec3(-724.655, -9.5, -538.247).s))), 1.0, 0.0))) * mat4(1.0))[2], _GLF_FUZZED(_GLF_IDENTITY(0.5, mix(float(0.5), float(_GLF_FUZZED(2.1)), bool(false))))), bvec4(true, true, true, false))))[3], (_GLF_IDENTITY(vec4(1.0, 0.0, 1.0, 0.0), mix(vec4(_GLF_FUZZED(-330.739), _GLF_FUZZED((+ -89.40)), _GLF_FUZZED(_GLF_IDENTITY(float(171371u), (false ? _GLF_FUZZED(floor(96.24)) : float(171371u)))), (vec4(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8.2)))))[3]), vec4((vec4(1.0, 0.0, 1.0, 0.0))[0], _GLF_IDENTITY((vec4(1.0, 0.0, 1.0, 0.0))[1], max((vec4(1.0, 0.0, 1.0, 0.0))[1], (vec4(1.0, 0.0, 1.0, 0.0))[1])), _GLF_IDENTITY((vec4(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(vec3(-724.655, -9.5, -538.247).s))), 1.0, 0.0)), ((vec4(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(vec3(-724.655, -9.5, -538.247).s))), 1.0, 0.0))) * mat4(1.0))[2], _GLF_FUZZED(_GLF_IDENTITY(0.5, mix(float(0.5), float(_GLF_FUZZED(2.1)), bool(false))))), bvec4(true, true, true, false))))[3]))), vec4(_GLF_FUZZED((-479.891 * -5.0)), _GLF_FUZZED((+ 2.5)), _GLF_FUZZED(8631.9447), _GLF_FUZZED(547.527)), bvec4(false, false, false, false)))), (dot(vec4(0.0, sqrt(1.0), 0.0, 1.0), _GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0, 0.0, 1.0, 0.0), mix(vec4(_GLF_FUZZED(-330.739), _GLF_FUZZED((+ -89.40)), _GLF_FUZZED(_GLF_IDENTITY(float(171371u), (false ? _GLF_FUZZED(floor(96.24)) : float(171371u)))), (vec4(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8.2)))))[3]), vec4((vec4(1.0, 0.0, 1.0, 0.0))[0], _GLF_IDENTITY((vec4(1.0, 0.0, 1.0, 0.0))[1], max((vec4(1.0, 0.0, 1.0, 0.0))[1], (vec4(1.0, 0.0, 1.0, 0.0))[1])), _GLF_IDENTITY((vec4(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(vec3(-724.655, -9.5, -538.247).s))), 1.0, 0.0)), ((vec4(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(vec3(-724.655, -9.5, -538.247).s))), 1.0, 0.0))) * mat4(1.0))[2], _GLF_FUZZED(_GLF_IDENTITY(0.5, mix(float(0.5), float(_GLF_FUZZED(2.1)), bool(false))))), bvec4(true, true, true, false))), mix(vec4((_GLF_IDENTITY(vec4(1.0, 0.0, 1.0, 0.0), mix(vec4(_GLF_FUZZED(-330.739), _GLF_FUZZED((+ -89.40)), _GLF_FUZZED(_GLF_IDENTITY(float(171371u), (false ? _GLF_FUZZED(floor(96.24)) : float(171371u)))), (vec4(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8.2)))))[3]), vec4((vec4(1.0, 0.0, 1.0, 0.0))[0], _GLF_IDENTITY((vec4(1.0, 0.0, 1.0, 0.0))[1], max((vec4(1.0, 0.0, 1.0, 0.0))[1], (vec4(1.0, 0.0, 1.0, 0.0))[1])), _GLF_IDENTITY((vec4(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(vec3(-724.655, -9.5, -538.247).s))), 1.0, 0.0)), ((vec4(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(vec3(-724.655, -9.5, -538.247).s))), 1.0, 0.0))) * mat4(1.0))[2], _GLF_FUZZED(_GLF_IDENTITY(0.5, mix(float(0.5), float(_GLF_FUZZED(2.1)), bool(false))))), bvec4(true, true, true, false))))[0], (_GLF_IDENTITY(vec4(1.0, 0.0, 1.0, 0.0), mix(vec4(_GLF_FUZZED(-330.739), _GLF_FUZZED((+ -89.40)), _GLF_FUZZED(_GLF_IDENTITY(float(171371u), (false ? _GLF_FUZZED(floor(96.24)) : float(171371u)))), (vec4(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8.2)))))[3]), vec4((vec4(1.0, 0.0, 1.0, 0.0))[0], _GLF_IDENTITY((vec4(1.0, 0.0, 1.0, 0.0))[1], max((vec4(1.0, 0.0, 1.0, 0.0))[1], (vec4(1.0, 0.0, 1.0, 0.0))[1])), _GLF_IDENTITY((vec4(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(vec3(-724.655, -9.5, -538.247).s))), 1.0, 0.0)), ((vec4(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(vec3(-724.655, -9.5, -538.247).s))), 1.0, 0.0))) * mat4(1.0))[2], _GLF_FUZZED(_GLF_IDENTITY(0.5, mix(float(0.5), float(_GLF_FUZZED(2.1)), bool(false))))), bvec4(true, true, true, false))))[1], (_GLF_IDENTITY(vec4(1.0, 0.0, 1.0, 0.0), mix(vec4(_GLF_FUZZED(-330.739), _GLF_FUZZED((+ -89.40)), _GLF_FUZZED(_GLF_IDENTITY(float(171371u), (false ? _GLF_FUZZED(floor(96.24)) : float(171371u)))), (vec4(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8.2)))))[3]), vec4((vec4(1.0, 0.0, 1.0, 0.0))[0], _GLF_IDENTITY((vec4(1.0, 0.0, 1.0, 0.0))[1], max((vec4(1.0, 0.0, 1.0, 0.0))[1], (vec4(1.0, 0.0, 1.0, 0.0))[1])), _GLF_IDENTITY((vec4(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(vec3(-724.655, -9.5, -538.247).s))), 1.0, 0.0)), ((vec4(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(vec3(-724.655, -9.5, -538.247).s))), 1.0, 0.0))) * mat4(1.0))[2], _GLF_FUZZED(_GLF_IDENTITY(0.5, mix(float(0.5), float(_GLF_FUZZED(2.1)), bool(false))))), bvec4(true, true, true, false))))[2], _GLF_IDENTITY((_GLF_IDENTITY(vec4(1.0, 0.0, 1.0, 0.0), mix(vec4(_GLF_FUZZED(-330.739), _GLF_FUZZED((+ -89.40)), _GLF_FUZZED(_GLF_IDENTITY(float(171371u), (false ? _GLF_FUZZED(floor(96.24)) : float(171371u)))), (vec4(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8.2)))))[3]), vec4((vec4(1.0, 0.0, 1.0, 0.0))[0], _GLF_IDENTITY((vec4(1.0, 0.0, 1.0, 0.0))[1], max((vec4(1.0, 0.0, 1.0, 0.0))[1], (vec4(1.0, 0.0, 1.0, 0.0))[1])), _GLF_IDENTITY((vec4(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(vec3(-724.655, -9.5, -538.247).s))), 1.0, 0.0)), ((vec4(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(vec3(-724.655, -9.5, -538.247).s))), 1.0, 0.0))) * mat4(1.0))[2], _GLF_FUZZED(_GLF_IDENTITY(0.5, mix(float(0.5), float(_GLF_FUZZED(2.1)), bool(false))))), bvec4(true, true, true, false))))[3], max((_GLF_IDENTITY(vec4(1.0, 0.0, 1.0, 0.0), mix(vec4(_GLF_FUZZED(-330.739), _GLF_FUZZED((+ -89.40)), _GLF_FUZZED(_GLF_IDENTITY(float(171371u), (false ? _GLF_FUZZED(floor(96.24)) : float(171371u)))), (vec4(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8.2)))))[3]), vec4((vec4(1.0, 0.0, 1.0, 0.0))[0], _GLF_IDENTITY((vec4(1.0, 0.0, 1.0, 0.0))[1], max((vec4(1.0, 0.0, 1.0, 0.0))[1], (vec4(1.0, 0.0, 1.0, 0.0))[1])), _GLF_IDENTITY((vec4(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(vec3(-724.655, -9.5, -538.247).s))), 1.0, 0.0)), ((vec4(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(vec3(-724.655, -9.5, -538.247).s))), 1.0, 0.0))) * mat4(1.0))[2], _GLF_FUZZED(_GLF_IDENTITY(0.5, mix(float(0.5), float(_GLF_FUZZED(2.1)), bool(false))))), bvec4(true, true, true, false))))[3], (_GLF_IDENTITY(vec4(1.0, 0.0, 1.0, 0.0), mix(vec4(_GLF_FUZZED(-330.739), _GLF_FUZZED((+ -89.40)), _GLF_FUZZED(_GLF_IDENTITY(float(171371u), (false ? _GLF_FUZZED(floor(96.24)) : float(171371u)))), (vec4(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8.2)))))[3]), vec4((vec4(1.0, 0.0, 1.0, 0.0))[0], _GLF_IDENTITY((vec4(1.0, 0.0, 1.0, 0.0))[1], max((vec4(1.0, 0.0, 1.0, 0.0))[1], (vec4(1.0, 0.0, 1.0, 0.0))[1])), _GLF_IDENTITY((vec4(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(vec3(-724.655, -9.5, -538.247).s))), 1.0, 0.0)), ((vec4(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(vec3(-724.655, -9.5, -538.247).s))), 1.0, 0.0))) * mat4(1.0))[2], _GLF_FUZZED(_GLF_IDENTITY(0.5, mix(float(0.5), float(_GLF_FUZZED(2.1)), bool(false))))), bvec4(true, true, true, false))))[3]))), vec4(_GLF_FUZZED((-479.891 * -5.0)), _GLF_FUZZED((+ 2.5)), _GLF_FUZZED(8631.9447), _GLF_FUZZED(547.527)), bvec4(false, false, false, false))))) / 1.0))), dot(vec4(0.0, sqrt(1.0), 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))), 0.0, sqrt(1.0), 0.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)))), 0.0, 1.0)), sqrt(1.0), 1.0, abs(_GLF_IDENTITY(0.0, max(0.0, 0.0))), 0.0, 0.0, 0.0, 1.0))))) || false))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(abs(vec3(98.63, -6.6, 41.48)[2])), (_GLF_FUZZED(abs(vec3(98.63, -6.6, 41.48)[2]))) * sqrt(1.0)) : injectionSwitch.y)))))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y), true && ((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, _GLF_IDENTITY(true, bool(bvec3(true, false, false))))))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, bool(bvec3(true, false, false))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))))))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     return;
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))), true), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))), true), false))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))), true), false)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))), true), false)))), true))))), false, false))))), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))), true), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec3(_GLF_DEAD(false), true, false))), true), false))), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, true, false)))))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))), true), false)))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, true, false)))))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))), true), false)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, true, false)))))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))), true), false)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))), true), false)))), true))))), false, false))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)), ! (! (_GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)), (bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))) || false))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false)))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (1u ^ 1u))) ^ 0u))))), max(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(0u, 0u, 0u)))))).x, 0u + (gl_WorkGroupSize.x));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 0.0, exp(0.0), 1.0, 1.0, 0.0)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * _GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * (_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-4.6), _GLF_FUZZED(-0.3)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))))))) - vec2(0.0, 0.0)).y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * _GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * (_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-4.6), _GLF_FUZZED(-0.3)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))))))) - vec2(0.0, 0.0)).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * _GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * (_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-4.6), _GLF_FUZZED(-0.3)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))))))) - vec2(0.0, 0.0)).y)) && true)) && true))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))) && true)))))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.9), _GLF_FUZZED(831.888)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), injectionSwitch, injectionSwitch)).y, false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), false))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  return;
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) ^ (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))), uint(_GLF_IDENTITY(uvec2(~ (subgroup_size), 1u), uvec2(uvec2(uvec2(~ (subgroup_size), 1u))))))))) / _GLF_IDENTITY(1u, _GLF_IDENTITY((1u) - ((0u & 9547u) << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), uint(uint(uint(6u)))))), ((1u) - ((0u & 9547u) << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), uint(uint(uint(6u))))))) | (52030u & 0u))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), false)), bool(bool(bool(bvec4(false, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (injectionSwitch)).x > injectionSwitch.y)), false))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && ((false)))), bool(bvec2(! (_GLF_IDENTITY((false), true && ((false)))), false))))))), true, false, false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, sqrt(sqrt(vec2(0.0, 0.0))) + (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y))))), true)))), bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y))))))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, ~ (~ (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base)), (_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base))) ^ 0u)))) + subgroup_local_id))), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u), (_GLF_IDENTITY(0u, (0u) - 0u)) | (0u >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (true ? uint(0u) : _GLF_FUZZED(num_workgroup))))))) >> 0u) | 0u) | (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + subgroup_base + subgroup_local_id));
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, log(1.0) + (injectionSwitch.y)))), false || (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, exp(0.0), 1.0, 0.0))).y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, log(1.0) + (injectionSwitch.y))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-8.7)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read = 0;
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)) ^ 0u, clamp((uint(1)) ^ 0u, _GLF_IDENTITY((uint(1)) ^ 0u, ((uint(1)) ^ 0u) << 0u), (uint(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)) << 0, ((_GLF_IDENTITY(1, (1) / 1)) << _GLF_IDENTITY(0, (_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0, clamp(0, 0, 0)) : _GLF_FUZZED((35644 + 54644))))) >> 0)))) ^ _GLF_IDENTITY(0u, (0u << _GLF_IDENTITY(uint(6u), uint(6u))) + (0u)))))) | (uint(1))), 4, _GLF_IDENTITY(64, (64) >> 0), _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec2(4, 1)), _GLF_IDENTITY(int(ivec3(int(ivec2(4, 1)), 0, 0)), (int(ivec3(int(ivec2(4, 1)), 0, 0))) << 0))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY((subgroup_local_id % 2), uint(_GLF_IDENTITY(uvec2((subgroup_local_id % 2), 1u), min(uvec2((subgroup_local_id % 2), 1u), uvec2((subgroup_local_id % _GLF_IDENTITY(2, max(2, _GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) / 1)) | (2))))), 1u))))) == 0)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * _GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch)))).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, true)))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))) && true), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   _GLF_IDENTITY(read = atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, 1u * (virtual_gid))], min(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) * 1u), buf[virtual_gid])), 4, 64, 2), (read = atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, 1u * (virtual_gid))], min(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) * 1u), buf[virtual_gid])), 4, 64, 2)) | 0u);
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true))), true, false))))))))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, false)))))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), (false || (true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.y) - 0.0)) + 0.0), injectionSwitch.y))))))
          barrier();
         barrier();
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec4(! (false), false, true, false)))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (false) && true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, false)))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (false) || false));
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       return;
      }
     return;
    }
   read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(-84763) : 4)), 64, 2);
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ! (! ((false)))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((false), ! (! ((false)))), false, false), false)))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ! (! ((false)))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((false), ! (! ((false)))), false, false), false))))) && true))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), false || (! (_GLF_IDENTITY(false, (false) && true)))))), (false) && true))), ! (! (_GLF_IDENTITY(bool(bvec4(false, false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (! (false))), (_GLF_IDENTITY(! (false), true && (! (false)))) && true))), _GLF_IDENTITY(false, (false) && true))), (bool(bvec4(false, false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (! (false))), (_GLF_IDENTITY(! (false), true && (! (false)))) && true))), _GLF_IDENTITY(false, (false) && true)))) && true)))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
