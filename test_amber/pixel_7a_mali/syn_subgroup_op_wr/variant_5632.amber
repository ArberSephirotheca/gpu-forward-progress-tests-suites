#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(9191.8484), float(mat2x3(_GLF_IDENTITY(_GLF_FUZZED(9191.8484), mix(float(_GLF_FUZZED(9191.8484)), float(_GLF_FUZZED(6.8)), bool(false))), 0.0, round(length(normalize(vec2(1.0, 1.0)))), sin(0.0), 1.0, 0.0))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(488.957)), bvec2(true, false)))) / vec2(1.0, 1.0)).x < injectionSwitch.y)) && _GLF_IDENTITY((false), ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), ! (! (false || ((false))))))), ((_GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), ! (! _GLF_IDENTITY((false || ((false))), bool(bvec3((false || ((false))), true, false)))))))) && true), ! (! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || false), _GLF_IDENTITY(false || _GLF_IDENTITY(((false)), _GLF_IDENTITY((((false))) && true, ! _GLF_IDENTITY((! (_GLF_IDENTITY((((false))) && true, ! (! ((((false))) && true))))), false || ((! (_GLF_IDENTITY((((false))) && true, ! (! ((((false))) && true))))))))), _GLF_IDENTITY(! (! (false || ((false)))), _GLF_IDENTITY(bool(bvec4(! (! (false || ((false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true && (bool(bvec4(! (! (false || ((false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || false), _GLF_IDENTITY(false || _GLF_IDENTITY(((false)), _GLF_IDENTITY((((false))) && true, ! _GLF_IDENTITY((! (_GLF_IDENTITY((((false))) && true, ! (! ((((false))) && true))))), false || ((! (_GLF_IDENTITY((((false))) && true, ! (! ((((false))) && true))))))))), _GLF_IDENTITY(! (! (false || ((false)))), _GLF_IDENTITY(bool(bvec4(! (! (false || ((false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true && (bool(bvec4(! (! (false || ((false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))))), _GLF_IDENTITY(((_GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), ! (_GLF_IDENTITY(! (false || ((false))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false || ((false)))), (! (! (false || ((false))))) || false)), (! (_GLF_IDENTITY(! (! (false || ((false)))), (! (! (false || ((false))))) || false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true, false || (((_GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), ! _GLF_IDENTITY((! (false || ((false)))), bool(bvec4((! (false || ((false)))), true, false, false))))))) && true))))))), (_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), false || ((false)))))), _GLF_IDENTITY(false || (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) || false)), bool(bvec4(! ((false)), false, false, false)))))), ! (! (false || ((false))))))), ((_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), true)))), _GLF_IDENTITY(_GLF_IDENTITY(false || (_GLF_IDENTITY((false), false || ((false)))), ! (_GLF_IDENTITY(! (false || ((false))), (! (false || ((false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(false || (_GLF_IDENTITY((false), false || ((false)))), ! (_GLF_IDENTITY(! (false || ((false))), _GLF_IDENTITY((! (false || ((false)))), false || (_GLF_IDENTITY((! (false || ((false)))), ! (! ((! (false || ((false))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))) && _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, false || (true)))))), bool(bvec4((! _GLF_IDENTITY((_GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), ! (! (false || (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ! (! ((false))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((false), ! (! ((false)))))))))))))))))), ((_GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), ! (! (false || ((false)))))))) && true)), true, true, true)))) || _GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(9191.8484), float(mat2x3(_GLF_IDENTITY(_GLF_FUZZED(9191.8484), mix(float(_GLF_FUZZED(9191.8484)), float(_GLF_FUZZED(6.8)), bool(false))), 0.0, round(length(normalize(vec2(1.0, 1.0)))), sin(0.0), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0))), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0))[0], _GLF_FUZZED(488.957)), bvec2(true, false)))) / vec2(1.0, 1.0)).x < injectionSwitch.y)) && _GLF_IDENTITY((false), ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), ! (! (false || ((false))))))), ((_GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), ! (! (false || ((false)))))))) && true), ((_GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false || ((false)), bool(_GLF_IDENTITY(bvec3(false || ((false)), true, true), bvec3(bvec3(bvec3(false || ((false)), true, true))))))), bool(bvec3((false || ((false))), _GLF_IDENTITY(true, ! (! (true))), false)))))))) && true), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY((false), _GLF_IDENTITY(false || _GLF_IDENTITY(((false)), _GLF_IDENTITY((((false))) && true, ! (! (_GLF_IDENTITY((((false))) && true, ! (! ((((false))) && true))))))), ! (! (false || ((false))))))), _GLF_IDENTITY(((_GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), ! (_GLF_IDENTITY(! (false || ((false))), ! (_GLF_IDENTITY(! (! (false || ((false)))), (! (! (false || ((false))))) || false)))))))) && true, false || (((_GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), ! _GLF_IDENTITY((! (false || ((false)))), bool(bvec4((! (false || ((false)))), true, false, false))))))) && true)))), (_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY((false), _GLF_IDENTITY(false || _GLF_IDENTITY(((false)), _GLF_IDENTITY((((false))) && true, ! (! (_GLF_IDENTITY((((false))) && true, ! (! ((((false))) && true))))))), ! (! (false || ((false))))))), _GLF_IDENTITY(((_GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), ! (_GLF_IDENTITY(! (false || ((false))), ! (_GLF_IDENTITY(! (! (false || ((false)))), (! (! (false || ((false))))) || false)))))))) && true, false || (((_GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), ! _GLF_IDENTITY((! (false || ((false)))), bool(bvec4((! (false || ((false)))), true, false, false))))))) && true)))), (! (! _GLF_IDENTITY((_GLF_IDENTITY((false), _GLF_IDENTITY(false || _GLF_IDENTITY(((false)), _GLF_IDENTITY((((false))) && true, ! (! (_GLF_IDENTITY((((false))) && true, ! (! ((((false))) && true))))))), ! (! (false || ((false))))))), _GLF_IDENTITY(((_GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (false || ((false))), ! (_GLF_IDENTITY(! (! (false || (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec4(_GLF_IDENTITY(! ((false)), (! ((false))) || false), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), (! (_GLF_IDENTITY(! (false || ((false))), false || (! (false || ((false))))))) || false)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! (false || ((false))), ! (_GLF_IDENTITY(! (! (false || (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec4(_GLF_IDENTITY(! ((false)), (! ((false))) || false), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), (! (_GLF_IDENTITY(! (false || ((false))), false || (! (false || ((false))))))) || false)))), (_GLF_IDENTITY((_GLF_IDENTITY(! (false || ((false))), ! (_GLF_IDENTITY(! (! (false || (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec4(_GLF_IDENTITY(! ((false)), (! ((false))) || false), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), (! (_GLF_IDENTITY(! (false || ((false))), false || (! (false || ((false))))))) || false)))), bool(bool((_GLF_IDENTITY(! (false || ((false))), ! (_GLF_IDENTITY(! (! (false || (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec4(_GLF_IDENTITY(! ((false)), (! ((false))) || false), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), (! (_GLF_IDENTITY(! (false || ((false))), false || (! (false || ((false))))))) || false)))))))) && true), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! (false || ((false))), ! (_GLF_IDENTITY(! (! (false || (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec4(_GLF_IDENTITY(! ((false)), (! ((false))) || false), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), (! (_GLF_IDENTITY(! (false || ((false))), false || (! (false || ((false))))))) || false)))), (_GLF_IDENTITY((_GLF_IDENTITY(! (false || ((false))), ! (_GLF_IDENTITY(! (! (false || (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec4(_GLF_IDENTITY(! ((false)), (! ((false))) || false), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), (! (_GLF_IDENTITY(! (false || ((false))), false || (! (false || ((false))))))) || false)))), bool(bool((_GLF_IDENTITY(! (false || ((false))), ! (_GLF_IDENTITY(! (! (false || (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec4(_GLF_IDENTITY(! ((false)), (! ((false))) || false), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), (! (_GLF_IDENTITY(! (false || ((false))), false || (! (false || ((false))))))) || false)))))))) && true), false, true)))))))))) && true, false || (((_GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), ! _GLF_IDENTITY((! (false || _GLF_IDENTITY(((false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(((false)), ! (! (((false))))))))), bool(bvec4((! (false || ((false)))), true, false, false))))))) && true))))) && true)) && true)))), (_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), false || ((false)))))), _GLF_IDENTITY(false || _GLF_IDENTITY((_GLF_IDENTITY((false), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((false)), bool(bvec4(! ((false)), false, false, false)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((false)), bool(bvec4(! ((false)), false, false, false)))), bool(bvec2(! (_GLF_IDENTITY(! ((false)), bool(bvec4(! ((false)), false, false, false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY((false), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((false)), bool(bvec4(! ((false)), false, false, false)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((false)), bool(bvec4(! ((false)), false, false, false)))), bool(bvec2(! (_GLF_IDENTITY(! ((false)), bool(bvec4(! ((false)), false, false, false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec4((_GLF_IDENTITY((false), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((false)), bool(bvec4(! ((false)), false, false, false)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((false)), bool(bvec4(! ((false)), false, false, false)))), bool(bvec2(! (_GLF_IDENTITY(! ((false)), bool(bvec4(! ((false)), false, false, false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (! (false || ((false))))))), ((_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), true)))), _GLF_IDENTITY(false || (_GLF_IDENTITY((false), false || ((false)))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (false || ((false))), (! (false || ((false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY(! (false || ((false))), (! (false || ((false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))) && true)), bool(bvec4((! _GLF_IDENTITY((_GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), ! (! (false || (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, ! (! (false)))))))), ! _GLF_IDENTITY((! (bool(_GLF_IDENTITY((false), ! (! ((false))))))), ((! (bool(_GLF_IDENTITY((false), ! (! ((false)))))))) || false)))))))))), ((_GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), ! (! (false || ((false)))))))) && true)), true, true, true)))) || _GLF_IDENTITY(false, ! (! (false))))), false)), true && (bool(bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(9191.8484), float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(9191.8484), (_GLF_FUZZED(9191.8484)) / 1.0), mix(float(_GLF_FUZZED(9191.8484)), float(_GLF_FUZZED(6.8)), bool(false))), 0.0, round(length(normalize(vec2(1.0, 1.0)))), sin(0.0), 1.0, 0.0))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(488.957)), bvec2(true, false)))) / vec2(1.0, 1.0)).x < injectionSwitch.y)) && _GLF_IDENTITY((false), ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), ! (! (false || ((_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), ((_GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), ! (! _GLF_IDENTITY((false || ((false))), bool(bvec3((false || ((false))), true, false)))))))) && true), ! (! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY((false), _GLF_IDENTITY(false || _GLF_IDENTITY(((false)), _GLF_IDENTITY((((false))) && true, ! (! (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY((false), ((false)) || false)), false || ((_GLF_IDENTITY((false), ((false)) || false))))) && true, ! (! ((((false))) && true))))))), ! (! (false || ((false))))))), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), ! (_GLF_IDENTITY(! (false || ((false))), ! (_GLF_IDENTITY(! (! (false || ((false)))), (! (! (false || ((false))))) || false)))))))), (((_GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), ! (_GLF_IDENTITY(! (false || ((false))), ! (_GLF_IDENTITY(! (! (false || ((false)))), (! (! (false || ((false))))) || false))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, _GLF_IDENTITY(false || (((_GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), ! _GLF_IDENTITY((! (false || ((false)))), bool(bvec4((! (false || ((false)))), true, false, false))))))) && true), (false || (((_GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), ! _GLF_IDENTITY((! (false || ((false)))), bool(bvec4((! (false || ((false)))), true, false, false))))))) && true)) && true)))), false || ((! _GLF_IDENTITY((_GLF_IDENTITY((false), _GLF_IDENTITY(false || _GLF_IDENTITY(((false)), _GLF_IDENTITY((((false))) && true, ! (! (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY((false), ((false)) || false)), false || ((_GLF_IDENTITY((false), ((false)) || false))))) && true, ! (! ((((false))) && true))))))), ! (! (false || ((false))))))), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), ! (_GLF_IDENTITY(! (false || ((false))), ! (_GLF_IDENTITY(! (! (false || ((false)))), (! (! (false || ((false))))) || false)))))))), (((_GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), ! (_GLF_IDENTITY(! (false || ((false))), ! (_GLF_IDENTITY(! (! (false || ((false)))), (! (! (false || ((false))))) || false))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, _GLF_IDENTITY(false || (((_GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), ! _GLF_IDENTITY((! (false || ((false)))), bool(bvec4((! (false || ((false)))), true, false, false))))))) && true), (false || (((_GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), ! _GLF_IDENTITY((! (false || ((false)))), bool(bvec4((! (false || ((false)))), true, false, false))))))) && true)) && true))))))))), (_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), false || ((false)))))), _GLF_IDENTITY(false || (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec4(! ((false)), false, false, false)))))), ! (! (false || ((false)))))), (_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), _GLF_IDENTITY(false, (false) && true) || ((false)))))), _GLF_IDENTITY(false || (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec4(! ((false)), false, false, false)))))), ! (! (false || ((false))))))) && true)), ((_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), true)))), _GLF_IDENTITY(false || (_GLF_IDENTITY((false), false || ((false)))), ! (_GLF_IDENTITY(! (false || ((false))), (! (false || ((false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)), bool(bvec4((! _GLF_IDENTITY((_GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), ! (! (false || (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), _GLF_IDENTITY(false, (false) && true)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ! (! ((false))))), ! (! (bool(_GLF_IDENTITY((false), ! (! ((false)))))))))))))))), ((_GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), ! (! (false || ((false)))))))) && true)), true, true, true)))) || _GLF_IDENTITY(false, ! (! (false))))), false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false)))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))) && true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              return;
             barrier();
            }
           return;
           if(_GLF_DEAD(false))
            barrier();
          }
         return;
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
          barrier();
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))) && true))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))), 0.0 + (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), min(min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0)))), float(_GLF_FUZZED(-5904.8852)), bool(false))), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0)))), float(_GLF_FUZZED(-5904.8852)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0)))), float(_GLF_FUZZED(-5904.8852)), bool(false)))), (false ? _GLF_FUZZED(93.16) : _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0)))), float(_GLF_FUZZED(-5904.8852)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0)))), float(_GLF_FUZZED(-5904.8852)), bool(false)))), (false ? _GLF_FUZZED(cos(-7.7)) : min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0)))), float(_GLF_FUZZED(-5904.8852)), _GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), true && (bool(false)))))))), _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0)))), clamp(float(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0)))), float(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0)))), float(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0)))))), float(_GLF_FUZZED(-5904.8852)), bool(false)))))))))) - _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-501.526)), float(0.0), bool(true)))) > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0))), injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> _GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(mat4x2(0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 0.0, 1.0))))), 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0))), 0.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(0.0, abs(1.0)), vec2(vec4(vec2(0.0, abs(1.0)), 0.0, 1.0))), vec2(1.0, 0.0)), dot(vec2(0.0, abs(1.0)), vec2(1.0, 0.0))), 0.0, 0.0, 0.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(ldexp(-2137.6483, -96633)) : 0.0)), 0.0))), mat4(1.0) * (mat3x4(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, abs(1.0)), vec2(1.0, 0.0)), dot(vec2(0.0, _GLF_IDENTITY(abs(1.0), min(abs(1.0), abs(1.0)))), vec2(1.0, 0.0))), 0.0, 0.0, 0.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0)))))), (true ? _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(mat3(1.0) * (vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY((mat3(1.0) * (vec3(0.0, 0.0, 1.0))) * mat3(_GLF_ONE(1.0, injectionSwitch.y)), mix(vec3(((mat3(1.0) * (vec3(0.0, 0.0, 1.0))) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))[0], ((mat3(1.0) * (vec3(0.0, 0.0, 1.0))) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))[1], ((mat3(1.0) * (vec3(0.0, 0.0, 1.0))) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))[2]), vec3(_GLF_FUZZED(6.6), _GLF_FUZZED(-426.755), _GLF_FUZZED(-4.7)), bvec3(false, false, false))))), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, abs(1.0)), vec2(1.0, 0.0)), dot(vec2(0.0, abs(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((- 0.9))), float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), bool(true))))), vec2(1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(fma(length(-1905.0358), (- -6391.4393), -2.1)) : 0.0))))), 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat3(0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(determinant(mat3(0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0)), length(0.0), 1.0), (true ? vec3(determinant(mat3(0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0)), length(0.0), 1.0) : _GLF_FUZZED(vec3(-2.4, 6.9, 591.207))))), (float(_GLF_IDENTITY(vec3(determinant(mat3(0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0)), length(0.0), 1.0), (true ? vec3(determinant(mat3(0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0)), length(0.0), 1.0) : _GLF_FUZZED(vec3(-2.4, 6.9, 591.207)))))) * 1.0))), mat4(1.0) * (mat3x4(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0 * (_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))))), 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, abs(1.0)), vec2(1.0, 0.0)), dot(vec2(0.0, abs(1.0)), vec2(1.0, 0.0))), (false ? _GLF_FUZZED(8393.1083) : _GLF_IDENTITY(dot(vec2(0.0, abs(1.0)), vec2(1.0, 0.0)), dot(vec2(0.0, abs(1.0)), vec2(1.0, 0.0))))), 0.0, 0.0, 0.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0)))))), clamp(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(mat3(1.0) * (vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY((mat3(1.0) * (vec3(0.0, 0.0, 1.0))) * mat3(_GLF_ONE(1.0, injectionSwitch.y)), mix(vec3(((mat3(1.0) * (vec3(0.0, 0.0, 1.0))) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))[0], ((mat3(1.0) * (vec3(0.0, 0.0, 1.0))) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))[1], ((mat3(1.0) * (vec3(0.0, 0.0, 1.0))) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))[2]), vec3(_GLF_FUZZED(6.6), _GLF_FUZZED(-426.755), _GLF_FUZZED(-4.7)), bvec3(false, false, false))))), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, abs(1.0)), vec2(1.0, 0.0)), dot(vec2(0.0, abs(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((- 0.9))), float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), bool(true))))), vec2(1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(fma(length(-1905.0358), (- -6391.4393), -2.1)) : 0.0))))), 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat3(0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(determinant(mat3(0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0)), length(0.0), 1.0), (true ? vec3(determinant(mat3(0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0)), length(0.0), 1.0) : _GLF_FUZZED(vec3(-2.4, 6.9, 591.207))))), (float(_GLF_IDENTITY(vec3(determinant(mat3(0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0)), length(0.0), 1.0), (true ? vec3(determinant(mat3(0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0)), length(0.0), 1.0) : _GLF_FUZZED(vec3(-2.4, 6.9, 591.207)))))) * 1.0))), mat4(1.0) * (mat3x4(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0 * (_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))))), 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, abs(1.0)), vec2(1.0, 0.0)), dot(vec2(0.0, abs(1.0)), vec2(1.0, 0.0))), (false ? _GLF_FUZZED(8393.1083) : _GLF_IDENTITY(dot(vec2(0.0, abs(1.0)), vec2(1.0, 0.0)), dot(vec2(0.0, abs(1.0)), vec2(1.0, 0.0))))), 0.0, 0.0, 0.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0)))))), vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(mat3(1.0) * (vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY((mat3(1.0) * (vec3(0.0, 0.0, 1.0))) * mat3(_GLF_ONE(1.0, injectionSwitch.y)), mix(vec3(((mat3(1.0) * (vec3(0.0, 0.0, 1.0))) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))[0], ((mat3(1.0) * (vec3(0.0, 0.0, 1.0))) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))[1], ((mat3(1.0) * (vec3(0.0, 0.0, 1.0))) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))[2]), vec3(_GLF_FUZZED(6.6), _GLF_FUZZED(-426.755), _GLF_FUZZED(-4.7)), bvec3(false, false, false))))), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, abs(1.0)), vec2(1.0, 0.0)), dot(vec2(0.0, abs(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((- 0.9))), float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), bool(true))))), vec2(1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(fma(length(-1905.0358), (- -6391.4393), -2.1)) : 0.0))))), 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat3(0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(determinant(mat3(0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0)), length(0.0), 1.0), (true ? vec3(determinant(mat3(0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0)), length(0.0), 1.0) : _GLF_FUZZED(vec3(-2.4, 6.9, 591.207))))), (float(_GLF_IDENTITY(vec3(determinant(mat3(0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0)), length(0.0), 1.0), (true ? vec3(determinant(mat3(0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0)), length(0.0), 1.0) : _GLF_FUZZED(vec3(-2.4, 6.9, 591.207)))))) * 1.0))), mat4(1.0) * (mat3x4(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0 * (_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))))), 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, abs(1.0)), vec2(1.0, 0.0)), dot(vec2(0.0, abs(1.0)), vec2(1.0, 0.0))), (false ? _GLF_FUZZED(8393.1083) : _GLF_IDENTITY(dot(vec2(0.0, abs(1.0)), vec2(1.0, 0.0)), dot(vec2(0.0, abs(1.0)), vec2(1.0, 0.0))))), 0.0, 0.0, 0.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0)))))), vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(mat3(1.0) * (vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY((mat3(1.0) * (vec3(0.0, 0.0, 1.0))) * mat3(_GLF_ONE(1.0, injectionSwitch.y)), mix(vec3(((mat3(1.0) * (vec3(0.0, 0.0, 1.0))) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))[0], ((mat3(1.0) * (vec3(0.0, 0.0, 1.0))) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))[1], ((mat3(1.0) * (vec3(0.0, 0.0, 1.0))) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))[2]), vec3(_GLF_FUZZED(6.6), _GLF_FUZZED(-426.755), _GLF_FUZZED(-4.7)), bvec3(false, false, false))))), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, abs(1.0)), vec2(1.0, 0.0)), dot(vec2(0.0, abs(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((- 0.9))), float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), bool(true))))), vec2(1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(fma(length(-1905.0358), (- -6391.4393), -2.1)) : 0.0))))), 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat3(0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(determinant(mat3(0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0)), length(0.0), 1.0), (true ? vec3(determinant(mat3(0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0)), length(0.0), 1.0) : _GLF_FUZZED(vec3(-2.4, 6.9, 591.207))))), (float(_GLF_IDENTITY(vec3(determinant(mat3(0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0)), length(0.0), 1.0), (true ? vec3(determinant(mat3(0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0)), length(0.0), 1.0) : _GLF_FUZZED(vec3(-2.4, 6.9, 591.207)))))) * 1.0))), mat4(1.0) * (mat3x4(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0 * (_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))))), 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, abs(1.0)), vec2(1.0, 0.0)), dot(vec2(0.0, abs(1.0)), vec2(1.0, 0.0))), (false ? _GLF_FUZZED(8393.1083) : _GLF_IDENTITY(dot(vec2(0.0, abs(1.0)), vec2(1.0, 0.0)), dot(vec2(0.0, abs(1.0)), vec2(1.0, 0.0))))), 0.0, 0.0, 0.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0)))))))) : _GLF_FUZZED(injectionSwitch)))).x, mix(float(_GLF_FUZZED(-526.953)), float(injectionSwitch.x), bool(true))))), ~ (~ (_GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0))), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, abs(1.0)), vec2(1.0, 0.0)), dot(vec2(0.0, abs(1.0)), vec2(1.0, 0.0))), 0.0, 0.0, 0.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) + 0.0), 1.0, 0.0, 0.0, 0.0))), mat4(1.0) * (mat3x4(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(0.0, abs(1.0)), (vec2(0.0, abs(1.0))) / vec2(1.0, 1.0)), vec2(1.0, 0.0)), dot(vec2(0.0, abs(1.0)), vec2(1.0, 0.0))), 0.0, 0.0, 0.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0)))))), (true ? vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, abs(1.0)), vec2(1.0, 0.0)), dot(vec2(0.0, _GLF_IDENTITY(abs(1.0), mix(float(abs(1.0)), float(_GLF_FUZZED(float((11429u / 131144u)))), bool(false)))), vec2(1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0))))))), 0.0, 0.0, 0.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 0.0))), mat4(1.0) * (mat3x4(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, abs(1.0)), vec2(1.0, 0.0)), dot(vec2(0.0, abs(1.0)), vec2(1.0, 0.0))), 0.0, 0.0, 0.0, determinant(mat3(0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0)))))) : _GLF_FUZZED(injectionSwitch)))).x, mix(float(_GLF_FUZZED(-526.953)), float(injectionSwitch.x), bool(true))))), (false ? _GLF_FUZZED(uvec3(41715u, _GLF_IDENTITY(39293u, clamp(_GLF_IDENTITY(39293u, (39293u) | 0u), _GLF_IDENTITY(39293u, uint(uvec2(39293u, 0u))), 39293u)), 109905u)) : uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, abs(1.0)), vec2(1.0, 0.0)), dot(vec2(0.0, abs(1.0)), vec2(1.0, 0.0))), 0.0, 0.0, 0.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0))), mat4(1.0) * (mat3x4(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, abs(1.0)), vec2(1.0, 0.0)), dot(vec2(0.0, abs(1.0)), vec2(1.0, 0.0))), mix(float(_GLF_FUZZED(-4628.4228)), float(_GLF_IDENTITY(dot(vec2(0.0, abs(1.0)), vec2(1.0, 0.0)), dot(vec2(0.0, abs(1.0)), vec2(1.0, 0.0)))), bool(true))), 0.0, 0.0, 0.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0)))))), (true ? vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-701.490)), bool(false))), 1.0)))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), (vec3(0.0, 0.0, 1.0)) / vec3(1.0, 1.0, 1.0)), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, abs(1.0)), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(0.0, abs(1.0)), vec2(1.0, 0.0)), (dot(vec2(0.0, abs(1.0)), vec2(1.0, 0.0))) * 1.0)), 0.0, 0.0, 0.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0))), mat4(1.0) * (mat3x4(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, abs(1.0)), vec2(1.0, 0.0)), dot(vec2(0.0, abs(1.0)), vec2(1.0, 0.0))), 0.0, 0.0, 0.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0)))))) : _GLF_FUZZED(injectionSwitch)))).x, mix(float(_GLF_FUZZED(-526.953)), float(injectionSwitch.x), bool(true))))))))))).x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1]))), max(vec2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1]))), vec2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1]))))), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))) * vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1]))), max(vec2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), mat2(1.0) * ((injectionSwitch) / vec2(1.0, 1.0))))))[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])), float(mat3x4(_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])), 1.0, 0.0, 1.0, 0.0, cos(0.0), 0.0, 0.0, abs(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))), vec2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))))) / vec2(1.0, 1.0))), _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))))), mix(vec2((vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))))))[0], (vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])), min(_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1]))))))), (vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))))) / vec2(1.0, 1.0))))[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(1380.0785), length(0.0) + (_GLF_FUZZED(1380.0785))), _GLF_FUZZED((- -2003.9557))), bvec2(false, false)))).y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), ! (! (bool(! ((injectionSwitch.x > injectionSwitch.y)))))))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false), _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((exp(-366.610) - vec2(-7.2, 0.2))) : injectionSwitch)), injectionSwitch), max(max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch), max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))) / sqrt(vec2(1.0, 1.0))), max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), ! (! _GLF_IDENTITY((bool((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0)), (vec2(mat2(injectionSwitch, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0))) + vec2(0.0, 0.0))))).y))), false || ((bool((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(55.37, 68.80)))), injectionSwitch)).x > injectionSwitch.y))))))))), false, true)))), false || (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), ! (! (! (false)))), false))), true && (! (false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), true, true, true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)))))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(bvec2(_GLF_DEAD(false), true)), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(bool(bvec2(_GLF_DEAD(false), true)), false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(bool(bvec2(_GLF_DEAD(false), true)), false, false)))))))), true && (bool(bvec3(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), bool(bvec3(bool(bvec2(_GLF_DEAD(false), true)), true, true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true)))), bool(bvec3(bool(bvec2(_GLF_DEAD(false), true)), true, true)))))))), false, false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y))))), true, false, true)))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (_GLF_IDENTITY(! (bool(bvec2(false, true))), false || (! (bool(bvec2(false, true)))))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))) && true))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)))).y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false))), true, false, false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))) && true)))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)), (injectionSwitch))) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) || false), true, false)), (bool(bvec3(_GLF_IDENTITY(false, (false) || false), true, false))) || false))))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-817.188)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint read = 0;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + (-11641 & 0)), (1) / 1), 1))) | (1)), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) / 1) << _GLF_IDENTITY(int(4), int(4)), (true ? 0 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), min(int(4), int(4))), int(4)) : _GLF_FUZZED(47805)))), 1, 1), (ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) / 1), 1))) | (1)), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) / 1) << _GLF_IDENTITY(int(4), int(4)), (true ? _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED((60468 % 81414)))))) << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) * 1), min(int(4), int(4))), int(4)) : _GLF_FUZZED(47805)))), 1, 1)) ^ ivec4(0, 0, _GLF_IDENTITY(0, (0) | (0)), 0))))), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-285.521)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY((subgroup_local_id % 2) == 0, bool(bvec3((subgroup_local_id % 2) == 0, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), _GLF_IDENTITY(! (! (bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), ! (! (! (! (bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! (bool(injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(! (! _GLF_IDENTITY((bool(injectionSwitch.x > injectionSwitch.y)), true && ((bool(injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY((bool(! (! (bool(injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec3((bool(! (! (bool(injectionSwitch.x > injectionSwitch.y))))), false, false), bvec3(bvec3(bvec3((bool(! (! (bool(injectionSwitch.x > injectionSwitch.y))))), false, false)))))) || false)))))))))) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   read = atomicLoad(buf[virtual_gid], 4, 64, 2);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-1.8, (false ? _GLF_FUZZED(6696.0654) : -1.8))), _GLF_FUZZED(vec4(89.10, 110.987, -6501.1917, 6.6).z)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(889.692), _GLF_FUZZED(6.9)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), min(_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(889.692), _GLF_FUZZED(6.9)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(889.692), _GLF_FUZZED(6.9)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(889.692), _GLF_FUZZED(6.9)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))).y)), true))).y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bool(bool(bool(_GLF_DEAD(false))))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! _GLF_IDENTITY((bool(_GLF_DEAD(false))), ! (! ((bool(_GLF_DEAD(false))))))))), _GLF_IDENTITY(bool(bool(bool(bool(_GLF_DEAD(false))))), false || (bool(bool(bool(bool(_GLF_DEAD(false))))))))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) - sin(0.0)), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) - sin(0.0)), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) - sin(0.0))), _GLF_IDENTITY(float(float(min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) - sin(0.0)), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) - sin(0.0))))), (false ? _GLF_FUZZED(2.5) : float(float(min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) - sin(0.0)), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) - sin(0.0))))))))) > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(9.8)))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || false)) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), true, false, _GLF_IDENTITY(true, (true) || false))))))))))))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), true, true)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)))))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))
          barrier();
         return;
        }
       return;
      }
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)))), ! (_GLF_IDENTITY(! (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))), ! (! (! (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) && true))))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bvec3(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true, false)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bvec3(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true, false))))) && true))))))) && true)), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), bool(bvec3(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true, false)))))))))) && true)), false, false)))))))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false, true && _GLF_IDENTITY(((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))) || false))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))))))))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-5648.4664) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(3499.4281)), bool(false)))))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         return;
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
        }
       return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true))))))
    return;
   read = atomicLoad(buf[virtual_gid], 4, 64, 2);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true))))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))) || false))))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) || false)))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), false, true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          return;
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ((_GLF_IDENTITY(false, true && (false)))) || false)))) && true)))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true), false, false))), false)))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true), false, false))), false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || _GLF_IDENTITY(((_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (false), false, true), bvec3(bvec4(bvec3(! (false), false, true), true))))))), (_GLF_IDENTITY(((_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (false), false, true), bvec3(bvec4(bvec3(! (false), false, true), true))))))), false || (((_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (false), false, true), bvec3(bvec4(bvec3(! (false), false, true), true)))))))))) && true)))))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
