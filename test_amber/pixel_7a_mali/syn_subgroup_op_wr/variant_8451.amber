#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u)).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) >> 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), (uint(_GLF_IDENTITY(7u, (false ? _GLF_FUZZED((subgroup_size)) : _GLF_IDENTITY(7u, (7u) << 0u))))) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(uvec2(uint(7u), 0u))), ~ (~ (uint(7u)))))) + (workgroup_size * workgroup_id));
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(true ? subgroup_id : _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) << 0u), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))) ? subgroup_id : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) << 0u), (true ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) << 0u) : _GLF_FUZZED(workgroup_id))), (_GLF_IDENTITY(true, ! (! (true))) ? subgroup_id : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) << 0u), (true ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) << 0u) : _GLF_FUZZED(workgroup_id)))) | 0u), 0u, 0u)), clamp(uint(uvec3(true ? subgroup_id : _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) << 0u), 0u, 0u)), uint(uvec3(true ? subgroup_id : _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) << 0u), _GLF_IDENTITY(0u, (0u) | (0u)), 0u)), uint(uvec3(true ? subgroup_id : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) << 0u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) << 0u))), _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), 0u)))))))) ^ (33146u & 0u)) * subgroup_size, (subgroup_id * subgroup_size) - 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u ^ (workgroup_base + subgroup_base))))) | (_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u))) + subgroup_base) | _GLF_IDENTITY((workgroup_base + subgroup_base), clamp(_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) - _GLF_IDENTITY(0u, ~ (~ (0u)))), _GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) / 1u), (workgroup_base + subgroup_base)))))) + subgroup_local_id, clamp(_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u) + subgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), uint(uvec4(_GLF_IDENTITY((workgroup_base), clamp((workgroup_base), (workgroup_base), (workgroup_base))), 0u, 1u, 1u))) / _GLF_IDENTITY(1u, 0u ^ (1u)))) / 1u)) + 0u) + subgroup_base))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u) + subgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), uint(uvec4(_GLF_IDENTITY((workgroup_base), clamp((workgroup_base), (workgroup_base), (workgroup_base))), 0u, 1u, 1u))) / _GLF_IDENTITY(1u, 0u ^ (1u)))) / 1u)) + 0u) + subgroup_base))), ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u) + subgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), uint(uvec4(_GLF_IDENTITY((workgroup_base), clamp((workgroup_base), (workgroup_base), (workgroup_base))), 0u, 1u, 1u))) / _GLF_IDENTITY(1u, 0u ^ (1u)))) / 1u)) + 0u) + subgroup_base)))) << 0u)) / 1u))) | (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base)))) + subgroup_local_id, _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, ~ (~ (workgroup_base + subgroup_base))), _GLF_IDENTITY((workgroup_base + subgroup_base) | (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)))) + subgroup_base))), ((workgroup_base + subgroup_base) | (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u ^ (workgroup_base + subgroup_base)))) | 0u))), min(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u ^ (workgroup_base + subgroup_base))))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u ^ (workgroup_base + subgroup_base))))), _GLF_IDENTITY(0u, ~ (~ (0u))) | ((_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u ^ (workgroup_base + subgroup_base))))))) : _GLF_FUZZED(181501u))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u ^ (workgroup_base + subgroup_base))))), ((_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base, 0u ^ (workgroup_base + subgroup_base))), ~ (~ ((_GLF_IDENTITY(workgroup_base + subgroup_base, 0u ^ (workgroup_base + subgroup_base))))))))) / 1u))) | (_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((workgroup_base + subgroup_base) | (workgroup_base + subgroup_base), ((workgroup_base + subgroup_base) | (workgroup_base + subgroup_base)) << 0u)))) + subgroup_local_id, _GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u ^ (workgroup_base + subgroup_base))))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base)))) | (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))), (workgroup_base + _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base)))) | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) >> 0u), (_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, workgroup_base + subgroup_base))) | (workgroup_base + subgroup_base)))) + subgroup_local_id));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), 0u ^ (((subgroup_local_id + 1) % subgroup_size)));
 if(_GLF_DEAD(false))
  return;
 uint read = 0;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, (false) || false))))))) && true)))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(false)), _GLF_FUZZED((+ 9.7))), vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)))), mix(vec2(_GLF_IDENTITY(((injectionSwitch))[0], clamp((_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)))[0], ((injectionSwitch))[0], ((injectionSwitch))[0])), ((injectionSwitch))[1]), vec2(_GLF_FUZZED(4855.5728), _GLF_FUZZED(8.7)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)) && (_GLF_DEAD(false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true), bvec3(bvec3(bvec3(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true), bvec3(bvec3(bvec3(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))))))))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + tan(vec2(0.0, 0.0))).x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))) : _GLF_FUZZED(round(-9491.4319)))), max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-367.398, float(_GLF_IDENTITY(float(_GLF_IDENTITY(-367.398, mix(float(-367.398), float(_GLF_FUZZED(-6.4)), bool(false)))), _GLF_IDENTITY((true ? _GLF_IDENTITY(float(_GLF_IDENTITY(-367.398, mix(float(-367.398), float(_GLF_FUZZED(-6.4)), bool(false)))), (false ? _GLF_FUZZED(-13.75) : float(_GLF_IDENTITY(-367.398, mix(float(-367.398), float(_GLF_FUZZED(-6.4)), bool(false)))))) : _GLF_FUZZED(-8.0)), mix(float(_GLF_FUZZED(314.767)), float((true ? _GLF_IDENTITY(float(_GLF_IDENTITY(-367.398, mix(float(-367.398), float(_GLF_FUZZED(-6.4)), bool(false)))), (false ? _GLF_FUZZED(-13.75) : float(_GLF_IDENTITY(-367.398, mix(float(-367.398), float(_GLF_FUZZED(-6.4)), bool(false)))))) : _GLF_FUZZED(-8.0))), bool(true)))))))), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(bool(true), _GLF_IDENTITY(bool(bvec2(bool(true), false)), ! (! (bool(bvec2(bool(true), false)))))))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), vec2(_GLF_FUZZED(9.0), _GLF_FUZZED(-89.67)), bvec2(false, false)))).y))))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if((subgroup_local_id % _GLF_IDENTITY(2, 0 + (2))) == 0)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   switch(_GLF_IDENTITY(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ 0))
    {
     case 8:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (bool(_GLF_DEAD(false))))), (! _GLF_IDENTITY((bool(_GLF_DEAD(false))), ! (_GLF_IDENTITY(! ((bool(_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(! ((bool(_GLF_DEAD(false)))), false || (! ((bool(_GLF_DEAD(false)))))))))))) && true))))))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(any(bvec4(false, true, false, _GLF_IDENTITY(false, ! (! (false))))))
      {
       if(_GLF_DEAD(false))
        return;
       {
       }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_ONE(1.0, injectionSwitch.y)), (injectionSwitch.y) + 0.0)))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
       ;
       if(_GLF_DEAD(false))
        return;
       if(false)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
         if((false ? false : false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(866.144) : injectionSwitch.y))))))
            return;
           if(_GLF_DEAD(false))
            return;
           ;
           if(_GLF_DEAD(false))
            return;
           vec2(_GLF_IDENTITY(568.677, (568.677) / 1.0), -21.10);
          }
         _GLF_IDENTITY(uvec3(8775u, 23563u, 91832u), (uvec3(8775u, 23563u, _GLF_IDENTITY(91832u, min(91832u, _GLF_IDENTITY(91832u, max(91832u, _GLF_IDENTITY(91832u, (91832u) / 1u))))))) / uvec3(1u, 1u, 1u));
         ;
         do
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            break;
           mat3(-1372.6429, 0.7, 421.876, 5.4, -0.0, 8749.6315, -383.319, 3242.6450, 28.25);
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
            break;
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              break;
             return;
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               return;
              }
             if(_GLF_DEAD(false))
              return;
             continue;
            }
           uvec4 _GLF_SWITCH_0_0v, _GLF_SWITCH_0_1v[45];
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
              break;
             return;
            }
           830.237;
           if(_GLF_DEAD(false))
            continue;
           int(_GLF_IDENTITY(num_workgroup, _GLF_IDENTITY((num_workgroup) + 0u, clamp(_GLF_IDENTITY((num_workgroup) + 0u, max((num_workgroup) + 0u, _GLF_IDENTITY((num_workgroup) + 0u, ((num_workgroup) + 0u) | ((num_workgroup) + 0u)))), (num_workgroup) + 0u, (num_workgroup) + 0u))));
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              continue;
             continue;
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             if(_GLF_DEAD(false))
              break;
             break;
             if(_GLF_DEAD(false))
              break;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           mat2(26.34, -0.7, -777.514, 0.8);
          }
         while(true);
         mat4x3 _GLF_SWITCH_0_2v, _GLF_SWITCH_0_3v;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(8.8, 8.9)) : _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(float(injectionSwitch[0]))), injectionSwitch[1])))).x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)) || false, bool(bvec3(_GLF_IDENTITY((! (false)) || false, false || ((! (false)) || false)), false, false)))))), (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0) + (_GLF_IDENTITY(injectionSwitch[0], 0.0 + (injectionSwitch[0]))), min(0.0 + (_GLF_IDENTITY(injectionSwitch[0], 0.0 + (injectionSwitch[0]))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-49.79)), bool(false))) + (_GLF_IDENTITY(injectionSwitch[0], 0.0 + (injectionSwitch[0])))))), injectionSwitch[1])).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), false)), false || (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bool(injectionSwitch.x > injectionSwitch.y))))) && true))))))))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0), (_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * mat2(1.0))) + vec2(0.0, 0.0))).y))))), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), false))))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
              {
               if(_GLF_DEAD(false))
                return;
               return;
              }
             return;
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           return;
          }
         mat4(-4.0, -875.096, 0.1, -62.87, _GLF_IDENTITY(-858.711, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-8660.9387) : _GLF_IDENTITY(_GLF_IDENTITY(-858.711, min(-858.711, -858.711)), max(_GLF_IDENTITY(-858.711, min(-858.711, -858.711)), _GLF_IDENTITY(-858.711, _GLF_IDENTITY(min(-858.711, -858.711), 1.0 * (min(-858.711, -858.711)))))))), -29.24, _GLF_IDENTITY(3.9, mix(float(_GLF_FUZZED(-0.1)), float(3.9), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), -6.0, -4584.3543, 378.884, 2510.9354, _GLF_IDENTITY(898.488, mix(float(_GLF_FUZZED(-113.041)), float(_GLF_IDENTITY(898.488, max(_GLF_IDENTITY(_GLF_IDENTITY(898.488, mix(float(_GLF_IDENTITY(898.488, float(_GLF_IDENTITY(vec2(898.488, 0.0), clamp(vec2(898.488, 0.0), vec2(898.488, 0.0), _GLF_IDENTITY(vec2(898.488, 0.0), clamp(vec2(898.488, 0.0), vec2(898.488, 0.0), vec2(898.488, 0.0)))))))), float(_GLF_IDENTITY(_GLF_FUZZED(32.42), clamp(_GLF_IDENTITY(_GLF_FUZZED(32.42), (_GLF_FUZZED(32.42)) * 1.0), _GLF_IDENTITY(_GLF_FUZZED(32.42), clamp(_GLF_FUZZED(32.42), _GLF_FUZZED(32.42), _GLF_IDENTITY(_GLF_FUZZED(32.42), min(_GLF_FUZZED(32.42), _GLF_FUZZED(32.42))))), _GLF_FUZZED(32.42)))), bool(false))), float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(898.488, mix(float(_GLF_IDENTITY(898.488, float(_GLF_IDENTITY(vec2(898.488, 0.0), clamp(vec2(898.488, 0.0), vec2(898.488, 0.0), _GLF_IDENTITY(vec2(898.488, 0.0), clamp(vec2(898.488, 0.0), vec2(898.488, 0.0), vec2(898.488, 0.0)))))))), float(_GLF_IDENTITY(_GLF_FUZZED(32.42), clamp(_GLF_IDENTITY(_GLF_FUZZED(32.42), (_GLF_FUZZED(32.42)) * 1.0), _GLF_IDENTITY(_GLF_FUZZED(32.42), clamp(_GLF_FUZZED(32.42), _GLF_FUZZED(32.42), _GLF_IDENTITY(_GLF_FUZZED(32.42), min(_GLF_FUZZED(32.42), _GLF_FUZZED(32.42))))), _GLF_FUZZED(32.42)))), bool(false))), (_GLF_IDENTITY(898.488, mix(float(_GLF_IDENTITY(898.488, float(_GLF_IDENTITY(vec2(898.488, 0.0), clamp(vec2(898.488, 0.0), vec2(898.488, 0.0), _GLF_IDENTITY(vec2(898.488, 0.0), clamp(vec2(898.488, 0.0), vec2(898.488, 0.0), vec2(898.488, 0.0)))))))), float(_GLF_IDENTITY(_GLF_FUZZED(32.42), clamp(_GLF_IDENTITY(_GLF_FUZZED(32.42), (_GLF_FUZZED(32.42)) * 1.0), _GLF_IDENTITY(_GLF_FUZZED(32.42), clamp(_GLF_FUZZED(32.42), _GLF_FUZZED(32.42), _GLF_IDENTITY(_GLF_FUZZED(32.42), min(_GLF_FUZZED(32.42), _GLF_FUZZED(32.42))))), _GLF_FUZZED(32.42)))), bool(false)))) * determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 1.0, 0.0, 0.0), (mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(898.488, mix(float(_GLF_IDENTITY(898.488, float(_GLF_IDENTITY(vec2(898.488, 0.0), clamp(vec2(898.488, 0.0), vec2(898.488, 0.0), _GLF_IDENTITY(vec2(898.488, 0.0), clamp(vec2(898.488, 0.0), vec2(898.488, 0.0), vec2(898.488, 0.0)))))))), float(_GLF_IDENTITY(_GLF_FUZZED(32.42), clamp(_GLF_IDENTITY(_GLF_FUZZED(32.42), (_GLF_FUZZED(32.42)) * 1.0), _GLF_IDENTITY(_GLF_FUZZED(32.42), clamp(_GLF_FUZZED(32.42), _GLF_FUZZED(32.42), _GLF_IDENTITY(_GLF_FUZZED(32.42), min(_GLF_FUZZED(32.42), _GLF_FUZZED(32.42))))), _GLF_FUZZED(32.42)))), bool(false))), (_GLF_IDENTITY(898.488, mix(float(_GLF_IDENTITY(898.488, float(_GLF_IDENTITY(vec2(898.488, 0.0), clamp(vec2(898.488, 0.0), vec2(898.488, 0.0), _GLF_IDENTITY(vec2(898.488, 0.0), clamp(vec2(898.488, 0.0), vec2(898.488, 0.0), vec2(898.488, 0.0)))))))), float(_GLF_IDENTITY(_GLF_FUZZED(32.42), clamp(_GLF_IDENTITY(_GLF_FUZZED(32.42), (_GLF_FUZZED(32.42)) * 1.0), _GLF_IDENTITY(_GLF_FUZZED(32.42), clamp(_GLF_FUZZED(32.42), _GLF_FUZZED(32.42), _GLF_IDENTITY(_GLF_FUZZED(32.42), min(_GLF_FUZZED(32.42), _GLF_FUZZED(32.42))))), _GLF_FUZZED(32.42)))), bool(false)))) * determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 1.0, 0.0, 0.0)) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(898.488, mix(float(_GLF_FUZZED(1.2)), float(898.488), bool(true)))))), bool(true))), -1.9, 8294.6186, 68.27, -913.561);
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
            return;
           return;
          }
         {
          (vec2(-501.442, 6073.0544) == injectionSwitch);
          if(_GLF_DEAD(false))
           return;
         }
         ivec2(28142, 83075).yyxx;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
         for(         int(subgroup_size);
 (uvec3(_GLF_IDENTITY(94312u, clamp(94312u, _GLF_IDENTITY(94312u, (94312u) | 0u), 94312u)), 83181u, 138456u) != (uvec3(_GLF_IDENTITY(20998u, 0u | (20998u)), 87237u, 92426u) / uint(-94721))); mat4(4.3, 2.5, _GLF_IDENTITY(874.683, mix(float(874.683), float(_GLF_FUZZED(4.5)), bool(false))), -544.643, -387.528, 2.6, 96.65, -29.02, 8751.6744, 82.21, _GLF_IDENTITY(4.0, 0.0 + (4.0)), 4813.3519, 37.17, 6.9, -4.2, 5.1))
          {
           mat2 _GLF_SWITCH_0_4v, _GLF_SWITCH_0_5v;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             return;
            }
           uint _GLF_SWITCH_0_6v[20], _GLF_SWITCH_0_7v;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              break;
             break;
            }
           ;
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(false))
            break;
           mat4x2(_GLF_SWITCH_0_5v);
           bvec2(false, true)[1];
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), bool(bvec4(! (_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(_GLF_IDENTITY(bool((false) && true), (bool((false) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), false, true, false))))), (injectionSwitch.x > injectionSwitch.y))))
            break;
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || _GLF_IDENTITY((bool(bvec2(false, true))), ! (_GLF_IDENTITY(! ((bool(bvec2(false, true)))), bool(bvec2(! ((bool(bvec2(_GLF_IDENTITY(false, true && (false)), true)))), true)))))))))
              {
               if(_GLF_DEAD(false))
                return;
               break;
              }
             return;
            }
           bool _GLF_SWITCH_0_8v[50], _GLF_SWITCH_0_9v, _GLF_SWITCH_0_10v;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            break;
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           return;
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            return;
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         uvec3 _GLF_SWITCH_0_11v, _GLF_SWITCH_0_12v, _GLF_SWITCH_0_13v;
         if(all(bvec3(true, true, false)))
          {
           ;
           ivec2 _GLF_SWITCH_0_14v, _GLF_SWITCH_0_15v[34];
           mat4 _GLF_SWITCH_0_16v;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec4(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))))) || false)))), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, true, false))))))), ! (! ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, true, false))))))))))), true))) || false))))
            return;
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             return;
             if(_GLF_DEAD(false))
              return;
            }
           mat3 _GLF_SWITCH_0_17v, _GLF_SWITCH_0_18v[42];
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           if(_GLF_DEAD(false))
            return;
           ivec3(-38042, _GLF_IDENTITY(_GLF_IDENTITY(22783, (22783) | (22783)), 0 + (22783)), -71327);
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           bvec2(_GLF_IDENTITY(true, ! (! (true))), true);
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
              return;
             return;
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              return;
             return;
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
              return;
            }
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-811.094)), float(injectionSwitch.y), bool(true)))))))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                return;
               return;
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             return;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            return;
           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            return;
           mat3x4(_GLF_IDENTITY(-6.7, (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? _GLF_FUZZED(_GLF_IDENTITY(-5973.4296, min(_GLF_IDENTITY(-5973.4296, max(-5973.4296, -5973.4296)), -5973.4296))) : -6.7)), 8.4, 381.266, -74.06, -5570.5794, 1.2, _GLF_IDENTITY(-2.8, clamp(-2.8, -2.8, -2.8)), 69.60, -6.7, -78.80, 1.2, -8.2);
          }
         for(mat4x2 _GLF_SWITCH_0_19v, _GLF_SWITCH_0_20v[25], _GLF_SWITCH_0_21v; true; (_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? bvec4(true) : bvec4(true, false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), false)))
          {
           (_GLF_SWITCH_0_19v - -783.937);
           subgroup_id;
           bvec3(true, false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, false)), false || (_GLF_IDENTITY(bool(bvec3(true, false, false)), true && (_GLF_IDENTITY(bool(bvec3(true, false, false)), (bool(bvec3(true, false, false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true && (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) && true))))));
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            return;
           mat4x3 _GLF_SWITCH_0_22v[61], _GLF_SWITCH_0_23v[5];
           bool _GLF_SWITCH_0_24v;
           mat3x4 _GLF_SWITCH_0_25v[79], _GLF_SWITCH_0_26v[18];
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             continue;
            }
           ivec4(_GLF_IDENTITY(10987, ~ (~ (10987))), 1943, -80549, -44835);
           if(_GLF_DEAD(false))
            break;
           bvec4 _GLF_SWITCH_0_27v, _GLF_SWITCH_0_28v, _GLF_SWITCH_0_29v[72];
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               break;
              }
             continue;
             if(_GLF_DEAD(false))
              break;
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            continue;
           bvec4 _GLF_SWITCH_0_30v, _GLF_SWITCH_0_31v[96];
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))
            return;
          }
         while(_GLF_IDENTITY(_GLF_IDENTITY((vec4(8.2, 837.913, -1223.7923, -82.50) == vec4(-689.779, 80.31, -3.5, -725.918)), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(vec4(8.2, 837.913, -1223.7923, -82.50) == _GLF_IDENTITY(_GLF_IDENTITY(vec4(-689.779, 80.31, -3.5, -725.918), vec4(vec4(_GLF_IDENTITY(vec4(-689.779, 80.31, -3.5, -725.918), clamp(vec4(-689.779, 80.31, -3.5, -725.918), vec4(-689.779, 80.31, -3.5, -725.918), vec4(-689.779, 80.31, -3.5, -725.918)))))), vec4(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(vec4(-689.779, 80.31, -3.5, -725.918), vec4(vec4(_GLF_IDENTITY(vec4(-689.779, 80.31, -3.5, -725.918), clamp(vec4(-689.779, 80.31, -3.5, -725.918), vec4(-689.779, 80.31, -3.5, -725.918), vec4(-689.779, _GLF_IDENTITY(80.31, _GLF_IDENTITY(clamp(80.31, _GLF_IDENTITY(80.31, (80.31) - 0.0), 80.31), 1.0 * (_GLF_IDENTITY(clamp(80.31, _GLF_IDENTITY(80.31, (80.31) - 0.0), 80.31), mix(float(clamp(80.31, _GLF_IDENTITY(80.31, (80.31) - 0.0), 80.31)), float(_GLF_FUZZED(-808.151)), bool(false)))))), -3.5, -725.918)))))))), (_GLF_IDENTITY(vec4(8.2, 837.913, -1223.7923, -82.50), max(_GLF_IDENTITY(vec4(8.2, 837.913, -1223.7923, -82.50), max(vec4(8.2, 837.913, _GLF_IDENTITY(-1223.7923, (true ? -1223.7923 : _GLF_FUZZED(_GLF_IDENTITY(48.17, (false ? _GLF_FUZZED(-5.7) : 48.17))))), -82.50), vec4(8.2, 837.913, -1223.7923, -82.50))), vec4(8.2, 837.913, _GLF_IDENTITY(-1223.7923, (-1223.7923) - 0.0), -82.50))) == vec4(-689.779, 80.31, -3.5, _GLF_IDENTITY(-725.918, (true ? -725.918 : _GLF_FUZZED(0.2))))) || false)))), _GLF_IDENTITY(bool(bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((vec4(8.2, 837.913, -1223.7923, -82.50) == vec4(-689.779, 80.31, -3.5, -725.918)), bool(bvec4((vec4(8.2, 837.913, -1223.7923, -82.50) == vec4(-689.779, 80.31, -3.5, -725.918)), false, _GLF_IDENTITY(true, true && (true)), true))), true && ((vec4(8.2, 837.913, -1223.7923, -82.50) == vec4(-689.779, 80.31, -3.5, _GLF_IDENTITY(-725.918, (-725.918) * 1.0))))))))), true && (bool(bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((vec4(8.2, 837.913, -1223.7923, -82.50) == vec4(-689.779, 80.31, -3.5, -725.918)), bool(bvec4((vec4(8.2, 837.913, -1223.7923, -82.50) == vec4(-689.779, 80.31, -3.5, -725.918)), false, _GLF_IDENTITY(true, true && (true)), true))), true && ((vec4(8.2, 837.913, -1223.7923, -82.50) == vec4(-689.779, 80.31, -3.5, -725.918)))))))))))), bool(bvec3(_GLF_IDENTITY((vec4(8.2, 837.913, -1223.7923, -82.50) == vec4(-689.779, 80.31, -3.5, -725.918)), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(vec4(8.2, 837.913, -1223.7923, -82.50) == _GLF_IDENTITY(_GLF_IDENTITY(vec4(-689.779, 80.31, -3.5, -725.918), vec4(vec4(_GLF_IDENTITY(vec4(-689.779, 80.31, -3.5, -725.918), clamp(vec4(-689.779, 80.31, -3.5, -725.918), vec4(-689.779, 80.31, -3.5, -725.918), vec4(-689.779, 80.31, -3.5, -725.918)))))), vec4(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(vec4(-689.779, 80.31, -3.5, -725.918), vec4(vec4(_GLF_IDENTITY(vec4(-689.779, 80.31, -3.5, -725.918), clamp(vec4(-689.779, 80.31, -3.5, -725.918), vec4(-689.779, 80.31, -3.5, -725.918), vec4(-689.779, _GLF_IDENTITY(80.31, _GLF_IDENTITY(clamp(80.31, _GLF_IDENTITY(80.31, (80.31) - 0.0), 80.31), 1.0 * (_GLF_IDENTITY(clamp(80.31, _GLF_IDENTITY(80.31, (80.31) - 0.0), 80.31), mix(float(clamp(80.31, _GLF_IDENTITY(80.31, (80.31) - 0.0), 80.31)), float(_GLF_FUZZED(-808.151)), bool(false)))))), -3.5, -725.918)))))))), (_GLF_IDENTITY(vec4(8.2, 837.913, -1223.7923, -82.50), max(_GLF_IDENTITY(vec4(8.2, 837.913, -1223.7923, -82.50), max(vec4(8.2, 837.913, _GLF_IDENTITY(-1223.7923, (true ? -1223.7923 : _GLF_FUZZED(_GLF_IDENTITY(48.17, (false ? _GLF_FUZZED(-5.7) : 48.17))))), -82.50), vec4(8.2, 837.913, -1223.7923, -82.50))), vec4(8.2, 837.913, _GLF_IDENTITY(-1223.7923, (-1223.7923) - 0.0), -82.50))) == vec4(-689.779, 80.31, -3.5, _GLF_IDENTITY(-725.918, (true ? -725.918 : _GLF_FUZZED(0.2))))) || false)))), _GLF_IDENTITY(bool(bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((vec4(8.2, 837.913, -1223.7923, -82.50) == vec4(-689.779, 80.31, -3.5, -725.918)), bool(bvec4((vec4(8.2, 837.913, -1223.7923, -82.50) == vec4(-689.779, 80.31, -3.5, -725.918)), false, _GLF_IDENTITY(true, true && (true)), true))), true && ((vec4(8.2, 837.913, -1223.7923, -82.50) == vec4(-689.779, 80.31, -3.5, _GLF_IDENTITY(-725.918, (-725.918) * 1.0))))))))), true && (bool(bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((vec4(8.2, 837.913, -1223.7923, -82.50) == vec4(-689.779, 80.31, -3.5, -725.918)), bool(bvec4((vec4(8.2, 837.913, -1223.7923, -82.50) == vec4(-689.779, 80.31, -3.5, -725.918)), false, _GLF_IDENTITY(true, true && (true)), true))), true && ((vec4(8.2, 837.913, -1223.7923, -82.50) == vec4(-689.779, 80.31, -3.5, -725.918)))))))))))), true, true))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           if(_GLF_DEAD(false))
            continue;
           ivec4 _GLF_SWITCH_0_32v[81], _GLF_SWITCH_0_33v, _GLF_SWITCH_0_34v[69];
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(false))
            return;
           bvec3 _GLF_SWITCH_0_35v, _GLF_SWITCH_0_36v;
           if(_GLF_DEAD(false))
            continue;
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
         return;
        }
       for(       mat3(_GLF_IDENTITY(4.7, (4.7) * 1.0), 2.7, 284.062, 4709.5702, 52.65, 2.7, 6.5, 60.54, -1337.1715);
 true; _GLF_IDENTITY(vec4(91.76, 526.087, _GLF_IDENTITY(5735.1584, min(_GLF_IDENTITY(5735.1584, float(vec3(5735.1584, determinant(mat4(1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-96.40) : 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), sqrt(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec4(false || (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) ? _GLF_FUZZED(determinant(mat4(4.3, 22.49, 1944.0693, -37.46, -6.4, 9.0, -53.92, 5.1, 1.2, 2622.8837, -4.5, -67.42, 1.2, -217.937, 299.110, -5.3))) : _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-73.07)), bool(false))))))))), 5735.1584)), 46.13), max(vec4(91.76, 526.087, _GLF_IDENTITY(5735.1584, min(_GLF_IDENTITY(5735.1584, float(vec3(5735.1584, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), sqrt(0.0)))), 5735.1584)), 46.13), _GLF_IDENTITY(vec4(91.76, 526.087, _GLF_IDENTITY(5735.1584, min(_GLF_IDENTITY(_GLF_IDENTITY(5735.1584, clamp(5735.1584, _GLF_IDENTITY(5735.1584, _GLF_IDENTITY(float(vec3(5735.1584, 0.0, 1.0)), mix(float(_GLF_IDENTITY(float(vec3(5735.1584, 0.0, 1.0)), mix(float(float(vec3(5735.1584, 0.0, 1.0))), float(_GLF_FUZZED(4.2)), bool(false)))), float(_GLF_FUZZED(-4.0)), bool(false)))), 5735.1584)), float(vec3(5735.1584, determinant(mat4(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(3535.7685)), float(0.0), bool(true))))), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) + determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0))), 0.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, abs(1.0), 0.0))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), sqrt(0.0)))), 5735.1584)), 46.13), mix(vec4(_GLF_FUZZED((3.1 - 542.298)), (vec4(91.76, 526.087, _GLF_IDENTITY(5735.1584, min(_GLF_IDENTITY(5735.1584, float(_GLF_IDENTITY(vec3(5735.1584, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0)), 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0)), 0.0, 1.0, 1.0))))), sqrt(0.0)), (vec3(5735.1584, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), sqrt(0.0))) * mat3(1.0)))), 5735.1584)), 46.13))[1], (vec4(91.76, 526.087, _GLF_IDENTITY(5735.1584, min(_GLF_IDENTITY(5735.1584, float(vec3(5735.1584, determinant(_GLF_IDENTITY(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1.0, (1.0) / abs(1.0)) : _GLF_FUZZED(injectionSwitch.g))), 0.0, 0.0, 0.0, 1.0), (mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, sqrt(0.0), 1.0, cos(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), 1.0 * (float(float(0.0))))), 1.0))), 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 1.0)) - mat4(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)))), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), sqrt(0.0)))), 5735.1584)), 46.13))[2], _GLF_FUZZED(522.603)), vec4((vec4(91.76, 526.087, _GLF_IDENTITY(5735.1584, min(_GLF_IDENTITY(5735.1584, float(vec3(5735.1584, determinant(mat4(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, tan(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat4(1.0, 1.0, 0.0, sin(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / 1.0)) / 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(sin(0.0), clamp(sin(0.0), _GLF_IDENTITY(sin(0.0), (true ? _GLF_IDENTITY(sin(0.0), mix(float(_GLF_FUZZED(174.263)), float(sin(0.0)), bool(true))) : _GLF_FUZZED(-503.986))), _GLF_IDENTITY(sin(0.0), clamp(sin(0.0), sin(0.0), sin(0.0))))), 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(1.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(1.0, 1.0, exp(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, abs(1.0), 1.0, 1.0, 0.0)), clamp(float(mat4x3(1.0, 1.0, exp(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, abs(1.0), 1.0, 1.0, 0.0)), float(mat4x3(1.0, 1.0, exp(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, abs(1.0), 1.0, 1.0, 0.0)), float(mat4x3(1.0, 1.0, exp(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, abs(1.0), 1.0, 1.0, 0.0))))), 1.0))), vec3(1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, tan(0.0), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), 0.0, determinant(mat4(1.0, 1.0, 0.0, sin(0.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(0.0), 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0))))), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2.5)), float(0.0), bool(true))), 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) - 0.0), clamp(_GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) - 0.0), max(_GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) - 0.0), _GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) - 0.0))), _GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) - 0.0)))))), 5735.1584)), 46.13))[0], _GLF_FUZZED((- 4704.9695)), _GLF_FUZZED(5273.3541), (vec4(91.76, 526.087, _GLF_IDENTITY(5735.1584, min(_GLF_IDENTITY(5735.1584, float(vec3(5735.1584, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-157.022))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), sqrt(0.0)))), 5735.1584)), _GLF_IDENTITY(46.13, (46.13) / 1.0)))[3]), bvec4(true, false, false, true))))))
        {
         for(         mat2(_GLF_IDENTITY(6.8, mix(float(6.8), float(_GLF_FUZZED(-0.2)), bool(false))), -82.69, 5.8, -3189.4928);
 _GLF_IDENTITY((-3582.0464 < -1.3), true && (_GLF_IDENTITY((_GLF_IDENTITY(-3582.0464, (-3582.0464) * _GLF_ONE(1.0, injectionSwitch.y)) < -1.3), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((-3582.0464 < -1.3), bool(bvec4((-3582.0464 < -1.3), true, true, true))), true)), (bool(bvec2(_GLF_IDENTITY((-3582.0464 < -1.3), bool(bvec4((_GLF_IDENTITY(-3582.0464, (false ? _GLF_IDENTITY(_GLF_FUZZED(-123.854), clamp(_GLF_FUZZED(-123.854), _GLF_IDENTITY(_GLF_FUZZED(-123.854), mix(float(_GLF_FUZZED(-123.854)), float(_GLF_FUZZED(-288.922)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_FUZZED(-123.854))) : -3582.0464)) < -1.3), true, true, true))), true))) || false)))); isnan(2359.4709))
          {
           if(_GLF_DEAD(false))
            return;
           vec2 _GLF_SWITCH_0_37v, _GLF_SWITCH_0_38v, _GLF_SWITCH_0_39v;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            continue;
          }
         (bvec3(false, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), ! (! (_GLF_IDENTITY(true && (_GLF_IDENTITY(true, ! (! (true)))), (true && (true)) && true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) == bvec3(true, _GLF_IDENTITY(false, (false) || false), true));
         mat2x4(-1.8, 6.1, _GLF_IDENTITY(-21.82, max(-21.82, -21.82)), 8.7, _GLF_IDENTITY(731.510, _GLF_IDENTITY(mix(float(_GLF_FUZZED(2336.1701)), float(731.510), bool(true)), clamp(mix(float(_GLF_FUZZED(2336.1701)), float(731.510), bool(true)), mix(float(_GLF_FUZZED(2336.1701)), float(731.510), bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (_GLF_IDENTITY(! (bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bool(! (bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))), mix(float(_GLF_FUZZED(2336.1701)), float(731.510), bool(true))))), 0.0, -0.7, 7.5);
         if(_GLF_DEAD(false))
          break;
         mat2(98.80, 610.551, 7.2, -21.54);
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           return;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), true && (false))))
          return;
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(597.379)), bool(false)))))))
          break;
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          {
           if(_GLF_DEAD(false))
            return;
           continue;
          }
         uvec3 _GLF_SWITCH_0_40v;
         if(_GLF_DEAD(false))
          return;
         while(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! ((false)))))))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! _GLF_IDENTITY((! (_GLF_IDENTITY((false), ! (! ((false)))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY((false), ! (! ((false))))))), (! ((! (_GLF_IDENTITY((false), ! (! ((false)))))))) || false))))))))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! _GLF_IDENTITY((! (_GLF_IDENTITY((false), ! (! ((false)))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY((false), ! (! ((false))))))), (! ((! (_GLF_IDENTITY((false), ! (! ((false)))))))) || false))))))))))), false, false), false))))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))))
                break;
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(false))
                break;
               continue;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), (vec3(injectionSwitch, 0.0)) * mat3(1.0)))) : _GLF_FUZZED(asinh(injectionSwitch)))).y))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                 continue;
                }
               return;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
              }
             if(_GLF_DEAD(false))
              break;
             continue;
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
              break;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(false))
                return;
               break;
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true), true, false)), ! (! (bool(bvec3(_GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true), true, false)))))))))), bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec4(bvec2((false), true), false, true)))), ! (! (bool(bvec2((false), true)))))) || false), (injectionSwitch.x > injectionSwitch.y)), true)))))
                break;
               continue;
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) : _GLF_IDENTITY(_GLF_FUZZED(-47.62), mix(float(_GLF_FUZZED(8440.0529)), float(_GLF_FUZZED(-47.62)), bool(true))))) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
                break;
               if(_GLF_DEAD(false))
                return;
               break;
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(false, (false) && true)))))
                continue;
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(false, false))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
              continue;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  return;
                 return;
                }
               break;
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))))
                continue;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                 if(_GLF_DEAD(false))
                  break;
                 continue;
                }
               break;
              }
             if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
              {
               if(_GLF_DEAD(false))
                return;
               continue;
              }
             break;
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))
              return;
             if(_GLF_DEAD(false))
              continue;
            }
           bool _GLF_SWITCH_0_41v, _GLF_SWITCH_0_42v, _GLF_SWITCH_0_43v[81];
           bvec3(false, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))), false)))) || false));
           uvec4(_GLF_IDENTITY(103840u, (false ? _GLF_FUZZED(num_workgroup) : 103840u)), _GLF_IDENTITY(_GLF_IDENTITY(195457u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (195457u)), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(195457u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (195457u)))), 2949u, 88084u);
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
        }
       if(_GLF_DEAD(false))
        return;
       mat2(-5214.3046, -1.1, -6074.3330, -5.6);
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     case 0:
     case 41:
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     case 82:
     subgroupAll(false);
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y), true, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(bvec2(_GLF_IDENTITY(bool(true), (bool(_GLF_IDENTITY(true, (true) && true))) && true), true)))))), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     case 11:
     read = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, 0 | (2)));
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     break;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     case 56:
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     bool _GLF_SWITCH_0_44v[19], _GLF_SWITCH_0_45v;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false)))) && true))
      return;
     case 91:
     mat4(526.374, 49.04, -5753.5854, 8.2, 2.6, 89.16, -9.3, -783.661, _GLF_IDENTITY(674.582, mix(float(_GLF_FUZZED(5.4)), float(674.582), bool(true))), 1279.3896, 7.1, -95.37, -2.7, 2.2, -2.6, 422.304);
     default:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     1;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))) || false)))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 else
  {
   switch(_GLF_SWITCH((1 ^ ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), ~ (~ (int(1)))), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), _GLF_IDENTITY((_GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1)))), int(_GLF_IDENTITY(int(_GLF_IDENTITY((int(1)), clamp((int(1)), (int(1)), (int(1))))), ~ (~ (int(_GLF_IDENTITY((int(1)), clamp((int(1)), (int(1)), (int(1)))))))))) / (1 & 1)), int(1)), min(_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) / (_GLF_IDENTITY(1 & 1, min(1 & 1, 1 & 1)))), int(1)), _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) / (1 & 1)), int(1))))))))
    {
     case 0:
     if(_GLF_DEAD(false))
      return;
     case 1:
     if(_GLF_DEAD(false))
      return;
     case 94:
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(85.98)), bool(false)))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), false || ((false))))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     subgroupAll(false);
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false))))))))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     case 41:
     case 26:
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      return;
     case 95:
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     case 61:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), float(_GLF_FUZZED(990.815)), bool(false)))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     if(_GLF_DEAD(false))
      return;
     read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | 0u), 4, 64, 2);
     if(_GLF_DEAD(false))
      return;
     break;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, true), false))))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, 0.0))) > injectionSwitch.y))))
      return;
     default:
     1;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bvec2(false, true))) || (false)) || (false))))
              return;
             return;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false))))))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   return;
  }
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
