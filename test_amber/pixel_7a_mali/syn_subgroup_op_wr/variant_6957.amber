#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_47 {
 mat2 _f0;
 uint read;
} ;

struct _GLF_struct_44 {
 mat4x3 _f0;
 mat2x4 _f1;
 mat2x4 _f2;
} ;

struct _GLF_struct_43 {
 ivec2 _f0;
} ;

struct _GLF_struct_45 {
 uvec4 _f0;
 mat4 _f1;
 _GLF_struct_43 _f2;
 ivec3 _f3;
 _GLF_struct_44 _f4;
} ;

struct _GLF_struct_41 {
 mat4x2 _f0;
 mat4x3 _f1;
 uvec3 _f2;
 uvec2 _f3;
} ;

struct _GLF_struct_42 {
 _GLF_struct_41 _f0;
} ;

struct _GLF_struct_39 {
 mat3 _f0;
 uvec4 _f1;
 uvec3 _f2;
} ;

struct _GLF_struct_38 {
 uint _f0;
 ivec2 _f1;
 int _f2;
 vec3 _f3;
 bvec4 _f4;
 vec4 _f5;
 mat2x4 _f6;
} ;

struct _GLF_struct_37 {
 uvec4 _f0;
 vec2 _f1;
 vec3 _f2;
} ;

struct _GLF_struct_40 {
 _GLF_struct_37 _f0;
 _GLF_struct_38 _f1;
 ivec2 _f2;
 _GLF_struct_39 _f3;
} ;

struct _GLF_struct_46 {
 uvec4 _f0;
 mat4x3 _f1;
 ivec4 _f2;
 uvec3 _f3;
 _GLF_struct_40 _f4;
 _GLF_struct_42 _f5;
 _GLF_struct_45 _f6;
 uint subgroup_base;
} ;

struct _GLF_struct_35 {
 mat3 _f0;
 mat2x3 _f1;
} ;

struct _GLF_struct_34 {
 bvec2 _f0;
 uint workgroup_size;
} ;

struct _GLF_struct_36 {
 _GLF_struct_34 _f0;
 _GLF_struct_35 _f1;
 ivec3 _f2;
 bool _f3;
} ;

struct _GLF_struct_31 {
 ivec3 _f0;
} ;

struct _GLF_struct_30 {
 float _f0;
 mat2 _f1;
 int _f2;
} ;

struct _GLF_struct_29 {
 vec3 _f0;
 uvec4 _f1;
 uvec3 _f2;
 vec2 _f3;
 int _f4;
} ;

struct _GLF_struct_28 {
 mat4x2 _f0;
 vec2 _f1;
} ;

struct _GLF_struct_27 {
 vec2 _f0;
 ivec3 _f1;
 uvec2 _f2;
} ;

struct _GLF_struct_32 {
 _GLF_struct_27 _f0;
 _GLF_struct_28 _f1;
 _GLF_struct_29 _f2;
 _GLF_struct_30 _f3;
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base;
 mat4x2 _f4;
 _GLF_struct_31 _f5;
} ;

struct _GLF_struct_33 {
 uvec3 _f0;
 _GLF_struct_32 _f1;
} ;

struct _GLF_struct_24 {
 mat2 _f0;
 uvec3 _f1;
 vec2 _f2;
 ivec3 _f3;
 uvec2 GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size;
 mat2x3 _f4;
 ivec2 _f5;
} ;

struct _GLF_struct_25 {
 _GLF_struct_24 _f0;
} ;

struct _GLF_struct_22 {
 mat2 _f0;
} ;

struct _GLF_struct_21 {
 mat4x3 _f0;
 bool _f1;
 float _f2;
 bool _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_23 {
 _GLF_struct_21 _f0;
 _GLF_struct_22 _f1;
} ;

struct _GLF_struct_26 {
 ivec3 _f0;
 _GLF_struct_23 _f1;
 int _f2;
 uint _f3;
 _GLF_struct_25 _f4;
} ;

struct _GLF_struct_19 {
 bvec3 _f0;
 vec2 _f1;
 ivec2 _f2;
 vec4 _f3;
} ;

struct _GLF_struct_18 {
 mat3 _f0;
 uvec2 GLF_merged2_0_1_13_1_1_13subgroup_basesubgroup_size;
} ;

struct _GLF_struct_16 {
 bvec4 _f0;
 vec3 _f1;
 uvec3 _f2;
 mat2x4 _f3;
 int _f4;
 mat2x4 _f5;
 uint _f6;
} ;

struct _GLF_struct_17 {
 mat2 _f0;
 _GLF_struct_16 _f1;
 uint _f2;
} ;

struct _GLF_struct_14 {
 uvec2 _f0;
 uvec2 _f1;
 bvec2 _f2;
 mat3x4 _f3;
 uvec4 _f4;
 uint _f5;
 mat3x4 _f6;
} ;

struct _GLF_struct_13 {
 mat3x2 _f0;
 mat4x3 _f1;
 vec4 _f2;
 uvec2 _f3;
 ivec4 _f4;
} ;

struct _GLF_struct_12 {
 ivec2 _f0;
 vec2 _f1;
 bvec2 _f2;
 ivec2 _f3;
} ;

struct _GLF_struct_11 {
 float _f0;
 uvec4 _f1;
 bvec2 _f2;
} ;

struct _GLF_struct_10 {
 uint _f0;
} ;

struct _GLF_struct_15 {
 _GLF_struct_10 _f0;
 _GLF_struct_11 _f1;
 _GLF_struct_12 _f2;
 mat4x2 _f3;
 _GLF_struct_13 _f4;
 _GLF_struct_14 _f5;
} ;

struct _GLF_struct_20 {
 _GLF_struct_15 _f0;
 _GLF_struct_17 _f1;
 _GLF_struct_18 _f2;
 _GLF_struct_19 _f3;
} ;

struct _GLF_struct_7 {
 bvec4 _f0;
 mat3x4 _f1;
 mat4 _f2;
} ;

struct _GLF_struct_6 {
 bvec2 _f0;
 bvec3 _f1;
 float _f2;
 bvec4 _f3;
} ;

struct _GLF_struct_8 {
 mat3x2 _f0;
 mat2x3 _f1;
 _GLF_struct_6 _f2;
 bvec4 _f3;
 uvec3 _f4;
 _GLF_struct_7 _f5;
 uint subgroup_local_id;
} ;

struct _GLF_struct_4 {
 uvec2 _f0;
 mat3x2 _f1;
 vec4 _f2;
 uint _f3;
} ;

struct _GLF_struct_3 {
 mat4x2 _f0;
 mat3x4 _f1;
 uvec2 _f2;
 mat4x2 _f3;
 vec3 _f4;
 mat3x2 _f5;
} ;

struct _GLF_struct_5 {
 _GLF_struct_3 _f0;
 _GLF_struct_4 _f1;
 mat2x4 _f2;
} ;

struct _GLF_struct_9 {
 mat3x4 _f0;
 _GLF_struct_5 _f1;
 _GLF_struct_8 _f2;
} ;

struct _GLF_struct_0 {
 mat2x4 _f0;
 vec3 _f1;
 int _f2;
 ivec4 _f3;
 mat2x4 _f4;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
} ;

struct _GLF_struct_2 {
 uint subgroup_id;
 uvec3 _f0;
 float _f1;
 _GLF_struct_1 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 _GLF_struct_20 _GLF_struct_replacement_20;
 uvec4 GLF_merged4_0_1_13_1_1_4_2_1_12_3_1_14num_workgroupreadworkgroup_idworkgroup_size;
 _GLF_struct_26 _GLF_struct_replacement_26;
 _GLF_struct_33 _GLF_struct_replacement_33;
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(gl_SubgroupID, uvec3(1u), 1.0, _GLF_struct_1(_GLF_struct_0(mat2x4(1.0), vec3(1.0), 1, ivec4(1), mat2x4(1.0))));
 uint subgroup_size = gl_SubgroupSize;
 _GLF_struct_replacement_20._f2.GLF_merged2_0_1_13_1_1_13subgroup_basesubgroup_size.y = subgroup_size;
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(mat3x4(1.0), _GLF_struct_5(_GLF_struct_3(mat4x2(1.0), mat3x4(1.0), uvec2(1u), mat4x2(1.0), vec3(1.0), mat3x2(1.0)), _GLF_struct_4(uvec2(1u), mat3x2(1.0), vec4(1.0), 1u), mat2x4(1.0)), _GLF_struct_8(mat3x2(1.0), mat2x3(1.0), _GLF_struct_6(bvec2(true), bvec3(true), 1.0, bvec4(true)), bvec4(true), uvec3(1u), _GLF_struct_7(bvec4(true), mat3x4(1.0), mat4(1.0)), gl_SubgroupInvocationID));
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged4_0_1_13_1_1_4_2_1_12_3_1_14num_workgroupreadworkgroup_idworkgroup_size.x = num_workgroup;
 _GLF_struct_replacement_33._f1.GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base.y = GLF_merged4_0_1_13_1_1_4_2_1_12_3_1_14num_workgroupreadworkgroup_idworkgroup_size.x;
 _GLF_struct_36 _GLF_struct_replacement_36 = _GLF_struct_36(_GLF_struct_34(bvec2(true), gl_WorkGroupSize.x), _GLF_struct_35(mat3(1.0), mat2x3(1.0)), ivec3(1), true);
 GLF_merged4_0_1_13_1_1_4_2_1_12_3_1_14num_workgroupreadworkgroup_idworkgroup_size.w = _GLF_struct_replacement_36._f0.workgroup_size;
 _GLF_struct_replacement_26._f4._f0.GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.y = GLF_merged4_0_1_13_1_1_4_2_1_12_3_1_14num_workgroupreadworkgroup_idworkgroup_size.w;
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged4_0_1_13_1_1_4_2_1_12_3_1_14num_workgroupreadworkgroup_idworkgroup_size.z = workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_replacement_26._f4._f0.GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.x = GLF_merged4_0_1_13_1_1_4_2_1_12_3_1_14num_workgroupreadworkgroup_idworkgroup_size.z;
 uint workgroup_base = _GLF_struct_replacement_26._f4._f0.GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.y * _GLF_struct_replacement_26._f4._f0.GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.x;
 _GLF_struct_46 _GLF_struct_replacement_46 = _GLF_struct_46(uvec4(1u), mat4x3(1.0), ivec4(1), uvec3(1u), _GLF_struct_40(_GLF_struct_37(uvec4(1u), vec2(1.0), vec3(1.0)), _GLF_struct_38(1u, ivec2(1), 1, vec3(1.0), bvec4(true), vec4(1.0), mat2x4(1.0)), ivec2(1), _GLF_struct_39(mat3(1.0), uvec4(1u), uvec3(1u))), _GLF_struct_42(_GLF_struct_41(mat4x2(1.0), mat4x3(1.0), uvec3(1u), uvec2(1u))), _GLF_struct_45(uvec4(1u), mat4(1.0), _GLF_struct_43(ivec2(1)), ivec3(1), _GLF_struct_44(mat4x3(1.0), mat2x4(1.0), mat2x4(1.0))), _GLF_struct_replacement_2.subgroup_id * _GLF_struct_replacement_20._f2.GLF_merged2_0_1_13_1_1_13subgroup_basesubgroup_size.y);
 _GLF_struct_replacement_20._f2.GLF_merged2_0_1_13_1_1_13subgroup_basesubgroup_size.x = _GLF_struct_replacement_46.subgroup_base;
 _GLF_struct_replacement_33._f1.GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base.w = _GLF_struct_replacement_20._f2.GLF_merged2_0_1_13_1_1_13subgroup_basesubgroup_size.x;
 uint virtual_gid = workgroup_base + _GLF_struct_replacement_33._f1.GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base.w + _GLF_struct_replacement_9._f2.subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_struct_replacement_33._f1.GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base.w + ((_GLF_struct_replacement_9._f2.subgroup_local_id + 1) % _GLF_struct_replacement_20._f2.GLF_merged2_0_1_13_1_1_13subgroup_basesubgroup_size.y);
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_replacement_33._f1.GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base.x = next_virtual_gid;
 _GLF_struct_47 _GLF_struct_replacement_47 = _GLF_struct_47(mat2(1.0), 0);
 GLF_merged4_0_1_13_1_1_4_2_1_12_3_1_14num_workgroupreadworkgroup_idworkgroup_size.y = _GLF_struct_replacement_47.read;
 _GLF_struct_replacement_33._f1.GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base.z = GLF_merged4_0_1_13_1_1_4_2_1_12_3_1_14num_workgroupreadworkgroup_idworkgroup_size.y;
 atomicStore(buf[_GLF_struct_replacement_33._f1.GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base.x], uint(1), 4, 64, 4);
 if((_GLF_struct_replacement_9._f2.subgroup_local_id % 2) == 0)
  {
   subgroupAll(false);
   _GLF_struct_replacement_33._f1.GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base.z = atomicLoad(buf[virtual_gid], 4, 64, 2);
  }
 else
  {
   subgroupAll(false);
   _GLF_struct_replacement_33._f1.GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base.z = atomicLoad(buf[virtual_gid], 4, 64, 2);
  }
 subgroupBarrier();
 atomicStore(checker[virtual_gid], _GLF_struct_replacement_33._f1.GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base.z, 4, 64, 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
