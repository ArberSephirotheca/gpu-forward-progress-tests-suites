#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false)))), false || (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false)))), false || (! (_GLF_DEAD(false))))) || false)), ! (! ((_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))))))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))) && true)) && true)), false, false)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))) && _GLF_IDENTITY(true, bool(bvec2(true, false))))) && true)), false, false)))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, true)), ! (! (_GLF_IDENTITY(bool(bvec4(true, true, false, true)), bool(bvec4(bool(bvec4(true, true, false, true)), true, false, true)))))))) && true)) && true)), false, false)), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, true)), ! (! (_GLF_IDENTITY(bool(bvec4(true, true, false, true)), bool(bvec4(bool(bvec4(true, true, false, true)), true, false, true)))))))) && true)) && true)), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, true)), ! (! (_GLF_IDENTITY(bool(bvec4(true, true, false, true)), bool(bvec4(bool(bvec4(true, true, false, true)), true, false, true)))))))) && true)) && true)), false, false)))))))))), true), bvec3(bvec3(bvec3(bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, true)), ! (! (_GLF_IDENTITY(bool(bvec4(true, true, false, true)), bool(bvec4(bool(bvec4(true, true, false, true)), true, false, true)))))))) && _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))))) && true)), bvec2(bvec4(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, true)), ! (! (_GLF_IDENTITY(bool(bvec4(true, true, false, true)), bool(bvec4(bool(bvec4(true, true, false, true)), true, false, true)))))))) && _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))))) && true)), true, true))), false, false)))), true)))), bvec3(bvec4(bvec3(bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(true, bool(bvec4(true, false, false, true))), false, true))), (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))) && true)) && true)), false, false)))), true), true)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, true)), (_GLF_IDENTITY(bool(bvec4(true, true, false, true)), false || (_GLF_IDENTITY(bool(bvec4(true, true, false, true)), bool(bvec4(bool(bvec4(true, true, false, true)), false, false, true)))))) && true)), (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))) && true)) && true)), false, false)))), bvec2(bvec2(bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, true)), (_GLF_IDENTITY(bool(bvec4(true, true, false, true)), false || (_GLF_IDENTITY(bool(bvec4(true, true, false, true)), bool(bvec4(bool(bvec4(true, true, false, true)), false, false, true)))))) && true)), (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))) && true)) && true)), false, false))))))), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, true)), (_GLF_IDENTITY(bool(bvec4(true, true, false, true)), false || (_GLF_IDENTITY(bool(bvec4(true, true, false, true)), bool(bvec4(bool(bvec4(true, _GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), false, true)), false, false, true)))))) && true)), (_GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(true, (true) || false), false, true)))) && true)) && true)), false, false)))), true), bvec3(bvec4(bvec3(bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, true)), (_GLF_IDENTITY(bool(bvec4(true, true, false, true)), false || (_GLF_IDENTITY(bool(bvec4(true, true, false, true)), bool(bvec4(bool(bvec4(true, true, false, true)), false, false, true)))))) && true)), (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))) && true)) && true)), false, false)))), true), true)))))), bvec3(bvec4(bvec3(bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))) && true, ! (! ((_GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))) && true))), _GLF_IDENTITY(false, false || (false)) || ((_GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))) && true)))) && true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, ! (! ((true) && _GLF_IDENTITY(true, ! (! (true))))))), false, true))), false || (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))))), (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))) && true)) && true))), ! (! (bool(bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))) && true)) && true)))))))), false, false)))), true), true)))), true, true))))))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec4(! (_GLF_DEAD(false)), _GLF_IDENTITY(true, bool(bvec4(true, false, false, false))), true, true)), bool(bool(bool(bvec4(! (_GLF_DEAD(false)), _GLF_IDENTITY(true, bool(bvec4(true, false, false, false))), true, true)))))))), true), bvec2(bvec4(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))) && true)) && true)), false, false)))), false, true, false)))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, ~ (_GLF_IDENTITY(~ (gl_WorkGroupID.x), min(~ (gl_WorkGroupID.x), ~ (_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)), max((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)), (1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))) * (gl_WorkGroupID.x)))))));
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id));
 uint subgroup_base = _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), _GLF_IDENTITY(subgroup_id, (subgroup_id) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), subgroup_id)) * subgroup_size;
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u), (0u >> _GLF_IDENTITY(uint(8u), uint(8u))), (1u | 1u)), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u), (0u >> _GLF_IDENTITY(uint(8u), uint(8u))), (1u | 1u)), min(uvec3(_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u), (0u >> _GLF_IDENTITY(uint(8u), uint(8u))), (1u | 1u)), uvec3(_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u), (0u >> _GLF_IDENTITY(uint(8u), uint(8u))), (1u | 1u)))))))) + subgroup_base + ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), 0u ^ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_base))), subgroup_size), min(max(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_base))), subgroup_size), max(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_base))), subgroup_size))))))), clamp(workgroup_base + subgroup_base + ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> (0u << _GLF_IDENTITY(uint(0u), uint(0u))))))), max(subgroup_size, subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> (0u << _GLF_IDENTITY(uint(0u), uint(0u))))))), max(subgroup_size, subgroup_size))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> (0u << _GLF_IDENTITY(uint(0u), uint(0u))))))), max(subgroup_size, subgroup_size)))))), _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_base))), subgroup_size))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(bitfieldInsert(workgroup_base, workgroup_size, int(true), -72552))))))) + subgroup_base + ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), 0u ^ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((true ? subgroup_size : _GLF_FUZZED(subgroup_base)), 0u | ((true ? subgroup_size : _GLF_FUZZED(subgroup_base))))), subgroup_size)), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_base))), subgroup_size)), 1u * (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_base))), subgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_base))), subgroup_size)), 0u | (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_base))), subgroup_size))))))), (max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(max(subgroup_size, subgroup_size), (false ? _GLF_FUZZED(workgroup_id) : max(subgroup_size, subgroup_size)))), 0u ^ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_base))), subgroup_size)), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_base))), subgroup_size)), 1u * (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((true ? subgroup_size : _GLF_FUZZED(subgroup_base)), clamp((true ? subgroup_size : _GLF_FUZZED(subgroup_base)), _GLF_IDENTITY((true ? subgroup_size : _GLF_FUZZED(subgroup_base)), (_GLF_IDENTITY((true ? subgroup_size : _GLF_FUZZED(subgroup_base)), ((true ? subgroup_size : _GLF_FUZZED(subgroup_base))) - 0u)) | (0u ^ 0u)), (true ? subgroup_size : _GLF_FUZZED(subgroup_base))))), subgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_base))), subgroup_size)), 0u | (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_base))), subgroup_size)))))))) * 1u))), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, 1u, 1u, 0u))) + subgroup_base, uint(uint(workgroup_base + subgroup_base))) + ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), 0u ^ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), ~ (~ ((_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))), ~ (~ ((_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))))) | 0u)), _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true)))) ? subgroup_size : _GLF_FUZZED(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)))))), ((_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true)))) ? subgroup_size : _GLF_FUZZED(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base))))))) / 1u)), subgroup_size))))), workgroup_base + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec3(_GLF_IDENTITY((subgroup_local_id + 1), 0u + ((subgroup_local_id + 1))), (1u & 1u), 1u))) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), 0u ^ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(true ? subgroup_size : _GLF_FUZZED(subgroup_base), uint(uvec3(true ? subgroup_size : _GLF_FUZZED(subgroup_base), 0u, (0u & 92043u)))), (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))) ? subgroup_size : _GLF_FUZZED(subgroup_base), uint(uvec3(true ? subgroup_size : _GLF_FUZZED(subgroup_base), 0u, (0u & 92043u))))) + _GLF_IDENTITY((0u | 0u), ((0u | 0u)) - 0u)))), subgroup_size))))))), workgroup_base + subgroup_base + ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), subgroup_size))))), (0u ^ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), subgroup_size)))))) ^ 0u)), _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))) ? subgroup_size : _GLF_FUZZED(subgroup_base))), subgroup_size)))))));
 uint read = 0;
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u)) | (subgroup_local_id)) % 2) == 0, bool(bvec2(_GLF_IDENTITY((subgroup_local_id % 2) == 0, ! (_GLF_IDENTITY(! ((subgroup_local_id % 2) == 0), ! (_GLF_IDENTITY(! (! ((subgroup_local_id % 2) == 0)), ! (! (! (! ((subgroup_local_id % 2) == 0))))))))), false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, ~ (~ (64))))), 2);
  }
 else
  {
   subgroupAll(false);
   read = _GLF_IDENTITY(atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u)], 4, _GLF_IDENTITY(64, (true ? _GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, (64) | (64))))), (64) - 0) : _GLF_FUZZED(10109))), 2), (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[virtual_gid], 4, 64, 2)) | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), max(_GLF_IDENTITY((0u), 0u ^ (_GLF_IDENTITY((0u), ((0u)) - 0u))), (0u))) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u)))) | 0u);
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  barrier();
 subgroupBarrier();
 atomicStore(checker[_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))], read, _GLF_IDENTITY(4, ((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(8), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(8), int(ivec4(int(_GLF_IDENTITY(8, (_GLF_IDENTITY(8, ~ (~ (_GLF_IDENTITY(8, min(8, 8)))))) | (8))), 1, 1, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, min(1, 1))), (~ (_GLF_IDENTITY(1, min(1, 1)))) | (~ (_GLF_IDENTITY(1, min(1, 1)))))))))), (false ? _GLF_FUZZED(51402) : _GLF_IDENTITY(int(8), int(ivec4(int(_GLF_IDENTITY(8, (_GLF_IDENTITY(8, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(8, min(8, 8))), 0 + ((_GLF_IDENTITY(8, min(8, 8)))))))) | (8))), _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-78606) : _GLF_IDENTITY(1, (1) - 0))), 1, 1))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(8), int(_GLF_IDENTITY(ivec4(int(_GLF_IDENTITY(8, (_GLF_IDENTITY(_GLF_IDENTITY(8, ~ (~ (_GLF_IDENTITY(8, min(8, 8))))), (_GLF_IDENTITY(8, ~ (~ (_GLF_IDENTITY(8, _GLF_IDENTITY(min(8, 8), (min(8, 8)) ^ 0)))))) >> 0)) | (8))), 1, 1, 1), clamp(ivec4(int(_GLF_IDENTITY(8, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(8, ~ (~ (_GLF_IDENTITY(8, min(8, 8))))), (_GLF_IDENTITY(8, ~ (~ (_GLF_IDENTITY(8, min(8, 8)))))) * 1), (_GLF_IDENTITY(8, ~ (~ (_GLF_IDENTITY(8, min(8, 8)))))) >> 0)) | (8))), 1, 1, 1), ivec4(int(_GLF_IDENTITY(8, (_GLF_IDENTITY(_GLF_IDENTITY(8, ~ (~ (_GLF_IDENTITY(8, min(8, 8))))), (_GLF_IDENTITY(8, ~ (~ (_GLF_IDENTITY(8, min(8, 8)))))) >> 0)) | (8))), 1, 1, 1), _GLF_IDENTITY(ivec4(int(_GLF_IDENTITY(8, (_GLF_IDENTITY(_GLF_IDENTITY(8, ~ (~ (_GLF_IDENTITY(8, _GLF_IDENTITY(min(8, 8), min(_GLF_IDENTITY(min(8, 8), (min(8, 8)) + 0), _GLF_IDENTITY(min(8, 8), (_GLF_IDENTITY(min(8, 8), 0 ^ (min(8, _GLF_IDENTITY(8, (8) >> 0))))) - _GLF_IDENTITY(0, (0) ^ 0)))))))), (_GLF_IDENTITY(8, ~ (~ (_GLF_IDENTITY(8, min(8, 8)))))) >> 0)) | (8))), 1, 1, 1), (ivec4(int(_GLF_IDENTITY(8, (_GLF_IDENTITY(_GLF_IDENTITY(8, ~ (~ (_GLF_IDENTITY(8, _GLF_IDENTITY(min(8, 8), min(_GLF_IDENTITY(min(8, 8), (min(8, 8)) + 0), _GLF_IDENTITY(min(8, 8), (_GLF_IDENTITY(min(8, 8), 0 ^ (min(8, _GLF_IDENTITY(8, (8) >> 0))))) - _GLF_IDENTITY(0, (0) ^ 0)))))))), (_GLF_IDENTITY(8, ~ (~ (_GLF_IDENTITY(8, min(8, 8)))))) >> 0)) | (8))), 1, 1, 1)) * ivec4(1, 1, 1, 1))))))), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(int(8), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(int(_GLF_IDENTITY(8, (_GLF_IDENTITY(_GLF_IDENTITY(8, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(8, (8) << (0 << _GLF_IDENTITY(int(2), int(2)))), min(8, 8))))), (_GLF_IDENTITY(8, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(8, min(8, 8)), max(_GLF_IDENTITY(8, min(8, 8)), _GLF_IDENTITY(8, min(8, 8)))), int(_GLF_IDENTITY(int(_GLF_IDENTITY(8, min(8, 8))), _GLF_IDENTITY(0 + (int(_GLF_IDENTITY(8, min(8, 8)))), ~ (_GLF_IDENTITY(~ (0 + (int(_GLF_IDENTITY(8, min(8, 8))))), (~ (0 + (int(_GLF_IDENTITY(8, min(8, 8)))))) * 1)))))))))) >> 0)) | (8))), min(int(_GLF_IDENTITY(8, (_GLF_IDENTITY(_GLF_IDENTITY(8, ~ (~ (_GLF_IDENTITY(8, min(8, 8))))), (_GLF_IDENTITY(_GLF_IDENTITY(8, 0 ^ (8)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(8, min(8, 8)), int(_GLF_IDENTITY(int(_GLF_IDENTITY(8, min(8, 8))), 0 + (int(_GLF_IDENTITY(8, min(8, 8))))))))))) >> 0)) | (8))), _GLF_IDENTITY(int(_GLF_IDENTITY(8, (_GLF_IDENTITY(_GLF_IDENTITY(8, ~ (~ (_GLF_IDENTITY(8, min(8, 8))))), (_GLF_IDENTITY(8, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(8, min(8, _GLF_IDENTITY(8, (8) | (_GLF_IDENTITY(8, (8) | (8)))))), int(_GLF_IDENTITY(int(_GLF_IDENTITY(8, min(8, 8))), 0 + (int(_GLF_IDENTITY(8, min(8, 8))))))))))) >> 0)) | _GLF_IDENTITY((8), (false ? _GLF_FUZZED(findLSB(-16367)) : (8))))), ~ (~ (int(_GLF_IDENTITY(8, (_GLF_IDENTITY(_GLF_IDENTITY(8, ~ (~ (_GLF_IDENTITY(8, min(8, 8))))), (_GLF_IDENTITY(_GLF_IDENTITY(8, (_GLF_IDENTITY(8, (8) >> 0)) << 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(8, min(8, 8)), int(_GLF_IDENTITY(int(_GLF_IDENTITY(8, min(8, 8))), _GLF_IDENTITY(0 + (int(_GLF_IDENTITY(8, min(8, 8)))), min(0 + (int(_GLF_IDENTITY(8, min(8, 8)))), 0 + (int(_GLF_IDENTITY(8, min(8, 8))))))))))))) >> 0)) | (8)))))))), 1, 1, 1), clamp(ivec4(int(_GLF_IDENTITY(8, (_GLF_IDENTITY(_GLF_IDENTITY(8, ~ (~ (_GLF_IDENTITY(8, _GLF_IDENTITY(min(8, 8), clamp(_GLF_IDENTITY(min(8, 8), (min(8, 8)) | 0), _GLF_IDENTITY(min(8, 8), (min(8, 8)) | (min(8, 8))), min(8, 8))))))), (_GLF_IDENTITY(8, ~ (~ (_GLF_IDENTITY(8, min(_GLF_IDENTITY(8, max(8, _GLF_IDENTITY(8, 0 | (8)))), 8)))))) >> 0)) | (8))), 1, 1, 1), ivec4(int(_GLF_IDENTITY(8, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(8, 0 + (_GLF_IDENTITY(8, (8) - (0 | 0)))), ~ (~ (_GLF_IDENTITY(8, _GLF_IDENTITY(min(8, 8), clamp(min(8, 8), min(8, 8), min(8, 8))))))), (_GLF_IDENTITY(8, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(8, min(8, 8))), (~ (_GLF_IDENTITY(8, min(8, 8)))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))))) >> 0)) | (8))), 1, 1, 1), ivec4(int(_GLF_IDENTITY(8, (_GLF_IDENTITY(_GLF_IDENTITY(8, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(8, min(8, 8)))), ((~ (_GLF_IDENTITY(8, min(8, 8))))) - 0)), (_GLF_IDENTITY(8, ~ (~ (_GLF_IDENTITY(8, min(8, 8)))))) >> 0)) | (8))), _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, 1 * (1)))), 1, 1)))))), min((_GLF_IDENTITY(int(8), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(int(_GLF_IDENTITY(8, (_GLF_IDENTITY(_GLF_IDENTITY(8, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(8, (8) << (0 << _GLF_IDENTITY(int(2), int(2)))), min(8, 8))))), (_GLF_IDENTITY(8, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(8, min(8, 8)), max(_GLF_IDENTITY(8, min(8, 8)), _GLF_IDENTITY(8, min(8, 8)))), int(_GLF_IDENTITY(int(_GLF_IDENTITY(8, min(8, 8))), _GLF_IDENTITY(0 + (int(_GLF_IDENTITY(8, min(8, 8)))), ~ (_GLF_IDENTITY(~ (0 + (int(_GLF_IDENTITY(8, min(8, 8))))), (~ (0 + (int(_GLF_IDENTITY(8, min(8, 8)))))) * 1)))))))))) >> 0)) | (8))), min(int(_GLF_IDENTITY(8, (_GLF_IDENTITY(_GLF_IDENTITY(8, ~ (~ (_GLF_IDENTITY(8, min(8, 8))))), (_GLF_IDENTITY(_GLF_IDENTITY(8, 0 ^ (8)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(8, min(8, 8)), int(_GLF_IDENTITY(int(_GLF_IDENTITY(8, min(8, 8))), 0 + (int(_GLF_IDENTITY(8, min(8, 8))))))))))) >> 0)) | (8))), _GLF_IDENTITY(int(_GLF_IDENTITY(8, (_GLF_IDENTITY(_GLF_IDENTITY(8, ~ (~ (_GLF_IDENTITY(8, min(8, 8))))), (_GLF_IDENTITY(8, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(8, min(8, _GLF_IDENTITY(8, (8) | (_GLF_IDENTITY(8, (8) | (8)))))), int(_GLF_IDENTITY(int(_GLF_IDENTITY(8, min(8, 8))), 0 + (int(_GLF_IDENTITY(8, min(8, 8))))))))))) >> 0)) | _GLF_IDENTITY((8), (false ? _GLF_FUZZED(findLSB(-16367)) : (8))))), ~ (~ (int(_GLF_IDENTITY(8, (_GLF_IDENTITY(_GLF_IDENTITY(8, ~ (~ (_GLF_IDENTITY(8, min(8, 8))))), (_GLF_IDENTITY(_GLF_IDENTITY(8, (_GLF_IDENTITY(8, (8) >> 0)) << 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(8, min(8, 8)), int(_GLF_IDENTITY(int(_GLF_IDENTITY(8, min(8, 8))), _GLF_IDENTITY(0 + (int(_GLF_IDENTITY(8, min(8, 8)))), min(0 + (int(_GLF_IDENTITY(8, min(8, 8)))), 0 + (int(_GLF_IDENTITY(8, min(8, 8))))))))))))) >> 0)) | (8)))))))), 1, 1, 1), clamp(ivec4(int(_GLF_IDENTITY(8, (_GLF_IDENTITY(_GLF_IDENTITY(8, ~ (~ (_GLF_IDENTITY(8, _GLF_IDENTITY(min(8, 8), clamp(_GLF_IDENTITY(min(8, 8), (min(8, 8)) | 0), _GLF_IDENTITY(min(8, 8), (min(8, 8)) | (min(8, 8))), min(8, 8))))))), (_GLF_IDENTITY(8, ~ (~ (_GLF_IDENTITY(8, min(_GLF_IDENTITY(8, max(8, _GLF_IDENTITY(8, 0 | (8)))), 8)))))) >> 0)) | (8))), 1, 1, 1), ivec4(int(_GLF_IDENTITY(8, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(8, 0 + (_GLF_IDENTITY(8, (8) - (0 | 0)))), ~ (~ (_GLF_IDENTITY(8, _GLF_IDENTITY(min(8, 8), clamp(min(8, 8), min(8, 8), min(8, 8))))))), (_GLF_IDENTITY(8, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(8, min(8, 8))), (~ (_GLF_IDENTITY(8, min(8, 8)))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))))) >> 0)) | (8))), 1, 1, 1), ivec4(int(_GLF_IDENTITY(8, (_GLF_IDENTITY(_GLF_IDENTITY(8, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(8, min(8, 8)))), ((~ (_GLF_IDENTITY(8, min(8, 8))))) - 0)), (_GLF_IDENTITY(8, ~ (~ (_GLF_IDENTITY(8, min(8, 8)))))) >> 0)) | (8))), _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, 1 * (1)))), 1, 1)))))), (_GLF_IDENTITY(int(8), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(int(_GLF_IDENTITY(8, (_GLF_IDENTITY(_GLF_IDENTITY(8, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(8, (8) << (0 << _GLF_IDENTITY(int(2), int(2)))), min(8, 8))))), (_GLF_IDENTITY(8, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(8, min(8, 8)), max(_GLF_IDENTITY(8, min(8, 8)), _GLF_IDENTITY(8, min(8, 8)))), int(_GLF_IDENTITY(int(_GLF_IDENTITY(8, min(8, 8))), _GLF_IDENTITY(0 + (int(_GLF_IDENTITY(8, min(8, 8)))), ~ (_GLF_IDENTITY(~ (0 + (int(_GLF_IDENTITY(8, min(8, 8))))), (~ (0 + (int(_GLF_IDENTITY(8, min(8, 8)))))) * 1)))))))))) >> 0)) | (8))), min(int(_GLF_IDENTITY(8, (_GLF_IDENTITY(_GLF_IDENTITY(8, ~ (~ (_GLF_IDENTITY(8, min(8, 8))))), (_GLF_IDENTITY(_GLF_IDENTITY(8, 0 ^ (8)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(8, min(8, 8)), int(_GLF_IDENTITY(int(_GLF_IDENTITY(8, min(8, 8))), 0 + (int(_GLF_IDENTITY(8, min(8, 8))))))))))) >> 0)) | (8))), _GLF_IDENTITY(int(_GLF_IDENTITY(8, (_GLF_IDENTITY(_GLF_IDENTITY(8, ~ (~ (_GLF_IDENTITY(8, min(8, 8))))), (_GLF_IDENTITY(8, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(8, min(8, _GLF_IDENTITY(8, (8) | (_GLF_IDENTITY(8, (8) | (8)))))), int(_GLF_IDENTITY(int(_GLF_IDENTITY(8, min(8, 8))), 0 + (int(_GLF_IDENTITY(8, min(8, 8))))))))))) >> 0)) | _GLF_IDENTITY((8), (false ? _GLF_FUZZED(findLSB(-16367)) : (8))))), ~ (~ (int(_GLF_IDENTITY(8, (_GLF_IDENTITY(_GLF_IDENTITY(8, ~ (~ (_GLF_IDENTITY(8, min(8, 8))))), (_GLF_IDENTITY(_GLF_IDENTITY(8, (_GLF_IDENTITY(8, (8) >> 0)) << 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(8, min(8, 8)), int(_GLF_IDENTITY(int(_GLF_IDENTITY(8, min(8, 8))), _GLF_IDENTITY(0 + (int(_GLF_IDENTITY(8, min(8, 8)))), min(0 + (int(_GLF_IDENTITY(8, min(8, 8)))), 0 + (int(_GLF_IDENTITY(8, min(8, 8))))))))))))) >> 0)) | (8)))))))), 1, 1, 1), clamp(ivec4(int(_GLF_IDENTITY(8, (_GLF_IDENTITY(_GLF_IDENTITY(8, ~ (~ (_GLF_IDENTITY(8, _GLF_IDENTITY(min(8, 8), clamp(_GLF_IDENTITY(min(8, 8), (min(8, 8)) | 0), _GLF_IDENTITY(min(8, 8), (min(8, 8)) | (min(8, 8))), min(8, 8))))))), (_GLF_IDENTITY(8, ~ (~ (_GLF_IDENTITY(8, min(_GLF_IDENTITY(8, max(8, _GLF_IDENTITY(8, 0 | (8)))), 8)))))) >> 0)) | (8))), 1, 1, 1), ivec4(int(_GLF_IDENTITY(8, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(8, 0 + (_GLF_IDENTITY(8, (8) - (0 | 0)))), ~ (~ (_GLF_IDENTITY(8, _GLF_IDENTITY(min(8, 8), clamp(min(8, 8), min(8, 8), min(8, 8))))))), (_GLF_IDENTITY(8, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(8, min(8, 8))), (~ (_GLF_IDENTITY(8, min(8, 8)))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))))) >> 0)) | (8))), 1, 1, 1), ivec4(int(_GLF_IDENTITY(8, (_GLF_IDENTITY(_GLF_IDENTITY(8, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(8, min(8, 8)))), ((~ (_GLF_IDENTITY(8, min(8, 8))))) - 0)), (_GLF_IDENTITY(8, ~ (~ (_GLF_IDENTITY(8, min(8, 8)))))) >> 0)) | (8))), _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, 1 * (1)))), 1, 1)))))))), 0 ^ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(8), int(_GLF_IDENTITY(ivec4(int(_GLF_IDENTITY(8, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(8, ~ (~ (_GLF_IDENTITY(8, min(8, 8))))), (_GLF_IDENTITY(_GLF_IDENTITY(8, ~ (~ (_GLF_IDENTITY(8, min(8, 8))))), clamp(_GLF_IDENTITY(8, ~ (~ (_GLF_IDENTITY(8, min(8, 8))))), _GLF_IDENTITY(8, ~ (~ (_GLF_IDENTITY(8, min(8, 8))))), _GLF_IDENTITY(8, ~ (~ (_GLF_IDENTITY(8, min(8, 8)))))))) << 0), (_GLF_IDENTITY(8, ~ (~ (_GLF_IDENTITY(8, min(8, 8)))))) >> 0)) | (8))), 1, 1, 1), clamp(ivec4(int(_GLF_IDENTITY(8, (_GLF_IDENTITY(_GLF_IDENTITY(8, ~ (~ (_GLF_IDENTITY(8, min(8, 8))))), (_GLF_IDENTITY(8, ~ (~ (_GLF_IDENTITY(8, min(8, 8)))))) >> 0)) | (8))), 1, 1, 1), ivec4(int(_GLF_IDENTITY(8, (_GLF_IDENTITY(_GLF_IDENTITY(8, ~ (~ (_GLF_IDENTITY(8, min(8, _GLF_IDENTITY(8, max(8, _GLF_IDENTITY(8, (false ? _GLF_FUZZED(29261) : 8))))))))), (_GLF_IDENTITY(8, ~ (~ (_GLF_IDENTITY(8, min(8, 8)))))) >> 0)) | (8))), 1, 1, 1), ivec4(int(_GLF_IDENTITY(8, (_GLF_IDENTITY(_GLF_IDENTITY(8, ~ (~ (_GLF_IDENTITY(8, min(8, 8))))), (_GLF_IDENTITY(8, ~ (~ (_GLF_IDENTITY(8, min(8, 8)))))) >> 0)) | _GLF_IDENTITY((8), int(_GLF_IDENTITY(ivec4((8), (0 | 0), 0, 1), (ivec4((8), (0 | 0), 0, 1)) - (ivec4(1, 1, 1, 1) ^ ivec4(1, 1, 1, 1))))))), 1, 1, 1))))), (_GLF_IDENTITY(int(8), int(_GLF_IDENTITY(ivec4(int(_GLF_IDENTITY(8, (_GLF_IDENTITY(_GLF_IDENTITY(8, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(8, min(8, 8)))), min(~ (~ (_GLF_IDENTITY(8, min(8, 8)))), ~ (~ (_GLF_IDENTITY(8, min(8, 8))))))), (_GLF_IDENTITY(8, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(8, min(8, 8))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ~ (_GLF_IDENTITY(8, min(8, 8))) : _GLF_FUZZED(-52760)))))) >> 0)) | (8))), 1, 1, 1), clamp(ivec4(int(_GLF_IDENTITY(_GLF_IDENTITY(8, 0 ^ (8)), (_GLF_IDENTITY(_GLF_IDENTITY(8, ~ (~ (_GLF_IDENTITY(8, min(8, 8))))), (_GLF_IDENTITY(8, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(8, min(8, 8)))), min(_GLF_IDENTITY((~ (_GLF_IDENTITY(8, min(8, 8)))), 1 * ((~ (_GLF_IDENTITY(8, min(8, 8)))))), (~ (_GLF_IDENTITY(8, min(8, 8)))))))) >> 0)) | (8))), 1, 1, 1), ivec4(int(_GLF_IDENTITY(8, (_GLF_IDENTITY(_GLF_IDENTITY(8, ~ (~ (_GLF_IDENTITY(8, min(8, 8))))), (_GLF_IDENTITY(_GLF_IDENTITY(8, ~ (~ (_GLF_IDENTITY(8, min(8, 8))))), (_GLF_IDENTITY(8, ~ (~ (_GLF_IDENTITY(8, min(8, 8)))))) >> 0)) >> 0)) | (8))), 1, 1, 1), ivec4(int(_GLF_IDENTITY(8, (_GLF_IDENTITY(_GLF_IDENTITY(8, ~ (~ (_GLF_IDENTITY(8, min(8, 8))))), (_GLF_IDENTITY(8, ~ (~ (_GLF_IDENTITY(8, min(8, 8)))))) >> 0)) | (8))), 1, 1, 1)))))) >> 0))))))))))), _GLF_IDENTITY(int(8), (int(8)) | _GLF_IDENTITY((int(8)), clamp((int(8)), _GLF_IDENTITY((int(8)), ~ (~ ((int(8))))), _GLF_IDENTITY((int(8)), (false ? _GLF_FUZZED(bitCount(20295)) : (int(8))))))))) | 0) + (4)), 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)) && true, (_GLF_IDENTITY((bool(false)), ! (! ((bool(false))))) && true) && true))))), bool(bvec4(! (false), true, false, true))))))))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
