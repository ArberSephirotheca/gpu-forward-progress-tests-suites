#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_31 {
 bvec4 _f0;
 int _f1;
 uvec2 _f2;
 mat2x3 _f3;
} ;

struct _GLF_struct_30 {
 float _f0;
 bvec3 _f1;
 vec4 _f2;
 uint read;
 mat4x2 _f3;
 mat2x3 _f4;
} ;

struct _GLF_struct_32 {
 _GLF_struct_30 _f0;
 int _f1;
 _GLF_struct_31 _f2;
} ;

struct _GLF_struct_33 {
 mat2x3 _f0;
 uvec2 _f1;
 _GLF_struct_32 _f2;
 mat3x2 _f3;
 mat2x3 _f4;
 ivec4 _f5;
} ;

struct _GLF_struct_27 {
 mat4x3 _f0;
 mat2 _f1;
 ivec2 _f2;
} ;

struct _GLF_struct_26 {
 bool _f0;
 mat3x2 _f1;
 mat2 _f2;
 vec2 _f3;
} ;

struct _GLF_struct_28 {
 _GLF_struct_26 _f0;
 bool _f1;
 _GLF_struct_27 _f2;
} ;

struct _GLF_struct_24 {
 bvec3 _f0;
 ivec2 _f1;
 bvec4 _f2;
 mat4x3 _f3;
 mat2 _f4;
 mat2x3 _f5;
 bool _f6;
} ;

struct _GLF_struct_25 {
 _GLF_struct_24 _f0;
 mat3x2 _f1;
 vec3 _f2;
 uvec2 _f3;
} ;

struct _GLF_struct_22 {
 ivec2 _f0;
 mat4x2 _f1;
 mat2 _f2;
 ivec4 _f3;
 mat4x2 _f4;
 bvec4 _f5;
 uvec4 _f6;
} ;

struct _GLF_struct_21 {
 float _f0;
 mat2x3 _f1;
 mat2x3 _f2;
 bvec4 _f3;
 bool _f4;
} ;

struct _GLF_struct_23 {
 _GLF_struct_21 _f0;
 _GLF_struct_22 _f1;
} ;

struct _GLF_struct_19 {
 mat2x4 _f0;
 ivec3 _f1;
 vec3 _f2;
 mat4 _f3;
 ivec4 _f4;
 uint virtual_gid;
} ;

struct _GLF_struct_18 {
 int _f0;
 vec3 _f1;
 float _f2;
 mat4x2 _f3;
 mat2 _f4;
 int _f5;
} ;

struct _GLF_struct_20 {
 ivec3 _f0;
 mat3x2 _f1;
 mat3x2 _f2;
 _GLF_struct_18 _f3;
 _GLF_struct_19 _f4;
} ;

struct _GLF_struct_16 {
 vec2 _f0;
 bvec3 _f1;
 vec3 _f2;
} ;

struct _GLF_struct_17 {
 mat4 _f0;
 bool _f1;
 _GLF_struct_16 _f2;
} ;

struct _GLF_struct_29 {
 _GLF_struct_17 _f0;
 uvec3 _f1;
 _GLF_struct_20 _f2;
 _GLF_struct_23 _f3;
 _GLF_struct_25 _f4;
 _GLF_struct_28 _f5;
} ;

struct _GLF_struct_13 {
 mat4x3 _f0;
} ;

struct _GLF_struct_12 {
 ivec3 _f0;
 uvec2 _f1;
 uint _f2;
 mat3x2 _f3;
 mat2x4 _f4;
 uvec2 _f5;
} ;

struct _GLF_struct_11 {
 vec3 _f0;
 uvec2 _f1;
} ;

struct _GLF_struct_10 {
 ivec4 _f0;
 vec3 _f1;
 mat3 _f2;
} ;

struct _GLF_struct_14 {
 mat2x4 _f0;
 _GLF_struct_10 _f1;
 _GLF_struct_11 _f2;
 _GLF_struct_12 _f3;
 _GLF_struct_13 _f4;
 float _f5;
 mat4x3 _f6;
} ;

struct _GLF_struct_8 {
 bool _f0;
 uvec2 _f1;
} ;

struct _GLF_struct_7 {
 vec3 _f0;
} ;

struct _GLF_struct_6 {
 float _f0;
 uvec2 _f1;
} ;

struct _GLF_struct_9 {
 _GLF_struct_6 _f0;
 vec2 _f1;
 bool _f2;
 _GLF_struct_7 _f3;
 vec2 _f4;
 _GLF_struct_8 _f5;
 int _f6;
} ;

struct _GLF_struct_15 {
 vec3 _f0;
 bvec2 _f1;
 bool _f2;
 _GLF_struct_9 _f3;
 mat2x3 _f4;
 mat3 _f5;
 uint num_workgroup;
 _GLF_struct_14 _f6;
} ;

struct _GLF_struct_5 {
 float _f0;
 uint subgroup_id;
} ;

struct _GLF_struct_2 {
 uint _f0;
 mat2 _f1;
 int _f2;
 bvec4 _f3;
 bvec3 _f4;
 bvec4 _f5;
} ;

struct _GLF_struct_3 {
 _GLF_struct_2 _f0;
} ;

struct _GLF_struct_0 {
 ivec3 _f0;
 uvec3 _f1;
 mat2x3 _f2;
 bvec3 _f3;
} ;

struct _GLF_struct_1 {
 mat2x4 _f0;
 _GLF_struct_0 _f1;
} ;

struct _GLF_struct_4 {
 uint _f0;
 bool _f1;
 _GLF_struct_1 _f2;
 _GLF_struct_3 _f3;
 uint workgroup_base;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(1.0, gl_SubgroupID);
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 _GLF_struct_15 _GLF_struct_replacement_15 = _GLF_struct_15(_GLF_IDENTITY(vec3(1.0), _GLF_IDENTITY((vec3(1.0)), ((vec3(1.0))) - vec3(0.0, 0.0, 0.0)) - vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, _GLF_struct_9(_GLF_struct_6(1.0, uvec2(1u)), _GLF_IDENTITY(vec2(1.0), clamp(vec2(1.0), vec2(1.0), vec2(1.0))), true, _GLF_struct_7(vec3(1.0)), vec2(1.0), _GLF_struct_8(true, uvec2(1u)), 1), mat2x3(1.0), mat3(1.0), gl_NumWorkGroups.x, _GLF_struct_14(mat2x4(1.0), _GLF_struct_10(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(1, (1) << 0))), int(ivec2((~ (_GLF_IDENTITY(1, (1) << 0))), 1)))), min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) << _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) << 0))))), _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) << 0))))))), _GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), clamp(vec3(1.0), vec3(1.0), vec3(1.0))), _GLF_IDENTITY((vec3(1.0)) * exp(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-7403.2138)), float(0.0), bool(true))))))), clamp((vec3(1.0)) * exp(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-7403.2138)), float(0.0), bool(true))))))), (vec3(1.0)) * exp(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-7403.2138)), float(0.0), bool(true))))))), _GLF_IDENTITY((vec3(1.0)) * exp(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-7403.2138)), float(0.0), bool(true))))))), vec3(0.0, 0.0, 0.0) + ((vec3(1.0)) * exp(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-7403.2138)), float(0.0), bool(true)))))))))))), mat3(1.0)), _GLF_struct_11(vec3(1.0), uvec2(_GLF_IDENTITY(1u, 0u ^ (1u)))), _GLF_struct_12(ivec3(1), uvec2(1u), 1u, mat3x2(1.0), mat2x4(1.0), uvec2(1u)), _GLF_struct_13(mat4x3(1.0)), 1.0, mat4x3(1.0)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_DEAD(false), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    return;
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(1u, true, _GLF_struct_1(mat2x4(1.0), _GLF_struct_0(ivec3(1), uvec3(1u), mat2x3(1.0), bvec3(true))), _GLF_struct_3(_GLF_struct_2(1u, _GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat2(1.0) : _GLF_FUZZED(mat2(mat2x3(893.506, -73.70, -958.178, 9.0, 232.044, -567.268)))), transpose(transpose(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat2(1.0) : _GLF_FUZZED(mat2(mat2x3(893.506, -73.70, -958.178, 9.0, 232.044, -567.268)))), mat2(mat4(_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat2(1.0) : _GLF_FUZZED(mat2(mat2x3(893.506, -73.70, -958.178, 9.0, 232.044, -567.268)))), mat2(mat3x4((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat2(1.0) : _GLF_FUZZED(mat2(mat2x3(893.506, -73.70, -958.178, 9.0, 232.044, -567.268)))))))))), ((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) - 0.0))) ? mat2(1.0) : _GLF_FUZZED(mat2(mat2x3(893.506, -73.70, -958.178, 9.0, 232.044, -567.268))))) / mat2(1.0, 1.0, 1.0, 1.0)))))), 1, bvec4(true), _GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))), bvec4(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(uvec2(workgroup_id, 0u)), (uint(uvec2(workgroup_id, 0u))) >> 0u))) >> 0u));
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY(true, true && (true)), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bvec3(_GLF_IDENTITY(true, true && (true)), true, true))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, (true) || false))) && (true)), true))))))))))), (bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY(true, true && (true)), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bvec3(_GLF_IDENTITY(true, true && (true)), true, true))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, (true) || false))) && (true)), true)))))))))))) || false))))
  barrier();
 uint subgroup_base = _GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_id, (_GLF_struct_replacement_5.subgroup_id) - 0u) * subgroup_size;
 _GLF_struct_29 _GLF_struct_replacement_29 = _GLF_struct_29(_GLF_struct_17(mat4(1.0), true, _GLF_struct_16(_GLF_IDENTITY(vec2(1.0), min(vec2(1.0), vec2(1.0))), bvec3(true), _GLF_IDENTITY(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) * 1.0), mix(float(_GLF_FUZZED(-1.9)), float(1.0), bool(true))), log(1.0)))), float(mat3x4(_GLF_IDENTITY(1.0, float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) * 1.0), mix(float(_GLF_FUZZED(-1.9)), float(1.0), bool(true))), log(1.0)))), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(sqrt(0.0), 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(sqrt(0.0), 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, determinant(mat4(1.0, 0.0, 0.0, exp(0.0), 0.0, exp(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, log(1.0))), dot(vec2(1.0, 0.0), vec2(1.0, log(1.0)))))))), clamp(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0))) * 1.0), mix(float(_GLF_FUZZED(-1.9)), float(1.0), bool(true))), log(1.0))))), (false ? _GLF_FUZZED(vec3(-6.6)) : vec3(_GLF_IDENTITY(1.0, float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0))) * 1.0), mix(float(_GLF_FUZZED(-1.9)), float(1.0), bool(true))), log(1.0))))))), vec3(_GLF_IDENTITY(1.0, float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) * 1.0), mix(float(_GLF_FUZZED(-1.9)), float(1.0), bool(true))), log(1.0))))), vec3(_GLF_IDENTITY(1.0, float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) * 1.0), mix(float(_GLF_FUZZED(-1.9)), float(1.0), bool(true))), log(1.0))))))))), uvec3(1u), _GLF_struct_20(ivec3(1), mat3x2(1.0), mat3x2(1.0), _GLF_struct_18(1, vec3(1.0), _GLF_IDENTITY(1.0, float(mat2x4(1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0, sqrt(1.0), 0.0, abs(1.0), 0.0, 0.0))), mat4x2(1.0), mat2(1.0), 1), _GLF_struct_19(mat2x4(1.0), ivec3(1), vec3(1.0), mat4(1.0), ivec4(1), _GLF_IDENTITY(_GLF_struct_replacement_4.workgroup_base + subgroup_base + subgroup_local_id, (_GLF_IDENTITY(_GLF_struct_replacement_4.workgroup_base + subgroup_base + subgroup_local_id, clamp(_GLF_struct_replacement_4.workgroup_base + subgroup_base + subgroup_local_id, _GLF_struct_replacement_4.workgroup_base + subgroup_base + subgroup_local_id, _GLF_struct_replacement_4.workgroup_base + subgroup_base + subgroup_local_id))) / 1u))), _GLF_struct_23(_GLF_struct_21(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), mat2x3(1.0), mat2x3(1.0), bvec4(_GLF_IDENTITY(true, false || (true))), true), _GLF_struct_22(ivec2(1), mat4x2(1.0), _GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(5.6)), float(1.0), bool(true))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(5.6)), float(1.0), bool(true))), clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(5.6)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(5.6)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(5.6)), float(1.0), bool(true)))))) * 1.0)), (mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(5.6)), float(1.0), bool(true))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(5.6)), float(1.0), bool(true))), clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(5.6)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(5.6)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(5.6)), float(1.0), bool(true)))))) * 1.0))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), ivec4(1), mat4x2(1.0), bvec4(true), uvec4(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | 0u)) | (1u))))), _GLF_struct_25(_GLF_struct_24(bvec3(true), ivec2(1), bvec4(true), mat4x3(1.0), mat2(1.0), mat2x3(1.0), true), mat3x2(1.0), vec3(1.0), uvec2(1u)), _GLF_struct_28(_GLF_struct_26(true, mat3x2(1.0), mat2(1.0), vec2(1.0)), true, _GLF_struct_27(mat4x3(1.0), mat2(1.0), ivec2(1))));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1285.7407), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0)), vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))) / vec2(1.0, 1.0)), clamp((injectionSwitch), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-297.312), _GLF_FUZZED(9.4)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), (injectionSwitch)))[0], _GLF_FUZZED(-3.7)), bvec2(true, false))).x, float(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1285.7407), (injectionSwitch)[1]), vec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))[1])))[0], _GLF_FUZZED(-3.7)), bvec2(true, _GLF_IDENTITY(false, bool(bool(false)))))).x, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-6906.4652)), min(float(_GLF_FUZZED(-6906.4652)), float(_GLF_FUZZED(-6906.4652)))), float(1.0), bool(true))), 1.0, 1.0)), 1.0, 1.0, abs(0.0), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), clamp(dot(vec2(1.0, _GLF_IDENTITY(0.0, (0.0) / exp(0.0))), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), mix(float(_GLF_FUZZED(9.6)), float(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), (dot(vec2(1.0, 0.0), vec2(1.0, 0.0))) / cos(0.0))), bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), false || (! (true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(! (true), false || (! (true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (true), false || (! (true)))))))))))), dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(1.0, (1.0) / cos(0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, 0.0 + (0.0)), _GLF_IDENTITY(float(mat2x3(0.0, 1.0, 0.0, 0.0, 1.0, 0.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), float(_GLF_IDENTITY(mat2x4(float(mat2x3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), mat2x4(_GLF_IDENTITY(mat4(_GLF_IDENTITY(mat2x4(float(mat2x3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), transpose(transpose(mat2x4(float(mat2x3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), (false ? _GLF_FUZZED(mat4(6737.2564, 141.862, 4.6, -0.8, 739.339, 816.034, -8.7, -8118.5555, -9.7, -651.494, 849.635, -7.7, -8804.4721, -8.2, 75.28, 5.2)) : mat4(_GLF_IDENTITY(mat2x4(float(mat2x3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), transpose(transpose(mat2x4(float(mat2x3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))))))), 1.0 * (float(mat2x3(0.0, 1.0, 0.0, 0.0, 1.0, 0.0)))), float(mat2x3(0.0, 1.0, 0.0, 0.0, 1.0, 0.0))))))))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint next_virtual_gid = _GLF_struct_replacement_4.workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 _GLF_struct_33 _GLF_struct_replacement_33 = _GLF_struct_33(mat2x3(1.0), _GLF_IDENTITY(uvec2(1u), min(_GLF_IDENTITY(uvec2(1u), min(uvec2(1u), _GLF_IDENTITY(uvec2(1u), (_GLF_IDENTITY(uvec2(1u), uvec2(uvec2(uvec2(1u))))) | (uvec2(1u))))), uvec2(1u))), _GLF_struct_32(_GLF_struct_30(1.0, bvec3(true), vec4(1.0), 0, mat4x2(1.0), mat2x3(1.0)), 1, _GLF_struct_31(bvec4(true), 1, uvec2(1u), mat2x3(1.0))), mat3x2(1.0), mat2x3(1.0), ivec4(1));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(458.145))), min(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(458.145))), _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(458.145)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, (1) | 0)), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if((subgroup_local_id % 2) == 0)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), _GLF_IDENTITY(true, true && (true))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), _GLF_IDENTITY(true, true && (true))), _GLF_IDENTITY(false, bool(bvec2(false, true)))))), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(float(false))))))), false))), _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (_GLF_IDENTITY(true, true && (true))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))), false))), _GLF_IDENTITY(true, true && (true))), false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), _GLF_IDENTITY(true, true && (true))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), _GLF_IDENTITY(true, true && (true))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), _GLF_IDENTITY(true, true && (true))), true)), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), _GLF_IDENTITY(true, true && (true))), true)), true, false)))), false)))))), false))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false)))))))), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bool(true)))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bool(true)))))), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bool(true)))))))), bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bool(true)))))))), true))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bool(true)))))))), bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bool(true)))))))), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bool(true)))))))), bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bool(true)))))))), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false)), bvec2(bvec4(bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bool(true)))))))), bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bool(true)))))))), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false)), false, false)))))), false))), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), _GLF_IDENTITY(true, true && (true))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), _GLF_IDENTITY(true, true && (true))), true))), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), _GLF_IDENTITY(true, true && (true))), false), false))))), false, true)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), false)), bool(bool(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), false)))))))), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), true && (_GLF_IDENTITY(true, bool(bvec3(true, false, false)))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), false)), bool(bool(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), false)))))))), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), true && (_GLF_IDENTITY(true, bool(bvec3(true, false, false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))), false))), _GLF_IDENTITY(true, true && _GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), false || ((true)))))))))), false))), false, true)), true, true)), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false))), _GLF_IDENTITY(true, true && (true))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), _GLF_IDENTITY(true, _GLF_IDENTITY(true, true && (true)) && (true))), false))), false, true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false))), _GLF_IDENTITY(true, true && (true))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), _GLF_IDENTITY(true, _GLF_IDENTITY(true, true && (true)) && (true))), false))), false, true))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false))), _GLF_IDENTITY(true, true && (true))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), _GLF_IDENTITY(true, _GLF_IDENTITY(true, true && (true)) && (true))), false))), false, true))))), bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false))), _GLF_IDENTITY(true, true && (true))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), _GLF_IDENTITY(true, _GLF_IDENTITY(true, true && (true)) && (true))), false))), false, true))))))))))), true, _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bvec2(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))), true, true))))))), _GLF_IDENTITY(true, true && (true))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), _GLF_IDENTITY(true, true && (true))), false))), false, true)), true, true)), true))), bvec2(bvec4(bvec2(bvec2(bvec3(bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), _GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))), true && (true))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), _GLF_IDENTITY(true, true && (true))), false))), false, true)), true, true)), true))), false, false)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), _GLF_IDENTITY(true, true && (true))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), _GLF_IDENTITY(true, true && (true))), false))), false, true)), true, true)), true))), bvec2(bvec4(bvec2(bvec2(bvec3(bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), _GLF_IDENTITY(true, true && (true))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-2408.8255))) > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true))), false, true, true))), false))), _GLF_IDENTITY(true, true && (true))), false))), false, true)), true, true)), true))), false, false)))))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false))), _GLF_IDENTITY(true, true && (true))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), _GLF_IDENTITY(true, _GLF_IDENTITY(true, true && (true)) && (true))), false))), false, true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false))), _GLF_IDENTITY(true, true && (true))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), _GLF_IDENTITY(true, _GLF_IDENTITY(true, true && (true)) && (true))), false))), false, true))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false))), _GLF_IDENTITY(true, true && (true))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), _GLF_IDENTITY(true, _GLF_IDENTITY(true, true && (true)) && (true))), false))), false, true))))), bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false))), _GLF_IDENTITY(true, true && (true))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), _GLF_IDENTITY(true, _GLF_IDENTITY(true, true && (true)) && (true))), false))), false, true))))))))))), true, _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bvec2(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))), true, true))))))), _GLF_IDENTITY(true, true && (true))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), _GLF_IDENTITY(true, true && (true))), false))), false, true)), true, true)), true))), bvec2(bvec4(bvec2(bvec2(bvec3(bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), _GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))), true && (true))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), _GLF_IDENTITY(true, true && (true))), false))), false, true)), true, true)), true))), false, false)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), _GLF_IDENTITY(true, true && (true))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), _GLF_IDENTITY(true, true && (true))), false))), false, true)), true, true)), true))), bvec2(bvec4(bvec2(bvec2(bvec3(bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), _GLF_IDENTITY(true, true && (true))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-2408.8255))) > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true))), false, true, true))), false))), _GLF_IDENTITY(true, true && (true))), false))), false, true)), true, true)), true))), false, false)))))))), true, false)))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   subgroupAll(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), false || (bool(false)))), (bool(_GLF_IDENTITY(bool(false), false || (bool(false))))) || false)));
   _GLF_IDENTITY(_GLF_struct_replacement_33._f2._f0.read = atomicLoad(buf[_GLF_struct_replacement_29._f2._f4.virtual_gid], 4, 64, _GLF_IDENTITY(2, _GLF_IDENTITY((2) / ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(2), max(_GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2))), int(2)))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(2), max(_GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2))), int(2)))), (~ (_GLF_IDENTITY(int(2), max(_GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2))), int(2))))) | 0)))))), int(2))) >> _GLF_IDENTITY(int(2), int(2))), 0 | (_GLF_IDENTITY((2) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), clamp((2) / (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))), 0 | ((1 << _GLF_IDENTITY(int(2), int(2))))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))), (true ? (1 << _GLF_IDENTITY(int(2), int(2))) : _GLF_FUZZED((+ bitCount(98523)))))) / 1) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (false ? _GLF_FUZZED(-64990) : int(2)))) >> 0)) ^ 0))), (2) / (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (-89157 & 0) + (_GLF_IDENTITY(int(2), (int(2)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))))) >> _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, max(2, 2))) - 0))))), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))) | ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) | 0)), int(2))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(2, int(ivec3(2, 0, 1)))), int(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, int(ivec4(_GLF_IDENTITY(2, max(2, 2)), (0 ^ 0), 1, 0)))) >> 0)))))), _GLF_IDENTITY((2) / _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (1 ^ 0) * (int(2))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) | int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(2))), min(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (1 ^ 0) * (int(2))))) >> _GLF_IDENTITY(int(2), int(2))), ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY((1 ^ 0) * (int(2)), max(_GLF_IDENTITY((1 ^ 0) * (int(2)), (true ? (1 ^ 0) * (int(2)) : _GLF_FUZZED(-59439))), (1 ^ 0) * (int(2))))))) >> _GLF_IDENTITY(int(2), int(2))))), ((2) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))) ^ 0))))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_33._f2._f0.read = atomicLoad(buf[_GLF_struct_replacement_29._f2._f4.virtual_gid], 4, 64, _GLF_IDENTITY(2, _GLF_IDENTITY((2) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), 0 | (_GLF_IDENTITY((2) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), clamp((2) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), (2) / (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))) | ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))), _GLF_IDENTITY((2) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), ((2) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))) ^ 0))))))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_struct_replacement_33._f2._f0.read = atomicLoad(buf[_GLF_struct_replacement_29._f2._f4.virtual_gid], 4, 64, _GLF_IDENTITY(2, _GLF_IDENTITY((2) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), 0 | (_GLF_IDENTITY((2) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), clamp((2) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), (2) / (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))) | ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))), _GLF_IDENTITY((2) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), ((2) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))) ^ 0)))))))))) | (0u ^ (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_33._f2._f0.read = atomicLoad(buf[_GLF_struct_replacement_29._f2._f4.virtual_gid], 4, 64, _GLF_IDENTITY(2, _GLF_IDENTITY((2) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), 0 | (_GLF_IDENTITY((2) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), clamp((2) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), (2) / (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))) | ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))), _GLF_IDENTITY((2) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), ((2) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))) ^ 0))))))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_struct_replacement_33._f2._f0.read = atomicLoad(buf[_GLF_struct_replacement_29._f2._f4.virtual_gid], 4, 64, _GLF_IDENTITY(2, _GLF_IDENTITY((2) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), 0 | (_GLF_IDENTITY((2) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), clamp((2) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), (2) / (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))) | ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))), _GLF_IDENTITY((2) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), ((2) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))) ^ 0)))))))))) | (0u ^ (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), ~ (~ ((_GLF_IDENTITY(_GLF_struct_replacement_33._f2._f0.read = atomicLoad(buf[_GLF_struct_replacement_29._f2._f4.virtual_gid], 4, 64, _GLF_IDENTITY(2, _GLF_IDENTITY((2) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), _GLF_IDENTITY(0 | (_GLF_IDENTITY((2) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), clamp((2) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), (2) / (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))) | ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))), _GLF_IDENTITY((2) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), ((2) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))) ^ 0)))), (0 | (_GLF_IDENTITY((2) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(2, 0 ^ (2))), int(2))), clamp((2) / (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))), 0 ^ ((1 << _GLF_IDENTITY(int(2), int(2))))) >> _GLF_IDENTITY(int(2), int(2))), (2) / (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, (2) ^ 0)))) | ((_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, min(1, 1)), 1)) << _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, max(2, 2))))) >> _GLF_IDENTITY(int(2), int(2))))), _GLF_IDENTITY((2) / _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), 0 | (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), ~ (~ (((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))))))), ((2) / (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)), clamp((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)), (1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)), 0 | ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))))))) ^ 0))))) - 0)))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_struct_replacement_33._f2._f0.read = _GLF_IDENTITY(atomicLoad(buf[_GLF_struct_replacement_29._f2._f4.virtual_gid], 4, 64, _GLF_IDENTITY(2, _GLF_IDENTITY((2) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), 0 | (_GLF_IDENTITY((2) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), clamp((2) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), (2) / (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))) | ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))), _GLF_IDENTITY((2) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), ((2) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))) ^ 0))))))), ~ (~ (atomicLoad(buf[_GLF_struct_replacement_29._f2._f4.virtual_gid], 4, 64, _GLF_IDENTITY(2, _GLF_IDENTITY((2) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), 0 | (_GLF_IDENTITY((2) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), clamp((2) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), _GLF_IDENTITY((2), clamp((2), (2), (2))) / (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))), ~ (_GLF_IDENTITY(~ ((1 << _GLF_IDENTITY(int(2), int(2)))), (~ ((1 << _GLF_IDENTITY(int(2), int(2))))) | (~ ((1 << _GLF_IDENTITY(int(2), int(2)))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), ~ (~ (_GLF_IDENTITY(int(2), int(2))))), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))) | (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))), 0 ^ ((1 << _GLF_IDENTITY(int(2), int(2))))) >> _GLF_IDENTITY(int(2), int(2))))), _GLF_IDENTITY((2) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), ((2) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))) ^ 0))))))))))))) | (0u ^ (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(4u), uint(4u)), clamp(0u << _GLF_IDENTITY(uint(4u), uint(4u)), 0u << _GLF_IDENTITY(uint(4u), uint(4u)), 0u << _GLF_IDENTITY(uint(4u), uint(4u)))))))))) * 1u), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_33._f2._f0.read = atomicLoad(buf[_GLF_struct_replacement_29._f2._f4.virtual_gid], 4, 64, _GLF_IDENTITY(2, _GLF_IDENTITY((2) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), 0 | (_GLF_IDENTITY((2) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), clamp((2) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), (2) / (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(-88307)))), int(2)), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), int(2)), (1 << _GLF_IDENTITY(int(2), int(2))) - 0)) >> _GLF_IDENTITY(int(2), int(2))) | ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))), _GLF_IDENTITY((2) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), ((2) / (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)), ~ (~ ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))))) ^ 0))))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), 1u * (_GLF_FUZZED(subgroup_size))) : _GLF_struct_replacement_33._f2._f0.read = atomicLoad(buf[_GLF_struct_replacement_29._f2._f4.virtual_gid], 4, 64, _GLF_IDENTITY(2, _GLF_IDENTITY((2) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), _GLF_IDENTITY(0, int(ivec4(0, 0, 1, 1))) | (_GLF_IDENTITY((2) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), clamp((2) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), (2) / (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))) | ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))), _GLF_IDENTITY((2) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), ((2) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))) ^ 0)))))))))) | (0u ^ (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), 0u + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_33._f2._f0.read = atomicLoad(buf[_GLF_struct_replacement_29._f2._f4.virtual_gid], 4, 64, _GLF_IDENTITY(2, _GLF_IDENTITY((2) / ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), int(2)), ~ (~ (1 << _GLF_IDENTITY(int(2), int(2)))))) >> _GLF_IDENTITY(int(2), int(2))), 0 | (_GLF_IDENTITY((2) / (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))), ((1 << _GLF_IDENTITY(int(2), int(2)))) * 1) >> _GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))), ((1 << _GLF_IDENTITY(int(2), int(2)))) * 1) >> _GLF_IDENTITY(int(2), int(2))) | (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))), ((1 << _GLF_IDENTITY(int(2), int(2)))) * 1) >> _GLF_IDENTITY(int(2), int(2))))), clamp((2) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), (2) / (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(ivec2(int(2), 1))), int(2)), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))) | ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))), _GLF_IDENTITY(_GLF_IDENTITY((2) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), ~ (_GLF_IDENTITY(~ ((2) / (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))), int(_GLF_IDENTITY(ivec4((1 << _GLF_IDENTITY(int(2), int(2))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, 0), ~ (~ (ivec4((1 << _GLF_IDENTITY(int(2), int(2))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, 0)))))) >> _GLF_IDENTITY(int(2), int(2)))), (~ ((2) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))) | 0))), ((2) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))) ^ 0))))))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_struct_replacement_33._f2._f0.read = atomicLoad(buf[_GLF_struct_replacement_29._f2._f4.virtual_gid], 4, 64, _GLF_IDENTITY(2, _GLF_IDENTITY((2) / _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), clamp(((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), _GLF_IDENTITY((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))), ~ (_GLF_IDENTITY(~ ((1 << _GLF_IDENTITY(int(2), int(2)))), 0 ^ (~ ((1 << _GLF_IDENTITY(int(2), int(2)))))))) >> _GLF_IDENTITY(int(2), int(2))), 0 | (((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))))), 0 | (_GLF_IDENTITY((2) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, (2) - 0)))), clamp((2) / (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))), ~ (~ ((1 << _GLF_IDENTITY(int(2), int(2)))))) >> _GLF_IDENTITY(int(2), int(2))), (2) / (_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), ~ (~ (_GLF_IDENTITY(int(2), int(2)))))) >> _GLF_IDENTITY(int(2), int(2)), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))) | ((_GLF_IDENTITY(1, (1) + 0) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), int(2)), int(int(_GLF_IDENTITY(int(2), int(2)))))) << 0)))), _GLF_IDENTITY(_GLF_IDENTITY((2) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, int(ivec4(2, 0, 1, 1)))))), ((2) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))) ^ 0), (true ? _GLF_IDENTITY((2) / ((1 << _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, clamp(2, 2, 2))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(2), int(2))) * 1)), ((2) / ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (false ? _GLF_FUZZED(95042) : int(2))))) >> _GLF_IDENTITY(int(2), int(2)))) ^ 0) : _GLF_FUZZED(_GLF_IDENTITY(17585, ~ (~ (17585))))))))))))))), ~ (~ ((_GLF_IDENTITY(_GLF_struct_replacement_33._f2._f0.read = atomicLoad(buf[_GLF_struct_replacement_29._f2._f4.virtual_gid], 4, 64, _GLF_IDENTITY(2, _GLF_IDENTITY((2) / ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), int(2)), ~ (~ (1 << _GLF_IDENTITY(int(2), int(2)))))) >> _GLF_IDENTITY(int(2), int(2))), 0 | (_GLF_IDENTITY((2) / (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))), ((1 << _GLF_IDENTITY(int(2), int(2)))) * 1) >> _GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))), ((1 << _GLF_IDENTITY(int(2), int(2)))) * 1) >> _GLF_IDENTITY(int(2), int(2))) | (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))), ((1 << _GLF_IDENTITY(int(2), int(2)))) * 1) >> _GLF_IDENTITY(int(2), int(2))))), clamp((2) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), (2) / (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(ivec2(int(2), 1))), int(2)), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))) | ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))), _GLF_IDENTITY(_GLF_IDENTITY((2) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), ~ (_GLF_IDENTITY(~ ((2) / (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))), int(_GLF_IDENTITY(ivec4((1 << _GLF_IDENTITY(int(2), int(2))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, 0), ~ (~ (ivec4((1 << _GLF_IDENTITY(int(2), int(2))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, 0)))))) >> _GLF_IDENTITY(int(2), int(2)))), (~ ((2) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))) | 0))), ((2) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))) ^ 0))))))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_struct_replacement_33._f2._f0.read = atomicLoad(buf[_GLF_struct_replacement_29._f2._f4.virtual_gid], 4, 64, _GLF_IDENTITY(2, _GLF_IDENTITY((2) / _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), clamp(((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), _GLF_IDENTITY((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))), ~ (_GLF_IDENTITY(~ ((1 << _GLF_IDENTITY(int(2), int(2)))), 0 ^ (~ ((1 << _GLF_IDENTITY(int(2), int(2)))))))) >> _GLF_IDENTITY(int(2), int(2))), 0 | (((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))))), 0 | (_GLF_IDENTITY((2) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, (2) - 0)))), clamp((2) / (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))), ~ (~ ((1 << _GLF_IDENTITY(int(2), int(2)))))) >> _GLF_IDENTITY(int(2), int(2))), (2) / (_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), ~ (~ (_GLF_IDENTITY(int(2), int(2)))))) >> _GLF_IDENTITY(int(2), int(2)), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))) | ((_GLF_IDENTITY(1, (1) + 0) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), int(2)), int(int(_GLF_IDENTITY(int(2), int(2)))))) << 0)))), _GLF_IDENTITY(_GLF_IDENTITY((2) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, int(ivec4(2, 0, 1, 1)))))), ((2) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))) ^ 0), (true ? _GLF_IDENTITY((2) / ((1 << _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, clamp(2, 2, 2))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(2), int(2))) * 1)), ((2) / ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (false ? _GLF_FUZZED(95042) : int(2))))) >> _GLF_IDENTITY(int(2), int(2)))) ^ 0) : _GLF_FUZZED(_GLF_IDENTITY(17585, ~ (~ (17585)))))))))))))))))) | (0u ^ (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (uint(4u)) / 1u), uint(4u))))))))));
  }
 else
  {
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, abs(1.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0))).x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-200.728)), float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 0.0, abs(0.0), 0.0), max(vec4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 0.0, abs(0.0), 0.0), vec4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 0.0, abs(0.0), 0.0)))))) / 1.0)), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.y), max(_GLF_IDENTITY((injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))) - 0.0), _GLF_IDENTITY((injectionSwitch.y), clamp(_GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) * 1.0), (injectionSwitch.y), (injectionSwitch.y))))) - 0.0, max(_GLF_IDENTITY((injectionSwitch.y), max(_GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) - _GLF_IDENTITY(0.0, max(0.0, 0.0))), _GLF_IDENTITY((injectionSwitch.y), clamp(_GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) * 1.0), (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), (injectionSwitch.y))))) - 0.0, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.y), min((injectionSwitch.y), (injectionSwitch.y))), max(_GLF_IDENTITY((injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)) - 0.0), _GLF_IDENTITY((injectionSwitch.y), clamp(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9.5) : injectionSwitch.y))), ((injectionSwitch.y)) * 1.0), (injectionSwitch.y), (injectionSwitch.y))))) - 0.0))), max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), max(_GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) - 0.0), _GLF_IDENTITY((injectionSwitch.y), _GLF_IDENTITY(clamp(_GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) * 1.0), (injectionSwitch.y), (injectionSwitch.y)), max(clamp(_GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) * 1.0), (injectionSwitch.y), (injectionSwitch.y)), clamp(_GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) * 1.0), (injectionSwitch.y), (injectionSwitch.y))))))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.y), float(vec2((injectionSwitch.y), 0.0))), max(_GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) - _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, 0.0, 0.0, 0.0)), clamp(float(vec4(0.0, 0.0, 0.0, 0.0)), float(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(float(vec4(0.0, 0.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(-8425.8210)), float(float(vec4(0.0, 0.0, 0.0, 0.0))), bool(true))))))), _GLF_IDENTITY((injectionSwitch.y), clamp(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) - 0.0)) / 1.0))) * 1.0), (injectionSwitch.y), (_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)), (true ? float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) + 0.0, ((injectionSwitch.y) + 0.0) / 1.0))) : _GLF_FUZZED(-8.6)))))))))))) - 0.0), (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), max(_GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) - 0.0), _GLF_IDENTITY((injectionSwitch.y), clamp(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.y), clamp((injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y)))) * 1.0), (false ? _GLF_FUZZED(-57.99) : _GLF_IDENTITY((injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.y), clamp((injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y)))) * 1.0))), (injectionSwitch.y), (injectionSwitch.y))))) - 0.0)) / 1.0)))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))) || false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   _GLF_struct_replacement_33._f2._f0.read = atomicLoad(_GLF_IDENTITY(buf[_GLF_struct_replacement_29._f2._f4.virtual_gid], max(buf[_GLF_IDENTITY(_GLF_struct_replacement_29._f2._f4.virtual_gid, 1u * (_GLF_struct_replacement_29._f2._f4.virtual_gid))], buf[_GLF_IDENTITY(_GLF_struct_replacement_29._f2._f4.virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_struct_replacement_29._f2._f4.virtual_gid), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY((_GLF_struct_replacement_29._f2._f4.virtual_gid), min((_GLF_IDENTITY(_GLF_struct_replacement_29._f2._f4.virtual_gid, min(_GLF_IDENTITY(_GLF_struct_replacement_29._f2._f4.virtual_gid, uint(uvec2(_GLF_struct_replacement_29._f2._f4.virtual_gid, 0u))), _GLF_struct_replacement_29._f2._f4.virtual_gid))), _GLF_IDENTITY((_GLF_struct_replacement_29._f2._f4.virtual_gid), ((_GLF_struct_replacement_29._f2._f4.virtual_gid)) * 1u)))), ((_GLF_IDENTITY((_GLF_struct_replacement_29._f2._f4.virtual_gid), min((_GLF_IDENTITY(_GLF_struct_replacement_29._f2._f4.virtual_gid, min(_GLF_IDENTITY(_GLF_struct_replacement_29._f2._f4.virtual_gid, uint(uvec2(_GLF_struct_replacement_29._f2._f4.virtual_gid, 0u))), _GLF_struct_replacement_29._f2._f4.virtual_gid))), _GLF_IDENTITY((_GLF_struct_replacement_29._f2._f4.virtual_gid), _GLF_IDENTITY(((_GLF_struct_replacement_29._f2._f4.virtual_gid)) * 1u, ~ (~ (((_GLF_struct_replacement_29._f2._f4.virtual_gid)) * 1u)))))))) - 0u))) >> 0u, (_GLF_IDENTITY((_GLF_struct_replacement_29._f2._f4.virtual_gid) >> 0u, _GLF_IDENTITY(((_GLF_struct_replacement_29._f2._f4.virtual_gid) >> 0u), 0u | (((_GLF_struct_replacement_29._f2._f4.virtual_gid) >> 0u))) ^ 0u)) | ((_GLF_struct_replacement_29._f2._f4.virtual_gid) >> 0u)))])), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(2, max(2, _GLF_IDENTITY(2, max(_GLF_IDENTITY(2, _GLF_IDENTITY(max(2, _GLF_IDENTITY(2, (false ? _GLF_FUZZED(-2875) : 2))), min(max(2, _GLF_IDENTITY(2, (false ? _GLF_FUZZED(-2875) : 2))), max(2, _GLF_IDENTITY(2, (false ? _GLF_FUZZED(-2875) : 2)))))), 2)))), (_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, clamp(2, 2, _GLF_IDENTITY(2, (2) | (2)))), _GLF_IDENTITY(2, max(_GLF_IDENTITY(_GLF_IDENTITY(2, max(2, _GLF_IDENTITY(2, _GLF_IDENTITY((false ? _GLF_FUZZED(-2875) : 2), (_GLF_IDENTITY((false ? _GLF_FUZZED(-2875) : 2), 0 | ((false ? _GLF_FUZZED(-2875) : 2)))) | 0)))), (_GLF_IDENTITY(2, max(2, _GLF_IDENTITY(2, (false ? _GLF_FUZZED(-2875) : 2))))) | (_GLF_IDENTITY(2, max(2, _GLF_IDENTITY(2, (false ? _GLF_FUZZED(-2875) : _GLF_IDENTITY(2, (2) - 0))))))), 2))))) | 0));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 atomicStore(checker[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_29._f2._f4.virtual_gid, clamp(_GLF_struct_replacement_29._f2._f4.virtual_gid, _GLF_struct_replacement_29._f2._f4.virtual_gid, _GLF_IDENTITY(_GLF_struct_replacement_29._f2._f4.virtual_gid, (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY(_GLF_struct_replacement_29._f2._f4.virtual_gid, min(_GLF_struct_replacement_29._f2._f4.virtual_gid, _GLF_struct_replacement_29._f2._f4.virtual_gid)), max(false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY(_GLF_struct_replacement_29._f2._f4.virtual_gid, min(_GLF_struct_replacement_29._f2._f4.virtual_gid, _GLF_struct_replacement_29._f2._f4.virtual_gid)), false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY(_GLF_struct_replacement_29._f2._f4.virtual_gid, min(_GLF_struct_replacement_29._f2._f4.virtual_gid, _GLF_struct_replacement_29._f2._f4.virtual_gid)))))))), (_GLF_IDENTITY(_GLF_struct_replacement_29._f2._f4.virtual_gid, clamp(_GLF_struct_replacement_29._f2._f4.virtual_gid, _GLF_struct_replacement_29._f2._f4.virtual_gid, _GLF_IDENTITY(_GLF_struct_replacement_29._f2._f4.virtual_gid, (false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY(_GLF_struct_replacement_29._f2._f4.virtual_gid, min(_GLF_struct_replacement_29._f2._f4.virtual_gid, _GLF_IDENTITY(_GLF_struct_replacement_29._f2._f4.virtual_gid, (_GLF_struct_replacement_29._f2._f4.virtual_gid) ^ 0u)))))))) / 1u)], _GLF_IDENTITY(_GLF_struct_replacement_33._f2._f0.read, (_GLF_IDENTITY(_GLF_struct_replacement_33._f2._f0.read, max(_GLF_IDENTITY(_GLF_struct_replacement_33._f2._f0.read, (_GLF_struct_replacement_33._f2._f0.read) | (_GLF_struct_replacement_33._f2._f0.read)), _GLF_struct_replacement_33._f2._f0.read))) ^ 0u), 4, 64, 4);
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
