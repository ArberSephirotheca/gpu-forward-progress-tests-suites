#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged2_0_3_63_3_1_16GLF_merged3_0_1_4_1_1_14_2_1_14readworkgroup_baseworkgroup_sizenext_virtual_gid;
 uvec3 GLF_merged3_0_1_4_1_1_14_2_1_14readworkgroup_baseworkgroup_size;
 GLF_merged2_0_3_63_3_1_16GLF_merged3_0_1_4_1_1_14_2_1_14readworkgroup_baseworkgroup_sizenext_virtual_gid.xyz = GLF_merged3_0_1_4_1_1_14_2_1_14readworkgroup_baseworkgroup_size;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 GLF_merged2_0_3_63_3_1_16GLF_merged3_0_1_4_1_1_14_2_1_14readworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.z = workgroup_size;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = GLF_merged2_0_3_63_3_1_16GLF_merged3_0_1_4_1_1_14_2_1_14readworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.z * workgroup_id;
 GLF_merged2_0_3_63_3_1_16GLF_merged3_0_1_4_1_1_14_2_1_14readworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.y = workgroup_base;
 uint virtual_gid = GLF_merged2_0_3_63_3_1_16GLF_merged3_0_1_4_1_1_14_2_1_14readworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.y + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = GLF_merged2_0_3_63_3_1_16GLF_merged3_0_1_4_1_1_14_2_1_14readworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.y + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 GLF_merged2_0_3_63_3_1_16GLF_merged3_0_1_4_1_1_14_2_1_14readworkgroup_baseworkgroup_sizenext_virtual_gid.w = next_virtual_gid;
 atomicStore(buf[GLF_merged2_0_3_63_3_1_16GLF_merged3_0_1_4_1_1_14_2_1_14readworkgroup_baseworkgroup_sizenext_virtual_gid.w], uint(1), 4, 64, 4);
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 GLF_merged2_0_3_63_3_1_16GLF_merged3_0_1_4_1_1_14_2_1_14readworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.x = read;
 if(subgroup_local_id + 1 < subgroup_size)
  {
   switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
    {
     case 39:
     if((mat4x3(-2.5, -1.7, 6674.5357, 3.7, 9.3, 7.5, 935.104, -6.0, -68.93, 0.9, -87.82, -3.1) == mat4x3(-41.82, -4.0, -5024.4381, -36.71, 5603.7540, 457.513, -72.56, 5487.8104, -7.5, 71.97, 222.075, -87.95)))
      {
       uint _GLF_SWITCH_0_0v, _GLF_SWITCH_0_1v;
       while(false)
        {
         ;
         mat4x3(-3.6, 7.1, -51.53, 4.5, 1146.3577, -1963.7743, 6.3, 4.2, -402.343, -691.167, -5.7, 98.63);
         (ivec4(-7729, 30197, 48936, 85977) & 25996);
         do
          {
           mat3(6.0, 501.754, 94.22, -1.7, -251.263, -15.42, 162.765, 885.164, 6392.5376);
          }
         while(_GLF_WRAPPED_LOOP(false));
         mat4 _GLF_SWITCH_0_2v, _GLF_SWITCH_0_3v, _GLF_SWITCH_0_4v;
         bvec3 _GLF_SWITCH_0_5v, _GLF_SWITCH_0_6v[82];
        }
       (false ? mat4x3(-1.6, 6.5, 4.9, -59.43, 832.830, 3295.3614, 14.43, -63.14, 5.3, 83.54, 515.561, 378.479) : mat4x3(51.68, -2.7, -7.3, -46.75, -37.34, -85.54, -8664.2414, -3.0, 73.78, -5.9, -2.0, -7.4));
       bvec2 _GLF_SWITCH_0_7v, _GLF_SWITCH_0_8v;
      }
     case 69:
     uint _GLF_SWITCH_0_9v;
     case 0:
     case 84:
     case 32:
     case 35:
     case 99:
     case 93:
     int i = 0;
     case 7:
     case 37:
     case 91:
     atomicStore(checker[virtual_gid], GLF_merged2_0_3_63_3_1_16GLF_merged3_0_1_4_1_1_14_2_1_14readworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.x, 4, 64, 4);
     break;
     case 82:
     ;
     case 90:
     mat3 _GLF_SWITCH_0_10v;
     default:
     1;
    }
  }
 else
  {
   atomicStore(checker[virtual_gid], GLF_merged2_0_3_63_3_1_16GLF_merged3_0_1_4_1_1_14_2_1_14readworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.x, 4, 64, 4);
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
