#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(false, bool(bvec2(false, false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch : _GLF_FUZZED(atan(injectionSwitch, vec2(-3280.7890, 565.882))))).x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-2113.2726)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)) || false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) && true)))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-1985.9324) : injectionSwitch.x)))))) > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0))).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false))), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(9.9)), bool(false)))), true && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), mix(float(injectionSwitch.y), float(_GLF_FUZZED(9.9)), _GLF_IDENTITY(bool(false), true && (bool(false)))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(9.9)), bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(9.9)), bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))))))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(9.9)), bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))), true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(9.9)), bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(9.9)), bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(9.9)), bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))), true && _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(9.9)), bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(9.9)), bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), max(min(injectionSwitch.y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y)))), mix(float(injectionSwitch.y), float(_GLF_FUZZED(9.9)), _GLF_IDENTITY(bool(false), _GLF_IDENTITY(true && (bool(false)), ! (! (_GLF_IDENTITY(true && (bool(false)), (true && (bool(false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(9.9)), bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(9.9)), bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))))))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(9.9)), bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))), true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(9.9)), bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(9.9)), bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (_GLF_IDENTITY(false, ! (! (false)))) && true)))), ! (! _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), float(_GLF_FUZZED(9.9)), bool(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) && true, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) && true, bool(bvec4((_GLF_IDENTITY(false, ! (! (false)))) && true, false, false, false))))))))))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), float(_GLF_FUZZED(9.9)), bool(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) && true, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) && true, bool(bvec4((_GLF_IDENTITY(false, ! (! (false)))) && true, false, false, false)))))))))))))))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(9.9)), bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))), true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(9.9)), bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((! (false))), ! (! (_GLF_IDENTITY(bool((! (false))), ! (! (bool((! (false)))))))))), bool(bool(bool(_GLF_IDENTITY(bool((! (false))), ! (! (_GLF_IDENTITY(bool((! (false))), ! (! (bool((! (false)))))))))))))))) && true))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(9.9)), bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(9.9)), bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))), true && _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(9.9)), bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(9.9)), bool(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) && true, bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, ! (! (false)))) && true), (bool((_GLF_IDENTITY(false, ! (! (false)))) && true)) || false)))))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false, false))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true))))))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true))))) && true)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), ! (! (bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), ! (! (bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))))), bool(bvec4(bool(bool(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), ! (! (bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))))), true, true, false)))) && true))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
      }
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0))).y)))))))
    return;
   barrier();
  }
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))) ^ (_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(! ((injectionSwitch.x > injectionSwitch.y)), false))))), true && (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(! ((injectionSwitch.x > injectionSwitch.y)), false))))))))), bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, log(1.0), 1.0))) > injectionSwitch.y))))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))) && true)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false)))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x4(injectionSwitch.y, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat2x4(-543.884, -8190.5925, 7557.8342, -1.7, 9.7, 83.23, 704.286, -9.2)) : mat2x4(injectionSwitch.y, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 1.0)))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) << (0u ^ 0u))) >> 0u), (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u), workgroup_base)), (workgroup_base) << 0u)) << (0u ^ 0u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> 0u) << 0u)), min((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), ~ (~ (_GLF_IDENTITY((workgroup_base), 0u + (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) - 0u)))))) << 0u)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u))) | ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u))) | ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)))) : _GLF_FUZZED((subgroup_base & 105589u)))))), 1u), (uvec2(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), min((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)) << 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u))) | (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), ~ (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u))))))))), 1u)) >> uvec2(0u, 0u)))), min(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> 0u) << 0u)), min((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), ~ (~ (_GLF_IDENTITY((workgroup_base), 0u + (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) - 0u)))))) << 0u)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u))) | ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u))) | ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)))) : _GLF_FUZZED((subgroup_base & 105589u)))))), 1u), (uvec2(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), min((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)) << 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u))) | (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), ~ (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u))))))))), 1u)) >> uvec2(0u, 0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> 0u) << 0u)), min((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), ~ (~ (_GLF_IDENTITY((workgroup_base), 0u + (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) - 0u)))))) << 0u)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u))) | ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u))) | ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)))) : _GLF_FUZZED((subgroup_base & 105589u)))))), 1u), (uvec2(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), min((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)) << 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u))) | (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), ~ (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u))))))))), 1u)) >> uvec2(0u, 0u))))) | (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> 0u) << 0u)), min((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), ~ (~ (_GLF_IDENTITY((workgroup_base), 0u + (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) - 0u)))))) << 0u)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u))) | ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u))) | ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)))) : _GLF_FUZZED((subgroup_base & 105589u)))))), 1u), (uvec2(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), min((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)) << 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u))) | (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), ~ (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u))))))))), 1u)) >> uvec2(0u, 0u)))))) << (0u ^ 0u))), min(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)))))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> 0u) << 0u)), min((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), ~ (~ (_GLF_IDENTITY((workgroup_base), 0u + (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) - 0u)))))) << 0u)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)) << 0u))) | ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u))) | ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)))) : _GLF_FUZZED((subgroup_base & 105589u)))))), 1u), (uvec2(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), min((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)) << 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), uint(uint(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), uint(uint((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)))))))), ~ (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u))))))))), 1u)) >> uvec2(0u, 0u)))) << (0u ^ 0u))), ~ (~ ((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> 0u) << 0u)), min((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), ~ (~ (_GLF_IDENTITY((workgroup_base), 0u + (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) - _GLF_IDENTITY(0u, 0u ^ (0u)))))))) << 0u)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), (true ? (workgroup_base) : _GLF_FUZZED(num_workgroup))) << 0u)), ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u))) | ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u))) | ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)))) : _GLF_FUZZED((subgroup_base & 105589u)))))), 1u), (uvec2(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), min((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)) << 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u))) | (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), ~ (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u))))))))), 1u)) >> uvec2(0u, 0u)))) << (0u ^ 0u)))))), (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> 0u) << 0u)), _GLF_IDENTITY(min((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), ~ (~ (_GLF_IDENTITY((workgroup_base), 0u + (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) - 0u)))))) << 0u)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u))) | ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u))) | ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)))) : _GLF_FUZZED((subgroup_base & 105589u))))), uint(uint(min((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), ~ (~ (_GLF_IDENTITY((workgroup_base), 0u + (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) - 0u)))))) << 0u)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u))) | ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u))) | ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)))) : _GLF_FUZZED((subgroup_base & 105589u))))))))), 1u), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), max((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), (_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)))), min((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)) << 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u))) | (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), ~ (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u))))))))), 1u)) >> uvec2(0u, 0u)))) << (0u ^ 0u))))), ~ (~ ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)) << (0u ^ 0u))))))), ((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> 0u) << 0u)), min((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), ~ (~ (_GLF_IDENTITY((workgroup_base), 0u + (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) - 0u)))))) << 0u)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u))) | ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u))) | ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)))) : _GLF_FUZZED((subgroup_base & 105589u)))))), 1u), (uvec2(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), min((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)) << 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u))) | (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), ~ (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u))))))))), 1u)) >> uvec2(0u, 0u)))), min(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> 0u) << 0u)), min((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), ~ (~ (_GLF_IDENTITY((workgroup_base), 0u + (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) - 0u)))))) << 0u)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u))) | ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u))) | ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)))) : _GLF_FUZZED((subgroup_base & 105589u)))))), 1u), (uvec2(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), min((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)) << 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u))) | (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), ~ (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u))))))))), 1u)) >> uvec2(0u, 0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> 0u) << 0u)), min((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), ~ (~ (_GLF_IDENTITY((workgroup_base), 0u + (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) - 0u)))))) << 0u)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u))) | ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u))) | ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)))) : _GLF_FUZZED((subgroup_base & 105589u)))))), 1u), (uvec2(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), min((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)) << 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u))) | (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), ~ (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u))))))))), 1u)) >> uvec2(0u, 0u))))) | (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> 0u) << 0u)), min((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), ~ (~ (_GLF_IDENTITY((workgroup_base), 0u + (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) - 0u)))))) << 0u)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u))) | ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u))) | ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)))) : _GLF_FUZZED((subgroup_base & 105589u)))))), 1u), (uvec2(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), min((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)) << 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u))) | (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), ~ (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u))))))))), 1u)) >> uvec2(0u, 0u)))))) << (0u ^ 0u))), min(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)))))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> 0u) << 0u)), min((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), ~ (~ (_GLF_IDENTITY((workgroup_base), 0u + (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) - 0u)))))) << 0u)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)) << 0u))) | ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u))) | ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)))) : _GLF_FUZZED((subgroup_base & 105589u)))))), 1u), (uvec2(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), min((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)) << 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), uint(uint(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), uint(uint((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)))))))), ~ (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u))))))))), 1u)) >> uvec2(0u, 0u)))) << (0u ^ 0u))), ~ (~ ((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> 0u) << 0u)), min((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), ~ (~ (_GLF_IDENTITY((workgroup_base), 0u + (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) - _GLF_IDENTITY(0u, 0u ^ (0u)))))))) << 0u)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), (true ? (workgroup_base) : _GLF_FUZZED(num_workgroup))) << 0u)), ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u))) | ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u))) | ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)))) : _GLF_FUZZED((subgroup_base & 105589u)))))), 1u), (uvec2(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), min((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)) << 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u))) | (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), ~ (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u))))))))), 1u)) >> uvec2(0u, 0u)))) << (0u ^ 0u)))))), (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> 0u) << 0u)), _GLF_IDENTITY(min((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), ~ (~ (_GLF_IDENTITY((workgroup_base), 0u + (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) - 0u)))))) << 0u)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u))) | ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u))) | ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)))) : _GLF_FUZZED((subgroup_base & 105589u))))), uint(uint(min((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), ~ (~ (_GLF_IDENTITY((workgroup_base), 0u + (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) - 0u)))))) << 0u)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u))) | ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u))) | ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)))) : _GLF_FUZZED((subgroup_base & 105589u))))))))), 1u), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), max((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), (_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)))), min((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)) << 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u))) | (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), ~ (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u))))))))), 1u)) >> uvec2(0u, 0u)))) << (0u ^ 0u))))), ~ (~ ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)) << (0u ^ 0u)))))))) >> 0u) << _GLF_IDENTITY((_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, uint(uvec3(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), ~ (~ (_GLF_IDENTITY(uint(4u), uint(4u)))))), (0u ^ 0u) ^ (_GLF_IDENTITY((_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, uint(uvec3(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), ~ (~ (_GLF_IDENTITY(uint(4u), uint(4u)))))), uint(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, uint(uvec3(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), ~ (~ (_GLF_IDENTITY(uint(4u), uint(4u)))))), 0u + ((_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, uint(uvec3(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), ~ (~ (_GLF_IDENTITY(uint(4u), uint(4u)))))))), (1u & 1u))))))) >> 0u)) / 1u) + subgroup_base + subgroup_local_id, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, 0u ^ _GLF_IDENTITY((workgroup_base), ((workgroup_base)) - 0u))) << (0u ^ 0u), max((_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))) << (0u ^ 0u), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), clamp((_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))))) << (0u ^ 0u))))) >> 0u, ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))) << (_GLF_IDENTITY(0u, (0u) << 0u) ^ 0u))) >> 0u) ^ 0u)) + subgroup_base + subgroup_local_id) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec3(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), bool(bvec2(bool(bvec4(false, false, false, false)), false)))))), ! (! (false))), true)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((true), bool(bool((true)))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY((true), bool(bool((true)))), true, true)))))))), _GLF_IDENTITY(false, ! (! (false))), true)), (bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false)))))), true))) && true)) || false)) ? workgroup_base : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), uint(_GLF_IDENTITY(uvec2(_GLF_FUZZED(num_workgroup), 1u), (uvec2(_GLF_FUZZED(num_workgroup), 1u)) ^ uvec2(0u, 0u))))), 0u + ((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(false, ! (! (false))), true)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(false, ! (! (false))), true)), (bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(false, ! (! (false))), true))) && true)) || false)) ? workgroup_base : _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY(num_workgroup, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) * (num_workgroup))))))))), 1u, _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) << 0u))) | (0u))))))), (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> 0u) | (workgroup_base))) << (0u ^ 0u))) >> 0u) + subgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec3(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), ! (! (true))), _GLF_IDENTITY(false, ! (! (false))), true)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(false, ! (! (false))), true)), (bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))), (_GLF_IDENTITY(false, ! (! (false)))) && true)))), true))) && true)) || _GLF_IDENTITY(false, false || (false)))) ? workgroup_base : _GLF_FUZZED(num_workgroup))), 1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (_GLF_IDENTITY(0u, _GLF_IDENTITY(0u | (0u), clamp(0u | (0u), 0u | (0u), 0u | (0u))))))))), (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) << (0u ^ 0u))) >> 0u) + subgroup_base, _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(130359u))), uint(uvec3(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(false, ! (! (false))), true)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false)))))), true)), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(! (! (true)), false || (! (! (true))))), _GLF_IDENTITY(false, ! (! (false))), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(! (! (true)), false || (! (! (true))))), _GLF_IDENTITY(false, ! (! (false))), true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(! (! (true)), false || (! (! (true))))), _GLF_IDENTITY(false, ! (! (false))), true))), false)))))) && true)) || false)) ? workgroup_base : _GLF_FUZZED(num_workgroup))), 1u, _GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u | (0u))), uint(uvec4((_GLF_IDENTITY(0u, 0u | (0u))), 0u, 1u, 0u))))))), (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) << (0u ^ 0u))) >> 0u) + subgroup_base, _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec3(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), ! (! (! (! (true)))))), _GLF_IDENTITY(false, ! (! (false))), true)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, false, false))), ! (! (true))), _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && true))), true)), (bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(false, ! (! (false))), true))) && true)) || false)) ? _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u)) | (workgroup_base)) : _GLF_FUZZED(num_workgroup))), 1u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (_GLF_IDENTITY(0u, 0u | (0u))), ((0u) | (_GLF_IDENTITY(0u, 0u | (0u)))) << (0u | 0u)))))), (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) << (0u ^ 0u))) >> 0u) + subgroup_base)) + subgroup_local_id));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true && (false), bool(bvec2(true && (false), true))), (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)))), (_GLF_IDENTITY((! (true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((! (true)), false), bvec2(bvec4(bvec2((! (true)), false), _GLF_IDENTITY(false, true && (false)), true)))), ! (! (bool(_GLF_IDENTITY(bvec2((! (true)), false), bvec2(bvec4(bvec2((! (true)), false), false, true))))))))) || false))) && true) && (false)) || false))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x)))), vec2(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x)))), max(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x)))), _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x)))))), sin(sin(0.0)), 1.0))).y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / vec2(1.0, 1.0))).y))))
    barrier();
   barrier();
  }
 uint read = 0;
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((next_virtual_gid) >> 0u, _GLF_IDENTITY(0u ^ ((next_virtual_gid) >> 0u), (_GLF_IDENTITY(0u ^ (_GLF_IDENTITY((next_virtual_gid), ((next_virtual_gid)) * 1u) >> 0u), (0u ^ ((next_virtual_gid) >> 0u)) | 0u)) >> 0u)))], uint(_GLF_IDENTITY(1, (1) + ((0 | 0) ^ 0))), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if((_GLF_IDENTITY(subgroup_local_id % 2, uint(uint(subgroup_local_id % 2)))) == 0)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))))))
      barrier();
     return;
    }
   read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, max(64, 64)), 2);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (false)) && true))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 else
  {
   read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, max(4, 4)), 64, 2);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  return;
 subgroupBarrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(checker[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, _GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid)))))), clamp(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), ~ (_GLF_IDENTITY(~ ((virtual_gid)), (~ ((virtual_gid))) | (~ ((virtual_gid)))))) / uint(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)), virtual_gid))], read, 4, _GLF_IDENTITY(64, (64) | (64)), _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, ~ (~ (4)))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), false || (! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
