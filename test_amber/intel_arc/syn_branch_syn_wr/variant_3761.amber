#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged4_0_1_4_1_1_11_2_1_12_3_1_14readsubgroup_idworkgroup_idworkgroup_size;
 uvec2 GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id;
 uvec2 GLF_merged2_0_1_13_1_1_11num_workgroupsubgroup_id;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged4_0_1_4_1_1_11_2_1_12_3_1_14readsubgroup_idworkgroup_idworkgroup_size.y = subgroup_id;
 GLF_merged2_0_1_13_1_1_11num_workgroupsubgroup_id.y = GLF_merged4_0_1_4_1_1_11_2_1_12_3_1_14readsubgroup_idworkgroup_idworkgroup_size.y;
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x = subgroup_size;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged2_0_1_13_1_1_11num_workgroupsubgroup_id.x = num_workgroup;
 uint workgroup_size = gl_WorkGroupSize.x;
 GLF_merged4_0_1_4_1_1_11_2_1_12_3_1_14readsubgroup_idworkgroup_idworkgroup_size.w = workgroup_size;
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged4_0_1_4_1_1_11_2_1_12_3_1_14readsubgroup_idworkgroup_idworkgroup_size.z = workgroup_id;
 GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.y = GLF_merged4_0_1_4_1_1_11_2_1_12_3_1_14readsubgroup_idworkgroup_idworkgroup_size.z;
 uint workgroup_base = GLF_merged4_0_1_4_1_1_11_2_1_12_3_1_14readsubgroup_idworkgroup_idworkgroup_size.w * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.y;
 uint virtual_gid = workgroup_base + GLF_merged2_0_1_13_1_1_11num_workgroupsubgroup_id.y * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + GLF_merged2_0_1_13_1_1_11num_workgroupsubgroup_id.y * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x + ((subgroup_local_id + 1) % GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x);
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 GLF_merged4_0_1_4_1_1_11_2_1_12_3_1_14readsubgroup_idworkgroup_idworkgroup_size.x = read;
 if(subgroup_local_id + 1 < GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x)
  {
   int i = 0;
   atomicStore(checker[virtual_gid], GLF_merged4_0_1_4_1_1_11_2_1_12_3_1_14readsubgroup_idworkgroup_idworkgroup_size.x, 4, 64, 4);
  }
 else
  {
   atomicStore(checker[virtual_gid], GLF_merged4_0_1_4_1_1_11_2_1_12_3_1_14readsubgroup_idworkgroup_idworkgroup_size.x, 4, 64, 4);
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
