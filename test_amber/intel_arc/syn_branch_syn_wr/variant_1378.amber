#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) && true)))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, true)))) || false)) && true))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, 1u * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)), (true ? _GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)) : _GLF_FUZZED(workgroup_size)))), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)), (true ? _GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)) : _GLF_FUZZED(workgroup_size)))), ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)), (true ? _GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)) : _GLF_FUZZED(workgroup_size))))) / 1u)))) * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + _GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) + 0u))) * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u) + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)) % subgroup_size, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) | ((subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)) % subgroup_size))), ((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)) % subgroup_size, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) | ((subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)) % subgroup_size)))) | 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (true ? _GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)) : _GLF_FUZZED(subgroup_id)))), max(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)), ((subgroup_local_id + 1)) / 1u), (subgroup_local_id + 1))) % subgroup_size), 0u | (workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), clamp(((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))) % subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1), min((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1), (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1))) % subgroup_size)) >> 0u), _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), max(((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(virtual_gid) : subgroup_local_id + 1)), 1u, 0u, 0u), (uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(virtual_gid) : subgroup_local_id + 1)), 1u, 0u, 0u)) / uvec4(1u, 1u, 1u, 1u))))) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) * (1)), 1))), max(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u), (subgroup_local_id + 1))) % subgroup_size), 0u | (workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), clamp(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + _GLF_IDENTITY(1, min(1, 1))) % subgroup_size)) >> 0u), _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))))))), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), max(_GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1)))) / 1u), (subgroup_local_id + 1))) % subgroup_size), 0u | (workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), clamp(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) >> 0u), _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), max(((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u)) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)))))))) | (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), max(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u), (subgroup_local_id + 1))) % subgroup_size), 0u | (workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), clamp(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) >> 0u), _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)))))))))) | (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), max(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u), (subgroup_local_id + 1))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((subgroup_local_id + 1), max(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u), max(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u))), (subgroup_local_id + 1))))) % subgroup_size), 0u | (workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), clamp(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) >> 0u), _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))))))))), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1))) % subgroup_size), _GLF_IDENTITY(0u, (0u) | 0u) ^ (workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), true && (! ((false))))))), (_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY((! (! (false))) && true, ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (false)), ! (! ((! (false)))))))), true && (_GLF_IDENTITY((! _GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (false)), ! (! ((! (false)))))))), ! (! ((! _GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (false)), ! (! ((! (false))))))))))))) && true)))))))) || false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), ! (! (! _GLF_IDENTITY((false), false || ((false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), ! (! (! _GLF_IDENTITY((false), false || ((false)))))))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bool((_GLF_IDENTITY(false, ! (! (false)))))))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true)), true && (bool(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))), bool(bvec2(bool(bool(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))), false)))), false)), bool(bvec3(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))), bool(bvec2(bool(bool(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))), false))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))), bool(bvec2(bool(bool(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))), false))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))), bool(bvec2(bool(bool(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))), false)))) || false)) || false)), false)), false, false))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true)), true && (bool(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))), bool(bvec2(bool(bool(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))), false)))), false)), bool(bvec3(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))), bool(bvec2(bool(bool(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))), false))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))), bool(bvec2(bool(bool(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))), false))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))), bool(bvec2(bool(bool(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))), false)))) || false)) || false)), false)), false, false)))))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((! (false)), ((! (false))) && true), (! (! (false))) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))), bool(bvec2(bool(bool(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)), false || (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))))))), (! (! _GLF_IDENTITY((false), false || ((false))))) && true))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))) && true))))), false)), bool(bvec3(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY((! (! (false))), ! (! (_GLF_IDENTITY((! (! (false))), _GLF_IDENTITY(bool(bvec3((! (! (false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec3((! (! (false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) && true))), bool(bvec2(bool(bool(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))), false)))), false)), false, false)))))))), ((_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true), true && (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), (! _GLF_IDENTITY((false), _GLF_IDENTITY(true, bool(bvec2(true, true))) && ((false)))) && true))))) && true), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))), (bool(bool(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true)))) && true), bool(bvec2(bool(bool(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))), false)))), false)), bool(bvec3(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))), bool(bvec2(bool(bool(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))), false)))), false)), false, false))))))))) && true))) || false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (false))))), false || (! (! (! (false))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), _GLF_IDENTITY(! (! (! (false))), false || (! (! (! (false))))))))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), false || ((false))))))))), false || (! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), true && (! (false)))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, true, false))), ! (! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))))) || false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))) || false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_IDENTITY(true, bool(bvec4(true, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && ((! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_IDENTITY(true, bool(bvec4(true, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) || false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))), true))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true)), (! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))) && true)))) || false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), ! (! (! (false)))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ((_GLF_IDENTITY(false, ! (! (false))))) && true))))))), _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))) || false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, false)))), ! (! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))) || false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), ! (! (! (false)))))), true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (false), (! (false)) || false), true)), ! (! (bool(bvec2(_GLF_IDENTITY(! (false), (! (false)) || false), true)))))), ! (! (! (false)))))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (! (_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))), true))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), false || (! (_GLF_IDENTITY(false, (false) && true))))), (! (! (false))) && true))))) || false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool((false)), true && (bool((false))))))) || false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))) || false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))) || false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))), true))), true))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), false || (! (_GLF_IDENTITY(false, (false) && true))))), (! (! (false))) && true))))) || false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool((false)), true && (bool((false))))))) || false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))) || false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))) || false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))), true))), true))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), false || (! (_GLF_IDENTITY(false, (false) && true))))), (! (! (false))) && true))))) || false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool((false)), true && (bool((false))))))) || false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))) || false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))) || false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))), true))), true)))))) && true)) && true)))))))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))), bool(_GLF_IDENTITY(bool(! (! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true)))), bool(bvec4(bool(! (! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true)))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) || false)), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (! (false))), (! (false)) || false), ! (_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), bool(bvec2(! (! (false)), true)))) && true))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! (false)))), bool(bvec2((_GLF_IDENTITY(! (false), false || (! (false)))), false))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), false || (! (! (false))))))), ! (! (_GLF_IDENTITY(! (! (false)), (! _GLF_IDENTITY((! (false)), bool(bool(_GLF_IDENTITY((! (false)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(1864.4247), _GLF_FUZZED(float(-30945))), bvec2(false, false))).y)) || ((! _GLF_IDENTITY((false), ((false)) && true)))))))) && true))))) || false)), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY(bool(bool(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))), (bool(bool(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))) || false)))))), true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), true && (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true))), _GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))), bool(bvec2(bool(bool(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))), false)))), false)), bool(bvec3(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))), bool(bvec2(bool(bool(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))), false)))), false)), false, false))))), ((_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))), bool(bvec2(bool(bool(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))), false)))), false)), bool(bvec3(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))), bool(bvec2(bool(bool(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))), false)))), false)), false, false)))))) || false)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY((! (! (false))), bool(_GLF_IDENTITY(bvec2((! (! (false))), true), bvec2(bvec2(_GLF_IDENTITY(bvec2((! (! (false))), true), bvec2(bvec2(bvec2((! (! (false))), true))))))))) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY((! (! (false))) && true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((! (! (false))) && true, true), bvec2(bvec3(_GLF_IDENTITY(bvec2((! (! (false))) && true, true), bvec2(bvec4(bvec2((! (! (false))) && true, true), true, true))), false)))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((! (! (false))) && true, true), bvec2(bvec3(_GLF_IDENTITY(bvec2((! (! (false))) && true, true), bvec2(bvec4(bvec2((! (! (false))) && true, true), true, true))), false)))), bool(bvec2(bool(_GLF_IDENTITY(bvec2((! (! (false))) && true, true), bvec2(bvec3(_GLF_IDENTITY(bvec2((! (! (false))) && true, true), bvec2(bvec4(bvec2((! (! (false))) && true, true), true, true))), false)))), true))), false))))))), bool(bvec2(bool(bool(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))), false)))), false)), bool(bvec3(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))), bool(bvec2(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), (! (! (false))) && true))), false)))), false)), false, false)))))))), ((_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (_GLF_IDENTITY(! (false), false || (! (false))))) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((! _GLF_IDENTITY((false), false || ((false)))), (_GLF_IDENTITY((! _GLF_IDENTITY((false), false || ((false)))), true && ((! _GLF_IDENTITY((false), false || ((false))))))) || false), (! (! (false))) && true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY((! (! (false))) && true, bool(bvec3((! (! (false))) && true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bool(bvec2(bool(bool(_GLF_IDENTITY(! (! (false)), (! (_GLF_IDENTITY(! (false), (! (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))), false)))), false)), bool(bvec3(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (! (false)), (! (! _GLF_IDENTITY((false), false || ((false))))) && true))), bool(bvec2(bool(bool(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))), false)))), false)), false, false))))))))) && true))) || false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), _GLF_IDENTITY(! (! (! (false))), false || (! (! (! (false))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), _GLF_IDENTITY(! (! (! (false))), false || (! (! (! (false)))))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), _GLF_IDENTITY(! (! (! (false))), false || (! (! (! (false))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), _GLF_IDENTITY(! (! (! (false))), false || (! (! (! (false)))))))))), (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), _GLF_IDENTITY(! (! (! (false))), false || (! (! (! (false))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), _GLF_IDENTITY(! (! (! (false))), false || (! (! (! (false))))))))))) && true), false, true)), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), _GLF_IDENTITY(! (! (! (false))), false || (! (! (! (false))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), _GLF_IDENTITY(! (! (! (false))), false || (! (! (! (false)))))))))), (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), _GLF_IDENTITY(! (! (! (false))), false || (! (! (! (false))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), _GLF_IDENTITY(! (! (! (false))), false || (! (! (! (false))))))))))) && true), false, true))), false || (! (bool(bvec3(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), _GLF_IDENTITY(! (! (! (false))), false || (! (! (! (false))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), _GLF_IDENTITY(! (! (! (false))), false || (! (! (! (false)))))))))), (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), _GLF_IDENTITY(! (! (! (false))), false || (! (! (! (false))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), _GLF_IDENTITY(! (! (! (false))), false || (! (! (! (false))))))))))) && true), false, true))))))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), bool(bool(! ((! (false))))))))))))), false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), false || (! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))) || false)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))) || false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), ! (! (! _GLF_IDENTITY((false), ! (! ((false))))))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), (! (! (_GLF_IDENTITY(false, true && (false))))) && true)), bool(bvec4((_GLF_IDENTITY(! (! (false)), (! (! (_GLF_IDENTITY(false, true && (false))))) && true)), false, false, true)))))) || false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), (! (! (_GLF_IDENTITY(false, true && (false))))) && true)), bool(bvec4((_GLF_IDENTITY(! (! (false)), (! (! (_GLF_IDENTITY(false, true && (false))))) && true)), false, false, true)))))) || false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true))))))), ! (! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))) || false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))), (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (false), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(! (false), false)), bvec2(bvec4(bvec2(bvec2(! (false), false)), false, true)))))))) || false), _GLF_IDENTITY(! (! (! (false))), false || (! (! (! (false)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false)))))))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))) || false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))), true))))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((! (false)), ((! (false))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), false || (! (! (false))))) && true), true, true, false)), (bool(bvec4(_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), false || (! (! (false))))) && true), true, true, false))) && true)), ! (! (_GLF_IDENTITY(! (! (false)), (! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), false || ((false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))) || false)), _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false)) || false), _GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))) || false, bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))) || false, ! (! ((_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))) || false)))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) && true)))))))))), true)))))))))))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))) || false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))) || false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))), false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), false || (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))))), (_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), (! _GLF_IDENTITY((! (false)), bool(bool(_GLF_IDENTITY((! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (false)))))))) && true))))) || false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), ! (! (! (false))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), ! (! (! (false))))))))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))))), true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))) || false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))) || false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))), false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), false || (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))))), (_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), (! _GLF_IDENTITY((! (false)), bool(bool(_GLF_IDENTITY((! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (false)))))))) && true))))) || false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), ! (! (! (false))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), ! (! (! (false))))))))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))))), true), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))) || false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))) || false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))), false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), false || (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))))), (_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), (! _GLF_IDENTITY((! (false)), bool(bool(_GLF_IDENTITY((! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (false)))))))) && true))))) || false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), ! (! (! (false))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), ! (! (! (false))))))))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))))), true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))) || false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))) || false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))), false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), false || (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))))), (_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), (! _GLF_IDENTITY((! (false)), bool(bool(_GLF_IDENTITY((! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (false)))))))) && true))))) || false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), ! (! (! (false))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), ! (! (! (false))))))))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))))), true), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))) || false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))) || false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))), false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), false || (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))))), (_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), (! _GLF_IDENTITY((! (false)), bool(bool(_GLF_IDENTITY((! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (false)))))))) && true))))) || false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), ! (! (! (false))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), ! (! (! (false))))))))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))))), true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)) : _GLF_FUZZED(vec4(6.1, -4.6, -8.4, -1488.5057)[0]))))), false, false))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), uint(uvec4(_GLF_IDENTITY(uint(1), (false ? _GLF_FUZZED((workgroup_size & 103782u)) : uint(1))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u))), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint read = atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), _GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))))], uint(_GLF_IDENTITY(uint(buf[virtual_gid]), (false ? _GLF_FUZZED(num_workgroup) : uint(buf[virtual_gid]))))), 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true))))))), true && ((injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(subgroup_local_id + 1 < subgroup_size)
  {
   int i = 0;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), bool(bvec4(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, (read) >> 0u), 4, 64, 4);
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(checker[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(read, (_GLF_IDENTITY(_GLF_IDENTITY(read, (_GLF_IDENTITY(read, (read) | (read))) + (0u ^ 0u)), (false ? _GLF_FUZZED(atomicCompSwap(virtual_gid, _GLF_IDENTITY(read, (read) | 0u), workgroup_size)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read, (_GLF_IDENTITY(read, (read) | (read))) + (0u ^ 0u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(read, (_GLF_IDENTITY(_GLF_IDENTITY(read, clamp(_GLF_IDENTITY(read, 0u | (read)), read, read)), (read) | (read))) + (0u ^ 0u))), uint(uvec3(~ (_GLF_IDENTITY(read, (_GLF_IDENTITY(read, (read) | (read))) + (0u ^ 0u))), 0u, 0u))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(read, (_GLF_IDENTITY(read, (read) | (read))) + (0u ^ 0u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(read, (_GLF_IDENTITY(_GLF_IDENTITY(read, clamp(_GLF_IDENTITY(read, 0u | (read)), read, read)), (read) | (read))) + (0u ^ 0u))), uint(uvec3(~ (_GLF_IDENTITY(read, (_GLF_IDENTITY(read, (read) | (read))) + (0u ^ 0u))), 0u, 0u)))))))))) >> (0u | 0u)), ~ (~ (_GLF_IDENTITY(read, (_GLF_IDENTITY(_GLF_IDENTITY(read, (_GLF_IDENTITY(_GLF_IDENTITY(read, (read) | (read)), _GLF_IDENTITY((read), (0u << _GLF_IDENTITY(uint(4u), uint(4u))) ^ ((read))) | (read))) + (0u ^ 0u)), (false ? _GLF_FUZZED(atomicCompSwap(virtual_gid, read, workgroup_size)) : _GLF_IDENTITY(_GLF_IDENTITY(read, (_GLF_IDENTITY(read, _GLF_IDENTITY((read) | (read), (true ? (read) | (read) : _GLF_FUZZED(workgroup_size))))) + _GLF_IDENTITY((0u ^ 0u), clamp((0u ^ 0u), _GLF_IDENTITY((0u ^ 0u), ((0u ^ 0u)) + 0u), _GLF_IDENTITY((0u ^ 0u), ((0u ^ 0u)) * ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(read, (_GLF_IDENTITY(read, (read) | (read))) + (0u ^ 0u))), uint(uvec3(~ (_GLF_IDENTITY(read, (_GLF_IDENTITY(read, _GLF_IDENTITY((read) | (read), 0u | ((read) | (read))))) + (0u ^ 0u))), 0u, 0u)))), ~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(read, (_GLF_IDENTITY(read, (read) | (read))) + (0u ^ 0u))), uint(uvec3(~ (_GLF_IDENTITY(read, (_GLF_IDENTITY(read, _GLF_IDENTITY((read) | (read), 0u | ((read) | (read))))) + (0u ^ 0u))), 0u, 0u))))), clamp(~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(read, (_GLF_IDENTITY(read, (read) | (read))) + (0u ^ 0u))), uint(uvec3(~ (_GLF_IDENTITY(read, (_GLF_IDENTITY(read, _GLF_IDENTITY((read) | (read), 0u | ((read) | (read))))) + (0u ^ 0u))), 0u, 0u))))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(read, (_GLF_IDENTITY(read, (read) | (read))) + (0u ^ 0u))), uint(uvec3(~ (_GLF_IDENTITY(read, (_GLF_IDENTITY(read, _GLF_IDENTITY((read) | (read), 0u | ((read) | (read))))) + (0u ^ 0u))), 0u, 0u))))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(read, (_GLF_IDENTITY(read, (read) | (read))) + (0u ^ 0u))), uint(uvec3(~ (_GLF_IDENTITY(read, (_GLF_IDENTITY(read, _GLF_IDENTITY((read) | (read), 0u | ((read) | (read))))) + (0u ^ 0u))), 0u, 0u))))))))))))) >> (0u | 0u))))), 4, 64, 4);
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((4.4 / -0.9)), _GLF_FUZZED(767.395)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, true)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (_GLF_IDENTITY(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), ! (! (bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))) && true))))
    barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
