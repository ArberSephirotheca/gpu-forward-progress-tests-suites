#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))), bool(bool((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))), bool(bool((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))))))))), (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))), bool(bool((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))))))) || false)) || false)), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), bool(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), true, _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), ((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))) && true), bool(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), true, true)))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), true, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), true, true), true))))))))))), ((_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), _GLF_IDENTITY(bool(bvec2(bool(bvec3(false, true, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(bool(bvec3(false, true, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), false || (_GLF_DEAD(false)))), true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), true, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), true, true), true)))))))))))) && true)) || false)) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.6) : injectionSwitch.y)), _GLF_IDENTITY(float(mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, length(vec2(0.0, 0.0)), 1.0)))), mix(float(_GLF_FUZZED(2.2)), float(_GLF_IDENTITY(float(mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, length(vec2(0.0, 0.0)), 1.0)))), clamp(float(mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, length(vec2(0.0, 0.0)), 1.0), mat2(mat2x4(mat2(1.0, 0.0, length(vec2(0.0, 0.0)), 1.0))))))), float(mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, length(vec2(0.0, 0.0)), 1.0)))), _GLF_IDENTITY(float(mat3x4(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, length(vec2(0.0, 0.0)), 1.0)))), max(float(mat3x4(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, length(vec2(0.0, 0.0)), 1.0)))), _GLF_IDENTITY(float(mat3x4(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, length(vec2(0.0, 0.0)), 1.0)))), mix(float(_GLF_FUZZED(-3.3)), float(float(mat3x4(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, length(vec2(0.0, 0.0)), 1.0))))), bool(true)))))))), bool(true)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))))), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))))), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-6.6)), bool(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) || false, _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(false, ! (! (false)))) || false, false)), ! (! (bool(bvec2((_GLF_IDENTITY(false, ! (! (false)))) || false, false)))))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, abs(0.0), 1.0, abs(0.0), 0.0, 1.0, 1.0, abs(1.0), 1.0))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bool(bool(false))), bool(bvec2(bool(bool(bool(false))), true)))))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), true), true, false))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-0.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) + 0.0)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))) && true), false, false)), true && (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))) && true), false, false))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(54.23)), float(injectionSwitch[0]), bool(true))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(_GLF_IDENTITY(54.23, (54.23) - log(1.0)))), float(injectionSwitch[0]), bool(true))), float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(54.23)), float(injectionSwitch[0]), bool(true))), (true ? _GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(54.23)), float(injectionSwitch[0]), bool(_GLF_IDENTITY(true, (true) || false)))) : _GLF_FUZZED(5.5))), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0)))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(54.23)), _GLF_IDENTITY(float(injectionSwitch[0]), min(_GLF_IDENTITY(float(injectionSwitch[0]), (_GLF_IDENTITY(float(injectionSwitch[0]), mix(float(float(injectionSwitch[0])), float(_GLF_FUZZED(-357.413)), bool(false)))) * 1.0), float(injectionSwitch[0]))), bool(true))), _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(54.23)), float(injectionSwitch[0]), bool(true))), (true ? _GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(54.23)), float(injectionSwitch[0]), bool(true))) : _GLF_FUZZED(5.5))), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0)), min(float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(mix(float(_GLF_FUZZED(54.23)), float(injectionSwitch[0]), bool(true)), (mix(float(_GLF_FUZZED(54.23)), float(injectionSwitch[0]), bool(true))) * 1.0)), _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(54.23)), float(injectionSwitch[0]), bool(true))) : _GLF_FUZZED(5.5)), clamp((true ? _GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(54.23)), float(injectionSwitch[0]), bool(true))) : _GLF_FUZZED(5.5)), (true ? _GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(54.23)), float(injectionSwitch[0]), bool(true))) : _GLF_FUZZED(5.5)), (true ? _GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(54.23)), float(injectionSwitch[0]), bool(true))) : _GLF_FUZZED(5.5))))), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(54.23)), float(injectionSwitch[0]), _GLF_IDENTITY(bool(true), false || (bool(true))))), (true ? _GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(54.23)), float(injectionSwitch[0]), bool(true))) : _GLF_FUZZED(5.5))), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0)), (true ? float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(54.23)), float(injectionSwitch[0]), bool(true))), (true ? _GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(54.23)), float(injectionSwitch[0]), bool(true))) : _GLF_FUZZED(5.5))), determinant(_GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0), (true ? mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat3(2.8, 69.41, -6534.5671, -910.782, 3.3, -2.4, -8.9, 501.821, 61.85))))), 1.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(8.8))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(54.23)), float(injectionSwitch[0]), bool(true))), float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, _GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), min(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), (true ? round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))) : _GLF_FUZZED(-9.4))))), 0.0, 1.0, 1.0, exp(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.5)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(2342.6149)), bool(false))), _GLF_IDENTITY(1.0, (1.0) * 1.0))), _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(-20.84), min(true ? 1.0 : _GLF_FUZZED(-20.84), _GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(-20.84), clamp(true ? 1.0 : _GLF_FUZZED(-20.84), true ? 1.0 : _GLF_FUZZED(-20.84), true ? 1.0 : _GLF_FUZZED(-20.84))))))) : _GLF_FUZZED(-8.5))))), 0.0, 1.0), mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x3(injectionSwitch, round(_GLF_IDENTITY(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), 1.0 * (length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), 0.0, 1.0, 1.0, exp(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 1.0)))))[0], mix(float(_GLF_FUZZED(54.23)), float(injectionSwitch[0]), bool(true))), (true ? _GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(54.23)), float(injectionSwitch[0]), bool(true))) : _GLF_FUZZED(5.5))), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(log(4.9)) : _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0)), 1.0, 0.0, 0.0, 1.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(54.23)), float(injectionSwitch[0]), bool(true))), float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(54.23)), float(injectionSwitch[0]), bool(true))), (true ? _GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(54.23)), float(injectionSwitch[0]), bool(true))) : _GLF_FUZZED(5.5))), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0)))))) - 0.0), injectionSwitch[1])), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), clamp(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1])))), mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[0], (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1]), vec2(_GLF_FUZZED(-84.81), _GLF_FUZZED(-92.90)), bvec2(false, false)))) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY((- _GLF_IDENTITY(5.5, max(5.5, _GLF_IDENTITY(5.5, float(_GLF_IDENTITY(vec4(5.5, 0.0, 0.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0) + (vec4(5.5, 0.0, 0.0, 0.0)))))))), clamp((- 5.5), (- 5.5), _GLF_IDENTITY((- 5.5), min((- 5.5), (- 5.5)))))), _GLF_FUZZED(_GLF_IDENTITY(-4.5, (-4.5) - _GLF_ZERO(0.0, injectionSwitch.x)))), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0]))), float(_GLF_FUZZED(380.133)), bool(false))), (injectionSwitch)[1]), bvec2(true, true))).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), true, false, true)), (bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), true, false, true))) || false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(7.0)), float(injectionSwitch.y), bool(true))) : _GLF_FUZZED(2204.9756)))), bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(7.0)), float(injectionSwitch.y), bool(true))) : _GLF_FUZZED(2204.9756)))), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(7.0)), float(injectionSwitch.y), bool(true))) : _GLF_FUZZED(2204.9756)))), false, false)))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(43.97) : injectionSwitch.x)) > injectionSwitch.y)), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(3.9)), float(injectionSwitch.y), bool(true)))))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, false))), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bvec3((false), false, false)))))), true, true))), bool(bvec3(! (false), true, false))), true)), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, false))), true)))))))))))))), true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))[0], injectionSwitch[1])).x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))) && true)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_DEAD(false))))) || false)), (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_DEAD(false))))) || false))) || false)))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, ~ _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups)))), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) - 0u), 0u, 0u)), (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) - 0u), 0u, 0u))) | uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(96595u, 140001u, 110054u))), uvec3(uvec4(_GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) - 0u), 0u, 0u)), (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) - 0u), 0u, 0u))) | uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(96595u, 140001u, 110054u))), ((true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) - 0u), 0u, 0u)), (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) - 0u), 0u, 0u))) | uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(96595u, 140001u, 110054u)))) >> (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))), 1u)))).x), ((_GLF_IDENTITY(gl_NumWorkGroups, (true ? _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) | (0u))) - 0u, min((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) | (0u))) - 0u, (_GLF_IDENTITY(0u, (0u) | (0u))) - 0u))), 0u, 0u), (uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) | (0u))) - 0u, min((_GLF_IDENTITY(0u, (0u) | (0u))) - 0u, (_GLF_IDENTITY(0u, (0u) | (0u))) - 0u))), 0u, 0u)) / uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) : _GLF_FUZZED(uvec3(96595u, 140001u, 110054u)))).x)) + 0u)), _GLF_IDENTITY(((~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[0], (_GLF_IDENTITY(gl_NumWorkGroups[0], ~ (~ (gl_NumWorkGroups[0])))) | (gl_NumWorkGroups[0])), ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups[0], (gl_NumWorkGroups[0]) | 0u)))), _GLF_IDENTITY(gl_NumWorkGroups[1], (gl_NumWorkGroups[1]) >> (_GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, (0u) << 0u))) << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(0u ^ (uint(2u)), clamp(0u ^ (uint(2u)), 0u ^ (uint(2u)), 0u ^ (uint(2u)))))))), gl_NumWorkGroups[2])).x, (_GLF_IDENTITY(gl_NumWorkGroups.x, 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)).x), uint(uvec2((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups)), (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)).x), (0u | 1u)))))) - _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u, 0u)))))), max(((~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[0], (_GLF_IDENTITY(gl_NumWorkGroups[0], _GLF_IDENTITY(~ (~ (gl_NumWorkGroups[0])), (true ? ~ (~ (gl_NumWorkGroups[0])) : _GLF_FUZZED(subgroup_size))))) | (gl_NumWorkGroups[0])), ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups[0], (gl_NumWorkGroups[0]) | 0u)))), _GLF_IDENTITY(gl_NumWorkGroups[1], (gl_NumWorkGroups[1]) >> (0u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), 0u ^ (uint(2u)))))), gl_NumWorkGroups[2])).x, (_GLF_IDENTITY(gl_NumWorkGroups.x, 0u ^ (gl_NumWorkGroups.x))) - _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) ^ 0u, ((0u) ^ 0u) + 0u)), 0u, 0u)))))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[0], (_GLF_IDENTITY(gl_NumWorkGroups[0], ~ (~ (gl_NumWorkGroups[0])))) | (_GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), clamp(uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups))))), _GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(113129u, 17427u, 89788u))))))[0])), ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups[0], (gl_NumWorkGroups[0]) | 0u)))), _GLF_IDENTITY(gl_NumWorkGroups[1], (gl_NumWorkGroups[1]) >> (0u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(0u, (0u) << 0u) ^ (uint(2u)))))), gl_NumWorkGroups[2])).x, (_GLF_IDENTITY(gl_NumWorkGroups.x, 0u ^ (gl_NumWorkGroups.x))) - _GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u, 0u), (clamp(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u, 0u)) << 0u))))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[0], (_GLF_IDENTITY(gl_NumWorkGroups[0], ~ (~ (gl_NumWorkGroups[0])))) | (gl_NumWorkGroups[0])), ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups[0], (gl_NumWorkGroups[0]) | 0u)))), _GLF_IDENTITY(gl_NumWorkGroups[1], (gl_NumWorkGroups[1]) >> (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec3(0u, 1u, _GLF_IDENTITY(0u, (0u) | 0u)), clamp(_GLF_IDENTITY(uvec3(0u, 1u, 0u), min(uvec3(0u, 1u, 0u), uvec3(0u, 1u, 0u))), uvec3(0u, 1u, 0u), uvec3(0u, 1u, 0u))))) << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) | (2u))), _GLF_IDENTITY(0u, (0u) << 0u) ^ (uint(2u)))))), gl_NumWorkGroups[_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) + 0), _GLF_IDENTITY(2, min(2, 2))))])).x, (_GLF_IDENTITY(gl_NumWorkGroups.x, 0u ^ (gl_NumWorkGroups.x))) - _GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u, 0u), (clamp(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u, 0u)) << 0u)))))) << 0u)))) / (_GLF_IDENTITY(1u | 0u, (1u | 0u) ^ 0u))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(false, bool(bvec3(false, true, true))), true)))))) && true))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 1.0, 0.0, 0.0, 0.0, 0.0)))) - 0.0), bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 1.0, 0.0, 0.0, 0.0, 0.0)))) - 0.0)))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))), false), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))), false), bvec3(bvec4(bvec3(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))), false), true))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))), false), bvec3(bvec4(bvec3(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))), false), true)))))))))))), bool(bool(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), mat2(1.0) * (vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_id))))), 0u) << _GLF_IDENTITY(uvec3(4u), uvec3(_GLF_IDENTITY(4u, ~ (~ (_GLF_IDENTITY(4u, (4u) | (4u))))))), (uvec3(0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) - 0u) : _GLF_FUZZED(71713u))), 0u) << _GLF_IDENTITY(uvec3(4u), uvec3(4u))) + _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, (0u) - 0u), 0u), (uvec3(0u, _GLF_IDENTITY(0u, (0u) - 0u), 0u)) ^ uvec3(0u, 0u, 0u)))) + (gl_WorkGroupSize)).x, min(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_id))))), 0u) << _GLF_IDENTITY(uvec3(4u), uvec3(_GLF_IDENTITY(4u, ~ (~ (_GLF_IDENTITY(4u, (4u) | (4u))))))), (uvec3(0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) - 0u) : _GLF_FUZZED(71713u))), 0u) << _GLF_IDENTITY(uvec3(4u), uvec3(4u))) + _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, (0u) - 0u), 0u), (uvec3(0u, _GLF_IDENTITY(0u, (0u) - 0u), 0u)) ^ uvec3(0u, 0u, 0u)))) + (gl_WorkGroupSize)).x, _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_id))))), 0u) << _GLF_IDENTITY(uvec3(4u), uvec3(_GLF_IDENTITY(4u, ~ (~ (_GLF_IDENTITY(4u, (4u) | (4u))))))), (uvec3(0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) - 0u) : _GLF_FUZZED(71713u))), 0u) << _GLF_IDENTITY(uvec3(4u), uvec3(4u))) + _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, (0u) - 0u), 0u), (uvec3(0u, _GLF_IDENTITY(0u, (0u) - 0u), 0u)) ^ uvec3(0u, 0u, 0u)))) + (gl_WorkGroupSize)).x));
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ((false) || false) && true))))
    barrier();
   barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) / 1u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, (false ? _GLF_FUZZED(dot(vec3(645.473, 177.190, -9.7), vec3(46.92, 315.158, 417.820))) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x)) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, (false ? _GLF_FUZZED(dot(vec3(645.473, 177.190, -9.7), vec3(46.92, 315.158, 417.820))) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x)) > injectionSwitch.y) || false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-21.47), _GLF_FUZZED(-3.0)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) * 1.0)), bvec2(true, true)))) - vec2(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) - 0.0, min((0.0) - 0.0, (0.0) - 0.0))))).x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED(-3.4), _GLF_FUZZED(-5.1)), vec2((vec2(0.0, 0.0))[0], (vec2(0.0, 0.0))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))).x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))).y, _GLF_IDENTITY((injectionSwitch.y) + 0.0, min((injectionSwitch.y) + 0.0, (injectionSwitch.y) + 0.0)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / abs(vec2(1.0, 1.0))), (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)) || false))), false, false, _GLF_IDENTITY(true, true && (true)))), false || (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)), ((! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))) || false))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y), (! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)) || false))), false, false, true))))), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / _GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) - vec2(0.0, 0.0))).y, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y), 1.0 * (clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))))), false)), (bool(bvec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) + abs(0.0)))))).x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-5.3, -4094.7858)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0)))))) / vec2(1.0, 1.0)).y, true, _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), false))) || false))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)) - (0u & 136586u)), workgroup_base)) + _GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(workgroup_id))) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, _GLF_IDENTITY(1u, max(1u, 1u)), 1u))), _GLF_IDENTITY(_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) * (_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, 1u), (false ? _GLF_FUZZED(uvec2(23542u, 17619u)[0]) : max(1u, 1u)))), 1u)))), _GLF_IDENTITY((((_GLF_IDENTITY(1u, (1u) >> 0u) << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) * (_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec4(subgroup_size, 1u, _GLF_IDENTITY(1u, max(1u, 1u)), 1u), clamp(uvec4(subgroup_size, 1u, _GLF_IDENTITY(1u, max(1u, 1u)), 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(1u, max(1u, 1u)), 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(1u, max(1u, 1u)), 1u))))))) | 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)) * ((((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) * (_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, _GLF_IDENTITY(1u, max(1u, 1u)), 1u))))) | 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)) << _GLF_IDENTITY(uint(0u), uint(0u))), ((_GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(1u, 1u, 1u), uint(uint(clamp(1u, 1u, 1u))))) << _GLF_IDENTITY(uint(0u), uint(0u)))) - 0u) >> _GLF_IDENTITY(uint(0u), uint(0u))) * (_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, _GLF_IDENTITY(1u, max(1u, 1u)), 1u)))), (((_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec3(1u, 0u, 0u), min(_GLF_IDENTITY(uvec3(1u, 0u, 0u), (true ? uvec3(1u, 0u, 0u) : _GLF_FUZZED(uvec3(21058u, 73037u, 123737u)))), uvec3(1u, 0u, 0u))))) << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) * (_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, _GLF_IDENTITY(1u, max(1u, 1u)), 1u))))) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)) << _GLF_IDENTITY(uint(0u), uint(0u))), ((_GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(1u, 1u, 1u), uint(uint(clamp(1u, 1u, 1u))))) << _GLF_IDENTITY(uint(0u), uint(0u)))) - 0u) >> _GLF_IDENTITY(uint(0u), uint(0u))) * (_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, _GLF_IDENTITY(1u, max(1u, 1u)), 1u)))), (((_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec3(1u, 0u, 0u), min(_GLF_IDENTITY(uvec3(1u, 0u, 0u), (true ? uvec3(1u, 0u, 0u) : _GLF_FUZZED(uvec3(21058u, 73037u, 123737u)))), uvec3(1u, 0u, 0u))))) << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) * (_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, _GLF_IDENTITY(1u, max(1u, 1u)), 1u))))) ^ 0u), (true ? _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)) << _GLF_IDENTITY(uint(0u), uint(0u))), ((_GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(1u, 1u, 1u), uint(uint(clamp(1u, 1u, 1u))))) << _GLF_IDENTITY(uint(0u), uint(0u)))) - 0u) >> _GLF_IDENTITY(uint(0u), uint(0u))) * (_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, _GLF_IDENTITY(1u, max(1u, 1u)), 1u)))), (((_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec3(1u, 0u, 0u), min(_GLF_IDENTITY(uvec3(1u, 0u, 0u), (true ? uvec3(1u, 0u, 0u) : _GLF_FUZZED(uvec3(21058u, 73037u, 123737u)))), uvec3(1u, 0u, 0u))))) << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) * (_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, _GLF_IDENTITY(1u, max(1u, 1u)), 1u))))) ^ 0u) : _GLF_FUZZED(workgroup_id)))) << 0u), 1u * (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)) << _GLF_IDENTITY(uint(0u), uint(0u))), ((_GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(1u, 1u, 1u), _GLF_IDENTITY(uint(uint(clamp(1u, 1u, 1u))), min(uint(uint(clamp(1u, 1u, 1u))), uint(uint(clamp(1u, 1u, 1u))))))) << _GLF_IDENTITY(uint(0u), uint(0u)))) - 0u) >> _GLF_IDENTITY(uint(0u), uint(0u))) * (_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec3(1u, 0u, 1u)))))))), 1u)))), (((_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 1u * (1u))) + (1u ^ 1u)), 0u, 0u), min(_GLF_IDENTITY(uvec3(1u, 0u, 0u), (true ? uvec3(1u, 0u, 0u) : _GLF_FUZZED(uvec3(21058u, 73037u, 123737u)))), uvec3(1u, 0u, 0u))))) << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) * (_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, _GLF_IDENTITY(1u, max(1u, 1u)), 1u))))) ^ 0u)))) | (((_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) | (1u)) << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, max(0u, 0u))), uint(0u))) * (_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec4(subgroup_size, 1u, _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_id) : 1u)), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_id) : 1u)), 0u)), ~ (~ (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_id) : 1u)), 0u)), clamp(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_id) : 1u)), 0u)), (uint(uvec2(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)) : 1u)), 0u))) - 0u), uint(uvec2(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_id) : 1u)), 0u)), uint(uvec2(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_id) : 1u)), 0u)))))))), 0u, 0u))))), 1u), uvec4(0u, 0u, 0u, 0u) | (uvec4(subgroup_size, 1u, _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_id) : 1u), ((false ? _GLF_FUZZED(workgroup_id) : 1u)) | 0u)), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_id) : 1u)), 0u), (uvec2(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_id) : 1u)), 0u)) | (uvec2(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_id) : 1u)), 0u))))), 0u, 0u))))), 1u))))))))) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), min(subgroup_size, subgroup_size)) + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), min(_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) + 0u))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id))) / ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))), subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u))) + 1), _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1)) / 1u, 0u | (((subgroup_local_id + 1)) / 1u)), 1u * (_GLF_IDENTITY(((subgroup_local_id + 1)) / 1u, 0u | (((subgroup_local_id + 1)) / 1u))))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec2((subgroup_local_id + 1), (0u | 0u)))), clamp((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), 0u ^ (_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(173975u) : (subgroup_local_id + 1))))), _GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1))))))), min(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec2((subgroup_local_id + 1), (0u | 0u)))), clamp(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) * _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) / 1u)), _GLF_IDENTITY((subgroup_local_id + 1), 0u ^ (_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(173975u) : (subgroup_local_id + 1))))), _GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1))))))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec2((subgroup_local_id + 1), (0u | 0u)))), clamp((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))), (false ? _GLF_FUZZED(173975u) : (subgroup_local_id + 1))))), _GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) | (subgroup_local_id + 1))))))))), min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u))), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), 0u + ((subgroup_local_id + 1))), min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u)))) | 0u))), 1u, 0u, 1u))) % subgroup_size), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)) + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1)) / 1u, 0u | (((subgroup_local_id + 1)) / 1u)), 1u * (_GLF_IDENTITY(((subgroup_local_id + 1)) / 1u, 0u | (((subgroup_local_id + 1)) / 1u))))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec2((subgroup_local_id + 1), (0u | 0u)))), clamp((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), 0u ^ (_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(173975u) : (subgroup_local_id + 1))))), _GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1))))))), min(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec2((subgroup_local_id + 1), (0u | 0u)))), clamp((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), 0u ^ (_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(173975u) : (subgroup_local_id + 1))))), _GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1))))))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec2((subgroup_local_id + 1), (0u | 0u)))), clamp((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), 0u ^ (_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(173975u) : (subgroup_local_id + 1))))), _GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1))))))))), min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u))), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), 0u + ((subgroup_local_id + 1))), min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u)))) | 0u))), 1u, 0u, 1u))) % subgroup_size), min(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)) + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1)) / 1u, 0u | (((subgroup_local_id + 1)) / 1u)), 1u * (_GLF_IDENTITY(((subgroup_local_id + 1)) / 1u, 0u | (((subgroup_local_id + 1)) / 1u))))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec2((subgroup_local_id + 1), (0u | 0u)))), clamp((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), 0u ^ (_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(173975u) : (subgroup_local_id + 1))))), _GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1))))))), min(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec2((subgroup_local_id + 1), (0u | 0u)))), clamp((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), 0u ^ (_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(173975u) : (subgroup_local_id + 1))))), _GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1))))))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec2((subgroup_local_id + 1), (0u | 0u)))), clamp((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), 0u ^ (_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(173975u) : (subgroup_local_id + 1))))), _GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1))))))))), min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u))), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), 0u + ((subgroup_local_id + 1))), min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u)))) | 0u))), 1u, 0u, 1u))) % subgroup_size), workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)) + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1)) / 1u, 0u | (((subgroup_local_id + 1)) / 1u)), 1u * (_GLF_IDENTITY(((subgroup_local_id + 1)) / 1u, 0u | (((subgroup_local_id + 1)) / 1u))))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec2((subgroup_local_id + 1), (0u | 0u)))), clamp((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), 0u ^ (_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(173975u) : (subgroup_local_id + 1))))), _GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1))))))), min(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec2((subgroup_local_id + 1), (0u | 0u)))), clamp((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), 0u ^ (_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(173975u) : (subgroup_local_id + 1))))), _GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1))))))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec2((subgroup_local_id + 1), (0u | 0u)))), clamp((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), 0u ^ (_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(173975u) : (subgroup_local_id + 1))))), _GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1))))))))), min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u))), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), 0u + ((subgroup_local_id + 1))), min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u)))) | 0u))), 1u, 0u, 1u))) % subgroup_size))), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)) + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1)) / 1u, 0u | (((subgroup_local_id + 1)) / 1u)), 1u * (_GLF_IDENTITY(((subgroup_local_id + 1)) / 1u, 0u | (((subgroup_local_id + 1)) / 1u))))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec2((subgroup_local_id + 1), (0u | 0u)))), clamp((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), 0u ^ (_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(173975u) : (subgroup_local_id + 1))))), _GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(subgroup_local_id + 1, uint(uint(subgroup_local_id + 1)))))))))), min(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec2((subgroup_local_id + 1), _GLF_IDENTITY((0u | 0u), (false ? _GLF_FUZZED(197470u) : (0u | 0u)))))), clamp((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), 0u ^ (_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(173975u) : (subgroup_local_id + 1))))), _GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1))))))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec2((subgroup_local_id + 1), (_GLF_IDENTITY(0u | 0u, (0u | 0u) + 0u))))), clamp((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), 0u ^ (_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(173975u) : (subgroup_local_id + 1))))), _GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1))))))))), min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u))), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), 0u + ((subgroup_local_id + 1))), _GLF_IDENTITY(min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u)), max(_GLF_IDENTITY(min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u)), (min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u))) | (min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u)))), min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u)))))) | 0u))), 1u, 0u, 1u))) % subgroup_size), min(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)) + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)) ^ 0u)) / 1u, 0u | (((subgroup_local_id + 1)) / 1u)), 1u * (_GLF_IDENTITY(((subgroup_local_id + 1)) / 1u, 0u | (((subgroup_local_id + 1)) / 1u))))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec2((subgroup_local_id + 1), (0u | 0u)))), clamp((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), 0u ^ (_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(173975u) : (subgroup_local_id + 1))))), _GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1))))))), min(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_IDENTITY(uvec2((subgroup_local_id + 1), (0u | 0u)), max(uvec2((subgroup_local_id + 1), (0u | 0u)), _GLF_IDENTITY(uvec2((subgroup_local_id + 1), (0u | 0u)), (uvec2((subgroup_local_id + 1), (0u | 0u))) | (uvec2((subgroup_local_id + 1), (0u | 0u)))))))), clamp((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), 0u ^ (_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(173975u) : (subgroup_local_id + 1))))), _GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))))))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec2((subgroup_local_id + 1), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) | 0u)))), clamp((_GLF_IDENTITY(subgroup_local_id + 1, (0u >> _GLF_IDENTITY(uint(3u), uint(3u))) + (subgroup_local_id + 1))), _GLF_IDENTITY((subgroup_local_id + 1), 0u ^ (_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(173975u) : (subgroup_local_id + 1))))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))), max((subgroup_local_id + 1), (_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1))))))))), min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1)))) / 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))), 0u + ((subgroup_local_id + 1))), min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u)))) | 0u))), 1u, 0u, 1u))) % subgroup_size), workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)) + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1)) / 1u, 0u | (((subgroup_local_id + 1)) / 1u)), 1u * (_GLF_IDENTITY(((subgroup_local_id + 1)) / 1u, 0u | (((subgroup_local_id + 1)) / 1u))))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec2((subgroup_local_id + 1), (0u | 0u)))), clamp((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 0u)))), (false ? _GLF_FUZZED(173975u) : (subgroup_local_id + 1))))), _GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1))))))), min(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec2((subgroup_local_id + 1), (0u | 0u)))), clamp((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), 0u ^ (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY(false ? _GLF_FUZZED(173975u) : (subgroup_local_id + 1), clamp(false ? _GLF_FUZZED(173975u) : (subgroup_local_id + 1), false ? _GLF_FUZZED(173975u) : (subgroup_local_id + 1), _GLF_IDENTITY(false ? _GLF_FUZZED(173975u) : (subgroup_local_id + 1), (false ? _GLF_FUZZED(173975u) : (subgroup_local_id + 1)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))), _GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1))))))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec2((subgroup_local_id + 1), (0u | 0u)))), clamp((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uint(subgroup_local_id + 1), min(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1)))))))), _GLF_IDENTITY((subgroup_local_id + 1), 0u ^ (_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(173975u) : (subgroup_local_id + 1))))), _GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1))))))))), min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u))), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), 0u + ((subgroup_local_id + 1))), min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u)))) | 0u))), 1u, 0u, 1u))) % subgroup_size)))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, (4) | (4)), 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))], _GLF_IDENTITY(4, (4) | (4)), _GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(_GLF_IDENTITY(64, max(_GLF_IDENTITY(64, 0 ^ (64)), 64)), (64) - 0), 64))) - 0, (_GLF_IDENTITY((_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, (64) - 0), 64))) - 0, _GLF_IDENTITY(((_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, (64) - 0), 64))) - 0) << 0, clamp(((_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, (64) - 0), 64))) - 0) << 0, ((_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, (64) - 0), 64))) - 0) << 0, ((_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, (64) - 0), 64))) - _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(0, ~ (~ (0))), (1 & 1))), _GLF_IDENTITY(int(ivec3(int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec3(0, 1, 1), (ivec3(0, 1, 1)) ^ ivec3(0, 0, 0))))) | 0), ~ (~ (0))), (1 & 1))), int(_GLF_ONE(1.0, injectionSwitch.y)), 1)), clamp(int(ivec3(int(ivec2(_GLF_IDENTITY(0, ~ (~ (0))), (1 & 1))), _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (true ? int(_GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED(-52879))), int(_GLF_ONE(1.0, injectionSwitch.y)))), 1)), int(ivec3(int(ivec2(_GLF_IDENTITY(0, ~ (~ (0))), (1 & 1))), int(_GLF_ONE(1.0, injectionSwitch.y)), 1)), int(ivec3(int(ivec2(_GLF_IDENTITY(0, ~ (~ (0))), (1 & 1))), int(_GLF_ONE(1.0, injectionSwitch.y)), 1)))))), (_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), min((~ (0)), (~ (0))))), (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(31672) : 1)) & 1))), _GLF_IDENTITY(int(ivec3(int(ivec2(_GLF_IDENTITY(0, ~ (~ (0))), (1 & 1))), int(_GLF_ONE(1.0, injectionSwitch.y)), 1)), clamp(int(ivec3(int(ivec2(_GLF_IDENTITY(0, ~ (~ (0))), (1 & 1))), int(_GLF_ONE(1.0, injectionSwitch.y)), 1)), int(ivec3(int(ivec2(_GLF_IDENTITY(0, ~ (~ (0))), (1 & 1))), int(_GLF_ONE(1.0, injectionSwitch.y)), 1)), int(ivec3(int(ivec2(_GLF_IDENTITY(0, ~ (~ (0))), (1 & 1))), int(_GLF_ONE(1.0, injectionSwitch.y)), 1))))))) | 0)) << 0)))) ^ 0)), clamp(_GLF_IDENTITY(64, (64) | _GLF_IDENTITY((64), ((64)) + (0 >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), int(ivec4(int(5), 1, 1, 1))))))), _GLF_IDENTITY(64, clamp(64, 64, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, clamp(_GLF_IDENTITY(_GLF_IDENTITY(64, (64) >> 0), (_GLF_IDENTITY(64, (64) >> 0)) - 0), _GLF_IDENTITY(64, (64) | _GLF_IDENTITY((64), ~ (~ ((64))))), 64))) ^ 0))), _GLF_IDENTITY(64, (_GLF_IDENTITY(64, int(ivec4(64, _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(0, 0, 1)), (int(_GLF_IDENTITY(ivec3(0, 0, 1), (ivec3(0, 0, 1)) - ivec3(0, 0, 0)))) ^ 0))) + (0 & -77755)), _GLF_IDENTITY(_GLF_IDENTITY(0, (0 | 0) + (_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((0) ^ 0, ((0) ^ _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, 0 + (0))))) / 1)), (false ? _GLF_FUZZED(33260) : _GLF_IDENTITY(0, _GLF_IDENTITY((0) ^ 0, ((0) ^ _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, 0 + _GLF_IDENTITY((0), ((0)) - 0))))) / 1)))))), (0) / 1), 0)), (false ? _GLF_FUZZED(-68187) : _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, _GLF_IDENTITY((0) / 1, ((0) / 1) | 0)), 0)))), 1, 1)))) / 1))), 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1))) < _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), min(subgroup_size, subgroup_size))) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   int i = _GLF_IDENTITY(0, (0) >> 0);
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) || false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) || false, true && ((false) || false)), bool(bool((false) || false))))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) && true)))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), abs(vec2(1.0, 1.0)) * (injectionSwitch)).x : _GLF_FUZZED(vec4(940.176, 6.0, 76.59, -1164.2623)[2]), mix(float(_GLF_FUZZED(-3.7)), float(_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), abs(vec2(1.0, 1.0)) * (injectionSwitch)).x : _GLF_FUZZED(vec4(940.176, 6.0, 76.59, -1164.2623)[2]), min(true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), abs(vec2(1.0, 1.0)) * (injectionSwitch)).x : _GLF_FUZZED(vec4(940.176, 6.0, 76.59, -1164.2623)[2]), true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), abs(vec2(1.0, 1.0)) * (injectionSwitch)).x : _GLF_FUZZED(vec4(940.176, 6.0, 76.59, -1164.2623)[2])))), bool(true))))) > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, (false) || false)))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8.3), _GLF_FUZZED((+ -67.56))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(dot(vec3(8.4, -9.0, 5.0), vec3(333.165, 5.1, 544.051))) : (injectionSwitch)[1]))), bvec2(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)))))))), true))).x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * _GLF_IDENTITY((injectionSwitch.y), min((injectionSwitch.y), _GLF_IDENTITY((injectionSwitch.y), mix(float((injectionSwitch.y)), float(_GLF_FUZZED(-8.1)), bool(false))))))), true && ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(cosh(-6810.7558)))), injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (true ? mat2(1.0) * (injectionSwitch) : _GLF_FUZZED(vec2(8.6, -0.4))))).y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), ! (! ((! (false)))))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(checker[virtual_gid], read, 4, 64, _GLF_IDENTITY(4, max(4, 4)));
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, (read) * 1u), 4, _GLF_IDENTITY(64, max(64, 64)), 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x) + _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-3.0)))) > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(injectionSwitch.x, cos(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + sin(0.0)), 0.0)), max(float(mat3(injectionSwitch.x, cos(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), float(mat3(injectionSwitch.x, cos(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) || false)), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) || false)), true, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(injectionSwitch.x, cos(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), max(float(mat3(injectionSwitch.x, cos(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), float(mat3(injectionSwitch.x, cos(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) || false)), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) || false)), true, true), _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), (_GLF_IDENTITY(float(injectionSwitch.x), mix(float(_GLF_IDENTITY(float(injectionSwitch.x), (true ? float(injectionSwitch.x) : _GLF_FUZZED(-3.5)))), float(_GLF_FUZZED(-6.3)), bool(false)))) / 1.0), float(_GLF_FUZZED(float(112008u))), bool(false))) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(false, bool(bvec2(false, true)))) && true)))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
