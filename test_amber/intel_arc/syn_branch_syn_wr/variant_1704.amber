#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_15 {
 bool _f0;
 bvec4 _f1;
 mat3x4 _f2;
 ivec4 _f3;
} ;

struct _GLF_struct_14 {
 mat2 _f0;
 mat3x4 _f1;
 vec3 _f2;
 uint _f3;
 mat3 _f4;
} ;

struct _GLF_struct_16 {
 _GLF_struct_14 _f0;
 ivec2 _f1;
 _GLF_struct_15 _f2;
} ;

struct _GLF_struct_13 {
 mat4x2 _f0;
} ;

struct _GLF_struct_11 {
 bvec3 _f0;
 uvec2 _f1;
} ;

struct _GLF_struct_10 {
 vec2 _f0;
 bvec4 _f1;
 bvec4 _f2;
 mat3x4 _f3;
} ;

struct _GLF_struct_9 {
 uvec2 _f0;
 bvec2 _f1;
 mat4x2 _f2;
} ;

struct _GLF_struct_12 {
 ivec2 _f0;
 ivec2 _f1;
 _GLF_struct_9 _f2;
 vec4 _f3;
 _GLF_struct_10 _f4;
 _GLF_struct_11 _f5;
} ;

struct _GLF_struct_7 {
 ivec4 _f0;
 vec3 _f1;
 vec2 _f2;
 vec4 _f3;
 uint _f4;
 mat4x2 _f5;
 vec2 _f6;
} ;

struct _GLF_struct_6 {
 uvec4 _f0;
 uvec2 _f1;
 mat3x2 _f2;
 mat4 _f3;
} ;

struct _GLF_struct_5 {
 mat2x3 _f0;
 bvec2 _f1;
 mat4x3 _f2;
} ;

struct _GLF_struct_4 {
 uvec4 _f0;
 vec3 _f1;
 ivec3 _f2;
 bvec3 _f3;
} ;

struct _GLF_struct_8 {
 _GLF_struct_4 _f0;
 ivec3 _f1;
 mat3x4 _f2;
 _GLF_struct_5 _f3;
 _GLF_struct_6 _f4;
 mat4 _f5;
 _GLF_struct_7 _f6;
} ;

struct _GLF_struct_17 {
 _GLF_struct_8 _f0;
 _GLF_struct_12 _f1;
 mat3x2 _f2;
 _GLF_struct_13 _f3;
 _GLF_struct_16 _f4;
 uint read;
} ;

struct _GLF_struct_1 {
 bvec2 _f0;
 uint _f1;
 mat4x2 _f2;
 mat4x3 _f3;
 mat3x2 _f4;
} ;

struct _GLF_struct_0 {
 bvec3 _f0;
 uvec4 _f1;
 mat4 _f2;
 mat2 _f3;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 float _f2;
} ;

struct _GLF_struct_3 {
 _GLF_struct_2 _f0;
 ivec4 _f1;
 uint workgroup_id;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   for(int _injected_loop_counter = _GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY((0), (_GLF_IDENTITY((0), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))) * ((0)))) ^ 0) | (0)) & 75510), clamp(_GLF_IDENTITY((_GLF_IDENTITY(0, (0) | (0)) & _GLF_IDENTITY(75510, (_GLF_IDENTITY(75510, (75510) / 1)) | (_GLF_IDENTITY(75510, _GLF_IDENTITY(0, (0) / ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))) | (75510))))), max(_GLF_IDENTITY((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) | (0)) & 75510), (false ? _GLF_FUZZED(50858) : (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)) & 75510, (_GLF_IDENTITY(0, (0) | (0)) & 75510) ^ 0)))), (_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(0, 1)), 0 ^ (_GLF_IDENTITY(int(ivec2(0, 1)), clamp(int(ivec2(0, 1)), int(ivec2(0, 1)), int(ivec2(0, 1))))))))) & 75510))), _GLF_IDENTITY((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) - 0)) | (0)) & 75510), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(0, (0) | _GLF_IDENTITY((0), int(ivec3(_GLF_IDENTITY((0), ((0)) ^ 0), 0, 0)))) & 75510), max((_GLF_IDENTITY(0, (0) | (0)) & 75510), _GLF_IDENTITY((_GLF_IDENTITY(0, (0) | (0)) & 75510), max((_GLF_IDENTITY(0, (0) | (0)) & 75510), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), (0) | (0)) & 75510)))))), int(ivec4((_GLF_IDENTITY((_GLF_IDENTITY(0, (0) | (0)) & 75510), max((_GLF_IDENTITY(0, (0) | _GLF_IDENTITY((0), (_GLF_IDENTITY((0), ~ (_GLF_IDENTITY(~ ((0)), (~ ((0))) / 1)))) | ((0)))) & 75510), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)) & 75510, (_GLF_IDENTITY(0, _GLF_IDENTITY((0), ~ (~ (_GLF_IDENTITY((0), max((0), (0)))))) | (0)) & 75510) / 1)), max((_GLF_IDENTITY(0, (0) | (0)) & 75510), (_GLF_IDENTITY(0, (0) | (0)) & 75510)))))), 0, 0, _GLF_IDENTITY(0, (0) + 0)))) << 0), (_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, 0 ^ (0)))))) & 75510))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter)) < 1))))) && true); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false))))
      continue;
    }
  }
 uint subgroup_id = gl_SubgroupID;
 for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)) && true, ((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))))) && true) && true)); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           return;
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) || false), true)))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                break;
               return;
              }
             return;
            }
          }
         else
          {
           return;
          }
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        continue;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      break;
    }
   if(_GLF_DEAD(false))
    continue;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(_GLF_struct_2(_GLF_struct_0(bvec3(true), uvec4(1u), mat4(1.0), mat2(1.0)), _GLF_struct_1(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))) && true)), 1u, mat4x2(1.0), mat4x3(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, length(0.0), 1.0, 1.0, cos(0.0)))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(mat3(vec4(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, length(0.0), 1.0, 1.0, cos(0.0)))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), 0.0, 1.0, 0.0, 1.0, 0.0))))), 1.0, 1.0))), mat3x2(1.0)), 1.0), ivec4(1), _GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)).x);
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u)) | 0u) * _GLF_IDENTITY(_GLF_struct_replacement_3.workgroup_id, min(_GLF_struct_replacement_3.workgroup_id, _GLF_struct_replacement_3.workgroup_id));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))); _injected_loop_counter --)
    {
     return;
    }
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, clamp(workgroup_base + subgroup_id * subgroup_size, workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size, 0u + (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size)), workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (~ _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(uint(uvec4((subgroup_size), 1u, 0u, 1u)), (uint(uvec4((subgroup_size), 1u, 0u, 1u))) >> 0u)))))))), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uvec2(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))) * subgroup_size) >> 0u), _GLF_IDENTITY(0u, (0u) | 0u)))))) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(62.87), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(3.0)), float((injectionSwitch)[0]), bool(true))), _GLF_FUZZED(50.59)), bvec2(true, false))).x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), sqrt(1.0), 0.0, 0.0), (vec4(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), sqrt(1.0), 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0)))))), false)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        continue;
       return;
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u) + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), min(_GLF_IDENTITY((subgroup_size), max((subgroup_size), (subgroup_size))), (subgroup_size))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (subgroup_size) : _GLF_FUZZED(subgroup_local_id))) >> 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) | 0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << (0u >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), _GLF_IDENTITY((uint(1u)) | 0u, (_GLF_IDENTITY((uint(1u)) | 0u, ((uint(1u)) | 0u) / 1u)) ^ 0u))))) + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), (workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, ~ _GLF_IDENTITY((~ (subgroup_local_id)), ~ (~ ((~ (subgroup_local_id))))))), uint(uvec4(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u))) >> 0u))), ~ (~ (subgroup_local_id))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u))) >> 0u))), ~ (~ (subgroup_local_id)))) | 0u), _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))))), 0u, 0u, 0u))))) + 1) % subgroup_size)) * 1u), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), max(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size))), workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u) + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), min(_GLF_IDENTITY((subgroup_size), max((subgroup_size), (subgroup_size))), (subgroup_size))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (subgroup_size) : _GLF_FUZZED(subgroup_local_id))) >> 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) | 0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << (0u >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), _GLF_IDENTITY((uint(1u)) | 0u, (_GLF_IDENTITY((uint(1u)) | 0u, ((uint(1u)) | 0u) / 1u)) ^ 0u))))) + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), (workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, ~ _GLF_IDENTITY((~ (subgroup_local_id)), ~ (~ ((~ (subgroup_local_id))))))), uint(uvec4(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u))) >> 0u))), ~ (~ (subgroup_local_id))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u))) >> 0u))), ~ (~ (subgroup_local_id)))) | 0u), _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))))), 0u, 0u, 0u))))) + 1) % subgroup_size)) * 1u), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), max(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size))), workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u) + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), min(_GLF_IDENTITY((subgroup_size), max((subgroup_size), (subgroup_size))), (subgroup_size))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (subgroup_size) : _GLF_FUZZED(subgroup_local_id))) >> 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) | 0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << (0u >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), _GLF_IDENTITY((uint(1u)) | 0u, (_GLF_IDENTITY((uint(1u)) | 0u, ((uint(1u)) | 0u) / 1u)) ^ 0u))))) + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), (workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, ~ _GLF_IDENTITY((~ (subgroup_local_id)), ~ (~ ((~ (subgroup_local_id))))))), uint(uvec4(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u))) >> 0u))), ~ (~ (subgroup_local_id))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u))) >> 0u))), ~ (~ (subgroup_local_id)))) | 0u), _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))))), 0u, 0u, 0u))))) + 1) % subgroup_size)) * 1u), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), max(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size))), workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u) + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), min(_GLF_IDENTITY((subgroup_size), max((subgroup_size), (subgroup_size))), (subgroup_size))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (subgroup_size) : _GLF_FUZZED(subgroup_local_id))) >> 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) | 0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << (0u >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), _GLF_IDENTITY((uint(1u)) | 0u, (_GLF_IDENTITY((uint(1u)) | 0u, ((uint(1u)) | 0u) / 1u)) ^ 0u))))) + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), (workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, ~ _GLF_IDENTITY((~ (subgroup_local_id)), ~ (~ ((~ (subgroup_local_id))))))), uint(uvec4(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u))) >> 0u))), ~ (~ (subgroup_local_id))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u))) >> 0u))), ~ (~ (subgroup_local_id)))) | 0u), _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))))), 0u, 0u, 0u))))) + 1) % subgroup_size)) * 1u), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), max(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size))), workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size))), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u) + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), min(_GLF_IDENTITY((subgroup_size), max((subgroup_size), (subgroup_size))), (subgroup_size))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (subgroup_size) : _GLF_FUZZED(subgroup_local_id))) >> 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) | 0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << (0u >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), _GLF_IDENTITY((uint(1u)) | 0u, (_GLF_IDENTITY((uint(1u)) | 0u, ((uint(1u)) | 0u) / 1u)) ^ 0u))))) + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), (workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, ~ _GLF_IDENTITY((~ (subgroup_local_id)), ~ (~ ((~ (subgroup_local_id))))))), uint(uvec4(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u))) >> 0u))), ~ (~ (subgroup_local_id))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u))) >> 0u))), ~ (~ (subgroup_local_id)))) | 0u), _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))))), 0u, 0u, 0u))))) + 1) % subgroup_size)) * 1u), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), max(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size))), workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u) + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), min(_GLF_IDENTITY((subgroup_size), max((subgroup_size), (subgroup_size))), (subgroup_size))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (subgroup_size) : _GLF_FUZZED(subgroup_local_id))) >> 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) | 0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << (0u >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), _GLF_IDENTITY((uint(1u)) | 0u, (_GLF_IDENTITY((uint(1u)) | 0u, ((uint(1u)) | 0u) / 1u)) ^ 0u))))) + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), (workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, ~ _GLF_IDENTITY((~ (subgroup_local_id)), ~ (~ ((~ (subgroup_local_id))))))), uint(uvec4(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u))) >> 0u))), ~ (~ (subgroup_local_id))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u))) >> 0u))), ~ (~ (subgroup_local_id)))) | 0u), _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))))), 0u, 0u, 0u))))) + 1) % subgroup_size)) * 1u), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), max(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size))), workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)))))));
 do
  {
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, _GLF_IDENTITY(0 ^ (_GLF_IDENTITY(1, (1) + 0)), (false ? _GLF_FUZZED(-93688) : 0 ^ (_GLF_IDENTITY(1, (1) + 0)))))), _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4), clamp((4), (4), (4))) << 0), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, _GLF_IDENTITY((4), clamp((4), (4), (4))) << 0), 1, 1), (ivec3(_GLF_IDENTITY(4, _GLF_IDENTITY((4), clamp((4), (4), (4))) << 0), 1, 1)) - ivec3(0, 0, 0))), ~ (~ (int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, _GLF_IDENTITY((4), clamp((4), (4), (4))) << 0), 1, 1), (ivec3(_GLF_IDENTITY(4, _GLF_IDENTITY((4), clamp((4), (4), (4))) << 0), 1, 1)) - ivec3(0, 0, 0)), (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, _GLF_IDENTITY((4), clamp((4), (4), (4))) << 0), _GLF_IDENTITY(1, (1) + (0 | 0)), 1), (ivec3(_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec2(4, (1 & 1)), ivec2(ivec2(ivec2(4, (1 & 1)))))))), clamp((4), (4), (4))) << 0), 1, 1)) - ivec3(0, 0, 0))) / ((ivec3(1, 1, 1) << _GLF_IDENTITY(ivec3(1), ivec3(1))) >> _GLF_IDENTITY(ivec3(1), ivec3(1))))))))), 64, 4);
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))
    {
     do
      {
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
     break;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 _GLF_struct_17 _GLF_struct_replacement_17 = _GLF_struct_17(_GLF_struct_8(_GLF_struct_4(_GLF_IDENTITY(uvec4(1u), (false ? _GLF_IDENTITY(_GLF_FUZZED(bitfieldReverse(uvec4(43277u, 162872u, 136994u, 142902u))), uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_FUZZED(bitfieldReverse(uvec4(_GLF_IDENTITY(43277u, ~ (~ (_GLF_IDENTITY(43277u, clamp(43277u, 43277u, _GLF_IDENTITY(43277u, min(43277u, 43277u))))))), 162872u, 136994u, 142902u))))) : uvec4(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, 0u ^ (1u)), 1u))))), _GLF_IDENTITY(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((48.79 + -6273.7273))), float(1.0), bool(true))), 1.0, 1.0)), (false ? _GLF_FUZZED(-6.3) : 1.0))), min(_GLF_IDENTITY(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((48.79 + -6273.7273))), float(1.0), bool(true))), 1.0, 1.0)), (false ? _GLF_FUZZED(-6.3) : 1.0))), (vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((48.79 + -6273.7273))), float(1.0), bool(true))), 1.0, 1.0)), (false ? _GLF_FUZZED(-6.3) : 1.0)))) / vec3(1.0, 1.0, 1.0)), vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((48.79 + -6273.7273))), float(1.0), bool(true))), 1.0, 1.0)), (false ? _GLF_FUZZED(-6.3) : 1.0))))), ivec3(1), bvec3(true)), _GLF_IDENTITY(ivec3(1), ivec3(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1), (ivec3(1)) / ivec3(1, 1, 1)), max(ivec3(1), _GLF_IDENTITY(ivec3(1), min(ivec3(1), ivec3(1)))))))), mat3x4(1.0), _GLF_struct_5(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(vec4(7207.5763, -10.95, -5.2, -89.91).b)), float(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))) ? _GLF_FUZZED(7017.2418) : 1.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(vec4(7207.5763, -10.95, -5.2, -89.91), (vec4(7207.5763, -10.95, -5.2, -89.91)) / vec4(1.0, 1.0, 1.0, 1.0)).b)), float(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) && true)) ? _GLF_FUZZED(7017.2418) : 1.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(vec4(7207.5763, -10.95, -5.2, -89.91), (vec4(7207.5763, -10.95, -5.2, -89.91)) / vec4(1.0, 1.0, 1.0, 1.0)).b)), float(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) && true)) ? _GLF_FUZZED(7017.2418) : 1.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), float(float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(vec4(7207.5763, -10.95, -5.2, -89.91), (vec4(7207.5763, -10.95, -5.2, -89.91)) / vec4(1.0, 1.0, 1.0, 1.0)).b)), float(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) && true)) ? _GLF_FUZZED(7017.2418) : 1.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(vec4(7207.5763, -10.95, -5.2, -89.91), (vec4(7207.5763, -10.95, -5.2, -89.91)) / vec4(1.0, 1.0, 1.0, 1.0)).b)), float(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) && true)) ? _GLF_FUZZED(7017.2418) : 1.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0 + (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(vec4(7207.5763, -10.95, -5.2, -89.91), (vec4(7207.5763, -10.95, -5.2, -89.91)) / vec4(1.0, 1.0, 1.0, 1.0)).b)), float(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) && true)) ? _GLF_FUZZED(7017.2418) : 1.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) / 1.0)), bvec2(true), mat4x3(1.0)), _GLF_struct_6(uvec4(1u), uvec2(1u), mat3x2(1.0), mat4(1.0)), mat4(1.0), _GLF_struct_7(ivec4(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (1)), clamp(_GLF_IDENTITY(~ (~ (1)), (true ? ~ (~ (_GLF_IDENTITY(1, _GLF_IDENTITY(min(_GLF_IDENTITY(1, (1) | 0), 1), int(ivec4(min(_GLF_IDENTITY(1, (1) | 0), 1), int(_GLF_ZERO(0.0, injectionSwitch.x)), (-11341 & 0), 1)))))) : _GLF_IDENTITY(_GLF_FUZZED(12996), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_FUZZED(12996))))), ~ (~ (1)), _GLF_IDENTITY(~ (~ (1)), (~ (~ _GLF_IDENTITY((1), min(_GLF_IDENTITY((1), (_GLF_IDENTITY((1), max((1), (1)))) / 1), (1))))) / 1))), 0 ^ (_GLF_IDENTITY(~ (~ (1)), clamp(_GLF_IDENTITY(~ (~ (1)), (true ? ~ (~ (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) | _GLF_IDENTITY(0, (0) * 1)), 1)))) : _GLF_IDENTITY(_GLF_FUZZED(12996), int(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) / round(length(normalize(1.0)))), injectionSwitch.x)) ^ (_GLF_FUZZED(12996))))), ~ (~ (1)), _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (1)), (~ (~ _GLF_IDENTITY((1), min(_GLF_IDENTITY((1), ((1)) / 1), (1))))) / 1), 1 * (_GLF_IDENTITY(~ (~ _GLF_IDENTITY((1), (1 | 1) * (_GLF_IDENTITY((1), ((1)) | ((1)))))), (~ (~ _GLF_IDENTITY((1), min(_GLF_IDENTITY((1), ((1)) / 1), (1))))) / 1))))))))), vec3(1.0), vec2(1.0), vec4(1.0), 1u, mat4x2(1.0), vec2(1.0))), _GLF_struct_12(ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) >> 0)), (int(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), (false ? _GLF_FUZZED(-97891) : _GLF_IDENTITY(1, (1) >> 0))))) + 0)), ~ (~ (int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) >> 0)), (int(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), (false ? _GLF_FUZZED(-97891) : _GLF_IDENTITY(1, (1) >> 0))))) + 0))))))), _GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), (ivec2(1)) << ivec2(0, 0)), min(ivec2(1), ivec2(1))), _GLF_struct_9(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), uvec2(1u, 1u) * (uvec2(1u))), (uvec2(0u, 0u) | _GLF_IDENTITY(uvec2(0u, 0u), ~ (~ (uvec2(0u, 0u))))) ^ (uvec2(1u))), clamp(uvec2(1u), uvec2(1u), uvec2(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))), bvec2(true), mat4x2(1.0)), vec4(1.0), _GLF_struct_10(vec2(1.0), bvec4(true), bvec4(true), mat3x4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(asinh(inversesqrt(-2.1))))))), _GLF_struct_11(bvec3(true), uvec2(1u))), mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0)), mix(_GLF_IDENTITY(float(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0))), min(float(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0))), _GLF_IDENTITY(float(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0))), (float(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0)))) - 0.0))), float(_GLF_FUZZED(-95.07)), bool(false)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0)), mix(float(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0))), float(_GLF_FUZZED(-95.07)), bool(false)))), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0)), mix(float(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0))), float(_GLF_FUZZED(-95.07)), bool(false)))), _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0)), mix(float(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0))), float(_GLF_FUZZED(-95.07)), bool(false)))), min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0)), mix(float(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0))), float(_GLF_FUZZED(-95.07)), bool(false)))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0)), mix(float(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0))), float(_GLF_FUZZED(-95.07)), bool(false)))))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(-29.86) : float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0)), mix(float(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0))), float(_GLF_FUZZED(-95.07)), bool(false)))), min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0)), mix(float(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0))), float(_GLF_FUZZED(-95.07)), bool(false)))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0)), mix(float(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0))), float(_GLF_FUZZED(-95.07)), bool(false)))))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0)), mix(float(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0))), float(_GLF_FUZZED(-95.07)), bool(false)))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0)), mix(float(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0))), float(_GLF_FUZZED(-95.07)), bool(false)))), _GLF_IDENTITY(max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0)), mix(float(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0))), float(_GLF_FUZZED(-95.07)), bool(false)))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0)), mix(float(float(mat2x3(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, sin(0.0), 0.0, 1.0, 1.0, exp(0.0), 0.0))), length(0.0), 1.0, sin(0.0), 1.0, 0.0))), float(_GLF_FUZZED(-95.07)), bool(false))))), float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0)), mix(float(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(4821.4451) : 0.0))) * 1.0)))), float(_GLF_FUZZED(-95.07)), bool(false)))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0)), mix(float(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0))), float(_GLF_FUZZED(-95.07)), bool(false))))), _GLF_IDENTITY(float(vec4(max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0)), mix(float(float(mat2x3(1.0, length(0.0), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(vec2(-67.80, 827.949).t)), bool(false))), sin(0.0), 1.0, 0.0))), float(_GLF_FUZZED(-95.07)), bool(false)))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0)), mix(float(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0))), float(_GLF_FUZZED(-95.07)), bool(false))))), 0.0, 0.0, 1.0)), min(float(vec4(max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0)), mix(float(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0))), float(_GLF_FUZZED(-95.07)), bool(false)))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0)), mix(float(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0))), float(_GLF_FUZZED(-95.07)), bool(false))))), 0.0, 0.0, 1.0)), float(vec4(max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0)), mix(float(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0))), float(_GLF_FUZZED(-95.07)), bool(false)))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0)), mix(float(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0))), float(_GLF_FUZZED(-95.07)), bool(false))))), 0.0, 0.0, 1.0))))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat3(_GLF_IDENTITY(max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0)), mix(float(_GLF_IDENTITY(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0)), clamp(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0)), _GLF_IDENTITY(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0)), max(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0)), float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0)))), float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0))))), float(_GLF_FUZZED(-95.07)), bool(false)))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, _GLF_IDENTITY(length(0.0), mix(float(_GLF_FUZZED(4.0)), float(length(0.0)), bool(true))), 1.0, sin(0.0), 1.0, 0.0)), mix(float(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)))), float(_GLF_FUZZED(-95.07)), bool(false))))), _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0)), mix(_GLF_IDENTITY(float(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0))), min(float(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0))), _GLF_IDENTITY(float(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? float(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0))) : _GLF_FUZZED(-5.6))))), float(_GLF_FUZZED(-95.07)), bool(false)))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0)), mix(float(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0))), float(_GLF_FUZZED(-95.07)), bool(false))))), 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(vec4(6.3, 0.6, 9238.5744, 34.89)) : vec4(max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0)), mix(_GLF_IDENTITY(float(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0))), min(float(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0))), _GLF_IDENTITY(float(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? float(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0))) : _GLF_FUZZED(-5.6))))), float(_GLF_FUZZED(-95.07)), bool(false)))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0)), mix(float(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0))), float(_GLF_FUZZED(-95.07)), bool(false))))), 0.0, 0.0, 1.0)))), min(float(vec4(max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0)), mix(float(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0))), float(_GLF_FUZZED(-95.07)), bool(false)))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0)), mix(float(_GLF_IDENTITY(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0)), clamp(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0)), _GLF_IDENTITY(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0)), max(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0)), _GLF_IDENTITY(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0)), (false ? _GLF_FUZZED(-4948.1391) : float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0)))))), float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0))))), float(_GLF_FUZZED(-95.07)), bool(false))))), 0.0, 0.0, 1.0)), float(vec4(max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0)), mix(float(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0))), float(_GLF_FUZZED(-95.07)), bool(_GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0)), mix(float(float(mat2x3(1.0, length(_GLF_IDENTITY(0.0, min(0.0, 0.0))), 1.0, sin(0.0), 1.0, 0.0))), float(_GLF_FUZZED(-95.07)), bool(false))))), 0.0, 0.0, 1.0))))), 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0))))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0)), mix(float(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0))), float(_GLF_FUZZED(-95.07)), bool(false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, sqrt(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(2.3)))), 0.0, 0.0, 0.0, sqrt(1.0)), transpose(transpose(mat3x4(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, sqrt(1.0), 0.0, 0.0, 0.0, sqrt(1.0)))))), mix(float(_GLF_FUZZED((false ? 538.907 : 6386.4634))), float(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0, 0.0, sqrt(1.0)), transpose(transpose(mat3x4(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0, 0.0, sqrt(1.0)))))), (true ? _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0, 0.0, sqrt(1.0)), transpose(transpose(mat3x4(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, sqrt(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6784.1050)), bool(false)))))), 0.0, 0.0, 0.0, sqrt(1.0)))))), (float(_GLF_IDENTITY(mat3x4(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0, 0.0, sqrt(1.0)), transpose(transpose(mat3x4(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0, 0.0, sqrt(1.0))))))) + 0.0) : _GLF_FUZZED(0.3)))), bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)))))), _GLF_IDENTITY(float(mat2x3(1.0, length(0.0), 1.0, _GLF_IDENTITY(sin(0.0), clamp(_GLF_IDENTITY(sin(0.0), clamp(sin(0.0), _GLF_IDENTITY(sin(0.0), (sin(0.0)) + 0.0), sin(0.0))), _GLF_IDENTITY(sin(0.0), float(mat4x3(sin(0.0), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(sin(0.0), mix(float(_GLF_FUZZED(5429.4146)), float(sin(0.0)), bool(true))))), 1.0, 0.0)), mix(float(float(mat2x3(1.0, length(0.0), 1.0, sin(_GLF_IDENTITY(0.0, min(0.0, 0.0))), 1.0, 0.0))), float(_GLF_FUZZED(-95.07)), _GLF_IDENTITY(bool(false), ! (! (bool(false))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-3.3), (_GLF_FUZZED(-3.3)) / 1.0)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))), _GLF_IDENTITY(float(mat2x3(1.0, _GLF_IDENTITY(length(0.0), (false ? _GLF_FUZZED(-884.356) : length(0.0))), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(8.7, min(8.7, _GLF_IDENTITY(8.7, float(mat4(8.7, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, exp(0.0), abs(1.0)))))))), max(float(_GLF_FUZZED(8.7)), float(_GLF_FUZZED(8.7)))), float(1.0), bool(true))) : _GLF_FUZZED(-3232.1963))), sin(0.0), 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-80.00) : 0.0)))), mix(_GLF_IDENTITY(float(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0))), (true ? float(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0))) : _GLF_FUZZED(90.16))), float(_GLF_FUZZED(-95.07)), bool(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, length(0.0), 1.0, _GLF_IDENTITY(sin(0.0), (sin(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))))))) / _GLF_ONE(1.0, injectionSwitch.y)), 1.0, 0.0)), mix(float(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0))), _GLF_IDENTITY(float(_GLF_FUZZED(-95.07)), mix(float(_GLF_FUZZED(-62.36)), float(float(_GLF_FUZZED(-95.07))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bool(false), (bool(false)) && true)))), _GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(1.0, (1.0) - 0.0), length(0.0), 1.0, sin(0.0), 1.0, 0.0)), mix(float(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0))), float(_GLF_FUZZED(-95.07)), bool(false)))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0)), mix(float(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0))), float(_GLF_FUZZED(-95.07)), bool(false))))), float(mat4(_GLF_IDENTITY(max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, length(0.0), 1.0, sin(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-385.331)), float(0.0), bool(true))), 0.0, 0.0))), 1.0, 0.0)), mix(float(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0))), float(_GLF_FUZZED(-95.07)), bool(false)))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0)), mix(float(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, _GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)))))), float(_GLF_FUZZED(-95.07)), bool(false))))), max(max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0)), mix(float(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0))), float(_GLF_FUZZED(-95.07)), bool(false)))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0)), mix(float(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0))), float(_GLF_FUZZED(-95.07)), bool(false))))), max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0)), mix(float(float(mat2x3(1.0, _GLF_IDENTITY(length(0.0), min(length(0.0), length(0.0))), 1.0, sin(0.0), 1.0, 0.0))), float(_GLF_FUZZED(-95.07)), bool(false)))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0)), mix(float(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0))), float(_GLF_FUZZED(-95.07)), bool(false))))))), 1.0, 1.0, 0.0, 0.0, determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, tan(0.0), 1.0, 1.0, 1.0, 1.0, abs(0.0)))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(1.0, (1.0) - 0.0), length(0.0), 1.0, sin(0.0), 1.0, 0.0)), mix(float(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0))), float(_GLF_FUZZED(-95.07)), bool(false)))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0)), mix(float(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0))), float(_GLF_FUZZED(-95.07)), bool(false))))), float(mat4(_GLF_IDENTITY(max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, length(0.0), 1.0, sin(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-385.331)), float(0.0), bool(true))), 0.0, 0.0))), 1.0, 0.0)), mix(float(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0))), float(_GLF_FUZZED(-95.07)), bool(false)))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0)), mix(float(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, _GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)))))), float(_GLF_FUZZED(-95.07)), bool(false))))), max(max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0)), mix(float(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0))), float(_GLF_FUZZED(-95.07)), bool(false)))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0)), mix(float(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0))), float(_GLF_FUZZED(-95.07)), bool(false))))), max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0)), mix(float(float(mat2x3(1.0, _GLF_IDENTITY(length(0.0), min(length(0.0), length(0.0))), 1.0, sin(0.0), 1.0, 0.0))), float(_GLF_FUZZED(-95.07)), bool(false)))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0)), mix(float(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0))), float(_GLF_FUZZED(-95.07)), bool(false))))))), 1.0, 1.0, 0.0, 0.0, determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, tan(0.0), 1.0, 1.0, 1.0, 1.0, abs(0.0)))), max(_GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(1.0, (1.0) - 0.0), length(0.0), 1.0, sin(0.0), 1.0, 0.0)), mix(float(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0))), float(_GLF_FUZZED(-95.07)), bool(false)))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0)), mix(float(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0))), float(_GLF_FUZZED(-95.07)), bool(false))))), float(mat4(_GLF_IDENTITY(max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, length(0.0), 1.0, sin(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-385.331)), float(0.0), bool(true))), 0.0, 0.0))), 1.0, 0.0)), mix(float(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0))), float(_GLF_FUZZED(-95.07)), bool(false)))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0)), mix(float(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, _GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)))))), float(_GLF_FUZZED(-95.07)), bool(false))))), max(max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0)), mix(float(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0))), float(_GLF_FUZZED(-95.07)), bool(false)))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0)), mix(float(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0))), float(_GLF_FUZZED(-95.07)), bool(false))))), max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0)), mix(float(float(mat2x3(1.0, _GLF_IDENTITY(length(0.0), min(length(0.0), length(0.0))), 1.0, sin(0.0), 1.0, 0.0))), float(_GLF_FUZZED(-95.07)), bool(false)))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0)), mix(float(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0))), float(_GLF_FUZZED(-95.07)), bool(false))))))), 1.0, 1.0, 0.0, 0.0, determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, tan(0.0), 1.0, 1.0, 1.0, 1.0, abs(0.0)))), 0.0 + (_GLF_IDENTITY(max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(1.0, (1.0) - 0.0), length(0.0), 1.0, sin(0.0), 1.0, 0.0)), mix(float(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0))), float(_GLF_FUZZED(-95.07)), bool(false)))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0)), mix(float(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0))), float(_GLF_FUZZED(-95.07)), bool(false))))), float(mat4(_GLF_IDENTITY(max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, length(0.0), 1.0, sin(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-385.331)), float(0.0), bool(true))), 0.0, 0.0))), 1.0, 0.0)), mix(float(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0))), float(_GLF_FUZZED(-95.07)), bool(false)))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0)), mix(float(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, _GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)))))), float(_GLF_FUZZED(-95.07)), bool(false))))), max(max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0)), mix(float(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0))), float(_GLF_FUZZED(-95.07)), bool(false)))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0)), mix(float(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0))), float(_GLF_FUZZED(-95.07)), bool(false))))), max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0)), mix(float(float(mat2x3(1.0, _GLF_IDENTITY(length(0.0), min(length(0.0), length(0.0))), 1.0, sin(0.0), 1.0, 0.0))), float(_GLF_FUZZED(-95.07)), bool(false)))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0)), mix(float(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0))), float(_GLF_FUZZED(-95.07)), bool(false))))))), 1.0, 1.0, 0.0, 0.0, determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, tan(0.0), 1.0, 1.0, 1.0, 1.0, abs(0.0)))))), _GLF_IDENTITY(max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(1.0, (1.0) - 0.0), length(0.0), 1.0, sin(0.0), 1.0, 0.0)), mix(float(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0))), float(_GLF_FUZZED(-95.07)), bool(false)))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0)), mix(float(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0))), float(_GLF_FUZZED(-95.07)), bool(false))))), float(mat4(_GLF_IDENTITY(max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, length(0.0), 1.0, sin(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-385.331)), float(0.0), bool(true))), 0.0, 0.0))), 1.0, 0.0)), mix(float(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0))), float(_GLF_FUZZED(-95.07)), bool(false)))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0)), mix(float(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, _GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)))))), float(_GLF_FUZZED(-95.07)), bool(false))))), max(max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0)), mix(float(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0))), float(_GLF_FUZZED(-95.07)), bool(false)))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0)), mix(float(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0))), float(_GLF_FUZZED(-95.07)), bool(false))))), max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0)), mix(float(float(mat2x3(1.0, _GLF_IDENTITY(length(0.0), min(length(0.0), length(0.0))), 1.0, sin(0.0), 1.0, 0.0))), float(_GLF_FUZZED(-95.07)), bool(false)))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0)), mix(float(float(mat2x3(1.0, length(0.0), 1.0, sin(0.0), 1.0, 0.0))), float(_GLF_FUZZED(-95.07)), bool(false))))))), 1.0, 1.0, 0.0, 0.0, determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, tan(0.0), 1.0, 1.0, 1.0, 1.0, abs(0.0))))))), float(_GLF_FUZZED(9.9)), bool(false)))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, _GLF_IDENTITY(length(0.0), max(length(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) * 1.0)) / 1.0)), _GLF_IDENTITY(length(0.0), max(_GLF_IDENTITY(length(0.0), mix(float(length(0.0)), float(_GLF_FUZZED(3.4)), bool(false))), length(0.0))))), 1.0, sin(0.0), 1.0, 0.0)), mix(float(float(mat2x3(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), length(0.0), 1.0, sin(0.0), 1.0, 0.0))), float(_GLF_FUZZED(-95.07)), bool(false))))))) * 1.0)), _GLF_struct_13(mat4x2(_GLF_IDENTITY(1.0, max(1.0, 1.0)))), _GLF_struct_16(_GLF_struct_14(mat2(1.0), mat3x4(1.0), vec3(1.0), 1u, mat3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), mix(float(_GLF_FUZZED(-99.64)), float(1.0), bool(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, true && (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), false || (bool(bvec3(_GLF_IDENTITY(true, true && (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, true && (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), false || (bool(bvec3(_GLF_IDENTITY(true, true && (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))))))), false || (! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, true && (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), false || (bool(bvec3(_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), bool(bool((true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))) || false))))), bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, true && (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), false || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, true && (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, true && (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), true)))))))))))))))))))))), ivec2(1), _GLF_struct_15(true, bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) && true), true, true, true))), (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) && true), true, true, _GLF_IDENTITY(true, true && (true)))))) && true)), mat3x4(_GLF_IDENTITY(1.0, float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(6.2, mix(float(6.2), float(_GLF_FUZZED(-8.2)), bool(false)))) : _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) / 1.0, min((1.0) / 1.0, (1.0) / 1.0))))), 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0)), abs(0.0), 0.0, _GLF_IDENTITY(1.0, (1.0) * abs(1.0)), 1.0, 0.0, 0.0, 1.0)))), ivec4(_GLF_IDENTITY(1, 1 * (1))))), atomicLoad(buf[virtual_gid], 4, 64, 0));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(float(1.0), clamp(float(1.0), float(1.0), float(1.0))))), _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, sin(0.0), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(_GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), (_GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), mix(vec2(_GLF_FUZZED(-3609.9910), _GLF_FUZZED(-38.34)), vec2((vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))[0], (vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))[1]), bvec2(true, true)))) / vec2(1.0, 1.0))), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, sin(0.0), 1.0), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec4(0.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(vec4(0.3, -33.50, -419.751, -91.58)))))), 0.0, 1.0, 0.0, 0.0))).y))))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, float(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), float(vec3(min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, float(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), 0.0, 1.0)))) < injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
           if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), max(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)))), (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) | (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) | (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))), ((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) | (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) + 1 < subgroup_size)
            {
             int i = 0;
             if(_GLF_DEAD(false))
              return;
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * _GLF_IDENTITY((injectionSwitch), (true ? _GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch))) : _GLF_FUZZED(vec2(-156.346, -7.2))))))), injectionSwitch)).x > injectionSwitch.y))))
                {
                }
               else
                {
                 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_WRAPPED_IF_TRUE(true))))
                  {
                   atomicStore(checker[virtual_gid], _GLF_struct_replacement_17.read, 4, 64, 4);
                   if(_GLF_DEAD(false))
                    return;
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_DEAD(false))
                      return;
                    }
                   else
                    {
                    }
                  }
                 else
                  {
                  }
                }
              }
             else
              {
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             atomicStore(checker[virtual_gid], _GLF_struct_replacement_17.read, _GLF_IDENTITY(4, (4) - _GLF_IDENTITY(0, _GLF_IDENTITY((true ? _GLF_IDENTITY(0, int(ivec2(0, 1))) : _GLF_FUZZED(sign(73356))), (_GLF_IDENTITY((true ? _GLF_IDENTITY(0, int(ivec2(0, _GLF_IDENTITY(1, min(1, 1))))) : _GLF_FUZZED(sign(73356))), ((true ? _GLF_IDENTITY(0, int(ivec2(0, 1))) : _GLF_FUZZED(sign(73356)))) * 1)) >> 0))), 64, 4);
            }
          }
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - length(vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (max(injectionSwitch.x, injectionSwitch.x)) * 1.0)) > injectionSwitch.y)), false, true, true)))))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1)))))); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              break;
             return;
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             return;
            }
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               return;
              }
             if(_GLF_DEAD(false))
              return;
            }
           else
            {
            }
          }
         else
          {
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(false))
            continue;
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
    return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
