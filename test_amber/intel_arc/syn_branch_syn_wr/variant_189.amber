#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_14 {
 uvec4 _f0;
 uint read;
} ;

struct _GLF_struct_15 {
 uvec2 _f0;
 ivec4 _f1;
 _GLF_struct_14 _f2;
} ;

struct _GLF_struct_11 {
 vec4 _f0;
 ivec2 _f1;
 vec2 _f2;
 bvec3 _f3;
} ;

struct _GLF_struct_10 {
 int _f0;
 float _f1;
 uvec3 _f2;
 mat2x3 _f3;
 ivec2 _f4;
} ;

struct _GLF_struct_9 {
 mat2x4 _f0;
} ;

struct _GLF_struct_8 {
 bvec4 _f0;
 ivec3 _f1;
} ;

struct _GLF_struct_7 {
 mat4 _f0;
 ivec3 _f1;
} ;

struct _GLF_struct_12 {
 _GLF_struct_7 _f0;
 bvec4 _f1;
 _GLF_struct_8 _f2;
 _GLF_struct_9 _f3;
 _GLF_struct_10 _f4;
 ivec4 _f5;
 _GLF_struct_11 _f6;
} ;

struct _GLF_struct_13 {
 bvec4 _f0;
 float _f1;
 uint subgroup_size;
 mat4x3 _f2;
 _GLF_struct_12 _f3;
} ;

struct _GLF_struct_4 {
 uvec2 _f0;
} ;

struct _GLF_struct_3 {
 bvec3 _f0;
 int _f1;
 mat3x2 _f2;
} ;

struct _GLF_struct_2 {
 uint _f0;
 uint _f1;
 bool _f2;
} ;

struct _GLF_struct_5 {
 float _f0;
 _GLF_struct_2 _f1;
 _GLF_struct_3 _f2;
 _GLF_struct_4 _f3;
 uvec3 _f4;
 mat2x3 _f5;
} ;

struct _GLF_struct_0 {
 vec2 _f0;
 mat3 _f1;
} ;

struct _GLF_struct_1 {
 uint subgroup_base;
 mat2x3 _f0;
 mat4 _f1;
 mat4 _f2;
 mat2x3 _f3;
 _GLF_struct_0 _f4;
} ;

struct _GLF_struct_6 {
 _GLF_struct_1 _f0;
 _GLF_struct_5 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 _GLF_struct_13 _GLF_struct_replacement_13 = _GLF_struct_13(bvec4(true), 1.0, gl_SubgroupSize, mat4x3(1.0), _GLF_struct_12(_GLF_struct_7(mat4(1.0), ivec3(1)), bvec4(true), _GLF_struct_8(bvec4(true), ivec3(1)), _GLF_struct_9(mat2x4(1.0)), _GLF_struct_10(1, 1.0, uvec3(1u), mat2x3(1.0), ivec2(_GLF_IDENTITY(1, int(int(1))))), _GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (1))) ^ 0)), ivec4(0, 0, 0, _GLF_IDENTITY(0, (0) - 0)) ^ (ivec4(1))), _GLF_struct_11(_GLF_IDENTITY(vec4(1.0), mix(vec4((vec4(1.0))[0], _GLF_FUZZED(-61.65), _GLF_FUZZED((-766.114 * -47.19)), (vec4(1.0))[3]), vec4(_GLF_FUZZED(-9.9), (vec4(1.0))[1], (vec4(1.0))[2], _GLF_FUZZED(-9.2)), bvec4(false, true, true, false))), ivec2(1), vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bvec3(true))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (uvec3(53430u, 157258u, 4678u) & uvec3(0u, 0u, 0u)) ^ (gl_NumWorkGroups)).x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(mat4x2(5.7, 81.27, -7.1, 61.62, -553.447, -1.1, 1.5, 5661.0466)[1]) : injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, (false) || false)))))))), ! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), false || _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-768.682), _GLF_FUZZED(9061.6427)), bvec2(false, false))).y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))), ! (! ((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-768.682), _GLF_FUZZED(9061.6427)), bvec2(false, false))).y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))), false || (false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))))))))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), false || _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-768.682), _GLF_FUZZED(9061.6427)), bvec2(false, false))).y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))), ! (! ((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-768.682), _GLF_FUZZED(9061.6427)), bvec2(false, false))).y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))), false || (false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))))))))))), ((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), false || _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-768.682), _GLF_FUZZED(9061.6427)), bvec2(false, false))).y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))), ! (! ((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-768.682), _GLF_FUZZED(9061.6427)), bvec2(false, false))).y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))), false || (false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))))))))))))))) || false)) || false), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), false || _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-768.682), _GLF_FUZZED(9061.6427)), bvec2(false, false))).y), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(6.1) : _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)))))), false)))), ! (! ((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-768.682), _GLF_FUZZED(9061.6427)), bvec2(false, false))).y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))), false || (false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, false)))))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat3x2(-837.229, 1.9, -9.1, -6.2, -250.413, -4666.7910)) : mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))), max(vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat3x2(-837.229, 1.9, -9.1, -6.2, -250.413, -4666.7910)) : mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))), vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat3x2(-837.229, 1.9, -9.1, -6.2, -250.413, -4666.7910)) : mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0))))))).y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), false || _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-768.682), _GLF_FUZZED(9061.6427)), bvec2(false, false))).y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))), ! (! ((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-768.682), _GLF_FUZZED(9061.6427)), bvec2(false, false))).y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))), false || (false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), false || _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-768.682), _GLF_FUZZED(9061.6427)), bvec2(false, false))).y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))), ! (! ((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-768.682), _GLF_FUZZED(9061.6427)), bvec2(false, false))).y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))), false || (false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), false || _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-768.682), _GLF_FUZZED(9061.6427)), bvec2(false, false))), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-768.682), _GLF_FUZZED(9061.6427)), bvec2(false, false)))), (true ? mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-768.682), _GLF_FUZZED(9061.6427)), bvec2(false, false)))) : _GLF_FUZZED(vec2(-1793.3882, -91.67))))).y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))), ! (! ((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-768.682), _GLF_FUZZED(9061.6427)), bvec2(_GLF_IDENTITY(false, false || (false)), false))).y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))))))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)) || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), false)))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), _GLF_IDENTITY(bool(bvec4(bool(bvec4(false, false, false, false)), true, true, true)), (bool(bvec4(bool(bvec4(false, false, false, false)), true, true, true))) || false))) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7332.0117)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))))))))))))))))))))), ! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), false || _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-768.682), _GLF_FUZZED(9061.6427)), bvec2(false, false))).y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))), ! (! ((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-768.682), _GLF_FUZZED(9061.6427)), bvec2(false, false))).y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))), false || (false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), false || _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-768.682), _GLF_FUZZED(9061.6427)), bvec2(false, false))).y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))), ! (! ((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-768.682), _GLF_FUZZED(9061.6427)), bvec2(false, false))).y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))), false || (false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), false || _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-768.682), _GLF_FUZZED(9061.6427)), bvec2(false, false))), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-768.682), _GLF_FUZZED(9061.6427)), bvec2(false, false)))), (true ? mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-768.682), _GLF_FUZZED(9061.6427)), bvec2(false, false)))) : _GLF_FUZZED(vec2(-1793.3882, -91.67))))).y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))), ! (! ((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-768.682), _GLF_FUZZED(9061.6427)), bvec2(_GLF_IDENTITY(false, false || (false)), false))).y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))))))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)) || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), false)))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), _GLF_IDENTITY(bool(bvec4(bool(bvec4(false, false, false, false)), true, true, true)), (bool(bvec4(bool(bvec4(false, false, false, false)), true, true, true))) || false))) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7332.0117)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))))))))))))))))))))))))))), ((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), false || _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-768.682), _GLF_FUZZED(9061.6427)), bvec2(false, false))).y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))), ! (! ((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), vec2(_GLF_FUZZED(-768.682), _GLF_FUZZED(9061.6427)), bvec2(false, false))).y), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec2(injectionSwitch.x, 1.0)), (float(vec2(injectionSwitch.x, 1.0))) - 0.0)) > injectionSwitch.y), false)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false)))), false || (false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * abs(1.0))) + log(1.0))), false)))))))))))))))) || false)) || false))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(_GLF_struct_1(subgroup_id * _GLF_struct_replacement_13.subgroup_size, mat2x3(1.0), mat4(1.0), _GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-509.173)), bool(false))), _GLF_ONE(1.0, injectionSwitch.y), round(length(normalize(1.0))), 1.0, 1.0, sqrt(1.0), 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(1.0, tan(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), min(vec4(1.0, tan(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec4(1.0, tan(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))), vec4(1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, tan(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec4(1.0, 0.0, 0.0, 0.0)), min(dot(vec4(1.0, tan(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec4(1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, tan(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec4(1.0, 0.0, 0.0, 0.0)), max(_GLF_IDENTITY(dot(vec4(1.0, tan(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec4(1.0, 0.0, 0.0, 0.0)), max(dot(vec4(1.0, tan(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, tan(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec4(1.0, 0.0, 0.0, 0.0)))), dot(vec4(1.0, tan(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec4(1.0, 0.0, 0.0, 0.0)))))))), (mat3x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-509.173)), bool(false))), _GLF_ONE(1.0, injectionSwitch.y), round(length(normalize(1.0))), 1.0, 1.0, sqrt(1.0), 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, tan(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, tan(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec4(1.0, 0.0, 0.0, 0.0))))) + mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), (_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-509.173)), bool(false))), _GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), injectionSwitch.y), round(length(normalize(1.0))), 1.0, 1.0, sqrt(1.0), 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, tan(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, tan(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec4(1.0, 0.0, 0.0, 0.0)))), (mat3x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-509.173)), bool(false))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(9.6)), bool(false))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0))), round(length(normalize(1.0))), 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), sqrt(1.0), 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, tan(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, tan(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec4(1.0, 0.0, 0.0, 0.0))), float(vec3(_GLF_IDENTITY(dot(vec4(1.0, tan(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, tan(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 1.0))))) + mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), transpose(transpose(mat4(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-509.173)), bool(false))), _GLF_ONE(1.0, injectionSwitch.y), round(length(normalize(1.0))), 1.0, 1.0, sqrt(1.0), 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, tan(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, tan(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec4(1.0, 0.0, 0.0, 0.0)))), (mat3x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-509.173)), bool(false))), _GLF_ONE(1.0, injectionSwitch.y), round(length(normalize(1.0))), 1.0, 1.0, sqrt(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(4948.7041)))), 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, tan(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec4(1.0, 0.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec4(1.0, tan(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), min(vec4(1.0, tan(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec4(1.0, tan(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))), vec4(1.0, 0.0, 0.0, 0.0))))) + mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))))) * _GLF_IDENTITY(mat4(1.0), (true ? _GLF_IDENTITY(mat4(1.0), (mat4(1.0)) * mat4(1.0)) : _GLF_FUZZED(mat4(-0.5, 2.1, -19.02, -4480.9888, 89.02, 8634.1013, -7250.6633, 5951.2702, 7.7, -1163.5993, -22.89, 2.7, 0.4, -6.7, 578.140, 4.5))))), mat2x3(1.0), _GLF_struct_0(vec2(1.0), mat3(1.0))), _GLF_struct_5(1.0, _GLF_struct_2(1u, _GLF_IDENTITY(1u, 1u * (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(workgroup_size))))), true), _GLF_struct_3(bvec3(true), 1, mat3x2(1.0)), _GLF_struct_4(uvec2(1u)), uvec3(1u), mat2x3(1.0)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))
  return;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_6._f0.subgroup_base, ~ (~ (_GLF_struct_replacement_6._f0.subgroup_base))) + _GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) : _GLF_FUZZED(subgroup_id)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint next_virtual_gid = workgroup_base + _GLF_struct_replacement_6._f0.subgroup_base + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), min(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) / 1)))), 0u | ((subgroup_local_id + 1))), (subgroup_local_id + 1))) % _GLF_struct_replacement_13.subgroup_size, _GLF_IDENTITY(0u, max(0u, 0u)) + (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1)) ^ 0u)) / 1u) % _GLF_IDENTITY(_GLF_struct_replacement_13.subgroup_size, (_GLF_struct_replacement_13.subgroup_size) << 0u))));
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_15 _GLF_struct_replacement_15 = _GLF_struct_15(uvec2(1u), ivec4(1), _GLF_struct_14(uvec4(1u), 0));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(66126) : 4)), 4, _GLF_IDENTITY(_GLF_IDENTITY(4, int(int(4))), ~ (~ (_GLF_IDENTITY(4, int(int(4)))))))), 64, 4);
 if((subgroup_local_id % 2) == 0)
  {
   _GLF_IDENTITY(_GLF_struct_replacement_15._f2.read = atomicLoad(buf[virtual_gid], 4, 64, 2), (_GLF_struct_replacement_15._f2.read = atomicLoad(buf[virtual_gid], 4, 64, 2)) - uint(_GLF_ZERO(0.0, injectionSwitch.x)));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   _GLF_struct_replacement_15._f2.read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, (64) | 0))), 64)), (true ? _GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, min(64, _GLF_IDENTITY(_GLF_IDENTITY(64, (64) | (64)), (64) | 0))), 64)) : _GLF_FUZZED(94006))), 2);
  }
 subgroupBarrier();
 atomicStore(checker[virtual_gid], _GLF_struct_replacement_15._f2.read, 4, 64, 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
