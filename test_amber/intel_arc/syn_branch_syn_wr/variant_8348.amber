#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   do
    {
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      break;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter)) != (1 ^ int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))), (_GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter)) != (1 ^ int(_GLF_ZERO(_GLF_IDENTITY(0.0, 0.0 + (0.0)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))))
      {
       if(_GLF_DEAD(false))
        break;
       return;
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    break;
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), mix(float(injectionSwitch.y), float(_GLF_FUZZED(1794.4983)), bool(false)))))))
      break;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           return;
          }
         if(_GLF_DEAD(false))
          break;
        }
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)) > int(_GLF_ZERO(0.0, injectionSwitch.x))) && true)); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(false, true && (false)))))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / sqrt(1.0)), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), false || ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / sqrt(1.0)), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true && (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false, false)))) || false)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, false || (true)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true && (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false, false)))) || false)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, false || (true)))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true && (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)))))))))), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false, false)))), true && ((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)))))))))), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false, false)))))) || false)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, false || (true))))))) && true)) || false))
          {
           if(_GLF_DEAD(false))
            return;
           break;
          }
         do
          {
           do
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-632.902) : injectionSwitch.y)), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))))))))))))))), (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-6547.1748))))) || _GLF_IDENTITY((_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), (_GLF_IDENTITY((! (true)), ! (! ((! (true)))))) || false))), (_GLF_IDENTITY((_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), (_GLF_IDENTITY((! (true)), ! (! ((! (true)))))) || false))), ((_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), (_GLF_IDENTITY((! (true)), ! (! ((! (true)))))) || false)))) || false)) && true))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))), true, _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x < injectionSwitch.y)))))))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat2x3(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(-9689.9728), _GLF_FUZZED(-52.33)), vec2((mat2(_GLF_IDENTITY(1.0, (1.0) * round(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(-8.0))))), (true ? normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(-8.0))))) : _GLF_FUZZED(mix(vec3(-4308.1515, -258.379, 8.8), vec3(-297.942, 4019.1502, -28.06), vec3(-0.0, -0.3, -557.235))))))))) * (injectionSwitch))[0], (mat2(1.0) * _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(((injectionSwitch)) - vec2(0.0, 0.0), (((injectionSwitch)) - vec2(0.0, 0.0)) - vec2(0.0, 0.0)))) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))[1]), bvec2(true, true))), 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))), 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-2.3)), bool(false))), 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0, 0.0))), (false ? _GLF_FUZZED(-7.9) : _GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(1.0), max(float(1.0), _GLF_IDENTITY(float(1.0), min(float(1.0), float(1.0))))), float(_GLF_FUZZED(-2.3)), bool(false))), 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0, 0.0)))))) - 0.0)))), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat2x3(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(-9689.9728), _GLF_FUZZED(-52.33)), vec2((mat2(_GLF_IDENTITY(1.0, (1.0) * round(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(-8.0))))), (true ? normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(-8.0))))) : _GLF_FUZZED(mix(vec3(-4308.1515, -258.379, 8.8), vec3(-297.942, 4019.1502, -28.06), vec3(-0.0, -0.3, -557.235))))))))) * (injectionSwitch))[0], (mat2(1.0) * _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch)) - vec2(0.0, 0.0), (((injectionSwitch)) - vec2(0.0, 0.0)) - vec2(0.0, 0.0)), mat2(1.0) * (_GLF_IDENTITY(((injectionSwitch)) - vec2(0.0, 0.0), (((injectionSwitch)) - vec2(0.0, 0.0)) - vec2(0.0, 0.0)))))) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))[1]), bvec2(true, true))), 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), (_GLF_IDENTITY(0.0, (0.0) * 1.0)) * 1.0) : _GLF_FUZZED(inversesqrt(normalize(-7.4))))))), 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-2.3)), bool(false))), 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0, 0.0))), (false ? _GLF_FUZZED(-7.9) : _GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(1.0), max(float(1.0), _GLF_IDENTITY(float(1.0), min(float(1.0), _GLF_IDENTITY(float(1.0), float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(float(1.0), max(float(1.0), float(1.0))), 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)))), transpose(transpose(mat3x2(_GLF_IDENTITY(float(1.0), max(float(1.0), float(1.0))), 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))))))))))))), float(_GLF_FUZZED(-2.3)), bool(false))), 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), mix(float(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), float(_GLF_FUZZED(35.28)), bool(_GLF_IDENTITY(false, ! (! (false)))))), 1.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(4574.3025))))))))) - 0.0))))) / vec2(1.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) + vec2(0.0, 0.0))) / vec2(1.0, 1.0))).y))) || false)))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec4((! (false)), false, false, false)), false || (bool(bvec4((! (false)), false, false, false))))))))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       for(int _injected_loop_counter = _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), 0 ^ (_GLF_IDENTITY(1, (1) | 0))) & _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1) - 0, clamp((1) - 0, _GLF_IDENTITY((1) - 0, ((1) - 0) >> 0), (1) - 0)), ((1) - 0) ^ 0))), clamp((1 & _GLF_IDENTITY(1, (1) - 0)), _GLF_IDENTITY((_GLF_IDENTITY(1 & _GLF_IDENTITY(1, (1) - 0), ~ (_GLF_IDENTITY(~ (1 & _GLF_IDENTITY(1, (1) - 0)), 1 * (_GLF_IDENTITY(~ (1 & _GLF_IDENTITY(1, (1) - 0)), (false ? _GLF_FUZZED(68728) : ~ (1 & _GLF_IDENTITY(1, (1) - 0))))))))), int(ivec4(_GLF_IDENTITY((1 & _GLF_IDENTITY(1, (1) - _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (0) | 0))))))))), ((1 & _GLF_IDENTITY(1, (1) - _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (0) - 0))))))) >> 0), 1, 0, 1))), _GLF_IDENTITY((1 & _GLF_IDENTITY(1, (1) - 0)), clamp((1 & _GLF_IDENTITY(1, (1) - 0)), (1 & _GLF_IDENTITY(1, (1) - 0)), (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) / 1), 1)) & _GLF_IDENTITY(1, (1) - 0)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         return;
        }
      }
     else
      {
      }
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       return;
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((gl_NumWorkGroups.x) - 0u, (_GLF_IDENTITY((gl_NumWorkGroups.x) - 0u, ((gl_NumWorkGroups.x) - 0u) | ((gl_NumWorkGroups.x) - 0u))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))));
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - uint(_GLF_ZERO(0.0, injectionSwitch.x)));
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(160793u, _GLF_IDENTITY(_GLF_IDENTITY(46673u, (46673u) / (0u ^ 1u)), max(_GLF_IDENTITY(46673u, (46673u) / (0u ^ 1u)), _GLF_IDENTITY(46673u, (46673u) / (0u ^ 1u)))), 188105u)) : gl_WorkGroupID))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(160793u, 46673u, _GLF_IDENTITY(188105u, min(188105u, 188105u)))) : gl_WorkGroupID))), ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(160793u, 46673u, 188105u)) : gl_WorkGroupID)), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(160793u, 46673u, 188105u)) : gl_WorkGroupID)))))) ^ _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, 0u | (0u)), 0u, 0u), uvec3(1u, 1u, 1u) * (uvec3(_GLF_IDENTITY(0u, 0u | (0u)), 0u, 0u)))))) | (gl_WorkGroupID)).x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint subgroup_base = subgroup_id * subgroup_size;
 uint virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), ~ (~ ((subgroup_local_id)))) ^ 0u);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(false, (false) && true) || (! (bool(bool(_GLF_DEAD(false))))))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     return;
    }
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : workgroup_base)) + subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))), (_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((false), ((false)) || false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_IDENTITY(bool(bvec3(bool(bvec4(_GLF_IDENTITY((false), ((false)) || false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, true)), (bool(bvec3(bool(bvec4(_GLF_IDENTITY((false), ((false)) || false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, true))) || false))) || false)), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((false), ((false)) || false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_IDENTITY(bool(bvec3(bool(bvec4(_GLF_IDENTITY((false), ((false)) || false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, true)), (bool(bvec3(bool(bvec4(_GLF_IDENTITY((false), ((false)) || false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, true))) || false))) || false)))))))) && true), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))), (_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((false), ((false)) || false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_IDENTITY(bool(bvec3(bool(bvec4(_GLF_IDENTITY((false), ((false)) || false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, true)), (bool(bvec3(bool(bvec4(_GLF_IDENTITY((false), ((false)) || false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, true))) || false))) || false)), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((false), ((false)) || false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_IDENTITY(bool(bvec3(bool(bvec4(_GLF_IDENTITY((false), ((false)) || false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, true)), (bool(bvec3(bool(bvec4(_GLF_IDENTITY((false), ((false)) || false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, true))) || false))) || false)))))))) && true), false, true, true))))
  {
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        continue;
       return;
      }
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true), _GLF_IDENTITY(bool(bool(true)), false || (bool(bool(_GLF_IDENTITY(true, false || _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), false))))))), ((_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), false)))))))) || false))))))), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, 1.0, tan(0.0), 0.0, 1.0)), clamp(float(mat3x2(injectionSwitch.y, 1.0, 1.0, tan(0.0), 0.0, 1.0)), float(mat3x2(injectionSwitch.y, 1.0, 1.0, tan(0.0), 0.0, 1.0)), float(mat3x2(injectionSwitch.y, 1.0, 1.0, tan(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(1.0, (1.0) / 1.0)))))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)), mix(vec2(_GLF_FUZZED(5.4), _GLF_FUZZED((true ? (9.3 + 5245.6679) : 120.253))), vec2((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, 1.0, 1.0, tan(0.0), _GLF_IDENTITY(0.0, float(mat2x3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, sqrt(0.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0))), 1.0)), clamp(_GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)), mix(vec2(_GLF_FUZZED(5.4), _GLF_FUZZED((true ? (9.3 + 5245.6679) : 120.253))), vec2((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, 1.0, 1.0, tan(0.0), _GLF_IDENTITY(0.0, float(mat2x3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, sqrt(0.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0))), 1.0)), (true ? float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)), mix(vec2(_GLF_FUZZED(5.4), _GLF_FUZZED((true ? (9.3 + 5245.6679) : 120.253))), vec2((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, 1.0, 1.0, tan(0.0), _GLF_IDENTITY(0.0, float(mat2x3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, sqrt(0.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0))), 1.0)) : _GLF_FUZZED(-135.498))), _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)), mix(vec2(_GLF_FUZZED(5.4), _GLF_FUZZED((true ? (9.3 + 5245.6679) : 120.253))), vec2((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, 1.0, 1.0, tan(0.0), _GLF_IDENTITY(0.0, float(mat2x3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, sqrt(0.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0))), 1.0)), (float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)), mix(vec2(_GLF_FUZZED(5.4), _GLF_FUZZED((true ? (9.3 + 5245.6679) : 120.253))), vec2((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, 1.0, 1.0, tan(0.0), _GLF_IDENTITY(0.0, float(mat2x3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, sqrt(0.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0))), 1.0))) / 1.0), float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)), mix(vec2(_GLF_FUZZED(5.4), _GLF_FUZZED((true ? (9.3 + 5245.6679) : 120.253))), vec2((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, 1.0, 1.0, tan(0.0), _GLF_IDENTITY(0.0, float(mat2x3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, sqrt(0.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0))), 1.0)))))), float(_GLF_FUZZED(753.409)), bool(false)))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), true, false, true))))
        return;
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            continue;
           return;
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1])))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1])))).y)))), false || _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))) && true)), ! (! (! (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))) && true))))))))))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          return;
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             return;
             if(_GLF_DEAD(false))
              return;
            }
           else
            {
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-1.1)))))))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec3(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(-776.655))), 0.0, 0.0))), 0.0, abs(sin(0.0)), 1.0))).x > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec3(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(-776.655))), 0.0, 0.0))), 0.0, abs(sin(0.0)), 1.0))).x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec3(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(-776.655))), 0.0, 0.0))), 0.0, abs(sin(0.0)), 1.0))).x > injectionSwitch.y), false, true, true))))))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), vec2(_GLF_IDENTITY(mat2x4(vec2(vec2(injectionSwitch)), 0.0, 1.0, sqrt(0.0), cos(0.0), 1.0, 0.0), transpose(transpose(mat2x4(vec2(vec2(injectionSwitch)), 0.0, 1.0, sqrt(0.0), cos(0.0), 1.0, 0.0))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))) / vec2(1.0, 1.0)), _GLF_IDENTITY(vec2(vec2(injectionSwitch)), vec2(_GLF_IDENTITY(mat2x4(vec2(vec2(injectionSwitch)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-3003.0899)), bool(false))), sqrt(0.0), cos(0.0), 1.0, 0.0), transpose(transpose(mat2x4(vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), 0.0, 1.0, sqrt(0.0), cos(0.0), 1.0, 0.0))))))))), mix(_GLF_IDENTITY(vec2((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec2(injectionSwitch)), mix(vec2(_GLF_FUZZED(85.56), _GLF_FUZZED(-278.174)), vec2((vec2(vec2(injectionSwitch)))[0], _GLF_IDENTITY((vec2(vec2(injectionSwitch)))[1], (true ? (vec2(vec2(injectionSwitch)))[1] : _GLF_FUZZED(-29.34)))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), vec2(_GLF_IDENTITY(mat2x4(vec2(vec2(injectionSwitch)), 0.0, 1.0, sqrt(0.0), cos(0.0), 1.0, 0.0), transpose(transpose(mat2x4(vec2(vec2(injectionSwitch)), 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), sqrt(0.0), cos(0.0), 1.0, 0.0))))))))))[0], _GLF_FUZZED(69.70)), mat2(1.0) * (vec2((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), vec2(_GLF_IDENTITY(mat2x4(vec2(vec2(injectionSwitch)), 0.0, 1.0, sqrt(0.0), cos(0.0), 1.0, 0.0), transpose(transpose(mat2x4(vec2(vec2(injectionSwitch)), 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), sqrt(0.0), cos(0.0), 1.0, 0.0))))))))))[0], _GLF_FUZZED(69.70)))), vec2(_GLF_FUZZED(8.7), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), 0.0, 1.0, sqrt(0.0), cos(0.0), 1.0, 0.0), transpose(transpose(mat2x4(vec2(vec2(injectionSwitch)), 0.0, 1.0, sqrt(0.0), cos(0.0), 1.0, 0.0))))), vec2(mat2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), 0.0, 1.0, sqrt(0.0), cos(0.0), 1.0, 0.0), transpose(transpose(mat2x4(vec2(vec2(injectionSwitch)), 0.0, 1.0, sqrt(0.0), cos(0.0), 1.0, 0.0))))), min(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), 0.0, 1.0, sqrt(0.0), cos(0.0), 1.0, 0.0), transpose(transpose(mat2x4(vec2(vec2(injectionSwitch)), 0.0, 1.0, sqrt(0.0), cos(0.0), 1.0, 0.0))))), min(vec2(_GLF_IDENTITY(mat2x4(vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), 0.0, 1.0, sqrt(0.0), cos(0.0), 1.0, 0.0), transpose(transpose(mat2x4(vec2(vec2(injectionSwitch)), 0.0, 1.0, sqrt(0.0), cos(0.0), 1.0, 0.0))))), vec2(_GLF_IDENTITY(mat2x4(vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), 0.0, 1.0, sqrt(0.0), cos(0.0), 1.0, 0.0), transpose(transpose(mat2x4(vec2(vec2(injectionSwitch)), 0.0, 1.0, sqrt(0.0), cos(0.0), 1.0, 0.0))))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), 0.0, 1.0, sqrt(0.0), cos(0.0), 1.0, 0.0), transpose(transpose(mat2x4(vec2(vec2(injectionSwitch)), 0.0, 1.0, sqrt(0.0), cos(0.0), 1.0, 0.0))))), min(vec2(_GLF_IDENTITY(mat2x4(vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), 0.0, 1.0, sqrt(0.0), cos(0.0), 1.0, 0.0), transpose(transpose(mat2x4(vec2(vec2(injectionSwitch)), 0.0, 1.0, sqrt(0.0), cos(0.0), 1.0, 0.0))))), vec2(_GLF_IDENTITY(mat2x4(vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), 0.0, 1.0, sqrt(0.0), cos(0.0), 1.0, 0.0), transpose(transpose(mat2x4(vec2(vec2(injectionSwitch)), 0.0, 1.0, sqrt(0.0), cos(0.0), 1.0, 0.0))))))))), exp(tan(0.0)), 1.0))))))))[1]), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) + sqrt(tan(vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED((+ 1.6)))), 0.0)))).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), vec2(1.0, 1.0), vec2(1.0, 1.0))) * (injectionSwitch)), _GLF_IDENTITY(vec2(vec2(injectionSwitch)), vec2(_GLF_IDENTITY(mat2x4(vec2(vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), 0.0, 1.0, sqrt(0.0), _GLF_IDENTITY(cos(0.0), (false ? _GLF_FUZZED(-435.578) : cos(0.0))), 1.0, 0.0), transpose(transpose(mat2x4(vec2(vec2(injectionSwitch)), 0.0, 1.0, sqrt(0.0), cos(0.0), 1.0, 0.0))))))))).x, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(injectionSwitch), min(vec2(injectionSwitch), vec2(injectionSwitch)))), vec2(_GLF_IDENTITY(mat2x4(vec2(vec2(injectionSwitch)), 0.0, 1.0, sqrt(0.0), cos(0.0), 1.0, 0.0), transpose(transpose(mat2x4(vec2(vec2(injectionSwitch)), 0.0, 1.0, sqrt(0.0), cos(0.0), 1.0, 0.0))))))))).x) + 0.0)) - _GLF_ZERO(0.0, injectionSwitch.x)), 1.0 * (injectionSwitch.x)) > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = (_GLF_IDENTITY(0 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(ivec2(int(6), 1))), int(6)), max(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(6), int(6)), 1 * (0 << _GLF_IDENTITY(int(6), int(6)))), 0 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), min(_GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), clamp(_GLF_IDENTITY(int(6), int(6)), _GLF_IDENTITY(int(6), int(6)), _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), int(int(_GLF_IDENTITY(int(6), int(6))))))), _GLF_IDENTITY(int(6), int(6))))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) / 1), min(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY((_injected_loop_counter) / 1, ((_injected_loop_counter) / 1) | ((_injected_loop_counter) / 1))), _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) / 1), 0 | (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) / 1)))))))) != (_GLF_IDENTITY(1 ^ (0 >> _GLF_IDENTITY(int(5), int(5))), (_GLF_IDENTITY(1 ^ (0 >> _GLF_IDENTITY(int(5), int(5))), 0 ^ (1 ^ (0 >> _GLF_IDENTITY(int(5), int(5)))))) | 0))); _injected_loop_counter ++)
          {
           return;
          }
         if(_GLF_DEAD(false))
          return;
        }
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) && true))
        return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bool((_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), vec2(mat2x4(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)))))).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
        return;
      }
    }
   else
    {
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) && true))))
    {
     if(_GLF_DEAD(false))
      return;
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)).y))))
      return;
    }
  }
 uint read = 0;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(8.7, 14.82)))).y)), _GLF_IDENTITY(! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
      return;
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), true))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.1), _GLF_FUZZED(-8854.6899)), _GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), max(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2((injectionSwitch)[0], (injectionSwitch)[1]))), bvec2(true, true))), injectionSwitch)).y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-1.0) : injectionSwitch.x)))) > injectionSwitch.y))) || false)))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0))).y)))))
  return;
 for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_injected_loop_counter != _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))), (_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))).x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) << int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))); _injected_loop_counter --)
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
        {
         if(_GLF_DEAD(false))
          return;
         do
          {
           return;
           if(_GLF_DEAD(false))
            break;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, bool(bvec2(true, false))), false, _GLF_IDENTITY(true, bool(bvec2(true, true))))))))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
          continue;
         continue;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(true)), (bool(bool(_GLF_IDENTITY(true, false || (true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (bool(bool(true))) || false))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))), (bool(bool(true))) || false)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(5.3, 54.64)))).x < injectionSwitch.y))), (bool(bool(true))) || false))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(5.3, 54.64)))).x < injectionSwitch.y))), (bool(bool(true))) || false)))), ! (! (! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)))), (bool(bool(true))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(5.3, 54.64)))).x < injectionSwitch.y))), (bool(bool(true))) || false))))))))), bool(bvec4(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(true)), (bool(_GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), ! (! (_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, false))))))) && true))) && _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(5.3, 54.64)))).x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(5.3, 54.64)))).x < injectionSwitch.y), false, true, true)), ! (! (bool(bvec4((_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(5.3, 54.64)))).x < injectionSwitch.y), false, true, true)))))))), (bool(bool(true))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))), true, false, false))))))))))
        {
         do
          {
           if(_GLF_DEAD(false))
            continue;
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))
              {
               do
                {
                 return;
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
            }
           while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, ! (! (true)))))), true && (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))))), true), false, true)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), true), false, true)))))), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), true), true, false))))));
           if((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (2) / 1), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | _GLF_IDENTITY((subgroup_local_id % 2), max((subgroup_local_id % 2), (subgroup_local_id % 2)))), (22889u & 0u), 0u)))) << 0u), _GLF_IDENTITY((false ? _GLF_FUZZED(virtual_gid) : subgroup_local_id % 2), ((false ? _GLF_FUZZED(virtual_gid) : subgroup_local_id % 2)) ^ 0u)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id))))) / 1u))), subgroup_local_id)) % 2, (subgroup_local_id % 2) | (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) | (_GLF_IDENTITY(uint(6u), uint(6u)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (false ? _GLF_FUZZED(virtual_gid) : subgroup_local_id % 2)), (_GLF_IDENTITY(subgroup_local_id % 2, (false ? _GLF_FUZZED(virtual_gid) : subgroup_local_id % 2))) << 0u), _GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (_GLF_IDENTITY(0u, 0u | (0u)) >> _GLF_IDENTITY(uint(6u), uint(6u)))))), (_GLF_IDENTITY(false, false || (false)) ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), min(_GLF_FUZZED(workgroup_size), _GLF_FUZZED(workgroup_size))) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(102428u) : subgroup_local_id), (true ? _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y)) ? _GLF_FUZZED(102428u) : subgroup_local_id), 0u + ((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))))) - vec2(0.0, 0.0)))).x, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))))) - vec2(0.0, 0.0)))).x : _GLF_FUZZED(-9.5))) > injectionSwitch.y)) ? _GLF_FUZZED(102428u) : subgroup_local_id))) : _GLF_IDENTITY(_GLF_FUZZED(next_virtual_gid), min(_GLF_FUZZED(next_virtual_gid), _GLF_FUZZED(next_virtual_gid)))))))) % 2, min(_GLF_IDENTITY(subgroup_local_id % 2, (false ? _GLF_IDENTITY(_GLF_FUZZED(virtual_gid), (_GLF_IDENTITY(_GLF_FUZZED(virtual_gid), (_GLF_FUZZED(virtual_gid)) >> 0u)) - 0u) : subgroup_local_id % 2)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)) | (subgroup_local_id)) % 2, (subgroup_local_id % 2) | 0u), (_GLF_IDENTITY(subgroup_local_id % 2, max(subgroup_local_id % 2, subgroup_local_id % 2))) | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))))))) / 1u)) == _GLF_IDENTITY(0, (0) - _GLF_IDENTITY(0, (0) - 0)))
            {
             read = atomicLoad(buf[virtual_gid], 4, 64, 2);
            }
           else
            {
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, true))))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))), (! (false)) || false))), bool(bool(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false)))), false))), true, false, false))))))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
                  {
                   if(_GLF_DEAD(false))
                    break;
                   return;
                  }
                 continue;
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))))
                return;
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 return;
                }
               else
                {
                }
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                return;
              }
             for(int _injected_loop_counter = (_GLF_IDENTITY(1 | 1, 1 * (1 | 1))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], uint(uint(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(buf[virtual_gid])), (uint(uint(buf[virtual_gid]))) / 1u), uint(uvec3(uint(_GLF_IDENTITY(uint(buf[virtual_gid]), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(buf[virtual_gid]), 1u * (uint(buf[virtual_gid]))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(uint(buf[virtual_gid]), uint(uvec2(uint(buf[virtual_gid]), 1u)))))) | (uint(buf[virtual_gid])), ((_GLF_IDENTITY(uint(buf[virtual_gid]), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(uint(buf[virtual_gid]), uint(uvec2(uint(buf[virtual_gid]), 1u)))))) | (uint(buf[virtual_gid]))) | _GLF_IDENTITY(0u, (0u) / 1u)))), 1u, 1u))))))), 4, 64, 2);
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   return;
                  }
                 else
                  {
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((false ? -1897.1830 : -40.93))), float(injectionSwitch.y), bool(true)))))))
                  continue;
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
              }
            }
           if(_GLF_DEAD(false))
            return;
          }
         while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false));
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         do
          {
           if(_GLF_DEAD(false))
            return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (false)), (_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), false, true))))) && _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || false), ! (! _GLF_IDENTITY((_GLF_IDENTITY((false), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(false, bool(bvec4(false, false, true, false))) || (bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || ((false)))), (_GLF_IDENTITY((_GLF_IDENTITY((false), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(false, bool(bvec4(false, false, true, false))) || (bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || ((false)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY((false), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(false, bool(bvec4(false, false, true, false))) || (bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || ((false))))), bool(bvec3(! ((_GLF_IDENTITY((false), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(false, bool(bvec4(false, false, true, false))) || (bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || ((false))))), false, false)))))) && true))), true, true))))) || false)))), _GLF_IDENTITY(((! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) && true), false, true))))), false || _GLF_IDENTITY((false), true && ((false)))), _GLF_IDENTITY(true && (false), bool(bool(true && (false))))), (_GLF_IDENTITY(false, true && (false))) || false))))), bool(bvec2(((_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (false)), true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))))), (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false)))))) || false))), bool(bvec4(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (false)), true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))))), (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false)))))) || false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), false))) && true))))));
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), false || _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) || false)) && true)), (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
            return;
           if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 1.0, 1.0, 1.0, abs(0.0), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, abs(determinant(mat2(0.0, 0.0, 0.0, 0.0)))))).y))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 1.0, 1.0, 1.0, abs(0.0), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, abs(determinant(mat2(0.0, 0.0, 0.0, 0.0)))))).y))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 1.0, 1.0, 1.0, abs(0.0), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, exp(0.0), 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, sqrt(1.0), 1.0, 1.0), (true ? mat2(1.0, sqrt(1.0), 1.0, 1.0) : _GLF_FUZZED(mat2(81.31, -7901.8444, -39.03, 5719.9615)))))), 0.0, 1.0, abs(determinant(mat2(0.0, 0.0, 0.0, 0.0)))))).y)))) && true)) || false)))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 1.0, 1.0, 1.0, abs(0.0), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, abs(determinant(mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))))))).y)))))), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 1.0, 1.0, 1.0, abs(0.0), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, abs(determinant(mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))))))).y)))))), true), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 1.0, 1.0, 1.0, abs(0.0), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, abs(determinant(mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))))))).y)))))), true), false, true))), false, false))))), ! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))))))), bool(true))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true)), _GLF_IDENTITY(float(mat3(mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true)), 1.0, tan(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 1.0)), clamp(_GLF_IDENTITY(float(mat3(mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true)), 1.0, tan(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 1.0)), (float(mat3(mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true)), 1.0, tan(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 1.0))) + 0.0), _GLF_IDENTITY(float(mat3(mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true)), 1.0, tan(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 1.0)), min(float(mat3(mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true)), 1.0, tan(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 1.0)), float(mat3(mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true)), 1.0, tan(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 1.0)))), float(mat3(mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true)), 1.0, tan(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-608.791, float(vec2(-608.791, sqrt(1.0)))))), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))), (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), _GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (bool(true)), (! (bool(true))) && true))))) : _GLF_FUZZED(79.34)))))))))), false || (_GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(5.5)), bool(false)))) / 1.0) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))), (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))) : _GLF_FUZZED(79.34)))))))))), ! (! ((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))), mix(float(_GLF_FUZZED(67.63)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true)))), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))), min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))))))), (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))) : _GLF_FUZZED(79.34))))))))))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))), (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))) : _GLF_FUZZED(79.34)))))))))), false || (_GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))), (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))) : _GLF_FUZZED(79.34)))))))))), ! (! ((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))), (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))) : _GLF_FUZZED(79.34))))))))))))))), bool(bool(_GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))), (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))) : _GLF_FUZZED(79.34)))))))))), false || (_GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))), (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))) : _GLF_FUZZED(79.34)))))))))), ! (! ((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))), (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))) : _GLF_FUZZED(79.34))))))))))))))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))), (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))) : _GLF_FUZZED(79.34)))))))))), false || (_GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))), (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))) : _GLF_FUZZED(79.34)))))))))), ! (! ((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))), (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))) : _GLF_FUZZED(79.34))))))))))))))), bool(bool(_GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))), (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))) : _GLF_FUZZED(79.34)))))))))), false || (_GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))), (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))) : _GLF_FUZZED(79.34)))))))))), ! (! ((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))), (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))) : _GLF_FUZZED(79.34)))))))))))))))))))) && true), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))), (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))) : _GLF_FUZZED(79.34)))))))))), false || (_GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))), (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))) : _GLF_FUZZED(79.34)))))))))), ! (! ((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))), (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))) : _GLF_FUZZED(79.34))))))))))))))), bool(bool(_GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))), (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))) : _GLF_FUZZED(79.34)))))))))), false || (_GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))), (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))) : _GLF_FUZZED(79.34)))))))))), ! (! ((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))), (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))) : _GLF_FUZZED(79.34))))))))))))))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))), (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))) : _GLF_FUZZED(79.34)))))))))), false || (_GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))), (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))) : _GLF_FUZZED(79.34)))))))))), ! (! ((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))), (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))) : _GLF_FUZZED(79.34))))))))))))))), bool(bool(_GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))), (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))) : _GLF_FUZZED(79.34)))))))))), false || (_GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))), (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))) : _GLF_FUZZED(79.34)))))))))), ! (! ((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))), (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-608.791)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2951.0216)), bool(false)))), bool(true))) : _GLF_FUZZED(79.34)))))))))))))))))))) && true), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
            {
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               return;
              }
             else
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec2(true, true))))))))
                break;
              }
            }
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))), (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))) || false)))
          break;
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) | (int(_GLF_ONE(1.0, injectionSwitch.y))))); _injected_loop_counter ++)
            {
             return;
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        break;
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        continue;
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 0.0, 1.0, tan(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 1.0, 0.0, sin(0.0)))), min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), false, false)))))), true, false, false)))));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false))), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false))))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))))
      {
       do
        {
         return;
         if(_GLF_DEAD(false))
          return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) || false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) || false))), bool(bvec4(! (! (_GLF_IDENTITY(false, (false) || false))), true, false, false)))), false || (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) || false))), bool(bvec4(! (! (_GLF_IDENTITY(false, (false) || false))), true, false, false)))))))))))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         for(int _injected_loop_counter = _GLF_IDENTITY(0, _GLF_IDENTITY(clamp(_GLF_IDENTITY(0, _GLF_IDENTITY((0), ((0)) | ((0))) / 1), 0, 0), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) / 1), max(_GLF_IDENTITY(0, (0) / 1), _GLF_IDENTITY(0, (0) / 1))), 0, 0), clamp(clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(650) : 0)), (0) / 1), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (false ? _GLF_FUZZED(650) : 0)), (0) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(650) : 0)), (0) / 1)) >> 0))), 0, 0), clamp(_GLF_IDENTITY(0, (0) / 1), 0, 0), clamp(_GLF_IDENTITY(0, (0) / 1), 0, 0)))) | _GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, (0) | (0)) : _GLF_FUZZED(79947))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) / vec2(1.0, 1.0))).y)))), ! _GLF_IDENTITY((! _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && (_GLF_IDENTITY((bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ((bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false)))), ! (_GLF_IDENTITY(! ((! _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && (_GLF_IDENTITY((bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ((bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false))))), (! ((! _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && (_GLF_IDENTITY((bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ((bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false)))))) || false))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) / vec2(1.0, 1.0))).y)))), ! _GLF_IDENTITY((! _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY((bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))))))), ! (! ((bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))))))))), ((bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) || false)))), ! (_GLF_IDENTITY(! ((! _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && (_GLF_IDENTITY((bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ((bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false))))), (! ((! _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && (_GLF_IDENTITY((bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - 0.0))))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ((bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false)))))) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))))))) || false)))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))))
              continue;
             return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
          }
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true) || false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      return;
     subgroupBarrier();
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = _GLF_IDENTITY(1, min(1, 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))) << _GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))) << _GLF_IDENTITY(int(4), int(4)), int(ivec4(((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))) << _GLF_IDENTITY(int(4), int(4)), 0, 1, 0)))) ^ (0 << _GLF_IDENTITY(int(5), int(5))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(_GLF_IDENTITY(ivec2(int(4), int(_GLF_ONE(1.0, injectionSwitch.y))), (ivec2(int(4), int(_GLF_ONE(1.0, injectionSwitch.y)))) / ivec2(1, 1)))), int(4)))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(5545.0715), _GLF_FUZZED(9.1)), bvec2(false, false))).y)))))))
  return;
 do
  {
   if(_GLF_DEAD(false))
    return;
   atomicStore(checker[virtual_gid], read, 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (64) - 0), _GLF_IDENTITY((_GLF_IDENTITY(64, clamp(64, 64, _GLF_IDENTITY(64, 0 ^ (64))))), clamp((_GLF_IDENTITY(64, clamp(64, 64, _GLF_IDENTITY(64, 0 ^ (64))))), _GLF_IDENTITY((_GLF_IDENTITY(64, clamp(64, 64, _GLF_IDENTITY(64, 0 ^ (64))))), min(_GLF_IDENTITY((_GLF_IDENTITY(64, clamp(64, 64, _GLF_IDENTITY(64, 0 ^ (64))))), 0 + ((_GLF_IDENTITY(64, clamp(64, 64, _GLF_IDENTITY(64, 0 ^ (64))))))), (_GLF_IDENTITY(64, clamp(64, 64, _GLF_IDENTITY(64, 0 ^ (64))))))), (_GLF_IDENTITY(64, clamp(64, 64, _GLF_IDENTITY(64, 0 ^ (64))))))) >> 0), 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    continue;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      continue;
     continue;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     continue;
    }
  }
 while(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false)) || false)) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_WRAPPED_LOOP(false))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false)) || false)) || false))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))), (_GLF_WRAPPED_LOOP(false)) || false)) || false)) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))), (_GLF_WRAPPED_LOOP(false)) || false)) || false)) || false)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))), (_GLF_WRAPPED_LOOP(false)) || false)) || false)) || false)), bool(bvec4((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))), (_GLF_WRAPPED_LOOP(false)) || false)) || false)) || false)), false, true, true))))))), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))), (_GLF_WRAPPED_LOOP(false)) || false)) || false)) || false)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))), (_GLF_WRAPPED_LOOP(false)) || false)) || false)) || false)), bool(bvec4((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))), (_GLF_WRAPPED_LOOP(false)) || false)) || false)) || false)), false, true, true)))))))))))) || false, (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))), (_GLF_WRAPPED_LOOP(false)) || false)) || false)) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))), (_GLF_WRAPPED_LOOP(false)) || false)) || false)) || false)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))), (_GLF_WRAPPED_LOOP(false)) || false)) || false)) || false)), bool(bvec4((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))), (_GLF_WRAPPED_LOOP(false)) || false)) || false)) || false)), false, true, true))))))), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))), (_GLF_WRAPPED_LOOP(false)) || false)) || false)) || false)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))), (_GLF_WRAPPED_LOOP(false)) || false)) || false)) || false)), bool(bvec4((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))), (_GLF_WRAPPED_LOOP(false)) || false)) || false)) || false)), false, true, true)))))))))))) || false, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), bool(_GLF_IDENTITY(bvec2(bool(bvec3(false, false, false)), false), bvec2(bvec4(bvec2(bool(bvec3(false, false, false)), false), false, false))))))))), (_GLF_WRAPPED_LOOP(false)) || false)) || false)) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))), (_GLF_WRAPPED_LOOP(false)) || false)) || false)) || false)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))), (_GLF_WRAPPED_LOOP(false)) || false)) || false)) || false)), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec4(_GLF_WRAPPED_LOOP(false), false, false, true))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))), (_GLF_WRAPPED_LOOP(false)) || false)) || false)) || false)), false, true, true))))))), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))), (_GLF_WRAPPED_LOOP(false)) || false)) || false)) || false)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))), (_GLF_WRAPPED_LOOP(false)) || false)) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))), (_GLF_WRAPPED_LOOP(false)) || false)) || false)))) || false)), bool(bvec4((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY((_GLF_WRAPPED_LOOP(false)), ((_GLF_WRAPPED_LOOP(false))) || false) || false)) || false)) || false)), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)))))))), ((! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))), (_GLF_WRAPPED_LOOP(false)) || false)) || false)) || false)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))), (_GLF_WRAPPED_LOOP(false)) || false)) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))), (_GLF_WRAPPED_LOOP(false)) || false)) || false)))) || false)), bool(bvec4((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY((_GLF_WRAPPED_LOOP(false)), ((_GLF_WRAPPED_LOOP(false))) || false) || false)) || false)) || false)), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))))))))) && true))))) || false) || false)) && true)));
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))) || false))))
  {
  }
 else
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           return;
          }
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
      }
    }
   if(_GLF_DEAD(false))
    return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
