#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_0 {
 int i;
 float _f0;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-53.80), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(1.1)), bvec2(true, false))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uvec2 GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 0.0, sin(sin(0.0)), 0.0))).x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bool(bool(bvec2(false, true))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), ! (! (! (bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))))), false || (bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), false))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.9), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-431.524)), bvec2(true, false))).x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), true), false))))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec2(bvec2(_GLF_DEAD(false), true)))))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(3016.4203)))))) && true)))))
        return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), false), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), false), true, false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, exp(0.0) * (injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))))), bool(false)), clamp(_GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))))), bool(false)), mix(float(mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))))), bool(false))), float(_GLF_FUZZED((-6.3 * -8.2))), bool(false))), _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))))), bool(false)), 1.0 * (mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))))), bool(false)))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))))), bool(false))))) > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))))), bool(false)), clamp(_GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))))), bool(false)), mix(float(mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))))), bool(false))), float(_GLF_FUZZED((-6.3 * -8.2))), bool(false))), _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))))), bool(false)), 1.0 * (mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))))), bool(false)))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))))), bool(false))))) > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(7964.4865, (7964.4865) - 0.0), min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))))), bool(false)), clamp(_GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))))), bool(false)), mix(float(mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))))), bool(false))), float(_GLF_FUZZED((-6.3 * -8.2))), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))))), bool(false)), 1.0 * (mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))))), bool(false)))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))))), bool(false)), 1.0 * (mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))))), bool(false)))), min(_GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))))), bool(false)), 1.0 * (mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))))), bool(false)))), _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))))), bool(false)), 1.0 * (mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))))), bool(false))))))), float(_GLF_FUZZED(80.72)), bool(false))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))))), bool(false))))) > injectionSwitch.y)))), false))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_IDENTITY(_GLF_FUZZED(-7636.9801), max(_GLF_IDENTITY(_GLF_FUZZED(-7636.9801), mix(float(_GLF_FUZZED(13.43)), float(_GLF_FUZZED(-7636.9801)), bool(true))), _GLF_FUZZED(-7636.9801))) : 7964.4865)))))), bool(false)), clamp(_GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (_GLF_IDENTITY(false ? _GLF_FUZZED(-7636.9801) : 7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865) - 0.0))))))), bool(false)), mix(float(mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(_GLF_IDENTITY(-7636.9801, clamp(_GLF_IDENTITY(-7636.9801, min(-7636.9801, -7636.9801)), _GLF_IDENTITY(-7636.9801, (true ? -7636.9801 : _GLF_FUZZED(8611.0103))), _GLF_IDENTITY(-7636.9801, (false ? _GLF_FUZZED(-4842.3704) : -7636.9801))))) : 7964.4865)))))), bool(false))), float(_GLF_FUZZED((-6.3 * -8.2))), bool(false))), _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))), clamp(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))), _GLF_IDENTITY(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))), min(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))), _GLF_IDENTITY(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))), (_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865))))) / 1.0))), _GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))))))), bool(false)), 1.0 * (mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))))), bool(false)))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))))), bool(false))))) > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))))), bool(false)), clamp(_GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_IDENTITY(_GLF_FUZZED(-7636.9801), clamp(_GLF_FUZZED(-7636.9801), _GLF_FUZZED(-7636.9801), _GLF_FUZZED(-7636.9801))) : 7964.4865)))))), bool(false)), mix(float(mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))))), bool(false))), float(_GLF_FUZZED((-6.3 * -8.2))), bool(false))), _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))))), bool(false)), 1.0 * (mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(_GLF_IDENTITY(7964.4865, clamp(7964.4865, _GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, min(7964.4865, 7964.4865)))), 7964.4865)), _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))))), bool(false)))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))))), bool(false))))) > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(7964.4865, (7964.4865) - 0.0), min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))))), bool(false)), clamp(_GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))))), bool(false)), mix(float(mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, _GLF_IDENTITY((false ? _GLF_FUZZED(-7636.9801) : 7964.4865), 0.0 + (_GLF_IDENTITY((false ? _GLF_FUZZED(-7636.9801) : 7964.4865), mix(float(_GLF_IDENTITY((false ? _GLF_FUZZED(-7636.9801) : 7964.4865), mix(float(_GLF_FUZZED(-557.074)), float((false ? _GLF_FUZZED(-7636.9801) : 7964.4865)), bool(true)))), float(_GLF_FUZZED(973.072)), bool(false)))))))))), bool(false))), float(_GLF_FUZZED((-6.3 * -8.2))), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))))), bool(false)), 1.0 * (mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))))), bool(false)))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))))), bool(false)), 1.0 * (mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(_GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)), (false ? _GLF_FUZZED(-42.40) : _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))))))), bool(false)))), min(_GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x), float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))))), bool(false)), 1.0 * (mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))))), bool(false)))), _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))))), bool(false)), 1.0 * (mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))))), bool(false))))))), float(_GLF_FUZZED(80.72)), bool(false))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))))), bool(false))))) > injectionSwitch.y)))), false)))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))))), bool(_GLF_IDENTITY(false, ! (! (false))))), clamp(_GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))))), bool(false)), mix(float(mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))))), (_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))))), max(float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))))), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))))), max(float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))))), float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865))))))))))) / 1.0), bool(false))), float(_GLF_FUZZED((-6.3 * -8.2))), bool(false))), _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))))), bool(false)), 1.0 * (mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))))), bool(_GLF_IDENTITY(false, (false) || false))))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))), float(mat2(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0)))))))), bool(false)))), (false ? _GLF_FUZZED(2051.1049) : _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865))))), max(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865))))), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865))))), clamp(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865))))), _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(7964.4865, max(7964.4865, 7964.4865)), min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865))))), _GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))))))))), bool(false)), clamp(_GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))))), bool(false)), mix(float(mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_IDENTITY(_GLF_FUZZED(-7636.9801), float(_GLF_IDENTITY(mat4x3(_GLF_FUZZED(-7636.9801), 0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 0.0, sqrt(1.0), 0.0, exp(0.0), 0.0), (false ? _GLF_FUZZED(mat4x3(-1980.9754, 5019.7947, -9.5, -2.9, 4.7, 6.9, -425.136, -3876.7438, -38.16, -5895.6880, 5.3, -0.9)) : mat4x3(_GLF_FUZZED(-7636.9801), 0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 0.0, sqrt(1.0), 0.0, exp(0.0), 0.0))))) : 7964.4865)))))), bool(false))), float(_GLF_FUZZED((-6.3 * -8.2))), bool(false))), _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))))), bool(false)), 1.0 * (mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))))), bool(false)))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))))), bool(false))))))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))))), bool(_GLF_IDENTITY(false, ! (! (false))))), clamp(_GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), min(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(mat3(vec2(injectionSwitch[0], injectionSwitch[1]), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)))))).x), float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))))), bool(false)), mix(float(mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))))), (_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))))), max(float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))))), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))))), max(float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))) ? _GLF_IDENTITY(_GLF_FUZZED(-7636.9801), mix(float(_GLF_FUZZED(8.5)), float(_GLF_FUZZED(-7636.9801)), bool(true))) : 7964.4865)))))), float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865))))))))))) / 1.0), bool(false))), float(_GLF_FUZZED((-6.3 * -8.2))), bool(false))), _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))))), bool(false)), 1.0 * (mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(_GLF_IDENTITY(7964.4865, mix(float(_GLF_IDENTITY(7964.4865, mix(float(7964.4865), float(_GLF_FUZZED(8.6)), bool(false)))), float(_GLF_FUZZED(-37.83)), bool(false))), _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))))), bool(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))), float(mat2(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0)))))))), bool(false)))), (false ? _GLF_FUZZED(2051.1049) : _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865))))), max(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865))))), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865))))), clamp(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865))))), _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(7964.4865, max(7964.4865, 7964.4865)), min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865))))), _GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))))))))), bool(false)), clamp(_GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))))), bool(false)), mix(float(mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_IDENTITY(_GLF_FUZZED(-7636.9801), float(_GLF_IDENTITY(mat4x3(_GLF_FUZZED(-7636.9801), 0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 0.0, sqrt(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(9.8)))), 0.0, exp(0.0), 0.0), (false ? _GLF_FUZZED(mat4x3(-1980.9754, 5019.7947, -9.5, -2.9, 4.7, 6.9, -425.136, -3876.7438, -38.16, -5895.6880, 5.3, -0.9)) : mat4x3(_GLF_FUZZED(-7636.9801), 0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 0.0, sqrt(1.0), 0.0, exp(0.0), 0.0))))) : 7964.4865)))))), bool(false))), float(_GLF_FUZZED((-6.3 * -8.2))), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))))), bool(false)), clamp(mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))))), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))))), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))))), bool(false)))), 1.0 * (mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))))), bool(false)))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(_GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)), (_GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865))) - sin(0.0)))))), bool(false))))))) > injectionSwitch.y) || false)))), _GLF_IDENTITY(bool(bvec4(! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, _GLF_IDENTITY(_GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))))), bool(false)), (mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))))), bool(false))) / 1.0), clamp(_GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(_GLF_IDENTITY(-7636.9801, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))) * (_GLF_IDENTITY(-7636.9801, mix(float(_GLF_FUZZED(7309.1729)), float(-7636.9801), bool(true)))))) : 7964.4865)))))), bool(false)), mix(float(mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))))), bool(false))), float(_GLF_IDENTITY(_GLF_FUZZED((-6.3 * -8.2)), (_GLF_FUZZED((-6.3 * -8.2))) - 0.0)), bool(false))), _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(_GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)), max(_GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)), _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))))))), bool(false)), 1.0 * (mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))))), bool(false)))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, _GLF_IDENTITY((false ? _GLF_FUZZED(-7636.9801) : 7964.4865), 0.0 + ((false ? _GLF_FUZZED(-7636.9801) : _GLF_IDENTITY(7964.4865, mix(float(7964.4865), float(_GLF_FUZZED(-50.22)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), bool(false))))) > injectionSwitch.y))), true, true, false)), (bool(bvec4(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))))), bool(false)), (mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))))), bool(false))) / 1.0), clamp(_GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_IDENTITY(_GLF_FUZZED(-7636.9801), clamp(_GLF_FUZZED(-7636.9801), _GLF_FUZZED(-7636.9801), _GLF_FUZZED(-7636.9801))) : 7964.4865)))))), bool(false)), mix(float(mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))))), bool(false))), float(_GLF_FUZZED((-6.3 * -8.2))), bool(false))), _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))))), bool(false)), 1.0 * (mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, (false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))))), _GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7964.4865, min(7964.4865, _GLF_IDENTITY(7964.4865, _GLF_IDENTITY((false ? _GLF_FUZZED(-7636.9801) : 7964.4865), 0.0 + ((false ? _GLF_FUZZED(-7636.9801) : 7964.4865)))))))), bool(false))))) > injectionSwitch.y))), true, true, false))) && true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) - 0.0)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), ! (! (bool(bool((injectionSwitch.x > injectionSwitch.y))))))))))
          barrier();
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false)))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)) && true, bool(bool((! (false)) && true))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(workgroup_size)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), true, true, false))), (! (_GLF_DEAD(false))) && true))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(sqrt(1.0), (sqrt(1.0)) * 1.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))), true))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.y = _GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.y + _GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, _GLF_IDENTITY(1u, min(1u, 1u))))) * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((5.8 / 7828.3694))), bool(false)))), _GLF_IDENTITY(float(_GLF_FUZZED(8.9)), min(float(_GLF_FUZZED(8.9)), float(_GLF_FUZZED(8.9)))), bool(false))) > injectionSwitch.y))) || false)), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2666.8727)), vec2(_GLF_FUZZED((- -7.0)), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 0.0))), injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x = virtual_gid;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, false))))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, false))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), false || (bool(bvec2(_GLF_DEAD(false), false))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x, float(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x, round(length(normalize(vec2(1.0, 1.0)))), 1.0))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), false || ((false))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base, max(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base, GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base)).y + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_size), uint(uvec2(~ (subgroup_size), 0u)))), max((_GLF_IDENTITY(~ (subgroup_size), uint(uvec2(~ (subgroup_size), 0u)))), (_GLF_IDENTITY(~ (subgroup_size), uint(uvec2(~ (subgroup_size), 0u))))))), (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.y + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_size), uint(uvec2(~ (subgroup_size), 0u)))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_size), uint(uvec2(~ (subgroup_size), 0u)))), max((_GLF_IDENTITY(~ (subgroup_size), uint(uvec2(~ (subgroup_size), 0u)))), (_GLF_IDENTITY(~ (subgroup_size), uint(uvec2(~ (subgroup_size), 0u)))))), 0u, 1u, 0u), (uvec4(_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_size), uint(uvec2(~ (subgroup_size), 0u)))), max((_GLF_IDENTITY(~ (subgroup_size), uint(uvec2(~ (subgroup_size), 0u)))), (_GLF_IDENTITY(~ (subgroup_size), uint(uvec2(~ (subgroup_size), 0u)))))), 0u, 1u, 0u)) - (uvec4(0u, 0u, 0u, 0u) ^ uvec4(0u, 0u, 0u, 0u))))))) - 0u) + ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, 1)), (true ? subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, 1)) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)))))) % subgroup_size);
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), false || (bool(bool(_GLF_IDENTITY(false, true && (false)))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), (_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, cos(0.0), exp(0.0), log(1.0), 1.0, 0.0, 0.0))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), false || ((_GLF_IDENTITY(false, bool(bvec2(false, true)))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(false, bool(bvec2(false, true)))) && true))) || false)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, false || (true))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec3(bvec2(false, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bvec2(bvec2(bvec2(bvec2(bvec2(bvec3(bvec2(false, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), true, true)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec3(bvec2(false, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bvec2(bvec2(bvec2(bvec2(bvec2(bvec3(bvec2(false, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), true, true)), false, false))), bvec2(bvec3(bvec2(bvec4(bvec2(false, true), true, true)), true))))))), true && (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), true)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(false, (false) && true)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), ((false)) || false) && true)))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec2(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))))))) || (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_IDENTITY(bool(bvec2((false) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec2((false) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, min(4, 4)), 4)))), (_GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, min(4, 4)), 4))))) | (_GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, min(4, 4)), 4)))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
      return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)), false, _GLF_IDENTITY(false, (false) || false)))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))))
    barrier();
   barrier();
  }
 uint read = atomicLoad(buf[GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x], 4, _GLF_IDENTITY(64, (64) ^ 0), 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), false || (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false, true))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), clamp((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x))) + _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(4.4)), bool(false))), 0.0), vec3(0.0, 0.0, 1.0)))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - 0.0))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0), clamp(_GLF_IDENTITY(0, _GLF_IDENTITY((0) * _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((1), (true ? _GLF_IDENTITY((1), 0 ^ ((1))) : _GLF_FUZZED(-88521))), _GLF_IDENTITY(max(_GLF_IDENTITY(~ (1), (~ _GLF_IDENTITY((1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(findMSB(read)) : (1)))) | 0), ~ (1)), (max(_GLF_IDENTITY(~ (1), (~ _GLF_IDENTITY((1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(findMSB(read)) : (1)))) | 0), ~ (1))) * 1)))), clamp((0) * _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (1), max(_GLF_IDENTITY(~ (1), _GLF_IDENTITY((~ (1)) | 0, min((~ _GLF_IDENTITY((1), ((1)) >> 0)) | 0, (~ _GLF_IDENTITY((1), min(_GLF_IDENTITY((1), ((1)) * 1), _GLF_IDENTITY((1), ((1)) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))))) | 0))), ~ (1))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (1), max(_GLF_IDENTITY(~ (1), _GLF_IDENTITY((~ (1)) | 0, min((~ (1)) | 0, (~ (1)) | 0))), ~ (1))), ~ (~ (_GLF_IDENTITY(~ (1), max(_GLF_IDENTITY(~ (1), _GLF_IDENTITY((~ (1)) | 0, min(_GLF_IDENTITY((~ (1)) | 0, ~ (_GLF_IDENTITY(~ ((~ (1)) | 0), (~ ((~ (1)) | 0)) ^ 0))), _GLF_IDENTITY((~ (1)), max((~ (1)), (~ (1)))) | 0))), ~ (1))))))) >> 0))), _GLF_IDENTITY((0) * _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (1), (~ (1)) << int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(~ (1), (_GLF_IDENTITY(~ (1), int(ivec3(~ (1), (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(1), int(1))), 1)))) | 0), ~ (1))))), 0 ^ ((0) * _GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), ~ (_GLF_IDENTITY(~ (1), max(_GLF_IDENTITY(~ _GLF_IDENTITY((1), ((1)) * 1), (~ (1)) | _GLF_IDENTITY(0, (0) | 0)), ~ (_GLF_IDENTITY(1, 0 | (1))))))))), (0) * _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), max(_GLF_IDENTITY(~ (1), (~ (1)) | 0), ~ (1)))))))), 0, 0)), 1.0);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(checker[GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x], _GLF_IDENTITY(read, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(read) : read)), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             barrier();
            }
           barrier();
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, false))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y), true, false, true))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(checker[GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x], read, 4, 64, _GLF_IDENTITY(4, (false ? _GLF_FUZZED(36552) : 4)));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
