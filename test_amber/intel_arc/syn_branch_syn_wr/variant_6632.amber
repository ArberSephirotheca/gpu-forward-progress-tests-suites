#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460
struct _GLF_struct_8 {
 mat2 _f0;
 bvec3 _f1;
 bvec4 _f2;
 ivec4 _f3;
 bvec4 _f4;
} ;

struct _GLF_struct_7 {
 mat3x2 _f0;
 ivec4 _f1;
 ivec2 _f2;
 bool _f3;
 vec4 _f4;
} ;

struct _GLF_struct_9 {
 _GLF_struct_7 _f0;
 _GLF_struct_8 _f1;
 vec4 _f2;
 bvec4 _f3;
} ;

struct _GLF_struct_5 {
 vec4 _f0;
 ivec2 _f1;
 mat3x2 _f2;
 bool _f3;
 bvec3 _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_6 {
 uvec3 _f0;
 _GLF_struct_5 _f1;
} ;

struct _GLF_struct_4 {
 bvec4 _f0;
 mat2x3 _f1;
} ;

struct _GLF_struct_3 {
 mat3x4 _f0;
 ivec3 _f1;
 mat2 _f2;
 mat2x4 _f3;
 mat3x4 _f4;
 ivec2 _f5;
} ;

struct _GLF_struct_1 {
 bvec4 _f0;
} ;

struct _GLF_struct_0 {
 bvec4 _f0;
 int _f1;
 bool _f2;
} ;

struct _GLF_struct_2 {
 mat2x3 _f0;
 _GLF_struct_0 _f1;
 ivec4 _f2;
 vec3 _f3;
 mat2 _f4;
 _GLF_struct_1 _f5;
 uint _f6;
} ;

struct _GLF_struct_10 {
 vec4 _f0;
 _GLF_struct_2 _f1;
 uint workgroup_base;
 _GLF_struct_3 _f2;
 _GLF_struct_4 _f3;
 _GLF_struct_6 _f4;
 _GLF_struct_9 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_id;
 uvec4 GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_11next_virtual_gidsubgroup_local_idsubgroup_sizevirtual_gid;
 uvec2 GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id;
 uvec2 GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid;
 uvec3 GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_size;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_11next_virtual_gidsubgroup_local_idsubgroup_sizevirtual_gid.z = subgroup_size;
 GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x = GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_11next_virtual_gidsubgroup_local_idsubgroup_sizevirtual_gid.z;
 GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_size.z = GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_11next_virtual_gidsubgroup_local_idsubgroup_sizevirtual_gid.y = subgroup_local_id;
 GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x = GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_11next_virtual_gidsubgroup_local_idsubgroup_sizevirtual_gid.y;
 GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_size.y = GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x;
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_id.x = num_workgroup;
 GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_size.x = GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_id.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_id.y = workgroup_id;
 GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.y = GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_id.y;
 _GLF_struct_10 _GLF_struct_replacement_10 = _GLF_struct_10(vec4(1.0), _GLF_struct_2(mat2x3(1.0), _GLF_struct_0(bvec4(true), 1, true), ivec4(1), vec3(1.0), mat2(1.0), _GLF_struct_1(bvec4(true)), 1u), workgroup_size * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.y, _GLF_struct_3(mat3x4(1.0), ivec3(1), mat2(1.0), mat2x4(1.0), mat3x4(1.0), ivec2(1)), _GLF_struct_4(bvec4(true), mat2x3(1.0)), _GLF_struct_6(uvec3(1u), _GLF_struct_5(vec4(1.0), ivec2(1), mat3x2(1.0), true, bvec3(true), ivec3(1))), _GLF_struct_9(_GLF_struct_7(mat3x2(1.0), ivec4(1), ivec2(1), true, vec4(1.0)), _GLF_struct_8(mat2(1.0), bvec3(true), bvec4(true), ivec4(1), bvec4(true)), vec4(1.0), bvec4(true)));
 uint virtual_gid = _GLF_struct_replacement_10.workgroup_base + subgroup_id * GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_size.z + GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_size.y;
 GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_11next_virtual_gidsubgroup_local_idsubgroup_sizevirtual_gid.w = virtual_gid;
 GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.y = GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_11next_virtual_gidsubgroup_local_idsubgroup_sizevirtual_gid.w;
 uint next_virtual_gid = _GLF_struct_replacement_10.workgroup_base + subgroup_id * GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_size.z + ((GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_size.y + 1) % GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_size.z);
 GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_11next_virtual_gidsubgroup_local_idsubgroup_sizevirtual_gid.x = next_virtual_gid;
 atomicStore(buf[GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_11next_virtual_gidsubgroup_local_idsubgroup_sizevirtual_gid.x], uint(1), 4, 64, 4);
 uint read = atomicLoad(buf[GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.y], 4, 64, 0);
 if(GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_size.y + 1 < GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_size.z)
  {
   int i = 0;
   atomicStore(checker[GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.y], read, 4, 64, 4);
  }
 else
  {
   atomicStore(checker[GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.y], read, 4, 64, 4);
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
