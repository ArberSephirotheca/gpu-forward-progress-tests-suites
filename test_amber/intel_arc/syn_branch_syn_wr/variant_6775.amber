#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(mat2(mat4x3(mat2(1.0))), (false ? _GLF_FUZZED(mat2(mat4x3(8.9, 239.369, 421.257, 94.40, -31.74, 756.533, 653.198, 76.48, 9.6, 57.81, -910.177, -624.080))) : mat2(mat4x3(mat2(1.0))))))).x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, _GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(vec4(-3.9, -7.7, 1632.6751, -58.55).y)), float(_GLF_IDENTITY(0.0, (0.0) - 0.0)), bool(true))), injectionSwitch.x))), _GLF_IDENTITY((float(mat2x3(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY((float(mat2x3(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))), (false ? _GLF_FUZZED(382.693) : (float(mat2x3(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))))))) - 0.0) + 0.0))) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(7.2)), vec2(_GLF_FUZZED(9.7), (injectionSwitch)[1]), bvec2(false, true))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x))), (float(mat2x3(injectionSwitch.y, _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(0.7)), bool(false))), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))) + 0.0))) && true), _GLF_IDENTITY(true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))).x))), (float(mat2x3(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))) + 0.0))) && true)), bool(bool(true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED(-139.680), (vec2(0.0, 0.0))[1]), vec2(_GLF_IDENTITY((vec2(0.0, 0.0))[0], clamp((vec2(0.0, 0.0))[0], (vec2(0.0, 0.0))[0], (vec2(0.0, 0.0))[0])), _GLF_FUZZED(-2.8)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) + (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))).x))), (float(mat2x3(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))) + 0.0))) && true))))))))))))
  {
   do
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, false, false)), (bool(bvec4(_GLF_DEAD(false), true, false, false))) || false))), false || (bool(_GLF_DEAD(false)))))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))).x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-27.57) : injectionSwitch.y)), injectionSwitch.y)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
      {
       for(int _injected_loop_counter = _GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (0) - 0)) | (0), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(0, (0) - 0)) | (0), ((_GLF_IDENTITY(0, (0) - 0)) | (0)) | ((_GLF_IDENTITY(0, (0) - 0)) | (0)))) >> 0, min((_GLF_IDENTITY((_GLF_IDENTITY(0, (0) - 0)) | (0), ((_GLF_IDENTITY(0, (0) - 0)) | (0)) | ((_GLF_IDENTITY(0, (0) - 0)) | (0)))) >> 0, (_GLF_IDENTITY((_GLF_IDENTITY(0, (0) - 0)) | (0), ((_GLF_IDENTITY(0, (0) - 0)) | (0)) | ((_GLF_IDENTITY(0, (0) - 0)) | (0)))) >> 0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) + 0.0, mix(float(_GLF_FUZZED((72.23 - 9.3))), float(_GLF_IDENTITY((injectionSwitch.x) + 0.0, (false ? _GLF_FUZZED(62.93) : (injectionSwitch.x) + 0.0))), bool(true)))) > injectionSwitch.y)))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec4(bool(bvec2(false, false)), true, false, true)))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec4(bool(bvec2(false, false)), true, false, true)))), false, false), false))))), false || ((_GLF_IDENTITY(false, bool(bvec2(false, false)))) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec4(bool(bvec2(false, false)), true, false, _GLF_IDENTITY(true, ! (! (true))))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec4(bool(bvec2(false, false)), true, false, true)))), false, false), false))))))))) && true), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
          }
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), ! (_GLF_IDENTITY(! (false), (! (false)) && true)))));
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (true ? _GLF_IDENTITY(gl_NumWorkGroups.x, ~ (~ (gl_NumWorkGroups.x))) : _GLF_FUZZED(subgroup_id)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y))), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))) < int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_injected_loop_counter < int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y)))), ! (! (bool(bool(_injected_loop_counter < int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y)))))))))) || false); _GLF_IDENTITY(_injected_loop_counter ++, ~ (~ (_injected_loop_counter ++))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), _GLF_IDENTITY(bool(bvec2(bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true)), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(bvec2(bool(bvec4(! (false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(bool(bvec4(! (false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true), true), bvec3(bvec4(bvec3(bvec2(bool(bvec4(! (false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true), true), false)))))))), bool(bool(bool(bool(bool(_GLF_IDENTITY(bvec2(bool(bvec4(! (false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(bool(bvec4(! (false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true), true), bvec3(bvec4(bvec3(bvec2(bool(bvec4(! (false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true), true), false))))))))))))))) || false), true && (! (false)))))))
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(bitfieldReverse(76085)) : _GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)))) > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)))); _injected_loop_counter --)
          {
           barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! (! (! (_GLF_IDENTITY(false, false || (false)))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! (! (! (_GLF_IDENTITY(false, false || (false)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! (! (! (_GLF_IDENTITY(false, false || (false)))))))), bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! (! (! (_GLF_IDENTITY(false, false || (false)))))))), false))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.1), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(-616.867)), vec2(_GLF_FUZZED((- -99.79)), ((injectionSwitch))[1]), bvec2(false, true)))[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(vec4(_GLF_IDENTITY(-7108.9716, clamp(-7108.9716, -7108.9716, -7108.9716)), -7.6, -803.446, 681.204).x)), bvec2(true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))), (false ? _GLF_FUZZED(vec2(-3.8, 8.0)) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.1), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(-616.867)), vec2(_GLF_FUZZED((- -99.79)), ((injectionSwitch))[1]), bvec2(false, true)))[1], clamp((injectionSwitch)[_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, 0 | (1))))], (injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(vec4(_GLF_IDENTITY(-7108.9716, clamp(-7108.9716, -7108.9716, -7108.9716)), -7.6, -803.446, 681.204).x)), bvec2(true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))))).x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-89.73)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), (false ? _GLF_FUZZED(0.8) : injectionSwitch[1])))).y, (injectionSwitch.y) / 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(-2.3)), clamp(_GLF_IDENTITY(float(_GLF_FUZZED(-2.3)), clamp(float(_GLF_FUZZED(-2.3)), float(_GLF_FUZZED(-2.3)), float(_GLF_FUZZED(-2.3)))), float(_GLF_FUZZED(-2.3)), float(_GLF_FUZZED(-2.3)))), (_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(-2.3)), min(float(_GLF_FUZZED(-2.3)), float(_GLF_FUZZED(-2.3)))), clamp(_GLF_IDENTITY(float(_GLF_FUZZED(-2.3)), clamp(float(_GLF_FUZZED(-2.3)), float(_GLF_FUZZED(-2.3)), float(_GLF_FUZZED(-2.3)))), float(_GLF_IDENTITY(_GLF_FUZZED(-2.3), min(_GLF_FUZZED(-2.3), _GLF_FUZZED(-2.3)))), float(_GLF_FUZZED(-2.3))))) + 0.0), bool(false)))), _GLF_IDENTITY(true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))) + 0.0)) / 1.0)), _GLF_IDENTITY(float(_GLF_FUZZED(-2.3)), min(float(_GLF_FUZZED(-2.3)), float(_GLF_FUZZED(-2.3)))), bool(false)))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3.6), _GLF_FUZZED(-939.732)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y) / 1.0)), float(_GLF_FUZZED(-2.3)), bool(false))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))) + 0.0)) / 1.0)), _GLF_IDENTITY(float(_GLF_FUZZED(-2.3)), min(float(_GLF_FUZZED(-2.3)), float(_GLF_FUZZED(-2.3)))), bool(false)))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3.6), _GLF_FUZZED(-939.732)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y) / 1.0)), float(_GLF_FUZZED(-2.3)), bool(false))))))), false || (true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))) + 0.0)) / 1.0)), _GLF_IDENTITY(float(_GLF_FUZZED(-2.3)), min(float(_GLF_FUZZED(-2.3)), float(_GLF_FUZZED(-2.3)))), bool(false)))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3.6), _GLF_FUZZED(-939.732)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y) / 1.0)), float(_GLF_FUZZED(-2.3)), bool(false)))))))))), bool(bvec2(bool(_GLF_IDENTITY(true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))) + 0.0)) / 1.0)), _GLF_IDENTITY(float(_GLF_FUZZED(-2.3)), min(float(_GLF_FUZZED(-2.3)), float(_GLF_FUZZED(-2.3)))), bool(false)))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3.6), _GLF_FUZZED(-939.732)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y) / 1.0)), float(_GLF_FUZZED(-2.3)), bool(false))))))), false || (true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))) + 0.0)) / 1.0)), _GLF_IDENTITY(float(_GLF_FUZZED(-2.3)), min(float(_GLF_FUZZED(-2.3)), float(_GLF_FUZZED(-2.3)))), bool(false)))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3.6), _GLF_FUZZED(-939.732)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y) / 1.0)), float(_GLF_FUZZED(-2.3)), bool(false)))))))))), false)))))), ! _GLF_IDENTITY((! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! ((injectionSwitch.x > injectionSwitch.y)))))))), ! (! (! ((! ((injectionSwitch.x > injectionSwitch.y)))))))))))))
    barrier();
  }
 else
  {
  }
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       barrier();
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), clamp(_GLF_IDENTITY(workgroup_size * workgroup_id, max(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size))), (workgroup_size) ^ 0u)) | (workgroup_size)) * workgroup_id, workgroup_size * workgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, clamp(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) * 1u), workgroup_size * workgroup_id)), 0u | (_GLF_IDENTITY(workgroup_size * workgroup_id, clamp(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) * 1u), workgroup_size * workgroup_id)))), _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(workgroup_size), (true ? uint(_GLF_IDENTITY(workgroup_size, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(workgroup_size) : workgroup_size))) / 1u)) << 0u), 1u), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), uint(uvec3((workgroup_size), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), uint(uvec3((workgroup_size), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), max(_GLF_IDENTITY((workgroup_size), uint(uvec3((workgroup_size), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY((workgroup_size), uint(uvec3((workgroup_size), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) | (_GLF_IDENTITY((workgroup_size), uint(uvec3((workgroup_size), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), 0u, _GLF_IDENTITY((0u ^ 0u), ((0u ^ 0u)) / 1u), 1u), _GLF_IDENTITY((uvec4(_GLF_IDENTITY((workgroup_size), uint(uvec3((workgroup_size), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 0u, (0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u))), (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))) / 1u)) ^ 0u))) ^ (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (3u) ^ 0u)), uint(3u))))), 1u)), min(_GLF_IDENTITY((uvec4(_GLF_IDENTITY((workgroup_size), uint(uvec3((workgroup_size), 0u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) - 0u)))), 0u, (_GLF_IDENTITY(0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) ^ (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) ^ (0u >> _GLF_IDENTITY(uint(3u), uint(3u))))))), 1u)), ~ (~ ((uvec4(_GLF_IDENTITY((workgroup_size), uint(uvec3((workgroup_size), 0u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) - 0.0)) / 1.0), 0.0), vec3(0.0, sqrt(0.0), 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, sqrt(0.0), 1.0))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)))))))), 0u, (_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))) ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) ^ (0u >> _GLF_IDENTITY(uint(3u), uint(3u))))), 1u))))), (uvec4(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u))))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) | 0u), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), max(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) | 0u), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (uint(uvec3(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) | 0u), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))) >> (0u & 151245u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) | 0u), 0u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)), (_GLF_IDENTITY(uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)), min(uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)), uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u))))) | (uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u))))))), max(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) | 0u), 0u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)), (_GLF_IDENTITY(uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)), min(uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)), uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u))))) | (uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u))))))), ~ (~ (uint(uvec3(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) | 0u), 0u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)), (_GLF_IDENTITY(uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)), min(uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)), uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u))))) | (uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)))))))))), uint(uvec3(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) | 0u), 0u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)), (_GLF_IDENTITY(uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)), min(uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)), uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u))))) | (uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)))))))))))), 0u, (0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) * 1u), 0u, 0u))) ^ 0u)) ^ _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(3u), uint(3u))), ((0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) + 0u))), 1u)))) << uvec4(0u, 0u, 0u, 0u)))) << 0u), 1u), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size), 0u + (_GLF_IDENTITY((workgroup_size), _GLF_IDENTITY(uint(uvec2((workgroup_size), 1u)), (uint(uvec2((workgroup_size), 1u))) | 0u)))) << 0u), 1u), (uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u), 1u)) | (uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u), 1u)))) << uvec2(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), min(~ _GLF_IDENTITY((0u), _GLF_IDENTITY(uint(uvec4((0u), 0u, (0u << _GLF_IDENTITY(uint(6u), uint(6u))), (0u & 119972u))), (0u | 1u) * (uint(uvec4((0u), 0u, (0u << _GLF_IDENTITY(uint(6u), uint(6u))), (0u & 119972u)))))), ~ (0u))), uint(uvec3(_GLF_IDENTITY(~ (0u), min(~ _GLF_IDENTITY((0u), clamp((0u), (0u), (0u))), ~ (0u))), (0u >> _GLF_IDENTITY(uint(2u), uint(2u))), _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, (1u) ^ 0u)))))))))), 0u))) | (uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) << _GLF_IDENTITY(0u, (0u) / 1u)), 1u)))))) : _GLF_FUZZED(num_workgroup)))), max(uint(_GLF_IDENTITY(uint(workgroup_size), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_size, uint(uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u), 1u)))), clamp(uint(_GLF_IDENTITY(workgroup_size, uint(uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u), 1u)))), uint(_GLF_IDENTITY(workgroup_size, uint(uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u), 1u)))), uint(_GLF_IDENTITY(workgroup_size, uint(uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u), 1u)))))), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_size, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u), 1u), uvec2(uvec3(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u), 1u), (uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u), _GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(1u, (1u) << 0u))))) << uvec2(0u, 0u)), _GLF_IDENTITY(1u, 1u * (_GLF_IDENTITY(1u, 1u * (1u))))))), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) << _GLF_IDENTITY(0u, (0u) >> 0u)), 1u), uvec2(uvec3(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u), _GLF_IDENTITY(1u, min(1u, 1u))), (uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u), 1u)) << uvec2(0u, 0u)), 1u)))) | (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u), 1u), uvec2(uvec3(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u), 1u), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u), (_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u)) << 0u), 1u)) << uvec2(0u, 0u)), 1u)))))))), (uint(_GLF_IDENTITY(workgroup_size, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u), 1u), uvec2(uvec3(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u), 1u), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u), 1u), (uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u), 1u)) >> uvec2(0u, 0u))) << uvec2(0u, 0u)), 1u))), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) << _GLF_IDENTITY(0u, (0u) >> 0u)), 1u), uvec2(uvec3(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u), _GLF_IDENTITY(1u, min(1u, 1u))), (uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u), 1u)) << uvec2(0u, 0u)), 1u)))) | (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u), 1u), uvec2(uvec3(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u), 1u), (uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u), 1u)) << uvec2(0u, 0u)), 1u))))))))) * 1u), uint(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u), 1u)), (false ? _GLF_FUZZED((workgroup_size >> (21365u >> num_workgroup))) : _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u), 1u)), max(uint(uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u), 1u)), uint(uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u), 1u)))))))), uint(_GLF_IDENTITY(workgroup_size, uint(uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u), 1u)))))) : _GLF_FUZZED(num_workgroup)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, _GLF_IDENTITY(workgroup_size, clamp(_GLF_IDENTITY(workgroup_size, (workgroup_size) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))), workgroup_size, workgroup_size)))))))), (true ? uint(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((true ? workgroup_size : _GLF_FUZZED(workgroup_size)), ~ (_GLF_IDENTITY(~ ((true ? workgroup_size : _GLF_FUZZED(workgroup_size))), (true ? ~ ((true ? workgroup_size : _GLF_FUZZED(workgroup_size))) : _GLF_FUZZED(subgroup_size)))))), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (workgroup_size) * 1u)) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) + 0u) << 0u, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) + 0u) << 0u, (_GLF_IDENTITY((workgroup_size), ((workgroup_size)) + 0u) << 0u) | (_GLF_IDENTITY((workgroup_size), ((workgroup_size)) + 0u) << 0u))))), 1u)))) : _GLF_FUZZED(num_workgroup)))), uint(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(workgroup_size), (true ? uint(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) * 1u), uint(uvec2(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (workgroup_size) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << 0u), 1u)))) : _GLF_FUZZED(num_workgroup))), ~ (~ (_GLF_IDENTITY(uint(workgroup_size), (_GLF_IDENTITY(true, (true) || false) ? uint(_GLF_IDENTITY(workgroup_size, uint(uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u), 1u)))) : _GLF_FUZZED(num_workgroup))))))))))))) * workgroup_id));
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> _GLF_IDENTITY(0u, (0u) - _GLF_IDENTITY(0u, max(0u, 0u)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) >> _GLF_IDENTITY(0u, (0u) - 0u)), min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) >> _GLF_IDENTITY(0u, (0u) - 0u)), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) >> _GLF_IDENTITY(0u, (0u) - 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u), (_GLF_IDENTITY(0u, (0u) - 0u)) | 0u)), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ((0u)) >> 0u) - 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u), (_GLF_IDENTITY(0u, (0u) - 0u)) | 0u)), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ((0u)) >> 0u) - 0u))))) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) - 0u, (true ? _GLF_IDENTITY(_GLF_IDENTITY((0u) - 0u, clamp((0u) - 0u, _GLF_IDENTITY((0u) - 0u, ((0u) - 0u) | ((0u) - 0u)), (0u) - 0u)), (true ? _GLF_IDENTITY((0u) - 0u, clamp((0u) - 0u, _GLF_IDENTITY(_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))) - 0u, ((0u) - 0u) | ((0u) - 0u)), (0u) - 0u)) : _GLF_FUZZED(num_workgroup))) : _GLF_FUZZED(subgroup_id)))), 0u + (_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u), 0u ^ ((0u))) - 0u, (true ? _GLF_IDENTITY(_GLF_IDENTITY((0u) - _GLF_IDENTITY(0u, 0u ^ (0u)), clamp((0u) - 0u, _GLF_IDENTITY((0u) - 0u, ((0u) - 0u) | ((_GLF_IDENTITY(0u, (0u) - 0u)) - 0u)), (0u) - _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)))), (true ? _GLF_IDENTITY((0u) - 0u, _GLF_IDENTITY(clamp((0u) - 0u, _GLF_IDENTITY(_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))) - 0u, ((0u) - 0u) | ((0u) - 0u)), (0u) - 0u), _GLF_IDENTITY(uint(uint(clamp((0u) - 0u, _GLF_IDENTITY(_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))) - 0u, ((0u) - 0u) | ((0u) - 0u)), (0u) - 0u))), (uint(uint(clamp((0u) - 0u, _GLF_IDENTITY(_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))) - 0u, ((0u) - 0u) | ((0u) - 0u)), (0u) - 0u)))) + 0u))) : _GLF_FUZZED(num_workgroup))) : _GLF_FUZZED(subgroup_id))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size), _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, 0u ^ (0u)))) + (_GLF_IDENTITY((subgroup_id * subgroup_size), (true ? _GLF_IDENTITY((subgroup_id * subgroup_size), 0u | ((subgroup_id * subgroup_size))) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), 0u ^ (_GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) >> 0u))))))) >> _GLF_IDENTITY(0u, (0u) - 0u)), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u) * subgroup_size, (_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u) * _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(num_workgroup)))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u) * subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u) * subgroup_size)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u), (_GLF_IDENTITY(0u, (0u) - 0u)) | (_GLF_IDENTITY(0u, (0u) - 0u)))), 0u)), 1u * (uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u))) * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u) * subgroup_size, (_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u) * subgroup_size) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u) * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ 0u), uint(uint(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u) * subgroup_size)))))) >> _GLF_IDENTITY(0u, (0u) - 0u)), 0u))))), _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) >> _GLF_IDENTITY(0u, (0u) - 0u))))), uint(uvec2(_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), (subgroup_id * subgroup_size) ^ 0u), _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), ~ (~ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))))) >> _GLF_IDENTITY(0u, (0u) - 0u), 1u * (_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), ~ (~ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))))) >> _GLF_IDENTITY(0u, (0u) - 0u), ((subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), ~ (~ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))))) >> _GLF_IDENTITY(0u, (0u) - 0u)) << 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, ~ (~ (0u))), _GLF_IDENTITY(0u, (0u) | (0u))))) - 0u)) | 0u)), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), _GLF_IDENTITY(((0u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(((0u)), max(((0u)), _GLF_IDENTITY(((0u)), (((0u))) ^ 0u))) : _GLF_FUZZED(subgroup_size))) >> 0u) - 0u)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u)) / 1u)) * 1u)) >> _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) - 0u), (_GLF_IDENTITY(0u, (0u) - 0u)) | 0u)), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ((0u)) >> 0u) - 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u), (_GLF_IDENTITY(0u, (0u) - 0u)) | 0u)), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ((0u)) >> 0u) - 0u))))) >> 0u) : _GLF_FUZZED((subgroup_id + subgroup_id)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) - 0u, (true ? _GLF_IDENTITY((0u) - 0u, clamp((0u) - 0u, _GLF_IDENTITY(_GLF_IDENTITY((0u) - 0u, ~ (~ (_GLF_IDENTITY((0u), uint(uvec4((0u), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))) - 0u))), ((0u) - 0u) | ((0u) - 0u)), _GLF_IDENTITY((0u), ((0u)) ^ 0u) - _GLF_IDENTITY(0u, (0u) >> 0u))) : _GLF_FUZZED(subgroup_id))))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> _GLF_IDENTITY(0u, (0u) - _GLF_IDENTITY(0u, (0u) | (0u)))), uint(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u) * subgroup_size) >> _GLF_IDENTITY(0u, (0u) - 0u), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u) * subgroup_size) >> _GLF_IDENTITY(0u, (0u) - 0u), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u) * subgroup_size) >> _GLF_IDENTITY(0u, (0u) - 0u), ((_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u) * subgroup_size) >> _GLF_IDENTITY(0u, (0u) - 0u)) | ((_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u) * subgroup_size) >> _GLF_IDENTITY(0u, (0u) - 0u))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u) * subgroup_size) >> _GLF_IDENTITY(0u, (0u) - 0u), (_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u) * subgroup_size) >> _GLF_IDENTITY(0u, (0u) - 0u)))))), 0u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size, (subgroup_id * subgroup_size) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_local_id) : 0u))) - 0u))))), 0u | (clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u ^ (subgroup_size), (0u ^ (subgroup_size)) >> 0u)))), subgroup_size, subgroup_size))) >> _GLF_IDENTITY(0u, (0u) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / uint(_GLF_ONE(1.0, injectionSwitch.y))), 0u | (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / uint(_GLF_ONE(1.0, injectionSwitch.y))))), (subgroup_id * subgroup_size) >> _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, max(0u, 0u)), 1u)), (uint(uvec2(_GLF_IDENTITY(0u, max(0u, 0u)), 1u))) | (uint(uvec2(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, 0u + (1u)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, (0u) | (0u))))))) - 0u)), max(~ (_GLF_IDENTITY(0u, (0u) - 0u)), ~ (_GLF_IDENTITY(0u, (0u) - 0u))))))) | 0u)), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), 0u + (_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) | 0u))), _GLF_IDENTITY(((subgroup_id * subgroup_size)), uint(_GLF_IDENTITY(uvec2(((subgroup_id * subgroup_size)), 1u), (uvec2(((subgroup_id * subgroup_size)), 1u)) / uvec2(1u, 1u)))) | (0u ^ 0u)) >> _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u), ((0u)) >> 0u) - 0u, min(_GLF_IDENTITY((0u), ((0u)) >> 0u) - 0u, _GLF_IDENTITY(_GLF_IDENTITY((0u), ((0u)) >> 0u) - 0u, ~ (~ (_GLF_IDENTITY((0u), ((0u)) >> 0u) - _GLF_IDENTITY(0u, (0u) | (0u))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) - 0u, (true ? _GLF_IDENTITY((0u) - 0u, clamp((0u) - 0u, _GLF_IDENTITY((0u) - 0u, (_GLF_IDENTITY((0u) - 0u, min((0u) - 0u, (0u) - 0u))) | ((0u) - 0u)), (0u) - 0u)) : _GLF_FUZZED(subgroup_id))))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size), (_GLF_IDENTITY((subgroup_id * subgroup_size), (_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) / _GLF_IDENTITY(1u, max(1u, 1u)))) >> 0u)) >> 0u) >> _GLF_IDENTITY(0u, (0u) - 0u)), uint(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)), (subgroup_id) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) - 0u)) << 0u)) >> _GLF_IDENTITY(uint(0u), uint(0u))))) >> 0u)) * subgroup_size) >> _GLF_IDENTITY(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), 0u)), (_GLF_IDENTITY(0u, ~ (~ (0u)))) - 0u)), 0u))), _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id, 0u | (_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)))) * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) >> _GLF_IDENTITY(0u, (0u) - 0u))))))), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(8u), uint(8u))), _GLF_IDENTITY(0u | ((0u >> _GLF_IDENTITY(uint(8u), uint(8u)))), (_GLF_IDENTITY(0u | ((0u >> _GLF_IDENTITY(uint(8u), uint(8u)))), (_GLF_IDENTITY(0u | ((0u >> _GLF_IDENTITY(uint(8u), uint(8u)))), (0u | ((0u >> _GLF_IDENTITY(uint(8u), uint(8u))))) | 0u)) / (1u ^ 0u))) >> 0u)))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) / ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(_GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(3u))), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) * (1u & 1u)), (subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) >> _GLF_IDENTITY(0u, (0u) - _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, 1u * _GLF_IDENTITY((0u), min((0u), (0u)))), 0u))))));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))).x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8.6), _GLF_FUZZED(float(67916u))), bvec2(false, false))))).y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), false))))))) || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / sqrt(1.0)), bool(bool(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / sqrt(1.0)), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / sqrt(1.0))) * 1.0)))))))))) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))) << _GLF_IDENTITY(0u, (0u) / 1u)) + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     do
      {
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false, false))))), bool(bool(! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false, false)))))))))))))))
      {
       for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), max(int(4), int(4))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(4, _GLF_IDENTITY(int(int(4)), 0 ^ (int(int(4)))))), _GLF_IDENTITY(int(4), 0 + (int(4))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 & -28456)); _injected_loop_counter --)
        {
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         barrier();
        }
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_base + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u | (subgroup_local_id), ~ (_GLF_IDENTITY(~ (0u | (subgroup_local_id)), clamp(~ (0u | (subgroup_local_id)), ~ (0u | (subgroup_local_id)), ~ (0u | (subgroup_local_id))))))) + 1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))) << 0u) + 1), min((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))) << 0u) + 1), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))) << 0u) + 1))) >> 0u)) % subgroup_size);
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0))) > injectionSwitch.y)))) || false), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) > injectionSwitch.y)))))), false, false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read = 0;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false))))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)))) < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(exp(-2848.0799)) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)), (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0))) - 0.0))))), 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-6.4))), abs(1.0), 1.0), (false ? _GLF_FUZZED(mat4x2(630.404, 59.13, 78.02, 38.20, 1217.2383, 8243.1304, 4266.1203, -52.62)) : _GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(abs(1.0), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(0.5, -640.370)) : injectionSwitch)).y)) ? _GLF_FUZZED(-702.281) : abs(1.0), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(0.5, -640.370)) : injectionSwitch)).y, (false ? _GLF_FUZZED(-0.5) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(0.5, -640.370)) : injectionSwitch)).y, float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(0.5, -640.370)) : injectionSwitch)).y, float(mat2x3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(0.5, -640.370)) : injectionSwitch)).y, 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 0.0, 1.0, 0.0))))))) ? _GLF_FUZZED(-702.281) : abs(1.0)) * abs(_GLF_IDENTITY(1.0, (1.0) / 1.0))))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-8.5)), bool(false)))), (false ? _GLF_FUZZED(mat4x2(874.169, 83.11, 518.638, 1.2, 4.6, _GLF_IDENTITY(37.12, clamp(37.12, 37.12, _GLF_IDENTITY(37.12, mix(float(37.12), float(_GLF_FUZZED(-6.8)), bool(false))))), _GLF_IDENTITY(-7257.9951, (-7257.9951) / sqrt(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))))), _GLF_IDENTITY(775.413, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))) * (775.413)))) : mat4x2(injectionSwitch, _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))), _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, float(vec2(1.0, 0.0))))), 0.0, abs(1.0), 1.0))))))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(exp(-2848.0799)) : _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)))))), 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-6.4))), abs(1.0), 1.0), (false ? _GLF_FUZZED(mat4x2(630.404, 59.13, 78.02, 38.20, 1217.2383, 8243.1304, _GLF_IDENTITY(4266.1203, 1.0 * (4266.1203)), -52.62)) : _GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-14.93)), float(_GLF_IDENTITY(0.0, (0.0) * 1.0)), bool(true))), 1.0, 0.0, _GLF_IDENTITY(abs(1.0), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(0.5, -640.370)) : injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(0.5, -640.370)) : injectionSwitch))) + vec2(0.0, 0.0)).y)) ? _GLF_FUZZED(-702.281) : abs(1.0), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec2(0.5, -640.370)) : injectionSwitch)).y)) ? _GLF_FUZZED(-702.281) : abs(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(0.9)), bool(false))))) * abs(1.0)))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(_GLF_IDENTITY(-8.5, 0.0 + (-8.5)))), bool(false)))), (false ? _GLF_FUZZED(mat4x2(874.169, 83.11, 518.638, 1.2, 4.6, _GLF_IDENTITY(37.12, clamp(37.12, 37.12, 37.12)), _GLF_IDENTITY(-7257.9951, (-7257.9951) / sqrt(_GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-304.252) : 0.0)), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 1.0), vec3(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 1.0))))), _GLF_IDENTITY(775.413, _GLF_ONE(1.0, injectionSwitch.y) * (775.413)))) : mat4x2(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0, 0.0)), 1.0 * (float(vec4(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0, 0.0))))), max(0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, float(vec2(1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))))), 0.0, abs(1.0), 1.0))))))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x4(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0), mat4(1.0) * (mat3x4(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))))), (0.0) / 1.0), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(exp(-2848.0799)) : _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)))))), 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-6.4))), abs(1.0), 1.0), (false ? _GLF_FUZZED(mat4x2(630.404, 59.13, 78.02, 38.20, 1217.2383, 8243.1304, 4266.1203, -52.62)) : _GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(abs(1.0), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(0.5, -640.370)) : injectionSwitch)).y)) ? _GLF_FUZZED(-702.281) : abs(1.0), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(0.5, -640.370)) : injectionSwitch)).y)) ? _GLF_FUZZED(-702.281) : abs(1.0)) * abs(1.0)))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_IDENTITY(_GLF_FUZZED(-8.5), max(_GLF_FUZZED(-8.5), _GLF_IDENTITY(_GLF_FUZZED(-8.5), min(_GLF_FUZZED(-8.5), _GLF_FUZZED(-8.5)))))), bool(false)))), (false ? _GLF_FUZZED(mat4x2(874.169, 83.11, 518.638, 1.2, 4.6, _GLF_IDENTITY(37.12, clamp(37.12, 37.12, 37.12)), _GLF_IDENTITY(-7257.9951, (-7257.9951) / sqrt(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, 0.0, 1.0), (vec3(0.0, 0.0, 1.0)) * vec3(1.0, 1.0, 1.0)))))), _GLF_IDENTITY(775.413, _GLF_ONE(1.0, injectionSwitch.y) * (775.413)))) : mat4x2(injectionSwitch, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) * exp(0.0)))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, float(vec2(1.0, 0.0))))), 0.0, abs(1.0), 1.0))))))).y, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x4(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0), mat4(1.0) * (mat3x4(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))))), (0.0) / 1.0), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(exp(-2848.0799)) : _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)))))), 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-6.4))), abs(1.0), 1.0), (false ? _GLF_FUZZED(mat4x2(630.404, 59.13, 78.02, 38.20, 1217.2383, 8243.1304, 4266.1203, -52.62)) : _GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(abs(1.0), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(0.5, -640.370)) : injectionSwitch)).y)) ? _GLF_FUZZED(-702.281) : abs(1.0), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(0.5, -640.370)) : injectionSwitch)).y)) ? _GLF_FUZZED(-702.281) : abs(1.0)) * abs(1.0)))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_IDENTITY(_GLF_FUZZED(-8.5), max(_GLF_FUZZED(-8.5), _GLF_IDENTITY(_GLF_FUZZED(-8.5), min(_GLF_FUZZED(-8.5), _GLF_FUZZED(-8.5)))))), bool(false)))), (false ? _GLF_FUZZED(mat4x2(874.169, 83.11, 518.638, 1.2, 4.6, _GLF_IDENTITY(37.12, clamp(37.12, 37.12, 37.12)), _GLF_IDENTITY(-7257.9951, (-7257.9951) / sqrt(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, 0.0, 1.0), (vec3(0.0, 0.0, 1.0)) * vec3(1.0, 1.0, 1.0)))))), _GLF_IDENTITY(775.413, _GLF_ONE(1.0, injectionSwitch.y) * (775.413)))) : mat4x2(injectionSwitch, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) * exp(0.0)))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, float(vec2(1.0, 0.0))))), 0.0, abs(1.0), 1.0))))))).y) + 0.0)) / 1.0)) + 0.0)))))
      {
       do
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y) * (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         if(_GLF_DEAD(false))
          {
           do
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) >> 0u)], _GLF_IDENTITY(uint(_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1, 0, 0, (0 >> _GLF_IDENTITY(int(0), int(0)))), clamp(ivec4(1, 0, 0, (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), (_GLF_IDENTITY(int(0), (int(0)) >> 0)) << 0), int(0)))), ivec4(1, 0, 0, (0 >> _GLF_IDENTITY(int(0), int(0)))), ivec4(1, 0, 0, (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, max(0, 0))), int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) ^ 0)) ^ _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0 + (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) * 1)))))))))), (ivec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) | ivec4(0, 0, 0, 0)) * (_GLF_IDENTITY(ivec4(1, _GLF_IDENTITY(0, clamp(0, 0, 0)), 0, (0 >> _GLF_IDENTITY(int(0), int(0)))), clamp(ivec4(1, 0, 0, (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), (_GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) >> 0), (_GLF_IDENTITY(int(0), (int(0)) >> 0)) * 1)) << 0), int(0)))), ivec4(1, 0, 0, (0 >> _GLF_IDENTITY(int(0), int(0)))), ivec4(1, 0, _GLF_IDENTITY(0, (0) << int(_GLF_ZERO(0.0, injectionSwitch.x))), (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(0, max(0, 0))), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (int(_GLF_IDENTITY(0, max(0, 0))))), int(0))))))))), (int(_GLF_IDENTITY(ivec4(1, 0, 0, (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), clamp(int(0), int(0), int(0))), int(0)))), _GLF_IDENTITY(clamp(ivec4(1, 0, 0, (_GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(26.66) : _GLF_ZERO(0.0, injectionSwitch.x))))) + 0) ^ (0)) >> _GLF_IDENTITY(int(0), int(0)))), ivec4(1, 0, 0, (0 >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (true ? int(0) : _GLF_FUZZED(clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter))))))), ivec4(1, 0, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter))), (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(0), int(0))) - 0, (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(0), int(0))) - 0, ~ (~ ((0 >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (false ? _GLF_FUZZED(82344) : int(0))))) - 0)))) - 0))))), (clamp(ivec4(1, 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, 0))) / (1 ^ 0)), (_GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x)), int(ivec2(int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x)), 1))), (0 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), clamp(int(0), int(0), int(0))))), 0, 1)), (int(ivec4(_GLF_IDENTITY(int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x)), int(ivec2(int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x)), 1))), (0 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), clamp(int(0), int(0), int(0))))), 0, 1))) / 1)), (int(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x), (false ? _GLF_IDENTITY(_GLF_FUZZED(26.66), (true ? _GLF_FUZZED(26.66) : _GLF_FUZZED(-21.51))) : _GLF_ZERO(0.0, injectionSwitch.x))))) + 0) ^ (0)) >> _GLF_IDENTITY(int(0), int(0)))), ivec4(1, 0, 0, (_GLF_IDENTITY(0, (0) >> 0) >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) << int(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(int(0), (true ? int(0) : _GLF_FUZZED(clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter))))))), ivec4(1, 0, 0, (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(0), int(0)), (0 >> _GLF_IDENTITY(int(0), int(0))) - 0))))) / ivec4(1, 1, 1, 1))))) >> 0))), (uint(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, 0 ^ (1)) : _GLF_FUZZED(-42300))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, 0 ^ (1))), (~ (1)) * 1))), 1, 1), (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (1), (~ (1)) | (_GLF_IDENTITY(~ (1), (~ (1)) | (~ (1))))), (~ (1)) * 1))), 1, 1), ivec4(_GLF_IDENTITY(0, (0) | 0), 0, 0, 0) | (ivec4(1, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) * 1))), 1, 1)))) | ivec4(0, 0, 0, 0)))))) << (0u >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), max(uint(1u), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u))), (_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u)))) << 0u))), (_GLF_IDENTITY(uint(1u), max(uint(1u), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u)))))) | (uint(1u))), (_GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), (uint(1u)) / 1u)) | (uint(1u)))) << 0u)))) / 1u), uint(1u)))), 4, 64, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-95357))));
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   do
    {
     if((subgroup_local_id % 2) == 0)
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
         _GLF_IDENTITY(_GLF_IDENTITY(read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (_GLF_IDENTITY(~ (4), min(~ (4), ~ (4)))) | (~ (4))))), 64, 2), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))), (subgroup_local_id) << 0u), subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) | (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))))), max(_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))), (subgroup_local_id) << 0u), subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) | (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))), (subgroup_local_id) << 0u), subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) | (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))))), ~ (~ (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))), (subgroup_local_id) << 0u), subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) | (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))))))))))) : read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], buf[virtual_gid]))) - 0u), 4, _GLF_IDENTITY(64, _GLF_IDENTITY(int(int(_GLF_IDENTITY(64, min(64, 64)))), min(int(int(_GLF_IDENTITY(64, min(64, 64)))), int(int(_GLF_IDENTITY(64, min(64, 64))))))), _GLF_IDENTITY(2, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (2), 0 ^ (~ (2))), 0 ^ (~ (2)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(read = atomicLoad(buf[virtual_gid], 4, 64, 2), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(subgroup_local_id) : read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, int(int(_GLF_IDENTITY(64, min(64, 64))))), 2))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, _GLF_IDENTITY((false ? _GLF_FUZZED(73708) : 64), 1 * ((false ? _GLF_FUZZED(73708) : 64)))), 2), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))) || false))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, _GLF_IDENTITY(int(int(_GLF_IDENTITY(64, min(64, 64)))), (int(int(_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), (false ? _GLF_FUZZED(15461) : _GLF_IDENTITY(_GLF_IDENTITY(64, (64) | 0), min(64, 64))))))) | (int(int(_GLF_IDENTITY(64, min(64, 64))))))), 2)))))) >> 0u);
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
            barrier();
           do
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           barrier();
          }
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-980.776) : injectionSwitch.y))), float(_GLF_FUZZED(-401.109)), bool(false)))))))
          {
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, sin(0.0) + (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)))) > injectionSwitch.y), ! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), false || (((injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))).y))))), (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, sin(0.0) + (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).x, (injectionSwitch.x) / 1.0), injectionSwitch.x)))) > injectionSwitch.y), ! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false), false || (((injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))).y)))))) && true)), (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, sin(0.0) + (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)))) > injectionSwitch.y), ! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), false || (((injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 0.0 + (1.0))) / 1.0))), 1.0))).y))))), _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, sin(0.0) + (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).x, (injectionSwitch.x) / 1.0), injectionSwitch.x)))) > injectionSwitch.y), ! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false), false || (((injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))).y)))))) && true, _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, sin(0.0) + (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).x, (injectionSwitch.x) / 1.0), injectionSwitch.x)))) > injectionSwitch.y), ! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false), false || (((injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))).y)))))) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), ! (! (bool(bvec4((_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, sin(0.0) + (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).x, (injectionSwitch.x) / 1.0), injectionSwitch.x)))) > injectionSwitch.y), ! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false), false || (((injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))).y)))))) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))
              barrier();
            }
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               barrier();
              }
            }
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > ((_GLF_IDENTITY(0, (0) + 0) | 0) >> _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, clamp(2, 2, 2))))), bool(bvec2(_GLF_IDENTITY(_injected_loop_counter > ((0 | 0) >> _GLF_IDENTITY(int(2), int(2))), false || (_injected_loop_counter > ((0 | 0) >> _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, max(2, 2)), 2))))))), false)))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-3.2, -3758.0833)) : injectionSwitch)).x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               barrier();
              }
            }
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       read = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, clamp(2, 2, 2)));
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), true)))))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bool(! (_GLF_IDENTITY(false, ! (! (false)))))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) || false)))))
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))));
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, 0u | (_GLF_IDENTITY(read, (read) >> 0u))), _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(17726))), 64, 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
