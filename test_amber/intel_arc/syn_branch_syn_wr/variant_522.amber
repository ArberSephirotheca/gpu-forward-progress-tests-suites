#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, sqrt(abs(1.0)), 0.0)), max(float(vec4(injectionSwitch.y, 1.0, sqrt(abs(1.0)), 0.0)), float(vec4(injectionSwitch.y, 1.0, sqrt(abs(1.0)), 0.0)))))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)).y)))) && true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))), false || (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(7.9)), float((injectionSwitch)[1]), bool(true)))), vec2(_GLF_FUZZED(74.14), _GLF_FUZZED(-39.08)), bvec2(false, false))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(4.8, -156.176)) : injectionSwitch)).x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, false || (true)))) && (! ((injectionSwitch.x > injectionSwitch.y)))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), false))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(dot(vec3(386.372, -445.485, -2.8), vec3(-63.69, 8.9, -18.53))) : _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(atan(injectionSwitch, vec2(-0.6, _GLF_IDENTITY(_GLF_IDENTITY(-6.6, (-6.6) - 0.0), clamp(-6.6, -6.6, -6.6))))) : injectionSwitch)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(atan(injectionSwitch, vec2(-0.6, _GLF_IDENTITY(_GLF_IDENTITY(-6.6, (-6.6) - 0.0), clamp(-6.6, -6.6, -6.6))))) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(atan(injectionSwitch, vec2(-0.6, _GLF_IDENTITY(_GLF_IDENTITY(-6.6, (-6.6) - 0.0), _GLF_IDENTITY(clamp(-6.6, -6.6, -6.6), clamp(clamp(-6.6, -6.6, -6.6), _GLF_IDENTITY(clamp(-6.6, -6.6, -6.6), min(clamp(-6.6, -6.6, -6.6), clamp(-6.6, -6.6, -6.6))), clamp(-6.6, -6.6, -6.6))))))) : injectionSwitch), mix(vec2(_GLF_FUZZED((6.8 / (+ 624.757))), ((false ? _GLF_FUZZED(atan(injectionSwitch, vec2(-0.6, _GLF_IDENTITY(_GLF_IDENTITY(-6.6, (-6.6) - 0.0), _GLF_IDENTITY(clamp(-6.6, -6.6, -6.6), clamp(clamp(-6.6, -6.6, -6.6), _GLF_IDENTITY(clamp(-6.6, -6.6, -6.6), min(clamp(-6.6, -6.6, -6.6), clamp(-6.6, -6.6, -6.6))), clamp(-6.6, -6.6, -6.6))))))) : injectionSwitch))[1]), vec2(((false ? _GLF_FUZZED(atan(injectionSwitch, vec2(-0.6, _GLF_IDENTITY(_GLF_IDENTITY(-6.6, (-6.6) - 0.0), _GLF_IDENTITY(clamp(-6.6, -6.6, -6.6), clamp(clamp(-6.6, -6.6, -6.6), _GLF_IDENTITY(clamp(-6.6, -6.6, -6.6), min(clamp(-6.6, -6.6, -6.6), clamp(-6.6, -6.6, -6.6))), clamp(-6.6, -6.6, -6.6))))))) : injectionSwitch))[0], _GLF_FUZZED(7.4)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(atan(injectionSwitch, vec2(-0.6, _GLF_IDENTITY(_GLF_IDENTITY(-6.6, (-6.6) - 0.0), clamp(-6.6, -6.6, -6.6))))) : injectionSwitch))), _GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(atan(injectionSwitch, vec2(-0.6, _GLF_IDENTITY(_GLF_IDENTITY(-6.6, (-6.6) - 0.0), clamp(-6.6, _GLF_IDENTITY(-6.6, clamp(_GLF_IDENTITY(-6.6, min(-6.6, -6.6)), -6.6, -6.6)), -6.6))))) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(atan(injectionSwitch, vec2(-0.6, _GLF_IDENTITY(_GLF_IDENTITY(-6.6, (-6.6) - _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-27.17)), bool(false))), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))), clamp(-6.6, -6.6, -6.6))))) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(atan(injectionSwitch, vec2(-0.6, _GLF_IDENTITY(_GLF_IDENTITY(-6.6, (-6.6) - 0.0), clamp(-6.6, -6.6, -6.6))))) : injectionSwitch))), vec2(0.0, 0.0) + (clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(atan(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5096.0114), _GLF_FUZZED(-9.2)), vec2(_GLF_IDENTITY((injectionSwitch)[0], max(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) * 1.0), (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true))), vec2(-0.6, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-6.6, min(-6.6, _GLF_IDENTITY(-6.6, 1.0 * (-6.6)))), (-6.6) - 0.0), clamp(-6.6, -6.6, -6.6))))) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(atan(injectionSwitch, vec2(-0.6, _GLF_IDENTITY(_GLF_IDENTITY(-6.6, (-6.6) - 0.0), clamp(-6.6, -6.6, -6.6))))) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(atan(injectionSwitch, vec2(-0.6, _GLF_IDENTITY(_GLF_IDENTITY(-6.6, (-6.6) - 0.0), clamp(-6.6, -6.6, -6.6))))) : injectionSwitch))))), 1.0)), vec2(mat4x3(vec2(vec3(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(atan(injectionSwitch, vec2(-0.6, _GLF_IDENTITY(_GLF_IDENTITY(-6.6, (-6.6) - 0.0), clamp(-6.6, -6.6, -6.6))))) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(atan(injectionSwitch, vec2(-0.6, _GLF_IDENTITY(_GLF_IDENTITY(-6.6, (-6.6) - 0.0), clamp(-6.6, -6.6, -6.6))))) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(atan(injectionSwitch, vec2(-0.6, _GLF_IDENTITY(_GLF_IDENTITY(-6.6, (-6.6) - 0.0), clamp(-6.6, -6.6, -6.6))))) : injectionSwitch))), vec2(0.0, 0.0) + (clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(atan(injectionSwitch, vec2(-0.6, _GLF_IDENTITY(_GLF_IDENTITY(-6.6, (-6.6) - 0.0), clamp(-6.6, -6.6, -6.6))))) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(atan(injectionSwitch, vec2(-0.6, _GLF_IDENTITY(_GLF_IDENTITY(-6.6, (-6.6) - 0.0), clamp(-6.6, -6.6, -6.6))))) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(atan(injectionSwitch, vec2(-0.6, _GLF_IDENTITY(_GLF_IDENTITY(-6.6, (-6.6) - 0.0), clamp(-6.6, -6.6, -6.6))))) : injectionSwitch))))), 1.0)), 0.0, sin(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(1.0)))))).y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(dot(vec3(386.372, -445.485, -2.8), vec3(-63.69, 8.9, -18.53))) : _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(atan(injectionSwitch, vec2(-0.6, _GLF_IDENTITY(_GLF_IDENTITY(-6.6, (-6.6) - 0.0), clamp(-6.6, -6.6, _GLF_IDENTITY(-6.6, max(_GLF_IDENTITY(-6.6, clamp(-6.6, -6.6, -6.6)), -6.6))))))) : injectionSwitch)).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(dot(vec3(386.372, -445.485, -2.8), vec3(_GLF_IDENTITY(-63.69, clamp(-63.69, -63.69, -63.69)), 8.9, -18.53))) : _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(atan(injectionSwitch, vec2(-0.6, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-6.6, _GLF_IDENTITY((-6.6) - 0.0, (_GLF_IDENTITY((-6.6) - 0.0, (_GLF_IDENTITY((-6.6) - 0.0, max((-6.6) - 0.0, (_GLF_IDENTITY(-6.6, min(-6.6, -6.6))) - 0.0))) - 0.0)) - length(0.0))), (_GLF_IDENTITY(-6.6, (-6.6) - 0.0)) * 1.0), clamp(-6.6, -6.6, -6.6))))) : injectionSwitch)).y, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(dot(vec3(386.372, _GLF_IDENTITY(-445.485, max(-445.485, -445.485)), -2.8), vec3(-63.69, 8.9, -18.53))) : _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(atan(injectionSwitch, vec2(-0.6, _GLF_IDENTITY(_GLF_IDENTITY(-6.6, (-6.6) - 0.0), clamp(-6.6, -6.6, -6.6))))) : injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(atan(injectionSwitch, vec2(-0.6, _GLF_IDENTITY(_GLF_IDENTITY(-6.6, (-6.6) - 0.0), clamp(-6.6, -6.6, -6.6))))) : injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(atan(injectionSwitch, vec2(-0.6, _GLF_IDENTITY(_GLF_IDENTITY(-6.6, (-6.6) - 0.0), clamp(-6.6, -6.6, -6.6))))) : injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(atan(injectionSwitch, vec2(-0.6, _GLF_IDENTITY(_GLF_IDENTITY(-6.6, (-6.6) - 0.0), clamp(-6.6, -6.6, -6.6))))) : injectionSwitch)).y) - 0.0)))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(dot(vec3(386.372, _GLF_IDENTITY(-445.485, max(-445.485, -445.485)), -2.8), vec3(-63.69, 8.9, -18.53))) : _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(atan(injectionSwitch, vec2(-0.6, _GLF_IDENTITY(_GLF_IDENTITY(-6.6, (-6.6) - 0.0), clamp(-6.6, -6.6, -6.6))))) : injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(atan(injectionSwitch, vec2(-0.6, _GLF_IDENTITY(_GLF_IDENTITY(-6.6, (-6.6) - 0.0), clamp(-6.6, -6.6, -6.6))))) : injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(atan(injectionSwitch, vec2(-0.6, _GLF_IDENTITY(_GLF_IDENTITY(-6.6, (-6.6) - 0.0), clamp(-6.6, -6.6, -6.6))))) : injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(atan(injectionSwitch, vec2(-0.6, _GLF_IDENTITY(_GLF_IDENTITY(-6.6, (-6.6) - 0.0), clamp(-6.6, -6.6, -6.6))))) : injectionSwitch)).y) - 0.0)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(dot(vec3(386.372, _GLF_IDENTITY(-445.485, max(-445.485, -445.485)), -2.8), vec3(-63.69, 8.9, -18.53))) : _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(atan(injectionSwitch, vec2(-0.6, _GLF_IDENTITY(_GLF_IDENTITY(-6.6, (-6.6) - 0.0), clamp(-6.6, -6.6, -6.6))))) : injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(atan(injectionSwitch, vec2(-0.6, _GLF_IDENTITY(_GLF_IDENTITY(-6.6, (-6.6) - 0.0), clamp(-6.6, -6.6, -6.6))))) : injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(atan(injectionSwitch, vec2(-0.6, _GLF_IDENTITY(_GLF_IDENTITY(-6.6, (-6.6) - 0.0), clamp(-6.6, -6.6, -6.6))))) : injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(atan(injectionSwitch, vec2(-0.6, _GLF_IDENTITY(_GLF_IDENTITY(-6.6, (-6.6) - 0.0), clamp(-6.6, -6.6, -6.6))))) : injectionSwitch)).y) - 0.0)))))))) || false), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(dot(vec3(386.372, _GLF_IDENTITY(-445.485, max(-445.485, -445.485)), -2.8), vec3(-63.69, 8.9, -18.53))) : _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(atan(injectionSwitch, vec2(_GLF_IDENTITY(-0.6, (-0.6) * sqrt(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(-6.6, (-6.6) - 0.0), clamp(-6.6, _GLF_IDENTITY(-6.6, clamp(_GLF_IDENTITY(-6.6, max(_GLF_IDENTITY(-6.6, mix(float(-6.6), float(_GLF_FUZZED(-497.640)), bool(false))), -6.6)), -6.6, -6.6)), -6.6))))) : injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(atan(injectionSwitch, vec2(-0.6, _GLF_IDENTITY(_GLF_IDENTITY(-6.6, (-6.6) - 0.0), clamp(-6.6, -6.6, -6.6))))) : injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(atan(injectionSwitch, vec2(-0.6, _GLF_IDENTITY(_GLF_IDENTITY(-6.6, (-6.6) - 0.0), clamp(-6.6, -6.6, -6.6))))) : injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(atan(injectionSwitch, vec2(-0.6, _GLF_IDENTITY(_GLF_IDENTITY(-6.6, (-6.6) - 0.0), clamp(-6.6, -6.6, -6.6))))) : injectionSwitch)).y) - 0.0)))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(dot(vec3(386.372, _GLF_IDENTITY(-445.485, max(-445.485, _GLF_IDENTITY(-445.485, max(-445.485, -445.485)))), -2.8), vec3(-63.69, 8.9, -18.53))) : _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(atan(injectionSwitch, vec2(-0.6, _GLF_IDENTITY(_GLF_IDENTITY(-6.6, (-6.6) - 0.0), clamp(-6.6, -6.6, -6.6)))), (true ? _GLF_IDENTITY(atan(injectionSwitch, vec2(-0.6, _GLF_IDENTITY(_GLF_IDENTITY(-6.6, (-6.6) - 0.0), clamp(-6.6, -6.6, -6.6)))), (true ? atan(injectionSwitch, vec2(-0.6, _GLF_IDENTITY(_GLF_IDENTITY(-6.6, (-6.6) - 0.0), clamp(-6.6, -6.6, -6.6)))) : _GLF_FUZZED(abs(vec2(26.15, 153.103))))) : _GLF_FUZZED(vec2(-18.66, -24.83))))) : injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(atan(injectionSwitch, vec2(-0.6, _GLF_IDENTITY(_GLF_IDENTITY(-6.6, (-6.6) - 0.0), clamp(-6.6, -6.6, -6.6))))) : injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(atan(injectionSwitch, vec2(-0.6, _GLF_IDENTITY(_GLF_IDENTITY(-6.6, (-6.6) - 0.0), clamp(-6.6, -6.6, -6.6))))) : injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(atan(injectionSwitch, vec2(-0.6, _GLF_IDENTITY(_GLF_IDENTITY(-6.6, (-6.6) - 0.0), clamp(-6.6, -6.6, -6.6))))) : injectionSwitch)).y) - 0.0)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(dot(vec3(386.372, _GLF_IDENTITY(-445.485, max(-445.485, -445.485)), -2.8), vec3(-63.69, 8.9, -18.53))) : _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(atan(injectionSwitch, vec2(-0.6, _GLF_IDENTITY(_GLF_IDENTITY(-6.6, (-6.6) - 0.0), clamp(-6.6, -6.6, -6.6))))) : injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(atan(injectionSwitch, vec2(-0.6, _GLF_IDENTITY(_GLF_IDENTITY(-6.6, (-6.6) - 0.0), clamp(-6.6, -6.6, -6.6))))) : injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(atan(injectionSwitch, vec2(-0.6, _GLF_IDENTITY(_GLF_IDENTITY(-6.6, (-6.6) - 0.0), clamp(-6.6, -6.6, -6.6))))) : injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(atan(injectionSwitch, vec2(-0.6, _GLF_IDENTITY(_GLF_IDENTITY(-6.6, _GLF_IDENTITY((-6.6) - 0.0, mix(float(_GLF_FUZZED(-4312.5506)), float((-6.6) - 0.0), bool(true)))), clamp(-6.6, -6.6, -6.6))))) : injectionSwitch)).y) - 0.0)))))))) || false))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)) || (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), false || (! (false)))) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false)))), (_GLF_IDENTITY(! (false), (! (false)) && _GLF_IDENTITY(true, bool(bvec4(true, false, false, false))))) && true)))))), ! (! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), (_GLF_IDENTITY(! (false), (! (false)) && true)) && true)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))), false || (((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))))) && true, false || (_GLF_IDENTITY(_GLF_IDENTITY(((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))), false || (_GLF_IDENTITY(((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) && true)), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(! (false), (! (false)) && true))), (bool(! (_GLF_IDENTITY(! (false), (! (false)) && true)))) && true))))))), ! (_GLF_IDENTITY(! (((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))))), ! (! (! (((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))))))))))) && true, bool(bvec4(_GLF_IDENTITY(((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)) && true, bool(bvec4((! (false)) && true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), false || (((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (! (false)) && true)))))))) && true, false, true, false)))))), bool(bvec2(! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), false || (! (false)))) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false)))), (_GLF_IDENTITY(! (false), (! (false)) && _GLF_IDENTITY(true, bool(bvec4(true, false, false, false))))) && true)))))), ! (! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), (_GLF_IDENTITY(! (false), (! (false)) && true)) && true)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))), false || (((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))))) && true, false || (_GLF_IDENTITY(_GLF_IDENTITY(((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))), false || (_GLF_IDENTITY(((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) && true)), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(! (false), (! (false)) && true))), (bool(! (_GLF_IDENTITY(! (false), (! (false)) && true)))) && true))))))), ! (_GLF_IDENTITY(! (((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))))), ! (! (! (((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))))))))))) && true, bool(bvec4(_GLF_IDENTITY(((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)) && true, bool(bvec4((! (false)) && true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), false || (((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (! (false)) && true)))))))) && true, false, true, false)))))), true))))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(bool((false)))), true && (! (false)))) && true)) && true))))), ((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(bvec2((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(! (false), true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(bvec2((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(! (false), true)))), bool(bvec3(! (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(bvec2((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(! (false), true)))), false, true))))))), true, false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), bool(bvec2(! (false), true))))), true, false, false))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), (! (false)) && true)))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(bvec2((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(! (false), true))))), true, false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, (false) || false)))), bool(bvec2(! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((false), bool(bool((false)))), false)), true && (bool(bvec2(_GLF_IDENTITY((false), bool(bool((false)))), false))))), true))))), true, false, false))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), (! (false)) && true)))), true))))) && true))), true))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_base = _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u);
 uint virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u + (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(workgroup_id)))))))))), subgroup_local_id)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, (_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), (min(0u, 0u)) / 1u))) * _GLF_IDENTITY(((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), (_GLF_IDENTITY(uint(7u), 0u | (uint(7u)))) | (uint(7u))), uint(_GLF_IDENTITY(7u, (_GLF_IDENTITY(7u, clamp(7u, _GLF_IDENTITY(7u, ~ (~ (7u))), 7u))) | _GLF_IDENTITY((7u), ((7u)) | (_GLF_IDENTITY((7u), uint(uvec2((7u), 0u))))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(uvec2(uint(7u), 1u), (uvec2(uint(7u), 1u)) - uvec2(0u, 0u)))), 0u ^ (uint(7u))), uint(7u)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), 0u ^ (uint(7u))), (_GLF_IDENTITY(uint(7u), 0u ^ (uint(7u)))) | (_GLF_IDENTITY(uint(7u), 0u ^ (uint(7u))))), _GLF_IDENTITY(uint(7u), (false ? _GLF_FUZZED(workgroup_id) : uint(7u)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), 0u ^ _GLF_IDENTITY((uint(7u)), (_GLF_IDENTITY((uint(7u)), (true ? (uint(7u)) : _GLF_FUZZED(num_workgroup)))) + 0u)), uint(7u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), 0u ^ (uint(7u))), uint(7u)), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), 0u ^ (uint(7u))), uint(7u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), 0u ^ (uint(7u))), uint(7u))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), 0u ^ (uint(7u))), uint(7u)))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), _GLF_IDENTITY(0u, (0u) >> (0u << _GLF_IDENTITY(uint(7u), uint(7u)))) ^ _GLF_IDENTITY((uint(7u)), ((uint(7u))) << 0u)), uint(7u)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), 0u ^ (uint(7u))), uint(7u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), 0u ^ (uint(7u))), uint(7u))) * ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))), (((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), (_GLF_IDENTITY(uint(7u), 0u | (uint(7u)))) | (uint(7u))), uint(_GLF_IDENTITY(7u, (_GLF_IDENTITY(7u, clamp(7u, _GLF_IDENTITY(7u, ~ (~ (7u))), 7u))) | _GLF_IDENTITY((7u), ((7u)) | (_GLF_IDENTITY((7u), uint(uvec2((7u), 0u))))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(uvec2(uint(7u), 1u), (uvec2(uint(7u), 1u)) - uvec2(0u, 0u)))), 0u ^ (uint(7u))), uint(7u)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), 0u ^ (uint(7u))), (_GLF_IDENTITY(uint(7u), 0u ^ (uint(7u)))) | (_GLF_IDENTITY(uint(7u), 0u ^ (uint(7u))))), _GLF_IDENTITY(uint(7u), (false ? _GLF_FUZZED(workgroup_id) : uint(7u)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), 0u ^ _GLF_IDENTITY((uint(7u)), (_GLF_IDENTITY((uint(7u)), (true ? (uint(7u)) : _GLF_FUZZED(num_workgroup)))) + 0u)), uint(7u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), 0u ^ (uint(7u))), uint(7u)), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), 0u ^ (uint(7u))), uint(7u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), 0u ^ (uint(7u))), uint(7u))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), 0u ^ (uint(7u))), uint(7u)))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), _GLF_IDENTITY(0u, (0u) >> (0u << _GLF_IDENTITY(uint(7u), uint(7u)))) ^ _GLF_IDENTITY((uint(7u)), ((uint(7u))) << 0u)), uint(7u)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), 0u ^ (uint(7u))), uint(7u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), 0u ^ (uint(7u))), uint(7u))) * ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) & 11512u), 0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), max(min(_GLF_IDENTITY(0u, (0u) * 1u), 0u), min(0u, 0u)))) & 11512u), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), max(min(_GLF_IDENTITY(0u, (0u) * 1u), 0u), min(0u, 0u)))) & 11512u), min((_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), max(min(_GLF_IDENTITY(0u, (0u) * 1u), 0u), min(0u, 0u)))) & 11512u), (_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), max(min(_GLF_IDENTITY(0u, (0u) * 1u), 0u), min(0u, 0u)))) & 11512u)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), min(0u, _GLF_IDENTITY(0u, min(0u, 0u)))) & 11512u) : _GLF_FUZZED(subgroup_size))), 0u))), min(_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), max(min(_GLF_IDENTITY(0u, (0u) * 1u), 0u), min(0u, 0u)))) & 11512u), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), max(min(_GLF_IDENTITY(0u, (0u) * 1u), 0u), min(0u, 0u)))) & 11512u), min((_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), max(min(_GLF_IDENTITY(0u, (0u) * 1u), 0u), min(0u, 0u)))) & 11512u), (_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), max(min(_GLF_IDENTITY(0u, (0u) * 1u), 0u), min(0u, 0u)))) & 11512u)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), min(0u, _GLF_IDENTITY(0u, min(0u, 0u)))) & 11512u) : _GLF_FUZZED(subgroup_size))), 0u))), _GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), max(min(_GLF_IDENTITY(0u, (0u) * 1u), 0u), min(0u, 0u)))) & 11512u), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), max(min(_GLF_IDENTITY(0u, (0u) * 1u), 0u), min(0u, 0u)))) & 11512u), min((_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), max(min(_GLF_IDENTITY(0u, (0u) * 1u), 0u), min(0u, 0u)))) & 11512u), (_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), max(min(_GLF_IDENTITY(0u, (0u) * 1u), 0u), min(0u, 0u)))) & 11512u)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), min(0u, _GLF_IDENTITY(0u, min(0u, 0u)))) & 11512u) : _GLF_FUZZED(subgroup_size))), 0u))))), _GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, (_GLF_IDENTITY(0u, min(0u, 0u)) & 11512u), 0u))))), 0u ^ (_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), 0u)) & 11512u), 0u)))))) ^ 0u), (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, ~ (~ (2u)))), uint(_GLF_IDENTITY(2u, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(2u, max(2u, _GLF_IDENTITY(2u, max(2u, 2u)))), 0u)), min(uint(uvec2(_GLF_IDENTITY(2u, max(2u, _GLF_IDENTITY(2u, ~ (_GLF_IDENTITY(~ (2u), (~ (2u)) << 0u))))), 0u)), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2u, max(_GLF_IDENTITY(2u, uint(uvec2(2u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))), 2u)), (_GLF_IDENTITY(_GLF_IDENTITY(2u, (_GLF_IDENTITY(2u, 0u ^ (2u))) + (0u & 41332u)), max(_GLF_IDENTITY(2u, uint(uvec2(2u, ((_GLF_IDENTITY(1u, min(1u, 1u)) << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))), 2u))) ^ 0u), max(2u, 2u)), 0u)))))))) | (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) >> 0u), subgroup_local_id), 0u ^ (clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))))))));
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base))), 0u + (_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base))), uint(_GLF_IDENTITY(uint(0u ^ (_GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base)))), uint(uvec2(uint(0u ^ (_GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base)))), 0u)))))))) + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)), ((_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))) ^ 0u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read = 0;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, 1 * _GLF_IDENTITY((1), int(int((1)))))))), 4, 64, _GLF_IDENTITY(4, (4) | 0));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))))).x > injectionSwitch.y))))))
  barrier();
 if(_GLF_IDENTITY((subgroup_local_id % 2), ((subgroup_local_id % 2)) * 1u) == 0)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   _GLF_IDENTITY(read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY((int(3)), _GLF_IDENTITY(((int(3))), min(((int(3))), ((int(3))))) << int(_GLF_ZERO(0.0, injectionSwitch.x))) >> 0), int(3))) * (64)), 2), (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) && true)) ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (64) - 0), ((1 << _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, ~ (~ (3)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY((int(3)), ((_GLF_IDENTITY(int(3), (int(3)) | 0))) << int(_GLF_ZERO(0.0, injectionSwitch.x))) >> _GLF_IDENTITY(0, (0) / 1)), int(3))) * (64)), _GLF_IDENTITY(2, (_GLF_IDENTITY(2, max(2, 2))) | 0)), (read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY((int(3)), ((int(3))) << _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) | (int(_GLF_ZERO(0.0, injectionSwitch.x))))) >> 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY((int(3)), ((int(3))) << _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) | (int(_GLF_ZERO(0.0, injectionSwitch.x))))) >> 0), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY((int(3)), ((int(3))) << _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) | (int(_GLF_ZERO(0.0, injectionSwitch.x))))) >> 0), ~ (~ (_GLF_IDENTITY(int(3), _GLF_IDENTITY((int(3)), ((int(3))) << _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) | (int(_GLF_ZERO(0.0, injectionSwitch.x))))) >> 0))))) - 0)))), int(3))) * (64)), 2)) + 0u)));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))) && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))), true), true), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))), true), true))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))), true), true), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))), true), true))))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))), true), true), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))), true), true)))))))) && true))))))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && _GLF_IDENTITY(true, (true) && true))))
      barrier();
    }
  }
 else
  {
   read = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), ~ (~ _GLF_IDENTITY((atomicLoad(buf[virtual_gid], 4, 64, 2)), max(_GLF_IDENTITY((atomicLoad(buf[virtual_gid], 4, 64, 2)), clamp((atomicLoad(buf[virtual_gid], 4, 64, 2)), (atomicLoad(buf[virtual_gid], 4, 64, 2)), (atomicLoad(buf[virtual_gid], 4, 64, 2)))), (atomicLoad(buf[virtual_gid], 4, 64, 2)))))), (_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), _GLF_IDENTITY((_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (true ? atomicLoad(buf[virtual_gid], 4, 64, 2) : _GLF_FUZZED(subgroup_local_id)))) ^ 0u, uint(_GLF_IDENTITY(uint((_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (true ? atomicLoad(buf[virtual_gid], 4, 64, 2) : _GLF_FUZZED(subgroup_local_id)))) ^ 0u), max(uint((_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (true ? atomicLoad(buf[virtual_gid], 4, 64, 2) : _GLF_FUZZED(subgroup_local_id)))) ^ 0u), uint(_GLF_IDENTITY((_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (true ? atomicLoad(buf[virtual_gid], 4, 64, 2) : _GLF_FUZZED(subgroup_local_id)))), 0u | ((_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (true ? atomicLoad(buf[virtual_gid], 4, 64, 2) : _GLF_FUZZED(subgroup_local_id)))))) ^ 0u)))))), ~ (~ (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, _GLF_IDENTITY(min(_GLF_IDENTITY(64, (64) ^ 0), 64), (min(_GLF_IDENTITY(64, (64) ^ 0), 64)) ^ 0)), 2), max(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(_GLF_IDENTITY(buf[virtual_gid], uint(uvec4(buf[virtual_gid], uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u))), 4, 64, 2)) + 0u), _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid])), 4, 64, 2)) << 0u))))))) - _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), clamp((0u), (0u), (0u))) / 1u)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), ~ (~ (atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(99907))), 2)))), (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), ~ (~ (atomicLoad(buf[virtual_gid], 4, 64, 2))))) - 0u))), max(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], max(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) / 1u), buf[virtual_gid])), 4, 64, 2), atomicLoad(buf[virtual_gid], 4, 64, 2)));
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true && _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))) - sqrt(0.0)) > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2(bool(bool(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))) && (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) > injectionSwitch.y)))))))), true)))), (true && _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))) - sqrt(0.0)) > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2(bool(bool(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))) && (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) > injectionSwitch.y)))))))), true))))) && true))) || _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), false || (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((false)), ! (_GLF_IDENTITY(! (! ((false))), true && (! (! ((false))))))), _GLF_IDENTITY((! ((false))) || false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! ((false))) || false))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, (read) - 0u), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-93.06), _GLF_FUZZED(-187.103)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(exp(-221.758)) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-1.2)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, ((injectionSwitch.y) - 0.0) / 1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, ((injectionSwitch.y) - 0.0) / 1.0)), (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, ((injectionSwitch.y) - 0.0) / 1.0))) + _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, ((injectionSwitch.y) - 0.0) / 1.0)), mix(float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, ((injectionSwitch.y) - 0.0) / 1.0))), float(_GLF_FUZZED(61.82)), bool(false)))))), bool(true)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
