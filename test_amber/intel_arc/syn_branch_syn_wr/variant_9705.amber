#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_32 {
 uvec4 _f0;
 bool _f1;
 mat2x4 _f2;
} ;

struct _GLF_struct_31 {
 vec4 _f0;
} ;

struct _GLF_struct_30 {
 bvec4 _f0;
} ;

struct _GLF_struct_29 {
 mat2 _f0;
 int _f1;
 ivec2 _f2;
 bvec3 _f3;
 mat3x4 _f4;
 bvec3 _f5;
 vec4 _f6;
} ;

struct _GLF_struct_33 {
 _GLF_struct_29 _f0;
 _GLF_struct_30 _f1;
 int _f2;
 _GLF_struct_31 _f3;
 uint next_virtual_gid;
 mat2x3 _f4;
 _GLF_struct_32 _f5;
} ;

struct _GLF_struct_34 {
 _GLF_struct_33 _f0;
 vec4 _f1;
} ;

struct _GLF_struct_27 {
 ivec3 _f0;
} ;

struct _GLF_struct_25 {
 ivec2 _f0;
} ;

struct _GLF_struct_24 {
 mat2x4 _f0;
 uint _f1;
 mat2x3 _f2;
 mat3x2 _f3;
 vec4 _f4;
} ;

struct _GLF_struct_26 {
 _GLF_struct_24 _f0;
 _GLF_struct_25 _f1;
 uvec4 _f2;
} ;

struct _GLF_struct_22 {
 uvec3 _f0;
} ;

struct _GLF_struct_23 {
 _GLF_struct_22 _f0;
 uvec2 _f1;
 int _f2;
 uvec2 _f3;
} ;

struct _GLF_struct_20 {
 mat4x2 _f0;
 ivec3 _f1;
 float _f2;
 mat4 _f3;
 uint _f4;
} ;

struct _GLF_struct_19 {
 float _f0;
} ;

struct _GLF_struct_18 {
 uvec3 _f0;
 vec3 _f1;
 uvec3 _f2;
 mat3x4 _f3;
 mat4x3 _f4;
 uvec2 _f5;
} ;

struct _GLF_struct_21 {
 _GLF_struct_18 _f0;
 bvec2 _f1;
 _GLF_struct_19 _f2;
 _GLF_struct_20 _f3;
 vec3 _f4;
} ;

struct _GLF_struct_16 {
 uvec4 _f0;
 mat2x3 _f1;
 uint _f2;
 ivec3 _f3;
} ;

struct _GLF_struct_15 {
 uvec3 _f0;
 mat4x2 _f1;
 int _f2;
 mat4 _f3;
 float _f4;
 vec2 _f5;
 ivec4 _f6;
} ;

struct _GLF_struct_17 {
 int _f0;
 _GLF_struct_15 _f1;
 _GLF_struct_16 _f2;
 ivec3 _f3;
 bvec3 _f4;
} ;

struct _GLF_struct_28 {
 _GLF_struct_17 _f0;
 _GLF_struct_21 _f1;
 _GLF_struct_23 _f2;
 ivec3 _f3;
 uint subgroup_id;
 _GLF_struct_26 _f4;
 float _f5;
 _GLF_struct_27 _f6;
} ;

struct _GLF_struct_13 {
 mat3 _f0;
} ;

struct _GLF_struct_11 {
 vec2 _f0;
 mat3 _f1;
 vec2 _f2;
 uvec3 _f3;
} ;

struct _GLF_struct_12 {
 mat2 _f0;
 _GLF_struct_11 _f1;
 float _f2;
} ;

struct _GLF_struct_9 {
 uint _f0;
 mat4x3 _f1;
} ;

struct _GLF_struct_10 {
 uint read;
 uvec3 _f0;
 float _f1;
 bool _f2;
 bvec4 _f3;
 _GLF_struct_9 _f4;
} ;

struct _GLF_struct_14 {
 uvec2 _f0;
 vec3 _f1;
 _GLF_struct_10 _f2;
 _GLF_struct_12 _f3;
 vec4 _f4;
 _GLF_struct_13 _f5;
 bvec2 _f6;
} ;

struct _GLF_struct_6 {
 int _f0;
 mat4x3 _f1;
} ;

struct _GLF_struct_7 {
 mat2x4 _f0;
 mat3x2 _f1;
 mat3 _f2;
 _GLF_struct_6 _f3;
} ;

struct _GLF_struct_8 {
 bvec4 _f0;
 uint workgroup_id;
 _GLF_struct_7 _f1;
} ;

struct _GLF_struct_4 {
 mat4x2 _f0;
 uint subgroup_local_id;
} ;

struct _GLF_struct_2 {
 float _f0;
 vec4 _f1;
 mat3x2 _f2;
} ;

struct _GLF_struct_1 {
 ivec2 _f0;
 vec2 _f1;
 float _f2;
} ;

struct _GLF_struct_0 {
 ivec2 _f0;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
} ;

struct _GLF_struct_5 {
 _GLF_struct_3 _f0;
 _GLF_struct_4 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_28 _GLF_struct_replacement_28 = _GLF_struct_28(_GLF_struct_17(1, _GLF_struct_15(uvec3(1u), mat4x2(1.0), 1, mat4(1.0), 1.0, vec2(1.0), ivec4(1)), _GLF_struct_16(uvec4(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uvec3(1u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))), 1u)))) | (1u))), mat2x3(1.0), 1u, ivec3(1)), ivec3(1), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec3(bvec3(true))), bvec3(bvec3(bvec3(bvec3(bvec3(true))))))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(true))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (_GLF_IDENTITY(true, ! (! (true))))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, ! (! (true))))), ! (! (! (! (_GLF_IDENTITY(true, ! (! (true))))))))))))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))))))), true))), false)))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(true))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))))))), true))), false)))), false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(true))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (true))))))))))))), true))), false)))), false)), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(true))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))))))), true))), false)))), false)), true)))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true))))))))), bvec3(bvec3(bvec3(bvec3(bvec3(true))))))), false))), false)))), _GLF_struct_21(_GLF_struct_18(uvec3(1u), vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0))), uvec3(1u), mat3x4(1.0), mat4x3(1.0), uvec2(1u)), bvec2(true), _GLF_struct_19(1.0), _GLF_struct_20(mat4x2(1.0), ivec3(1), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, 1.0, 1.0)), min(float(mat2x3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat2x3(1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 1.0))))), mat4(1.0), 1u), vec3(1.0)), _GLF_struct_23(_GLF_struct_22(uvec3(1u)), uvec2(_GLF_IDENTITY(1u, 0u | (1u))), 1, uvec2(1u)), ivec3(1), gl_SubgroupID, _GLF_struct_26(_GLF_struct_24(mat2x4(1.0), 1u, mat2x3(1.0), mat3x2(1.0), vec4(1.0)), _GLF_struct_25(ivec2(1)), uvec4(_GLF_IDENTITY(1u, 0u + (1u)))), 1.0, _GLF_struct_27(ivec3(1)));
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(_GLF_struct_3(_GLF_struct_0(_GLF_IDENTITY(ivec2(1), ~ (_GLF_IDENTITY(~ (ivec2(1)), clamp(~ (ivec2(1)), ~ (ivec2(1)), ~ (ivec2(1))))))), _GLF_struct_1(ivec2(1), vec2(1.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(determinant(mat4(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, _GLF_ZERO(0.0, injectionSwitch.x) + (_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) / 1.0))))), 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-919.525)), float(0.0), bool(true))))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), max(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), (true ? dot(vec2(1.0, 0.0), vec2(1.0, 0.0)) : _GLF_FUZZED(-67.43))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), length(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), (true ? determinant(mat4(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, _GLF_ZERO(0.0, injectionSwitch.x) + (1.0)))), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-919.525)), float(0.0), bool(true))))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), length(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED((0.5 / 9.7)))) * (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-54.38)), bool(false)))) - 0.0), _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY((true ? _GLF_IDENTITY(0.0, (0.0) - 0.0) : _GLF_FUZZED(acos(45.63))), 0.0 + (_GLF_IDENTITY((true ? _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, sin(0.0) + (0.0)) : _GLF_FUZZED(-5064.0636)))) - 0.0) : _GLF_FUZZED(acos(45.63))), float(mat2x4((true ? _GLF_IDENTITY(0.0, (0.0) - 0.0) : _GLF_FUZZED(acos(45.63))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))) + 0.0), 1.0, 0.0, 1.0, 0.0)))))), (determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), clamp(_GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) * mat2(1.0)), _GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) * mat2(1.0)), _GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2((vec2(1.0, 0.0))[0], (vec2(1.0, 0.0))[1]), vec2(_GLF_FUZZED(vec2(-3.4, 74.06).t), _GLF_FUZZED(532.364)), bvec2(false, false))))), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), length(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))) * (_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), (_GLF_IDENTITY(0.0, min(0.0, 0.0))) / 1.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)))))), 0.0, exp(0.0), 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))))), 1.0, 1.0, 1.0, 1.0, tan(0.0), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, exp(log(1.0)), 0.0))), (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(0.0, (0.0) - 0.0) : _GLF_FUZZED(acos(45.63))))) + 0.0), 1.0, 0.0, 1.0, 0.0))))))) / 1.0))), _GLF_struct_2(1.0, vec4(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 1.0, 0.0, log(1.0), _GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0)))), 1.0), transpose(transpose(mat4x2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-1.7))))), 1.0, 1.0)), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) - determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 0.0)), log(_GLF_IDENTITY(1.0, max(1.0, 1.0))), 1.0, 1.0))))))), mat3x2(1.0))), _GLF_struct_4(mat4x2(1.0), gl_SubgroupInvocationID));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | _GLF_IDENTITY((gl_NumWorkGroups), _GLF_IDENTITY(min((gl_NumWorkGroups), _GLF_IDENTITY((gl_NumWorkGroups), _GLF_IDENTITY(((gl_NumWorkGroups)), uvec3(0u, 0u, 0u) | (((gl_NumWorkGroups)))) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, 0u + (0u)), 0u, 0u), uvec3(1u, 1u, 1u) * (uvec3(_GLF_IDENTITY(0u, 0u + (0u)), 0u, 0u))))), uvec3(uvec4(min((gl_NumWorkGroups), _GLF_IDENTITY((gl_NumWorkGroups), _GLF_IDENTITY(((gl_NumWorkGroups)), uvec3(0u, 0u, 0u) | (((gl_NumWorkGroups)))) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, 0u + (0u)), 0u, 0u), uvec3(1u, 1u, 1u) * (uvec3(_GLF_IDENTITY(0u, 0u + (0u)), 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), uint(uvec3(~ (0u), 0u, 1u)))))))))), 0u))))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(56.91), _GLF_FUZZED(4.7)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))), bool(bvec4(! (! (_GLF_DEAD(false))), false, true, false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))[1])).y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), bool(_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))), bool(bvec4(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))), true, false, true)))))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))), true)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec4(-24.49, 1393.1561, 3623.8381, 3.3).q), _GLF_FUZZED(-5196.9178)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec4(-24.49, 1393.1561, 3623.8381, 3.3).q), _GLF_FUZZED(-5196.9178)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec4(-24.49, 1393.1561, 3623.8381, 3.3).q), _GLF_FUZZED(-5196.9178)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec4(-24.49, 1393.1561, 3623.8381, 3.3).q), _GLF_FUZZED(-5196.9178)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x)) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec4(-24.49, 1393.1561, 3623.8381, 3.3).q), _GLF_FUZZED(-5196.9178)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))).x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (false ? _GLF_FUZZED(46620u) : gl_WorkGroupSize.x))) ^ 0u), (gl_WorkGroupSize.x) << 0u))), gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u), 1u * (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u), 1u * (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u)))))), gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u), 1u * (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u))), _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec3(gl_WorkGroupSize.x, 1u, 1u))))), gl_WorkGroupSize.x))) | (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u), 1u * (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u))), gl_WorkGroupSize.x, gl_WorkGroupSize.x))))) - 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) + 0.0) > _GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 0.0, 0.0, length(tan(vec4(0.0, 0.0, 0.0, 0.0))), 1.0, 0.0, 0.0, 1.0))).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) || false)))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
          return;
         return;
        }
       return;
      }
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true), (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_DEAD(false))))), false || (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), bool(bool((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(bvec4(true), gl_WorkGroupID.x, _GLF_struct_7(mat2x4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(5482.7416)))), mat3x2(1.0), mat3(1.0), _GLF_struct_6(1, mat4x3(1.0))));
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(_GLF_struct_replacement_8.workgroup_id, (_GLF_struct_replacement_8.workgroup_id) >> 0u);
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_28.subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_struct_replacement_28.subgroup_id, _GLF_struct_replacement_28.subgroup_id), min(max(_GLF_struct_replacement_28.subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_28.subgroup_id, 1u * (_GLF_IDENTITY(_GLF_struct_replacement_28.subgroup_id, 1u * (_GLF_struct_replacement_28.subgroup_id)))), (_GLF_struct_replacement_28.subgroup_id) - 0u)), max(_GLF_struct_replacement_28.subgroup_id, _GLF_struct_replacement_28.subgroup_id))), min(max(_GLF_struct_replacement_28.subgroup_id, _GLF_struct_replacement_28.subgroup_id), max(_GLF_struct_replacement_28.subgroup_id, _GLF_struct_replacement_28.subgroup_id)))) * subgroup_size + _GLF_struct_replacement_5._f1.subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(-2980.7362)), vec2(_GLF_FUZZED(-26.36), (injectionSwitch)[1]), bvec2(false, true))).y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && ((false))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), abs(0.0)))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) && true)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
  return;
 _GLF_struct_34 _GLF_struct_replacement_34 = _GLF_struct_34(_GLF_struct_33(_GLF_struct_29(mat2(1.0), _GLF_IDENTITY(1, 0 ^ (1)), ivec2(1), bvec3(true), mat3x4(1.0), bvec3(true), vec4(1.0)), _GLF_struct_30(bvec4(true)), 1, _GLF_struct_31(vec4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-5.2), clamp(_GLF_IDENTITY(_GLF_FUZZED(-5.2), (_GLF_FUZZED(-5.2)) - 0.0), _GLF_FUZZED(-5.2), _GLF_FUZZED(-5.2)))), float(1.0), bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(true, false, true))), bvec3(bvec3(bvec3(bvec3(bvec3(true, false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec4(! (true), false, false, false))))))))))))))))), 1.0)))), workgroup_base + _GLF_struct_replacement_28.subgroup_id * subgroup_size + _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, min(_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, min(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, _GLF_struct_replacement_5._f1.subgroup_local_id + 1)), _GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + _GLF_IDENTITY(1, (0 ^ 0) + (1)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, (_GLF_struct_replacement_5._f1.subgroup_local_id + 1) | (_GLF_struct_replacement_5._f1.subgroup_local_id + 1))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id, clamp(_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id, (_GLF_struct_replacement_5._f1.subgroup_local_id) - 0u), _GLF_struct_replacement_5._f1.subgroup_local_id, _GLF_struct_replacement_5._f1.subgroup_local_id)) + 1, (_GLF_struct_replacement_5._f1.subgroup_local_id + 1) | (_GLF_struct_replacement_5._f1.subgroup_local_id + 1)))) / 1u) * 1u), _GLF_struct_replacement_5._f1.subgroup_local_id + 1), (clamp(_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id, (false ? _GLF_FUZZED(max(45606u, workgroup_base)) : _GLF_struct_replacement_5._f1.subgroup_local_id)) + 1, _GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + _GLF_IDENTITY(1, (0 ^ 0) + (1)), (_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec4(1, 0, 0, 1)))) | (1))) / 1), (_GLF_struct_replacement_5._f1.subgroup_local_id + 1) | (_GLF_struct_replacement_5._f1.subgroup_local_id + 1))) * 1u), _GLF_struct_replacement_5._f1.subgroup_local_id + 1)) | (_GLF_IDENTITY(clamp(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, _GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(0, clamp(0, 0, 0)) ^ 0) + (1)), (_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, (_GLF_struct_replacement_5._f1.subgroup_local_id + 1) | (_GLF_struct_replacement_5._f1.subgroup_local_id + 1))) * 1u), _GLF_struct_replacement_5._f1.subgroup_local_id + 1), (clamp(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, _GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + _GLF_IDENTITY(1, (0 ^ 0) + (1)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, (_GLF_struct_replacement_5._f1.subgroup_local_id + 1) | (_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, 0u + (_GLF_struct_replacement_5._f1.subgroup_local_id + 1))))), ((_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, (_GLF_struct_replacement_5._f1.subgroup_local_id + 1) | (_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, 0u + (_GLF_struct_replacement_5._f1.subgroup_local_id + 1)))))) / 1u) * 1u), _GLF_struct_replacement_5._f1.subgroup_local_id + 1)) << 0u)))), _GLF_struct_replacement_5._f1.subgroup_local_id + 1))) % subgroup_size), clamp(((_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, min(_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, clamp(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, _GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, (_GLF_struct_replacement_5._f1.subgroup_local_id + 1) | (_GLF_struct_replacement_5._f1.subgroup_local_id + 1))) * 1u), _GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id, (true ? _GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id, max(_GLF_struct_replacement_5._f1.subgroup_local_id, _GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id, (_GLF_struct_replacement_5._f1.subgroup_local_id) - 0u))) : _GLF_FUZZED(uint(false)))) + 1)), _GLF_struct_replacement_5._f1.subgroup_local_id + 1))) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 0u, (1u & 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))), uint(uvec3(subgroup_size, 0u, (1u & 1u)))), 1u, 1u)), 0u ^ (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))), uint(uvec3(subgroup_size, 0u, (1u & 1u)))), 1u, 1u), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))), uint(uvec3(subgroup_size, 0u, (1u & 1u)))), 1u, 1u)) | (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))), uint(uvec3(subgroup_size, 0u, (1u & 1u)))), 1u, 1u)))))), (false ? _GLF_FUZZED(46014u) : uint(uvec3(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_size, 0u, (1u & 1u)), uvec3(0u, 0u, 0u) + (uvec3(subgroup_size, 0u, (1u & 1u)))))), 1u, 1u)))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_size) : _GLF_struct_replacement_5._f1.subgroup_local_id + 1)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, max(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, _GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, (true ? _GLF_struct_replacement_5._f1.subgroup_local_id + 1 : _GLF_FUZZED(num_workgroup))))), clamp(_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, (_GLF_struct_replacement_5._f1.subgroup_local_id + 1) | 0u)), (false ? _GLF_FUZZED(subgroup_size) : ~ (_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, (_GLF_struct_replacement_5._f1.subgroup_local_id + 1) | 0u)))))), _GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, (_GLF_struct_replacement_5._f1.subgroup_local_id + 1) | (_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id, ~ (~ (_GLF_struct_replacement_5._f1.subgroup_local_id))) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) << 0)))) * 1u), _GLF_struct_replacement_5._f1.subgroup_local_id + 1)), _GLF_struct_replacement_5._f1.subgroup_local_id + 1))), max((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_size) : _GLF_struct_replacement_5._f1.subgroup_local_id + 1)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, max(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, _GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, (true ? _GLF_struct_replacement_5._f1.subgroup_local_id + 1 : _GLF_FUZZED(num_workgroup))))), clamp(_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, (_GLF_struct_replacement_5._f1.subgroup_local_id + 1) | 0u)), (false ? _GLF_FUZZED(subgroup_size) : ~ (_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, (_GLF_struct_replacement_5._f1.subgroup_local_id + 1) | 0u)))))), _GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, (_GLF_struct_replacement_5._f1.subgroup_local_id + 1) | (_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id, ~ (~ (_GLF_struct_replacement_5._f1.subgroup_local_id))) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) << 0)))) * 1u), _GLF_struct_replacement_5._f1.subgroup_local_id + 1)), _GLF_struct_replacement_5._f1.subgroup_local_id + 1))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_size) : _GLF_struct_replacement_5._f1.subgroup_local_id + 1)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, max(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, _GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, (true ? _GLF_struct_replacement_5._f1.subgroup_local_id + 1 : _GLF_FUZZED(num_workgroup))))), clamp(_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, (_GLF_struct_replacement_5._f1.subgroup_local_id + 1) | 0u)), (false ? _GLF_FUZZED(subgroup_size) : ~ (_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, (_GLF_struct_replacement_5._f1.subgroup_local_id + 1) | 0u)))))), _GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, (_GLF_struct_replacement_5._f1.subgroup_local_id + 1) | (_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id, ~ (~ (_GLF_struct_replacement_5._f1.subgroup_local_id))) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) << 0)))) * 1u), _GLF_struct_replacement_5._f1.subgroup_local_id + 1)), _GLF_struct_replacement_5._f1.subgroup_local_id + 1))))) % _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (1) - 0)) | (1), clamp(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) - 0)) | (1), max((_GLF_IDENTITY(1, (1) - 0)) | (1), (_GLF_IDENTITY(1, (1) - 0)) | (1))), (_GLF_IDENTITY(1, (1) - 0)) | (1), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), (_GLF_IDENTITY(1, (1) - 0)) << (0 << _GLF_IDENTITY(int(8), int(8))))) | (1)))), clamp(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, _GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + _GLF_IDENTITY(1, 0 | (1)), (_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, (_GLF_struct_replacement_5._f1.subgroup_local_id + 1) | _GLF_IDENTITY((_GLF_struct_replacement_5._f1.subgroup_local_id + 1), ((_GLF_struct_replacement_5._f1.subgroup_local_id + 1)) / 1u))) * 1u), _GLF_struct_replacement_5._f1.subgroup_local_id + 1)), _GLF_struct_replacement_5._f1.subgroup_local_id + 1), (_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, _GLF_IDENTITY(clamp(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, _GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, (_GLF_struct_replacement_5._f1.subgroup_local_id + 1) | (_GLF_struct_replacement_5._f1.subgroup_local_id + 1))), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, (_GLF_struct_replacement_5._f1.subgroup_local_id + 1) | (_GLF_struct_replacement_5._f1.subgroup_local_id + 1))), min((_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, (_GLF_struct_replacement_5._f1.subgroup_local_id + 1) | (_GLF_struct_replacement_5._f1.subgroup_local_id + 1))), (_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, (_GLF_struct_replacement_5._f1.subgroup_local_id + 1) | (_GLF_struct_replacement_5._f1.subgroup_local_id + _GLF_IDENTITY(1, (1) | _GLF_IDENTITY(0, min(0, 0)))))))), (_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, (_GLF_struct_replacement_5._f1.subgroup_local_id + 1) | (_GLF_struct_replacement_5._f1.subgroup_local_id + 1))))) * 1u), _GLF_struct_replacement_5._f1.subgroup_local_id + 1), clamp(clamp(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, _GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, (_GLF_struct_replacement_5._f1.subgroup_local_id + 1) | (_GLF_struct_replacement_5._f1.subgroup_local_id + 1))) * 1u), _GLF_struct_replacement_5._f1.subgroup_local_id + 1), clamp(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, _GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, (_GLF_struct_replacement_5._f1.subgroup_local_id + 1) | (_GLF_struct_replacement_5._f1.subgroup_local_id + 1))) * 1u), _GLF_struct_replacement_5._f1.subgroup_local_id + 1), clamp(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, _GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, (_GLF_struct_replacement_5._f1.subgroup_local_id + 1) | (_GLF_struct_replacement_5._f1.subgroup_local_id + 1))) * 1u), _GLF_struct_replacement_5._f1.subgroup_local_id + 1)))), _GLF_struct_replacement_5._f1.subgroup_local_id + 1), ~ (~ (min(_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, clamp(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, _GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, _GLF_IDENTITY((_GLF_struct_replacement_5._f1.subgroup_local_id + 1), 0u ^ ((_GLF_struct_replacement_5._f1.subgroup_local_id + 1))) | (_GLF_struct_replacement_5._f1.subgroup_local_id + 1))) * _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, 0u ^ (1u)), 1u))), _GLF_struct_replacement_5._f1.subgroup_local_id + 1)), _GLF_struct_replacement_5._f1.subgroup_local_id + 1))))) >> 0u))) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), min(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))))), max(((_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, min(_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, clamp(_GLF_struct_replacement_5._f1.subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1)), _GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, (_GLF_struct_replacement_5._f1.subgroup_local_id + 1) | (_GLF_struct_replacement_5._f1.subgroup_local_id + 1))) * 1u), _GLF_struct_replacement_5._f1.subgroup_local_id + 1)), _GLF_struct_replacement_5._f1.subgroup_local_id + 1))) % subgroup_size), ((_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, min(_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, clamp(_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, (_GLF_struct_replacement_5._f1.subgroup_local_id + 1) / 1u), _GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, (_GLF_struct_replacement_5._f1.subgroup_local_id + 1) | (_GLF_struct_replacement_5._f1.subgroup_local_id + 1))) * 1u), _GLF_struct_replacement_5._f1.subgroup_local_id + 1)), _GLF_struct_replacement_5._f1.subgroup_local_id + 1))) % subgroup_size))), (false ? _GLF_FUZZED(176588u) : _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1))) + 0), _GLF_IDENTITY((_GLF_IDENTITY(1, (1) - 0)) | (1), clamp(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) - 0)) | (1), max((_GLF_IDENTITY(1, (1) - 0)) | (1), (_GLF_IDENTITY(1, (1) - 0)) | (1))), (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((1))) - (0 >> _GLF_IDENTITY(int(3), int(3)))), (1) - 0)) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) | (1))), (_GLF_IDENTITY(1, (1) - 0)) | (1)))), clamp(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, _GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + _GLF_IDENTITY(1, 0 | (1)), (_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, (_GLF_struct_replacement_5._f1.subgroup_local_id + 1) | _GLF_IDENTITY((_GLF_struct_replacement_5._f1.subgroup_local_id + 1), ((_GLF_struct_replacement_5._f1.subgroup_local_id + 1)) / 1u))) * _GLF_IDENTITY(1u, 0u | (1u))), _GLF_struct_replacement_5._f1.subgroup_local_id + 1)), _GLF_struct_replacement_5._f1.subgroup_local_id + 1), (_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, _GLF_IDENTITY(clamp(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, _GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, (_GLF_struct_replacement_5._f1.subgroup_local_id + 1) | (_GLF_struct_replacement_5._f1.subgroup_local_id + 1))) * 1u), _GLF_struct_replacement_5._f1.subgroup_local_id + 1), clamp(clamp(_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id, 0u + (_GLF_struct_replacement_5._f1.subgroup_local_id)) + 1, _GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, (_GLF_struct_replacement_5._f1.subgroup_local_id + 1) | (_GLF_struct_replacement_5._f1.subgroup_local_id + 1))) * 1u, ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, (_GLF_struct_replacement_5._f1.subgroup_local_id + 1) | (_GLF_struct_replacement_5._f1.subgroup_local_id + 1))) * 1u), (true ? ~ ((_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, (_GLF_struct_replacement_5._f1.subgroup_local_id + 1) | (_GLF_struct_replacement_5._f1.subgroup_local_id + 1))) * 1u) : _GLF_FUZZED(packUnorm2x16(injectionSwitch))))))), _GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id, (_GLF_struct_replacement_5._f1.subgroup_local_id) * 1u) + 1), clamp(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, _GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, (_GLF_struct_replacement_5._f1.subgroup_local_id + 1) | (_GLF_struct_replacement_5._f1.subgroup_local_id + 1))) * 1u), _GLF_struct_replacement_5._f1.subgroup_local_id + 1), clamp(_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id, (0u << _GLF_IDENTITY(uint(0u), uint(0u))) | (_GLF_struct_replacement_5._f1.subgroup_local_id)) + 1, _GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, (_GLF_struct_replacement_5._f1.subgroup_local_id + 1) | (_GLF_struct_replacement_5._f1.subgroup_local_id + 1))) * 1u), _GLF_struct_replacement_5._f1.subgroup_local_id + 1)))), _GLF_struct_replacement_5._f1.subgroup_local_id + 1), ~ (~ (min(_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id, (_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id, max(_GLF_struct_replacement_5._f1.subgroup_local_id, _GLF_struct_replacement_5._f1.subgroup_local_id))) | (_GLF_struct_replacement_5._f1.subgroup_local_id)) + 1, _GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, _GLF_IDENTITY((_GLF_struct_replacement_5._f1.subgroup_local_id + 1), 0u ^ ((_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, ~ (~ (_GLF_struct_replacement_5._f1.subgroup_local_id + 1)))) - 0u)))) | (_GLF_struct_replacement_5._f1.subgroup_local_id + 1))) * _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, 0u ^ _GLF_IDENTITY((1u), 0u ^ ((1u)))), 1u))), _GLF_struct_replacement_5._f1.subgroup_local_id + 1), uint(uvec3(clamp(_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id, max(_GLF_struct_replacement_5._f1.subgroup_local_id, _GLF_struct_replacement_5._f1.subgroup_local_id))), min((_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id, max(_GLF_struct_replacement_5._f1.subgroup_local_id, _GLF_struct_replacement_5._f1.subgroup_local_id))), (_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id, max(_GLF_struct_replacement_5._f1.subgroup_local_id, _GLF_struct_replacement_5._f1.subgroup_local_id))))) | (_GLF_struct_replacement_5._f1.subgroup_local_id)) + 1, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, (true ? _GLF_struct_replacement_5._f1.subgroup_local_id + 1 : _GLF_FUZZED(subgroup_size))))), (false ? _GLF_FUZZED(num_workgroup) : uint(uint(_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, (true ? _GLF_struct_replacement_5._f1.subgroup_local_id + 1 : _GLF_FUZZED(subgroup_size)))))))), (_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_struct_replacement_5._f1.subgroup_local_id + 1), 0u ^ ((_GLF_struct_replacement_5._f1.subgroup_local_id + 1))), uint(uint(_GLF_IDENTITY((_GLF_struct_replacement_5._f1.subgroup_local_id + 1), 0u ^ ((_GLF_struct_replacement_5._f1.subgroup_local_id + 1)))))) | (_GLF_struct_replacement_5._f1.subgroup_local_id + 1))) * _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) << _GLF_IDENTITY(0u, (0u) / 1u)), 1u, 1u)), _GLF_IDENTITY(1u, 0u ^ (1u)), 1u))), _GLF_struct_replacement_5._f1.subgroup_local_id + 1), 0u, 0u)))), _GLF_struct_replacement_5._f1.subgroup_local_id + 1))))) >> 0u))) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), min(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))))), max(((_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, min(_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, clamp(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, _GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, (_GLF_struct_replacement_5._f1.subgroup_local_id + 1) | (_GLF_struct_replacement_5._f1.subgroup_local_id + 1))) * _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) + 0u)) / 1u)), _GLF_struct_replacement_5._f1.subgroup_local_id + 1)), _GLF_struct_replacement_5._f1.subgroup_local_id + 1))) % subgroup_size), ((_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, min(_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, clamp(_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, (_GLF_struct_replacement_5._f1.subgroup_local_id + 1) / 1u), _GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_local_id + 1, (_GLF_struct_replacement_5._f1.subgroup_local_id + 1) | (_GLF_struct_replacement_5._f1.subgroup_local_id + 1))) * 1u), _GLF_struct_replacement_5._f1.subgroup_local_id + 1)), _GLF_struct_replacement_5._f1.subgroup_local_id + 1))) % subgroup_size))))))), mat2x3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(7353.6632)), float(1.0), bool(true)))), _GLF_struct_32(uvec4(1u), true, mat2x4(1.0))), vec4(1.0));
 atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_34._f0.next_virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_34._f0.next_virtual_gid, min(_GLF_struct_replacement_34._f0.next_virtual_gid, _GLF_struct_replacement_34._f0.next_virtual_gid)), _GLF_struct_replacement_34._f0.next_virtual_gid)), (_GLF_struct_replacement_34._f0.next_virtual_gid) - 0u), (true ? _GLF_IDENTITY(_GLF_struct_replacement_34._f0.next_virtual_gid, _GLF_IDENTITY((_GLF_struct_replacement_34._f0.next_virtual_gid) - 0u, ((_GLF_struct_replacement_34._f0.next_virtual_gid) - 0u) | ((_GLF_struct_replacement_34._f0.next_virtual_gid) - 0u))) : _GLF_FUZZED(virtual_gid)))], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-6827.1611)), _GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), true))))))))), clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-6827.1611)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-6827.1611)), bool(false))), min(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-6827.1611)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) * 1.0) * 1.0)), float(mat4x3(float(injectionSwitch.x), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (true ? _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) / 1.0) : _GLF_FUZZED(-6.5))), 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))), abs(1.0), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))), float(_GLF_FUZZED(-6827.1611)), bool(false))), (false ? _GLF_FUZZED(-57.08) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(-6827.1611), (_GLF_FUZZED(-6827.1611)) / 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), false || (_GLF_IDENTITY(bool(false), (bool(false)) || false))))), mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-6827.1611)), bool(false)))), float(_GLF_FUZZED(-9710.9401)), bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec3(bool(bool(false)), true, true))))) || false)))))))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-6827.1611)), bool(false))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0))) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), injectionSwitch)).y, injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))), _GLF_IDENTITY(false || (bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false || (false || (bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), ! (! (bool(bvec4(false, false, true, true))))))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_DEAD(false))))) && true))))) || false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 _GLF_struct_14 _GLF_struct_replacement_14 = _GLF_struct_14(_GLF_IDENTITY(uvec2(1u), ~ (_GLF_IDENTITY(~ (uvec2(1u)), min(~ (uvec2(1u)), ~ (uvec2(1u)))))), vec3(1.0), _GLF_struct_10(atomicLoad(buf[virtual_gid], 4, 64, 0), uvec3(1u), 1.0, true, bvec4(true), _GLF_struct_9(1u, mat4x3(1.0))), _GLF_struct_12(mat2(1.0), _GLF_struct_11(vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec4(bvec3(true, false, true), true))))) ? _GLF_IDENTITY(1.0, float(float(1.0))) : _GLF_FUZZED(7.0)))), mat3(1.0), vec2(1.0), uvec3(1u)), 1.0), vec4(1.0), _GLF_struct_13(mat3(1.0)), bvec2(true));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec2(! (! (false)), true))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_struct_replacement_5._f1.subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), ! (! (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), ! (! (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) && true))))))), ! (! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), ! (! (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))))))))), false || (injectionSwitch.x > injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             return;
            }
           return;
          }
         return;
        }
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   int i = 0;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, sin(0.0), 0.0, 0.0))), injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec4(false || (false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
              return;
             return;
            }
           return;
          }
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, abs(1.0), 0.0))) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x), 1.0, 0.0, 0.0, abs(1.0), 0.0))) > injectionSwitch.y)))) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   atomicStore(checker[virtual_gid], _GLF_struct_replacement_14._f2.read, 4, _GLF_IDENTITY(64, 1 * (_GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, (64) | (64)), 64, 64)))), 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), 0.0, sqrt(1.0), 0.0, sqrt(0.0), 1.0, 1.0, 1.0, 1.0, 0.0, round(length(normalize(1.0))), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(444.177)), float(1.0), bool(true))))), 0.0, 1.0, 1.0))).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, true)))))
            return;
           return;
          }
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) && true))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true)))))) || false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool((injectionSwitch.x > injectionSwitch.y))), false, true)))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
      return;
     return;
    }
   atomicStore(checker[_GLF_IDENTITY(virtual_gid, uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(subgroup_size) : virtual_gid)), 0u)), (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(virtual_gid, (false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size))), min(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size))), max(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), _GLF_IDENTITY(clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)), min(clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)), clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size))))), (~ (_GLF_IDENTITY(clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)), min(clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)), clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)))))) / 1u), max(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)), min(clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)), clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size))))), (~ (_GLF_IDENTITY(clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)), min(clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)), clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)))))) / 1u), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)), min(clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)), clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size))))), (~ (_GLF_IDENTITY(clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)), min(clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)), clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)))))) / 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)), min(clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)), clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size))))), (~ (_GLF_IDENTITY(clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)), min(clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)), clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)))))) / 1u), (_GLF_IDENTITY(~ (_GLF_IDENTITY(clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)), min(clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)), clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size))))), (~ (_GLF_IDENTITY(clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)), min(clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)), clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)))))) / 1u)) >> (0u << _GLF_IDENTITY(uint(8u), uint(8u))))))))), _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size))))))) : virtual_gid)), 0u)), max(uint(uvec2(_GLF_IDENTITY(virtual_gid, (false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size))), min(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size))), max(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), _GLF_IDENTITY(clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)), min(clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)), clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size))))), (~ (_GLF_IDENTITY(clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)), min(clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)), clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)))))) / 1u), max(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)), min(clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)), clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size))))), (~ (_GLF_IDENTITY(clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)), min(clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)), clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)))))) / 1u), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)), min(clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)), clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size))))), (~ (_GLF_IDENTITY(clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)), min(clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)), clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)))))) / 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)), min(clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)), clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size))))), (~ (_GLF_IDENTITY(clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)), min(clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)), clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)))))) / 1u), (_GLF_IDENTITY(~ (_GLF_IDENTITY(clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)), min(clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)), clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size))))), (~ (_GLF_IDENTITY(clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)), min(clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)), clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)))))) / 1u)) >> (0u << _GLF_IDENTITY(uint(8u), uint(8u))))))))), _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size))))))) : virtual_gid)), 0u)), uint(uvec2(_GLF_IDENTITY(virtual_gid, (false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size))), min(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size))), max(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), _GLF_IDENTITY(clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)), min(clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)), clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size))))), (~ (_GLF_IDENTITY(clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)), min(clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)), clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)))))) / 1u), max(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)), min(clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)), clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size))))), (~ (_GLF_IDENTITY(clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)), min(clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)), clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)))))) / 1u), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)), min(clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)), clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size))))), (~ (_GLF_IDENTITY(clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)), min(clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)), clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)))))) / 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)), min(clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)), clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size))))), (~ (_GLF_IDENTITY(clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)), min(clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)), clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)))))) / 1u), (_GLF_IDENTITY(~ (_GLF_IDENTITY(clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)), min(clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)), clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size))))), (~ (_GLF_IDENTITY(clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)), min(clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)), clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)))))) / 1u)) >> (0u << _GLF_IDENTITY(uint(8u), uint(8u))))))))), _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size))))))) : virtual_gid)), 0u)))), ~ (~ (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : uint(uvec2(_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(subgroup_size) : virtual_gid)), 0u)), uint(uint(false ? _GLF_FUZZED(num_workgroup) : uint(uvec2(_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(subgroup_size) : virtual_gid)), 0u)))))))))), (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(subgroup_size) : virtual_gid)), 0u)), (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : uint(uvec2(_GLF_IDENTITY(virtual_gid, (false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)))), clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size))), min(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), 0u | (_GLF_FUZZED(subgroup_size))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size))), max(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), _GLF_IDENTITY(clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)), _GLF_IDENTITY(min(clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)), clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size))), (_GLF_IDENTITY(min(clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)), clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size))), (min(clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)), clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)))) | (min(clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)), clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)))))) | (1u ^ uint(_GLF_ONE(1.0, injectionSwitch.y)))))), (~ (_GLF_IDENTITY(clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)), min(clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)), clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)))))) / 1u)))), _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size))))))) : virtual_gid)), 0u)), ~ (~ (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : uint(uvec2(_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(subgroup_size) : virtual_gid)), _GLF_IDENTITY(0u, (0u) << 0u))), _GLF_IDENTITY(uint(uint(false ? _GLF_FUZZED(num_workgroup) : uint(uvec2(_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(subgroup_size) : virtual_gid)), 0u)))), (uint(uint(false ? _GLF_FUZZED(num_workgroup) : uint(uvec2(_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(subgroup_size) : virtual_gid)), 0u))))) - 0u)))))))) >> 0u)), min(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), virtual_gid)), _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) / 1u))), 1u)))], _GLF_struct_replacement_14._f2.read, 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (_GLF_IDENTITY(bool(bvec3(false, true, false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(true, ! (! (true))), false)), (bool(bvec3(false, true, false))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))) && true))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))) && true), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))) && true)))))))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! (! (! (_GLF_IDENTITY(false, false || (false))))))))) || false)))
      return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false)))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))).y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), true, true, false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-2.4) : injectionSwitch.y)), injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED(936.191))) > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (false) && true)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
