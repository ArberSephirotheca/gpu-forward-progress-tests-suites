#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 uvec4 GLF_merged4_0_1_16_1_1_11_2_1_17_3_1_11next_virtual_gidsubgroup_idsubgroup_local_idvirtual_gid;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))) || (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uvec2 GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), ~ (~ (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, ~ (~ (1))))), 1, 1)))))])), mix(vec2(_GLF_FUZZED(5873.8350), _GLF_FUZZED(-3.3)), vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, clamp(1, 1, 1))])))[0], mix(float(_GLF_FUZZED(6.2)), float(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, clamp(1, 1, 1))])))[0], min((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, clamp(1, 1, 1))])))[0], (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, clamp(1, 1, 1))])))[0]))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, clamp(1, 1, 1))])))[1]), bvec2(true, true))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), _GLF_IDENTITY(bool(bvec4(bool(bvec3(false, true, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), (bool(bvec4(bool(bvec3(false, true, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))) || false))))), ! (! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), _GLF_IDENTITY(bool(bvec4(bool(bvec3(false, true, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), false)), (_GLF_IDENTITY(bool(bvec4(bool(bvec3(false, _GLF_IDENTITY(true, true && (true)), false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec3(bool(bvec4(bool(bvec3(false, true, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), false, false)), ! (_GLF_IDENTITY(! (bool(bvec3(bool(bvec4(bool(bvec3(false, true, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), false, false))), bool(bool(! (bool(bvec3(bool(bvec4(bool(bvec3(false, true, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), false, false)))))))))) || false)))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_16_1_1_11_2_1_17_3_1_11next_virtual_gidsubgroup_idsubgroup_local_idvirtual_gid.y = subgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true))))) && true)))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.x = GLF_merged4_0_1_16_1_1_11_2_1_17_3_1_11next_virtual_gidsubgroup_idsubgroup_local_idvirtual_gid.y;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-3.3)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))), 0.0, determinant(mat3(1.0, 0.0, 0.0, sin(0.0), 1.0, exp(0.0), sin(0.0), 0.0, 1.0)), 1.0, 0.0))).x, min(injectionSwitch.x, injectionSwitch.x))) - 0.0)), float(_GLF_FUZZED(4.1)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (true) && true), false, false))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) || ((injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged4_0_1_16_1_1_11_2_1_17_3_1_11next_virtual_gidsubgroup_idsubgroup_local_idvirtual_gid.z = subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(7.4)), vec2(_GLF_FUZZED(121.407), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y = _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_17_3_1_11next_virtual_gidsubgroup_idsubgroup_local_idvirtual_gid.z, (GLF_merged4_0_1_16_1_1_11_2_1_17_3_1_11next_virtual_gidsubgroup_idsubgroup_local_idvirtual_gid.z) ^ 0u);
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
  }
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (true ? _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))) : _GLF_FUZZED(uvec3(196095u, 125846u, 72194u)))), (gl_WorkGroupSize) | uvec3(0u, 0u, 0u)).x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))) ? _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, _GLF_IDENTITY(0u, 0u ^ (0u))))) : _GLF_FUZZED(uvec3(196095u, 125846u, 72194u)))), (gl_WorkGroupSize) | uvec3(0u, 0u, 0u)).x) + 0u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((true ? _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))) : _GLF_FUZZED(uvec3(196095u, 125846u, 72194u))), (_GLF_IDENTITY((true ? _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))) : _GLF_FUZZED(uvec3(196095u, 125846u, 72194u))), uvec3(1u, 1u, 1u) * ((true ? _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))) : _GLF_FUZZED(uvec3(196095u, 125846u, 72194u)))))) | ((true ? _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))) : _GLF_FUZZED(uvec3(196095u, 125846u, 72194u)))))), (gl_WorkGroupSize) | uvec3(0u, 0u, 0u)).x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (true ? _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))) : _GLF_FUZZED(uvec3(196095u, 125846u, 72194u)))), (gl_WorkGroupSize) | uvec3(0u, 0u, 0u)).x) + 0u), (_GLF_IDENTITY(false ? _GLF_FUZZED(95330u) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (true ? _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, 0u | (0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))) + 0u)))))) : _GLF_IDENTITY(_GLF_FUZZED(uvec3(196095u, 125846u, 72194u)), min(_GLF_FUZZED(uvec3(196095u, 125846u, 72194u)), _GLF_FUZZED(uvec3(196095u, 125846u, 72194u)))))), _GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), (_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), _GLF_IDENTITY(((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)), ~ (_GLF_IDENTITY(~ (((gl_WorkGroupSize) | uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(~ (((gl_WorkGroupSize) | uvec3(0u, 0u, 0u))), max(~ (((gl_WorkGroupSize) | uvec3(0u, 0u, 0u))), ~ (((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)))))) << uvec3(0u, 0u, 0u)))) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)))) >> uvec3(0u, 0u, 0u))).x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (true ? _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))) : _GLF_FUZZED(uvec3(_GLF_IDENTITY(196095u, _GLF_IDENTITY(uint(uvec3(196095u, 0u, 0u)), max(uint(uvec3(196095u, 0u, 0u)), uint(_GLF_IDENTITY(uvec3(196095u, 0u, 0u), (uvec3(196095u, 0u, 0u)) ^ uvec3(0u, 0u, 0u)))))), 125846u, 72194u)))), (gl_WorkGroupSize) | uvec3(0u, 0u, 0u)).x) + 0u), (false ? _GLF_FUZZED(95330u) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (true ? _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, 0u | (0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))) + 0u)))))) : _GLF_IDENTITY(_GLF_FUZZED(uvec3(196095u, 125846u, 72194u)), min(_GLF_FUZZED(uvec3(196095u, 125846u, 72194u)), _GLF_FUZZED(uvec3(196095u, 125846u, 72194u)))))), _GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), (_GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), _GLF_IDENTITY(((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)), ~ (_GLF_IDENTITY(~ (((gl_WorkGroupSize) | uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(~ (((gl_WorkGroupSize) | uvec3(0u, 0u, 0u))), max(~ (((gl_WorkGroupSize) | uvec3(0u, 0u, 0u))), ~ (((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)))))) << uvec3(0u, 0u, 0u)))) | ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)))) >> uvec3(0u, 0u, 0u))).x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (true ? _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))) : _GLF_FUZZED(uvec3(_GLF_IDENTITY(196095u, _GLF_IDENTITY(uint(uvec3(196095u, 0u, 0u)), max(uint(uvec3(196095u, 0u, 0u)), uint(_GLF_IDENTITY(uvec3(196095u, 0u, 0u), (uvec3(196095u, 0u, 0u)) ^ uvec3(0u, 0u, 0u)))))), 125846u, 72194u)))), (gl_WorkGroupSize) | uvec3(0u, 0u, 0u)).x) + 0u)) >> 0u))) : _GLF_FUZZED(subgroup_size)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), false, true, _GLF_IDENTITY(true, (true) && true))), bool(bool(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true, true, true)))) && true), false, true, true))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(false, false || (false)) || (_GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)) || (_GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(false, false || (false)) || (_GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0))).x > injectionSwitch.y))))) || false))))) && true)))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)), (true ? vec2(mat4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)) : _GLF_FUZZED(vec2(1.4, 4.0))))).y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, 1u, 1u, 1u))) + GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.x * subgroup_size + GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.x * _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)) + GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, (workgroup_base + GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.x * subgroup_size + GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y) - _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, min(0u, 0u)))))), 0u ^ ((_GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.x * _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)) + GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, (workgroup_base + GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.x * subgroup_size + GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y) - _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, min(0u, 0u)))))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, 1u, 1u, 1u))) + _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.x * subgroup_size, uint(uvec4(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.x * subgroup_size, (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.x * subgroup_size) | (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.x * subgroup_size)), 0u, 0u, 1u))) + GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.x * _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)) + GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(num_workgroup) : workgroup_base))) / 1u) + GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.x * subgroup_size + GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y) - _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) | (~ (0u))))), min(0u, 0u)))))), 0u ^ ((_GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.x * _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)) + GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y, (workgroup_base + GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.x * subgroup_size + GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y) - _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, min(0u, 0u)))))))) >> _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), max(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) * uint(_GLF_ONE(1.0, injectionSwitch.y)));
 _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_17_3_1_11next_virtual_gidsubgroup_idsubgroup_local_idvirtual_gid.w = virtual_gid, 0u ^ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_17_3_1_11next_virtual_gidsubgroup_idsubgroup_local_idvirtual_gid.w = virtual_gid, (GLF_merged4_0_1_16_1_1_11_2_1_17_3_1_11next_virtual_gidsubgroup_idsubgroup_local_idvirtual_gid.w = virtual_gid) << 0u)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false, false, false)))))))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, _GLF_IDENTITY(max(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, clamp(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id))), uvec2(0u, 0u) ^ (max(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, clamp(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, uvec2(0u, 0u) | (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id)), _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, min(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, clamp(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, clamp(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id)), GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id)), _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, clamp(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id) | (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id)))))), GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id)))))), uvec2(0u, 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, max(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, clamp(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id)))), uvec2(uvec2(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, max(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, clamp(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id))))))))).x * subgroup_size + _GLF_IDENTITY(((GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1) % subgroup_size), (_GLF_IDENTITY((_GLF_IDENTITY((GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1) % subgroup_size, (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1, 0u ^ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + _GLF_IDENTITY(1, (1) | (1)), (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1) >> 0u)))) % subgroup_size, 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1, (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1) + 0u)) | (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1, (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1) | (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1))))), 0u | _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1, (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1) + 0u)) | (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1)), (true ? _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1, (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1) + 0u)) | (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1)) : _GLF_FUZZED(num_workgroup))))), (((_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1, (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1) + 0u)) | (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1, (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1) | (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1))))))) << 0u)) % subgroup_size))) << 0u)), uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1, clamp(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1, GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1, _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1, (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1) - 0u)))), _GLF_IDENTITY(uint(uvec4((GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1), _GLF_IDENTITY(1u, 1u * (1u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), (uint(uvec4((GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1), 1u, 1u, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) - 0u)))) | (uint(uvec4((GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1), 1u, 1u, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), float(_GLF_FUZZED(-5101.7497)), bool(false))))))))) % subgroup_size), _GLF_IDENTITY(max(((_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, _GLF_IDENTITY(1, min(1, 1))), (clamp(1, 1, _GLF_IDENTITY(1, min(1, 1)))) | 0)), 0u | (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, _GLF_IDENTITY(1, min(1, 1))), (clamp(1, 1, _GLF_IDENTITY(1, min(1, 1)))) | 0))))) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_size, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), min(_GLF_IDENTITY(uint(uvec3(subgroup_size, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (uint(uvec3(subgroup_size, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))) << 0u), uint(uvec3(subgroup_size, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), min(subgroup_size, subgroup_size))) / 1u)), ((GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1) % subgroup_size)), (true ? max(((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id) / uvec2(1u, _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) << 0u))))).y, 0u | (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id) / uvec2(1u, _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) << 0u))))).y)) + _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / (0 | 1)), min(1, _GLF_IDENTITY(1, (1) | (1))))))) ^ 0)))) % subgroup_size), (_GLF_IDENTITY((GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1), ~ (_GLF_IDENTITY(~ ((GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1)), (~ ((GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1))) | (~ ((GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1)))))) % subgroup_size)) : _GLF_FUZZED(virtual_gid)))), 0u, _GLF_IDENTITY(0u, (0u) / (0u ^ 1u)), _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) >> 0u)))))))) - 0u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged4_0_1_16_1_1_11_2_1_17_3_1_11next_virtual_gidsubgroup_idsubgroup_local_idvirtual_gid.x = next_virtual_gid;
 atomicStore(buf[GLF_merged4_0_1_16_1_1_11_2_1_17_3_1_11next_virtual_gidsubgroup_idsubgroup_local_idvirtual_gid.x], uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-72679) : 1)), 1))), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[GLF_merged4_0_1_16_1_1_11_2_1_17_3_1_11next_virtual_gidsubgroup_idsubgroup_local_idvirtual_gid.w], 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1 < subgroup_size, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1, (false ? _GLF_FUZZED(workgroup_id) : GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1))) | 0u) < subgroup_size), (bool(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1 < subgroup_size)) || false))), bool(_GLF_IDENTITY(bvec2(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1 < subgroup_size, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1 < subgroup_size, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, false)))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, max(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, _GLF_IDENTITY(uvec2(uvec2(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id)), (uvec2(uvec2(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id))) - uvec2(0u, 0u))))).y + 1 < subgroup_size, _GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, false)))), true && (! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, false)))))))), bvec2(bvec2(bvec2(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1 < subgroup_size, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), _GLF_IDENTITY(true, ! (! (true))), true, false)))))))))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-254.667), (injectionSwitch)[_GLF_IDENTITY(1, (1) | (1))]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(5.3)), float((injectionSwitch)[0]), bool(true))), _GLF_FUZZED(0.6)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-254.667), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(0.6, (true ? 0.6 : _GLF_FUZZED(2.5))))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-254.667), (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(0.6)), bvec2(_GLF_IDENTITY(true, bool(bvec2(true, true))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))).y)), _GLF_IDENTITY(true, true && (true))))))), true && _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1 < subgroup_size, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + _GLF_IDENTITY(1, max(1, 1)) < subgroup_size, false), bvec2(bvec4(bvec2(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1 < subgroup_size, false), _GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, false || (true)) && (_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), true)), true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))), true))), bvec2(bvec2(_GLF_IDENTITY(bvec2(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + _GLF_IDENTITY(1, max(1, 1)) < subgroup_size, false), bvec2(bvec4(bvec2(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1 < subgroup_size, false), _GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, false || (true)) && (_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), true)), true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))), true))))))))), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1 < _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), subgroup_size, subgroup_size)), subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))), bool(_GLF_IDENTITY(bool(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1 < _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), subgroup_size, subgroup_size)), subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (bool(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1 < _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), subgroup_size, subgroup_size)), subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) || false))), bool(_GLF_IDENTITY(bvec2(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1 < subgroup_size, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1 < subgroup_size, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1 < subgroup_size, false), bvec2(bvec3(bvec2(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1 < subgroup_size, false), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))))), true && (true)), false), bvec3(bvec4(bvec3(false, true, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(806.255) : injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY(true, false || (true)) && (_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))), true)))))), true, _GLF_IDENTITY(true, true && (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(2.4, float(mat4x3(_GLF_IDENTITY(2.4, (false ? _GLF_FUZZED(-9.1) : 2.4)), log(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, sqrt(0.0))))) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, length(vec2(0.0, 0.0)), _GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 0.0, 1.0))), exp(0.0), exp(0.0), 1.0, 1.0), mat3(mat4(mat3(injectionSwitch, 0.0, length(vec2(0.0, 0.0)), 0.0, exp(0.0), exp(0.0), 1.0, 1.0))))), (false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, length(vec2(0.0, 0.0)), 0.0, exp(0.0), exp(0.0), 1.0, 1.0), mat3(mat4(mat3(injectionSwitch, 0.0, length(vec2(0.0, 0.0)), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0)), 0.0)), exp(0.0), exp(0.0), 1.0, 1.0)))))))).y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(2.4, float(mat4x3(_GLF_IDENTITY(2.4, (false ? _GLF_FUZZED(-9.1) : 2.4)), log(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, sqrt(0.0))))), min(_GLF_FUZZED(_GLF_IDENTITY(2.4, float(mat4x3(_GLF_IDENTITY(2.4, (false ? _GLF_FUZZED(-9.1) : 2.4)), log(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, sqrt(0.0))))), _GLF_FUZZED(_GLF_IDENTITY(2.4, float(mat4x3(_GLF_IDENTITY(2.4, (false ? _GLF_FUZZED(-9.1) : 2.4)), log(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, sqrt(0.0))))))) : _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(float(false))), bool(false)))), mix(float(_GLF_FUZZED(41.01)), float((false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(2.4, float(mat4x3(_GLF_IDENTITY(2.4, (false ? _GLF_FUZZED(-9.1) : 2.4)), log(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, sqrt(0.0))))), min(_GLF_FUZZED(_GLF_IDENTITY(2.4, float(mat4x3(_GLF_IDENTITY(2.4, (false ? _GLF_FUZZED(-9.1) : 2.4)), log(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, sqrt(0.0))))), _GLF_FUZZED(_GLF_IDENTITY(2.4, float(mat4x3(_GLF_IDENTITY(2.4, (false ? _GLF_FUZZED(-9.1) : 2.4)), log(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, sqrt(0.0))))))) : _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(float(false))), bool(false))))), bool(true)))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, length(vec2(0.0, 0.0)), _GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 0.0, 1.0))), exp(0.0), exp(0.0), 1.0, 1.0), mat3(mat4(mat3(injectionSwitch, 0.0, length(vec2(0.0, 0.0)), 0.0, exp(0.0), exp(0.0), 1.0, 1.0))))), (false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, length(vec2(0.0, 0.0)), 0.0, exp(0.0), exp(0.0), 1.0, 1.0), mat3(mat4(mat3(injectionSwitch, 0.0, length(vec2(0.0, 0.0)), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0)), 0.0)), exp(0.0), exp(0.0), 1.0, 1.0)))))))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, length(vec2(0.0, 0.0)), _GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 0.0, 1.0))), exp(0.0), exp(0.0), 1.0, 1.0), mat3(mat4(mat3(injectionSwitch, 0.0, length(vec2(0.0, 0.0)), 0.0, exp(0.0), exp(0.0), 1.0, 1.0))))), (false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, length(vec2(0.0, 0.0)), 0.0, exp(0.0), exp(0.0), 1.0, 1.0), mat3(mat4(mat3(injectionSwitch, 0.0, length(vec2(0.0, 0.0)), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0)), 0.0)), exp(0.0), exp(0.0), 1.0, 1.0)))))))))).y))))))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    return;
   int i = 0;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))) || false))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))) || false))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), false || (_GLF_IDENTITY(false, bool(bool(false)))))), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), 1.0 * (injectionSwitch.x)) > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), 1.0 * (injectionSwitch.x)) > injectionSwitch.y), true)))) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), bool(bvec4((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))))) || false)) && true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   atomicStore(checker[GLF_merged4_0_1_16_1_1_11_2_1_17_3_1_11next_virtual_gidsubgroup_idsubgroup_local_idvirtual_gid.w], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 1.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0)), min(vec2(mat4x3(injectionSwitch, 1.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0)), _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 1.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0)), min(vec2(mat4x3(injectionSwitch, 1.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0)), vec2(mat4x3(injectionSwitch, 1.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0))))))).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), true, true))))), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 0.0, 1.0, 1.0, abs(0.0), 0.0, 0.0, 1.0), (_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 0.0, 1.0, 1.0, abs(0.0), 0.0, 0.0, 1.0), transpose(transpose(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 0.0, 1.0, 1.0, abs(0.0), 0.0, 0.0, 1.0))))) - mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), true, true, false)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(false))
          return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   atomicStore(checker[_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_17_3_1_11next_virtual_gidsubgroup_idsubgroup_local_idvirtual_gid.w, (GLF_merged4_0_1_16_1_1_11_2_1_17_3_1_11next_virtual_gidsubgroup_idsubgroup_local_idvirtual_gid.w) - _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) << 0u))], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), false || (! (_GLF_IDENTITY(false, true && (false))))))), (injectionSwitch.x > injectionSwitch.y))) && true)))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0))) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))), mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * (mat2(1.0) * (injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-9.6)), vec2(_GLF_FUZZED(5.2), (injectionSwitch)[1]), bvec2(false, true))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
