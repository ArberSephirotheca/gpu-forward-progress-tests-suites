#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_13 {
 ivec4 _f0;
 uvec4 _f1;
} ;

struct _GLF_struct_14 {
 mat3x2 _f0;
 _GLF_struct_13 _f1;
 vec2 _f2;
 uint read;
 mat2x4 _f3;
 mat3 _f4;
} ;

struct _GLF_struct_11 {
 mat2 _f0;
 mat4 _f1;
 bvec3 _f2;
 vec4 _f3;
 bvec3 _f4;
} ;

struct _GLF_struct_12 {
 _GLF_struct_11 _f0;
} ;

struct _GLF_struct_15 {
 bool _f0;
 mat3x4 _f1;
 mat4 _f2;
 _GLF_struct_12 _f3;
 _GLF_struct_14 _f4;
 mat2 _f5;
 int _f6;
} ;

struct _GLF_struct_8 {
 bvec3 _f0;
 uint virtual_gid;
} ;

struct _GLF_struct_7 {
 mat4 _f0;
 uvec4 _f1;
 ivec3 _f2;
 vec3 _f3;
} ;

struct _GLF_struct_6 {
 vec4 _f0;
 vec4 _f1;
 ivec2 _f2;
 int _f3;
 ivec3 _f4;
} ;

struct _GLF_struct_9 {
 _GLF_struct_6 _f0;
 _GLF_struct_7 _f1;
 _GLF_struct_8 _f2;
 bvec3 _f3;
} ;

struct _GLF_struct_4 {
 vec3 _f0;
 ivec4 _f1;
 mat3x2 _f2;
 mat2x4 _f3;
 ivec4 _f4;
} ;

struct _GLF_struct_3 {
 ivec4 _f0;
 bvec3 _f1;
 mat4 _f2;
} ;

struct _GLF_struct_2 {
 mat3x2 _f0;
 float _f1;
 ivec3 _f2;
} ;

struct _GLF_struct_1 {
 mat3 _f0;
 bvec3 _f1;
 bvec4 _f2;
 uint _f3;
 mat4 _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_5 {
 ivec3 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
 _GLF_struct_3 _f3;
 _GLF_struct_4 _f4;
} ;

struct _GLF_struct_0 {
 uint _f0;
 int _f1;
 bvec4 _f2;
 bvec2 _f3;
 mat2x3 _f4;
 vec4 _f5;
} ;

struct _GLF_struct_10 {
 uvec2 _f0;
 _GLF_struct_0 _f1;
 mat4x3 _f2;
 _GLF_struct_5 _f3;
 uvec2 _f4;
 _GLF_struct_9 _f5;
 mat2 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! (_GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true))))))))))), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), ! (! (bool(true))))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bool(true), ! (! (bool(true))))), _GLF_IDENTITY(true, ! (! (true))), true, false)), false || (bool(bvec4(bool(_GLF_IDENTITY(bool(true), ! (! (bool(true))))), _GLF_IDENTITY(true, ! (! (true))), true, false))))))))))))))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), injectionSwitch.x)), float(vec2(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), 1.0))), (false ? _GLF_FUZZED(-1127.1507) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), 1.0, tan(log(1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 1.0))), min(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), injectionSwitch.x)), float(vec2(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), 1.0))))) > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), injectionSwitch.x)), float(vec2(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), 1.0))), (false ? _GLF_FUZZED(-1127.1507) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), 1.0, tan(log(1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 1.0))), min(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), injectionSwitch.x)), float(vec2(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), 1.0))))) > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), injectionSwitch.x)), float(vec2(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), 1.0))), (false ? _GLF_FUZZED(-1127.1507) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), 1.0, tan(log(1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 1.0))), min(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), injectionSwitch.x)), float(vec2(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), 1.0))))) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), injectionSwitch.x)), float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x, float(mat4x3(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), 1.0))), (false ? _GLF_FUZZED(-1127.1507) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) - 0.0)) - 0.0))), 1.0, tan(log(1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8.1)), float(1.0), bool(true)))) / 1.0), 1.0, 1.0))), min(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), injectionSwitch.x)), float(vec2(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), 1.0))))) > injectionSwitch.y))) && true)) && true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(true ? gl_WorkGroupID : _GLF_FUZZED(uvec3(_GLF_IDENTITY(180877u, (180877u) | 0u), 132453u, 134033u)), ~ (~ (_GLF_IDENTITY(true ? gl_WorkGroupID : _GLF_FUZZED(uvec3(_GLF_IDENTITY(180877u, (180877u) | 0u), 132453u, 134033u)), (true ? gl_WorkGroupID : _GLF_FUZZED(uvec3(_GLF_IDENTITY(180877u, (180877u) | 0u), _GLF_IDENTITY(132453u, (true ? 132453u : _GLF_FUZZED(workgroup_size))), 134033u))) / uvec3(1u, 1u, 1u))))))), gl_WorkGroupID))) | (gl_WorkGroupID)).x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true))))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false)))))))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) | 0u);
 _GLF_struct_10 _GLF_struct_replacement_10 = _GLF_struct_10(uvec2(1u), _GLF_struct_0(_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec3(1u, 0u, 0u)))))), _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : 1u), clamp((false ? _GLF_FUZZED(subgroup_size) : 1u), (false ? _GLF_FUZZED(subgroup_size) : 1u), (false ? _GLF_FUZZED(subgroup_size) : 1u)))), 1, bvec4(true), bvec2(true), mat2x3(1.0), vec4(_GLF_IDENTITY(1.0, (1.0) - 0.0))), mat4x3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x4(1.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0)), (float(mat2x4(1.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0))) + 0.0))), _GLF_struct_5(ivec3(1), _GLF_struct_1(mat3(1.0), bvec3(true), bvec4(true), 1u, _GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-28.48)), float(1.0), bool(true)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(mat4(1.0), transpose(transpose(mat4(1.0)))), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat4(1.0), transpose(transpose(mat4(1.0))))))) / _GLF_IDENTITY(mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(1.5)), bool(false))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(25030u))), bool(false))), 1.0), (true ? mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_IDENTITY(_GLF_FUZZED(1.5), (true ? _GLF_FUZZED(1.5) : _GLF_FUZZED((-561.470 / 6221.3821))))), bool(false))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0) : _GLF_FUZZED((true ? mat4(-4.1, 883.979, 6.1, -4.4, -7581.1249, 4.9, _GLF_IDENTITY(4.5, min(_GLF_IDENTITY(4.5, mix(float(_GLF_IDENTITY(4.5, (false ? _GLF_FUZZED(2189.5041) : 4.5))), float(_GLF_FUZZED(-37.80)), bool(false))), 4.5)), -687.359, -1.2, 9.8, 23.24, 1.4, -1.5, 3046.2779, 2875.3824, -8.1) : mat4(2.6, 32.67, -9491.8549, -5940.4307, -412.539, -4.2, 0.7, -95.21, -41.69, -30.73, 7488.6821, -1.5, -89.07, -4202.4388, -7.4, -6.1))))), _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(mat4(1.8, 7.5, 5832.4764, -43.13, -750.966, 41.22, -97.08, 732.655, 2.5, -639.707, -8251.9007, -8252.1020, -119.520, _GLF_IDENTITY(-589.854, mix(float(_GLF_IDENTITY(-589.854, mix(float(-589.854), float(_GLF_FUZZED(7.9)), bool(false)))), float(_GLF_FUZZED(35.83)), bool(false))), 72.03, 8.8), mat4(1.0) * (mat4(1.8, 7.5, 5832.4764, -43.13, -750.966, 41.22, -97.08, 732.655, 2.5, -639.707, -8251.9007, -8252.1020, -119.520, -589.854, _GLF_IDENTITY(72.03, mix(float(72.03), float(_GLF_FUZZED(-1.7)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 8.8))), (_GLF_IDENTITY(mat4(1.8, 7.5, 5832.4764, -43.13, -750.966, 41.22, -97.08, 732.655, 2.5, -639.707, -8251.9007, -8252.1020, -119.520, _GLF_IDENTITY(-589.854, mix(float(_GLF_IDENTITY(-589.854, _GLF_IDENTITY(mix(float(-589.854), float(_GLF_FUZZED(7.9)), bool(false)), sqrt(1.0) * (mix(float(-589.854), float(_GLF_FUZZED(7.9)), bool(false)))))), float(_GLF_FUZZED(35.83)), bool(false))), 72.03, 8.8), mat4(1.0) * (mat4(1.8, 7.5, 5832.4764, -43.13, -750.966, 41.22, -97.08, 732.655, 2.5, -639.707, -8251.9007, -8252.1020, -119.520, -589.854, _GLF_IDENTITY(72.03, mix(float(72.03), float(_GLF_FUZZED(-1.7)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 8.8)))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) : _GLF_IDENTITY(_GLF_IDENTITY((mat4(1.0)), ((mat4(1.0))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(mat4(1.0), (true ? mat4(1.0) : _GLF_FUZZED((mat4(7.2, 259.362, -2316.4114, 1.9, -4.3, 5013.4832, 4.1, 7.2, _GLF_IDENTITY(-7803.1193, (-7803.1193) - 0.0), 8791.0207, -7.0, -24.84, -50.68, -6911.8493, -72.02, _GLF_IDENTITY(-0.1, max(-0.1, -0.1))) - mat4(-350.688, 660.242, 52.07, -8.5, 3482.3020, -74.35, -9.0, -7.5, -66.56, 36.34, -5.0, -2.0, -9.8, 828.836, 5112.6233, -9.2))))) * ((mat4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-351.999)), bool(false))))) / mat4(1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-1.6))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), (_GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(mat4(1.8, 7.5, 5832.4764, -43.13, -750.966, 41.22, -97.08, 732.655, 2.5, -639.707, -8251.9007, -8252.1020, -119.520, _GLF_IDENTITY(-589.854, mix(float(_GLF_IDENTITY(-589.854, mix(float(-589.854), float(_GLF_FUZZED(7.9)), bool(false)))), float(_GLF_FUZZED(35.83)), bool(false))), 72.03, 8.8), mat4(1.0) * (mat4(1.8, 7.5, 5832.4764, -43.13, -750.966, 41.22, -97.08, 732.655, 2.5, -639.707, -8251.9007, -8252.1020, -119.520, -589.854, _GLF_IDENTITY(72.03, mix(float(72.03), float(_GLF_FUZZED(-1.7)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 8.8))), (_GLF_IDENTITY(mat4(1.8, 7.5, 5832.4764, -43.13, -750.966, 41.22, -97.08, 732.655, 2.5, -639.707, -8251.9007, -8252.1020, -119.520, _GLF_IDENTITY(-589.854, mix(float(_GLF_IDENTITY(-589.854, _GLF_IDENTITY(mix(float(-589.854), float(_GLF_FUZZED(7.9)), bool(false)), sqrt(1.0) * (mix(float(-589.854), float(_GLF_FUZZED(7.9)), bool(false)))))), float(_GLF_FUZZED(35.83)), bool(false))), 72.03, 8.8), mat4(1.0) * (mat4(1.8, 7.5, 5832.4764, -43.13, -750.966, 41.22, -97.08, 732.655, 2.5, -639.707, -8251.9007, -8252.1020, -119.520, -589.854, _GLF_IDENTITY(72.03, mix(float(72.03), float(_GLF_FUZZED(-1.7)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 8.8)))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) : _GLF_IDENTITY(_GLF_IDENTITY((mat4(1.0)), ((mat4(1.0))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(mat4(1.0), (true ? mat4(1.0) : _GLF_FUZZED((mat4(7.2, 259.362, -2316.4114, 1.9, -4.3, 5013.4832, 4.1, 7.2, _GLF_IDENTITY(-7803.1193, (-7803.1193) - 0.0), 8791.0207, -7.0, -24.84, -50.68, -6911.8493, -72.02, _GLF_IDENTITY(-0.1, max(-0.1, -0.1))) - mat4(-350.688, 660.242, 52.07, -8.5, 3482.3020, -74.35, -9.0, -7.5, -66.56, 36.34, -5.0, -2.0, -9.8, 828.836, 5112.6233, -9.2))))) * ((mat4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-351.999)), bool(false))))) / mat4(1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-1.6))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), ((false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(mat4(1.8, 7.5, 5832.4764, -43.13, -750.966, 41.22, -97.08, 732.655, 2.5, -639.707, -8251.9007, -8252.1020, -119.520, _GLF_IDENTITY(-589.854, mix(float(_GLF_IDENTITY(-589.854, mix(float(-589.854), float(_GLF_FUZZED(7.9)), bool(false)))), float(_GLF_FUZZED(35.83)), bool(false))), 72.03, 8.8), mat4(1.0) * (mat4(1.8, 7.5, 5832.4764, -43.13, -750.966, 41.22, -97.08, 732.655, 2.5, -639.707, -8251.9007, -8252.1020, -119.520, -589.854, _GLF_IDENTITY(72.03, mix(float(72.03), float(_GLF_FUZZED(-1.7)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 8.8))), (_GLF_IDENTITY(mat4(1.8, 7.5, 5832.4764, -43.13, -750.966, 41.22, -97.08, 732.655, 2.5, -639.707, -8251.9007, -8252.1020, -119.520, _GLF_IDENTITY(-589.854, mix(float(_GLF_IDENTITY(-589.854, _GLF_IDENTITY(mix(float(-589.854), float(_GLF_FUZZED(7.9)), bool(false)), sqrt(1.0) * (mix(float(-589.854), float(_GLF_FUZZED(7.9)), bool(false)))))), float(_GLF_FUZZED(35.83)), bool(false))), 72.03, 8.8), mat4(1.0) * (mat4(1.8, 7.5, 5832.4764, -43.13, -750.966, 41.22, -97.08, 732.655, 2.5, -639.707, -8251.9007, -8252.1020, -119.520, -589.854, _GLF_IDENTITY(72.03, mix(float(72.03), float(_GLF_FUZZED(-1.7)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 8.8)))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) : _GLF_IDENTITY(_GLF_IDENTITY((mat4(1.0)), ((mat4(1.0))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(mat4(1.0), (true ? mat4(1.0) : _GLF_FUZZED((mat4(7.2, 259.362, -2316.4114, 1.9, -4.3, 5013.4832, 4.1, 7.2, _GLF_IDENTITY(-7803.1193, (-7803.1193) - 0.0), 8791.0207, -7.0, -24.84, -50.68, -6911.8493, -72.02, _GLF_IDENTITY(-0.1, max(-0.1, -0.1))) - mat4(-350.688, 660.242, 52.07, -8.5, 3482.3020, -74.35, -9.0, -7.5, -66.56, 36.34, -5.0, -2.0, -9.8, 828.836, 5112.6233, -9.2))))) * ((mat4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-351.999)), bool(false))))) / mat4(1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-1.6))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))) * mat4(1.0))) * mat4(1.0)))), ivec3(1)), _GLF_struct_2(mat3x2(1.0), _GLF_IDENTITY(1.0, max(1.0, 1.0)), ivec3(1)), _GLF_struct_3(ivec4(1), _GLF_IDENTITY(bvec3(true), bvec3(bvec4(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(true), true)), true)))), true))), mat4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, _GLF_IDENTITY((true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(sqrt(54.88))), ((true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(sqrt(54.88)))) - 0.0))) + 0.0), (1.0) - 0.0))), _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) / 1.0, ((1.0) / 1.0) + 0.0)), 1.0)), min(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, _GLF_IDENTITY((true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(sqrt(54.88))), ((true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(sqrt(54.88)))) - 0.0))) + 0.0), (1.0) - 0.0))), _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) / 1.0, ((1.0) / 1.0) + 0.0)), 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, _GLF_IDENTITY((true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(sqrt(54.88))), ((true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(sqrt(54.88)))) - 0.0))) + 0.0), (1.0) - 0.0))), _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) / 1.0, ((1.0) / 1.0) + 0.0)), 1.0)), min(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, _GLF_IDENTITY((true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(sqrt(54.88))), ((true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(sqrt(54.88)))) - 0.0))) + 0.0), (1.0) - 0.0))), _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) / 1.0, ((1.0) / 1.0) + 0.0)), 1.0)), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, _GLF_IDENTITY((true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(sqrt(54.88))), ((true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(sqrt(54.88)))) - 0.0))) + 0.0), (1.0) - 0.0))), _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) / 1.0, ((1.0) / 1.0) + 0.0)), 1.0)))))))), _GLF_struct_4(_GLF_IDENTITY(vec3(1.0), (true ? vec3(1.0) : _GLF_FUZZED((mat2x3(-2825.0790, -7.0, 841.635, 0.2, 49.51, -4.9) * vec2(-4.2, -32.14))))), ivec4(1), mat3x2(1.0), mat2x4(_GLF_IDENTITY(1.0, (1.0) + _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(tan(0.0), 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), (dot(vec4(tan(0.0), 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))) / round(length(normalize(vec2(1.0, 1.0))))), _GLF_IDENTITY(dot(vec4(tan(0.0), 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), max(dot(vec4(tan(0.0), 1.0, 1.0, 0.0), vec4(1.0, _GLF_IDENTITY(0.0, float(vec4(0.0, 0.0, 0.0, 1.0))), 0.0, 1.0)), dot(vec4(tan(0.0), 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(mix(-9944.8014, -40.78, true)) : 1.0))))))))), ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0 | (1), (0 | (1)) ^ (0 >> _GLF_IDENTITY(int(7), int(7))))), int(ivec3(_GLF_IDENTITY(1, 0 | (1)), 0, _GLF_IDENTITY(1, min(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), (0 | 1) * (_GLF_IDENTITY(1, (1) >> 0))), 1)))))))), _GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY((uvec2(1u)) / uvec2(1u, 1u), ((uvec2(1u)) / uvec2(1u, 1u)) | ((uvec2(1u)) / uvec2(1u, 1u)))), _GLF_struct_9(_GLF_struct_6(vec4(1.0), vec4(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0)), 1.0))), ivec2(1), 1, ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY(1 * (1), clamp(1 * (1), 1 * (1), _GLF_IDENTITY(1 * (1), (1 * (1)) | 0)))))), _GLF_struct_7(mat4(1.0), uvec4(1u), ivec3(_GLF_IDENTITY(1, (1) ^ 0)), vec3(1.0)), _GLF_struct_8(bvec3(true), workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), (subgroup_id) / 1u), (subgroup_id) | (subgroup_id)) * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), min(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) | (subgroup_id), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) | (subgroup_id), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) | (subgroup_id)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) | (subgroup_id), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) | (subgroup_id)))), (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) | (subgroup_id), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) | (subgroup_id))))) * 1u), ~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) | (subgroup_id), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) | (subgroup_id)))), ~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) | (subgroup_id), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) | (subgroup_id))))))))), 0u | (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))))) * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)), (false ? _GLF_FUZZED(subgroup_size) : min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), (subgroup_id) / 1u), (subgroup_id) | (subgroup_id)) * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), min(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ _GLF_IDENTITY((subgroup_id), (false ? _GLF_FUZZED(subgroup_size) : (subgroup_id)))))), ((_GLF_IDENTITY(subgroup_id, ~ (~ _GLF_IDENTITY((subgroup_id), (false ? _GLF_FUZZED(subgroup_size) : (subgroup_id))))))) + 0u) | (subgroup_id)), 0u | (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))))) * subgroup_size)))) + subgroup_local_id), bvec3(true)), mat2(1.0));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), 0u ^ (subgroup_id * subgroup_size))), (clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec2(subgroup_id * subgroup_size, 0u)))) | (subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), 0u ^ (subgroup_id * subgroup_size)))) << 0u)) + (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) * 1u)))), 0u ^ ((subgroup_local_id + 1)))) >> (0u ^ 0u)) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)) | (subgroup_size))) - (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u)), ~ (~ (subgroup_size))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << (1u ^ 1u))], uint(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), int(ivec3(1, 0, _GLF_IDENTITY(1, 0 | (1)))))), 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, _GLF_IDENTITY((64) / 1, max((64) / 1, (64) / 1)))) / ((((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))) << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY((7), _GLF_IDENTITY(((7)), (true ? ((7)) : _GLF_FUZZED((87031 + -32713)))) - (1 ^ 1)) / 1)), int(7)))), 4);
 _GLF_struct_15 _GLF_struct_replacement_15 = _GLF_struct_15(true, mat3x4(_GLF_IDENTITY(1.0, float(mat2(1.0, exp(0.0), 0.0, 1.0)))), _GLF_IDENTITY(mat4(1.0), (true ? _GLF_IDENTITY(mat4(1.0), (_GLF_IDENTITY(mat4(1.0), (mat4(1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)) : _GLF_FUZZED(mat4(5889.4407, -5382.2274, _GLF_IDENTITY(_GLF_IDENTITY(-887.887, (false ? _GLF_FUZZED(-9.8) : -887.887)), max(-887.887, -887.887)), 6.8, -2.5, -7.1, 51.50, -92.21, 8.7, 8722.8878, _GLF_IDENTITY(31.19, clamp(31.19, 31.19, _GLF_IDENTITY(31.19, _GLF_IDENTITY(clamp(31.19, 31.19, 31.19), 0.0 + (clamp(31.19, 31.19, 31.19)))))), _GLF_IDENTITY(56.81, max(56.81, 56.81)), -379.766, 4.5, 87.09, 3.9)))), _GLF_struct_12(_GLF_struct_11(mat2(1.0), _GLF_IDENTITY(mat4(1.0), transpose(_GLF_IDENTITY(transpose(mat4(1.0)), (transpose(mat4(1.0))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), bvec3(true), vec4(1.0), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec3(bvec3(true))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec4(bvec3(bvec3(true)), true))), true)))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false))))), true)))))), false)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))), bvec3(bvec4(bvec3(bvec3(bvec3(true))), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(true))), bvec3(bvec4(bvec3(bvec3(bvec3(true))), false))))))))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))), false)))))))), _GLF_struct_14(mat3x2(1.0), _GLF_struct_13(ivec4(1), _GLF_IDENTITY(uvec4(1u), (true ? uvec4(1u) : _GLF_FUZZED(uvec4(195443u, 150773u, 26628u, 128266u))))), vec2(1.0), atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_10._f5._f2.virtual_gid, (_GLF_struct_replacement_10._f5._f2.virtual_gid) - 0u), clamp(_GLF_IDENTITY(_GLF_struct_replacement_10._f5._f2.virtual_gid, (_GLF_struct_replacement_10._f5._f2.virtual_gid) - 0u), _GLF_IDENTITY(_GLF_struct_replacement_10._f5._f2.virtual_gid, (_GLF_struct_replacement_10._f5._f2.virtual_gid) - 0u), _GLF_IDENTITY(_GLF_struct_replacement_10._f5._f2.virtual_gid, (_GLF_struct_replacement_10._f5._f2.virtual_gid) - 0u)))], 4, 64, 0), mat2x4(1.0), mat3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)) ? _GLF_FUZZED(9.4) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) * 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), mix(float(_GLF_FUZZED(-4993.5483)), float(_GLF_IDENTITY(min(1.0, 1.0), mix(float(_GLF_FUZZED(-7.3)), float(min(1.0, 1.0)), bool(true)))), bool(true))))) * 1.0), max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) * 1.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, min(1.0, 1.0))) * 1.0, mix(float(_GLF_FUZZED((bool(188133u) ? 0.9 : 3.4))), float((_GLF_IDENTITY(1.0, min(1.0, 1.0))) * 1.0), bool(true))))))) - sqrt(0.0))))), (mat2(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)) ? _GLF_FUZZED(9.4) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) * 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), mix(float(_GLF_FUZZED(-4993.5483)), float(min(1.0, 1.0)), bool(true))))) * 1.0), max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) * 1.0), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) * 1.0)))) - sqrt(0.0)))))) * mat2(1.0)), (mat2(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), (true ? float(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) : _GLF_FUZZED(-3.4)))) > injectionSwitch.y)) ? _GLF_FUZZED(9.4) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3(1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, sin(0.0), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0), (mat3(1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, sin(0.0), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0)) * mat3(1.0)))), min(1.0, 1.0))) * 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) * 1.0), _GLF_IDENTITY(max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) * 1.0), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) * 1.0)), mix(float(max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) * 1.0), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) * 1.0))), float(_GLF_FUZZED(vec2(-6511.8981, -19.66).g)), bool(false))))) - sqrt(0.0)))))) - mat2(0.0, 0.0, 0.0, 0.0)), transpose(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)) ? _GLF_FUZZED(9.4) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) * 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), mix(float(_GLF_FUZZED(-4993.5483)), float(_GLF_IDENTITY(min(1.0, 1.0), mix(float(_GLF_FUZZED(-7.3)), float(min(1.0, 1.0)), bool(true)))), bool(true))))) * 1.0), max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) * 1.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, min(1.0, 1.0))) * 1.0, mix(float(_GLF_FUZZED((bool(188133u) ? 0.9 : 3.4))), float((_GLF_IDENTITY(1.0, min(1.0, 1.0))) * 1.0), bool(true))))))) - sqrt(0.0))))), (mat2(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)) ? _GLF_FUZZED(9.4) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) * 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), mix(float(_GLF_FUZZED(-4993.5483)), float(min(1.0, 1.0)), bool(true))))) * 1.0), max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) * 1.0), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) * 1.0)))) - sqrt(0.0)))))) * mat2(1.0)), (mat2(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), (true ? float(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) : _GLF_FUZZED(-3.4)))) > injectionSwitch.y)) ? _GLF_FUZZED(9.4) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3(1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, sin(0.0), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0), (mat3(1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, sin(0.0), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0)) * mat3(1.0)))), min(1.0, 1.0))) * 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) * 1.0), _GLF_IDENTITY(max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) * 1.0), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) * 1.0)), mix(float(max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) * 1.0), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) * 1.0))), float(_GLF_FUZZED(vec2(-6511.8981, -19.66).g)), bool(false))))) - sqrt(0.0)))))) - mat2(0.0, 0.0, 0.0, 0.0))))), 1);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))) - 0u), 0u ^ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))) - 0u))) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   int i = 0;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.2), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.4)), bvec2(true, false)))[0], _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[_GLF_IDENTITY(1, _GLF_IDENTITY((true ? _GLF_IDENTITY(1, _GLF_IDENTITY((1), (_GLF_IDENTITY((1), ((1)) * 1)) + 0) / _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, max(1, 1))))) : _GLF_FUZZED(i)), clamp(_GLF_IDENTITY((true ? _GLF_IDENTITY(1, _GLF_IDENTITY((1), (_GLF_IDENTITY((1), ((1)) * 1)) + 0) / _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, max(1, 1))))) : _GLF_FUZZED(i)), min(_GLF_IDENTITY((true ? _GLF_IDENTITY(1, _GLF_IDENTITY((1), (_GLF_IDENTITY((1), ((1)) * 1)) + 0) / _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, max(1, 1))))) : _GLF_FUZZED(i)), 0 ^ ((true ? _GLF_IDENTITY(1, _GLF_IDENTITY((1), (_GLF_IDENTITY((1), ((1)) * 1)) + 0) / _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, max(1, 1))))) : _GLF_FUZZED(i)))), (true ? _GLF_IDENTITY(1, _GLF_IDENTITY((1), (_GLF_IDENTITY((1), ((1)) * 1)) + 0) / _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, max(1, 1))))) : _GLF_FUZZED(i)))), (true ? _GLF_IDENTITY(1, _GLF_IDENTITY((1), (_GLF_IDENTITY((1), ((1)) * 1)) + 0) / _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, max(1, 1))))) : _GLF_FUZZED(i)), (true ? _GLF_IDENTITY(1, _GLF_IDENTITY((1), (_GLF_IDENTITY((1), ((1)) * 1)) + 0) / _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, max(1, 1))))) : _GLF_FUZZED(i)))))])).x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ((false)) || false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   atomicStore(checker[_GLF_struct_replacement_10._f5._f2.virtual_gid], _GLF_struct_replacement_15._f4.read, 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec3(-36.02, 1.2, 3.9).t), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(-1228.3390)), float(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch))), _GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch))), (injectionSwitch)))[0]), bool(true))), _GLF_IDENTITY(_GLF_FUZZED(0.6), max(_GLF_FUZZED(0.6), _GLF_FUZZED(0.6)))), _GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false))))))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   atomicStore(checker[_GLF_struct_replacement_10._f5._f2.virtual_gid], _GLF_struct_replacement_15._f4.read, _GLF_IDENTITY(4, (_GLF_IDENTITY(true, ! (! (true))) ? 4 : _GLF_FUZZED(59880))), 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), ! (! ((false)))))))))), ! (! (_GLF_DEAD(false)))), true, _GLF_IDENTITY(false, ! (! (false))), true)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, _GLF_IDENTITY(false, ! (! (false))), true)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, _GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))))), _GLF_IDENTITY(bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, _GLF_IDENTITY(false, ! (! (false))), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec3((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), true, false), bvec3(bvec4(bvec3(bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec4(_GLF_DEAD(false), false, true, false)))))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), _GLF_IDENTITY(false, ! (! (false))), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(false, true && (false)))), true, false), true)))), (bool(_GLF_IDENTITY(bvec3(bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, _GLF_IDENTITY(false, ! (! (false))), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), true, false), bvec3(bvec4(bvec3(bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))), true, _GLF_IDENTITY(false, ! (! (false))), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), true, false), true))))) || false)))) && true), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false)))))), true)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) && true), ! (! (_GLF_DEAD(false)))), true, _GLF_IDENTITY(false, ! (! (false))), true)), _GLF_IDENTITY(bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, _GLF_IDENTITY(false, ! (! (false))), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))), true)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)))), true, false)), true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(false, ! (! (false))), true)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), true, false)), (bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(false, ! (! (false))), true)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), true, false))) || false), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), true), false))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), true), false))))))), ((! (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), true), false)))))))) && true)), (! (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), true), false))))))), ((! (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), true), false)))))))) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(false, ! (! (false))), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(false, ! (! (false))), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), true, false)), bvec3(bvec3(bvec3(bvec3(bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(false, ! (! (false))), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), true, false))))), true))))), true)))), (bool(_GLF_IDENTITY(bvec3(bool(bvec4(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, _GLF_IDENTITY(false, ! (! (false))), true)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, _GLF_IDENTITY(false, ! (! (false))), true))), ! (! (! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, _GLF_IDENTITY(false, ! (! (false))), true)))))))), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-6.7) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))))) > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), true && (bool(bvec2(true, false))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)), true, false), bvec3(bvec4(bvec3(bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false))))), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), _GLF_IDENTITY(true, ! (! (true))), false), true))))) || false)))) && true)) || false)), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, _GLF_IDENTITY(false, ! (! (false))), true)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, _GLF_IDENTITY(false, ! (! (false))), true)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, _GLF_IDENTITY(false, ! (! (false))), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, _GLF_IDENTITY(false, ! (! (false))), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), true, false), bvec3(bvec4(bvec3(bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, _GLF_IDENTITY(false, ! (! (false))), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), true, false), true)))), (bool(_GLF_IDENTITY(bvec3(bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, _GLF_IDENTITY(false, ! (! (false))), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), true, false), bvec3(bvec4(bvec3(bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, _GLF_IDENTITY(false, ! (! (false))), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), true, false), true))))) || false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, _GLF_IDENTITY(false, ! (! (false))), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, _GLF_IDENTITY(false, ! (! (false))), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), true, false), bvec3(bvec4(bvec3(bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, _GLF_IDENTITY(false, ! (! (false))), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), true, false), true)))), (bool(_GLF_IDENTITY(bvec3(bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, _GLF_IDENTITY(false, ! (! (false))), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), true, false), bvec3(bvec4(bvec3(bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, _GLF_IDENTITY(false, ! (! (false))), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), true, false), true))))) || false)), ! (! (_GLF_IDENTITY(bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), _GLF_IDENTITY(false, ! (! (false))), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, _GLF_IDENTITY(false, ! (! (false))), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), true, false), bvec3(bvec4(bvec3(bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, _GLF_IDENTITY(false, ! (! (false))), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), true, false), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, _GLF_IDENTITY(false, ! (! (false))), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), true, false), bvec3(bvec4(bvec3(bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, _GLF_IDENTITY(false, ! (! (false))), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), true, false), true))))))), (bool(_GLF_IDENTITY(bvec3(bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, _GLF_IDENTITY(false, ! (! (false))), true)), _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), (injectionSwitch.x > injectionSwitch.y)), true, false)), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, _GLF_IDENTITY(false, ! (! (false))), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), true, false), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, _GLF_IDENTITY(false, ! (! (false))), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), true, false), true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, _GLF_IDENTITY(false, ! (! (false))), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), true, false), true)), false)), false))))))) || false))))))))) && true), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, _GLF_IDENTITY(false, ! (! (false))), true)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, _GLF_IDENTITY(false, ! (! (false))), true)), _GLF_IDENTITY(bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, _GLF_IDENTITY(false, ! (! (false))), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, _GLF_IDENTITY(false, ! (! (false))), true)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))), true, false)), true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(false, ! (! (false))), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(false, ! (! (false))), true)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)))), true, false)), true, _GLF_IDENTITY(false, ! (! (false))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(false, ! (! (false))), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), true, false)), bvec3(bvec3(bvec3(bvec3(bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), true, false))))), true))))), true)))), (bool(_GLF_IDENTITY(bvec3(bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, _GLF_IDENTITY(false, ! (! (false))), true)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), true && (bool(bvec2(true, false))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)), true, false), bvec3(bvec4(bvec3(bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, _GLF_IDENTITY(false, ! (! (false))), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true))), false)), _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), bool(_GLF_IDENTITY(bvec3((! (true)), false, true), bvec3(bvec3(bvec3((! (true)), false, true))))))), false), true))))) || false)))) && true)) || false)))))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
