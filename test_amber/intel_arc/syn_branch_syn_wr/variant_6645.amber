#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-35.14), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(2.2)), bvec2(true, false))), injectionSwitch)).x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(-897.220) : injectionSwitch.y)))))) && true))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) + vec2(0.0, 0.0))))).y)))))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w = subgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - abs(vec2(0.0, 0.0))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.y = num_workgroup;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-649.017)), bool(false)))) - 0.0) > injectionSwitch.y), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), false))), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), _GLF_IDENTITY(false, ! (! (false)))))))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), true))), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), false, true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), false, true)), bvec3(bvec4(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), false, true)), true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), false, true)), bvec3(bvec4(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), false, true)), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), false, true)), bvec3(bvec4(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), bool(bvec3(true && (injectionSwitch.x > injectionSwitch.y), false, true)))) && true))), false, true)), true))))))), true)))), false))), _GLF_IDENTITY(bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), _GLF_IDENTITY(false, ! (! (false))))), bvec3(bvec4(bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), _GLF_IDENTITY(false, ! (! (false))))), true)))))))))))))) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))))))))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-649.017)), bool(false)))) - 0.0) > injectionSwitch.y), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_IDENTITY(true, (true) || false)), false))), bvec3(bvec4(bvec3((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), false, true), _GLF_IDENTITY(false, ! (! (false)))))))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).x > injectionSwitch.y), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)))), true)))))), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), false))), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), _GLF_IDENTITY(false, ! (! (false)))))))))))))))) || false), false || (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-649.017)), bool(false)))) - 0.0) > injectionSwitch.y), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), false, true), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), false))), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), _GLF_IDENTITY(false, ! (! (false)))))))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)))), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), true))), _GLF_IDENTITY(false, ! (! (false)))))))))))))))) || false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-649.017)), bool(false)))) - 0.0) > injectionSwitch.y), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_IDENTITY(true, (true) || false)), false))), bvec3(bvec4(bvec3((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), false, _GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(false, ! (! (false)))))))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)))), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)))), true)))))), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), true)))))), _GLF_IDENTITY(false, ! (! (false)))))))))))))))) || false), false || (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_FUZZED(-649.017)), float(mat2x4(_GLF_IDENTITY(float(_GLF_FUZZED(-649.017)), (_GLF_IDENTITY(float(_GLF_FUZZED(-649.017)), (float(_GLF_FUZZED(-649.017))) * 1.0)) + sqrt(0.0)), 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 1.0))), bool(false)))) - 0.0) > injectionSwitch.y), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), false, true), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), false))), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), _GLF_IDENTITY(false, ! (! (false)))))))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))), false, true), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)))), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), false))), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), _GLF_IDENTITY(false, ! (! (false)))))))))))))))) || false)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(-649.017, 0.0 + (-649.017)))), bool(false)))) - 0.0) > injectionSwitch.y), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_IDENTITY(true, (true) || false)), false))), bvec3(bvec4(bvec3((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), false, true), _GLF_IDENTITY(false, ! (! (false)))))))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0) > injectionSwitch.y), false, true), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)))), true))))))))), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), false))), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), _GLF_IDENTITY(false, ! (! (false)))))))))))))))) || false), false || (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))), (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-649.017)), bool(false)))) - 0.0) > injectionSwitch.y), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), false, true), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), false))), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && ((false)))))))))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)))), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), false))), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), _GLF_IDENTITY(false, ! (! (false)))))))))))))))) || false))))) && true))), false, true))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])).x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        return;
       return;
      }
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id, _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id) * uvec4(1u, 1u, 1u, 1u), max((GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id) * uvec4(1u, 1u, 1u, 1u), (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id) * uvec4(1u, 1u, 1u, 1u)))).w * subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))), ~ (~ (uint(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))))))) + 1, (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) | (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)))), _GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec4(subgroup_local_id + 1, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u) + (_GLF_IDENTITY(uvec4(subgroup_local_id + 1, 0u, 0u, 0u), ~ (~ (uvec4(subgroup_local_id + 1, 0u, 0u, 0u)))))))), _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED(workgroup_base), (true ? subgroup_local_id : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), 0u | (_GLF_FUZZED(workgroup_base)))) + 0u))) + _GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) | 0) - 0)))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1, clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, uint(uvec4(subgroup_local_id + 1, 0u, 0u, 0u))), _GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(workgroup_base))) + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) | 0) - 0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) | 0), (_GLF_IDENTITY(_GLF_IDENTITY((1), (_GLF_IDENTITY((1), int(ivec2((1), 0)))) << (0 >> _GLF_IDENTITY(int(6), int(6)))), _GLF_IDENTITY(((1)), (0 >> _GLF_IDENTITY(int(1), int(1))) + (_GLF_IDENTITY(((1)), min(((1)), ((1)))))) | 0)) >> 0) - 0), ~ (~ (_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) | 0) - 0)))) : _GLF_FUZZED(-650))))))))) % subgroup_size);
 if(_GLF_DEAD(false))
  return;
 GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.x = next_virtual_gid;
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id, max(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id, GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id)).x], uint(1), 4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec2(64, 1), ivec2(ivec2(ivec2(64, 1)))))), 64)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(64, _GLF_IDENTITY(min(_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec2(64, 1), ivec2(ivec2(ivec2(64, 1)))))), 64), ~ (_GLF_IDENTITY(~ (min(_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec2(64, 1), ivec2(ivec2(ivec2(64, 1)))))), 64)), (_GLF_IDENTITY(~ (min(_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec2(64, 1), ivec2(ivec2(ivec2(64, 1)))))), 64)), clamp(~ (min(_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec2(64, 1), ivec2(ivec2(ivec2(64, 1)))))), 64)), ~ (min(_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(64, min(64, 64)), 1), ivec2(ivec2(ivec2(64, 1)))))), 64)), ~ (min(_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec2(64, 1), ivec2(ivec2(ivec2(64, 1)))))), 64))))) - 0))))), (~ (_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec2(64, 1), ivec2(ivec2(ivec2(64, 1)))))), 64)))) | _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec2(64, 1), ivec2(ivec2(ivec2(64, 1)))))), 64)))), (0 >> _GLF_IDENTITY(int(0), int(0))) ^ (_GLF_IDENTITY((~ (_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec2(64, 1), ivec2(ivec2(ivec2(64, 1)))))), 64)))), clamp((~ (_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec2(64, 1), ivec2(ivec2(ivec2(64, 1)))))), 64)))), _GLF_IDENTITY((~ (_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec2(64, 1), ivec2(ivec2(ivec2(64, 1)))))), 64)))), min((~ (_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec2(64, 1), ivec2(ivec2(ivec2(64, 1)))))), 64)))), (~ (_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec2(64, 1), ivec2(ivec2(ivec2(64, 1)))))), 64)))))), (~ (_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec2(64, 1), ivec2(ivec2(ivec2(64, 1)))))), 64)))))))), (_GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec2(64, 1), ivec2(ivec2(ivec2(64, 1)))))), 64)))), (0 >> _GLF_IDENTITY(int(0), int(0))) ^ (_GLF_IDENTITY((~ (_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec2(64, 1), ivec2(ivec2(ivec2(64, 1)))))), 64)))), clamp((~ (_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec2(64, 1), ivec2(ivec2(ivec2(64, 1)))))), 64)))), _GLF_IDENTITY((~ (_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec2(64, 1), ivec2(ivec2(ivec2(64, 1)))))), 64)))), min((~ (_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec2(64, 1), ivec2(ivec2(ivec2(64, 1)))))), 64)))), (~ (_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec2(64, 1), ivec2(ivec2(ivec2(64, 1)))))), 64)))))), (~ (_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec2(64, 1), ivec2(ivec2(ivec2(64, 1)))))), 64)))))))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec2(64, 1), ivec2(ivec2(ivec2(64, 1)))))), 64)))), (0 >> _GLF_IDENTITY(int(0), int(0))) ^ (_GLF_IDENTITY((~ (_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec2(64, 1), ivec2(ivec2(ivec2(64, 1)))))), 64)))), clamp((~ (_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec2(64, 1), ivec2(ivec2(ivec2(64, 1)))))), 64)))), _GLF_IDENTITY((~ (_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec2(64, 1), ivec2(ivec2(ivec2(64, 1)))))), 64)))), min((~ (_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec2(64, 1), ivec2(ivec2(ivec2(64, 1)))))), 64)))), (~ (_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec2(64, 1), ivec2(ivec2(ivec2(64, 1)))))), 64)))))), (~ (_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec2(64, 1), ivec2(ivec2(ivec2(64, 1)))))), 64))))))))) ^ 0)) - 0)), (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(64, min(_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), int(_GLF_IDENTITY(ivec2(64, 1), ivec2(ivec2(ivec2(64, 1)))))), 64))), (~ _GLF_IDENTITY((_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec2(64, 1), ivec2(ivec2(ivec2(64, 1)))))), 64))), ((_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec2(64, 1), ivec2(ivec2(ivec2(64, 1)))))), 64)))) - 0)) | (~ (_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec2(64, 1), ivec2(ivec2(ivec2(64, 1)))))), 64))))), int(ivec3(_GLF_IDENTITY(~ (_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec2(64, 1), ivec2(ivec2(ivec2(64, 1)))))), 64))), (~ (_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec2(64, 1), ivec2(ivec2(ivec2(64, 1)))))), 64)))) | _GLF_IDENTITY((~ (_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(64, 1), ivec2(ivec2(ivec2(64, 1))))), clamp(int(_GLF_IDENTITY(ivec2(64, 1), ivec2(ivec2(ivec2(64, 1))))), int(_GLF_IDENTITY(ivec2(64, 1), ivec2(ivec2(ivec2(64, 1))))), int(_GLF_IDENTITY(ivec2(64, 1), ivec2(ivec2(ivec2(64, 1)))))))), 64)))), min(_GLF_IDENTITY((~ (_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(64, 1), ivec2(ivec2(ivec2(64, 1))))), clamp(int(_GLF_IDENTITY(ivec2(64, 1), ivec2(ivec2(ivec2(64, 1))))), int(_GLF_IDENTITY(ivec2(64, 1), ivec2(ivec2(ivec2(64, 1))))), int(_GLF_IDENTITY(ivec2(64, 1), ivec2(ivec2(ivec2(64, 1)))))))), 64)))), ((~ (_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(64, 1), ivec2(ivec2(ivec2(64, 1))))), clamp(int(_GLF_IDENTITY(ivec2(64, 1), ivec2(ivec2(ivec2(64, 1))))), int(_GLF_IDENTITY(ivec2(64, 1), ivec2(ivec2(ivec2(64, 1))))), int(_GLF_IDENTITY(ivec2(64, 1), ivec2(ivec2(ivec2(64, 1)))))))), 64))))) | 0), (~ (_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(64, 1), ivec2(ivec2(ivec2(64, 1))))), clamp(int(_GLF_IDENTITY(ivec2(64, 1), ivec2(ivec2(ivec2(64, 1))))), int(_GLF_IDENTITY(ivec2(64, 1), ivec2(ivec2(ivec2(64, 1))))), int(_GLF_IDENTITY(ivec2(64, 1), ivec2(ivec2(ivec2(64, 1)))))))), 64))))))), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) * 1)))) * 1), 0)))) >> 0))), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec2(64, 1), ivec2(ivec2(ivec2(64, 1)))))), 64)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec2(64, 1), ivec2(ivec2(ivec2(64, 1)))))), 64))), (~ (_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec2(64, 1), ivec2(ivec2(ivec2(64, 1)))))), 64)))) | (~ (_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec2(64, 1), ivec2(ivec2(ivec2(64, 1)))))), 64))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec2(64, _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1))), _GLF_IDENTITY(ivec2(ivec2(ivec2(64, 1))), (ivec2(ivec2(ivec2(64, 1)))) | (ivec2(ivec2(ivec2(64, 1)))))))), 64))), (~ (_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec2(64, _GLF_IDENTITY(1, ~ (~ (1)))), ivec2(ivec2(ivec2(64, 1)))))), 64)))) | (~ (_GLF_IDENTITY(64, min(_GLF_IDENTITY(_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec2(64, 1), ivec2(ivec2(ivec2(64, 1)))))), int(ivec4(_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec2(64, 1), ivec2(ivec2(ivec2(64, 1)))))), 0, 1, (1 ^ 0)))), 64))))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec2(64, 1), ivec2(ivec2(ivec2(64, 1)))))), 64))), (~ (_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec2(64, 1), ivec2(ivec2(ivec2(64, _GLF_IDENTITY(1, 0 ^ (1)))))))), 64)))) | (~ (_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(64, 1), ivec2(ivec2(ivec2(64, 1)))), min(_GLF_IDENTITY(ivec2(64, 1), ivec2(ivec2(ivec2(64, 1)))), _GLF_IDENTITY(ivec2(64, 1), ivec2(ivec2(ivec2(64, 1)))))))), 64))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec2(64, 1), ivec2(ivec2(ivec2(64, 1)))))), 64)), 0 + (_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec2(64, 1), ivec2(ivec2(ivec2(64, 1)))))), 64))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(64, 1), ivec2(ivec2(ivec2(64, 1))))), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(64, 1), ivec2(ivec2(ivec2(64, 1))))), min(int(_GLF_IDENTITY(ivec2(64, 1), ivec2(ivec2(ivec2(64, 1))))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(64, 1), ivec2(ivec2(ivec2(64, 1))))), clamp(int(_GLF_IDENTITY(ivec2(64, 1), ivec2(ivec2(ivec2(64, 1))))), int(_GLF_IDENTITY(ivec2(64, 1), ivec2(ivec2(ivec2(64, 1))))), int(_GLF_IDENTITY(ivec2(64, 1), ivec2(ivec2(ivec2(64, 1))))))))), 0 ^ (int(_GLF_IDENTITY(ivec2(64, 1), ivec2(ivec2(ivec2(64, 1)))))))))), 64)), (_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(64, 1), ivec2(ivec2(ivec2(64, 1))))), 1 * (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(64, 1), ivec2(ivec2(ivec2(64, 1))))), 0 ^ (int(_GLF_IDENTITY(ivec2(64, 1), ivec2(ivec2(ivec2(64, 1)))))))))), 64))) | (_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(64, 1), ivec2(ivec2(ivec2(64, 1))))), 1 * (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(64, 1), ivec2(ivec2(ivec2(64, 1))))), 0 ^ (int(_GLF_IDENTITY(ivec2(64, 1), ivec2(ivec2(ivec2(64, 1)))))))))), 64)))))) | (~ (_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec2(64, 1), ivec2(ivec2(ivec2(64, 1)))))), 64))))))), int(ivec3(_GLF_IDENTITY(~ (_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec2(64, 1), ivec2(ivec2(ivec2(64, 1)))))), 64))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec2(64, 1), ivec2(ivec2(ivec2(_GLF_IDENTITY(64, (64) / 1), 1)))))), 64)), (_GLF_IDENTITY(_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec2(64, 1), ivec2(ivec2(ivec2(64, 1)))))), 64)), (true ? _GLF_IDENTITY(64, min(_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec2(64, 1), ivec2(ivec2(ivec2(64, 1)))))), 64)) : _GLF_FUZZED(-98205)))) / 1))) | (~ (_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec2(64, 1), ivec2(ivec2(ivec2(64, 1)))))), 64))))), 1, 0)))) >> 0))))), (64) | (64)), 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec2(virtual_gid, 1u)), clamp(uint(uvec2(virtual_gid, 1u)), uint(uvec2(virtual_gid, 1u)), _GLF_IDENTITY(uint(uvec2(virtual_gid, 1u)), (uint(uvec2(virtual_gid, 1u))) / 1u))))], 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.z = read;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), true))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, abs(1.0), 0.0, 0.0, 0.0)), min(vec2(mat2x3(injectionSwitch, abs(1.0), 0.0, 0.0, 0.0)), vec2(mat2x3(injectionSwitch, abs(1.0), 0.0, 0.0, 0.0))))).x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) < subgroup_size, ! (! (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) < subgroup_size))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   int i = 0;
   if(_GLF_DEAD(false))
    return;
   atomicStore(checker[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), ~ (~ ((virtual_gid)))) | 0u)], GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.z, 4, 64, _GLF_IDENTITY(4, (4) << _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(0, int(ivec2(_GLF_IDENTITY(0, min(0, 0)), 1))), _GLF_IDENTITY(1, (1) << 0), 1)))))));
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(4.1))) > injectionSwitch.y))) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false))), true, true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY((min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))) * (injectionSwitch)))) * mat2(1.0), (true ? (min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))) * mat2(1.0) : _GLF_FUZZED(vec2(-686.166, -0.5)))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, (true) || false), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), true, false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), true, false)), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), true, false)), bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false))))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, bool(bvec3(true, true, true))), false)), bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false))))), true)))))), true)))))), (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, (true) || false), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), true, false)), bvec3(bvec4(bvec3(bvec3(_GLF_DEAD(false), true, false)), true))))))) || false)))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
         if(_GLF_DEAD(false))
          return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), (! (false)) && true)), ! (! (bool(_GLF_IDENTITY(! (false), (! (false)) && true)))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), (! (false)) && true)), ! (! (bool(_GLF_IDENTITY(! (false), (! (false)) && true)))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), (! (false)) && true)), ! (! (bool(_GLF_IDENTITY(! (false), (! (false)) && true)))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), (! (false)) && true)), ! (! (bool(_GLF_IDENTITY(! (false), (! (false)) && true))))))))))))))))), true, false, false)))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))))))), _GLF_IDENTITY(false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), 1.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(mat2x4(_GLF_IDENTITY(mat2(1.0), mat2(mat2(mat2(1.0)))))))))), vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.3), _GLF_FUZZED((4.5 / 6.6))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(true, true))))))[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(0.5)), bool(false))), _GLF_FUZZED(88.86)), vec2(_GLF_FUZZED(-2.2), (injectionSwitch)[1]), bvec2(false, true))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.3), _GLF_FUZZED((4.5 / 6.6))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min(_GLF_IDENTITY((injectionSwitch)[1], max(_GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(563.996)), float((injectionSwitch)[1]), bool(true))), (injectionSwitch)[1])), (injectionSwitch)[1]))), bvec2(true, true))))))[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(0.5)), bool(false))), _GLF_FUZZED(88.86)), vec2(_GLF_FUZZED(-2.2), (injectionSwitch)[1]), bvec2(false, true))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.3), _GLF_FUZZED((4.5 / 6.6))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(true, true))))))[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(0.5)), bool(false))), _GLF_FUZZED(88.86)), vec2(_GLF_FUZZED(-2.2), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.3), _GLF_FUZZED((4.5 / 6.6))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(true, true))))))[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(0.5)), bool(false))), _GLF_FUZZED(88.86)), vec2(_GLF_FUZZED(-2.2), (injectionSwitch)[1]), bvec2(false, true))))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.3), _GLF_FUZZED((4.5 / 6.6))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(true, true))))))[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(0.5)), bool(false))), _GLF_FUZZED(88.86)), vec2(_GLF_FUZZED(-2.2), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), min((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.3), _GLF_FUZZED((4.5 / 6.6))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true)))) || false)))))))[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(0.5)), bool(false))), _GLF_FUZZED(88.86)), vec2(_GLF_FUZZED(-2.2), (injectionSwitch)[1]), bvec2(false, true))))))).x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), 1.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(mat2x4(_GLF_IDENTITY(mat2(1.0), mat2(mat2(mat2(1.0)))))))))), vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.3), _GLF_FUZZED((4.5 / 6.6))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(true, true))))))[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(0.5)), bool(false))), _GLF_FUZZED(88.86)), vec2(_GLF_FUZZED(-2.2), (injectionSwitch)[1]), bvec2(false, true))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.3), _GLF_FUZZED((4.5 / 6.6))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min(_GLF_IDENTITY((injectionSwitch)[1], max(_GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(563.996)), float((injectionSwitch)[1]), bool(true))), (injectionSwitch)[1])), (injectionSwitch)[1]))), bvec2(true, true))))))[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(0.5)), bool(false))), _GLF_FUZZED(88.86)), vec2(_GLF_FUZZED(-2.2), (injectionSwitch)[1]), bvec2(false, true))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.3), _GLF_FUZZED((4.5 / 6.6))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(true, true))))))[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(0.5)), bool(false))), _GLF_FUZZED(88.86)), vec2(_GLF_FUZZED(-2.2), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.3), _GLF_FUZZED((4.5 / 6.6))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(true, true))))))[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(0.5)), bool(false))), _GLF_FUZZED(88.86)), vec2(_GLF_FUZZED(-2.2), (injectionSwitch)[1]), bvec2(false, true))))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.3), _GLF_FUZZED((4.5 / 6.6))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(true, true))))))[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(0.5)), bool(false))), _GLF_FUZZED(88.86)), vec2(_GLF_FUZZED(-2.2), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), min((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.3), _GLF_FUZZED((4.5 / 6.6))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true)))) || false)))))))[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(0.5)), bool(false))), _GLF_FUZZED(88.86)), vec2(_GLF_FUZZED(-2.2), (injectionSwitch)[1]), bvec2(false, true))))))).x > injectionSwitch.y)))), true && (false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), (min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch[1], float(_GLF_IDENTITY(mat2(injectionSwitch[1], 0.0, 0.0, 1.0), (mat2(injectionSwitch[1], 0.0, 0.0, 1.0)) * mat2(1.0)))), injectionSwitch[1])))))) / vec2(1.0, 1.0))), 1.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(mat2x4(_GLF_IDENTITY(mat2(1.0), mat2(mat2(mat2(1.0)))))))))), vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.3), _GLF_FUZZED((4.5 / 6.6))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), mix(float(min((injectionSwitch)[1], (injectionSwitch)[1])), float(_GLF_FUZZED(-1.9)), bool(false))))), bvec2(true, true))))))[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(0.5)), _GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), true && (bool(false))))))) && true))), _GLF_FUZZED(88.86)), vec2(_GLF_FUZZED(-2.2), (injectionSwitch)[1]), bvec2(false, true))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.3), _GLF_FUZZED((4.5 / 6.6))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(true, true))))))[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(0.5)), bool(false))), _GLF_FUZZED(88.86)), vec2(_GLF_FUZZED(-2.2), (injectionSwitch)[1]), bvec2(false, true))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-9.3), _GLF_FUZZED((4.5 / 6.6))), cos(vec2(0.0, 0.0)) * (vec2(_GLF_FUZZED(-9.3), _GLF_FUZZED((4.5 / 6.6))))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(true, true))))))[0], mix(float(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0]))), float(_GLF_FUZZED(0.5)), bool(false))), _GLF_FUZZED(88.86)), vec2(_GLF_FUZZED(-2.2), (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-46724) : 1))) << 0)]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.3), _GLF_FUZZED((4.5 / 6.6))), vec2(_GLF_IDENTITY((injectionSwitch)[0], sin(0.0) + (_GLF_IDENTITY((injectionSwitch)[0], min(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[0])))), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) / 1), 1, 1))]))), bvec2(true, true))))))[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(0.5)), bool(false))), _GLF_FUZZED(88.86)), vec2(_GLF_FUZZED(-2.2), (injectionSwitch)[1]), bvec2(false, true))))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.3), _GLF_FUZZED((4.5 / 6.6))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(true, true))))))[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(0.5)), bool(false))), _GLF_FUZZED(88.86)), vec2(_GLF_FUZZED(-2.2), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), min((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.3), _GLF_FUZZED((_GLF_IDENTITY(4.5, clamp(4.5, 4.5, 4.5)) / 6.6))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false)))))))[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(0.5)), bool(false))), _GLF_FUZZED(88.86)), vec2(_GLF_FUZZED(-2.2), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, false || (true))))))))).x > injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-18.00))))) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-18.00))))) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), true && (! (false))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), bool(bvec3(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), _GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))), false))), true, false))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && (_GLF_IDENTITY(! (false), false || (! (false))))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), true && (! (false)))), bool(bvec4(! (_GLF_IDENTITY(! (false), true && (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! _GLF_IDENTITY((false), ! (! ((false)))))))), _GLF_IDENTITY(false, ! (! (false))))), false || (bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! _GLF_IDENTITY((false), ! (! ((false)))))))), false))))), true, false))), false, false), true))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))))), false)))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   atomicStore(checker[virtual_gid], GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.z, 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, 1 * (64))) | (_GLF_IDENTITY(64, (false ? _GLF_FUZZED(-15163) : 64)))), 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-8.6) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(8814.3571, -787.831)) : injectionSwitch)), mix(vec2((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(8814.3571, -787.831)) : injectionSwitch)))[0], _GLF_FUZZED(-1542.0638)), vec2(_GLF_FUZZED((5299.5616 - -46.41)), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(8814.3571, -787.831)) : injectionSwitch)))[1]), bvec2(false, true))).y) / _GLF_IDENTITY(dot(vec2(0.0, cos(0.0)), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, cos(0.0)), vec2(0.0, 1.0)), max(_GLF_IDENTITY(dot(vec2(0.0, cos(0.0)), vec2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), min(1.0, 1.0))), float(_GLF_IDENTITY(_GLF_FUZZED(9422.5909), clamp(_GLF_FUZZED(9422.5909), _GLF_FUZZED(9422.5909), _GLF_FUZZED(9422.5909)))), bool(false))))), _GLF_IDENTITY((_GLF_IDENTITY(dot(vec2(0.0, cos(0.0)), vec2(0.0, 1.0)), (dot(vec2(0.0, cos(0.0)), vec2(0.0, 1.0))) * 1.0)), ((dot(vec2(0.0, cos(0.0)), vec2(0.0, 1.0)))) / 1.0) * 1.0), dot(vec2(0.0, cos(0.0)), vec2(0.0, 1.0))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mix(vec2(_GLF_FUZZED(float(34432)), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[1]), vec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0], _GLF_FUZZED(-4.0)), bvec2(true, false))).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(18.27), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-3563.5894)), bvec2(true, _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))).x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || _GLF_IDENTITY(false, (false) || false))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
