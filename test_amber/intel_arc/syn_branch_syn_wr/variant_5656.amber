#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_0 {
 bvec2 _f0;
 uint workgroup_id;
 bvec4 _f1;
 int _f2;
 float _f3;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), false))), bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))))), false))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), false)))))))) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), false))), bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))))), false))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), false)))))))) && true), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), false))), bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))))), false))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), false)))))))) && true), (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), false))), bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))))), false))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), false)))))))) && true)) || false), false)))))), true, true)), ! _GLF_IDENTITY((! (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_DEAD(false)), false || (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true))))) && true), true, true)))), ! (! ((! (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && true), true, true))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) + vec2(0.0, 0.0)).y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) + vec2(0.0, 0.0)).y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-537.273) : injectionSwitch.y)))), injectionSwitch.y, injectionSwitch.y))))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((false) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(! (false))), (bool(bool(! (false)))) && true)))), bool(bvec4((false) || false, false, true, false)))) ? _GLF_FUZZED(157637u) : _GLF_IDENTITY(gl_NumWorkGroups.x, clamp(_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(_GLF_IDENTITY(gl_NumWorkGroups, (true ? _GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)) : _GLF_FUZZED(uvec3(152209u, 135594u, 93644u)))).x, gl_NumWorkGroups.x, gl_NumWorkGroups.x)), _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(min(_GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (gl_NumWorkGroups.x)), gl_NumWorkGroups.x), _GLF_IDENTITY(uint(uint(min(_GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (gl_NumWorkGroups.x)), gl_NumWorkGroups.x))), max(uint(uint(min(_GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (gl_NumWorkGroups.x)), gl_NumWorkGroups.x))), uint(uint(min(_GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (gl_NumWorkGroups.x)), gl_NumWorkGroups.x))))))), gl_NumWorkGroups.x)))), max(_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) : _GLF_FUZZED(-4.7))), injectionSwitch.y)))), true && (_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), vec2(mat2(injectionSwitch, 0.0, 0.0)))) * vec2(1.0, 1.0)).y, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 0.0)))) * vec2(1.0, 1.0)).y) / 1.0))), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, 1.0)), mix(vec2((vec2(vec4(injectionSwitch, 1.0, 1.0)))[0], _GLF_FUZZED(-9.5)), vec2(_GLF_FUZZED(1.0), (vec2(vec4(injectionSwitch, 1.0, 1.0)))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))))))), false)), bvec2(bvec4(bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) : _GLF_FUZZED(-4.7))), injectionSwitch.y)))), true && (_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), vec2(mat2(injectionSwitch, 0.0, 0.0)))) * vec2(1.0, 1.0)).y, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 0.0)))) * vec2(1.0, 1.0)).y) / 1.0))), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, 1.0)), mix(vec2((vec2(vec4(injectionSwitch, 1.0, 1.0)))[0], _GLF_FUZZED(-9.5)), vec2(_GLF_FUZZED(1.0), (vec2(vec4(injectionSwitch, 1.0, 1.0)))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))))))), false)), false, true)))))), (false) || false) ? _GLF_FUZZED(157637u) : _GLF_IDENTITY(gl_NumWorkGroups.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(_GLF_IDENTITY(gl_NumWorkGroups.x, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(uint(uint(gl_NumWorkGroups.x)), (uint(uint(gl_NumWorkGroups.x))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 1u), min(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, uint(uint(gl_NumWorkGroups.x))), 1u), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, uint(uint(gl_NumWorkGroups.x))), 1u), (uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, uint(uint(gl_NumWorkGroups.x))), 1u)) | (uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, uint(uint(gl_NumWorkGroups.x))), 1u))))))), _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((gl_NumWorkGroups.x) | (gl_NumWorkGroups.x), ((gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)) | ((gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)))), gl_NumWorkGroups.x)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))))).x, clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)).x, _GLF_IDENTITY(gl_NumWorkGroups.x, 0u + (gl_NumWorkGroups.x)))), 0u, 1u), (true ? uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, uint(uvec3(gl_NumWorkGroups.x, 1u, 0u))), ~ (~ (gl_NumWorkGroups.x))), gl_NumWorkGroups.x, gl_NumWorkGroups.x)), 0u, 1u) : _GLF_FUZZED((_GLF_IDENTITY(uvec3(60244u, 87160u, 180024u), (uvec3(60244u, 87160u, 180024u)) << uvec3(0u, 0u, 0u)) & uvec3(90759u, 30967u, 74334u))))))), _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u))), max((gl_NumWorkGroups), (gl_NumWorkGroups))), 1u), (uvec4(_GLF_IDENTITY((gl_NumWorkGroups), max((gl_NumWorkGroups), (gl_NumWorkGroups))), 1u)) >> uvec4(0u, 0u, 0u, 0u)))) + (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u), min(uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(uvec4(uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u), 1u)), (uvec3(uvec4(uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u), 1u))) << uvec3(0u, 0u, 0u))))), ~ (~ (_GLF_IDENTITY(uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u), min(uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)) / uvec3(1u, 1u, 1u)))), _GLF_IDENTITY(uvec3(uvec4(uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u), 1u)), (uvec3(uvec4(uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u), 1u))) << uvec3(0u, 0u, 0u)))))))))).x, gl_NumWorkGroups.x)))), _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))) ? _GLF_FUZZED(157637u) : _GLF_IDENTITY(gl_NumWorkGroups.x, clamp(_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x)), gl_NumWorkGroups.x, gl_NumWorkGroups.x))), 0u + ((_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) ? _GLF_IDENTITY(_GLF_FUZZED(157637u), (false ? _GLF_FUZZED(subgroup_size) : _GLF_FUZZED(157637u))) : _GLF_IDENTITY(gl_NumWorkGroups.x, clamp(_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) - 0u), gl_NumWorkGroups.x)), gl_NumWorkGroups.x, gl_NumWorkGroups.x)))))))), (_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(157637u) : _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)).x))) | 0u), _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))) << uvec3(0u, 0u, 0u))), _GLF_IDENTITY(clamp(clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups), clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups), _GLF_IDENTITY(clamp(_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), uvec3(uvec3(~ (gl_NumWorkGroups)))))), gl_NumWorkGroups, gl_NumWorkGroups), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(clamp(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (gl_NumWorkGroups)), gl_NumWorkGroups, gl_NumWorkGroups), ~ (~ (clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups), ~ (~ (clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))))), uvec3(uvec3((_GLF_IDENTITY(clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups), ~ (~ (clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(0u, 0u, 0u))) << uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), gl_NumWorkGroups)))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups), ~ (~ (clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups), ~ (~ (clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))))))), uvec3(uvec3((_GLF_IDENTITY(clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups), ~ (~ (clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))))))))) | (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(8u), uvec3(8u))))) | ((_GLF_IDENTITY(clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups), ~ (~ (clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))))))) << uvec3(0u, 0u, 0u), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups), ~ (~ (_GLF_IDENTITY(clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups), max(clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups), _GLF_IDENTITY(clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups), (false ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(64840u, 97075u, 10004u), max(uvec3(64840u, 97075u, 10004u), uvec3(64840u, 97075u, 10004u)))) : _GLF_IDENTITY(clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)), gl_NumWorkGroups), (true ? clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups) : _GLF_FUZZED(uvec3(118141u, 148363u, 172145u)))))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups), _GLF_IDENTITY(~ (~ _GLF_IDENTITY((clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)), ((clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))) / uvec3(1u, 1u, 1u))), min(~ (~ _GLF_IDENTITY((clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)), ((clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))) / uvec3(1u, 1u, 1u))), _GLF_IDENTITY(~ (~ _GLF_IDENTITY((clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)), ((clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))) / uvec3(1u, 1u, 1u))), (~ (~ _GLF_IDENTITY((clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)), ((clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))) / uvec3(1u, 1u, 1u)))) | (~ (~ _GLF_IDENTITY((clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)), ((clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))) / uvec3(1u, 1u, 1u))))))))), uvec3(uvec3((_GLF_IDENTITY(clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups), ~ (~ (clamp(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(150665u, 63332u, 46809u)))))), gl_NumWorkGroups, gl_NumWorkGroups))))))))) | ((_GLF_IDENTITY(clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups), ~ (~ (clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))))))))) << uvec3(0u, 0u, 0u)), ((_GLF_IDENTITY((_GLF_IDENTITY(clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups), ~ (~ (_GLF_IDENTITY(clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups), max(clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups), _GLF_IDENTITY(clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups), (false ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(64840u, 97075u, 10004u), max(uvec3(64840u, 97075u, 10004u), uvec3(64840u, 97075u, 10004u)))) : _GLF_IDENTITY(clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)), gl_NumWorkGroups), (true ? clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups) : _GLF_FUZZED(uvec3(118141u, 148363u, 172145u)))))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups), _GLF_IDENTITY(~ (~ _GLF_IDENTITY((clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)), ((clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))) / uvec3(1u, 1u, 1u))), min(~ (~ _GLF_IDENTITY((clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)), ((clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))) / uvec3(1u, 1u, 1u))), _GLF_IDENTITY(~ (~ _GLF_IDENTITY((clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)), ((clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))) / uvec3(1u, 1u, 1u))), (~ (~ _GLF_IDENTITY((clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)), ((clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))) / uvec3(1u, 1u, 1u)))) | (~ (~ _GLF_IDENTITY((clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)), ((clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))) / uvec3(1u, 1u, 1u))))))))), uvec3(uvec3((_GLF_IDENTITY(clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups), ~ (~ (clamp(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(150665u, 63332u, 46809u)))))), gl_NumWorkGroups, gl_NumWorkGroups))))))))) | ((_GLF_IDENTITY(clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups), ~ (~ (clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))))))))) << uvec3(0u, 0u, 0u))) * uvec3(1u, 1u, 1u)))))), max(clamp(clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups), clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups), _GLF_IDENTITY(clamp(_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), uvec3(uvec3(~ (gl_NumWorkGroups)))))), gl_NumWorkGroups, gl_NumWorkGroups), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(clamp(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (gl_NumWorkGroups)), gl_NumWorkGroups, gl_NumWorkGroups), ~ (~ (clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups), ~ (~ (clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))))), uvec3(uvec3((_GLF_IDENTITY(clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups), ~ (~ (clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(0u, 0u, 0u))) << uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), gl_NumWorkGroups)))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups), ~ (~ (clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups), ~ (~ (clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))))))), uvec3(uvec3((_GLF_IDENTITY(clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups), ~ (~ (clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))))))))) | (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(8u), uvec3(8u))))) | ((_GLF_IDENTITY(clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups), ~ (~ (clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))))))) << uvec3(0u, 0u, 0u), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups), ~ (~ (_GLF_IDENTITY(clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups), max(clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups), _GLF_IDENTITY(clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups), (false ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(64840u, 97075u, 10004u), max(uvec3(64840u, 97075u, 10004u), uvec3(64840u, 97075u, 10004u)))) : _GLF_IDENTITY(clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)), gl_NumWorkGroups), (true ? clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups) : _GLF_FUZZED(uvec3(118141u, 148363u, 172145u)))))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups), _GLF_IDENTITY(~ (~ _GLF_IDENTITY((clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)), ((clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))) / uvec3(1u, 1u, 1u))), min(~ (~ _GLF_IDENTITY((clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)), ((clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))) / uvec3(1u, 1u, 1u))), _GLF_IDENTITY(~ (~ _GLF_IDENTITY((clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)), ((clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))) / uvec3(1u, 1u, 1u))), (~ (~ _GLF_IDENTITY((clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)), ((clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))) / uvec3(1u, 1u, 1u)))) | (~ (~ _GLF_IDENTITY((clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)), ((clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))) / uvec3(1u, 1u, 1u))))))))), uvec3(uvec3((_GLF_IDENTITY(clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups), ~ (~ (clamp(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(150665u, 63332u, 46809u)))))), gl_NumWorkGroups, gl_NumWorkGroups))))))))) | ((_GLF_IDENTITY(clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups), ~ (~ (clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))))))))) << uvec3(0u, 0u, 0u)), ((_GLF_IDENTITY((_GLF_IDENTITY(clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups), ~ (~ (_GLF_IDENTITY(clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups), max(clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups), _GLF_IDENTITY(clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups), (false ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(64840u, 97075u, 10004u), max(uvec3(64840u, 97075u, 10004u), uvec3(64840u, 97075u, 10004u)))) : _GLF_IDENTITY(clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)), gl_NumWorkGroups), (true ? clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups) : _GLF_FUZZED(uvec3(118141u, 148363u, 172145u)))))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups), _GLF_IDENTITY(~ (~ _GLF_IDENTITY((clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)), ((clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))) / uvec3(1u, 1u, 1u))), min(~ (~ _GLF_IDENTITY((clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)), ((clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))) / uvec3(1u, 1u, 1u))), _GLF_IDENTITY(~ (~ _GLF_IDENTITY((clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)), ((clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))) / uvec3(1u, 1u, 1u))), (~ (~ _GLF_IDENTITY((clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)), ((clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))) / uvec3(1u, 1u, 1u)))) | (~ (~ _GLF_IDENTITY((clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)), ((clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))) / uvec3(1u, 1u, 1u))))))))), uvec3(uvec3((_GLF_IDENTITY(clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups), ~ (~ (clamp(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(150665u, 63332u, 46809u)))))), gl_NumWorkGroups, gl_NumWorkGroups))))))))) | ((_GLF_IDENTITY(clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups), ~ (~ (clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))))))))) << uvec3(0u, 0u, 0u))) * uvec3(1u, 1u, 1u)))))), clamp(clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups), clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups), _GLF_IDENTITY(clamp(_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), uvec3(uvec3(~ (gl_NumWorkGroups)))))), gl_NumWorkGroups, gl_NumWorkGroups), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(clamp(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (gl_NumWorkGroups)), gl_NumWorkGroups, gl_NumWorkGroups), ~ (~ (clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups), ~ (~ (clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))))), uvec3(uvec3((_GLF_IDENTITY(clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups), ~ (~ (clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(0u, 0u, 0u))) << uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), gl_NumWorkGroups)))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups), ~ (~ (clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups), ~ (~ (clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))))))), uvec3(uvec3((_GLF_IDENTITY(clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups), ~ (~ (clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))))))))) | (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(8u), uvec3(8u))))) | ((_GLF_IDENTITY(clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups), ~ (~ (clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))))))) << uvec3(0u, 0u, 0u), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups), ~ (~ (_GLF_IDENTITY(clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups), max(clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups), _GLF_IDENTITY(clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups), (false ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(64840u, 97075u, 10004u), max(uvec3(64840u, 97075u, 10004u), uvec3(64840u, 97075u, 10004u)))) : _GLF_IDENTITY(clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)), gl_NumWorkGroups), (true ? clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups) : _GLF_FUZZED(uvec3(118141u, 148363u, 172145u)))))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups), _GLF_IDENTITY(~ (~ _GLF_IDENTITY((clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)), ((clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))) / uvec3(1u, 1u, 1u))), min(~ (~ _GLF_IDENTITY((clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)), ((clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))) / uvec3(1u, 1u, 1u))), _GLF_IDENTITY(~ (~ _GLF_IDENTITY((clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)), ((clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))) / uvec3(1u, 1u, 1u))), (~ (~ _GLF_IDENTITY((clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)), ((clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))) / uvec3(1u, 1u, 1u)))) | (~ (~ _GLF_IDENTITY((clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)), ((clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))) / uvec3(1u, 1u, 1u))))))))), uvec3(uvec3((_GLF_IDENTITY(clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups), ~ (~ (clamp(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(150665u, 63332u, 46809u)))))), gl_NumWorkGroups, gl_NumWorkGroups))))))))) | ((_GLF_IDENTITY(clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups), ~ (~ (clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))))))))) << uvec3(0u, 0u, 0u)), ((_GLF_IDENTITY((_GLF_IDENTITY(clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups), ~ (~ (_GLF_IDENTITY(clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups), max(clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups), _GLF_IDENTITY(clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups), (false ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(64840u, 97075u, 10004u), max(uvec3(64840u, 97075u, 10004u), uvec3(64840u, 97075u, 10004u)))) : _GLF_IDENTITY(clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)), gl_NumWorkGroups), (true ? clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups) : _GLF_FUZZED(uvec3(118141u, 148363u, 172145u)))))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups), _GLF_IDENTITY(~ (~ _GLF_IDENTITY((clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)), ((clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))) / uvec3(1u, 1u, 1u))), min(~ (~ _GLF_IDENTITY((clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)), ((clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))) / uvec3(1u, 1u, 1u))), _GLF_IDENTITY(~ (~ _GLF_IDENTITY((clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)), ((clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))) / uvec3(1u, 1u, 1u))), (~ (~ _GLF_IDENTITY((clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)), ((clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))) / uvec3(1u, 1u, 1u)))) | (~ (~ _GLF_IDENTITY((clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)), ((clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))) / uvec3(1u, 1u, 1u))))))))), uvec3(uvec3((_GLF_IDENTITY(clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups), ~ (~ (clamp(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(150665u, 63332u, 46809u)))))), gl_NumWorkGroups, gl_NumWorkGroups))))))))) | ((_GLF_IDENTITY(clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups), ~ (~ (clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))))))))) << uvec3(0u, 0u, 0u))) * uvec3(1u, 1u, 1u)))))))))).x));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, false)), true && (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_1 _GLF_struct_replacement_1 = _GLF_struct_1(_GLF_struct_0(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), bool(_GLF_IDENTITY(bvec2(! _GLF_IDENTITY((! (true)), bool(bvec4((! (true)), true, false, true))), true), bvec2(bvec2(bvec2(! (! (true)), true)))))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), (_GLF_IDENTITY((! (true)), bool(bvec4((! (true)), true, false, false)))) || false))), false))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(true), false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec3(bvec2(true), false)), bvec2(bvec3(bvec2(bvec3(bvec2(true), false)), false)))), true))), false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec4(bvec3(bvec2(true), _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true))), true)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec4(bvec3(bvec2(true), false), _GLF_IDENTITY(true, (true) && true)))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true)))))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec4(bvec3(bvec2(true), false), _GLF_IDENTITY(true, (true) && true)))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true)))))))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec4(bvec3(bvec2(true), false), _GLF_IDENTITY(true, (true) && true)))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true)))))))), true)), true)))))))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec2(true), false))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec2(true), false))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(bvec2(true), false))), true)), false))))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(true), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec2(true), false)), bvec3(bvec4(bvec3(bvec3(bvec2(true), false)), true))), true)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec2(true), false))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, false || (true)))))), false))), true)), false)))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec2(true), false))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec2(true), false))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec2(bvec2(true))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(bvec2(true))), false), bvec3(bvec3(bvec3(bvec2(bvec2(bvec2(true))), false))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(bvec2(true))), false), bvec3(bvec3(bvec3(bvec2(bvec2(bvec2(true))), false)))))))))), false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec2(true), false)), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec2(true), false)), false))))))), true)), false)))))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec2(true), false))), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec2(true), false))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(bvec2(true), false))), true)), _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec2(true), false))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(bvec2(true), false))), true)), false))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec2(true), false))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(bvec2(true), false))), true)), false))), false))))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec2(true), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec2(true), false))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(bvec2(true), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))))), true)), false)))))))))), false)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(true), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec4(bvec3(bvec2(true), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(true), false)), bvec3(bvec4(bvec3(bvec3(bvec2(true), false)), false))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(true), false)), bvec3(bvec4(bvec3(bvec3(bvec2(true), false)), false)))))))))))))))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))), false), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))), false)))), false)))), false, false)))), gl_WorkGroupID.x, bvec4(true), 1, 1.0));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), true, false)))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), true, false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) ? injectionSwitch : _GLF_FUZZED(vec2(9.6, -74.62)))).y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_IDENTITY(false, false || (false)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) && true)))) || false)))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 uint workgroup_base = workgroup_size * _GLF_struct_replacement_1._f0.workgroup_id;
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (1u ^ 1u)) * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(0u & 10896u, _GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u)) & 10896u) / 1u, _GLF_IDENTITY(((0u & 10896u) / 1u), (((0u & 10896u) / 1u)) / 1u) >> 0u))) | (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), 1u))), subgroup_size, subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) | 0u, ((subgroup_id) | 0u) | ((subgroup_id) | 0u))))) * subgroup_size), max((subgroup_id * subgroup_size), (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size))) << (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))))) | _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) / 1u))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), false || (bool(_GLF_IDENTITY(false, true && (false)))))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) - 0u) + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, _GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))), _GLF_IDENTITY(0u | (subgroup_base), max(_GLF_IDENTITY(0u | _GLF_IDENTITY((subgroup_base), (_GLF_IDENTITY((subgroup_base), ((subgroup_base)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | ((subgroup_base))), (0u | (_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u))) << 0u), 0u | (subgroup_base)))), (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(0u | (subgroup_base), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(0u | (subgroup_base), (0u | (subgroup_base)) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(0u | (subgroup_base), (0u | (subgroup_base)) << 0u), (_GLF_IDENTITY(0u | (subgroup_base), (0u | (subgroup_base)) << 0u)) | (_GLF_IDENTITY(0u | (subgroup_base), (_GLF_IDENTITY(0u, ~ (~ (0u))) | (subgroup_base)) << 0u)))) ^ 0u), _GLF_IDENTITY(0u | (subgroup_base), clamp(_GLF_IDENTITY(0u | (subgroup_base), (0u | (subgroup_base)) | 0u), 0u | (subgroup_base), 0u | (subgroup_base)))), (max(_GLF_IDENTITY(_GLF_IDENTITY(0u | (subgroup_base), (0u | (subgroup_base)) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(0u | (subgroup_base), (0u | (subgroup_base)) << 0u), (_GLF_IDENTITY(0u | (subgroup_base), (0u | (subgroup_base)) << 0u)) | (_GLF_IDENTITY(0u | (subgroup_base), (_GLF_IDENTITY(0u, ~ (~ (0u))) | (subgroup_base)) << 0u)))) ^ 0u), _GLF_IDENTITY(0u | (subgroup_base), clamp(_GLF_IDENTITY(0u | (subgroup_base), (0u | (subgroup_base)) | 0u), 0u | (subgroup_base), 0u | (subgroup_base))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | 0u) + _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) / 1)))) % subgroup_size), _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))) % subgroup_size)), clamp((((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), min(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), (max(1, 1)) << 0)), 0 ^ (_GLF_IDENTITY(1, max(1, 1))))))) % subgroup_size)), _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (1u ^ 1u) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))))) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))))), uint(uint((_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, max(1, 1))) % subgroup_size), max(((subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))) % subgroup_size), ((subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))) % subgroup_size))), (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, max(1, 1))) % subgroup_size), max(((subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))) % subgroup_size), ((subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))) % subgroup_size)))) | (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, max(1, 1))) % subgroup_size), max(((subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))) % subgroup_size), ((subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))) % subgroup_size))))))))), _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))) % subgroup_size)), _GLF_IDENTITY(((((subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))) % _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))))))))) >> 0u, min(((((subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))) % subgroup_size))) >> 0u, ((((subgroup_local_id + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1 ^ 1) ^ (1))))) % subgroup_size))) >> 0u))))) >> _GLF_IDENTITY(0u, ~ (~ (0u))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint read = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(_GLF_IDENTITY(abs(-32775), (abs(-32775)) << 0)) : 0)), _GLF_IDENTITY((0), _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, ~ (~ (0))), 0)) | (_GLF_IDENTITY((0), min((0), (0))))) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(_GLF_IDENTITY(abs(-32775), (abs(-32775)) << 0)) : 0)), _GLF_IDENTITY((0), _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, ~ (~ (0))), 0)) | (_GLF_IDENTITY((0), min((0), (0))))) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(_GLF_IDENTITY(abs(-32775), (abs(-32775)) << 0)) : 0)), _GLF_IDENTITY((0), _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, ~ (~ (0))), 0)) | (_GLF_IDENTITY((0), min((0), (0))))) - 0)) ^ 0)) - 0);
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), (uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-4252) : _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), 0 ^ (_GLF_IDENTITY((1), ((1)) << (0 >> _GLF_IDENTITY(int(2), int(2)))))))))) | 0), 1))) | (_GLF_IDENTITY(1, min(1, 1)))), 1)))) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(0 + (4), int(ivec2(_GLF_IDENTITY(0 + (4), (true ? 0 + (4) : _GLF_FUZZED(-2510))), 1)))), (_GLF_IDENTITY(4, 0 + (4))) + 0), 64, _GLF_IDENTITY(4, (4) << 0));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), bool(bool(! (_GLF_IDENTITY(false, true && (false))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if((subgroup_local_id % _GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, max(2, 2)), 2, _GLF_IDENTITY(2, (0 >> _GLF_IDENTITY(int(4), int(4))) ^ (2))))) == 0)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))))) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), injectionSwitch)).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))))) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))))) - vec2(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-68.02))))), 0.0))) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))), true && (bool(bool((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))))) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))))) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)), min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))))) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))))) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), injectionSwitch)).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))))) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)), vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))))) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))))) - vec2(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-68.02))))), 0.0))) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))), true && (bool(bool((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))))) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch), clamp(clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))))) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch), clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))))) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch), clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))))) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)))), injectionSwitch)).x > injectionSwitch.y)))))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   read = _GLF_IDENTITY(atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u)], 4, 64, 2), (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u)], 4, 64, 2)) >> 0u);
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   _GLF_IDENTITY(_GLF_IDENTITY(read = atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u), clamp(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u), _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u), (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u)) + 0u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid]))), (buf[virtual_gid]) >> 0u), clamp(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u), _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u), (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u)) + 0u)))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[virtual_gid]), (false ? _GLF_FUZZED(num_workgroup) : (buf[virtual_gid]))) >> _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) - 0u)) >> 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY(0u, (0u) - 0u)) >> 0u)))))), _GLF_IDENTITY(0u, (0u) ^ 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) << 0u)) >> 0u, clamp((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) << 0u)) >> 0u, (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) << 0u)) >> 0u, _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) << 0u)) >> 0u, min((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) << 0u)) >> 0u, (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) << 0u)) >> 0u))))), uint(uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))], _GLF_IDENTITY((buf[virtual_gid]), (1u & 1u) * (_GLF_IDENTITY((buf[virtual_gid]), max((buf[virtual_gid]), (buf[virtual_gid]))))) >> 0u), 0u, 0u))))))), _GLF_IDENTITY(4, (false ? _GLF_FUZZED(95808) : 4)), 64, _GLF_IDENTITY(2, clamp(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) - 0), int(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, int(int(2)))) - 0), 0 | (_GLF_IDENTITY(2, (2) - 0)))) | 0), (false ? _GLF_FUZZED(-50949) : _GLF_IDENTITY(_GLF_IDENTITY(2, (2) - 0), (_GLF_IDENTITY(2, (2) - 0)) | 0)))), (true ? int(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) - 0), _GLF_IDENTITY((_GLF_IDENTITY(2, (2) - 0)), ((_GLF_IDENTITY(2, (2) - 0))) | 0) | 0)) : _GLF_FUZZED(-82013))))), _GLF_IDENTITY(2, _GLF_IDENTITY(min(2, _GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(-99128) : 2, 0 | (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(-99128) : 2))))), ~ (~ (min(2, _GLF_IDENTITY(2, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(-99128) : 2))))))), 2))), _GLF_IDENTITY(0u + (_GLF_IDENTITY(read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u), 4, 64, 2), (_GLF_IDENTITY(_GLF_IDENTITY(read = _GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u), clamp(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u), ~ (~ (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u)))), _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u))), 4, 64, 2), (atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u), clamp(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u), ~ (~ (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u)))), _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u))), 4, 64, 2)) << _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (0u)))))), (read = _GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u), 4, 64, 2), (atomicLoad(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), (virtual_gid) | 0u)]), min((buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) | 0u, ~ (~ ((virtual_gid) | 0u))))]), (buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) | 0u, max((virtual_gid) | 0u, (virtual_gid) | 0u)))]))) >> 0u), 4, 64, 2)) - 0u)) >> 0u), (0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), uint(uvec3(uint(6u), 1u, 0u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(read = _GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u), clamp(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u), ~ (~ (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u)))), _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u))), 4, 64, 2), (atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u), clamp(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u), ~ (~ (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u)))), _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u))), 4, 64, 2)) << _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (0u)))))), (read = _GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u), 4, 64, 2), (atomicLoad(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), (virtual_gid) | 0u)]), min((buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) | 0u, ~ (~ ((virtual_gid) | 0u))))]), (buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) | 0u, max((virtual_gid) | 0u, (virtual_gid) | 0u)))]))) >> 0u), 4, 64, 2)) - 0u)) >> 0u), (true ? _GLF_IDENTITY(read = _GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u), clamp(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u), ~ (~ (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u)))), _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u))), 4, 64, 2), (atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u), clamp(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u), ~ (~ (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u)))), _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u))), 4, 64, 2)) << _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (0u)))))), (read = _GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u), 4, 64, 2), (atomicLoad(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), (virtual_gid) | 0u)]), min((buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) | 0u, ~ (~ ((virtual_gid) | 0u))))]), (buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) | 0u, max((virtual_gid) | 0u, (virtual_gid) | 0u)))]))) >> 0u), 4, 64, 2)) - 0u)) >> 0u) : _GLF_FUZZED(185807u)))))) / 1u)), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (0u + (_GLF_IDENTITY(read = atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u), max(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u), _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u))), 4, 64, 2), (_GLF_IDENTITY(read = _GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], max(_GLF_IDENTITY(buf[virtual_gid], clamp(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u), _GLF_IDENTITY(buf[virtual_gid], uint(uvec4(buf[virtual_gid], 1u, 0u, 0u))), _GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], buf[virtual_gid])))), buf[virtual_gid])), _GLF_IDENTITY((buf[virtual_gid]) >> 0u, (0u << _GLF_IDENTITY(uint(8u), uint(8u))) ^ (_GLF_IDENTITY(_GLF_IDENTITY((buf[virtual_gid]) >> 0u, ((buf[virtual_gid]) >> 0u) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), (false ? _GLF_FUZZED((workgroup_base / next_virtual_gid)) : _GLF_IDENTITY((buf[virtual_gid]) >> 0u, ((buf[virtual_gid]) >> 0u) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), clamp(_GLF_IDENTITY(buf[virtual_gid], (buf[_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))]) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u), ~ (~ (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u)))), _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u))), 4, 64, 2), (atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[virtual_gid]) >> 0u, clamp(_GLF_IDENTITY((buf[virtual_gid]) >> 0u, 0u + ((buf[virtual_gid]) >> 0u)), _GLF_IDENTITY((buf[virtual_gid]) >> 0u, max((buf[virtual_gid]) >> 0u, _GLF_IDENTITY((buf[virtual_gid]) >> 0u, ((buf[virtual_gid]) >> 0u) >> 0u))), (buf[virtual_gid]) >> 0u))), clamp(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u)) << 0u)) - (0u >> _GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) / 1u)) << 0u)) >> 0u)))))]) >> 0u), ~ (~ (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u)))), _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> _GLF_IDENTITY(0u, (0u) * (1u & 1u))))), 4, 64, 2)) << 0u), (read = _GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid])), (buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u)]) >> 0u), 4, 64, 2), (_GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)]), min(_GLF_IDENTITY((buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)]), (_GLF_IDENTITY((buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)]), clamp((buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)]), (buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)]), (buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)])))) * 1u), (buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) | 0u, max(_GLF_IDENTITY((virtual_gid) | 0u, ((virtual_gid) | 0u) | ((virtual_gid) | 0u)), (virtual_gid) | 0u)))]))) >> 0u), 4, 64, 2), (false ? _GLF_FUZZED(subgroup_base) : atomicLoad(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY((buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)]), min((buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)]), (buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED((next_virtual_gid --)) : _GLF_IDENTITY(virtual_gid, (virtual_gid) + 0u))), _GLF_IDENTITY((virtual_gid) | 0u, max(_GLF_IDENTITY((virtual_gid) | _GLF_IDENTITY(0u, (0u) | (0u)), ((virtual_gid) | 0u) | ((virtual_gid) | 0u)), (virtual_gid) | 0u)))]))) >> 0u, max(_GLF_IDENTITY((buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)]), min((buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)]), (buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) | 0u, max(_GLF_IDENTITY((virtual_gid) | 0u, ((virtual_gid) | 0u) | ((virtual_gid) | 0u)), (virtual_gid) | 0u)))]))) >> 0u, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)]), min((buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)]), (buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) | 0u, max(_GLF_IDENTITY((virtual_gid) | 0u, ((virtual_gid) | 0u) | ((virtual_gid) | 0u)), (virtual_gid) | 0u)))]))) >> 0u, (false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY((buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)]), min((buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)]), (buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) | 0u, max(_GLF_IDENTITY((virtual_gid) | 0u, ((virtual_gid) | 0u) | ((virtual_gid) | 0u)), (virtual_gid) | 0u)))]))) >> 0u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)]), min((buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)]), (buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) | 0u, max(_GLF_IDENTITY((virtual_gid) | 0u, ((virtual_gid) | 0u) | ((virtual_gid) | 0u)), (virtual_gid) | 0u)))]))) >> 0u, (false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY((buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)]), min((buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)]), (buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) | 0u, max(_GLF_IDENTITY((virtual_gid) | 0u, ((virtual_gid) | 0u) | ((virtual_gid) | 0u)), (virtual_gid) | 0u)))]))) >> 0u)), (_GLF_IDENTITY(_GLF_IDENTITY((buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)]), min((buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)]), (buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) | 0u, max(_GLF_IDENTITY((virtual_gid) | 0u, ((virtual_gid) | 0u) | ((virtual_gid) | 0u)), (virtual_gid) | 0u)))]))) >> 0u, (false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY((buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)]), min((buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)]), (buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) | 0u, max(_GLF_IDENTITY((virtual_gid) | 0u, ((virtual_gid) | 0u) | ((virtual_gid) | 0u)), (virtual_gid) | 0u)))]))) >> 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY((buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)]), min((buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)]), (buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) | 0u, max(_GLF_IDENTITY((virtual_gid) | 0u, ((virtual_gid) | 0u) | ((virtual_gid) | 0u)), (virtual_gid) | 0u)))]))) >> 0u, (false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY((buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)]), min((buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)]), (buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) | 0u, max(_GLF_IDENTITY((virtual_gid) | 0u, ((virtual_gid) | 0u) | ((virtual_gid) | 0u)), (virtual_gid) | 0u)))]))) >> 0u)))) : _GLF_FUZZED(atomicXor(subgroup_id, 35791u))))))), 4, 64, 2)))) - 0u)) >> 0u)) / 1u))))), (0u << _GLF_IDENTITY(uint(8u), uint(8u))) + _GLF_IDENTITY((read = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, (2) | (2)))), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((read = atomicLoad(buf[virtual_gid], 4, 64, 2)), ((read = atomicLoad(buf[virtual_gid], 4, 64, 2))) / 1u), (_GLF_IDENTITY((read = atomicLoad(buf[virtual_gid], 4, 64, 2)), (false ? _GLF_FUZZED(workgroup_base) : (read = atomicLoad(buf[virtual_gid], 4, 64, 2))))) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY((read = atomicLoad(buf[virtual_gid], 4, 64, 2)), (_GLF_IDENTITY((read = atomicLoad(buf[virtual_gid], 4, 64, 2)), (false ? _GLF_FUZZED(workgroup_base) : (read = atomicLoad(buf[virtual_gid], 4, 64, 2))))) >> 0u), 0u | (_GLF_IDENTITY((read = atomicLoad(buf[virtual_gid], 4, 64, 2)), (_GLF_IDENTITY((read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (true ? _GLF_IDENTITY(buf[virtual_gid], uint(uvec4(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid])), 1u, 0u, 1u))) : _GLF_FUZZED(read))), _GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4))))), 64, 2)), (false ? _GLF_FUZZED(workgroup_base) : (read = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, max(2, 2))))))) >> 0u)))) - 0u)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(6u), uint(6u))) ^ ((_GLF_IDENTITY((read = atomicLoad(buf[virtual_gid], 4, 64, 2)), (_GLF_IDENTITY((read = atomicLoad(buf[virtual_gid], 4, 64, 2)), (false ? _GLF_FUZZED(workgroup_base) : (read = atomicLoad(buf[virtual_gid], 4, 64, 2))))) >> 0u))))));
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, round(_GLF_IDENTITY(length(normalize(1.0)), min(length(normalize(1.0)), length(normalize(1.0)))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-7.6), _GLF_FUZZED(-2120.3539)), bvec2(false, false)))) - vec2(0.0, 0.0))) * mat2(1.0)))).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), false, false, false))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, (true ? injectionSwitch.y : _GLF_FUZZED(-4861.4844))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true), bvec3(bvec3(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)))))))), false, false), true))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), false, true)))) && true)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(6831.9018)), bool(false))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false), true))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false), true)))))))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (! (true))) && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true, false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), false || ((_GLF_IDENTITY(false, true && (false))))) && true) || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))), ! (! (! (false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true) || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, float(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, float(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, 1.0, 0.0, 0.0, 1.0, 1.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), length(0.0), 0.0, 1.0, 1.0))) > injectionSwitch.y))))), ! (! _GLF_IDENTITY((! (false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2((! (false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false)))))))))), (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false || _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) - vec2(0.0, 0.0))).y)), injectionSwitch.y)))))))), bool(bool((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (false))) && true) || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, sqrt(0.0), 1.0, 0.0, 1.0, 0.0)))) / vec2(1.0, 1.0)), injectionSwitch)).x, float(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, float(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, 1.0, 0.0, 0.0, 1.0, 1.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0 * (0.0)), length(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true)))), 0.0, 1.0, 1.0))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, sqrt(0.0), 1.0, 0.0, 1.0, 0.0)))) / vec2(1.0, 1.0)), injectionSwitch)).x, float(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, float(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, 1.0, 0.0, 0.0, 1.0, 1.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0 * (0.0)), length(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true)))), 0.0, 1.0, 1.0)))), float(_GLF_FUZZED(56.90)), bool(false))) > injectionSwitch.y))))), ! (! (! (false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))) && true)))
  return;
 atomicStore(checker[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u), virtual_gid))) - 0u), _GLF_IDENTITY(~ (~ (virtual_gid)), (~ (_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) | (~ (virtual_gid))))) - 0u))], read, 4, 64, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-89950))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(_GLF_IDENTITY(bool(! (! (false))), bool(_GLF_IDENTITY(bvec3(bool(! (! (false))), false, true), bvec3(bvec3(bvec3(bool(! (_GLF_IDENTITY(! (false), true && (! (false))))), false, true)))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(410.496)), bool(false))) : _GLF_FUZZED(distance(vec3(-1.4, 54.24, -3.0), vec3(569.946, -4.0, 2.6))))), true && (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, _GLF_IDENTITY(false, (false) || false))), bool(bool(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, false))))))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, false))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) || false)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
