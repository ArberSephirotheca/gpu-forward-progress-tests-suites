#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), ! (! ((false)))), true, true))) || false), true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), (bool(bvec4(false, true, true, true))) && true))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) / vec2(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, tan(0.0) + (1.0))) - 0.0), 1.0))), min(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, tan(0.0) + (1.0))) - 0.0), 1.0))), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, tan(0.0) + (1.0))) - 0.0), 1.0)))) - vec2(0.0, 0.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, tan(0.0) + (1.0))) - 0.0), 1.0))))) * mat2(1.0), vec2(vec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) * mat2(1.0), 1.0)))).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(sinh(vec2(2122.9569, -2.9))) : injectionSwitch)))).y))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(vec4(9.7, 9.4, _GLF_IDENTITY(-2427.7086, float(mat3x4(-2427.7086, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec3(0.0, sqrt(0.0), log(1.0)), vec3(vec3(vec3(0.0, sqrt(0.0), log(1.0))))))), 0.0, 1.0, 0.0, 0.0))), 74.15).x)), float(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-7.5) : injectionSwitch.x))) - _GLF_IDENTITY(dot(vec4(sin(0.0), 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(sin(0.0), 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0))))), bool(true))) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(vec2(-547.015, _GLF_IDENTITY(-6.1, (true ? _GLF_IDENTITY(-6.1, 1.0 * (-6.1)) : _GLF_FUZZED(3.3)))))), max(_GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(vec2(-547.015, _GLF_IDENTITY(_GLF_IDENTITY(-6.1, (true ? _GLF_IDENTITY(-6.1, 1.0 * _GLF_IDENTITY((-6.1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((-6.1), clamp((-6.1), (-6.1), (-6.1))) : _GLF_FUZZED(-8.6)))) : _GLF_FUZZED(3.3))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(-6.1, (true ? _GLF_IDENTITY(-6.1, 1.0 * _GLF_IDENTITY((-6.1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((-6.1), clamp((-6.1), (-6.1), (-6.1))) : _GLF_FUZZED(-8.6)))) : _GLF_FUZZED(3.3))), (_GLF_IDENTITY(-6.1, (true ? _GLF_IDENTITY(-6.1, 1.0 * _GLF_IDENTITY((-6.1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((-6.1), clamp((-6.1), (-6.1), (-6.1))) : _GLF_FUZZED(-8.6)))) : _GLF_FUZZED(3.3)))) + tan(0.0))), float(_GLF_FUZZED(((-595.682)))), bool(false)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec4(6.2, -9194.7980, -77.27, 4.2).pq) : (true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(-547.015, max(_GLF_IDENTITY(-547.015, float(mat3x4(-547.015, 1.0, 0.0, 0.0, sqrt(1.0), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0))), -547.015)), _GLF_IDENTITY(-6.1, (true ? _GLF_IDENTITY(-6.1, 1.0 * (-6.1)) : _GLF_FUZZED(3.3)))))))), _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(vec2(-547.015, _GLF_IDENTITY(-6.1, _GLF_IDENTITY((true ? _GLF_IDENTITY(-6.1, 1.0 * (-6.1)) : _GLF_FUZZED(3.3)), 0.0 + ((true ? _GLF_IDENTITY(-6.1, 1.0 * (-6.1)) : _GLF_FUZZED(3.3)))))))), min((true ? injectionSwitch : _GLF_FUZZED(vec2(-547.015, _GLF_IDENTITY(-6.1, (true ? _GLF_IDENTITY(_GLF_IDENTITY(-6.1, 1.0 * (-6.1)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(-6.1, 1.0 * (-6.1)), (true ? _GLF_IDENTITY(-6.1, 1.0 * (_GLF_IDENTITY(-6.1, max(-6.1, -6.1)))) : _GLF_FUZZED(-9.9)))), float(_GLF_FUZZED(4.0)), bool(false))) : _GLF_FUZZED(3.3)))))), (true ? injectionSwitch : _GLF_FUZZED(vec2(-547.015, _GLF_IDENTITY(-6.1, (true ? _GLF_IDENTITY(-6.1, _GLF_IDENTITY(1.0 * (-6.1), min(1.0 * (-6.1), 1.0 * (-6.1)))) : _GLF_FUZZED(_GLF_IDENTITY(3.3, max(_GLF_IDENTITY(3.3, (true ? 3.3 : _GLF_FUZZED(0.9))), 3.3))))))))))))))).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_DEAD(false)))), (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))))))) || false))), _GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_IDENTITY(true, ! (! (true)))))) || (_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (bool(_GLF_DEAD(false))), bool(bvec2(! (bool(_GLF_DEAD(false))), false)))))), (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (bool(_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec2(! (bool(_GLF_DEAD(false))), false)), bool(bvec4(bool(bvec2(! (bool(_GLF_DEAD(false))), false)), false, false, false)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (bool(_GLF_DEAD(false))), bool(bvec2(! (bool(_GLF_DEAD(false))), false)))))), (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (bool(_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec2(! (bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))), false)), _GLF_IDENTITY(bool(bvec4(bool(bvec2(! (bool(_GLF_DEAD(false))), false)), false, false, false)), bool(bvec3(_GLF_IDENTITY(bool(bvec4(bool(bvec2(! (bool(_GLF_DEAD(false))), false)), false, false, false)), ! (! (bool(bvec4(bool(bvec2(! (bool(_GLF_DEAD(false))), false)), false, false, false))))), false, false))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (bool(_GLF_DEAD(false))), bool(bvec2(! (bool(_GLF_DEAD(false))), false)))))), (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (bool(_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec2(! (bool(_GLF_DEAD(false))), false)), bool(bvec4(bool(bvec2(! (bool(_GLF_DEAD(false))), false)), false, false, false)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (bool(_GLF_DEAD(false))), bool(bvec2(! (bool(_GLF_DEAD(false))), false)))))), (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (bool(_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec2(! (bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))), false)), _GLF_IDENTITY(bool(bvec4(bool(bvec2(! (bool(_GLF_DEAD(false))), false)), false, false, false)), bool(bvec3(_GLF_IDENTITY(bool(bvec4(bool(bvec2(! (bool(_GLF_DEAD(false))), false)), false, false, false)), ! (! (bool(bvec4(bool(bvec2(! (bool(_GLF_DEAD(false))), false)), false, false, false))))), false, false))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false), false, true, false)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (bool(_GLF_DEAD(false))), bool(bvec2(! (bool(_GLF_DEAD(false))), false)))))), (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (bool(_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec2(! (bool(_GLF_DEAD(false))), false)), bool(bvec4(bool(bvec2(! (bool(_GLF_DEAD(false))), false)), false, false, false)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (bool(_GLF_DEAD(false))), bool(bvec2(! (bool(_GLF_DEAD(false))), false)))))), (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (bool(_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec2(! (bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))), false)), _GLF_IDENTITY(bool(bvec4(bool(bvec2(! (bool(_GLF_DEAD(false))), false)), false, false, false)), bool(bvec3(_GLF_IDENTITY(bool(bvec4(bool(bvec2(! (bool(_GLF_DEAD(false))), false)), false, false, false)), ! (! (bool(bvec4(bool(bvec2(! (bool(_GLF_DEAD(false))), false)), false, false, false))))), false, false))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false), false, true, false)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (bool(_GLF_DEAD(false))), bool(bvec2(! (bool(_GLF_DEAD(false))), false)))))), (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (bool(_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec2(! (bool(_GLF_DEAD(false))), false)), bool(bvec4(bool(bvec2(! (bool(_GLF_DEAD(false))), false)), false, false, false)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (bool(_GLF_DEAD(false))), bool(bvec2(! (bool(_GLF_DEAD(false))), false)))))), (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (bool(_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec2(! (bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))), false)), _GLF_IDENTITY(bool(bvec4(bool(bvec2(! (bool(_GLF_DEAD(false))), false)), false, false, false)), bool(bvec3(_GLF_IDENTITY(bool(bvec4(bool(bvec2(! (bool(_GLF_DEAD(false))), false)), false, false, false)), ! (! (bool(bvec4(bool(bvec2(! (bool(_GLF_DEAD(false))), false)), false, false, false))))), false, false))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false), false, true, false)))))) || false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), max(uint(4u), uint(4u))), uint(4u))))) : gl_WorkGroupSize.x), (_GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), max(uint(4u), uint(4u))), uint(4u))))) : gl_WorkGroupSize.x), (true ? (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), max(uint(4u), uint(4u))), uint(4u))))) : gl_WorkGroupSize.x) : _GLF_FUZZED((-- subgroup_local_id))))) ^ 0u))))) << _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u), 0u ^ (_GLF_IDENTITY(0u, (0u) - 0u))), ((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), max(uint(4u), uint(4u))), uint(4u))))) : gl_WorkGroupSize.x), ((false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)) | (subgroup_size)), (subgroup_size) | (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), max(uint(4u), uint(4u))), uint(4u))))) : gl_WorkGroupSize.x)) ^ 0u))))) << _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) - 0u)), ~ (~ ((_GLF_IDENTITY(0u, (0u) - 0u))))))) | ((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), max(uint(4u), uint(4u))), uint(4u))))) : gl_WorkGroupSize.x), ((false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), max(uint(4u), uint(4u))), uint(4u))))) : gl_WorkGroupSize.x)) ^ 0u))))) << _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) - 0u)), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) - 0u)), min((_GLF_IDENTITY(0u, (0u) - 0u)), (_GLF_IDENTITY(0u, (0u) - 0u)))))))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) * 1u), gl_WorkGroupSize[1], gl_WorkGroupSize[2])).x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) | 0u), clamp(_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) | 0u), _GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) | 0u), _GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) | 0u))))), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / ((_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) / 1u)) * 1u), 1u, 1u) << _GLF_IDENTITY(uvec3(4u), uvec3(4u)), uvec3(1u, 1u, 1u) * (uvec3(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) | (~ (1u))))), 1u, _GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(1u, (1u) << 0u)))) + 0u, min(_GLF_IDENTITY((_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(1u, (1u) << 0u)))) + 0u, ((_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(1u, (1u) << 0u)))) + 0u) | ((_GLF_IDENTITY(1u, (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(1u, (1u) << 0u), ~ (~ (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(1u, (1u) << 0u))))))) + 0u)), (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(1u, (1u) << 0u)))) + 0u)))) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(4u, (true ? 4u : _GLF_FUZZED(num_workgroup)))), uvec3(4u))))) >> _GLF_IDENTITY(uvec3(4u), uvec3(4u)))).x))) << 0u), gl_WorkGroupSize.x, gl_WorkGroupSize.x))) / _GLF_IDENTITY(1u, (1u) + uint(_GLF_ZERO(0.0, injectionSwitch.x))));
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x, clamp(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(min(gl_WorkGroupID, gl_WorkGroupID), (_GLF_IDENTITY(min(gl_WorkGroupID, gl_WorkGroupID), (min(gl_WorkGroupID, gl_WorkGroupID)) >> uvec3(0u, 0u, 0u))) / (uvec3(1u, 1u, 1u) ^ uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x), _GLF_ZERO(0.0, injectionSwitch.x))))).x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)), (uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) | (0u))) | uvec3(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) >> 0u) >> _GLF_IDENTITY(uint(3u), uint(3u)))), 0u)), 0u)) | (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)))), (false ? _GLF_FUZZED(uvec3(56444u, 85876u, 5930u)) : _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)), _GLF_IDENTITY((uvec3(0u, 0u, 0u) | uvec3(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (3u) | (_GLF_IDENTITY(3u, min(3u, 3u))))), uint(3u))), (_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (3u) | (_GLF_IDENTITY(3u, min(3u, 3u))))), uint(3u))), (false ? _GLF_FUZZED(workgroup_size) : (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (3u) | (_GLF_IDENTITY(3u, min(3u, 3u))))), uint(3u)))))) >> 0u)), 0u)), 0u)), ((uvec3(0u, 0u, 0u) | uvec3(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) | (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))), 0u)), 0u))) | uvec3(0u, 0u, 0u)) | (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)))))))).x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], _GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(81078u, 27033u, 107178u)) : gl_WorkGroupID))[1], gl_WorkGroupID[2])), min(gl_WorkGroupID, gl_WorkGroupID)).x));
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY((workgroup_size * workgroup_id), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY((workgroup_size * workgroup_id), clamp((workgroup_size * workgroup_id), (workgroup_size * workgroup_id), (workgroup_size * workgroup_id))))) >> 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((subgroup_size) << 0u))), 0u ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((subgroup_size) << 0u))), 0u ^ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))) - 0u))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((subgroup_size) << _GLF_IDENTITY(0u, (0u) - (0u << _GLF_IDENTITY(uint(3u), uint(3u))))))), _GLF_IDENTITY(0u, (0u) * 1u) ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)))))) << 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec3(_GLF_IDENTITY(false, (false) || false), true, false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (workgroup_base + subgroup_base))) | (workgroup_base + subgroup_base)) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_base + ((_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, 1.0, abs(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, abs(abs(1.0)), sqrt(1.0), 0.0, cos(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)))), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(determinant(mat2(1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(390.358)), float(0.0), bool(true))), 0.0)), 0.0, 1.0)), 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0), vec3(0.0, 0.0, 1.0)))))) > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : subgroup_local_id)), _GLF_IDENTITY((subgroup_local_id), 0u | ((subgroup_local_id))) ^ 0u), _GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u))))) + _GLF_IDENTITY(1, 0 | (1))) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.5), _GLF_FUZZED(-62.47)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-9.6)), bool(false)))), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec2((false), true)))) || false) && true)))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 uint read = 0;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(3189.5324) : injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) + 0), 1)), 1)), _GLF_IDENTITY(_GLF_IDENTITY((0 & 72110), clamp(_GLF_IDENTITY((0 & 72110), ~ (~ ((0 & 72110)))), _GLF_IDENTITY((0 & 72110), int(_GLF_IDENTITY(ivec2((0 & 72110), 1), ivec2(ivec3(ivec2((0 & 72110), 1), 1))))), (0 & 72110))) | _GLF_IDENTITY(_GLF_IDENTITY((1), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((1)), int(ivec4(~ ((1)), (0 >> _GLF_IDENTITY(int(7), int(7))), 1, 1))), clamp(~ ((1)), ~ ((1)), ~ ((1)))))), _GLF_IDENTITY(((1)) - 0, 0 | (_GLF_IDENTITY(((1)) - 0, min(((1)) - 0, ((1)) - 0))))), ~ (~ (_GLF_IDENTITY((0 & 72110), clamp(_GLF_IDENTITY((0 & _GLF_IDENTITY(72110, (72110) - 0)), ~ (~ ((0 & 72110)))), _GLF_IDENTITY((0 & 72110), int(_GLF_IDENTITY(ivec2((0 & 72110), 1), ivec2(ivec3(ivec2((0 & 72110), 1), 1))))), _GLF_IDENTITY((0 & 72110), ~ (~ ((0 & 72110)))))) | _GLF_IDENTITY(_GLF_IDENTITY((1), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((1)), int(ivec4(~ ((1)), (0 >> _GLF_IDENTITY(int(7), int(7))), 1, 1))), clamp(~ ((1)), ~ ((1)), ~ ((1)))))), _GLF_IDENTITY(((1)) - 0, 0 | (_GLF_IDENTITY(((1)) - 0, min(((1)) - 0, ((1)) - 0)))))))))), (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec4(bvec3(true, false, true), true))))))) ? _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((0 & 72110) | (1), ((0 & 72110) | (1)) | ((0 & 72110) | (1)))), max(_GLF_IDENTITY(1, (0 & _GLF_IDENTITY(72110, clamp(_GLF_IDENTITY(_GLF_IDENTITY(72110, (_GLF_IDENTITY(72110, 0 | (72110))) | (_GLF_IDENTITY(72110, (false ? _GLF_FUZZED(-28270) : 72110)))), clamp(72110, 72110, 72110)), _GLF_IDENTITY(72110, min(72110, 72110)), 72110))) | (1)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) + 0), 1, 1)))), (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) + 0), 1, 1))))) - 0), (0 & 72110) | (1))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(0, (0) ^ 0) & 72110) | (1)), max(_GLF_IDENTITY(1, _GLF_IDENTITY((0 & _GLF_IDENTITY(_GLF_IDENTITY(72110, (_GLF_IDENTITY(72110, max(72110, 72110))) | 0), clamp(_GLF_IDENTITY(72110, clamp(72110, 72110, 72110)), _GLF_IDENTITY(72110, min(72110, 72110)), 72110))), ((0 & _GLF_IDENTITY(_GLF_IDENTITY(72110, (_GLF_IDENTITY(72110, max(72110, 72110))) | 0), clamp(_GLF_IDENTITY(72110, clamp(72110, 72110, 72110)), _GLF_IDENTITY(72110, min(72110, 72110)), 72110)))) | ((0 & _GLF_IDENTITY(_GLF_IDENTITY(72110, (_GLF_IDENTITY(72110, max(72110, 72110))) | 0), clamp(_GLF_IDENTITY(72110, clamp(72110, 72110, 72110)), _GLF_IDENTITY(72110, min(72110, 72110)), 72110))))) | (1)), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) + 0), 1, 1)))), (0 & 72110) | (1)))))) >> 0u) : _GLF_FUZZED(148671u))), _GLF_IDENTITY(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), _GLF_IDENTITY(int(ivec2(~ _GLF_IDENTITY((4), int(ivec3((4), 0, 1))), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), min(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(1, (1) - 0))))), max(_GLF_IDENTITY(int(ivec2(~ (4), 1)), int(int(int(ivec2(~ (4), 1))))), int(ivec2(~ (4), 1))))))), max(4, 4)), _GLF_IDENTITY(64, 1 * (_GLF_IDENTITY(64, int(ivec3(64, (1 ^ 1), 1))))), 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, 0 ^ (2))))), (_GLF_IDENTITY(true ? (subgroup_local_id % 2) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_FUZZED(workgroup_size)) / 1u), (false ? _GLF_FUZZED(workgroup_base) : true ? (subgroup_local_id % 2) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_FUZZED(workgroup_size)) / 1u))))) == 0)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), false, false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   _GLF_IDENTITY(read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))], 4, 64, 2), 0u | (read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))], 4, 64, 2)));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(_GLF_IDENTITY(float(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))), mix(vec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))))[0], (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)) * (injectionSwitch)))))[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(float(190319u))), mix(vec2(_GLF_FUZZED(2.9), _GLF_FUZZED(787.431)), vec2((vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(float(190319u))))[0], _GLF_IDENTITY((vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(float(190319u))))[_GLF_IDENTITY(1, (1) + 0)], float(mat2((vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(float(190319u))))[1], 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(668.678))), 0.0)))), bvec2(true, true))), bvec2(_GLF_IDENTITY(false, ! (! (false))), false))))[0], min((injectionSwitch)[0], (injectionSwitch)[0]))), clamp(float(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))), mix(vec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))))[0], (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)) * (injectionSwitch)))))[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(float(190319u))), mix(vec2(_GLF_FUZZED(2.9), _GLF_FUZZED(787.431)), vec2((vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(float(190319u))))[0], _GLF_IDENTITY((vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(float(190319u))))[_GLF_IDENTITY(1, (1) + 0)], float(mat2((vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(float(190319u))))[1], 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(668.678))), 0.0)))), bvec2(true, true))), bvec2(_GLF_IDENTITY(false, ! (! (false))), false))))[0], min((injectionSwitch)[0], (injectionSwitch)[0]))), float(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))), mix(vec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))))[0], (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)) * (injectionSwitch)))))[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(float(190319u))), mix(vec2(_GLF_FUZZED(2.9), _GLF_FUZZED(787.431)), vec2((vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(float(190319u))))[0], _GLF_IDENTITY((vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(float(190319u))))[_GLF_IDENTITY(1, (1) + 0)], float(mat2((vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(float(190319u))))[1], 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(668.678))), 0.0)))), bvec2(true, true))), bvec2(_GLF_IDENTITY(false, ! (! (false))), false))))[0], min((injectionSwitch)[0], (injectionSwitch)[0]))), float(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))), mix(vec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))))[0], (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)) * (injectionSwitch)))))[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(float(190319u))), mix(vec2(_GLF_FUZZED(2.9), _GLF_FUZZED(787.431)), vec2((vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(float(190319u))))[0], _GLF_IDENTITY((vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(float(190319u))))[_GLF_IDENTITY(1, (1) + 0)], float(mat2((vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(float(190319u))))[1], 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(668.678))), 0.0)))), bvec2(true, true))), bvec2(_GLF_IDENTITY(false, ! (! (false))), false))))[0], min((injectionSwitch)[0], (injectionSwitch)[0]))))), float(_GLF_FUZZED(8.6)), bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(867.872), _GLF_FUZZED(9781.4721)), min(vec2(_GLF_FUZZED(867.872), _GLF_FUZZED(9781.4721)), vec2(_GLF_FUZZED(867.872), _GLF_FUZZED(9781.4721)))), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(_GLF_IDENTITY(float(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))), mix(vec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))))[0], (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)) * (injectionSwitch)))))[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(float(190319u))), mix(vec2(_GLF_FUZZED(2.9), _GLF_FUZZED(787.431)), vec2((vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(float(190319u))))[0], _GLF_IDENTITY((vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(float(190319u))))[_GLF_IDENTITY(1, (1) + 0)], float(mat2((vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(float(190319u))))[1], 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(668.678))), 0.0)))), bvec2(true, true))), bvec2(_GLF_IDENTITY(false, ! (! (false))), false))))[0], min((injectionSwitch)[0], (injectionSwitch)[0]))), clamp(float(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))), mix(vec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))))[0], (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)) * (injectionSwitch)))))[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(float(190319u))), mix(vec2(_GLF_FUZZED(2.9), _GLF_FUZZED(787.431)), vec2((vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(float(190319u))))[0], _GLF_IDENTITY((vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(float(190319u))))[_GLF_IDENTITY(1, (1) + 0)], float(mat2((vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(float(190319u))))[1], 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(668.678))), 0.0)))), bvec2(true, true))), bvec2(_GLF_IDENTITY(false, ! (! (false))), false))))[0], min((injectionSwitch)[0], (injectionSwitch)[0]))), float(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))), mix(vec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))))[0], (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)) * (injectionSwitch)))))[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(float(190319u))), mix(vec2(_GLF_FUZZED(2.9), _GLF_FUZZED(787.431)), vec2((vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(float(190319u))))[0], _GLF_IDENTITY((vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(float(190319u))))[_GLF_IDENTITY(1, (1) + 0)], float(mat2((vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(float(190319u))))[1], 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(668.678))), 0.0)))), bvec2(true, true))), bvec2(_GLF_IDENTITY(false, ! (! (false))), false))))[0], min((injectionSwitch)[0], (injectionSwitch)[0]))), float(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))), mix(vec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))))[0], (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)) * (injectionSwitch)))))[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(float(190319u))), mix(vec2(_GLF_FUZZED(2.9), _GLF_FUZZED(787.431)), vec2((vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(float(190319u))))[0], _GLF_IDENTITY((vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(float(190319u))))[_GLF_IDENTITY(1, (1) + 0)], float(mat2((vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(float(190319u))))[1], 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(668.678))), 0.0)))), bvec2(true, true))), bvec2(_GLF_IDENTITY(false, ! (! (false))), false))))[0], min((injectionSwitch)[0], (injectionSwitch)[0]))))), float(_GLF_FUZZED(8.6)), bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(867.872), _GLF_FUZZED(9781.4721)), min(vec2(_GLF_FUZZED(867.872), _GLF_FUZZED(9781.4721)), vec2(_GLF_FUZZED(867.872), _GLF_FUZZED(9781.4721)))), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(_GLF_IDENTITY(float(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))), mix(vec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))))[0], (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)) * (injectionSwitch)))))[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(float(190319u))), mix(vec2(_GLF_FUZZED(2.9), _GLF_FUZZED(787.431)), vec2((vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(float(190319u))))[0], _GLF_IDENTITY((vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(float(190319u))))[_GLF_IDENTITY(1, (1) + 0)], float(mat2((vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(float(190319u))))[1], 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(668.678))), 0.0)))), bvec2(true, true))), bvec2(_GLF_IDENTITY(false, ! (! (false))), false))))[0], min((injectionSwitch)[0], (injectionSwitch)[0]))), clamp(float(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))), mix(vec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))))[0], (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)) * (injectionSwitch)))))[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(float(190319u))), mix(vec2(_GLF_FUZZED(2.9), _GLF_FUZZED(787.431)), vec2((vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(float(190319u))))[0], _GLF_IDENTITY((vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(float(190319u))))[_GLF_IDENTITY(1, (1) + 0)], float(mat2((vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(float(190319u))))[1], 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(668.678))), 0.0)))), bvec2(true, true))), bvec2(_GLF_IDENTITY(false, ! (! (false))), false))))[0], min((injectionSwitch)[0], (injectionSwitch)[0]))), float(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))), mix(vec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))))[0], (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)) * (injectionSwitch)))))[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(float(190319u))), mix(vec2(_GLF_FUZZED(2.9), _GLF_FUZZED(787.431)), vec2((vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(float(190319u))))[0], _GLF_IDENTITY((vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(float(190319u))))[_GLF_IDENTITY(1, (1) + 0)], float(mat2((vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(float(190319u))))[1], 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(668.678))), 0.0)))), bvec2(true, true))), bvec2(_GLF_IDENTITY(false, ! (! (false))), false))))[0], min((injectionSwitch)[0], (injectionSwitch)[0]))), float(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))), mix(vec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))))[0], (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)) * (injectionSwitch)))))[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(float(190319u))), mix(vec2(_GLF_FUZZED(2.9), _GLF_FUZZED(787.431)), vec2((vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(float(190319u))))[0], _GLF_IDENTITY((vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(float(190319u))))[_GLF_IDENTITY(1, (1) + 0)], float(mat2((vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(float(190319u))))[1], 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(668.678))), 0.0)))), bvec2(true, true))), bvec2(_GLF_IDENTITY(false, ! (! (false))), false))))[0], min((injectionSwitch)[0], (injectionSwitch)[0]))))), float(_GLF_FUZZED(8.6)), bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(867.872), _GLF_FUZZED(9781.4721)), min(vec2(_GLF_FUZZED(867.872), _GLF_FUZZED(9781.4721)), vec2(_GLF_FUZZED(867.872), _GLF_FUZZED(9781.4721)))), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) * vec2(1.0, 1.0))).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 else
  {
   read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-95107))), 0 ^ (_GLF_IDENTITY(64, (64) | 0))), 2);
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 subgroupBarrier();
 atomicStore(checker[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), uint(uint(_GLF_IDENTITY((virtual_gid), ((virtual_gid)) - 0u)))), (_GLF_IDENTITY((virtual_gid), uint(uint(_GLF_IDENTITY((virtual_gid), ((virtual_gid)) - 0u))))) >> 0u) / ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(6u), uint(6u)), max(1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, 0u + (6u))), uint(6u)), 1u << _GLF_IDENTITY(uint(6u), uint(6u))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(uvec4(uint(6u), 1u, 0u, 0u))), uint(6u))), ((virtual_gid) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (uint(6u)) | _GLF_IDENTITY((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), uint(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), ((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))))) / 1u), 1u)))), uint(6u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(6u, clamp(6u, 6u, 6u)), (true ? _GLF_IDENTITY(6u, clamp(6u, 6u, 6u)) : _GLF_FUZZED(virtual_gid)))), uint(6u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, clamp(6u, 6u, 6u))), uint(6u))) * 1u))) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(8.2)), _GLF_IDENTITY(float(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y)), (_GLF_IDENTITY(float(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y)), float(vec4(float(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y)), 1.0, 0.0, 1.0)))) * 1.0), bool(true))))))], read, 4, _GLF_IDENTITY(64, (false ? _GLF_FUZZED(_GLF_IDENTITY((74176 ^ (_GLF_IDENTITY(-44999, clamp(-44999, -44999, _GLF_IDENTITY(-44999, (-44999) | (-44999)))) | 84541)), min((74176 ^ (_GLF_IDENTITY(-44999, clamp(-44999, -44999, _GLF_IDENTITY(-44999, (-44999) | (-44999)))) | 84541)), (74176 ^ (_GLF_IDENTITY(-44999, clamp(-44999, -44999, _GLF_IDENTITY(-44999, (-44999) | (-44999)))) | 84541))))) : 64)), _GLF_IDENTITY(4, (4) << 0));
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
