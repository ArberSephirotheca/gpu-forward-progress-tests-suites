#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_11 {
 int _injected_loop_counter;
 mat4x2 _f0;
 mat4 _f1;
} ;

struct _GLF_struct_8 {
 bool _f0;
 ivec2 _f1;
 bool _f2;
 int _f3;
 bvec4 _f4;
} ;

struct _GLF_struct_7 {
 int _f0;
 mat2x3 _f1;
 mat3x4 _f2;
 ivec3 _f3;
} ;

struct _GLF_struct_6 {
 int _f0;
 ivec4 _f1;
 uvec4 _f2;
 uvec4 _f3;
 bvec2 _f4;
 uint _f5;
} ;

struct _GLF_struct_5 {
 ivec4 _f0;
 vec4 _f1;
 mat3x2 _f2;
 vec4 _f3;
 uvec2 _f4;
 mat3 _f5;
} ;

struct _GLF_struct_9 {
 _GLF_struct_5 _f0;
 ivec4 _f1;
 _GLF_struct_6 _f2;
 _GLF_struct_7 _f3;
 uint virtual_gid;
 _GLF_struct_8 _f4;
} ;

struct _GLF_struct_10 {
 _GLF_struct_9 _f0;
} ;

struct _GLF_struct_3 {
 mat3x2 _f0;
 uint subgroup_size;
 mat3 _f1;
} ;

struct _GLF_struct_1 {
 uvec2 _f0;
} ;

struct _GLF_struct_0 {
 uint _f0;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 ivec2 _f2;
} ;

struct _GLF_struct_4 {
 bool _f0;
 mat2x3 _f1;
 _GLF_struct_2 _f2;
 _GLF_struct_3 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter ++, (false ? _GLF_FUZZED(_injected_loop_counter) : _injected_loop_counter ++)), 0 | (_injected_loop_counter ++)))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))))) && true))))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))), true, false), bvec3(bvec4(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))), true, false), true)))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))), true, false), bvec3(bvec4(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))), true, false), true))))))); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) / 1))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_IDENTITY(false, bool(bool(false))), true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), (bool(bvec4(false, false, false, true))) || false)), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), (bool(bvec4(false, false, false, true))) || false))), ! (! (bool(! (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), (bool(bvec4(false, false, false, true))) || false)))))))))))))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))), injectionSwitch)).y))))))
  {
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(77.82) : injectionSwitch.y, max(false ? _GLF_FUZZED(77.82) : injectionSwitch.y, false ? _GLF_FUZZED(77.82) : injectionSwitch.y))), (false ? _GLF_FUZZED(trunc(69.07)) : _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(77.82) : injectionSwitch.y, max(false ? _GLF_FUZZED(77.82) : injectionSwitch.y, false ? _GLF_FUZZED(77.82) : injectionSwitch.y))), min((_GLF_IDENTITY(false ? _GLF_FUZZED(77.82) : injectionSwitch.y, max(false ? _GLF_FUZZED(77.82) : injectionSwitch.y, false ? _GLF_FUZZED(77.82) : injectionSwitch.y))), (_GLF_IDENTITY(false ? _GLF_FUZZED(77.82) : injectionSwitch.y, max(false ? _GLF_FUZZED(77.82) : injectionSwitch.y, false ? _GLF_FUZZED(77.82) : injectionSwitch.y)))))))), injectionSwitch.y)))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, false || (_injected_loop_counter != 0))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0)))); _injected_loop_counter --)
    {
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(true, mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(6584.1545) : _GLF_IDENTITY(1.0, 0.0 + (1.0))))), float(_GLF_FUZZED((355.954))), bool(false))), (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((355.954))), bool(false)))) / _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(6676.6960)), bool(false))))), _GLF_struct_2(_GLF_struct_0(1u), _GLF_struct_1(_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) | uvec2(0u, 0u))), _GLF_IDENTITY(ivec2(1), max(_GLF_IDENTITY(ivec2(1), clamp(ivec2(1), _GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), _GLF_IDENTITY(ivec2(ivec2(ivec2(1))), max(_GLF_IDENTITY(ivec2(ivec2(ivec2(1))), (true ? ivec2(ivec2(ivec2(1))) : _GLF_FUZZED(ivec2(3490, -35910)))), ivec2(ivec2(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, clamp(1, 1, 1))), (ivec2(_GLF_IDENTITY(1, clamp(1, 1, 1)))) << ivec2(0, 0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, 0 ^ (1))), ivec2(ivec2(ivec2(1)))), (_GLF_IDENTITY(ivec2(1), ivec2(ivec2(ivec2(1))))) - ivec2(0, 0))) / ivec2(1, 1)), _GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), (ivec2(1)) - ivec2(0, 0)), ivec2(0, 0) ^ (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) << 0)), _GLF_IDENTITY((ivec2(1)) - ivec2(0, 0), ivec2(0, 0) | ((ivec2(1)) - _GLF_IDENTITY(ivec2(0, 0), (ivec2(0, 0)) << ivec2(0, 0))))))))), ivec2(1)))), _GLF_struct_3(mat3x2(1.0), gl_SubgroupSize, mat3(1.0)));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size, clamp(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(max(workgroup_size, workgroup_size), clamp(max(workgroup_size, workgroup_size), max(workgroup_size, workgroup_size), max(workgroup_size, workgroup_size)))), _GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u), workgroup_size)))), (_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size, clamp(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(max(workgroup_size, workgroup_size), clamp(max(workgroup_size, workgroup_size), max(workgroup_size, workgroup_size), max(workgroup_size, workgroup_size)))), _GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u), workgroup_size))))) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), _GLF_IDENTITY(true, bool(bool(true))) && ((false)))) ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_size : _GLF_FUZZED(subgroup_local_id))))) : _GLF_FUZZED(140485u), (true ? _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bool(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), bool(bool((false)))))))) ? _GLF_FUZZED(subgroup_id) : workgroup_size)) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(140485u, (_GLF_IDENTITY(140485u, min(140485u, _GLF_IDENTITY(140485u, (140485u) - 0u)))) >> 0u)), (_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(140485u, 0u | (140485u)), (140485u) >> 0u))) >> uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, abs(1.0) * (injectionSwitch.x)))))) >> 0u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || _GLF_IDENTITY((false), _GLF_IDENTITY(true, bool(bool(true))) && _GLF_IDENTITY(((false)), ! (! (_GLF_IDENTITY(((false)), bool(bool(((false)))))))))) ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))) ? workgroup_size : _GLF_FUZZED(subgroup_local_id))))) : _GLF_FUZZED(140485u), 1u * (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || _GLF_IDENTITY((false), _GLF_IDENTITY(true, bool(bool(true))) && _GLF_IDENTITY(((false)), ! (! (_GLF_IDENTITY(((false)), bool(bool(((false)))))))))) ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))) ? workgroup_size : _GLF_FUZZED(subgroup_local_id))))) : _GLF_FUZZED(140485u))), (true ? _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (false || _GLF_IDENTITY((false), false || ((false))))))), bool(bool(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), bool(bool((false)))))))) ? _GLF_FUZZED(subgroup_id) : workgroup_size)) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(140485u, (_GLF_IDENTITY(140485u, min(140485u, _GLF_IDENTITY(140485u, (140485u) - 0u)))) >> 0u)), (_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(140485u, 0u | (140485u)), (140485u) >> 0u))) >> uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, abs(1.0) * (injectionSwitch.x)))))) >> 0u) : _GLF_FUZZED(87334u))))) * _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false))) ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_struct_replacement_4._f3.subgroup_size), min(_GLF_FUZZED(_GLF_struct_replacement_4._f3.subgroup_size), _GLF_IDENTITY(_GLF_FUZZED(_GLF_struct_replacement_4._f3.subgroup_size), (_GLF_FUZZED(_GLF_struct_replacement_4._f3.subgroup_size)) + 0u))) : workgroup_id), _GLF_IDENTITY(0u + (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false))) ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_struct_replacement_4._f3.subgroup_size), min(_GLF_FUZZED(_GLF_struct_replacement_4._f3.subgroup_size), _GLF_IDENTITY(_GLF_FUZZED(_GLF_struct_replacement_4._f3.subgroup_size), (_GLF_FUZZED(_GLF_IDENTITY(_GLF_struct_replacement_4._f3.subgroup_size, (_GLF_struct_replacement_4._f3.subgroup_size) / 1u))) + 0u))) : workgroup_id), min((_GLF_IDENTITY(false, ! (! (false))) ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_struct_replacement_4._f3.subgroup_size), min(_GLF_FUZZED(_GLF_struct_replacement_4._f3.subgroup_size), _GLF_IDENTITY(_GLF_FUZZED(_GLF_struct_replacement_4._f3.subgroup_size), (_GLF_FUZZED(_GLF_IDENTITY(_GLF_struct_replacement_4._f3.subgroup_size, (_GLF_struct_replacement_4._f3.subgroup_size) / 1u))) + 0u))) : workgroup_id), _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false))) ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_struct_replacement_4._f3.subgroup_size), min(_GLF_FUZZED(_GLF_struct_replacement_4._f3.subgroup_size), _GLF_IDENTITY(_GLF_FUZZED(_GLF_struct_replacement_4._f3.subgroup_size), (_GLF_FUZZED(_GLF_IDENTITY(_GLF_struct_replacement_4._f3.subgroup_size, (_GLF_struct_replacement_4._f3.subgroup_size) / 1u))) + 0u))) : workgroup_id), ((_GLF_IDENTITY(false, ! (! (false))) ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_struct_replacement_4._f3.subgroup_size), min(_GLF_FUZZED(_GLF_struct_replacement_4._f3.subgroup_size), _GLF_IDENTITY(_GLF_FUZZED(_GLF_struct_replacement_4._f3.subgroup_size), (_GLF_FUZZED(_GLF_IDENTITY(_GLF_struct_replacement_4._f3.subgroup_size, (_GLF_struct_replacement_4._f3.subgroup_size) / 1u))) + 0u))) : workgroup_id)) - 0u))), min((_GLF_IDENTITY(false, ! (! (false))) ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_struct_replacement_4._f3.subgroup_size), min(_GLF_FUZZED(_GLF_struct_replacement_4._f3.subgroup_size), _GLF_IDENTITY(_GLF_FUZZED(_GLF_struct_replacement_4._f3.subgroup_size), (_GLF_FUZZED(_GLF_struct_replacement_4._f3.subgroup_size)) + 0u))) : workgroup_id), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_struct_replacement_4._f3.subgroup_size), min(_GLF_FUZZED(_GLF_struct_replacement_4._f3.subgroup_size), _GLF_IDENTITY(_GLF_FUZZED(_GLF_struct_replacement_4._f3.subgroup_size), (_GLF_FUZZED(_GLF_struct_replacement_4._f3.subgroup_size)) + 0u))) : workgroup_id)))), _GLF_IDENTITY((0u + (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false))) ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_struct_replacement_4._f3.subgroup_size), min(_GLF_FUZZED(_GLF_struct_replacement_4._f3.subgroup_size), _GLF_IDENTITY(_GLF_FUZZED(_GLF_struct_replacement_4._f3.subgroup_size), (_GLF_FUZZED(_GLF_struct_replacement_4._f3.subgroup_size)) + 0u))) : workgroup_id), min((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false)))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false))))))) || false))) ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_struct_replacement_4._f3.subgroup_size), min(_GLF_FUZZED(_GLF_struct_replacement_4._f3.subgroup_size), _GLF_IDENTITY(_GLF_FUZZED(_GLF_struct_replacement_4._f3.subgroup_size), (_GLF_FUZZED(_GLF_struct_replacement_4._f3.subgroup_size)) + 0u))) : workgroup_id), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_struct_replacement_4._f3.subgroup_size), min(_GLF_FUZZED(_GLF_struct_replacement_4._f3.subgroup_size), _GLF_IDENTITY(_GLF_FUZZED(_GLF_struct_replacement_4._f3.subgroup_size), _GLF_IDENTITY((_GLF_FUZZED(_GLF_struct_replacement_4._f3.subgroup_size)), ~ (~ (_GLF_IDENTITY((_GLF_FUZZED(_GLF_struct_replacement_4._f3.subgroup_size)), ((_GLF_FUZZED(_GLF_struct_replacement_4._f3.subgroup_size))) / 1u)))) + 0u))) : workgroup_id))))) + 0u, ((0u + (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false))) ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_struct_replacement_4._f3.subgroup_size), min(_GLF_FUZZED(_GLF_struct_replacement_4._f3.subgroup_size), _GLF_IDENTITY(_GLF_FUZZED(_GLF_struct_replacement_4._f3.subgroup_size), (_GLF_FUZZED(_GLF_struct_replacement_4._f3.subgroup_size)) + 0u))) : workgroup_id), min((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false)))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false))))))) || false))) ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_struct_replacement_4._f3.subgroup_size), min(_GLF_FUZZED(_GLF_struct_replacement_4._f3.subgroup_size), _GLF_IDENTITY(_GLF_FUZZED(_GLF_struct_replacement_4._f3.subgroup_size), (_GLF_FUZZED(_GLF_struct_replacement_4._f3.subgroup_size)) + 0u))) : workgroup_id), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_struct_replacement_4._f3.subgroup_size), min(_GLF_FUZZED(_GLF_struct_replacement_4._f3.subgroup_size), _GLF_IDENTITY(_GLF_FUZZED(_GLF_struct_replacement_4._f3.subgroup_size), _GLF_IDENTITY((_GLF_FUZZED(_GLF_struct_replacement_4._f3.subgroup_size)), ~ (~ (_GLF_IDENTITY((_GLF_FUZZED(_GLF_struct_replacement_4._f3.subgroup_size)), ((_GLF_FUZZED(_GLF_struct_replacement_4._f3.subgroup_size))) / 1u)))) + 0u))) : workgroup_id))))) + 0u) ^ 0u))));
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0)), (vec2(mat2x4(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))) - vec2(0.0, 0.0))).y)), _GLF_IDENTITY(true, bool(bvec3(true, true, true))), false, true)))))
      barrier();
     do
      {
       barrier();
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_WRAPPED_LOOP(false))));
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(int(ivec2(_injected_loop_counter, 1)), ~ (~ (_GLF_IDENTITY(int(ivec2(_injected_loop_counter, 1)), (int(ivec2(_injected_loop_counter, 1))) + 0)))))) >> 0)) - (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(int(0), int(0)) : _GLF_FUZZED(85034)))))) / 1) != ((_GLF_IDENTITY((_GLF_IDENTITY(1, (1) << (0 & 88706)) << _GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, max(2, 2))))), int(2))), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) << (0 & 88706)) << _GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, 2)), max(2, 2))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, 2)), max(2, 2))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, 2)), max(2, 2))), ((_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, 2)), max(2, 2)))) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, 2)), max(2, 2))), (_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, 2)), max(2, 2))))), (_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, 2)), max(2, 2))), (_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, 2)), max(2, 2))))))), int(2))), ((_GLF_IDENTITY(1, (1) << (0 & 88706)) << _GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, 2)), max(2, 2))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, 2)), max(2, 2))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, 2)), max(2, 2))), ((_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, 2)), max(2, 2)))) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, 2)), max(2, 2))), (_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, 2)), max(2, 2))))), (_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, 2)), max(2, 2))), (_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, 2)), max(2, 2))))))), int(2)))) ^ 0), 0, ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) * (0 | 1))), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))), 1), (ivec4((_GLF_IDENTITY(1, (1) << (0 & 88706)) << _GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, max(2, 2))))), int(2))), 0, ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(int(1), int(1))) >> 0)) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))), 1)) | (ivec4((_GLF_IDENTITY(1, (1) << (0 & 88706)) << _GLF_IDENTITY(int(_GLF_IDENTITY(2, _GLF_IDENTITY((2), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(ivec4(57052, 79166, -41881, 9989)[1]) : (2))) | (_GLF_IDENTITY(2, max(2, 2))))), int(2))), 0, ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(_GLF_IDENTITY(1, 0 ^ (1))), int(ivec3(int(1), 1, 1))))), 1))))) >> _GLF_IDENTITY(int(2), int(2))) ^ 0)); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, true && ((true) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, ! (! (true)))), true, false, true)), (bool(bvec4(! (_GLF_IDENTITY(true, ! (! (true)))), true, false, true))) || false))))))), (true) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)), bvec2(bvec4(bvec2(bvec4(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)), _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec2(! (true), false))))), false))), true))))))), (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(2938.8700)), bool(false))), injectionSwitch.y)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(2938.8700)), bool(false))), injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(2938.8700)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(2938.8700)), bool(false))), injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(2938.8700)), bool(false))), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(2938.8700)), bool(false))), injectionSwitch.y))))))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 _GLF_struct_10 _GLF_struct_replacement_10 = _GLF_struct_10(_GLF_struct_9(_GLF_struct_5(ivec4(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), max(_GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 1.0 * (_GLF_ZERO(0.0, injectionSwitch.x)))), max(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).x)))), _GLF_IDENTITY(0 + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(int(int(_GLF_ZERO(0.0, injectionSwitch.x))))), max(int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)))), 1 * _GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), max(int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(ivec3(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0))), 0 | (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(ivec3(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0))))))))))), (true ? (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), max(int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(ivec3(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0))), 0 | (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(ivec3(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0))))))))))) : _GLF_FUZZED(ivec3(31446, 85233, 44610)[0]))))), (_GLF_IDENTITY(0 + (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), max(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)))), 1 * (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), log(1.0), abs(1.0), round(length(normalize(1.0))), 1.0)))), min(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(457.726), _GLF_FUZZED(vec2(-3.8, 38.40).x)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) * 1.0)), bvec2(true, true))).x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY((_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0, clamp((_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0, (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0, (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0)))))), max(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x) + (injectionSwitch.x))))))))), 0 | (_GLF_IDENTITY(0, (0) << 0) + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), max(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)))), 1 * (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), max(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), max(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)))), 1 * (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), max(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)))))))) + 0)))) - 0))))), int(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) + 0.0))))), max(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), max(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (false ? _GLF_FUZZED(18850) : int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((true ? -8.0 : 0.8))), bool(false))))), injectionSwitch.x))))))), int(_GLF_ZERO(0.0, injectionSwitch.x))))) / 1) | (_GLF_IDENTITY(1, (1) ^ 0)))), vec4(1.0), mat3x2(1.0), vec4(1.0), uvec2(1u), mat3(1.0)), ivec4(1), _GLF_struct_6(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_ZERO(0.0, injectionSwitch.x)))) ? _GLF_IDENTITY(_GLF_FUZZED(37553), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(37553), (false ? _GLF_FUZZED(92205) : _GLF_FUZZED(37553))), int(ivec2(_GLF_FUZZED(37553), 0))), _GLF_FUZZED(37553))) : 1)), 1)), ivec4(_GLF_IDENTITY(1, clamp(1, 1, 1))), uvec4(1u), uvec4(1u), bvec2(true), _GLF_IDENTITY(1u, min(1u, 1u))), _GLF_struct_7(1, mat2x3(1.0), mat3x4(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0 * (_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(76.69)), float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), bool(true))), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x3(1.0, 0.0, 0.0, exp(sin(0.0)), 0.0, abs(1.0)), (mat2x3(1.0, 0.0, 0.0, exp(sin(0.0)), 0.0, abs(1.0))) * mat2(1.0))))))), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))) ? 1.0 * (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-5548.6518)), bool(false)))))) : _GLF_FUZZED(atan(-70.15))))) : _GLF_FUZZED(1.4)))), ivec3(1)), workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_4._f3.subgroup_size, min(subgroup_id * _GLF_struct_replacement_4._f3.subgroup_size, subgroup_id * _GLF_struct_replacement_4._f3.subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_4._f3.subgroup_size, min(subgroup_id * _GLF_struct_replacement_4._f3.subgroup_size, subgroup_id * _GLF_struct_replacement_4._f3.subgroup_size)), min(_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_4._f3.subgroup_size, min(subgroup_id * _GLF_struct_replacement_4._f3.subgroup_size, subgroup_id * _GLF_struct_replacement_4._f3.subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_4._f3.subgroup_size, min(subgroup_id * _GLF_struct_replacement_4._f3.subgroup_size, subgroup_id * _GLF_struct_replacement_4._f3.subgroup_size)), min(_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_4._f3.subgroup_size, min(subgroup_id * _GLF_struct_replacement_4._f3.subgroup_size, subgroup_id * _GLF_struct_replacement_4._f3.subgroup_size)), _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_4._f3.subgroup_size, min(subgroup_id * _GLF_struct_replacement_4._f3.subgroup_size, subgroup_id * _GLF_struct_replacement_4._f3.subgroup_size))))))) - 0u), _GLF_IDENTITY(0u ^ (subgroup_id * _GLF_struct_replacement_4._f3.subgroup_size), clamp(0u ^ (subgroup_id * _GLF_struct_replacement_4._f3.subgroup_size), 0u ^ (subgroup_id * _GLF_struct_replacement_4._f3.subgroup_size), 0u ^ (subgroup_id * _GLF_struct_replacement_4._f3.subgroup_size)))), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_4._f3.subgroup_size, uint(uvec2(subgroup_id * _GLF_struct_replacement_4._f3.subgroup_size, 1u))), min(subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_4._f3.subgroup_size, (_GLF_struct_replacement_4._f3.subgroup_size) ^ 0u), subgroup_id * _GLF_struct_replacement_4._f3.subgroup_size)), 0u ^ (subgroup_id * _GLF_struct_replacement_4._f3.subgroup_size)), 1u))) + subgroup_local_id, _GLF_struct_8(true, ivec2(1), true, 1, bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! (true), (! (true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3((_GLF_IDENTITY(! (true), (! (true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, false)))), bool(bvec4(true, true, true, _GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), false))))), (injectionSwitch.x < injectionSwitch.y))))), true && (_GLF_IDENTITY(true, bool(bvec4(true, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))));
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(3u, (3u) | (3u)), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(3u, (3u) | (3u)), (_GLF_IDENTITY(3u, (3u) | (3u))) - 0u), 0u, 1u, _GLF_IDENTITY(0u, (0u) << 0u)), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(3u, (3u) | (3u)), _GLF_IDENTITY((_GLF_IDENTITY(3u, (3u) | (3u))) - 0u, ~ (~ ((_GLF_IDENTITY(3u, (3u) | (3u))) - 0u)))), 0u, 1u, 0u)) / uvec4(1u, 1u, 1u, 1u))))), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) * (workgroup_base)) + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) - 0u) * _GLF_struct_replacement_4._f3.subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)), ~ (~ (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)), 0u ^ (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)))))))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)), ~ (~ (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)), 0u ^ (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)))))))), ((_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)), ~ (~ (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)), 0u ^ (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))))))))) | ((_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)), ~ (~ (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)), 0u ^ (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)))))))))))), clamp(_GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_base) : subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-25846) : 1))), _GLF_IDENTITY(0u | ((false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))) | (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)))))), _GLF_IDENTITY(0u + (_GLF_IDENTITY(0u | ((false ? _GLF_FUZZED(workgroup_base) : subgroup_local_id + 1)), _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), min(_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (false ? _GLF_FUZZED(workgroup_base) : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (true ? _GLF_FUZZED(num_workgroup) : _GLF_FUZZED((workgroup_id ++)))))) : 0u | ((false ? _GLF_FUZZED(workgroup_base) : subgroup_local_id + 1))), ((false ? _GLF_FUZZED(num_workgroup) : 0u | ((_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec3(subgroup_local_id + 1, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec3(subgroup_local_id + 1, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), ~ (~ (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec3(subgroup_local_id + 1, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec3(subgroup_local_id + 1, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))))))) + 0u))), (_GLF_IDENTITY(0u + (_GLF_IDENTITY(0u | ((false ? _GLF_FUZZED(workgroup_base) : subgroup_local_id + 1)), _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), min(_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (false ? _GLF_FUZZED(workgroup_base) : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (true ? _GLF_FUZZED(num_workgroup) : _GLF_FUZZED((workgroup_id ++)))))) : 0u | ((false ? _GLF_FUZZED(workgroup_base) : subgroup_local_id + 1))), ((false ? _GLF_FUZZED(num_workgroup) : 0u | ((_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec3(subgroup_local_id + 1, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec3(subgroup_local_id + 1, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), ~ (~ (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec3(subgroup_local_id + 1, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec3(subgroup_local_id + 1, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))))))) + 0u))), ~ (~ (0u + (_GLF_IDENTITY(0u | ((false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 0u, (0u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) - 0u))))))) : subgroup_local_id + 1)), _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), min(_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (false ? _GLF_FUZZED(workgroup_base) : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_IDENTITY(true, (true) || false) ? _GLF_FUZZED(num_workgroup) : _GLF_FUZZED((workgroup_id ++)))))) : 0u | ((false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(subgroup_id)))))), ((false ? _GLF_FUZZED(num_workgroup) : 0u | ((_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 0u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_IDENTITY(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), (uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) - uvec2(0u, 0u))))), max(uvec3(subgroup_local_id + 1, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec3(subgroup_local_id + 1, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), ~ (~ (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec3(subgroup_local_id + 1, 0u, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(uvec3(subgroup_local_id + 1, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec3(subgroup_local_id + 1, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (uvec3(subgroup_local_id + 1, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))))))))) + 0u))))))) - 0u))), (false ? _GLF_FUZZED(workgroup_base) : subgroup_local_id + 1), _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)))) : _GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), subgroup_local_id + 1))), ((false ? _GLF_FUZZED(workgroup_base) : subgroup_local_id + 1)) ^ 0u))))) % _GLF_IDENTITY(_GLF_struct_replacement_4._f3.subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_4._f3.subgroup_size, _GLF_IDENTITY(uint(uvec2(_GLF_struct_replacement_4._f3.subgroup_size, 0u)), uint(uint(uint(uvec2(_GLF_struct_replacement_4._f3.subgroup_size, 0u))))))), (false ? _GLF_FUZZED((subgroup_local_id & subgroup_local_id)) : (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4._f3.subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_struct_replacement_4._f3.subgroup_size), (~ (_GLF_struct_replacement_4._f3.subgroup_size)) ^ _GLF_IDENTITY(0u, ~ (~ (0u)))))), _GLF_IDENTITY(uint(uvec2(_GLF_struct_replacement_4._f3.subgroup_size, 0u)), uint(uint(uint(uvec2(_GLF_struct_replacement_4._f3.subgroup_size, 0u))))))))) >> 0u));
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) + vec2(0.0, 0.0)))).y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(1, max(1, 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[_GLF_struct_replacement_10._f0.virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), 0 ^ (_GLF_IDENTITY(4, max(4, 4)))));
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))) ^ 0u) < _GLF_struct_replacement_4._f3.subgroup_size)
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(0.7), float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(0.7), (true ? injectionSwitch.x : _GLF_FUZZED(0.7)) / 1.0), 1.0, 1.0, 1.0, 0.0, 0.0, log(exp(0.0)), 1.0), (true ? mat2x4(_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(0.7), (true ? injectionSwitch.x : _GLF_FUZZED(0.7)) / 1.0), 1.0, 1.0, 1.0, 0.0, 0.0, log(exp(0.0)), 1.0) : _GLF_FUZZED(mat2x4(-5.9, -13.27, -3.9, 5464.8702, -9.0, -4210.5307, 4467.5905, 61.00)))))))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(0.7))) > injectionSwitch.y))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))) && _GLF_IDENTITY(true, (true) || false))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(0.7))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(0.7))) > injectionSwitch.y))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(0.7), (true ? true ? injectionSwitch.x : _GLF_FUZZED(0.7) : _GLF_FUZZED(-16.22))))) > injectionSwitch.y, ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 1.0, 0.0))).x, (true ? _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, determinant(mat4(0.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, sin(0.0), 0.0)), 1.0, 1.0, 1.0, 1.0, sqrt(1.0), log(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0))) : _GLF_FUZZED(0.7))) > injectionSwitch.y)), (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 1.0, 0.0))).x, (true ? _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, determinant(mat4(0.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, sin(0.0), 0.0)), 1.0, 1.0, 1.0, 1.0, sqrt(1.0), log(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0))) : _GLF_FUZZED(0.7))) > injectionSwitch.y)), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 1.0, 0.0))).x, (true ? _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, determinant(mat4(0.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, sin(0.0), 0.0)), 1.0, 1.0, 1.0, 1.0, sqrt(1.0), log(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0))) : _GLF_FUZZED(0.7))) > injectionSwitch.y)), bool(bvec2((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 1.0, 0.0))).x, (true ? _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, determinant(mat4(0.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, sin(0.0), 0.0)), 1.0, 1.0, 1.0, 1.0, sqrt(1.0), log(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0))) : _GLF_FUZZED(0.7))) > injectionSwitch.y)), false))))))) && true)))), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))), ! (! (injectionSwitch.x > injectionSwitch.y)))))) && true))))) && true))
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) && true))))), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || false) && (false)))))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
            }
          }
         else
          {
           barrier();
          }
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true))) ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), mix(vec2(_GLF_FUZZED(-4937.6068), _GLF_FUZZED(-8.8)), vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))[0], (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))[1]), bvec2(true, true)))) * cos(vec2(0.0, 0.0)))))).y)))))))
          barrier();
        }
       else
        {
        }
       atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, (2) | _GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (0)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (0)), ~ (~ (_GLF_IDENTITY(0, 0 | (0)))))))))))), 4, 64, 4);
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y))) || false)))
        {
         subgroupAll(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY(true, ! (! (true))) && (bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))), _GLF_IDENTITY(bool(bvec2(bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))), ! (! ((! (false)))))))), false)), ! (! (bool(bvec2(bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), ! (! ((! (false))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((! (false)), ! (! ((! (false))))), true && (_GLF_IDENTITY(_GLF_IDENTITY((! (false)), ! (! ((! (false))))), ! (! (_GLF_IDENTITY((! (false)), ! (! ((! (false)))))))))))), bool(bvec4(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((! (false)), ! (! ((! (false))))), true && (_GLF_IDENTITY(_GLF_IDENTITY((! (false)), ! (! ((! (false))))), ! (! (_GLF_IDENTITY((! (false)), ! (! ((! (false)))))))))))), true, true, false))))))), false))))))));
        }
       else
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
          barrier();
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch, injectionSwitch)).x, 1.0, 0.0, 0.0)), (false ? _GLF_IDENTITY(_GLF_FUZZED(-74.70), min(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-74.70, (-74.70) / 1.0)), max(_GLF_FUZZED(_GLF_IDENTITY(-74.70, (-74.70) / 1.0)), _GLF_FUZZED(_GLF_IDENTITY(-74.70, (-74.70) / 1.0)))), _GLF_FUZZED(-74.70))) : float(mat2(injectionSwitch.x, 1.0, 0.0, 0.0))))), injectionSwitch.x)) > injectionSwitch.y))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
          barrier();
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(4.1, 27.92))))[0], max(_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(4.1, 27.92))))[0], _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(4.1, 27.92))))[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-24.69), _GLF_FUZZED(8521.2370)), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), false))).y), bool(bool((injectionSwitch.x > injectionSwitch.y))))), ! _GLF_IDENTITY((! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + tan(vec2(0.0, 0.0))).x > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-120.764 + -8.2))), bool(false)))), bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) && true)))))))))), (_GLF_IDENTITY((! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-4538.6574) : injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-4538.6574) : injectionSwitch.x))) / 1.0), injectionSwitch.x)) > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_FUZZED(5.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2806.8512) : float(_GLF_FUZZED(5.0)))), bool(false))))) > injectionSwitch.y))))))))), bool(bvec4((! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x < injectionSwitch.y) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true))), bool(bool(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-24.69), _GLF_FUZZED(8521.2370)), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)), false))).y), bool(bool((injectionSwitch.x > injectionSwitch.y))))), ! _GLF_IDENTITY((! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-120.764 + -8.2))), bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))))))), bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && true)))))))))), (_GLF_IDENTITY((! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-4538.6574) : injectionSwitch.x)), injectionSwitch.x), float(mat4(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-4538.6574) : injectionSwitch.x)), injectionSwitch.x), sqrt(1.0), 0.0, abs(0.0), round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)))) > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(5.0)), bool(false))), max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(5.0)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(5.0)), bool(false))), float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(5.0)), bool(false))), float(mat2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(5.0)), bool(false))), 0.0, 0.0, 1.0))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))))))) > injectionSwitch.y))))))))), bool(bvec4((! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y) && _GLF_IDENTITY(true, false || (true)))))))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)))))))
          {
           if(_GLF_DEAD(false))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               return;
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)).x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_IDENTITY(((injectionSwitch))[1], mix(float(((injectionSwitch))[1]), float(_GLF_FUZZED(2.8)), bool(false)))), vec2(_GLF_FUZZED(423.653), _GLF_FUZZED(8.7)), bvec2(false, false)))) / vec2(1.0, 1.0)) - vec2(0.0, 0.0)).x)) > injectionSwitch.y))))
              barrier();
            }
          }
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))), false))))))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << 0u))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), 0u | (_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), 0u + (_GLF_FUZZED(num_workgroup))))) : next_virtual_gid)), (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, ~ (~ (_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)))))) << 0u))), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), false, false))))), bool(bvec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y, true)))), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, determinant(mat2(1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), 1.0, 1.0, 0.0))).y, true)))), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(reflect(vec2(-7.7, 143.814), vec2(-890.655, 41.65))))))).y)))))) ? _GLF_FUZZED(num_workgroup) : next_virtual_gid))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << 0u))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : next_virtual_gid)), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << 0u))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : next_virtual_gid))))))))], uint(2), 4, _GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, max(64, 64)), 64))) | _GLF_IDENTITY(0, ~ (~ (0))), ((_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, max(64, 64)), 64))) | _GLF_IDENTITY(0, ~ (~ (0)))) | ((_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, max(64, 64)), 64))) | _GLF_IDENTITY(0, ~ (~ (0)))))), 4);
        }
       else
        {
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         for(_GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(1, mat4x2(_GLF_IDENTITY(1.0, length(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(9804.9869)))) + _GLF_IDENTITY((1.0), clamp((1.0), _GLF_IDENTITY((1.0), 1.0 * ((1.0))), (1.0))))), mat4(1.0)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_struct_replacement_11._injected_loop_counter > _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), min(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), min(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (int(_GLF_ZERO(0.0, injectionSwitch.x))))), int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(_GLF_ZERO(0.0, injectionSwitch.x)))), ! (! (_GLF_struct_replacement_11._injected_loop_counter > _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-3.5)), bool(false))), 0.0)), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 0.0))), injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0)) / 1.0)), min(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), max(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-69.78))), 0.0)), 0.0)), injectionSwitch.x)))))))); _GLF_IDENTITY(_GLF_struct_replacement_11._injected_loop_counter --, 0 ^ (_GLF_struct_replacement_11._injected_loop_counter --)))
          {
           do
            {
             subgroupAll(true);
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
           do
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || false)), ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), true, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, length(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))) > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, length(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))) > injectionSwitch.y)))), true, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, true && (false)), true), false, true))))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, sqrt(0.0))), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, 1.0, abs(1.0), 1.0, 1.0, 1.0))).y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || false)) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || false)) && true)))), true, false), bvec3(bvec3(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, true && (false)), true), false, true))))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, sqrt(0.0))), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, 1.0, abs(1.0), 1.0, 1.0, 1.0))).y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || false)) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || false)) && true)))), true, false)))), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), true, false), _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true))), (injectionSwitch.x < injectionSwitch.y)))))), false))))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), bool(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), true)))) || false)))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
