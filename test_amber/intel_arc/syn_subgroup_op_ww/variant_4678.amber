#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_31 {
 uint _f0;
 vec4 _f1;
 int _f2;
} ;

struct _GLF_struct_30 {
 uvec2 _f0;
} ;

struct _GLF_struct_29 {
 mat2x3 _f0;
 mat3 _f1;
 uint _f2;
} ;

struct _GLF_struct_32 {
 _GLF_struct_29 _f0;
 uint workgroup_base;
 _GLF_struct_30 _f1;
 _GLF_struct_31 _f2;
} ;

struct _GLF_struct_33 {
 mat4x3 _f0;
 _GLF_struct_32 _f1;
 mat2 _f2;
} ;

struct _GLF_struct_27 {
 bvec2 _f0;
 bvec4 _f1;
} ;

struct _GLF_struct_25 {
 int _f0;
 ivec4 _f1;
 mat3 _f2;
} ;

struct _GLF_struct_26 {
 _GLF_struct_25 _f0;
} ;

struct _GLF_struct_23 {
 uvec2 _f0;
} ;

struct _GLF_struct_22 {
 vec2 _f0;
 int _f1;
 uvec4 _f2;
} ;

struct _GLF_struct_24 {
 _GLF_struct_22 _f0;
 vec4 _f1;
 int _f2;
 vec4 _f3;
 _GLF_struct_23 _f4;
} ;

struct _GLF_struct_28 {
 mat2x4 _f0;
 int _f1;
 _GLF_struct_24 _f2;
 _GLF_struct_26 _f3;
 _GLF_struct_27 _f4;
 uint subgroup_local_id;
 uvec3 _f5;
} ;

struct _GLF_struct_19 {
 uvec2 _f0;
 vec3 _f1;
 ivec2 _f2;
 mat2 _f3;
 mat4x3 _f4;
 mat4x2 _f5;
 bvec3 _f6;
} ;

struct _GLF_struct_18 {
 mat4x3 _f0;
 uvec3 _f1;
 mat4 _f2;
 vec4 _f3;
} ;

struct _GLF_struct_20 {
 _GLF_struct_18 _f0;
 _GLF_struct_19 _f1;
 mat3x4 _f2;
 mat3x2 _f3;
 ivec3 _f4;
} ;

struct _GLF_struct_16 {
 vec2 _f0;
 uvec4 _f1;
 ivec4 _f2;
 ivec3 _f3;
 uint _f4;
} ;

struct _GLF_struct_15 {
 mat2 _f0;
 mat4 _f1;
 mat4 _f2;
 mat3x2 _f3;
 mat2 _f4;
 vec4 _f5;
 mat3x4 _f6;
} ;

struct _GLF_struct_14 {
 mat3 _f0;
 uint _f1;
} ;

struct _GLF_struct_13 {
 float _f0;
 vec4 _f1;
 bvec3 _f2;
 float _f3;
 uvec2 _f4;
 bvec2 _f5;
} ;

struct _GLF_struct_17 {
 vec4 _f0;
 _GLF_struct_13 _f1;
 _GLF_struct_14 _f2;
 _GLF_struct_15 _f3;
 mat3x4 _f4;
 _GLF_struct_16 _f5;
 mat3x2 _f6;
} ;

struct _GLF_struct_11 {
 bvec4 _f0;
 int _f1;
 mat4 _f2;
 mat3 _f3;
 int _f4;
} ;

struct _GLF_struct_12 {
 bvec2 _f0;
 _GLF_struct_11 _f1;
 float _f2;
} ;

struct _GLF_struct_21 {
 vec3 _f0;
 _GLF_struct_12 _f1;
 _GLF_struct_17 _f2;
 _GLF_struct_20 _f3;
 uvec3 _f4;
 uint subgroup_size;
 bvec4 _f5;
} ;

struct _GLF_struct_8 {
 uvec2 _f0;
 mat4x2 _f1;
 mat4x3 _f2;
} ;

struct _GLF_struct_7 {
 uint _f0;
 ivec4 _f1;
 bvec4 _f2;
 uvec3 _f3;
 bool _f4;
} ;

struct _GLF_struct_6 {
 uvec2 _f0;
 mat4x3 _f1;
} ;

struct _GLF_struct_5 {
 mat2x3 _f0;
 bvec4 _f1;
 ivec2 _f2;
} ;

struct _GLF_struct_4 {
 bvec3 _f0;
 mat2x4 _f1;
 mat3x4 _f2;
 uvec4 _f3;
 uvec3 _f4;
 mat3 _f5;
 ivec3 _f6;
} ;

struct _GLF_struct_9 {
 ivec4 _f0;
 _GLF_struct_4 _f1;
 _GLF_struct_5 _f2;
 _GLF_struct_6 _f3;
 _GLF_struct_7 _f4;
 _GLF_struct_8 _f5;
} ;

struct _GLF_struct_2 {
 uint _f0;
 mat2x4 _f1;
 bvec2 _f2;
} ;

struct _GLF_struct_3 {
 _GLF_struct_2 _f0;
 mat3x2 _f1;
 float _f2;
 mat2x3 _f3;
} ;

struct _GLF_struct_0 {
 mat2 _f0;
 mat4x3 _f1;
 uint subgroup_id;
} ;

struct _GLF_struct_1 {
 bvec4 _f0;
 ivec4 _f1;
 ivec3 _f2;
 _GLF_struct_0 _f3;
} ;

struct _GLF_struct_10 {
 uint _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_3 _f2;
 mat3x4 _f3;
 _GLF_struct_9 _f4;
 uvec2 _f5;
 uvec3 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 _GLF_struct_10 _GLF_struct_replacement_10 = _GLF_struct_10(1u, _GLF_struct_1(bvec4(true), _GLF_IDENTITY(ivec4(1), max(_GLF_IDENTITY(ivec4(1), (_GLF_IDENTITY(true ? ivec4(_GLF_IDENTITY(1, 0 ^ (1))) : _GLF_FUZZED(ivec4(-50073, 16616, -4658, -28316)), min(true ? ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (0 | 0) | (1)))), 0 ^ (1))) : _GLF_FUZZED(ivec4(-50073, 16616, -4658, -28316)), _GLF_IDENTITY(true ? ivec4(_GLF_IDENTITY(1, 0 ^ (1))) : _GLF_FUZZED(ivec4(-50073, 16616, -4658, -28316)), ~ (~ (true ? ivec4(_GLF_IDENTITY(1, 0 ^ (1))) : _GLF_FUZZED(ivec4(-50073, 16616, -4658, -28316))))))))), ivec4(1))), ivec3(1), _GLF_struct_0(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)), mat4x3(1.0), gl_SubgroupID)), _GLF_struct_3(_GLF_struct_2(_GLF_IDENTITY(1u, (1u) ^ 0u), mat2x4(1.0), bvec2(true)), mat3x2(1.0), 1.0, mat2x3(1.0)), mat3x4(1.0), _GLF_struct_9(ivec4(1), _GLF_struct_4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), true)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), true)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), true))))))))))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true)))), true))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), true)))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), true)))))), false))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), true)))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), true))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), true)))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), true)))))), false))))))))))))))), mat2x4(1.0), mat3x4(1.0), uvec4(1u), uvec3(1u), mat3(1.0), ivec3(1)), _GLF_struct_5(mat2x3(1.0), bvec4(true), ivec2(_GLF_IDENTITY(1, clamp(1, 1, 1)))), _GLF_struct_6(uvec2(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u ^ (1u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))), mat4x3(1.0)), _GLF_struct_7(1u, _GLF_IDENTITY(ivec4(1), _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))) ? _GLF_FUZZED(ivec4(-97360, 85599, -16599, -45585)) : ivec4(1)), ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))) ? _GLF_FUZZED(ivec4(-97360, 85599, -16599, -45585)) : ivec4(1))) / ((ivec4(1, 1, 1, 1) << _GLF_IDENTITY(ivec4(1), ivec4(1))) >> _GLF_IDENTITY(ivec4(1), ivec4(1))))), bvec4(true), uvec3(1u), true), _GLF_struct_8(uvec2(1u), mat4x2(1.0), mat4x3(1.0))), uvec2(1u), uvec3(1u));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-488.744), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(1706.9872)), bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), false, true)))), ! (! (bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), false, true)))))))), false))).y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false))))))), bool(bvec4(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), true, false))))))), true, true, false))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-488.744), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(1706.9872, max(1706.9872, 1706.9872)))), bvec2(true, false))).y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false))))))), bool(bvec4(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, false || (false)), true, false))))))), true, true, false)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 _GLF_struct_21 _GLF_struct_replacement_21 = _GLF_struct_21(vec3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-4.1) : _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(inversesqrt(3.9)))), 1.0, 1.0))))), _GLF_struct_12(bvec2(true), _GLF_struct_11(bvec4(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) && _GLF_IDENTITY((! (true)), true && ((! (true)))))))), _GLF_IDENTITY(1, int(ivec4(1, 1, 1, (1 ^ (1 & 1))))), mat4(_GLF_IDENTITY(1.0, (1.0) * 1.0)), mat3(_GLF_IDENTITY(1.0, (1.0) + _GLF_IDENTITY(0.0, _GLF_ZERO(0.0, injectionSwitch.x) + (0.0)))), 1), 1.0), _GLF_struct_17(vec4(1.0), _GLF_struct_13(1.0, vec4(1.0), bvec3(true), 1.0, uvec2(1u), bvec2(true)), _GLF_struct_14(mat3(_GLF_IDENTITY(1.0, max(1.0, 1.0))), 1u), _GLF_struct_15(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))), mat4(1.0), mat4(1.0), mat3x2(1.0), mat2(1.0), vec4(1.0), mat3x4(1.0)), mat3x4(1.0), _GLF_struct_16(vec2(1.0), _GLF_IDENTITY(uvec4(1u), uvec4(0u, 0u, 0u, 0u) ^ _GLF_IDENTITY((uvec4(_GLF_IDENTITY(1u, uint(uvec4(_GLF_IDENTITY(1u, min(1u, 1u)), 1u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))), 1u))))), ((uvec4(_GLF_IDENTITY(1u, uint(uvec4(_GLF_IDENTITY(1u, min(1u, 1u)), 1u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))), 1u)))))) | uvec4(0u, 0u, 0u, 0u))), ivec4(1), ivec3(1), 1u), mat3x2(1.0)), _GLF_struct_20(_GLF_struct_18(mat4x3(1.0), uvec3(1u), mat4(1.0), vec4(1.0)), _GLF_struct_19(uvec2(1u), vec3(1.0), ivec2(1), mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), mat4x3(1.0), mat4x2(1.0), bvec3(true)), mat3x4(1.0), mat3x2(1.0), ivec3(1)), uvec3(1u), gl_SubgroupSize, bvec4(true));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 0.0, 0.0, 0.0)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bvec2((false), true))))), bool(bvec2(! (false), true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 _GLF_struct_28 _GLF_struct_replacement_28 = _GLF_struct_28(mat2x4(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-28.50) : _GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0, 1.0)), 1.0))), 1, _GLF_struct_24(_GLF_struct_22(vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(175.590)), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), float(_GLF_FUZZED(7.3)), bool(false)))), 1, uvec4(1u)), vec4(1.0), 1, _GLF_IDENTITY(vec4(1.0), max(vec4(1.0), _GLF_IDENTITY(vec4(1.0), max(vec4(1.0), vec4(1.0))))), _GLF_struct_23(uvec2(1u))), _GLF_struct_26(_GLF_struct_25(1, ivec4(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) - 0), 1))), mat3(1.0))), _GLF_struct_27(bvec2(true), bvec4(true)), gl_SubgroupInvocationID, uvec3(1u));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, ~ (~ (gl_NumWorkGroups.x)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), bool(bvec2(_GLF_IDENTITY(bool(bvec4(false, false, true, true)), _GLF_IDENTITY(_GLF_IDENTITY(true && (bool(bvec4(false, false, true, true))), bool(_GLF_IDENTITY(bool(true && (bool(bvec4(false, false, true, true)))), bool(_GLF_IDENTITY(bvec2(bool(true && (bool(bvec4(false, false, true, true)))), false), bvec2(bvec4(bvec2(bool(true && (bool(bvec4(false, false, true, true)))), false), true, true))))))), true && (_GLF_IDENTITY(true && (bool(bvec4(false, false, true, true))), bool(_GLF_IDENTITY(bool(true && (bool(bvec4(false, false, true, true)))), bool(_GLF_IDENTITY(bvec2(bool(true && (bool(bvec4(false, false, true, true)))), false), bvec2(bvec4(bvec2(bool(true && (bool(bvec4(false, false, true, true)))), false), true, true)))))))))), false)))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bvec4(false, false, true, true)), _GLF_IDENTITY(_GLF_IDENTITY(true && (bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), false, true, true))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(true && (bool(bvec4(false, _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))))))), (bool(true && (bool(bvec4(false, _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true)))))))))) && true), bool(_GLF_IDENTITY(bvec2(bool(true && (bool(bvec4(false, false, true, true)))), false), bvec2(bvec4(bvec2(bool(true && (bool(bvec4(false, false, true, true)))), false), true, true))))))), true && _GLF_IDENTITY((_GLF_IDENTITY(true && (bool(bvec4(false, false, true, true))), bool(_GLF_IDENTITY(bool(true && (bool(bvec4(false, false, true, true)))), bool(_GLF_IDENTITY(bvec2(bool(true && (bool(bvec4(false, false, _GLF_IDENTITY(true, bool(bool(true))), true)))), false), bvec2(bvec4(bvec2(bool(true && (bool(bvec4(false, false, true, true)))), false), true, true)))))))), ! (! ((_GLF_IDENTITY(true && (bool(bvec4(false, false, true, true))), bool(_GLF_IDENTITY(bool(true && (bool(bvec4(false, false, true, true)))), bool(_GLF_IDENTITY(bvec2(bool(true && (bool(bvec4(false, false, _GLF_IDENTITY(true, bool(bool(true))), true)))), false), bvec2(bvec4(bvec2(bool(true && (bool(bvec4(false, false, true, true)))), false), true, true))))))))))))), false)), bool(bool(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bvec4(false, false, true, true)), _GLF_IDENTITY(_GLF_IDENTITY(true && (bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), false, true, true))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(true && (bool(bvec4(false, _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))))))), (bool(true && (bool(bvec4(false, _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true)))))))))) && true), bool(_GLF_IDENTITY(bvec2(bool(true && (bool(bvec4(false, false, true, true)))), false), bvec2(bvec4(bvec2(bool(true && (bool(bvec4(false, false, true, true)))), false), true, true))))))), true && _GLF_IDENTITY((_GLF_IDENTITY(true && (bool(bvec4(false, false, true, true))), bool(_GLF_IDENTITY(bool(true && (bool(bvec4(false, false, true, true)))), bool(_GLF_IDENTITY(bvec2(bool(true && (bool(bvec4(false, false, _GLF_IDENTITY(true, bool(bool(true))), true)))), false), bvec2(bvec4(bvec2(bool(true && (bool(bvec4(false, false, true, true)))), false), true, true)))))))), ! (! ((_GLF_IDENTITY(true && (bool(bvec4(false, false, true, true))), bool(_GLF_IDENTITY(bool(true && (bool(bvec4(false, false, true, true)))), bool(_GLF_IDENTITY(bvec2(bool(true && (bool(bvec4(false, false, _GLF_IDENTITY(true, bool(bool(true))), true)))), false), bvec2(bvec4(bvec2(bool(true && (bool(bvec4(false, false, true, true)))), false), true, true))))))))))))), false)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(bool(bvec4(false, false, true, true)), _GLF_IDENTITY(_GLF_IDENTITY(true && (bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), false, true, true))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(true && (bool(bvec4(false, _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))))))), (bool(true && (bool(bvec4(false, _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true)))))))))) && true), bool(_GLF_IDENTITY(bvec2(bool(true && (bool(bvec4(false, false, true, true)))), false), bvec2(bvec4(bvec2(bool(true && (bool(bvec4(false, false, true, true)))), false), true, true))))))), true && _GLF_IDENTITY((_GLF_IDENTITY(true && (bool(bvec4(false, false, true, true))), bool(_GLF_IDENTITY(bool(true && (bool(bvec4(false, false, true, true)))), bool(_GLF_IDENTITY(bvec2(bool(true && (bool(bvec4(false, false, _GLF_IDENTITY(true, bool(bool(true))), true)))), false), bvec2(bvec4(bvec2(bool(true && (bool(bvec4(false, false, true, true)))), false), true, true)))))))), ! (! ((_GLF_IDENTITY(true && (bool(bvec4(false, false, true, true))), bool(_GLF_IDENTITY(bool(true && (bool(bvec4(false, false, true, true)))), bool(_GLF_IDENTITY(bvec2(bool(true && (bool(bvec4(false, false, _GLF_IDENTITY(true, bool(bool(true))), true)))), false), bvec2(bvec4(bvec2(bool(true && (bool(bvec4(false, false, true, true)))), false), true, true))))))))))))), false))), (! (bool(bvec2(_GLF_IDENTITY(bool(bvec4(false, false, true, true)), _GLF_IDENTITY(_GLF_IDENTITY(true && (bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), false, true, true))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(true && (bool(bvec4(false, _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))))))), (bool(true && (bool(bvec4(false, _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true)))))))))) && true), bool(_GLF_IDENTITY(bvec2(bool(true && (bool(bvec4(false, false, true, true)))), false), bvec2(bvec4(bvec2(bool(true && (bool(bvec4(false, false, true, true)))), false), true, true))))))), true && _GLF_IDENTITY((_GLF_IDENTITY(true && (bool(bvec4(false, false, true, true))), bool(_GLF_IDENTITY(bool(true && (bool(bvec4(false, false, true, true)))), bool(_GLF_IDENTITY(bvec2(bool(true && (bool(bvec4(false, false, _GLF_IDENTITY(true, bool(bool(true))), true)))), false), bvec2(bvec4(bvec2(bool(true && (bool(bvec4(false, false, true, true)))), false), true, true)))))))), ! (! ((_GLF_IDENTITY(true && (bool(bvec4(false, false, true, true))), bool(_GLF_IDENTITY(bool(true && (bool(bvec4(false, false, true, true)))), bool(_GLF_IDENTITY(bvec2(bool(true && (bool(bvec4(false, false, _GLF_IDENTITY(true, bool(bool(true))), true)))), false), bvec2(bvec4(bvec2(bool(true && (bool(bvec4(false, false, true, true)))), false), true, true))))))))))))), false)))) && true)))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_33 _GLF_struct_replacement_33 = _GLF_struct_33(mat4x3(1.0), _GLF_struct_32(_GLF_struct_29(mat2x3(1.0), mat3(1.0), 1u), _GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) >> 0u)) - 0u), _GLF_struct_30(_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) >> uvec2(0u, 0u))), _GLF_struct_31(_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) << 0u), 1u, 1u))) - (0u << _GLF_IDENTITY(uint(7u), uint(7u)))), (172276u & 0u) | (1u)), vec4(1.0), 1)), mat2(1.0));
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_base = _GLF_struct_replacement_10._f1._f3.subgroup_id * _GLF_struct_replacement_21.subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_struct_replacement_33._f1.workgroup_base, uint(uvec2(_GLF_struct_replacement_33._f1.workgroup_base, 0u))) + subgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_28.subgroup_local_id, (_GLF_IDENTITY(_GLF_struct_replacement_28.subgroup_local_id, min(_GLF_struct_replacement_28.subgroup_local_id, _GLF_IDENTITY(_GLF_struct_replacement_28.subgroup_local_id, max(_GLF_struct_replacement_28.subgroup_local_id, _GLF_struct_replacement_28.subgroup_local_id))))) ^ _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), max(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))), injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) >> 0u), _GLF_IDENTITY((true ? uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x)) : _GLF_FUZZED(18101u)), _GLF_IDENTITY(((true ? uint(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(18101u))) ^ 0u, (((true ? uint(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(18101u))) ^ 0u) | 0u))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 1.0 * (_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 1.0 * (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), max(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((true ? uint(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(18101u)), ((true ? uint(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_IDENTITY(_GLF_FUZZED(18101u), max(_GLF_FUZZED(18101u), _GLF_FUZZED(18101u))))) ^ 0u))))) | 0u));
 uint next_virtual_gid = _GLF_struct_replacement_33._f1.workgroup_base + subgroup_base + ((_GLF_struct_replacement_28.subgroup_local_id + 1) % _GLF_struct_replacement_21.subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), ! (! ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), ! (! ((injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false))))))) || false))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(true, false, false)), bvec3(bvec4(bvec3(bvec3(true, false, false)), true)))))))), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), true))))))), _GLF_IDENTITY(false || (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 0.0, 1.0, length(vec2(0.0, 0.0)), 1.0)), clamp(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 0.0, 1.0, length(vec2(0.0, 0.0)), 1.0)), vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 0.0, 1.0, length(vec2(0.0, 0.0)), 1.0)), _GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 0.0, 1.0, length(vec2(0.0, 0.0)), 1.0)), clamp(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 0.0, 1.0, length(vec2(0.0, 0.0)), 1.0)), vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 0.0, 1.0, length(vec2(0.0, 0.0)), 1.0)), vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 0.0, 1.0, length(vec2(0.0, 0.0)), 1.0))))))).x > injectionSwitch.y, true, true), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), true))))))), ! (! (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), true))))))))))), false || (false || (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(length(vec2(0.0, 0.0)), mix(float(_GLF_FUZZED(9.4)), float(length(vec2(0.0, 0.0))), bool(true))), 1.0)), clamp(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 0.0, 1.0, length(vec2(0.0, 0.0)), 1.0)), vec2(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[0], _GLF_FUZZED(-6.6)), vec2(_GLF_FUZZED(-6.6), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1], mix(float((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1]), float(_GLF_FUZZED(vec4(8.4, -7.2, -7.8, -6.7).w)), bool(false)))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), 0.0, 0.0, 0.0, 1.0, length(vec2(0.0, 0.0)), 1.0)), _GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 0.0, 1.0, length(vec2(0.0, 0.0)), 1.0)), clamp(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 0.0, 1.0, length(vec2(0.0, 0.0)), 1.0)), vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 0.0, 1.0, length(vec2(0.0, 0.0)), 1.0)), _GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 0.0, 1.0, length(vec2(0.0, 0.0)), 1.0)), (vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 0.0, 1.0, length(vec2(0.0, 0.0)), 1.0))) * mat2(1.0))))))).x > injectionSwitch.y, true, true), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), true))))))), ! (! (((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mat2(1.0) * ((injectionSwitch) * mat2(1.0)))).y) && true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), true)))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), true)))), ! (! (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), true))))))), false || (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 0.0, 1.0, length(vec2(0.0, 0.0)), 1.0)), clamp(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 0.0, 1.0, length(vec2(0.0, 0.0)), 1.0)), vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 0.0, 1.0, length(vec2(0.0, 0.0)), 1.0)), _GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 0.0, 1.0, length(vec2(0.0, 0.0)), 1.0)), clamp(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 0.0, 1.0, length(vec2(0.0, 0.0)), 1.0)), vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 0.0, 1.0, length(vec2(0.0, 0.0)), 1.0)), vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 0.0, 1.0, length(vec2(0.0, 0.0)), 1.0))))))).x > injectionSwitch.y, true, true), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), true))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 0.0, 1.0, length(_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * mat2(1.0))), 1.0)), _GLF_IDENTITY(clamp(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 0.0, 1.0, length(vec2(0.0, 0.0)), 1.0)), vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 0.0, 1.0, length(vec2(0.0, 0.0)), 1.0)), _GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 0.0, 1.0, length(vec2(0.0, 0.0)), 1.0)), clamp(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 0.0, 1.0, length(vec2(0.0, 0.0)), 1.0)), vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 0.0, 1.0, length(vec2(0.0, 0.0)), 1.0)), vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 0.0, 1.0, length(vec2(0.0, 0.0)), 1.0))))), max(clamp(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 0.0, 1.0, length(vec2(0.0, 0.0)), 1.0)), vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 0.0, 1.0, length(vec2(0.0, 0.0)), 1.0)), _GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 0.0, 1.0, length(vec2(0.0, 0.0)), 1.0)), clamp(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 0.0, 1.0, length(vec2(0.0, 0.0)), 1.0)), vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 0.0, 1.0, length(vec2(0.0, 0.0)), 1.0)), vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 0.0, 1.0, length(vec2(0.0, 0.0)), 1.0))))), clamp(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 0.0, 1.0, length(vec2(0.0, 0.0)), 1.0)), vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 0.0, 1.0, length(vec2(0.0, 0.0)), 1.0)), _GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 0.0, 1.0, length(vec2(0.0, 0.0)), 1.0)), clamp(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 0.0, 1.0, length(vec2(0.0, 0.0)), 1.0)), vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 0.0, 1.0, length(vec2(0.0, 0.0)), 1.0)), vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 0.0, 1.0, length(vec2(0.0, 0.0)), 1.0))))))))).x > injectionSwitch.y, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true)), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), true)))))) && true))), ! (! (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), true))))))))))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_28.subgroup_local_id % 2, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_struct_replacement_28.subgroup_local_id % 2) - 0u, ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_28.subgroup_local_id, clamp(_GLF_struct_replacement_28.subgroup_local_id, _GLF_IDENTITY(_GLF_struct_replacement_28.subgroup_local_id, min(_GLF_struct_replacement_28.subgroup_local_id, _GLF_struct_replacement_28.subgroup_local_id)), _GLF_struct_replacement_28.subgroup_local_id)), (_GLF_IDENTITY(_GLF_struct_replacement_28.subgroup_local_id, clamp(_GLF_struct_replacement_28.subgroup_local_id, _GLF_IDENTITY(_GLF_struct_replacement_28.subgroup_local_id, min(_GLF_struct_replacement_28.subgroup_local_id, _GLF_struct_replacement_28.subgroup_local_id)), _GLF_struct_replacement_28.subgroup_local_id))) - 0u) % 2) - 0u))), max(_GLF_IDENTITY((_GLF_struct_replacement_28.subgroup_local_id % 2) - 0u, min((_GLF_struct_replacement_28.subgroup_local_id % 2) - _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : 0u))) * 1u, ((_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : 0u))) * 1u) ^ 0u), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : 0u))) * 1u, ((_GLF_IDENTITY(0u, (false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (true ? _GLF_FUZZED(num_workgroup) : _GLF_FUZZED(next_virtual_gid)))) + 0u) : 0u))) * 1u) - _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, min(0u, 0u)))))), uint(uint(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : 0u))) * 1u, ((_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : 0u))) * 1u) - _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, min(0u, 0u)))))), ((_GLF_IDENTITY((_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : 0u))) * 1u, _GLF_IDENTITY(((_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : 0u))) * 1u) - _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, min(0u, 0u)))), (false ? _GLF_FUZZED(workgroup_size) : ((_GLF_IDENTITY(0u, _GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : 0u), min((false ? _GLF_FUZZED(num_workgroup) : 0u), (false ? _GLF_FUZZED(num_workgroup) : 0u))))) * 1u) - _GLF_IDENTITY(0u, _GLF_IDENTITY(max(0u, _GLF_IDENTITY(0u, min(0u, 0u))), 0u ^ (max(0u, _GLF_IDENTITY(0u, min(0u, 0u))))))))))) | ((_GLF_IDENTITY((_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : 0u))) * 1u, ((_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : 0u))) * 1u) - _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, min(0u, 0u))))))))))) / 1u)), _GLF_IDENTITY(0u | (_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) - 0u))), (false ? _GLF_FUZZED(num_workgroup) : 0u))) * 1u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_base) : 0u | (_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) - 0u))), (false ? _GLF_FUZZED(num_workgroup) : 0u))) * 1u))))), (_GLF_struct_replacement_28.subgroup_local_id % 2) - 0u)), (_GLF_IDENTITY(_GLF_struct_replacement_28.subgroup_local_id, ~ (~ (_GLF_struct_replacement_28.subgroup_local_id))) % _GLF_IDENTITY(2, min(2, 2))) - 0u)))), ((_GLF_IDENTITY(_GLF_struct_replacement_28.subgroup_local_id % 2, _GLF_IDENTITY((_GLF_struct_replacement_28.subgroup_local_id % 2) - 0u, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_struct_replacement_28.subgroup_local_id % 2), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_struct_replacement_28.subgroup_local_id % 2), (_GLF_IDENTITY((_GLF_struct_replacement_28.subgroup_local_id % 2), clamp((_GLF_struct_replacement_28.subgroup_local_id % 2), _GLF_IDENTITY((_GLF_struct_replacement_28.subgroup_local_id % 2), ((_GLF_struct_replacement_28.subgroup_local_id % 2)) / 1u), (_GLF_struct_replacement_28.subgroup_local_id % 2)))) | 0u)), clamp((_GLF_IDENTITY((_GLF_struct_replacement_28.subgroup_local_id % 2), (_GLF_IDENTITY((_GLF_struct_replacement_28.subgroup_local_id % 2), clamp((_GLF_struct_replacement_28.subgroup_local_id % 2), _GLF_IDENTITY((_GLF_struct_replacement_28.subgroup_local_id % 2), ((_GLF_struct_replacement_28.subgroup_local_id % 2)) / 1u), (_GLF_struct_replacement_28.subgroup_local_id % 2)))) | 0u)), (_GLF_IDENTITY((_GLF_struct_replacement_28.subgroup_local_id % 2), (_GLF_IDENTITY((_GLF_struct_replacement_28.subgroup_local_id % 2), clamp((_GLF_struct_replacement_28.subgroup_local_id % 2), _GLF_IDENTITY((_GLF_struct_replacement_28.subgroup_local_id % 2), ((_GLF_struct_replacement_28.subgroup_local_id % 2)) / 1u), (_GLF_struct_replacement_28.subgroup_local_id % 2)))) | 0u)), (_GLF_IDENTITY((_GLF_struct_replacement_28.subgroup_local_id % 2), (_GLF_IDENTITY((_GLF_struct_replacement_28.subgroup_local_id % 2), clamp((_GLF_struct_replacement_28.subgroup_local_id % 2), _GLF_IDENTITY((_GLF_struct_replacement_28.subgroup_local_id % 2), ((_GLF_struct_replacement_28.subgroup_local_id % 2)) / 1u), (_GLF_struct_replacement_28.subgroup_local_id % 2)))) | 0u)))) / 1u), (_GLF_IDENTITY((_GLF_struct_replacement_28.subgroup_local_id % 2), (_GLF_IDENTITY((_GLF_struct_replacement_28.subgroup_local_id % 2), ((_GLF_struct_replacement_28.subgroup_local_id % 2)) | 0u)) / 1u)) | (_GLF_IDENTITY((_GLF_struct_replacement_28.subgroup_local_id % 2), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_28.subgroup_local_id, (_GLF_struct_replacement_28.subgroup_local_id) - 0u) % 2), ((_GLF_struct_replacement_28.subgroup_local_id % 2)) | 0u)) / 1u))) - 0u, _GLF_IDENTITY(min((_GLF_IDENTITY(_GLF_struct_replacement_28.subgroup_local_id % 2, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_struct_replacement_28.subgroup_local_id % 2, 0u), (uvec2(_GLF_struct_replacement_28.subgroup_local_id % 2, 0u)) / uvec2(1u, 1u))), (uint(_GLF_IDENTITY(uvec2(_GLF_struct_replacement_28.subgroup_local_id % 2, 0u), (uvec2(_GLF_struct_replacement_28.subgroup_local_id % 2, 0u)) / uvec2(1u, 1u)))) - 0u))) - _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), _GLF_IDENTITY((_GLF_struct_replacement_28.subgroup_local_id % 2) - 0u, clamp((_GLF_struct_replacement_28.subgroup_local_id % _GLF_IDENTITY(2, ~ (~ (2)))) - 0u, (_GLF_IDENTITY(_GLF_struct_replacement_28.subgroup_local_id % 2, (_GLF_struct_replacement_28.subgroup_local_id % 2) << 0u)) - 0u, _GLF_IDENTITY((_GLF_struct_replacement_28.subgroup_local_id % 2) - 0u, ((_GLF_struct_replacement_28.subgroup_local_id % 2) - 0u) + 0u)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(next_virtual_gid) : min((_GLF_struct_replacement_28.subgroup_local_id % 2) - _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), _GLF_IDENTITY((_GLF_struct_replacement_28.subgroup_local_id % 2) - 0u, clamp((_GLF_struct_replacement_28.subgroup_local_id % 2) - 0u, (_GLF_struct_replacement_28.subgroup_local_id % 2) - 0u, _GLF_IDENTITY((_GLF_struct_replacement_28.subgroup_local_id % 2) - _GLF_IDENTITY(0u, 1u * (0u)), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_struct_replacement_28.subgroup_local_id % 2) - 0u, (true ? (_GLF_struct_replacement_28.subgroup_local_id % _GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, (2) | 0), 2, 2))) - _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) >> 0u))) : _GLF_FUZZED((workgroup_size --))))) + 0u, 0u | ((_GLF_IDENTITY((_GLF_struct_replacement_28.subgroup_local_id % 2) - 0u, (true ? (_GLF_struct_replacement_28.subgroup_local_id % _GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, (2) | 0), 2, 2))) - _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) >> 0u))) : _GLF_FUZZED((workgroup_size --))))) + 0u))))))))), (_GLF_struct_replacement_28.subgroup_local_id % 2) - 0u))))) ^ 0u) == 0)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))))
      barrier();
     barrier();
    }
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (false)))), ((! (_GLF_IDENTITY(false, true && (false))))) || false)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), _GLF_IDENTITY(bool(bool(! (bool(false)))), (bool(bool(! (bool(false))))) || false))))), ! (! (! (bool(false)))))))), _GLF_IDENTITY(bool(bool(bool(bool(false)))), ! (! (bool(bool(bool(bool(false)))))))))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y) * 1.0)))), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, true, true))))), (bool(bool(! (bool(false))))) || false))))), ! (! (! (bool(false)))))))), _GLF_IDENTITY(bool(bool(bool(bool(false)))), ! (! (bool(bool(bool(bool(false))))))))))) && true), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (bool(false)))), (bool(bool(! (bool(false))))) || false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (bool(false)))), (bool(bool(! (bool(false))))) || false), true && (_GLF_IDENTITY(bool(bool(! (bool(false)))), (bool(bool(! (bool(false))))) || false))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (bool(false)))), (bool(bool(! (bool(false))))) || false), true && (_GLF_IDENTITY(bool(bool(! (bool(false)))), (bool(bool(! (bool(false))))) || false))), true, false), true))))))))), ! (! (! (bool(false)))))))), _GLF_IDENTITY(bool(bool(bool(bool(false)))), ! (! (bool(bool(bool(bool(false)))))))))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), _GLF_IDENTITY(bool(bool(! (bool(false)))), _GLF_IDENTITY((bool(bool(! (bool(false))))), false || ((bool(bool(! (bool(false))))))) || false))))), ! (! (! (bool(false)))))))), _GLF_IDENTITY(bool(bool(bool(bool(false)))), ! (! (_GLF_IDENTITY(bool(bool(bool(bool(false)))), (bool(bool(bool(bool(false))))) || false)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-25369) : 2))), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))
      barrier();
     barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! ((false)))))))))))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(~ (~ (next_virtual_gid)), clamp(_GLF_IDENTITY(~ _GLF_IDENTITY((~ (next_virtual_gid)), min((~ (next_virtual_gid)), (~ (next_virtual_gid)))), clamp(~ (~ (next_virtual_gid)), ~ (~ (next_virtual_gid)), _GLF_IDENTITY(~ (~ (next_virtual_gid)), ~ (~ (~ (~ (next_virtual_gid))))))), ~ (~ (next_virtual_gid)), ~ (~ (next_virtual_gid))))), (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(~ (~ (next_virtual_gid)), clamp(_GLF_IDENTITY(~ _GLF_IDENTITY((~ (next_virtual_gid)), min((~ (next_virtual_gid)), (~ (next_virtual_gid)))), clamp(~ (~ (next_virtual_gid)), ~ (~ (next_virtual_gid)), _GLF_IDENTITY(~ (~ (next_virtual_gid)), ~ (~ (~ (~ (next_virtual_gid))))))), ~ (~ (next_virtual_gid)), ~ (~ (next_virtual_gid))))), uint(uvec2(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(~ (~ (next_virtual_gid)), clamp(_GLF_IDENTITY(~ _GLF_IDENTITY((~ (next_virtual_gid)), min((~ (next_virtual_gid)), (~ (next_virtual_gid)))), clamp(~ (~ (next_virtual_gid)), ~ (~ (next_virtual_gid)), _GLF_IDENTITY(~ (~ (next_virtual_gid)), ~ (~ (~ (~ (next_virtual_gid))))))), ~ (~ (next_virtual_gid)), ~ (~ (next_virtual_gid))))), 1u)))) / (1u | 0u))], uint(2), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
