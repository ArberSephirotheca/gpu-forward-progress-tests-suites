#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), false || (bool(bvec3(false, false, false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(vec2(-5.3, -0.4).x)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(true))))), (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, 0.0, 1.0))), injectionSwitch.x))) / exp(0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, 0.0, 1.0))), injectionSwitch.x))), 0.0 + ((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, 0.0, 1.0))), injectionSwitch.x))))) / exp(0.0))) - _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), vec3(vec4(vec3(1.0, 0.0, 0.0), 1.0))), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)))) > injectionSwitch.y))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), ! (_GLF_IDENTITY(! (bool(bvec3(false, _GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false)))), true))), false || (! (bool(bvec3(false, false, true))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, 0u | _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, min(_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)))), _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED((-2.0 + -18.73))), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true)))) | (0u))) ^ 0u)))).x))), ((_GLF_IDENTITY(gl_NumWorkGroups.x, min(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2]))) >> uvec3(0u, 0u, 0u)).x, gl_NumWorkGroups.x)))) >> 0u));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ((_GLF_IDENTITY(false, false || (false)))) || false))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (false)))))) || false, bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))) || false, ! (! ((_GLF_IDENTITY(false, false || (false))) || false))))))), (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0))) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
  return;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u)), (_GLF_IDENTITY(gl_WorkGroupSize.x, 0u ^ (gl_WorkGroupSize.x))) + 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), false), bvec2(bvec2(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), false)))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)))))))), bool(bvec2(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 1.0, 0.0, sqrt(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, float(mat3x4(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, tan(0.0), 0.0))), 1.0, 0.0, 1.0, 1.0)), max(vec2(mat4(injectionSwitch, 1.0, 0.0, sqrt(0.0), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, float(float(0.0))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), vec2(mat4(injectionSwitch, 1.0, 0.0, sqrt(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))))).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)))))))), false)))))))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, max(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id)), 0u))), workgroup_id)), min(workgroup_size * _GLF_IDENTITY(workgroup_id, max(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id)), ~ (~ (_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id))))), 0u))), workgroup_id)), workgroup_size * _GLF_IDENTITY(workgroup_id, max(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id)), 0u))), workgroup_id))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true)))) && true))) ? _GLF_FUZZED(workgroup_id) : workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size)) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))))) % subgroup_size, min((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size, (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size))) ^ 0u), _GLF_IDENTITY(uint(uvec3((subgroup_local_id + 1) % subgroup_size, 0u, 1u)), (uint(uvec3((subgroup_local_id + 1) % subgroup_size, 0u, 1u))) | (uint(uvec3((subgroup_local_id + 1) % subgroup_size, 0u, 1u))))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size, min((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size, (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size))) ^ 0u), _GLF_IDENTITY(uint(uvec3((subgroup_local_id + 1) % subgroup_size, 0u, 1u)), (uint(uvec3((subgroup_local_id + 1) % subgroup_size, 0u, 1u))) | (uint(uvec3((subgroup_local_id + 1) % subgroup_size, 0u, 1u)))))), clamp(uint(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size, min((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size, (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size))) ^ 0u), _GLF_IDENTITY(uint(uvec3((subgroup_local_id + 1) % subgroup_size, 0u, 1u)), (uint(uvec3((_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size, 0u, 1u))) | (uint(uvec3((subgroup_local_id + 1) % subgroup_size, 0u, 1u)))))), uint(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size, min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))), ((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)))) >> 0u) % subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u), min(subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size))) ^ 0u), _GLF_IDENTITY(uint(uvec3((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * ((1u & 1u) & 1u)) + 1) % subgroup_size, 0u, 1u)), (uint(uvec3((subgroup_local_id + 1) % subgroup_size, 0u, 1u))) | (uint(_GLF_IDENTITY(uvec3((subgroup_local_id + 1) % subgroup_size, 0u, 1u), (uvec3((subgroup_local_id + 1) % subgroup_size, 0u, 1u)) >> uvec3(0u, 0u, 0u))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(atomicMin(num_workgroup, subgroup_local_id)) : subgroup_local_id + 1)), min(subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size, min((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size, (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size))) ^ 0u), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ~ (~ ((subgroup_local_id + 1) % subgroup_size))))), 0u, 1u)), _GLF_IDENTITY((uint(uvec3((subgroup_local_id + 1) % subgroup_size, 0u, 1u))), _GLF_IDENTITY(0u, (0u) - 0u) ^ ((uint(uvec3((subgroup_local_id + 1) % subgroup_size, 0u, 1u))))) | (uint(uvec3((subgroup_local_id + 1) % subgroup_size, 0u, 1u)))))), ~ (~ (uint(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size, min((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size, (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size))), ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size, min((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size, (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size)))) >> 0u) ^ 0u), _GLF_IDENTITY(uint(uvec3((subgroup_local_id + 1) % subgroup_size, 0u, 1u)), (uint(uvec3((subgroup_local_id + 1) % subgroup_size, 0u, 1u))) | (uint(uvec3((subgroup_local_id + 1) % subgroup_size, 0u, 1u)))))))))))))), (false ? _GLF_FUZZED(subgroup_size) : workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)))) + 1, subgroup_local_id + 1))) % subgroup_size, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(min(subgroup_local_id + 1, subgroup_local_id + 1), uint(uint(min(subgroup_local_id + 1, subgroup_local_id + 1)))))) % subgroup_size, min((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))))) % subgroup_size))) ^ 0u), _GLF_IDENTITY(uint(uvec3((subgroup_local_id + 1) % subgroup_size, 0u, 1u)), (uint(uvec3((subgroup_local_id + 1) % subgroup_size, 0u, _GLF_IDENTITY(1u, 1u * (1u))))) | (uint(uvec3((subgroup_local_id + 1) % subgroup_size, 0u, 1u))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, (false) && true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true)))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-990.066) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(refract(-101.840, -6.1, 984.036)) : injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, ! (! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, true && ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))))))) || false)))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)) && true), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((injectionSwitch * mat2(-437.464, -31.60, -4.1, -752.572))))))).y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false, true), false)))))) && true)))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))), true))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-233.982)), bool(false))))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), max(max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y, ! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)), ((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(65.93)), bool(false))) : _GLF_FUZZED(142.792)))))) && true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), (uint(2)) | 0u), _GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (_GLF_IDENTITY(true ? 4 : _GLF_FUZZED(98010), (true ? 4 : _GLF_FUZZED(98010)) >> 0))) : _GLF_FUZZED((~ _GLF_IDENTITY(67427, min(_GLF_IDENTITY(67427, clamp(67427, _GLF_IDENTITY(67427, (67427) + 0), 67427)), 67427)))))), _GLF_IDENTITY(64, _GLF_IDENTITY((false ? _GLF_FUZZED(-67096) : 64), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-67096), (_GLF_FUZZED(-67096)) | (_GLF_FUZZED(-67096))), int(int(_GLF_IDENTITY(_GLF_FUZZED(-67096), (_GLF_FUZZED(-67096)) | 0)))) : 64, (false ? _GLF_FUZZED(78387) : false ? _GLF_FUZZED(-67096) : _GLF_IDENTITY(64, (64) | (64)))))), min(~ (_GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(-67096) : 64, (false ? _GLF_FUZZED(_GLF_IDENTITY(78387, (78387) | 0)) : false ? _GLF_FUZZED(-67096) : 64))), ((_GLF_IDENTITY(false ? _GLF_FUZZED(-67096) : 64, (false ? _GLF_FUZZED(_GLF_IDENTITY(78387, (78387) | 0)) : false ? _GLF_FUZZED(-67096) : 64)))) * 1)), _GLF_IDENTITY(~ ((_GLF_IDENTITY(false ? _GLF_FUZZED(-67096) : 64, (false ? _GLF_FUZZED(78387) : false ? _GLF_IDENTITY(_GLF_FUZZED(-67096), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(_GLF_FUZZED(-67096), int(_GLF_IDENTITY(ivec2(_GLF_FUZZED(-67096), 0), (ivec2(_GLF_FUZZED(-67096), 0)) | (ivec2(_GLF_FUZZED(-67096), 0))))), (1 | int(_GLF_ONE(1.0, injectionSwitch.y))))), 1 * (int(ivec2(_GLF_IDENTITY(_GLF_FUZZED(-67096), int(_GLF_IDENTITY(ivec2(_GLF_FUZZED(-67096), 0), (ivec2(_GLF_FUZZED(-67096), 0)) | (ivec2(_GLF_FUZZED(-67096), 0))))), (1 | int(_GLF_ONE(1.0, injectionSwitch.y)))))))) : 64)))), ~ (~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-67096), min(_GLF_FUZZED(-67096), _GLF_FUZZED(-67096))), clamp(_GLF_FUZZED(-67096), _GLF_FUZZED(-67096), _GLF_FUZZED(-67096))) : _GLF_IDENTITY(64, 0 | (64)), (false ? _GLF_FUZZED(78387) : false ? _GLF_FUZZED(-67096) : 64)))))))))), (~ (_GLF_IDENTITY(~ _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)))))) ? _GLF_FUZZED(-67096) : 64, (false ? _GLF_FUZZED(78387) : false ? _GLF_FUZZED(-67096) : 64)))), 0 ^ (((_GLF_IDENTITY(false ? _GLF_FUZZED(-67096) : 64, (false ? _GLF_FUZZED(_GLF_IDENTITY(78387, (78387) >> (0 << _GLF_IDENTITY(int(4), int(4))))) : false ? _GLF_FUZZED(-67096) : 64)))))), ~ (~ (~ _GLF_IDENTITY(((_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(-67096), (_GLF_IDENTITY(_GLF_FUZZED(-67096), (_GLF_FUZZED(-67096)) * 1)) ^ 0) : 64, _GLF_IDENTITY((false ? _GLF_FUZZED(78387) : false ? _GLF_FUZZED(_GLF_IDENTITY(-67096, (0 << _GLF_IDENTITY(int(2), int(2))) ^ (-67096))) : 64), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(78387) : false ? _GLF_FUZZED(_GLF_IDENTITY(-67096, (0 << _GLF_IDENTITY(int(2), int(2))) ^ (-67096))) : 64, (false ? _GLF_FUZZED(78387) : false ? _GLF_FUZZED(_GLF_IDENTITY(-67096, (0 << _GLF_IDENTITY(int(2), int(2))) ^ (-67096))) : 64) | (false ? _GLF_FUZZED(78387) : false ? _GLF_FUZZED(_GLF_IDENTITY(-67096, (0 << _GLF_IDENTITY(int(2), int(2))) ^ (-67096))) : 64))), 0 ^ ((_GLF_IDENTITY(false ? _GLF_FUZZED(78387) : false ? _GLF_FUZZED(_GLF_IDENTITY(-67096, (0 << _GLF_IDENTITY(int(2), int(2))) ^ (-67096))) : 64, (false ? _GLF_FUZZED(78387) : false ? _GLF_FUZZED(_GLF_IDENTITY(-67096, (0 << _GLF_IDENTITY(int(2), int(2))) ^ (-67096))) : 64) | (false ? _GLF_FUZZED(78387) : false ? _GLF_FUZZED(_GLF_IDENTITY(-67096, (0 << _GLF_IDENTITY(int(2), int(2))) ^ (-67096))) : 64))))))))))), 0 ^ ((_GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(-67096) : 64, (false ? _GLF_FUZZED(_GLF_IDENTITY(78387, (78387) >> (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, ~ (~ (4)))), int(4)), min(0 << _GLF_IDENTITY(int(4), int(4)), 0 << _GLF_IDENTITY(int(4), int(4))))))) : false ? _GLF_FUZZED(-67096) : 64))), max(_GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(-67096) : 64, (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(78387, (78387) >> (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), min(0 << _GLF_IDENTITY(int(4), int(4)), 0 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-2788) : 4))), int(4))))))) : false ? _GLF_FUZZED(-67096) : 64, _GLF_IDENTITY(int(ivec3(false ? _GLF_FUZZED(_GLF_IDENTITY(78387, (78387) >> (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec3(int(4), 1, int(_GLF_ONE(1.0, injectionSwitch.y)))))), min(0 << _GLF_IDENTITY(int(4), int(4)), 0 << _GLF_IDENTITY(int(4), int(4))))))) : false ? _GLF_FUZZED(-67096) : 64, 1, 0)), clamp(int(ivec3(false ? _GLF_FUZZED(_GLF_IDENTITY(78387, (78387) >> (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), min(0 << _GLF_IDENTITY(int(4), int(4)), 0 << _GLF_IDENTITY(int(4), int(4))))))) : false ? _GLF_FUZZED(-67096) : 64, 1, 0)), int(ivec3(false ? _GLF_FUZZED(_GLF_IDENTITY(78387, (78387) >> (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), min(0 << _GLF_IDENTITY(int(4), int(4)), 0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(64312) : int(4)))) | (int(4))))))))) : false ? _GLF_FUZZED(-67096) : 64, 1, 0)), _GLF_IDENTITY(int(ivec3(false ? _GLF_FUZZED(_GLF_IDENTITY(78387, (78387) >> (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), min(0 << _GLF_IDENTITY(int(4), int(4)), 0 << _GLF_IDENTITY(int(4), int(4))))))) : false ? _GLF_FUZZED(-67096) : 64, 1, 0)), clamp(int(ivec3(false ? _GLF_FUZZED(_GLF_IDENTITY(78387, (78387) >> (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), min(0 << _GLF_IDENTITY(int(4), int(4)), 0 << _GLF_IDENTITY(int(4), int(4))))))) : false ? _GLF_FUZZED(-67096) : 64, 1, 0)), int(ivec3(false ? _GLF_FUZZED(_GLF_IDENTITY(78387, (78387) >> (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(min(0 << _GLF_IDENTITY(int(4), int(4)), 0 << _GLF_IDENTITY(int(4), int(4))), (min(0 << _GLF_IDENTITY(int(4), int(4)), 0 << _GLF_IDENTITY(int(4), int(4)))) | int(_GLF_ZERO(0.0, injectionSwitch.x))))))) : _GLF_IDENTITY(false ? _GLF_FUZZED(-67096) : 64, (false ? _GLF_FUZZED(findLSB(subgroup_local_id)) : false ? _GLF_FUZZED(-67096) : 64)), 1, 0)), int(ivec3(false ? _GLF_FUZZED(_GLF_IDENTITY(78387, (78387) >> (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), min(0 << _GLF_IDENTITY(int(4), int(4)), 0 << _GLF_IDENTITY(int(4), int(4))))))) : false ? _GLF_FUZZED(-67096) : 64, 1, 0)))))))))), ((_GLF_IDENTITY(false ? _GLF_FUZZED(-67096) : 64, (false ? _GLF_FUZZED(_GLF_IDENTITY(78387, (78387) >> (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), min(0 << _GLF_IDENTITY(int(4), int(4)), 0 << _GLF_IDENTITY(int(4), int(4))))))) : _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec4(bool(bvec2(false, true)), true, false, false))))) && true) ? _GLF_FUZZED(-67096) : 64)))) - 0), (_GLF_IDENTITY(false ? _GLF_FUZZED(-67096) : 64, (false ? _GLF_FUZZED(_GLF_IDENTITY(78387, _GLF_IDENTITY((78387), (_GLF_IDENTITY((78387), clamp((78387), (78387), (78387)))) - 0) >> (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0) << _GLF_IDENTITY(int(4), int(4)), min(0 << _GLF_IDENTITY(int(4), int(4)), 0 << _GLF_IDENTITY(int(4), int(4))))))) : false ? _GLF_FUZZED(-67096) : _GLF_IDENTITY(64, (64) ^ (0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (true ? int(1) : _GLF_FUZZED(27739))))))))))))))))))) >> 0))), 4);
   subgroupAll(false);
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && true)))))
    return;
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, 1u * (next_virtual_gid))) | 0u)], uint(2), _GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(83166))), 0 | ((4))) ^ (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(5), int(5)), (0 << _GLF_IDENTITY(int(5), int(5))) << 0)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((4), clamp(_GLF_IDENTITY((4), 0 | ((4))), _GLF_IDENTITY((4), int(ivec4((4), 1, 0, 1))), _GLF_IDENTITY((4), 0 + ((4))))) ^ (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(5), int(5)), (0 << _GLF_IDENTITY(int(5), int(5))) << 0)), _GLF_IDENTITY(((4) ^ (_GLF_IDENTITY(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY((_GLF_IDENTITY(0, (0) | (0)) << _GLF_IDENTITY(int(5), int(5))) << 0, int(int(_GLF_IDENTITY((_GLF_IDENTITY(0, (0) | (0)) << _GLF_IDENTITY(int(5), int(5))) << 0, ((_GLF_IDENTITY(0, (0) | (0)) << _GLF_IDENTITY(int(5), int(5))) << 0) | ((_GLF_IDENTITY(0, (0) | (0)) << _GLF_IDENTITY(int(5), int(5))) << 0)))))), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-77241) : 0))) | (_GLF_IDENTITY(0, (0) - 0))) << _GLF_IDENTITY(int(5), int(5))) << 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, ~ (~ (0))), 0)) << _GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(0, (0) | _GLF_IDENTITY((0), ~ (_GLF_IDENTITY(~ ((0)), max(~ ((0)), ~ ((0))))))) << _GLF_IDENTITY(int(5), int(5))) << 0), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(0, (0) | (0)) << _GLF_IDENTITY(int(5), int(5))) << 0), 1 * (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(0, (0) | (0)) << _GLF_IDENTITY(int(5), int(5))) << 0)))) - 0, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(0, (0) | (0)) << _GLF_IDENTITY(int(5), int(5))) << 0), 1 * (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(0, (0) | (0)) << _GLF_IDENTITY(int(5), int(5))) << 0)))) - 0, min((_GLF_IDENTITY(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(0, (0) | (0)) << _GLF_IDENTITY(int(5), int(5))) << 0), 1 * (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(0, (0) | (0)) << _GLF_IDENTITY(int(5), int(5))) << 0)))) - 0, (_GLF_IDENTITY(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(0, (0) | (0)) << _GLF_IDENTITY(int(5), int(5))) << 0), 1 * (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(0, (0) | (0)) << _GLF_IDENTITY(int(5), int(5))) << 0)))) - 0))) ^ 0)))))), (((4) ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(5), int(5)), (0 << _GLF_IDENTITY(int(5), int(5))) - 0)) - 0), 0 << _GLF_IDENTITY(int(5), int(5)))), (_GLF_IDENTITY(0, (0) | (0)) << _GLF_IDENTITY(int(5), int(5))) << 0), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(0, (0) | (0)) << _GLF_IDENTITY(int(5), int(5))) << 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(0, (0) | (0)) << _GLF_IDENTITY(int(5), int(5))) << 0), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(0, (0) | (0)) << _GLF_IDENTITY(int(5), int(5))) << 0), 1 * (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(0, (0) | (0)) << _GLF_IDENTITY(int(5), int(5))) << 0)))) - 0, 0 ^ ((_GLF_IDENTITY(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(0, (0) | (0)) << _GLF_IDENTITY(int(5), int(5))) << 0), 1 * (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(0, (0) | (0)) << _GLF_IDENTITY(int(5), int(5))) << 0)))) - 0)))))))) / 1) | ((_GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, ~ (~ (4)))))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0) << _GLF_IDENTITY(int(5), int(5)), (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) | 0)) / 1)) << 0)))), (_GLF_IDENTITY((_GLF_IDENTITY(4, max(4, 4))) ^ (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(5), int(5)), (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, max(5, 5))), _GLF_IDENTITY(int(5), _GLF_IDENTITY((false ? _GLF_FUZZED(-34611) : int(5)), ((false ? _GLF_FUZZED(-34611) : int(5))) - 0)))) << 0)), ((4) ^ (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(5), int(5)), (0 << _GLF_IDENTITY(int(5), int(5))) << 0))) | ((4) ^ (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(5), int(5)), (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), max(_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), int(ivec2(_GLF_IDENTITY(int(5), int(5)), 0))), _GLF_IDENTITY(int(5), int(5))))) << 0))))) / (1 ^ _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 1 * (0)), _GLF_IDENTITY(0, ~ (~ (0))))), 0)))) : _GLF_FUZZED(-83723)))), 64, 4);
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, 1.0)), max(vec2(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, 1.0)), vec2(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, 1.0))))).x > injectionSwitch.y, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x3(1.0, 1.0, 1.0, 0.0, log(1.0), 0.0), (mat2x3(1.0, 1.0, 1.0, 0.0, log(1.0), 0.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 1.0)), max(vec2(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, 1.0)), vec2(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, 1.0))))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x3(1.0, 1.0, 1.0, 0.0, log(1.0), 0.0), (mat2x3(1.0, 1.0, 1.0, 0.0, log(1.0), 0.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 1.0)), max(vec2(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, 1.0)), vec2(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, 1.0))))).x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x3(1.0, 1.0, 1.0, 0.0, log(1.0), 0.0), (mat2x3(1.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED((-5590.0252 - -7.1))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 0.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 1.0)), max(vec2(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, 1.0)), vec2(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, 1.0))))).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, abs(0.0), tan(0.0), _GLF_ZERO(0.0, injectionSwitch.x), abs(1.0), 1.0, 1.0, 0.0, 0.0, exp(0.0))), clamp(vec2(mat4x3(injectionSwitch, 0.0, abs(0.0), tan(0.0), _GLF_ZERO(0.0, injectionSwitch.x), abs(1.0), 1.0, 1.0, 0.0, 0.0, exp(0.0))), vec2(mat4x3(injectionSwitch, 0.0, abs(0.0), tan(0.0), _GLF_ZERO(0.0, injectionSwitch.x), abs(1.0), 1.0, 1.0, 0.0, 0.0, exp(0.0))), _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, abs(0.0), tan(0.0), _GLF_ZERO(0.0, injectionSwitch.x), abs(1.0), 1.0, 1.0, 0.0, 0.0, exp(0.0))), mat2(1.0) * (vec2(mat4x3(injectionSwitch, 0.0, abs(0.0), tan(0.0), _GLF_ZERO(0.0, injectionSwitch.x), abs(1.0), 1.0, 1.0, 0.0, 0.0, exp(0.0)))))))).y)))))), true && (! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x3(1.0, 1.0, 1.0, 0.0, log(1.0), 0.0), (mat2x3(1.0, 1.0, 1.0, 0.0, log(1.0), 0.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 1.0)), max(vec2(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, 1.0)), vec2(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, 1.0))))).x > injectionSwitch.y)))), _GLF_IDENTITY(((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, 1.0)), max(vec2(mat2x3(injectionSwitch, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(7.0)), float(0.0), bool(true))), 1.0, 1.0, 1.0)), vec2(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, 1.0))))).x, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, 1.0)), max(vec2(mat2x3(injectionSwitch, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(7.0)), float(0.0), bool(true))), 1.0, 1.0, 1.0)), vec2(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, 1.0))))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, 1.0)), max(vec2(mat2x3(injectionSwitch, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(7.0)), float(0.0), bool(true))), 1.0, 1.0, 1.0)), vec2(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, 1.0))))).x)) > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, 1.0)), max(vec2(mat2x3(injectionSwitch, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(7.0)), float(0.0), bool(true))), 1.0, 1.0, 1.0)), vec2(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, 1.0))))).x, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, 1.0)), max(vec2(mat2x3(injectionSwitch, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(7.0)), float(0.0), bool(true))), 1.0, 1.0, 1.0)), vec2(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, 1.0))))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, 1.0)), max(vec2(mat2x3(injectionSwitch, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(7.0)), float(0.0), bool(true))), 1.0, 1.0, 1.0)), vec2(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, 1.0))))).x)) > injectionSwitch.y)))), ! (! (bool(((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, 1.0)), max(vec2(mat2x3(injectionSwitch, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(7.0)), float(0.0), bool(true))), 1.0, 1.0, 1.0)), vec2(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, 1.0))))).x, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, 1.0)), max(vec2(mat2x3(injectionSwitch, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(7.0)), float(0.0), bool(true))), 1.0, 1.0, 1.0)), vec2(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, 1.0))))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, 1.0)), max(vec2(mat2x3(injectionSwitch, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(7.0)), float(0.0), bool(true))), 1.0, 1.0, 1.0)), vec2(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, 1.0))))).x)) > injectionSwitch.y)))))))), true && (bool(_GLF_IDENTITY(bool(((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, 1.0)), max(vec2(mat2x3(injectionSwitch, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(7.0)), float(0.0), bool(true))), 1.0, 1.0, 1.0)), vec2(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, 1.0))))).x, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, 1.0)), max(vec2(mat2x3(injectionSwitch, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(7.0)), float(0.0), bool(true))), 1.0, 1.0, 1.0)), vec2(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, 1.0))))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, 1.0)), max(vec2(mat2x3(injectionSwitch, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(7.0)), float(0.0), bool(true))), 1.0, 1.0, 1.0)), vec2(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, 1.0))))).x)) > injectionSwitch.y)))), ! (! (bool(((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, 1.0)), max(vec2(mat2x3(injectionSwitch, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(7.0)), float(0.0), bool(true))), 1.0, 1.0, 1.0)), vec2(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, 1.0))))).x, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, 1.0)), max(vec2(mat2x3(injectionSwitch, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(7.0)), float(0.0), bool(true))), 1.0, 1.0, 1.0)), vec2(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, 1.0))))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, 1.0)), max(vec2(mat2x3(injectionSwitch, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(7.0)), float(0.0), bool(true))), 1.0, 1.0, 1.0)), vec2(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, 1.0))))).x)) > injectionSwitch.y))))))))))) && true))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), ! (! (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))))))
    return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
