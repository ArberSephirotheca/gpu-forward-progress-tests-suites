#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_8 {
 float _f0;
 mat4x3 _f1;
 mat2 _f2;
 float _f3;
} ;

struct _GLF_struct_9 {
 ivec3 _f0;
 mat4x3 _f1;
 bvec3 _f2;
 bool _f3;
 _GLF_struct_8 _f4;
} ;

struct _GLF_struct_6 {
 mat3x2 _f0;
 mat3x4 _f1;
 uint subgroup_id;
 mat2x4 _f2;
 mat2 _f3;
 mat4x3 _f4;
 uvec3 _f5;
} ;

struct _GLF_struct_7 {
 mat3 _f0;
 _GLF_struct_6 _f1;
 mat4 _f2;
} ;

struct _GLF_struct_4 {
 bvec3 _f0;
 mat3x4 _f1;
 mat2 _f2;
 mat3 _f3;
 ivec3 _f4;
 uvec2 _f5;
} ;

struct _GLF_struct_3 {
 ivec3 _f0;
 uvec2 _f1;
 vec4 _f2;
 bvec4 _f3;
} ;

struct _GLF_struct_5 {
 _GLF_struct_3 _f0;
 _GLF_struct_4 _f1;
 uint _f2;
} ;

struct _GLF_struct_10 {
 mat3x2 _f0;
 _GLF_struct_5 _f1;
 _GLF_struct_7 _f2;
 bvec3 _f3;
 mat2x4 _f4;
 _GLF_struct_9 _f5;
} ;

struct _GLF_struct_0 {
 mat2x4 _f0;
 mat4x3 _f1;
 mat3 _f2;
} ;

struct _GLF_struct_1 {
 uint workgroup_id;
 mat4x3 _f0;
 bvec4 _f1;
 _GLF_struct_0 _f2;
} ;

struct _GLF_struct_2 {
 _GLF_struct_1 _f0;
 mat4x2 _f1;
 ivec3 _f2;
 int _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 _GLF_struct_10 _GLF_struct_replacement_10 = _GLF_struct_10(mat3x2(1.0), _GLF_struct_5(_GLF_struct_3(ivec3(1), uvec2(1u), vec4(1.0), bvec4(true)), _GLF_struct_4(bvec3(true), mat3x4(1.0), mat2(1.0), _GLF_IDENTITY(mat3(1.0), (mat3(1.0)) * mat3(1.0)), ivec3(1), uvec2(1u)), _GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY(min(1u, 1u), _GLF_IDENTITY((min(1u, _GLF_IDENTITY(1u, (1u) << 0u))), ((min(1u, _GLF_IDENTITY(1u, (1u) << 0u)))) | 0u) << 0u), min(_GLF_IDENTITY(min(1u, 1u), _GLF_IDENTITY((min(1u, _GLF_IDENTITY(1u, (1u) << 0u))), ((min(1u, _GLF_IDENTITY(1u, (1u) << 0u)))) | 0u) << 0u), _GLF_IDENTITY(min(1u, 1u), _GLF_IDENTITY((min(1u, _GLF_IDENTITY(1u, (1u) << 0u))), ((min(1u, _GLF_IDENTITY(1u, (1u) << 0u)))) | 0u) << 0u))))), _GLF_struct_7(mat3(1.0), _GLF_struct_6(mat3x2(1.0), mat3x4(1.0), gl_SubgroupID, mat2x4(1.0), mat2(1.0), mat4x3(1.0), uvec3(1u)), mat4(1.0)), bvec3(true), mat2x4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(-389.902, mix(float(_GLF_FUZZED(float(true))), float(-389.902), bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))), injectionSwitch)).y)))))) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-3.0))), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-3.0))), 0.0, 1.0)), mix(float(_GLF_IDENTITY(float(vec3(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-3.0))), 0.0, 1.0)), clamp(float(vec3(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-3.0))), 0.0, 1.0)), float(vec3(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-3.0))), 0.0, 1.0)), float(vec3(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-3.0))), 0.0, 1.0))))), float(_GLF_FUZZED(-6.8)), bool(false))))))), _GLF_struct_9(ivec3(1), mat4x3(1.0), bvec3(true), true, _GLF_struct_8(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3.9)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY((_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3.9)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) - 0.0, (_GLF_IDENTITY((_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3.9)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) - 0.0, min((_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3.9)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) - 0.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3.9)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) - 0.0))) * 1.0)), mat4x3(1.0), mat2(1.0), 1.0)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(47.42))) > injectionSwitch.y))))))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), bool(bvec3(bool(bvec2(_GLF_DEAD(false), true)), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true, false)))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true, false)))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true, false)))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true, false))))))), false)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true, false)))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true, false))))))), false)), true, false, false)))))) || false)))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - tan(0.0))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false)), false || (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false)))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), ! (! (! (! (injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(0.0, abs(1.0), 1.0, 0.0, sqrt(1.0), 0.0, 0.0, 1.0), mat4x2(mat4x3(mat4x2(0.0, abs(1.0), 1.0, 0.0, sqrt(1.0), 0.0, 0.0, 1.0))))), max(float(_GLF_IDENTITY(mat4x2(0.0, abs(1.0), 1.0, 0.0, sqrt(1.0), 0.0, 0.0, 1.0), mat4x2(mat4x3(mat4x2(0.0, abs(1.0), 1.0, 0.0, sqrt(1.0), 0.0, 0.0, 1.0))))), float(_GLF_IDENTITY(mat4x2(0.0, abs(1.0), 1.0, 0.0, _GLF_IDENTITY(sqrt(1.0), float(mat4(_GLF_IDENTITY(sqrt(1.0), mix(float(_GLF_FUZZED((- 835.836))), float(sqrt(1.0)), bool(true))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, exp(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))), 0.0, 0.0, 1.0), mat4x2(mat4x3(mat4x2(0.0, abs(1.0), 1.0, 0.0, sqrt(1.0), 0.0, 0.0, 1.0))))))))), 1.0, 0.0, 1.0), mix(vec4((vec4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 1.0, 0.0, 1.0))[0], _GLF_FUZZED(-29.26), (vec4(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x) - 0.0), 1.0, 0.0, 1.0))[2], _GLF_FUZZED(-2697.8080)), vec4(_GLF_FUZZED(-5.4), (vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), 1.0, cos(0.0), round(length(normalize(vec2(1.0, 1.0))))))), 1.0, 0.0, 1.0))[1], _GLF_FUZZED(1596.0523), (vec4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 1.0, 0.0, 1.0))[_GLF_IDENTITY(3, min(3, 3))]), bvec4(false, true, false, true)))), (false ? _GLF_FUZZED(-6.6) : float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 1.0, 0.0, 1.0), mix(vec4((vec4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 1.0, 0.0, 1.0))[0], _GLF_FUZZED(-29.26), _GLF_IDENTITY((vec4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 1.0, 0.0, 1.0)), ((vec4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 1.0, 0.0, 1.0))) / vec4(1.0, 1.0, 1.0, 1.0))[2], _GLF_FUZZED(-2697.8080)), vec4(_GLF_FUZZED(-5.4), (vec4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 1.0, 0.0, 1.0))[1], _GLF_FUZZED(1596.0523), (vec4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(73.87))), 0.0, 1.0))[3]), bvec4(false, true, false, true))))))) > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(4.8, 713.918))))) / vec2(1.0, 1.0)).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))), false, true))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))))) || false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat2x3(-958.089, -5.2, 2876.2675, 72.39, 17.86, -957.462)) : mat2x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, 0.0, 1.0, 1.0))))).x, injectionSwitch.x)) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-62.06), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-69.73)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-0.9, min(-0.9, -0.9)), max(_GLF_IDENTITY(-0.9, min(-0.9, -0.9)), _GLF_IDENTITY(-0.9, min(-0.9, -0.9)))))), float(1.0), bool(true))), 1.0)), 1.0))) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-0.9)), float(1.0), _GLF_IDENTITY(bool(true), ! (! (bool(true)))))), 1.0)), mix(float(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-0.9)), float(1.0), bool(true))), 1.0))), float(_GLF_FUZZED((- 34.47))), bool(false))), 1.0))) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), false))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY((injectionSwitch.x), clamp((injectionSwitch.x), _GLF_IDENTITY((injectionSwitch.x), max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-840.946, -6468.4300)) : injectionSwitch)).x), (false ? _GLF_FUZZED(-1037.2220) : (injectionSwitch.x))), (injectionSwitch.x))), (injectionSwitch.x))) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y))))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))))))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, cos(0.0), 1.0, 1.0, 1.0)))))))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false, true, false))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (injectionSwitch)).y, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (injectionSwitch)).y, (true ? _GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (injectionSwitch)).y : _GLF_FUZZED(-1.3)))))))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0 * (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) / 1.0)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), bool(bvec3(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false || (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false || (false)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) && true))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, false)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), ~ (~ (~ (gl_WorkGroupSize.x))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(_GLF_struct_1(gl_WorkGroupID.x, mat4x3(1.0), bvec4(true), _GLF_struct_0(mat2x4(1.0), mat4x3(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 0.0)))), mat3(1.0))), mat4x2(1.0), ivec3(_GLF_IDENTITY(1, ~ (~ (1)))), 1);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)), workgroup_size)) * _GLF_struct_replacement_2._f0.workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(728.254), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((97.38 * 1113.4460))), bvec2(true, false))).x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (bool(_GLF_DEAD(false)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + _GLF_struct_replacement_10._f2._f1.subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, true))) || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(mix(float(_GLF_FUZZED(float(-5691))), float(injectionSwitch.y), bool(true)), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, log(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), 0.0, 0.0, 0.0)), (vec2(mat3x2(injectionSwitch, log(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), 0.0, 0.0, 0.0))) * mat2(1.0))).y, max(injectionSwitch.y, injectionSwitch.y)))) ? _GLF_IDENTITY(mix(_GLF_IDENTITY(float(_GLF_FUZZED(float(-5691))), (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), ! (! (! (true))))), (! (_GLF_IDENTITY(! (true), ! (! (! (true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), ! (! (! (true))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), ! (! (! (true))))), true && (! (_GLF_IDENTITY(! (true), ! (! (! (true))))))))))))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)))) ? _GLF_IDENTITY(float(_GLF_FUZZED(float(-5691))), (_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(float(-5691))), (false ? _GLF_FUZZED(max(9.4, 45.40)) : _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(float(-5691), min(float(-5691), float(-5691))))), float(mat2(float(_GLF_FUZZED(float(-5691))), 1.0, 0.0, 0.0))))), min(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(float(-5691)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(float(-5691)) : _GLF_FUZZED(determinant(mat2(-824.882, 7.3, -5.8, -1678.0737)))))), (false ? _GLF_FUZZED(max(9.4, 45.40)) : _GLF_IDENTITY(float(_GLF_FUZZED(float(-5691))), float(mat2(float(_GLF_FUZZED(float(-5691))), 1.0, 0.0, 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(float(-5691))), (false ? _GLF_IDENTITY(_GLF_FUZZED(max(9.4, 45.40)), 1.0 * (_GLF_FUZZED(max(9.4, 45.40)))) : _GLF_IDENTITY(float(_GLF_FUZZED(float(-5691))), float(mat2(float(_GLF_FUZZED(float(-5691))), 1.0, 0.0, 0.0))))), mix(float(_GLF_IDENTITY(float(_GLF_FUZZED(float(-5691))), (false ? _GLF_FUZZED(max(9.4, 45.40)) : _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(float(-5691))), mix(float(_GLF_FUZZED(-3.4)), float(float(_GLF_FUZZED(float(-5691)))), bool(true))), float(mat2(float(_GLF_FUZZED(float(-5691))), 1.0, 0.0, 0.0)))))), float(_GLF_FUZZED(-3.0)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) / 1.0) : _GLF_FUZZED((uvec3(190195u, 42424u, 159210u) , -716.736)))), float(injectionSwitch.y), bool(true)), float(_GLF_IDENTITY(float(mix(_GLF_IDENTITY(float(_GLF_FUZZED(float(-5691))), (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (true), ! (! (! (true))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), ! (! _GLF_IDENTITY((! _GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), ! (! ((true)))))))), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), ! (! ((true)))))))), ((! _GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), ! (! ((true))))))))) || false))))))), ! (! (! (_GLF_IDENTITY(! (true), ! (! (! (true))))))))))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)))) ? _GLF_IDENTITY(float(_GLF_FUZZED(float(-5691))), (_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(float(-5691))), (false ? _GLF_FUZZED(max(9.4, 45.40)) : _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(float(-5691), min(float(-5691), float(-5691))))), float(mat2(float(_GLF_FUZZED(float(-5691))), 1.0, 0.0, 0.0))))), min(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(float(-5691)), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))) ? _GLF_FUZZED(float(-5691)) : _GLF_FUZZED(determinant(mat2(-824.882, 7.3, -5.8, -1678.0737)))))), (false ? _GLF_FUZZED(max(9.4, 45.40)) : _GLF_IDENTITY(float(_GLF_FUZZED(float(-5691))), float(mat2(float(_GLF_FUZZED(float(-5691))), 1.0, 0.0, 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(float(-5691))), (false ? _GLF_IDENTITY(_GLF_FUZZED(max(9.4, 45.40)), 1.0 * (_GLF_FUZZED(max(9.4, 45.40)))) : _GLF_IDENTITY(float(_GLF_FUZZED(float(-5691))), float(mat2(float(_GLF_FUZZED(float(-5691))), 1.0, 0.0, 0.0))))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(float(-5691))), max(_GLF_IDENTITY(float(_GLF_FUZZED(float(-5691))), min(float(_GLF_FUZZED(float(-5691))), float(_GLF_FUZZED(float(-5691))))), float(_GLF_FUZZED(float(-5691))))), (false ? _GLF_FUZZED(max(9.4, 45.40)) : _GLF_IDENTITY(float(_GLF_FUZZED(float(-5691))), float(mat2(float(_GLF_FUZZED(float(-5691))), 1.0, 0.0, 0.0)))))), float(_GLF_FUZZED(-3.0)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) / 1.0) : _GLF_FUZZED((uvec3(190195u, 42424u, 159210u) , -716.736)))), float(injectionSwitch.y), bool(true))), float(mat2(float(mix(_GLF_IDENTITY(float(_GLF_FUZZED(float(-5691))), (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (true), ! (! (! (true))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), ! (! (! (true))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), (! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(! (true), ! (! (! (true))))), ! (! ((_GLF_IDENTITY(! (true), ! (! (! (true))))))))), true && ((! _GLF_IDENTITY((_GLF_IDENTITY(! (true), ! (! (! (true))))), ! (! ((_GLF_IDENTITY(! (true), ! (! (! (true)))))))))))) && true)) || false)))))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)))) ? _GLF_IDENTITY(float(_GLF_FUZZED(float(-5691))), (_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(float(-5691))), (false ? _GLF_FUZZED(_GLF_IDENTITY(max(9.4, 45.40), mix(float(max(9.4, 45.40)), float(_GLF_FUZZED(float(78497))), bool(false)))) : _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(float(-5691), min(float(-5691), float(-5691))))), float(mat2(float(_GLF_FUZZED(float(-5691))), 1.0, 0.0, 0.0))))), min(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(float(-5691)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(float(-5691)) : _GLF_FUZZED(determinant(mat2(-824.882, 7.3, -5.8, -1678.0737)))))), (false ? _GLF_FUZZED(max(9.4, 45.40)) : _GLF_IDENTITY(float(_GLF_FUZZED(float(-5691))), float(mat2(float(_GLF_FUZZED(float(-5691))), 1.0, 0.0, 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(float(-5691))), (false ? _GLF_IDENTITY(_GLF_FUZZED(max(9.4, 45.40)), 1.0 * (_GLF_FUZZED(max(9.4, 45.40)))) : _GLF_IDENTITY(float(_GLF_FUZZED(float(-5691))), float(mat2(float(_GLF_FUZZED(float(-5691))), 1.0, 0.0, 0.0))))), mix(float(_GLF_IDENTITY(float(_GLF_FUZZED(float(-5691))), (false ? _GLF_FUZZED(max(_GLF_IDENTITY(9.4, max(9.4, 9.4)), 45.40)) : _GLF_IDENTITY(float(_GLF_FUZZED(float(-5691))), float(mat2(float(_GLF_FUZZED(float(_GLF_IDENTITY(-5691, (-5691) | 0)))), 1.0, 0.0, 0.0)))))), float(_GLF_FUZZED(-3.0)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) / 1.0) : _GLF_FUZZED((uvec3(190195u, 42424u, 159210u) , -716.736)))), float(injectionSwitch.y), bool(true))), 0.0, 1.0, 1.0))))) : _GLF_FUZZED(vec2(-7.6, 5.5)[1]))), (_GLF_IDENTITY(mix(float(_GLF_IDENTITY(_GLF_FUZZED(float(-5691)), mix(float(_GLF_IDENTITY(_GLF_FUZZED(float(-5691)), (_GLF_IDENTITY(_GLF_FUZZED(float(-5691)), _GLF_IDENTITY((_GLF_FUZZED(float(-5691))) - 0.0, max((_GLF_FUZZED(float(-5691))) - 0.0, _GLF_IDENTITY((_GLF_FUZZED(float(-5691))) - 0.0, ((_GLF_FUZZED(float(-5691))) - 0.0) - sqrt(0.0)))))) / 1.0)), float(_GLF_FUZZED(-2.1)), bool(false)))), float(injectionSwitch.y), bool(true)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mix(_GLF_IDENTITY(float(_GLF_FUZZED(float(-5691))), (_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((true), ! (! ((true)))), ! (! _GLF_IDENTITY((! (true)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (true)), bool(bvec4((! (true)), true, false, false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY((! (true)), bool(bvec4((! (true)), true, false, false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(float(_GLF_FUZZED(float(-5691))), (_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(float(-5691))), (false ? _GLF_FUZZED(max(9.4, 45.40)) : _GLF_IDENTITY(float(_GLF_FUZZED(float(-5691))), float(mat2(_GLF_IDENTITY(float(_GLF_FUZZED(float(-5691))), (false ? _GLF_FUZZED(-32.13) : float(_GLF_FUZZED(float(-5691))))), 1.0, 0.0, 0.0))))), clamp(_GLF_IDENTITY(float(_GLF_FUZZED(float(-5691))), (false ? _GLF_FUZZED(max(9.4, 45.40)) : _GLF_IDENTITY(float(_GLF_FUZZED(float(-5691))), float(mat2(float(_GLF_FUZZED(float(_GLF_IDENTITY(-5691, clamp(-5691, -5691, -5691))))), 1.0, 0.0, 0.0))))), _GLF_IDENTITY(float(_GLF_FUZZED(float(-5691))), (false ? _GLF_FUZZED(max(9.4, 45.40)) : _GLF_IDENTITY(float(_GLF_FUZZED(float(-5691))), float(mat2(float(_GLF_FUZZED(float(-5691))), 1.0, 0.0, 0.0))))), _GLF_IDENTITY(float(_GLF_FUZZED(float(-5691))), (false ? _GLF_FUZZED(max(9.4, 45.40)) : _GLF_IDENTITY(float(_GLF_FUZZED(float(-5691))), float(mat2(float(_GLF_FUZZED(_GLF_IDENTITY(float(-5691), (float(-5691)) - length(vec4(0.0, 0.0, 0.0, 0.0))))), 1.0, 0.0, 0.0)))))))) / 1.0) : _GLF_FUZZED((uvec3(190195u, _GLF_IDENTITY(42424u, (42424u) - 0u), 159210u) , -716.736)))), float(injectionSwitch.y), bool(true)) : _GLF_FUZZED(vec2(-7.6, 5.5)[1]), clamp(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mix(_GLF_IDENTITY(float(_GLF_FUZZED(float(-5691))), (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), (! (! (true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), (injectionSwitch.x < injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_IDENTITY(float(_GLF_FUZZED(float(-5691))), (_GLF_IDENTITY(float(_GLF_FUZZED(float(-5691))), (false ? _GLF_FUZZED(max(9.4, _GLF_IDENTITY(45.40, 1.0 * (45.40)))) : _GLF_IDENTITY(float(_GLF_FUZZED(float(-5691))), float(mat2(float(_GLF_FUZZED(float(-5691))), 1.0, 0.0, 0.0)))))) / 1.0) : _GLF_FUZZED((uvec3(190195u, 42424u, 159210u) , -716.736)))), _GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) - 0.0), bool(true)) : _GLF_FUZZED(vec2(-7.6, _GLF_IDENTITY(5.5, min(5.5, 5.5)))[1]), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mix(_GLF_IDENTITY(float(_GLF_FUZZED(float(-5691))), (_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), (! (! (true))) || false))))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))) ? _GLF_IDENTITY(float(_GLF_FUZZED(float(-5691))), (_GLF_IDENTITY(float(_GLF_FUZZED(float(-5691))), (false ? _GLF_IDENTITY(_GLF_FUZZED(max(9.4, 45.40)), 1.0 * (_GLF_FUZZED(max(9.4, 45.40)))) : _GLF_IDENTITY(float(_GLF_FUZZED(float(-5691))), float(mat2(float(_GLF_FUZZED(float(-5691))), 1.0, 0.0, 0.0)))))) / 1.0) : _GLF_FUZZED(_GLF_IDENTITY((uvec3(190195u, 42424u, 159210u) , -716.736), ((uvec3(190195u, 42424u, 159210u) , -716.736)) - 0.0)))), float(injectionSwitch.y), bool(true)) : _GLF_FUZZED(vec2(-7.6, 5.5)[1]), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mix(_GLF_IDENTITY(float(_GLF_FUZZED(float(-5691))), (_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((true), _GLF_IDENTITY(true && ((true)), (true && ((true))) || false)), ! (! (! (true)))))), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 1.0, 1.0, 0.0)), (false ? _GLF_FUZZED(391.587) : float(mat2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, 1.0, 1.0, 0.0))))) < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(float(-5691))), (_GLF_IDENTITY(float(_GLF_FUZZED(float(-5691))), (false ? _GLF_FUZZED(max(9.4, 45.40)) : _GLF_IDENTITY(float(_GLF_FUZZED(float(-5691))), float(mat2(float(_GLF_FUZZED(_GLF_IDENTITY(float(-5691), max(float(-5691), float(-5691))))), 1.0, 0.0, 0.0)))))) / 1.0), (_GLF_IDENTITY(float(_GLF_FUZZED(float(-5691))), (_GLF_IDENTITY(float(_GLF_FUZZED(float(-5691))), (false ? _GLF_FUZZED(max(9.4, 45.40)) : _GLF_IDENTITY(float(_GLF_FUZZED(float(-5691))), float(mat2(float(_GLF_FUZZED(float(-5691))), 1.0, 0.0, 0.0)))))) / 1.0)) / 1.0) : _GLF_FUZZED((uvec3(190195u, 42424u, 159210u) , -716.736)))), float(injectionSwitch.y), bool(true)) : _GLF_FUZZED(vec2(-7.6, 5.5)[1])))))) + 0.0))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-2.6)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(true)))) / round(length(normalize(vec3(1.0, 1.0, 1.0))))) > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, true))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))))))), false || (! (false))))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(bvec4((false), true, true, true))), false || (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), false || (! (false)))), true && (! (_GLF_IDENTITY(! (false), false || (! (false)))))))) && true), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(bvec4((false), true, true, true))), false || (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), false || (! (false)))), true && (! (_GLF_IDENTITY(! (false), false || (! (false)))))))) && true), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))))))), false), false, false)))))), false || _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(false, true && (false)) || (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((false), false || (_GLF_IDENTITY(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && true)) || false), ! (! ((false)))))), bool(bool((false)))), _GLF_IDENTITY(bool(bool(! _GLF_IDENTITY(_GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ! (! ((false)))))), bool(bool((false)))))), false || (bool(bool(! _GLF_IDENTITY(_GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ! (! ((false)))))), bool(bool((false))))))))))), _GLF_IDENTITY(true && (_GLF_IDENTITY(! (false), false || (! (false)))), (_GLF_IDENTITY(true && (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), (! (false)) && true)))), false || (_GLF_IDENTITY(true && (_GLF_IDENTITY(! (false), false || (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) || false)))))))), (true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), false || (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false)))))) || false))))))))) || false)))) && true)))))), true && ((_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(false, true && (false)) || (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ! (! ((false)))))), bool(bool((false)))), _GLF_IDENTITY(bool(bool(! _GLF_IDENTITY(_GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ! (! ((false)))))), bool(bool((false)))))), false || (bool(bool(! _GLF_IDENTITY(_GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ! (! ((false)))))), bool(bool((false))))))))))), _GLF_IDENTITY(true && (_GLF_IDENTITY(! (false), false || (! (false)))), (_GLF_IDENTITY(true && (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), (! (false)) && true)))), false || (_GLF_IDENTITY(true && (_GLF_IDENTITY(! (false), false || (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) || false)))))))), (true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), false || (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true)))), (bool(bvec2(false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false)))))) || false))))))))) || false)))) && true))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(false, true && (false)) || (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ! (! ((false)))))), bool(bool((false)))), _GLF_IDENTITY(bool(bool(! _GLF_IDENTITY(_GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ! (! ((false)))))), bool(bool((false)))))), false || (bool(bool(! _GLF_IDENTITY(_GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ! (! ((false)))))), bool(bool((false))))))))))), _GLF_IDENTITY(true && (_GLF_IDENTITY(! (false), false || (! (false)))), (_GLF_IDENTITY(true && (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), (! (false)) && true)))), false || (_GLF_IDENTITY(true && (_GLF_IDENTITY(! (false), false || (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) || false)))))))), (true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), false || (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true)))), (bool(bvec2(false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false)))))) || false))))))))) || false)))) && true))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(false, true && (false)) || (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ! (! ((false)))))), bool(bool((false)))), _GLF_IDENTITY(bool(bool(! _GLF_IDENTITY(_GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ! (! ((false)))))), bool(bool((false)))))), false || (bool(bool(! _GLF_IDENTITY(_GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ! (! ((false)))))), bool(bool((false))))))))))), _GLF_IDENTITY(true && (_GLF_IDENTITY(! (false), false || (! (false)))), (_GLF_IDENTITY(true && (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), (! (false)) && true)))), false || (_GLF_IDENTITY(true && (_GLF_IDENTITY(! (false), false || (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) || false)))))))), (true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), false || (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true)))), (bool(bvec2(false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false)))))) || false))))))))) || false)))) && true))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(false, true && (false)) || (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ! (! ((false)))))), bool(bool((false)))), _GLF_IDENTITY(bool(bool(! _GLF_IDENTITY(_GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ! (! ((false)))))), bool(bool((false)))))), false || (bool(bool(! _GLF_IDENTITY(_GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ! (! ((false)))))), bool(bool((false))))))))))), _GLF_IDENTITY(true && (_GLF_IDENTITY(! (false), false || (! (false)))), (_GLF_IDENTITY(true && (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), (! (false)) && true)))), false || (_GLF_IDENTITY(true && (_GLF_IDENTITY(! (false), false || (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) || false)))))))), (true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), false || (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true)))), (bool(bvec2(false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false)))))) || false))))))))) || false)))) && true)))))))))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_10._f2._f1.subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : 0u)) | (workgroup_base + _GLF_struct_replacement_10._f2._f1.subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)));
 atomicStore(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(1), clamp(_GLF_IDENTITY(uint(1), (true ? uint(1) : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(uint(1), (uint(1)) | (uint(1))), _GLF_IDENTITY(uint(1), (uint(1)) | 0u))), min(uint(1), uint(1))), _GLF_IDENTITY(4, (4) >> 0), _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) | (64))) | (_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY((64) | 0, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((64) | 0), (~ ((64) | _GLF_IDENTITY(0, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0, (0) | (0)))), max(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0, (0) | (0)))), max(~ (~ (_GLF_IDENTITY(0, (0) | (0)))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(0, (0) | (0))), (0 | 0) | (_GLF_IDENTITY((_GLF_IDENTITY(0, (0) | (0))), ~ (~ ((_GLF_IDENTITY(0, (0) | (0))))))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) | (0))), (~ (_GLF_IDENTITY(0, (0) | (0)))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) | (0))), clamp(~ (_GLF_IDENTITY(0, (0) | (0))), ~ (_GLF_IDENTITY(0, (0) | (0))), ~ (_GLF_IDENTITY(0, (0) | (0))))))))))))) >> 0)), _GLF_IDENTITY((~ (_GLF_IDENTITY(~ ((64) | 0), (~ ((64) | _GLF_IDENTITY(0, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0, (0) | (0)))), max(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0, (0) | (0)))), max(~ (~ (_GLF_IDENTITY(0, (0) | (0)))), ~ (~ (_GLF_IDENTITY(0, (0) | (0)))))), ~ (~ (_GLF_IDENTITY(0, (0) | (0))))))))) >> 0))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((64) | 0), (~ ((64) | _GLF_IDENTITY(0, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0, (0) | (0)))), max(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0, (0) | (0)))), max(~ (~ (_GLF_IDENTITY(0, (0) | (0)))), ~ (~ (_GLF_IDENTITY(0, (0) | (0)))))), ~ (~ (_GLF_IDENTITY(0, (0) | (0))))))))) >> 0)), 1 * (~ (_GLF_IDENTITY(~ ((64) | 0), (~ ((64) | _GLF_IDENTITY(0, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0, (0) | (0)))), max(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0, (0) | (0)))), max(~ (~ (_GLF_IDENTITY(0, (0) | (0)))), ~ (~ (_GLF_IDENTITY(0, (0) | (0)))))), ~ (~ (_GLF_IDENTITY(0, (0) | (0))))))))) >> 0))))), ~ (~ ((~ (_GLF_IDENTITY(~ ((64) | 0), (~ ((64) | _GLF_IDENTITY(0, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(ivec3(0, (1 & 1), 0)))) | (0)))), max(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0, (0) | (0)))), max(~ (~ (_GLF_IDENTITY(0, (0) | (0)))), ~ (~ (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec3(0, 0, 1), (ivec3(0, 0, 1)) | (_GLF_IDENTITY(ivec3(0, 0, 1), ~ (~ (ivec3(0, 0, 1))))))))) | (0)))))), ~ (~ (_GLF_IDENTITY(0, (0) | (0))))))))) >> 0))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((64) | 0), (~ ((64) | _GLF_IDENTITY(0, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0, (0) | (0)))), max(_GLF_IDENTITY(~ _GLF_IDENTITY((~ (_GLF_IDENTITY(0, (0) | (0)))), ((~ (_GLF_IDENTITY(0, (0) | (0))))) | ((~ (_GLF_IDENTITY(0, (0) | (0)))))), max(~ (~ (_GLF_IDENTITY(0, (0) | (0)))), ~ (~ (_GLF_IDENTITY(0, (0) | (0)))))), ~ (~ (_GLF_IDENTITY(0, (0) | (0))))))))) >> 0)), 1 * (~ (_GLF_IDENTITY(~ ((64) | _GLF_IDENTITY(0, clamp(0, 0, 0))), (~ ((64) | _GLF_IDENTITY(0, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0, (0) | (0)))), max(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0, (0) | (0)))), max(~ (~ (_GLF_IDENTITY(0, (0) | (0)))), ~ (~ (_GLF_IDENTITY(0, (0) | (0)))))), ~ (~ (_GLF_IDENTITY(0, (0) | (0))))))))) >> 0)))))))))), max(_GLF_IDENTITY((64) | 0, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY(((64) | 0), (((64) | 0)) >> 0), (~ ((64) | _GLF_IDENTITY(0, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0, (0) | (0)))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) | (0))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) | (0))), (~ (_GLF_IDENTITY(0, (0) | (0)))) | (~ (_GLF_IDENTITY(0, (0) | (0)))))) >> 0)), max(~ (~ (_GLF_IDENTITY(0, (0) | (0)))), ~ (~ (_GLF_IDENTITY(0, (0) | (0)))))), ~ (~ (_GLF_IDENTITY(0, (0) | (0))))))))) >> 0)), (~ (_GLF_IDENTITY(~ ((64) | 0), (~ ((64) | _GLF_IDENTITY(0, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), 1 * (_GLF_IDENTITY(0, (0) | (0)))))), max(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0, (0) | (0)))), max(~ (~ (_GLF_IDENTITY(0, (0) | (0)))), ~ (~ (_GLF_IDENTITY(0, (0) | (0)))))), ~ (~ (_GLF_IDENTITY(0, (0) | (0))))))))) >> 0))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((64) | 0), (~ ((64) | _GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0, (0) | (0)))), max(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0, (0) | (0)))), max(~ (~ (_GLF_IDENTITY(0, (0) | (0)))), ~ (~ (_GLF_IDENTITY(0, (0) | (0)))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0, (0) | (0)))), 0 | (~ (~ (_GLF_IDENTITY(0, (0) | (0))))))))))) >> 0)), 1 * (~ (_GLF_IDENTITY(~ ((64) | 0), (~ ((64) | _GLF_IDENTITY(0, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0, (0) | (0)))), max(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0, (0) | (0)))), max(~ (~ (_GLF_IDENTITY(0, (0) | (0)))), ~ (~ (_GLF_IDENTITY(0, (0) | (0)))))), ~ (~ (_GLF_IDENTITY(0, (0) | (0))))))))) >> 0))))))), _GLF_IDENTITY(_GLF_IDENTITY((64) | 0, _GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ ((64) | 0), (~ ((64) | _GLF_IDENTITY(0, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0, (0) | (0)))), max(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0, (0) | (0)))), max(~ (~ (_GLF_IDENTITY(0, (0) | (0)))), ~ (~ (_GLF_IDENTITY(0, (0) | (0)))))), ~ (~ (_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, (0) * 1), _GLF_IDENTITY(0, clamp(0, 0, 0))))))))))))) >> 0)), 0 + ((_GLF_IDENTITY(~ ((64) | 0), (~ ((64) | _GLF_IDENTITY(0, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0, (0) | (0)))), max(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0, (0) | (0)))), max(~ (~ (_GLF_IDENTITY(0, (0) | (0)))), ~ (~ (_GLF_IDENTITY(0, (0) | (0)))))), ~ (~ (_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, (0) * 1), _GLF_IDENTITY(0, clamp(0, 0, 0))))))))))))) >> 0)))), (~ (_GLF_IDENTITY(~ ((64) | 0), (~ ((64) | _GLF_IDENTITY(0, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0, (0) | (0)))), max(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0, (0) | (0)))), max(~ (~ (_GLF_IDENTITY(0, (0) | (0)))), ~ (~ (_GLF_IDENTITY(0, (0) | (0)))))), ~ (~ (_GLF_IDENTITY(0, (0) | (0))))))))) >> 0))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((64) | 0), (~ ((64) | _GLF_IDENTITY(0, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0, (0) | (0)))), max(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0, (0) | (0)))), max(~ (~ (_GLF_IDENTITY(0, (0) | (0)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (_GLF_IDENTITY(0, (0) | (0))) / 1))))), ~ (~ (_GLF_IDENTITY(0, (0) | (0))))))))) >> 0)), 1 * (~ (_GLF_IDENTITY(~ ((64) | 0), (~ ((64) | _GLF_IDENTITY(0, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0, (0) | (0)))), max(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0, (0) | (0)))), max(~ (~ (_GLF_IDENTITY(0, (0) | (0)))), ~ (~ (_GLF_IDENTITY(0, (0) | (0)))))), ~ (~ (_GLF_IDENTITY(0, (0) | (0))))))))) >> 0))))))), int(ivec4(_GLF_IDENTITY((64) | 0, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((64) | 0), (~ ((64) | _GLF_IDENTITY(0, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0, (0) | (0)))), max(_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0, (0) | (0)))), (~ (~ (_GLF_IDENTITY(0, (0) | (0))))) | (~ (~ (_GLF_IDENTITY(0, (0) | (0)))))), max(~ (~ (_GLF_IDENTITY(0, (0) | _GLF_IDENTITY((0), ((0)) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))), ~ (~ (_GLF_IDENTITY(0, (0) | (0)))))), ~ (~ (_GLF_IDENTITY(0, (0) | (0))))))))) >> 0)), (~ (_GLF_IDENTITY(~ ((64) | 0), (~ ((64) | _GLF_IDENTITY(0, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0, (0) | (0)))), max(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0, (0) | (0)))), max(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (false ? _GLF_FUZZED(8032) : _GLF_IDENTITY(0, (0) | (0)))))), ~ (~ (_GLF_IDENTITY(0, (0) | (0)))))), ~ (~ (_GLF_IDENTITY(0, (0) | (0))))))))) >> 0))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((64) | 0), (~ ((64) | _GLF_IDENTITY(0, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0, (0) | (0)))), max(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0, (0) | (0)))), max(~ (~ _GLF_IDENTITY((_GLF_IDENTITY(0, (0) | (0))), 0 ^ ((_GLF_IDENTITY(0, (0) | (0)))))), ~ (~ (_GLF_IDENTITY(0, (0) | (0)))))), ~ (~ (_GLF_IDENTITY(0, (0) | (0))))))))) >> 0)), 1 * _GLF_IDENTITY((~ (_GLF_IDENTITY(~ ((64) | 0), (~ ((64) | _GLF_IDENTITY(0, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0, (0) | (0)))), max(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0, (0) | (0)))), max(~ (~ (_GLF_IDENTITY(0, (0) | (0)))), ~ (~ (_GLF_IDENTITY(0, (0) | (0)))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), _GLF_IDENTITY(int(int(_GLF_IDENTITY(0, (0) | (0)))), ~ (_GLF_IDENTITY(~ (int(int(_GLF_IDENTITY(0, (0) | (0))))), int(ivec3(~ (int(int(_GLF_IDENTITY(0, (0) | (0))))), 0, 0))))))))))))) >> 0))), ~ (_GLF_IDENTITY(~ ((~ (_GLF_IDENTITY(~ ((64) | 0), (~ ((64) | _GLF_IDENTITY(0, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0, (0) | (0)))), max(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0, (0) | (0)))), max(~ (~ (_GLF_IDENTITY(0, (0) | (0)))), ~ (~ (_GLF_IDENTITY(0, (0) | (0)))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), _GLF_IDENTITY(int(int(_GLF_IDENTITY(0, (0) | (0)))), ~ (_GLF_IDENTITY(~ (int(int(_GLF_IDENTITY(0, (0) | (0))))), int(ivec3(~ (int(int(_GLF_IDENTITY(0, (0) | (0))))), 0, 0))))))))))))) >> 0)))), int(ivec2(~ ((~ (_GLF_IDENTITY(~ ((64) | 0), (~ ((64) | _GLF_IDENTITY(0, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0, (0) | (0)))), max(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0, (0) | (0)))), max(~ (~ (_GLF_IDENTITY(0, (0) | (0)))), ~ (~ (_GLF_IDENTITY(0, (0) | (0)))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), _GLF_IDENTITY(int(int(_GLF_IDENTITY(0, (0) | (0)))), ~ (_GLF_IDENTITY(~ (int(int(_GLF_IDENTITY(0, (0) | (0))))), int(ivec3(~ (int(int(_GLF_IDENTITY(0, (0) | (0))))), 0, 0))))))))))))) >> 0)))), 0))))))))), 0, (0 & 56342), 1)))))))), 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(20.27)), vec2(_GLF_FUZZED(-8.0), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(injectionSwitch.y, _GLF_IDENTITY(length(cross(vec3(-8.7, -27.66, -20.26), vec3(-8.7, -27.66, -20.26))), clamp(length(cross(vec3(-8.7, -27.66, -20.26), vec3(-8.7, -27.66, -20.26))), length(cross(vec3(-8.7, -27.66, -20.26), vec3(-8.7, -27.66, -20.26))), length(cross(vec3(-8.7, -27.66, -20.26), vec3(-8.7, -27.66, -20.26))))), 0.0, 0.0), (vec4(injectionSwitch.y, length(cross(vec3(-8.7, -27.66, -20.26), vec3(-8.7, -27.66, -20.26))), 0.0, 0.0)) * _GLF_IDENTITY(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), (false ? _GLF_FUZZED(vec4(3093.0498, 601.213, 231.303, -85.15)) : _GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), mix(vec4((vec4(_GLF_IDENTITY(1.0, float(mat2x3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), dot(vec2(1.0, 0.0), vec2(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), 0.0, 0.0, 1.0, 1.0))), 1.0, 1.0, 1.0))[0], _GLF_FUZZED(761.676), (vec4(1.0, 1.0, 1.0, 1.0))[2], _GLF_FUZZED(8.4)), vec4(_GLF_FUZZED(-2513.1592), (_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), clamp(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), (_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), (vec4(1.0, 1.0, 1.0, 1.0)) * mat4(1.0))) - vec4(0.0, 0.0, 0.0, 0.0)), vec4(1.0, 1.0, 1.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0))))[1], _GLF_FUZZED(_GLF_IDENTITY(668.501, max(_GLF_IDENTITY(668.501, max(668.501, 668.501)), _GLF_IDENTITY(668.501, clamp(_GLF_IDENTITY(668.501, (668.501) + 0.0), _GLF_IDENTITY(668.501, (false ? _GLF_FUZZED(0.1) : 668.501)), 668.501))))), (vec4(1.0, 1.0, 1.0, 1.0))[3]), bvec4(false, true, false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false)))))))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, false)), false || (bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, false)), false || (bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, false))))), false || (bool(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, false)), false || (bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, false)))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, false)), false || (bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, false))))), false || (bool(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, false)), false || (bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, false))))))))) && true)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(distance(vec4(188.466, 2.1, 95.70, 86.76), vec4(5699.4968, -7.6, 5.5, 6.0))))) > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(462.634)), bool(false))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(877.413)), bool(false))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))) || _GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), ! (_GLF_IDENTITY(! (! (! ((false)))), ! (! (! (! (! ((false))))))))))), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))) || _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), false || ((false))), _GLF_IDENTITY(! (! ((false))), ! (_GLF_IDENTITY(! (! (! ((false)))), ! (! (! (! (! ((false)))))))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1))), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1)) < subgroup_size)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_IDENTITY(true, false || (true)), ! (! ((false) && _GLF_IDENTITY(true, false || (true)))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_IDENTITY(true, false || (true)), ! (! ((false) && _GLF_IDENTITY(true, false || (true)))))))), false, false, true)), true && (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_IDENTITY(true, false || (true)), ! (! ((false) && _GLF_IDENTITY(true, false || (true)))))))), false, false, true)))))))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), ((! (_GLF_IDENTITY(false, (false) && true)))) || false))) && true)), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_IDENTITY(true, false || (true)), ! (! ((false) && _GLF_IDENTITY(true, false || (true))))))))))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), ((! (_GLF_IDENTITY(false, (false) && true)))) || false))) && true))) || false))
    return;
   do
    {
     atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), max(uint(2), uint(2))), 4, 64, 4);
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), (! (bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(! (! (bool(false))), false || (! (! (bool(false))))))))) && true))), false || (bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), true && (! (bool(false)))))))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), (! (bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(! (! (bool(false))), false || (! (! (bool(false))))))))) && true))), false || (bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), true && (! (bool(false))))))))))) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), mix(vec2(_GLF_FUZZED(9982.7947), _GLF_FUZZED(-9104.4923)), vec2(((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))[0], ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), vec2(mat3x4(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), _GLF_IDENTITY(dot(vec4(0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))))))[1]), bvec2(true, true))) + vec2(0.0, 0.0))), (max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), mix(vec2(_GLF_FUZZED(9982.7947), _GLF_IDENTITY(_GLF_FUZZED(-9104.4923), clamp(_GLF_FUZZED(-9104.4923), _GLF_IDENTITY(_GLF_FUZZED(-9104.4923), max(_GLF_FUZZED(-9104.4923), _GLF_FUZZED(-9104.4923))), _GLF_FUZZED(-9104.4923)))), vec2(((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) / vec2(1.0, 1.0)), injectionSwitch, injectionSwitch))))[0], ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))[1]), bvec2(true, true))) + vec2(0.0, 0.0)))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))), _GLF_IDENTITY(bool(bvec3(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))), false, true)), bool(bvec3(bool(bvec3(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))), false, true)), false, true)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
    }
   subgroupAll(false);
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))), _GLF_IDENTITY(bool(bvec2(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))), true)), true && (bool(bvec2(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))), true)))))))))), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.9), _GLF_IDENTITY(_GLF_FUZZED(-366.999), max(_GLF_FUZZED(-366.999), _GLF_FUZZED(-366.999)))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(true, true))))).x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))))).y), ! (_GLF_IDENTITY(! (true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y)), bool(bool(_GLF_IDENTITY(! (true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y)), bool(bvec3(! (true && (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), log(vec2(1.0, 1.0)) + (vec2(1.0, 1.0)))))).y, float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), log(vec2(1.0, 1.0)) + (vec2(1.0, 1.0)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), log(vec2(1.0, 1.0)) + (vec2(1.0, 1.0)))))), max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), log(vec2(1.0, 1.0)) + (vec2(1.0, 1.0)))))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), log(vec2(1.0, 1.0)) + (vec2(1.0, 1.0)))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), log(vec2(1.0, 1.0)) + (vec2(1.0, 1.0)))))), max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), log(vec2(1.0, 1.0)) + (vec2(1.0, 1.0)))))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), log(vec2(1.0, 1.0)) + (vec2(1.0, 1.0)))))))))).y, float(mat3x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), log(vec2(1.0, 1.0)) + (vec2(1.0, 1.0)))))).y, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0, determinant(mat2(abs(0.0), 0.0, 1.0, 0.0)), 1.0, 1.0, 0.0))))), true, true))))))))))))), ((! (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y))))))) || false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (false) && true)), bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(false))
    return;
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 0.0), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x2(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 0.0))))), _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, abs(0.0), 0.0, 1.0, 0.0, 0.0)), (float(mat2x3(injectionSwitch.x, _GLF_IDENTITY(abs(0.0), (_GLF_IDENTITY(abs(0.0), 1.0 * (abs(0.0)))) - 0.0), 0.0, 1.0, 0.0, 0.0))) * 1.0)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))) && true)))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) && true))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), bool(bvec4(_GLF_IDENTITY((false), false || ((false))), _GLF_IDENTITY(true, bool(bvec2(true, true))), false, true))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool((false))), bool(bvec3(_GLF_IDENTITY(bool(bool((false))), (bool(bool((false)))) && true), true, true))), ! (! (_GLF_IDENTITY(bool(bool((false))), bool(bvec3(_GLF_IDENTITY(bool(bool((false))), (bool(bool((false)))) && true), true, true))))))) && true)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
