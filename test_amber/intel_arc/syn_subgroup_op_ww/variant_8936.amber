#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))) && true)))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) / 1u)) ^ 0u)) | (gl_NumWorkGroups.x));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(0.9, 5.2))))) - vec2(0.0, 0.0)).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))) | (gl_WorkGroupSize)), uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[0]), max(~ (gl_WorkGroupSize[0]), ~ (gl_WorkGroupSize[0]))))), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u))))) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, 0u | (1u))), uvec3(1u))))[1], gl_WorkGroupSize[2])), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))) | (gl_WorkGroupSize)), uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[0]), max(~ (gl_WorkGroupSize[0]), ~ (gl_WorkGroupSize[0]))))), _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u))))) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, 0u | (1u))), uvec3(1u))), uvec3(uvec4((gl_WorkGroupSize) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u))))) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, 0u | (1u))), uvec3(1u))), 0u))))[1], gl_WorkGroupSize[2])), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))) | (gl_WorkGroupSize)), uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[0]), max(~ (gl_WorkGroupSize[0]), ~ (gl_WorkGroupSize[0]))))), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, _GLF_IDENTITY(min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u), (min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u)) | (_GLF_IDENTITY(min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u), 0u | (min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u))))))))) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, 0u | (1u))), _GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), ~ (~ (uvec3(1u))))) | uvec3(0u, 0u, 0u)))))[1], gl_WorkGroupSize[2])), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))) | (gl_WorkGroupSize)), uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[0]), max(~ (gl_WorkGroupSize[0]), _GLF_IDENTITY(~ (gl_WorkGroupSize[0]), min(~ (gl_WorkGroupSize[0]), ~ (gl_WorkGroupSize[0]))))))), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u))))) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, 0u | (1u))), uvec3(1u))))[1], gl_WorkGroupSize[2])), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))) | (gl_WorkGroupSize)), uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[0]), max(~ (gl_WorkGroupSize[0]), ~ (gl_WorkGroupSize[0]))))), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u))))) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, _GLF_IDENTITY(0u | (1u), clamp(0u | (1u), 0u | (1u), _GLF_IDENTITY(0u | (1u), (true ? 0u | (1u) : _GLF_FUZZED(subgroup_local_id))))))), uvec3(1u))))[1], gl_WorkGroupSize[2])))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))) | (gl_WorkGroupSize)), uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[0]), max(~ (gl_WorkGroupSize[0]), ~ (gl_WorkGroupSize[0]))))), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u))))) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, 0u | (1u))), uvec3(1u))))[1], gl_WorkGroupSize[2])))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize)))[1], gl_WorkGroupSize[2]))) | (gl_WorkGroupSize)), uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[0]), max(~ (gl_WorkGroupSize[0]), ~ (gl_WorkGroupSize[0]))))), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED((subgroup_local_id)) : 1u))), uvec3(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u))))) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, 0u | (1u))), uvec3(1u))))[1], gl_WorkGroupSize[2])), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))) | (gl_WorkGroupSize)), uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[0]), max(~ (gl_WorkGroupSize[0]), ~ (gl_WorkGroupSize[0]))))), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), uvec3(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u))))) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, 0u | (1u))), uvec3(1u))))[1], gl_WorkGroupSize[2])), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) + uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))) | (gl_WorkGroupSize)), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[0]), max(~ (gl_WorkGroupSize[0]), ~ (gl_WorkGroupSize[0]))))), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u))))) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, 0u | (1u)), 1u)), 1u)), 0u | (1u))), uvec3(1u))))[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) * 1)], gl_WorkGroupSize[2]), max(uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[0]), max(~ (gl_WorkGroupSize[0]), ~ (gl_WorkGroupSize[0]))))), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u))))) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, 0u | (1u)), 1u)), 1u)), 0u | (1u))), uvec3(1u))))[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) * 1)], gl_WorkGroupSize[2]), uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[0]), max(~ (gl_WorkGroupSize[0]), ~ (gl_WorkGroupSize[0]))))), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u))))) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, 0u | (1u)), 1u)), 1u)), 0u | (1u))), uvec3(1u))))[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) * 1)], gl_WorkGroupSize[2])))))))).x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))) | (gl_WorkGroupSize)), uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[0]), max(~ (gl_WorkGroupSize[0]), ~ (gl_WorkGroupSize[0]))))), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u))))) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, 0u | (1u))), uvec3(1u))))[1], gl_WorkGroupSize[2])), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))) | (gl_WorkGroupSize)), uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[0]), max(~ (gl_WorkGroupSize[0]), ~ (gl_WorkGroupSize[0]))))), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u))))) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, 0u | (1u))), uvec3(1u))))[1], gl_WorkGroupSize[2])), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))) | (gl_WorkGroupSize)), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))) | (gl_WorkGroupSize)))), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[0]), max(~ (gl_WorkGroupSize[0]), ~ (gl_WorkGroupSize[0]))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[0]), max(~ (gl_WorkGroupSize[0]), ~ (gl_WorkGroupSize[0]))))), min(_GLF_IDENTITY(gl_WorkGroupSize[0], ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[0]), max(~ (gl_WorkGroupSize[0]), ~ (gl_WorkGroupSize[0]))))), _GLF_IDENTITY(gl_WorkGroupSize[0], ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[0]), max(~ (gl_WorkGroupSize[0]), ~ (gl_WorkGroupSize[0]))))))))), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, _GLF_IDENTITY(min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u), (min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u)) | (_GLF_IDENTITY(min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u), clamp(min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u), min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u), min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u))))))))) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, 0u | (1u))), uvec3(1u))))[1], gl_WorkGroupSize[2])), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))) / uvec3(1u, 1u, 1u))) | (gl_WorkGroupSize)), uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[0]), max(~ (gl_WorkGroupSize[0]), ~ (gl_WorkGroupSize[0]))))), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u))))) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, 0u | (1u))), uvec3(1u))))[1], gl_WorkGroupSize[2])), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))) | (gl_WorkGroupSize)), uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[0]), max(~ (gl_WorkGroupSize[0]), ~ (gl_WorkGroupSize[0]))))), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, 0u | (1u))), uvec3(1u)), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, 0u | (1u))), uvec3(1u))) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, 0u | (1u))), uvec3(1u))))))[1], gl_WorkGroupSize[2])))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))) | (gl_WorkGroupSize)), uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupSize[0]), ((gl_WorkGroupSize[0])) | 0u), max(~ (gl_WorkGroupSize[0]), ~ (gl_WorkGroupSize[0]))))), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / (_GLF_IDENTITY((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u))))), min((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u))))), (uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, 0u | (1u))), uvec3(1u)), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, 0u | (1u))), uvec3(1u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, 0u | (1u))), uvec3(1u)), ~ (~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, 0u | (1u))), uvec3(1u))))) : _GLF_FUZZED(uvec3(70251u, 148990u, 101978u))))) ^ uvec3(0u, 0u, 0u))))[1], gl_WorkGroupSize[2])))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), clamp(_GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), ~ (~ (uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])))), uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))))) | (gl_WorkGroupSize)), uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | uvec3(0u, 0u, 0u))[0]), max(~ (gl_WorkGroupSize[0]), ~ (gl_WorkGroupSize[0]))))), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / (_GLF_IDENTITY((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u))))), uvec3(uvec3(_GLF_IDENTITY((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u))))), ~ (~ ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u))))))))))) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, 0u | (1u))), uvec3(1u))))[1], gl_WorkGroupSize[2])), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, (0) + 0)], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))) | (gl_WorkGroupSize)), uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[0]), max(~ (gl_WorkGroupSize[0]), ~ (gl_WorkGroupSize[_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec2(0, 1), (ivec2(0, 1)) - ivec2(0, 0))))]))))), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u))))) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, 0u | (1u))), uvec3(1u))))[_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-49684)))], gl_WorkGroupSize[2])), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))) | (gl_WorkGroupSize)), uvec3(_GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(0, int(ivec4(_GLF_IDENTITY(0, (0) << 0), 1, 0, 1)))], ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupSize[0]), (_GLF_IDENTITY((gl_WorkGroupSize[0]), ((gl_WorkGroupSize[0])) | ((gl_WorkGroupSize[0])))) >> 0u), max(~ (gl_WorkGroupSize[0]), ~ (gl_WorkGroupSize[0]))))), _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupSize))) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u))))) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, 0u | (1u))), uvec3(1u))))[1], gl_WorkGroupSize[2])))))).x) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))) | (gl_WorkGroupSize)), uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[0]), max(~ (_GLF_IDENTITY(gl_WorkGroupSize[0], (true ? gl_WorkGroupSize[0] : _GLF_FUZZED((198977u / num_workgroup))))), ~ (gl_WorkGroupSize[0]))))), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), uvec3(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u))))) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, 0u | (1u))), uvec3(1u))))[1], gl_WorkGroupSize[2])), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))) | (gl_WorkGroupSize)), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) | uvec3(0u, 0u, 0u))))[0], ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[0]), _GLF_IDENTITY(max(~ (gl_WorkGroupSize[0]), ~ (gl_WorkGroupSize[0])), uint(uvec2(max(~ (gl_WorkGroupSize[0]), ~ (gl_WorkGroupSize[0])), 0u)))))), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u))))) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, 0u | (1u))), uvec3(1u))))[1], gl_WorkGroupSize[2])), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))) | (gl_WorkGroupSize)), uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[0]), max(~ (gl_WorkGroupSize[0]), ~ (gl_WorkGroupSize[0]))))), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u))))) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, 0u | (1u))), uvec3(1u))))[1], gl_WorkGroupSize[2])), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))) | (gl_WorkGroupSize)), uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[0]), max(~ (gl_WorkGroupSize[0]), ~ (gl_WorkGroupSize[0]))))), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u))))) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, 0u | (1u))), uvec3(1u))))[1], gl_WorkGroupSize[2])), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))) | (gl_WorkGroupSize)), uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[0]), max(~ (gl_WorkGroupSize[0]), ~ (gl_WorkGroupSize[0]))))), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u))))) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, 0u | (1u))), uvec3(1u))))[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, int(ivec2(1, 1))), 1, 1))], gl_WorkGroupSize[2])))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))) | (gl_WorkGroupSize)), uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[0]), max(~ (gl_WorkGroupSize[0]), ~ (gl_WorkGroupSize[0]))))), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u))))) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), 0u | (_GLF_IDENTITY(1u, (1u) << 0u)))), uvec3(1u))))[1], gl_WorkGroupSize[2])))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))) | (gl_WorkGroupSize)), uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[0]), max(~ (gl_WorkGroupSize[0]), ~ (gl_WorkGroupSize[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) + 0)]))))), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u))))) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, 0u | (1u))), uvec3(1u))))[1], gl_WorkGroupSize[2])), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))) | (gl_WorkGroupSize)), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[0]), max(~ (gl_WorkGroupSize[0]), ~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))[_GLF_IDENTITY(0, (0) | 0)]))))), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u))))) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, 0u | (1u))), uvec3(1u))))[1], _GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u)), min(uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[0]), max(~ (gl_WorkGroupSize[0]), ~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))[_GLF_IDENTITY(0, (0) | 0)]))))), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u))))) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, 0u | (1u))), uvec3(1u))))[1], _GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u)), uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[0]), max(~ (gl_WorkGroupSize[0]), ~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))[_GLF_IDENTITY(0, (0) | 0)]))))), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u))))) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, 0u | (1u))), uvec3(1u))))[1], _GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u))))), _GLF_IDENTITY(uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))) | (gl_WorkGroupSize)), uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[0]), max(~ (gl_WorkGroupSize[0]), ~ (gl_WorkGroupSize[0]))))), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u))))) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, 0u | (1u))), uvec3(1u))))[1], gl_WorkGroupSize[2]))), max(uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))) | (gl_WorkGroupSize)), uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[0]), max(~ (gl_WorkGroupSize[0]), ~ (gl_WorkGroupSize[0]))))), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u))))) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, 0u | (1u))), uvec3(1u))))[1], gl_WorkGroupSize[2]))), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))) | (gl_WorkGroupSize)), uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[0]), max(~ (gl_WorkGroupSize[0]), ~ (gl_WorkGroupSize[0]))))), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u))))) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, 0u | (1u))), uvec3(1u))))[1], gl_WorkGroupSize[2])))))))).x));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, round(length(normalize(cos(vec2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(false))), bool(false))))))))))))))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, ~ (~ (gl_WorkGroupID.x)));
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size))) / (1u & 1u)) + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), (bool(_GLF_IDENTITY(false, ! (! (false))))) && true)))))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false, false || ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false))), ! (! (bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false, false || ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false)))))))))), bool(bvec4((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), (_GLF_DEAD(false)) && true)) || false, false || ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || _GLF_IDENTITY(false, (false) || false)))), ! (! (bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false, false || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, false)))) && true)) || false)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((true ? _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_base, (workgroup_base) - _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))))), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) >> 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) - uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat4x2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0))))), ~ (~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))) - uvec2(0u, 0u))), min(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), 0u ^ ((workgroup_base)))) << 0u) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec2(_GLF_IDENTITY(workgroup_base, (workgroup_base) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))) - uvec2(0u, 0u))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_base, (workgroup_base) - uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0))), uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec2(_GLF_IDENTITY(workgroup_base, (workgroup_base) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))) - uvec2(0u, 0u)))))) : _GLF_FUZZED((workgroup_size ++))), ((true ? _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_base, (workgroup_base) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((uvec2(_GLF_IDENTITY(workgroup_base, (workgroup_base) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))) - uvec2(0u, 0u), ((uvec2(_GLF_IDENTITY(workgroup_base, (workgroup_base) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))) - uvec2(0u, 0u)) ^ uvec2(0u, 0u)))), min(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_base, (workgroup_base) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec2(_GLF_IDENTITY(workgroup_base, (workgroup_base) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))) - uvec2(0u, _GLF_IDENTITY(0u, (0u) | 0u)))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_base, (workgroup_base) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(uvec2(uvec4(uvec2(_GLF_IDENTITY(workgroup_base, (workgroup_base) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u, 0u)), uvec2(0u, 0u) | (uvec2(uvec4(uvec2(_GLF_IDENTITY(workgroup_base, (workgroup_base) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u, 0u))))), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u * (_GLF_IDENTITY(workgroup_base, (workgroup_base) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))) - uvec2(0u, 0u)))))) : _GLF_FUZZED((workgroup_size ++)))) + 0u)) + subgroup_id * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(workgroup_base, 0u + (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))) : _GLF_FUZZED((workgroup_size ++)))) + subgroup_id * subgroup_size), ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(uint(workgroup_base), (true ? uint(workgroup_base) : _GLF_FUZZED(subgroup_size))))), (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(workgroup_base, 0u + (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))) : _GLF_FUZZED((workgroup_size ++)))) + subgroup_id * subgroup_size)) / 1u) >> uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), (vec2(0.0, 0.0) + (injectionSwitch)) - abs(tan(vec2(0.0, 0.0))))), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(_GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-47.48), _GLF_FUZZED(8.9)), vec2(_GLF_IDENTITY(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), vec2(_GLF_IDENTITY(mat3((mat2(1.0) * (injectionSwitch)), sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0), (mat3((mat2(1.0) * (injectionSwitch)), sin(0.0), 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((-5.0 + 8.2))), float(0.0), bool(true))), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(91.23) : _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-19.13)), float(0.0), bool(true))))))), 0.0, 0.0, 0.0, 0.0)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), clamp(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), vec2(_GLF_IDENTITY(mat3((mat2(1.0) * (injectionSwitch)), sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(_GLF_IDENTITY((mat3((mat2(1.0) * (injectionSwitch)), sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), transpose(transpose((mat3((mat2(1.0) * (injectionSwitch)), sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY((mat3((mat2(1.0) * (injectionSwitch)), sin(0.0), 1.0, 0.0, _GLF_IDENTITY(0.0, float(mat4x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 0.0)), transpose(transpose((mat3((mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(sin(0.0), (sin(0.0)) - 0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY((_GLF_IDENTITY(mat2(1.0), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (mat2(1.0))) * (injectionSwitch)), vec2(_GLF_IDENTITY(mat3((mat2(1.0) * (injectionSwitch)), sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0), (mat3((mat2(1.0) * (injectionSwitch)), sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)) + mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), vec2(_GLF_IDENTITY(mat3((mat2(1.0) * (injectionSwitch)), sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0), (mat3((mat2(1.0) * (injectionSwitch)), sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), clamp(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), vec2(_GLF_IDENTITY(mat3((mat2(1.0) * (injectionSwitch)), sin(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0), (mat3((mat2(1.0) * (injectionSwitch)), sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(8938.6393) : 0.0)), 0.0, 0.0)))), _GLF_IDENTITY((_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))) * (injectionSwitch)), vec2(_GLF_IDENTITY(mat3((mat2(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6888.4810)), float(1.0), bool(true))))) : _GLF_FUZZED(-3.4)))) * (injectionSwitch)), sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0), (mat3((mat2(1.0) * (injectionSwitch)), sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), vec2(_GLF_IDENTITY(mat3((mat2(1.0) * (injectionSwitch)), sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0), (mat3((mat2(1.0) * (injectionSwitch)), sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), (_GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), vec2(_GLF_IDENTITY(mat3((mat2(1.0) * (injectionSwitch)), sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0), (mat3((mat2(1.0) * (injectionSwitch)), sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))) * mat2(1.0))))))[0], (mat2(1.0) * (injectionSwitch))[1]), bvec2(true, true)), max(mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-47.48, mix(float(-47.48), float(_GLF_FUZZED(-129.072)), bool(false)))), _GLF_FUZZED(8.9)), vec2(_GLF_IDENTITY(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), vec2(_GLF_IDENTITY(mat3((mat2(1.0) * (injectionSwitch)), sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0), (mat3((mat2(1.0) * (injectionSwitch)), sin(0.0), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-7.8) : 0.0)))), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-725.229)), bool(false))))))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), clamp(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), vec2(_GLF_IDENTITY(mat3((mat2(1.0) * (injectionSwitch)), sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(86.25)), bool(false)))), (mat3((mat2(1.0) * (injectionSwitch)), sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), vec2(_GLF_IDENTITY(mat3((mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(sin(0.0), mix(float(sin(0.0)), float(_GLF_FUZZED(2.8)), bool(false))), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0), (mat3((_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(-64.75, -0.3, -5.6, -554.063)) : mat2(1.0))) * (injectionSwitch)), sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), vec2(_GLF_IDENTITY(mat3((mat2(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 1.0, 0.0, sqrt(1.0), 1.0)))) * (injectionSwitch)), sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0), (mat3((mat2(1.0) * (injectionSwitch)), sin(0.0), _GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0, 0.0, 0.0, 0.0, 0.0)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))[0], (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))))[1]), bvec2(true, true)), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-47.48), _GLF_FUZZED(8.9)), vec2(_GLF_IDENTITY(_GLF_IDENTITY((mat2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(0.2)), bool(false)))))) * (injectionSwitch)), vec2(_GLF_IDENTITY(mat3((mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * (injectionSwitch)), sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0), (mat3((mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))))), sin(_GLF_IDENTITY(0.0, (0.0) - 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), clamp(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), vec2(_GLF_IDENTITY(mat3((mat2(1.0) * (injectionSwitch)), sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)), _GLF_IDENTITY((mat3(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), min((mat2(1.0) * (injectionSwitch)), (mat2(1.0) * (injectionSwitch)))), sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)))), ((mat3(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), min((mat2(1.0) * (injectionSwitch)), (mat2(1.0) * (injectionSwitch)))), sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY((mat2(1.0) * _GLF_IDENTITY((injectionSwitch), clamp((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))), (injectionSwitch), (injectionSwitch)))), vec2(_GLF_IDENTITY(mat3((mat2(1.0) * (injectionSwitch)), sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1540.9234)), float(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-455.087)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (mat3((_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-2744.6981)), bool(false))), 0.0, 0.0)) * (injectionSwitch)), sin(0.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0)), 0.0, 0.0)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), vec2(_GLF_IDENTITY(mat3((mat2(1.0) * (injectionSwitch)), sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0), (mat3((mat2(1.0) * (injectionSwitch)), sin(0.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0)) + mat3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, 0.0, 0.0))))))[0], (mat2(1.0) * (injectionSwitch))[1]), bvec2(true, true)), max(mix(vec2(_GLF_FUZZED(-47.48), _GLF_FUZZED(8.9)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY((mat2(1.0) * _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_IDENTITY(((injectionSwitch))[0], _GLF_IDENTITY((_GLF_IDENTITY(((injectionSwitch))[0], mix(float(((injectionSwitch))[0]), float(_GLF_FUZZED(5.6)), bool(false)))), min(_GLF_IDENTITY((_GLF_IDENTITY(((injectionSwitch))[0], mix(float(((injectionSwitch))[0]), float(_GLF_FUZZED(5.6)), bool(false)))), mix(float((_GLF_IDENTITY(((injectionSwitch))[0], mix(float(((injectionSwitch))[0]), float(_GLF_FUZZED(5.6)), bool(false))))), float(_GLF_FUZZED(-2.5)), bool(false))), (_GLF_IDENTITY(((injectionSwitch))[0], mix(float(((injectionSwitch))[0]), float(_GLF_FUZZED(5.6)), bool(false)))))) + 0.0), ((injectionSwitch))[1]), vec2(_GLF_FUZZED(-951.503), _GLF_FUZZED(5.8)), bvec2(false, false)))), vec2(_GLF_IDENTITY(mat3((mat2(1.0) * (injectionSwitch)), sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0), (mat3((mat2(1.0) * (injectionSwitch)), sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), clamp(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), vec2(_GLF_IDENTITY(mat3((mat2(1.0) * (injectionSwitch)), sin(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0))))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 0.0), (mat3((mat2(1.0) * (injectionSwitch)), sin(0.0), 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x2(0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)), (float(mat3x2(0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0))) - _GLF_ZERO(0.0, injectionSwitch.x))), 0.0, 0.0, 0.0, 0.0)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), clamp((mat2(1.0) * (injectionSwitch)), (mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), mix(vec2(_GLF_FUZZED(vec3(-1450.7138, 2.3, 9.2).r), _GLF_FUZZED(40.87)), vec2(((mat2(1.0) * (injectionSwitch)))[0], ((mat2(1.0) * (injectionSwitch)))[1]), bvec2(true, true))))), vec2(_GLF_IDENTITY(mat3((mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9.8) : 1.0))) * (injectionSwitch)), sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0), (mat3((mat2(1.0) * (injectionSwitch)), sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), vec2(_GLF_IDENTITY(mat3((mat2(1.0) * (injectionSwitch)), sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0), (mat3((mat2(1.0) * (injectionSwitch)), sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))[0], (mat2(1.0) * (injectionSwitch))[1]), min(vec2(_GLF_IDENTITY(_GLF_IDENTITY((mat2(1.0) * _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_IDENTITY(((injectionSwitch))[0], (_GLF_IDENTITY(((injectionSwitch))[_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) ^ 0), _GLF_IDENTITY(0, max(0, 0))))], mix(float(((injectionSwitch))[0]), float(_GLF_FUZZED(5.6)), bool(false)))) + 0.0), ((injectionSwitch))[1]), vec2(_GLF_FUZZED(-951.503), _GLF_FUZZED(5.8)), bvec2(false, false)))), vec2(_GLF_IDENTITY(_GLF_IDENTITY(mat3((mat2(1.0) * (injectionSwitch)), sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat3((mat2(1.0) * (injectionSwitch)), sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), (mat3((mat2(1.0) * (injectionSwitch)), sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), clamp(_GLF_IDENTITY((mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), vec2(_GLF_IDENTITY(mat3((mat2(1.0) * (injectionSwitch)), sin(0.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat3((mat2(1.0) * (injectionSwitch)), sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat3((mat2(1.0) * (injectionSwitch)), sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), clamp((_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch)) * mat2(1.0), min(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch)) * mat2(1.0), min((mat2(1.0) * (injectionSwitch)) * mat2(1.0), (mat2(1.0) * (injectionSwitch)) * mat2(1.0))), (mat2(1.0) * (injectionSwitch)) * mat2(1.0))))), (mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), mix(vec2(_GLF_FUZZED(vec3(-1450.7138, 2.3, 9.2).r), _GLF_FUZZED(40.87)), vec2(((mat2(1.0) * (injectionSwitch)))[0], ((mat2(1.0) * (injectionSwitch)))[1]), bvec2(true, true))))), vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY((mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9.8) : 1.0))) * (injectionSwitch)), vec2(mat3((mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9.8) : 1.0))) * (injectionSwitch)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))), sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0), (mat3((mat2(1.0) * (injectionSwitch)), sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), vec2(_GLF_IDENTITY(mat3((mat2(1.0) * (injectionSwitch)), sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0), (mat3((mat2(1.0) * (injectionSwitch)), sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))[0], (mat2(1.0) * (injectionSwitch))[1]), _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY((mat2(1.0) * _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_IDENTITY(((injectionSwitch))[0], (_GLF_IDENTITY(((injectionSwitch))[0], mix(float(((injectionSwitch))[0]), float(_GLF_FUZZED(5.6)), bool(false)))) + 0.0), ((injectionSwitch))[1]), vec2(_GLF_FUZZED(-951.503), _GLF_FUZZED(5.8)), bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), ! (! (bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))), false)))), vec2(_GLF_IDENTITY(mat3((mat2(1.0) * (injectionSwitch)), sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0), (mat3((mat2(1.0) * (injectionSwitch)), sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), clamp(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), vec2(_GLF_IDENTITY(mat3((mat2(1.0) * (injectionSwitch)), sin(0.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0), (mat3((mat2(1.0) * (injectionSwitch)), sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), clamp((mat2(1.0) * (injectionSwitch)), (mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), mix(vec2(_GLF_FUZZED(vec3(-1450.7138, 2.3, 9.2).r), _GLF_FUZZED(40.87)), vec2(((mat2(1.0) * (injectionSwitch)))[0], (_GLF_IDENTITY((_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))))), ((_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))))))) - vec2(0.0, 0.0)))[1]), bvec2(true, true))))), vec2(_GLF_IDENTITY(mat3((mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9.8) : 1.0))) * (injectionSwitch)), sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0), (mat3((mat2(1.0) * (injectionSwitch)), sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY((mat2(1.0) * _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(vec2(20.16, -2641.5625)) : (injectionSwitch)))))), vec2(_GLF_IDENTITY(mat3((mat2(1.0) * (injectionSwitch)), sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0), (mat3((mat2(1.0) * (injectionSwitch)), sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)) + mat3(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6063.9547)), float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-1.4)), bool(false)))), bool(true))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))[0], (mat2(1.0) * (injectionSwitch))[1]), max(vec2(_GLF_IDENTITY(_GLF_IDENTITY((mat2(1.0) * _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch))))[0], (_GLF_IDENTITY(((injectionSwitch))[0], mix(float(((injectionSwitch))[0]), float(_GLF_FUZZED(5.6)), bool(false)))) + 0.0), ((injectionSwitch))[1]), vec2(_GLF_FUZZED(-951.503), _GLF_FUZZED(5.8)), bvec2(false, false)))), vec2(_GLF_IDENTITY(mat3((mat2(1.0) * (injectionSwitch)), sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0), (mat3((mat2(1.0) * (injectionSwitch)), sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), clamp(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), vec2(_GLF_IDENTITY(mat3((mat2(1.0) * (injectionSwitch)), sin(0.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 0.0), (mat3((mat2(1.0) * (injectionSwitch)), sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), clamp((mat2(1.0) * (injectionSwitch)), (mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), mix(vec2(_GLF_FUZZED(vec3(-1450.7138, 2.3, 9.2).r), _GLF_FUZZED(40.87)), vec2(((mat2(1.0) * _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))))[0], ((mat2(1.0) * (injectionSwitch)))[1]), bvec2(true, true))))), vec2(_GLF_IDENTITY(mat3((mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9.8) : 1.0))) * (injectionSwitch)), sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0), (mat3((mat2(1.0) * (injectionSwitch)), sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), vec2(_GLF_IDENTITY(mat3((mat2(1.0) * (injectionSwitch)), sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0), (mat3((mat2(1.0) * (injectionSwitch)), sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)) + mat3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6607.6947)), bool(false))))), 0.0, 0.0, 0.0, 0.0))))))[0], (mat2(1.0) * (injectionSwitch))[1]), vec2(_GLF_IDENTITY(_GLF_IDENTITY((mat2(1.0) * _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_IDENTITY(((injectionSwitch))[0], (_GLF_IDENTITY(((injectionSwitch))[0], mix(float(((injectionSwitch))[0]), float(_GLF_FUZZED(5.6)), bool(false)))) + 0.0), ((injectionSwitch))[1]), vec2(_GLF_FUZZED(-951.503), _GLF_FUZZED(5.8)), bvec2(false, false)))), vec2(_GLF_IDENTITY(mat3((mat2(1.0) * (injectionSwitch)), sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0), (mat3((mat2(1.0) * (injectionSwitch)), sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)) + mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0, 0.0, 0.0)))), clamp(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), vec2(_GLF_IDENTITY(mat3((mat2(1.0) * (injectionSwitch)), sin(0.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 0.0), (mat3((mat2(1.0) * (injectionSwitch)), sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), clamp((mat2(1.0) * (injectionSwitch)), (mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), mix(vec2(_GLF_FUZZED(vec3(-1450.7138, 2.3, 9.2).r), _GLF_FUZZED(40.87)), vec2(((mat2(1.0) * (injectionSwitch)))[0], ((mat2(1.0) * (injectionSwitch)))[1]), bvec2(true, true))))), vec2(_GLF_IDENTITY(mat3((mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9.8) : 1.0)), (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9.8) : 1.0))) * 1.0)) * (injectionSwitch)), sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0), (mat3((mat2(1.0) * (injectionSwitch)), sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), vec2(_GLF_IDENTITY(mat3((mat2(1.0) * (injectionSwitch)), sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0), (mat3((mat2(1.0) * (injectionSwitch)), sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))[0], _GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[1], float(mat2x3((mat2(1.0) * (injectionSwitch))[1], 0.0, 1.0, 1.0, log(1.0), 1.0)))))))), bvec2(true, true)), mix(vec2(_GLF_FUZZED(-47.48), _GLF_FUZZED(8.9)), vec2(_GLF_IDENTITY(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), vec2(_GLF_IDENTITY(mat3((mat2(1.0) * (injectionSwitch)), sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0), (mat3(_GLF_IDENTITY((mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), (true ? (mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(injectionSwitch))), sin(0.0), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), clamp(_GLF_IDENTITY((mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), vec2(_GLF_IDENTITY(mat3((mat2(1.0) * (injectionSwitch)), sin(0.0), 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-639.076)), float(0.0), bool(true))), 0.0))) - _GLF_IDENTITY(0.0, (0.0) / determinant(mat2(1.0, 0.0, 0.0, cos(0.0))))), 0.0, 0.0, 0.0), _GLF_IDENTITY((mat3((mat2(1.0) * (injectionSwitch)), sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY((false ? _GLF_FUZZED(mat3(9.7, 103.417, -1.7, -9.9, 1.4, -194.800, -0.6, 4243.6057, -2.7)) : (mat3((mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))))), sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), (true ? _GLF_IDENTITY((false ? _GLF_FUZZED(mat3(9.7, 103.417, -1.7, -9.9, 1.4, -194.800, -0.6, 4243.6057, -2.7)) : (mat3((mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))))), sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), (_GLF_IDENTITY((false ? _GLF_FUZZED(mat3(9.7, 103.417, -1.7, -9.9, 1.4, -194.800, -0.6, 4243.6057, -2.7)) : (mat3((mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))))), sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), ((false ? _GLF_FUZZED(mat3(9.7, 103.417, -1.7, -9.9, 1.4, -194.800, -0.6, 4243.6057, -2.7)) : (mat3((mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))))), sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)) : _GLF_FUZZED(mat3(7842.2692, -5.2, 252.766, 1.2, -50.31, 767.250, 2.7, -63.64, 26.63)))))))), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), vec2(_GLF_IDENTITY(_GLF_IDENTITY(mat3(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(vec2(vec2((mat2(1.0) * (injectionSwitch)))), (_GLF_IDENTITY(vec2(vec2((mat2(1.0) * (injectionSwitch)))), vec2(mat4x3(vec2(vec2((mat2(1.0) * (injectionSwitch)))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)))) / vec2(1.0, 1.0))), sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(_GLF_IDENTITY((mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * vec2(1.0, 1.0)))), _GLF_IDENTITY(vec2(vec2((mat2(1.0) * (injectionSwitch)))), (_GLF_IDENTITY(vec2(vec2((mat2(1.0) * (injectionSwitch)))), vec2(mat4x3(vec2(vec2((mat2(1.0) * (injectionSwitch)))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)))) / vec2(1.0, 1.0))), sin(0.0), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 0.0, 0.0, 0.0, 0.0, 0.0))), (mat3((mat2(1.0) * (injectionSwitch)), sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY((_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))), vec2(_GLF_IDENTITY(mat3((_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0)) * (injectionSwitch)), sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0), (mat3((mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(sin(0.0), (false ? _GLF_FUZZED(-85.79) : sin(0.0))), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)) + mat3(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(atan(-801.252, -63.20)) : _GLF_IDENTITY(0.0, (0.0) * 1.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))[0], _GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), max((mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), min((mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY((mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(log2(injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))), max((_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0))), (mat2(1.0) * (injectionSwitch))))))))[1]), bvec2(true, true)))))), clamp(mix(vec2(_GLF_FUZZED(-47.48), _GLF_FUZZED(8.9)), vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), clamp(_GLF_IDENTITY((mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-70.65)), vec2(_GLF_FUZZED(158.113), (injectionSwitch)[1]), bvec2(false, true))))), vec2(_GLF_IDENTITY(vec2((mat2(1.0) * (injectionSwitch))), (true ? vec2((mat2(1.0) * (injectionSwitch))) : _GLF_FUZZED(injectionSwitch))))), (mat2(1.0) * (injectionSwitch)), (mat2(1.0) * (injectionSwitch))))[1]), bvec2(true, true)), mix(vec2(_GLF_FUZZED(-47.48), _GLF_FUZZED(8.9)), vec2((mat2(1.0) * (injectionSwitch))[0], (mat2(1.0) * (injectionSwitch))[1]), bvec2(true, true)), mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-47.48), mix(float(_GLF_FUZZED(-47.48)), float(_GLF_FUZZED(-800.832)), _GLF_IDENTITY(bool(false), ! (! (bool(false)))))), _GLF_FUZZED(8.9)), _GLF_IDENTITY(vec2((mat2(1.0) * (injectionSwitch))[0], (mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[1]), (vec2((mat2(1.0) * (injectionSwitch))[0], (mat2(_GLF_IDENTITY(1.0, (1.0) / 1.0)) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (_GLF_IDENTITY(true ? 0 : _GLF_FUZZED(_GLF_IDENTITY(-252, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(-252, 0 | _GLF_IDENTITY((-252), (false ? _GLF_FUZZED(-20014) : (-252)))), 1), (false ? _GLF_FUZZED(ivec2(-85538, 40329)) : ivec2(_GLF_IDENTITY(-252, 0 | (-252)), _GLF_IDENTITY(1, (1) * 1))))))), min(_GLF_IDENTITY(true ? 0 : _GLF_FUZZED(_GLF_IDENTITY(-252, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(-252, 0 | (-252)), 1), (false ? _GLF_FUZZED(ivec2(-85538, 40329)) : ivec2(_GLF_IDENTITY(-252, 0 | (-252)), 1)))))), (true ? 0 : _GLF_FUZZED(_GLF_IDENTITY(-252, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(-252, 0 | (-252)), 1), (false ? _GLF_FUZZED(ivec2(-85538, 40329)) : ivec2(_GLF_IDENTITY(-252, 0 | (-252)), 1))))))) - 0), _GLF_IDENTITY(true ? 0 : _GLF_FUZZED(_GLF_IDENTITY(-252, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(-252, 0 | (-252)), 1), (false ? _GLF_FUZZED(ivec2(-85538, 40329)) : ivec2(_GLF_IDENTITY(-252, 0 | (_GLF_IDENTITY(-252, (-252) >> (0 << _GLF_IDENTITY(int(3), int(3)))))), 1)))))), int(_GLF_IDENTITY(int(true ? 0 : _GLF_FUZZED(_GLF_IDENTITY(-252, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(-252, 0 | (-252)), 1), (false ? _GLF_FUZZED(ivec2(-85538, 40329)) : ivec2(_GLF_IDENTITY(_GLF_IDENTITY(-252, 0 | (-252)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(-252, 0 | (-252)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(-252, 0 | (-252)), clamp(_GLF_IDENTITY(-252, 0 | (-252)), _GLF_IDENTITY(-252, 0 | (-252)), _GLF_IDENTITY(-252, 0 | (-252)))))))))), 1))))))), int(ivec4(int(true ? 0 : _GLF_FUZZED(_GLF_IDENTITY(-252, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(-252, 0 | (-252)), 1), (false ? _GLF_FUZZED(ivec2(-85538, 40329)) : ivec2(_GLF_IDENTITY(-252, 0 | (-252)), 1))))))), 1, 1, 1)))))))))], injectionSwitch[1]))))[1])) - vec2(0.0, 0.0)), bvec2(true, true)))))).x))) + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))), ((subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1)))) + 0u) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)).y)))), bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), true, false, false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7.9, 74.29)))).y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(7.2)), vec2(_GLF_FUZZED(0.4), (injectionSwitch)[1]), bvec2(false, true))).y) && true))))), (bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))))) || false)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), true && (false || (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec2(_GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), true && (false || (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 atomicStore(buf[_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 0u, (0u ^ uint(_GLF_ONE(1.0, injectionSwitch.y))))))], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(subgroup_local_id + 1 < subgroup_size)
  {
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   subgroupAll(false);
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false)))))))
      return;
     return;
    }
   subgroupAll(true);
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), false || (! (_GLF_IDENTITY(false, (false) && true))))))))), bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
