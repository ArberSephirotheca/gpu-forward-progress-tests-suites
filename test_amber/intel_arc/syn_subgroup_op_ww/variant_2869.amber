#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_5 {
 int _f0;
 bool _f1;
 mat4x2 _f2;
} ;

struct _GLF_struct_4 {
 mat3x4 _f0;
 vec4 _f1;
 vec3 _f2;
 uvec4 _f3;
 ivec2 _f4;
} ;

struct _GLF_struct_6 {
 _GLF_struct_4 _f0;
 mat2x4 _f1;
 uvec2 _f2;
 uvec2 _f3;
 _GLF_struct_5 _f4;
 ivec4 _f5;
 mat4 _f6;
} ;

struct _GLF_struct_2 {
 float _f0;
 ivec3 _f1;
 float _f2;
 uvec4 _f3;
} ;

struct _GLF_struct_1 {
 int _f0;
 ivec3 _f1;
 mat2x3 _f2;
 vec3 _f3;
 ivec4 _f4;
 mat2x4 _f5;
} ;

struct _GLF_struct_0 {
 mat4x2 _f0;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 mat3x2 _f1;
 int _f2;
 _GLF_struct_1 _f3;
 ivec3 _f4;
 _GLF_struct_2 _f5;
 mat3x4 _f6;
} ;

struct _GLF_struct_7 {
 _GLF_struct_3 _f0;
 _GLF_struct_6 _f1;
 uint subgroup_size;
 bvec2 _f2;
 ivec2 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uvec2 GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         barrier();
        }
      }
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
        {
         barrier();
        }
      }
    }
   else
    {
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x = subgroup_id;
 _GLF_struct_7 _GLF_struct_replacement_7 = _GLF_struct_7(_GLF_struct_3(_GLF_struct_0(mat4x2(_GLF_IDENTITY(1.0, max(1.0, 1.0)))), mat3x2(1.0), _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, 0 | (1)))), _GLF_struct_1(1, ivec3(_GLF_IDENTITY(1, (false ? _GLF_FUZZED((-79713 >> 76975)) : 1))), mat2x3(1.0), vec3(1.0), ivec4(1), mat2x4(1.0)), ivec3(_GLF_IDENTITY(1, (1) >> 0)), _GLF_struct_2(1.0, ivec3(1), 1.0, _GLF_IDENTITY(uvec4(1u), (uvec4(1u)) | (uvec4(0u, 0u, 0u, 0u) | uvec4(0u, 0u, 0u, 0u)))), mat3x4(1.0)), _GLF_struct_6(_GLF_struct_4(mat3x4(_GLF_IDENTITY(1.0, min(1.0, 1.0))), _GLF_IDENTITY(vec4(1.0), vec4(mat4(vec4(1.0), 1.0, 1.0, determinant(mat3(_GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, _GLF_IDENTITY(exp(sin(0.0)), (exp(sin(0.0))) - 0.0), 0.0, 0.0), mat2(1.0) * (mat2(1.0, _GLF_IDENTITY(exp(sin(0.0)), (exp(sin(0.0))) - 0.0), 0.0, 0.0))))), 0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-81.91) : 0.0)), 0.0)), 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), 1.0, 0.0, _GLF_IDENTITY(0.0, float(float(0.0))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec3(1.0), uvec4(_GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, (1u) ^ 0u)))), ivec2(1)), mat2x4(1.0), _GLF_IDENTITY(uvec2(1u), (uvec2(1u)) | (uvec2(1u))), uvec2(1u), _GLF_struct_5(1, true, mat4x2(1.0)), ivec4(1), mat4(1.0)), gl_SubgroupSize, _GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), false))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), false)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), false)))), false, true))))), ivec2(1));
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       for(int _injected_loop_counter = _GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), 0 ^ (0))) >> 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
  }
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.x = subgroup_local_id;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.z = workgroup_size;
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))));
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, true)))))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 do
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.y = workgroup_id;
 uint workgroup_base = _GLF_IDENTITY(GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size, _GLF_IDENTITY(clamp(GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size, (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)) ^ (GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size)), uvec3(uvec4(_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size, (GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size) - uvec3(0u, 0u, 0u)), 1u))), _GLF_IDENTITY(GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size, uvec3(GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size[0], GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size[1], _GLF_IDENTITY(GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size, uvec3(0u, 0u, 0u) | (GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size))[2]))), ~ (~ (clamp(GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size, _GLF_IDENTITY(GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size, uvec3(uvec4(_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size, (GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size) - uvec3(0u, 0u, 0u)), 1u))), _GLF_IDENTITY(GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size, uvec3(_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size, ~ (~ (GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size)))[0], GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size[1], GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size[2]))))))).z * GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.y;
 do
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(-80640) : _injected_loop_counter)) < 1); _injected_loop_counter ++)
    {
     GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y = workgroup_base;
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(bvec3(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), false, true)))))))))))
  barrier();
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && true))
  barrier();
 uint subgroup_base = GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x * _GLF_struct_replacement_7.subgroup_size;
 uint virtual_gid = GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_base, 0u, 0u), (uvec3(subgroup_base, 0u, 0u)) - uvec3(0u, 0u, 0u)), min(_GLF_IDENTITY(uvec3(subgroup_base, 0u, 0u), (uvec3(subgroup_base, 0u, 0u)) - uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(subgroup_base, 0u, 0u), (uvec3(subgroup_base, 0u, 0u)) - _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (_GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size) : uvec3(0u, 0u, 0u)))))))), uvec3(1u, 1u, 1u) * (uvec3(0u, 0u, 0u))))))))))), 0u, 1u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(uint(uvec3(_GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(uvec3(subgroup_base, 0u, 0u), _GLF_IDENTITY(_GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), ((uvec3(subgroup_base, 0u, 0u))) << uvec3(0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u))))), (uvec3(_GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), ((uvec3(subgroup_base, 0u, 0u))) << uvec3(0u, 0u, 0u)))) | uvec3(0u, 0u, 0u)))) - uvec3(0u, 0u, 0u), (_GLF_IDENTITY(_GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), ((uvec3(subgroup_base, 0u, 0u))) << uvec3(0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u))))), (uvec3(_GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), ((uvec3(subgroup_base, 0u, 0u))) << uvec3(0u, 0u, 0u)))) | uvec3(0u, 0u, 0u)))) - uvec3(0u, 0u, 0u), (_GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), ((uvec3(subgroup_base, 0u, 0u))) << uvec3(0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u))))), (uvec3(_GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), ((uvec3(subgroup_base, 0u, 0u))) << uvec3(0u, 0u, 0u)))) | uvec3(0u, 0u, 0u)))) - uvec3(0u, 0u, 0u)) >> uvec3(0u, 0u, 0u))) >> (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)))))), 0u, 1u)), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), 1u, 0u)), 0u + (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(uvec3(subgroup_base, 0u, 0u), _GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), ((uvec3(_GLF_IDENTITY(subgroup_base, (subgroup_base) * 1u), 0u, 0u))) << uvec3(0u, 0u, 0u))), (uvec3(_GLF_IDENTITY((uvec3(subgroup_base, _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, ~ (~ (0u)))))), 0u)), _GLF_IDENTITY(((uvec3(subgroup_base, 0u, 0u))), (((uvec3(subgroup_base, 0u, 0u)))) + uvec3(0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u)) << uvec3(0u, 0u, 0u)))) | uvec3(_GLF_IDENTITY(0u, 0u + (0u)), 0u, _GLF_IDENTITY(0u, (1u ^ 1u) + (0u)))))) - _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(uvec4(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) >> uvec3(0u, 0u, 0u)), 0u)))) | (uvec3(0u, 0u, 0u)))))), 0u, 1u)), (uint(uvec3(_GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(uvec3(subgroup_base, 0u, 0u), _GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), ((uvec3(_GLF_IDENTITY(subgroup_base, (subgroup_base) * 1u), 0u, 0u))) << uvec3(0u, 0u, 0u))), (uvec3(_GLF_IDENTITY((uvec3(subgroup_base, _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, ~ (~ (0u)))))), 0u)), _GLF_IDENTITY(((uvec3(subgroup_base, 0u, 0u))), (((uvec3(subgroup_base, 0u, 0u)))) + uvec3(0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u)) << uvec3(0u, 0u, 0u)))) | uvec3(_GLF_IDENTITY(0u, 0u + (0u)), 0u, _GLF_IDENTITY(0u, (1u ^ 1u) + (0u)))))) - _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(uvec4(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) >> uvec3(0u, 0u, 0u)), 0u)))) | (uvec3(0u, 0u, 0u)))))), 0u, 1u))) | (uint(uvec3(_GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(uvec3(subgroup_base, 0u, 0u), _GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), ((uvec3(_GLF_IDENTITY(subgroup_base, (subgroup_base) * 1u), 0u, 0u))) << uvec3(0u, 0u, 0u))), (uvec3(_GLF_IDENTITY((uvec3(subgroup_base, _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, ~ (~ (0u)))))), 0u)), _GLF_IDENTITY(((uvec3(subgroup_base, 0u, 0u))), (((uvec3(subgroup_base, 0u, 0u)))) + uvec3(0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u)) << uvec3(0u, 0u, 0u)))) | uvec3(_GLF_IDENTITY(0u, 0u + (0u)), 0u, _GLF_IDENTITY(0u, (1u ^ 1u) + (0u)))))) - _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(uvec4(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) >> uvec3(0u, 0u, 0u)), 0u)))) | (uvec3(0u, 0u, 0u)))))), 0u, 1u)))), _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), min((_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), uint(0u))), max((1u << _GLF_IDENTITY(uint(0u), uint(0u))), (1u << _GLF_IDENTITY(uint(0u), uint(0u))))) >> _GLF_IDENTITY(uint(0u), uint(0u))), _GLF_IDENTITY(_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) ^ 0u))))))), (_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) ^ 0u))))))), ~ (~ (((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) ^ 0u))))))))))) ^ 0u), max(((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))))), 1u, 0u)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(uvec3(subgroup_base, 0u, 0u), _GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), ((uvec3(subgroup_base, 0u, 0u))) << uvec3(0u, 0u, 0u))), (uvec3(_GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), _GLF_IDENTITY(((uvec3(subgroup_base, 0u, 0u))) << uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) + (((_GLF_IDENTITY(uvec3(subgroup_base, 0u, 0u), max(uvec3(subgroup_base, 0u, 0u), uvec3(subgroup_base, 0u, 0u))))) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u), ~ (~ (uvec3(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u))))))))) | uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) | (0u)))))))) - _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u))))), 0u, 1u)), min(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(uvec3(subgroup_base, 0u, 0u), _GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), ((uvec3(subgroup_base, 0u, 0u))) << uvec3(0u, 0u, 0u))), (uvec3(_GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), _GLF_IDENTITY(((uvec3(subgroup_base, 0u, 0u))) << uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) + (((_GLF_IDENTITY(uvec3(subgroup_base, 0u, 0u), max(uvec3(subgroup_base, 0u, 0u), uvec3(subgroup_base, 0u, 0u))))) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u), ~ (~ (uvec3(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u))))))))) | uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) | (0u)))))))) - _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u))))), 0u, 1u)), clamp(uint(uvec3(_GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(uvec3(subgroup_base, 0u, 0u), _GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), ((uvec3(subgroup_base, 0u, 0u))) << uvec3(0u, 0u, 0u))), (uvec3(_GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), _GLF_IDENTITY(((uvec3(subgroup_base, 0u, 0u))) << uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) + (((_GLF_IDENTITY(uvec3(subgroup_base, 0u, 0u), max(uvec3(subgroup_base, 0u, 0u), uvec3(subgroup_base, 0u, 0u))))) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u), ~ (~ (uvec3(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u))))))))) | uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) | (0u)))))))) - _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u))))), 0u, 1u)), uint(uvec3(_GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(uvec3(subgroup_base, 0u, 0u), _GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), ((uvec3(subgroup_base, 0u, 0u))) << uvec3(0u, 0u, 0u))), (uvec3(_GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), _GLF_IDENTITY(((uvec3(subgroup_base, 0u, 0u))) << uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) + (((_GLF_IDENTITY(uvec3(subgroup_base, 0u, 0u), max(uvec3(subgroup_base, 0u, 0u), uvec3(subgroup_base, 0u, 0u))))) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u), ~ (~ (uvec3(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u))))))))) | uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) | (0u)))))))) - _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u))))), 0u, 1u)), uint(uvec3(_GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(uvec3(subgroup_base, 0u, 0u), _GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), ((uvec3(subgroup_base, 0u, 0u))) << uvec3(0u, 0u, 0u))), (uvec3(_GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), _GLF_IDENTITY(((uvec3(subgroup_base, 0u, 0u))) << uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) + (((_GLF_IDENTITY(uvec3(subgroup_base, 0u, 0u), max(uvec3(subgroup_base, 0u, 0u), uvec3(subgroup_base, 0u, 0u))))) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u), ~ (~ (uvec3(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u))))))))) | uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) | (0u)))))))) - _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u))))), 0u, 1u)))), uint(uvec3(_GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(uvec3(subgroup_base, 0u, 0u), _GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), ((uvec3(subgroup_base, 0u, 0u))) << uvec3(0u, 0u, 0u))), (uvec3(_GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), _GLF_IDENTITY(((uvec3(subgroup_base, 0u, 0u))) << uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) + (((_GLF_IDENTITY(uvec3(subgroup_base, 0u, 0u), max(uvec3(subgroup_base, 0u, 0u), uvec3(subgroup_base, 0u, 0u))))) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u), ~ (~ (uvec3(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u))))))))) | uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) | (0u)))))))) - _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u))))), 0u, 1u)))), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), 1u, 0u)), min(uint(uvec4(uint(uvec3(_GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(uvec3(subgroup_base, 0u, 0u), _GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), ((uvec3(subgroup_base, 0u, 0u))) << uvec3(0u, 0u, 0u))), min(uvec3(_GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), ((uvec3(subgroup_base, 0u, 0u))) << uvec3(0u, 0u, 0u))), uvec3(_GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), ((uvec3(subgroup_base, 0u, 0u))) << uvec3(0u, 0u, 0u))))), (uvec3(_GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), ((uvec3(subgroup_base, 0u, 0u))) << uvec3(0u, 0u, 0u)))) | uvec3(0u, 0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u)))))) - uvec3(0u, 0u, 0u)))), 0u, 1u)), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), 1u, 0u)), uint(uvec4(uint(uvec3(_GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_base, 0u, 0u), _GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), ((uvec3(subgroup_base, 0u, 0u))) << uvec3(0u, 0u, 0u))), (uvec3(_GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), ((uvec3(subgroup_base, 0u, 0u))) << uvec3(0u, 0u, 0u)))) | uvec3(0u, 0u, 0u)))) - uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(uvec4(_GLF_IDENTITY(uvec3(subgroup_base, 0u, 0u), _GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), ((uvec3(subgroup_base, 0u, 0u))) << uvec3(0u, 0u, 0u))), (uvec3(_GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), ((uvec3(subgroup_base, 0u, 0u))) << uvec3(0u, 0u, 0u)))) | uvec3(0u, 0u, 0u)))) - uvec3(0u, 0u, 0u)), uint(_GLF_ONE(1.0, injectionSwitch.y)))), (uvec3(uvec4(_GLF_IDENTITY(uvec3(subgroup_base, 0u, 0u), _GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), ((uvec3(subgroup_base, 0u, 0u))) << uvec3(0u, 0u, 0u))), (uvec3(_GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), ((uvec3(subgroup_base, 0u, 0u))) << uvec3(0u, 0u, 0u)))) | uvec3(0u, 0u, 0u)))) - uvec3(0u, 0u, 0u)), uint(_GLF_ONE(1.0, injectionSwitch.y))))) - uvec3(0u, 0u, 0u))))), 0u, 1u)), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(uvec3(_GLF_IDENTITY(uint(0u), uint(uvec2(uint(0u), 0u))), 0u, 1u))), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), 1u, 0u)))), uint(uvec4(uint(uvec3(_GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(uvec3(subgroup_base, 0u, 0u), _GLF_IDENTITY((uvec3(subgroup_base, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(181654u))), 0u)), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((uvec3(subgroup_base, _GLF_IDENTITY(0u, max(0u, 0u)), 0u)), ((uvec3(subgroup_base, 0u, 0u))) << uvec3(0u, 0u, 0u))), (uvec3(_GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), ((uvec3(subgroup_base, 0u, 0u))) << uvec3(0u, 0u, 0u)))) | uvec3(0u, 0u, 0u)))) - uvec3(0u, 0u, 0u)))), 0u, 1u)), ((_GLF_IDENTITY(1u, (1u) / 1u) << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), 1u, 0u)), uint(uvec4(uint(uvec3(_GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(uvec3(subgroup_base, 0u, 0u), _GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), ((uvec3(subgroup_base, 0u, 0u))) << uvec3(0u, 0u, 0u))), (uvec3(_GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), ((uvec3(subgroup_base, 0u, 0u))) << uvec3(0u, 0u, 0u)))) | uvec3(0u, 0u, 0u)))) - uvec3(0u, 0u, 0u)))), 0u, 1u)), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), 1u, 0u))), 0u | (_GLF_IDENTITY(clamp(_GLF_IDENTITY(uint(uvec4(uint(uvec3(_GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(uvec3(subgroup_base, 0u, 0u), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(subgroup_base, 0u, 0u), (uvec3(subgroup_base, 0u, 0u)) | uvec3(0u, 0u, 0u))), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), ((uvec3(subgroup_base, 0u, 0u))) << uvec3(0u, 0u, 0u))), (uvec3(_GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), ((uvec3(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), 0u, 0u))) << uvec3(0u, 0u, 0u)))) | uvec3(0u, 0u, 0u)))) - uvec3(0u, 0u, 0u)))), 0u, 1u)), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), 1u, 0u)), min(uint(uvec4(uint(uvec3(_GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(uvec3(subgroup_base, 0u, 0u), _GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((uvec3(_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u), 0u, 0u)), ((uvec3(subgroup_base, 0u, 0u))) << uvec3(0u, 0u, 0u))), (uvec3(_GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), ((uvec3(subgroup_base, 0u, 0u))) << uvec3(0u, 0u, 0u)))) | uvec3(0u, 0u, 0u))), (uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((uvec3(_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u), 0u, 0u)), ((uvec3(subgroup_base, 0u, 0u))) << uvec3(0u, 0u, 0u))), (uvec3(_GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), ((uvec3(subgroup_base, 0u, 0u))) << uvec3(0u, 0u, 0u)))) | uvec3(0u, 0u, 0u)))) | (uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((uvec3(_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u), 0u, 0u)), ((uvec3(subgroup_base, 0u, 0u))) << uvec3(0u, 0u, 0u))), (uvec3(_GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), ((uvec3(subgroup_base, 0u, 0u))) << uvec3(0u, 0u, 0u)))) | uvec3(0u, 0u, 0u)))))) - uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(0u, 0u + (0u)), 1u)), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), 1u, 0u)), uint(_GLF_IDENTITY(uvec4(uint(uvec3(_GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(uvec3(subgroup_base, 0u, 0u), _GLF_IDENTITY(_GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), (true ? (uvec3(subgroup_base, 0u, 0u)) : _GLF_FUZZED(GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size))), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), ((uvec3(subgroup_base, 0u, 0u))) << uvec3(0u, 0u, 0u))), (uvec3(_GLF_IDENTITY((uvec3(subgroup_base, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) ^ 0u))), ((uvec3(subgroup_base, 0u, 0u))) << uvec3(0u, 0u, 0u)))) | uvec3(0u, 0u, 0u)))) - uvec3(0u, 0u, 0u)))), 0u, 1u)), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), 1u, 0u), ~ (_GLF_IDENTITY(~ (uvec4(uint(uvec3(_GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(uvec3(subgroup_base, 0u, 0u), _GLF_IDENTITY(_GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), (true ? (uvec3(subgroup_base, 0u, 0u)) : _GLF_FUZZED(GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size))), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), ((uvec3(subgroup_base, 0u, 0u))) << uvec3(0u, 0u, 0u))), (uvec3(_GLF_IDENTITY((uvec3(subgroup_base, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) ^ 0u))), ((uvec3(subgroup_base, 0u, 0u))) << uvec3(0u, 0u, 0u)))) | uvec3(0u, 0u, 0u)))) - uvec3(0u, 0u, 0u)))), 0u, 1u)), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), 1u, 0u)), (~ (uvec4(uint(uvec3(_GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(uvec3(subgroup_base, 0u, 0u), _GLF_IDENTITY(_GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), (true ? (uvec3(subgroup_base, 0u, 0u)) : _GLF_FUZZED(GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size))), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), ((uvec3(subgroup_base, 0u, 0u))) << uvec3(0u, 0u, 0u))), (uvec3(_GLF_IDENTITY((uvec3(subgroup_base, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) ^ 0u))), ((uvec3(subgroup_base, 0u, 0u))) << uvec3(0u, 0u, 0u)))) | uvec3(0u, 0u, 0u)))) - uvec3(0u, 0u, 0u)))), 0u, 1u)), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), 1u, 0u))) - (uvec4(0u, 0u, 0u, 0u) ^ uvec4(0u, 0u, 0u, 0u)))))))), uint(uvec4(uint(uvec3(_GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_base, 0u, 0u), (_GLF_IDENTITY(uvec3(subgroup_base, 0u, 0u), uvec3(1u, 1u, 1u) * (uvec3(subgroup_base, 0u, 0u)))) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), ((uvec3(subgroup_base, 0u, 0u))) << uvec3(0u, 0u, 0u))), (uvec3(_GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), ((uvec3(subgroup_base, 0u, 0u))) << uvec3(0u, 0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))))))) | uvec3(0u, 0u, 0u)))) - uvec3(0u, 0u, 0u)))), 0u, 1u)), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), 1u, 0u)), uint(uvec4(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) << 0u), uint(_GLF_IDENTITY(uvec3(subgroup_base, 0u, 0u), _GLF_IDENTITY(_GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), ((uvec3(subgroup_base, 0u, 0u))) << uvec3(0u, 0u, 0u))), (uvec3(_GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), ((uvec3(subgroup_base, 0u, 0u))) << uvec3(0u, 0u, 0u)))) | uvec3(0u, 0u, 0u)))) - uvec3(0u, 0u, 0u), uvec3(uvec4(_GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), ((uvec3(subgroup_base, 0u, 0u))) << uvec3(0u, 0u, 0u))), (uvec3(_GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), ((uvec3(subgroup_base, 0u, 0u))) << uvec3(0u, 0u, 0u)))) | uvec3(0u, 0u, 0u)))) - uvec3(0u, 0u, 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)))))))), 0u, 1u)), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), 1u, 0u))), (clamp(_GLF_IDENTITY(uint(uvec4(uint(uvec3(_GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(uvec3(subgroup_base, 0u, 0u), _GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(uvec3(subgroup_base, 0u, 0u), (_GLF_IDENTITY(uvec3(subgroup_base, 0u, 0u), (uvec3(subgroup_base, 0u, 0u)) >> uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u))), _GLF_IDENTITY((_GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), ((uvec3(subgroup_base, 0u, 0u))) | uvec3(0u, 0u, 0u))), max(_GLF_IDENTITY((_GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), ((uvec3(subgroup_base, 0u, 0u))) | uvec3(0u, 0u, 0u))), max((_GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), ((uvec3(subgroup_base, 0u, 0u))) | uvec3(0u, 0u, 0u))), (_GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), ((uvec3(subgroup_base, 0u, 0u))) | uvec3(0u, 0u, 0u))))), (_GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), ((uvec3(subgroup_base, 0u, 0u))) | uvec3(0u, 0u, 0u))))) << uvec3(0u, 0u, 0u))), (uvec3(_GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), ((uvec3(subgroup_base, 0u, 0u))) << uvec3(0u, 0u, 0u)))) | uvec3(0u, 0u, 0u)))) - uvec3(0u, 0u, 0u)))), 0u, 1u)), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), 1u, 0u)), min(_GLF_IDENTITY(uint(uvec4(uint(uvec3(_GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(uvec3(subgroup_base, 0u, 0u), _GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), ((uvec3(subgroup_base, 0u, 0u))) << uvec3(0u, 0u, 0u))), (uvec3(_GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), _GLF_IDENTITY(((uvec3(subgroup_base, 0u, 0u))), clamp(((uvec3(subgroup_base, 0u, 0u))), ((uvec3(subgroup_base, 0u, 0u))), _GLF_IDENTITY(((uvec3(subgroup_base, 0u, 0u))), min(_GLF_IDENTITY(((uvec3(subgroup_base, 0u, 0u))), (((uvec3(subgroup_base, 0u, 0u)))) / uvec3(1u, 1u, 1u)), ((uvec3(subgroup_base, 0u, 0u))))))) << uvec3(0u, 0u, 0u)))) | uvec3(0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u)))))) - uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u)))), 0u, 1u)), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), min(_GLF_IDENTITY(uint(0u), (uint(0u)) / 1u), uint(0u))), uint(0u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u))), uint(0u))), 1u, 0u)), clamp(uint(uvec4(uint(uvec3(_GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(uvec3(subgroup_base, 0u, 0u), _GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), ((uvec3(subgroup_base, 0u, 0u))) << uvec3(0u, 0u, 0u))), (uvec3(_GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), _GLF_IDENTITY(((uvec3(subgroup_base, 0u, 0u))), clamp(((uvec3(subgroup_base, 0u, 0u))), ((uvec3(subgroup_base, 0u, 0u))), _GLF_IDENTITY(((uvec3(subgroup_base, 0u, 0u))), min(_GLF_IDENTITY(((uvec3(subgroup_base, 0u, 0u))), (((uvec3(subgroup_base, 0u, 0u)))) / uvec3(1u, 1u, 1u)), ((uvec3(subgroup_base, 0u, 0u))))))) << uvec3(0u, 0u, 0u)))) | uvec3(0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u)))))) - uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u)))), 0u, 1u)), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), min(_GLF_IDENTITY(uint(0u), (uint(0u)) / 1u), uint(0u))), uint(0u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u))), uint(0u))), 1u, 0u)), uint(uvec4(uint(uvec3(_GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(uvec3(subgroup_base, 0u, 0u), _GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), ((uvec3(subgroup_base, 0u, 0u))) << uvec3(0u, 0u, 0u))), (uvec3(_GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), _GLF_IDENTITY(((uvec3(subgroup_base, 0u, 0u))), clamp(((uvec3(subgroup_base, 0u, 0u))), ((uvec3(subgroup_base, 0u, 0u))), _GLF_IDENTITY(((uvec3(subgroup_base, 0u, 0u))), min(_GLF_IDENTITY(((uvec3(subgroup_base, 0u, 0u))), (((uvec3(subgroup_base, 0u, 0u)))) / uvec3(1u, 1u, 1u)), ((uvec3(subgroup_base, 0u, 0u))))))) << uvec3(0u, 0u, 0u)))) | uvec3(0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u)))))) - uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u)))), 0u, 1u)), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), min(_GLF_IDENTITY(uint(0u), (uint(0u)) / 1u), uint(0u))), uint(0u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u))), uint(0u))), 1u, 0u)), uint(uvec4(uint(uvec3(_GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(uvec3(subgroup_base, 0u, 0u), _GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), ((uvec3(subgroup_base, 0u, 0u))) << uvec3(0u, 0u, 0u))), (uvec3(_GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), _GLF_IDENTITY(((uvec3(subgroup_base, 0u, 0u))), clamp(((uvec3(subgroup_base, 0u, 0u))), ((uvec3(subgroup_base, 0u, 0u))), _GLF_IDENTITY(((uvec3(subgroup_base, 0u, 0u))), min(_GLF_IDENTITY(((uvec3(subgroup_base, 0u, 0u))), (((uvec3(subgroup_base, 0u, 0u)))) / uvec3(1u, 1u, 1u)), ((uvec3(subgroup_base, 0u, 0u))))))) << uvec3(0u, 0u, 0u)))) | uvec3(0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u)))))) - uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u)))), 0u, 1u)), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), min(_GLF_IDENTITY(uint(0u), (uint(0u)) / 1u), uint(0u))), uint(0u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u))), uint(0u))), 1u, 0u)))), uint(uvec4(uint(uvec3(_GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(uvec3(subgroup_base, 0u, 0u), _GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), ((uvec3(subgroup_base, 0u, 0u))) << uvec3(0u, 0u, 0u))), (uvec3(_GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), ((uvec3(subgroup_base, _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) << 0u))), 0u))) << uvec3(0u, 0u, 0u)))) | uvec3(0u, 0u, 0u)))) - uvec3(0u, _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) | (0u)))), 0u)))), 0u, 1u)), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (0u << _GLF_IDENTITY(uint(0u), uint(0u))) ^ (uint(0u))), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), 1u, 0u)))), uint(uvec4(uint(uvec3(_GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(uvec3(subgroup_base, 0u, 0u), _GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), ((uvec3(subgroup_base, 0u, 0u))) << uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))), (uvec3(_GLF_IDENTITY((uvec3(subgroup_base, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u) | 0u) : _GLF_FUZZED(subgroup_id))), 0u)), ((uvec3(subgroup_base, 0u, 0u))) << uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) - 0u), 0u)))) | uvec3(_GLF_IDENTITY(0u, 0u + (0u)), 0u, 0u)))) - uvec3(0u, 0u, 0u)))), 0u, 1u)), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), (true ? _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) | ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) : _GLF_FUZZED((workgroup_id ++))))), 1u, 0u)), _GLF_IDENTITY(uint(uvec4(uint(uvec3(_GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(uvec3(subgroup_base, 0u, 0u), _GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(uvec3(subgroup_base, 0u, 0u), (uvec3(subgroup_base, 0u, 0u)) - uvec3(0u, 0u, 0u))), ((uvec3(subgroup_base, 0u, 0u))) << uvec3(0u, 0u, 0u))), (uvec3(_GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), ((uvec3(subgroup_base, 0u, 0u))) << _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u))))))) | uvec3(0u, 0u, 0u)))) - uvec3(0u, 0u, 0u)))), 0u, 1u)), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), 1u, 0u)), 0u | (uint(uvec4(uint(uvec3(_GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(uvec3(subgroup_base, 0u, 0u), _GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(uvec3(subgroup_base, 0u, 0u), (uvec3(subgroup_base, 0u, 0u)) - uvec3(0u, 0u, 0u))), ((uvec3(subgroup_base, 0u, 0u))) << uvec3(0u, 0u, 0u))), (uvec3(_GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), ((uvec3(subgroup_base, 0u, 0u))) << _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u))))))) | uvec3(0u, 0u, 0u)))) - uvec3(0u, 0u, 0u)))), 0u, 1u)), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), 1u, 0u)))))) | (clamp(_GLF_IDENTITY(uint(uvec4(uint(uvec3(_GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(uvec3(subgroup_base, 0u, 0u), _GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), ((uvec3(subgroup_base, 0u, 0u))) << uvec3(0u, 0u, 0u))), (uvec3(_GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), ((uvec3(subgroup_base, 0u, _GLF_IDENTITY(0u, (0u) ^ 0u)))) << uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) ^ 0u))))) | uvec3(0u, 0u, 0u)))) - uvec3(0u, 0u, 0u)))), 0u, 1u)), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), 1u, 0u)), min(uint(uvec4(uint(uvec3(_GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_base, 0u, 0u), min(_GLF_IDENTITY(uvec3(subgroup_base, 0u, 0u), (uvec3(subgroup_base, 0u, 0u)) | uvec3(0u, 0u, 0u)), uvec3(subgroup_base, 0u, 0u))), _GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), ((uvec3(subgroup_base, 0u, 0u))) << uvec3(0u, _GLF_IDENTITY(0u, min(0u, 0u)), 0u))), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), ((uvec3(subgroup_base, 0u, 0u))) << uvec3(0u, 0u, 0u)), min(_GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), ((uvec3(subgroup_base, 0u, 0u))) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), ((uvec3(subgroup_base, 0u, 0u))) << uvec3(0u, 0u, 0u)))))) | uvec3(_GLF_IDENTITY(0u, (0u) | 0u), 0u, 0u)))) - uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) >> (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))))), 0u, 1u)), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), 1u, 0u)), uint(uvec4(uint(uvec3(_GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(uvec3(subgroup_base, 0u, 0u), _GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(uvec3(subgroup_base, 0u, 0u), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3(subgroup_base, 0u, 0u), max(uvec3(subgroup_base, 0u, 0u), uvec3(subgroup_base, 0u, 0u)))))), ((uvec3(subgroup_base, 0u, 0u))) << uvec3(0u, 0u, 0u))), (uvec3(_GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), ((uvec3(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), 0u, 0u))) << uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) >> 0u)))) * 1u), 0u)))) | uvec3(0u, 0u, 0u)))) - _GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u)))))), 0u, 1u)), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), 1u, 0u)))), uint(uvec4(uint(uvec3(_GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(uvec3(subgroup_base, 0u, 0u), _GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), ((uvec3(subgroup_base, 0u, _GLF_IDENTITY(0u, min(0u, 0u))))) << uvec3(0u, 0u, 0u))), (uvec3(_GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), ((uvec3(subgroup_base, 0u, 0u))) << uvec3(0u, 0u, 0u)))) | uvec3(0u, 0u, 0u)))) - uvec3(0u, 0u, 0u)))), 0u, 1u)), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), 1u * (uint(0u))), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), 1u, 0u)), uint(uvec4(uint(uvec3(_GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(uvec3(subgroup_base, 0u, 0u), _GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), ((uvec3(subgroup_base, 0u, 0u))) << uvec3(0u, 0u, 0u))), _GLF_IDENTITY((uvec3(_GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), ((uvec3(subgroup_base, 0u, 0u))) << uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY((uvec3(_GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), ((uvec3(subgroup_base, 0u, 0u))) << uvec3(0u, 0u, 0u)))), max((uvec3(_GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), ((uvec3(subgroup_base, 0u, 0u))) << uvec3(0u, 0u, 0u)))), (uvec3(_GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)), ((uvec3(subgroup_base, 0u, 0u))) << uvec3(0u, 0u, 0u))))))) / uvec3(1u, 1u, 1u)) | _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) * uvec3(1u, 1u, 1u))))) - uvec3(0u, 0u, 0u)))), 0u, 1u)), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) | 0u)) >> _GLF_IDENTITY(uint(0u), uint(0u))), 1u, 0u)))))))))), 0u | (uint(uvec4(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_base, 0u, _GLF_IDENTITY(0u, 0u ^ (0u))), (uvec3(subgroup_base, 0u, 0u)) - uvec3(0u, 0u, 0u)), (false ? _GLF_FUZZED((subgroup_id * GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size)) : _GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_base, 0u, _GLF_IDENTITY(0u, 0u ^ (0u))), (uvec3(subgroup_base, 0u, 0u)) - uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_base, 0u, _GLF_IDENTITY(0u, 0u ^ (0u))), (uvec3(subgroup_base, 0u, 0u)) - uvec3(0u, 0u, 0u)), clamp(_GLF_IDENTITY(uvec3(subgroup_base, 0u, _GLF_IDENTITY(0u, 0u ^ (0u))), (uvec3(subgroup_base, 0u, 0u)) - uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(subgroup_base, 0u, _GLF_IDENTITY(0u, 0u ^ (0u))), (uvec3(subgroup_base, 0u, 0u)) - uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(subgroup_base, 0u, _GLF_IDENTITY(0u, 0u ^ (0u))), (uvec3(subgroup_base, 0u, 0u)) - uvec3(0u, 0u, 0u))))) - uvec3(0u, 0u, 0u)))))), 0u, 1u)), max(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(uvec3(subgroup_base, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | 0u)) | (0u))), (uvec3(subgroup_base, 0u, 0u)) - _GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_base) : 0u)), (0u) >> 0u), 1u)), min(uint(uvec3(_GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(uvec3(subgroup_base, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | 0u)) | (0u))), (uvec3(subgroup_base, 0u, 0u)) - _GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_base) : 0u)), (0u) >> 0u), 1u)), uint(uvec3(_GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(uvec3(subgroup_base, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | 0u)) | (0u))), (uvec3(subgroup_base, 0u, 0u)) - _GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_base) : 0u)), (0u) >> 0u), 1u)))), uint(uvec3(_GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(uvec3(subgroup_base, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) << 0u)) >> 0u)), _GLF_IDENTITY((uvec3(subgroup_base, 0u, 0u)) - _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(uvec3((uvec3(subgroup_base, 0u, 0u)) - uvec3(0u, 0u, 0u))), max(uvec3(uvec3((uvec3(subgroup_base, 0u, 0u)) - uvec3(0u, 0u, 0u))), uvec3(uvec3((uvec3(subgroup_base, 0u, 0u)) - uvec3(0u, 0u, 0u))))))))), 0u, 1u)))), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, 0u | (0u))))), 1u, 0u)))))) + GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.x;
 uint next_virtual_gid = GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y + subgroup_base + ((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.x, (GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.x) - 0u) + 1, min(_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.x, (GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.x) - 0u) + 1, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size, uvec3(uvec4(GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size, 0u))).x, (GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.x) - 0u) + 1))) % _GLF_struct_replacement_7.subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false)))) || false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
    }
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter --)
    {
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false, false, true)), bool(bool(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false, false, true)))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.x % 2), (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.x % 2, 1u * (GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.x % 2))), 0u | ((GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.x % 2)))) | ((GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.x % 2))), (_GLF_IDENTITY(_GLF_IDENTITY((GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.x % 2), (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.x % 2, 1u * (GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.x % 2))), 0u | ((GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.x % 2)))) | ((GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.x % 2))), (_GLF_IDENTITY((GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.x % 2), (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.x % 2, 1u * (GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.x % 2))), 0u | ((GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.x % 2)))) | ((GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.x % 2)))) ^ 0u)) * uint(_GLF_ONE(1.0, injectionSwitch.y))), ((_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.x % 2, _GLF_IDENTITY(0u, (0u) >> 0u) ^ (_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.x % 2, (GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.x % 2) | 0u))))) >> 0u), max(_GLF_IDENTITY(_GLF_IDENTITY((GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.x % 2), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.x, _GLF_IDENTITY((true ? GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.x : _GLF_FUZZED(next_virtual_gid)), (true ? (true ? GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.x : _GLF_FUZZED(next_virtual_gid)) : _GLF_FUZZED(max(num_workgroup, subgroup_base))))) % 2), 0u | ((GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.x % 2)))), min((_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.x, (true ? GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.x : _GLF_FUZZED(next_virtual_gid))) % _GLF_IDENTITY(2, min(2, 2))), 0u | ((GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.x % 2)))), (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.x, (true ? GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.x : _GLF_FUZZED(next_virtual_gid))) % 2), 0u | ((GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.x % 2)))))) | ((GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.x % 2))), ((_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size, ~ (~ (GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size))).x % 2)) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY((GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.x % 2), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.x, uint(uvec3(GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.x, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))) % 2, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.x, uint(uvec3(GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.x, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))) % 2))), 0u | ((_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size, max(GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size, _GLF_IDENTITY(GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size, uvec3(1u, 1u, 1u) * (GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size))))), (~ (_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size, max(_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size, (GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size, uvec3(1u, 1u, 1u) * (GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size)))))) | uvec3(0u, 0u, 0u)))).x % 2)))) | ((GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.x % 2))), ((GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.x % 2)) >> 0u))) == 0)
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << (0 << _GLF_IDENTITY(int(1), int(1)))), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(_GLF_IDENTITY(0, (0) << (0 << _GLF_IDENTITY(int(1), int(1)))), (_GLF_IDENTITY(0, (0) << (0 << _GLF_IDENTITY(int(1), int(1))))) - 0))))) ^ (0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), (0 ^ (_GLF_IDENTITY(0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x)), min(0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_IDENTITY(int(_GLF_IDENTITY(0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x)), (0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x))) / 1)), (int(_GLF_IDENTITY(0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x)), (0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x))) / 1))) >> 0))))))) / 1)), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true) || (_GLF_IDENTITY(_injected_loop_counter != (_GLF_IDENTITY(_GLF_IDENTITY(0 ^ _GLF_IDENTITY((0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), clamp((0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), (0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(int(int((0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))), clamp(int(int((0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))), int(int((0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))), int(int(_GLF_IDENTITY((0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY((0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), max((0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), (0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))))) - 0)))))))), (0 ^ (0 ^ int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(9021.7014)), bool(false))))))))) / 1), max(_GLF_IDENTITY(0 ^ (0 ^ _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) | (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0 ^ (int(_GLF_ZERO(0.0, injectionSwitch.x))))))), (0 ^ (0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1), _GLF_IDENTITY(_GLF_IDENTITY(0 ^ (0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), (0 ^ (0 ^ int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x)))) / 1), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0) ^ (0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), (0 ^ (0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1), (_GLF_IDENTITY(0 ^ (0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), (0 ^ (0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1)) << int(_GLF_ZERO(0.0, injectionSwitch.x))), 1), (ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0 ^ (0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), (0 ^ (0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0 ^ (0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), (0 ^ (0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1), (_GLF_IDENTITY(0 ^ (0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), (0 ^ (0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1)) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(0 ^ (0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), (0 ^ (0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1), (_GLF_IDENTITY(0 ^ (0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), (0 ^ (0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1)) | (_GLF_IDENTITY(_GLF_IDENTITY(0 ^ (0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), (0 ^ (0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1), min(_GLF_IDENTITY(0 ^ (0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), (0 ^ (0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1), _GLF_IDENTITY(0 ^ (0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), (0 ^ (0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1))))), _GLF_IDENTITY(0 ^ (0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), (0 ^ (0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1))), (_GLF_IDENTITY(0 ^ (0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), (0 ^ (_GLF_IDENTITY(0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x)), (0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x))) + 0))) / 1)) << int(_GLF_ZERO(0.0, injectionSwitch.x))), 1)) >> ivec2(0, 0))))))), ! (! _GLF_IDENTITY((_injected_loop_counter != _GLF_IDENTITY((_GLF_IDENTITY(0 ^ (0 ^ int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)))), (0 ^ (0 ^ int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(1316.1528)), vec2(_GLF_FUZZED(329.355), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), injectionSwitch)).x)))) / 1)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0) ^ (0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), (0 ^ _GLF_IDENTITY((0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), min((0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((0 ^ int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x))))), int(ivec3((0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), 1, 1)))))) / 1)), 0 ^ ((_GLF_IDENTITY(0 ^ (0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((0 ^ (0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))), min((0 ^ (0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))), (0 ^ (0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))))) / 1))))) / _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), ~ (~ (int(_GLF_ONE(1.0, injectionSwitch.y))))), int(_GLF_ONE(1.0, injectionSwitch.y)))))), ! (! ((_injected_loop_counter != _GLF_IDENTITY((_GLF_IDENTITY(0 ^ (0 ^ int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)))), (0 ^ (0 ^ int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(1316.1528)), vec2(_GLF_FUZZED(329.355), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), injectionSwitch)).x)))) / 1)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0) ^ (0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), (0 ^ _GLF_IDENTITY((0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), min((0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((0 ^ int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x))))), int(ivec3((0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), 1, 1)))))) / 1)), 0 ^ ((_GLF_IDENTITY(0 ^ (0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((0 ^ (0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))), min((0 ^ (0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))), (0 ^ (0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))))) / 1))))) / _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), ~ (~ (int(_GLF_ONE(1.0, injectionSwitch.y))))), int(_GLF_ONE(1.0, injectionSwitch.y)))))))))))))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (false) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (false) || false), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (false) || false), true, false)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), true && ((_GLF_WRAPPED_IF_TRUE(true)))))))
        {
         barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     subgroupAll(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))) || false));
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         barrier();
        }
      }
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(2, 1 * (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, ~ (~ (2)))) / 1))), clamp(2, 2, _GLF_IDENTITY(_GLF_IDENTITY(2, ~ (~ (_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, 0 | (2)), 2, 2))))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, 2)), ~ (_GLF_IDENTITY(~ (2), ~ (~ (~ (2))))))))))), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     subgroupAll(false);
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec2(4, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))))), (_GLF_IDENTITY(4, (4) + 0)) | 0));
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec3(false, false, false))))))
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0)) || false); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))
    barrier();
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
