#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))) && true))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)), max(workgroup_size, workgroup_size)) * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u) * subgroup_size + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) << 0u, clamp(_GLF_IDENTITY((subgroup_local_id) << 0u, ((subgroup_local_id) << 0u) << 0u), (subgroup_local_id) << 0u, (subgroup_local_id) << 0u))), subgroup_local_id));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))), ! (! (bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), ! (! (! (false))))))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(7.2) : injectionSwitch.x))))), max(injectionSwitch.x, injectionSwitch.x))) - 0.0) : _GLF_FUZZED(5.5))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-4074.0642)), bool(false)))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(2343.4616)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) || false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(743.643))), injectionSwitch.y, injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_IDENTITY(uvec2((subgroup_local_id + 1), 0u), ~ (~ _GLF_IDENTITY((uvec2((subgroup_local_id + 1), 0u)), ~ (~ ((uvec2((subgroup_local_id + 1), 0u))))))))) % subgroup_size), max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_IDENTITY(uvec2((subgroup_local_id + _GLF_IDENTITY(1, (0 | 0) ^ (_GLF_IDENTITY(1, max(1, 1))))), 0u), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(uvec2((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), max(int(int(1)), _GLF_IDENTITY(int(int(1)), int(ivec3(int(int(1)), 1, 1))))))), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u))))) >> (190745u & 0u))), clamp(uvec2((subgroup_local_id + 1), _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u))))), min((_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u))))), _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u))))), ((_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u)))), (true ? _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u)))) : _GLF_FUZZED(workgroup_base))))) ^ 0u))) >> (190745u & _GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : 0u)), (0u) - 0u)))), _GLF_IDENTITY(uvec2((subgroup_local_id + 1), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u))))) >> (_GLF_IDENTITY(_GLF_IDENTITY(190745u & 0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(190745u & 0u, uint(uvec2(_GLF_IDENTITY(190745u & 0u, max(190745u & 0u, 190745u & 0u)), 0u)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(~ (_GLF_IDENTITY(190745u & 0u, uint(uvec2(_GLF_IDENTITY(190745u & 0u, max(190745u & 0u, 190745u & 0u)), 0u)))), 1u, 0u), (uvec3(~ (_GLF_IDENTITY(190745u & 0u, uint(uvec2(_GLF_IDENTITY(190745u & 0u, max(190745u & 0u, 190745u & 0u)), 0u)))), 1u, 0u)) | (uvec3(~ (_GLF_IDENTITY(190745u & 0u, uint(uvec2(_GLF_IDENTITY(190745u & 0u, max(190745u & 0u, 190745u & 0u)), 0u)))), 1u, 0u)))), (uint(_GLF_IDENTITY(uvec3(~ (_GLF_IDENTITY(190745u & 0u, uint(uvec2(_GLF_IDENTITY(190745u & 0u, max(190745u & 0u, 190745u & 0u)), 0u)))), 1u, 0u), (uvec3(~ (_GLF_IDENTITY(190745u & 0u, uint(uvec2(_GLF_IDENTITY(190745u & 0u, max(190745u & 0u, 190745u & 0u)), 0u)))), 1u, 0u)) | (uvec3(~ (_GLF_IDENTITY(190745u & 0u, uint(uvec2(_GLF_IDENTITY(190745u & 0u, max(190745u & 0u, 190745u & 0u)), 0u)))), 1u, 0u))))) | (uint(_GLF_IDENTITY(uvec3(~ (_GLF_IDENTITY(190745u & 0u, uint(uvec2(_GLF_IDENTITY(190745u & 0u, max(190745u & 0u, 190745u & 0u)), 0u)))), 1u, 0u), (uvec3(~ (_GLF_IDENTITY(190745u & 0u, uint(uvec2(_GLF_IDENTITY(190745u & 0u, max(190745u & 0u, 190745u & 0u)), 0u)))), 1u, 0u)) | (uvec3(~ (_GLF_IDENTITY(190745u & 0u, uint(uvec2(_GLF_IDENTITY(190745u & 0u, max(190745u & 0u, 190745u & 0u)), 0u)))), 1u, 0u))))))))), (_GLF_IDENTITY(190745u & 0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(190745u & 0u, uint(uvec2(_GLF_IDENTITY(190745u & 0u, max(190745u & 0u, 190745u & 0u)), 0u)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(~ (_GLF_IDENTITY(190745u & 0u, uint(uvec2(_GLF_IDENTITY(190745u & 0u, max(190745u & 0u, 190745u & 0u)), 0u)))), 1u, 0u), (uvec3(~ (_GLF_IDENTITY(190745u & 0u, uint(uvec2(_GLF_IDENTITY(190745u & 0u, max(190745u & 0u, 190745u & 0u)), 0u)))), 1u, 0u)) | (uvec3(~ (_GLF_IDENTITY(190745u & 0u, uint(uvec2(_GLF_IDENTITY(190745u & 0u, max(190745u & 0u, 190745u & 0u)), 0u)))), 1u, 0u)))), (uint(_GLF_IDENTITY(uvec3(~ (_GLF_IDENTITY(190745u & 0u, uint(uvec2(_GLF_IDENTITY(190745u & 0u, max(190745u & 0u, 190745u & 0u)), 0u)))), 1u, 0u), (uvec3(~ (_GLF_IDENTITY(190745u & 0u, uint(uvec2(_GLF_IDENTITY(190745u & 0u, max(190745u & 0u, 190745u & 0u)), 0u)))), 1u, 0u)) | (uvec3(~ (_GLF_IDENTITY(190745u & 0u, uint(uvec2(_GLF_IDENTITY(190745u & 0u, max(190745u & 0u, 190745u & 0u)), 0u)))), 1u, 0u))))) | (uint(_GLF_IDENTITY(uvec3(~ (_GLF_IDENTITY(190745u & 0u, uint(uvec2(_GLF_IDENTITY(190745u & 0u, max(190745u & 0u, 190745u & 0u)), 0u)))), 1u, 0u), (uvec3(~ (_GLF_IDENTITY(190745u & 0u, uint(uvec2(_GLF_IDENTITY(190745u & 0u, max(190745u & 0u, 190745u & 0u)), 0u)))), 1u, 0u)) | (uvec3(~ (_GLF_IDENTITY(190745u & 0u, uint(uvec2(_GLF_IDENTITY(190745u & 0u, max(190745u & 0u, 190745u & 0u)), 0u)))), 1u, 0u)))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(190745u & 0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(190745u & 0u, uint(uvec2(_GLF_IDENTITY(190745u & 0u, max(190745u & 0u, 190745u & 0u)), 0u)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(~ (_GLF_IDENTITY(190745u & 0u, uint(uvec2(_GLF_IDENTITY(190745u & 0u, max(190745u & 0u, 190745u & 0u)), 0u)))), 1u, 0u), (uvec3(~ (_GLF_IDENTITY(190745u & 0u, uint(uvec2(_GLF_IDENTITY(190745u & 0u, max(190745u & 0u, 190745u & 0u)), 0u)))), 1u, 0u)) | (uvec3(~ (_GLF_IDENTITY(190745u & 0u, uint(uvec2(_GLF_IDENTITY(190745u & 0u, max(190745u & 0u, 190745u & 0u)), 0u)))), 1u, 0u)))), (uint(_GLF_IDENTITY(uvec3(~ (_GLF_IDENTITY(190745u & 0u, uint(uvec2(_GLF_IDENTITY(190745u & 0u, max(190745u & 0u, 190745u & 0u)), 0u)))), 1u, 0u), (uvec3(~ (_GLF_IDENTITY(190745u & 0u, uint(uvec2(_GLF_IDENTITY(190745u & 0u, max(190745u & 0u, 190745u & 0u)), 0u)))), 1u, 0u)) | (uvec3(~ (_GLF_IDENTITY(190745u & 0u, uint(uvec2(_GLF_IDENTITY(190745u & 0u, max(190745u & 0u, 190745u & 0u)), 0u)))), 1u, 0u))))) | (uint(_GLF_IDENTITY(uvec3(~ (_GLF_IDENTITY(190745u & 0u, uint(uvec2(_GLF_IDENTITY(190745u & 0u, max(190745u & 0u, 190745u & 0u)), 0u)))), 1u, 0u), (uvec3(~ (_GLF_IDENTITY(190745u & 0u, uint(uvec2(_GLF_IDENTITY(190745u & 0u, max(190745u & 0u, 190745u & 0u)), 0u)))), 1u, 0u)) | (uvec3(~ (_GLF_IDENTITY(190745u & 0u, uint(uvec2(_GLF_IDENTITY(190745u & 0u, max(190745u & 0u, 190745u & 0u)), 0u)))), 1u, 0u))))))))), min(_GLF_IDENTITY(190745u & 0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(190745u & 0u, uint(uvec2(_GLF_IDENTITY(190745u & 0u, max(190745u & 0u, 190745u & 0u)), 0u)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(~ (_GLF_IDENTITY(190745u & 0u, uint(uvec2(_GLF_IDENTITY(190745u & 0u, max(190745u & 0u, 190745u & 0u)), 0u)))), 1u, 0u), (uvec3(~ (_GLF_IDENTITY(190745u & 0u, uint(uvec2(_GLF_IDENTITY(190745u & 0u, max(190745u & 0u, 190745u & 0u)), 0u)))), 1u, 0u)) | (uvec3(~ (_GLF_IDENTITY(190745u & 0u, uint(uvec2(_GLF_IDENTITY(190745u & 0u, max(190745u & 0u, 190745u & 0u)), 0u)))), 1u, 0u)))), (uint(_GLF_IDENTITY(uvec3(~ (_GLF_IDENTITY(190745u & 0u, uint(uvec2(_GLF_IDENTITY(190745u & 0u, max(190745u & 0u, 190745u & 0u)), 0u)))), 1u, 0u), (uvec3(~ (_GLF_IDENTITY(190745u & 0u, uint(uvec2(_GLF_IDENTITY(190745u & 0u, max(190745u & 0u, 190745u & 0u)), 0u)))), 1u, 0u)) | (uvec3(~ (_GLF_IDENTITY(190745u & 0u, uint(uvec2(_GLF_IDENTITY(190745u & 0u, max(190745u & 0u, 190745u & 0u)), 0u)))), 1u, 0u))))) | (uint(_GLF_IDENTITY(uvec3(~ (_GLF_IDENTITY(190745u & 0u, uint(uvec2(_GLF_IDENTITY(190745u & 0u, max(190745u & 0u, 190745u & 0u)), 0u)))), 1u, 0u), (uvec3(~ (_GLF_IDENTITY(190745u & 0u, uint(uvec2(_GLF_IDENTITY(190745u & 0u, max(190745u & 0u, 190745u & 0u)), 0u)))), 1u, 0u)) | (uvec3(~ (_GLF_IDENTITY(190745u & 0u, uint(uvec2(_GLF_IDENTITY(190745u & 0u, max(190745u & 0u, 190745u & 0u)), 0u)))), 1u, 0u))))))))), _GLF_IDENTITY(190745u & 0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(190745u & 0u, uint(uvec2(_GLF_IDENTITY(190745u & 0u, max(190745u & 0u, 190745u & 0u)), 0u)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(~ (_GLF_IDENTITY(190745u & 0u, uint(uvec2(_GLF_IDENTITY(190745u & 0u, max(190745u & 0u, 190745u & 0u)), 0u)))), 1u, 0u), (uvec3(~ (_GLF_IDENTITY(190745u & 0u, uint(uvec2(_GLF_IDENTITY(190745u & 0u, max(190745u & 0u, 190745u & 0u)), 0u)))), 1u, 0u)) | (uvec3(~ (_GLF_IDENTITY(190745u & 0u, uint(uvec2(_GLF_IDENTITY(190745u & 0u, max(190745u & 0u, 190745u & 0u)), 0u)))), 1u, 0u)))), (uint(_GLF_IDENTITY(uvec3(~ (_GLF_IDENTITY(190745u & 0u, uint(uvec2(_GLF_IDENTITY(190745u & 0u, max(190745u & 0u, 190745u & 0u)), 0u)))), 1u, 0u), (uvec3(~ (_GLF_IDENTITY(190745u & 0u, uint(uvec2(_GLF_IDENTITY(190745u & 0u, max(190745u & 0u, 190745u & 0u)), 0u)))), 1u, 0u)) | (uvec3(~ (_GLF_IDENTITY(190745u & 0u, uint(uvec2(_GLF_IDENTITY(190745u & 0u, max(190745u & 0u, 190745u & 0u)), 0u)))), 1u, 0u))))) | (uint(_GLF_IDENTITY(uvec3(~ (_GLF_IDENTITY(190745u & 0u, uint(uvec2(_GLF_IDENTITY(190745u & 0u, max(190745u & 0u, 190745u & 0u)), 0u)))), 1u, 0u), (uvec3(~ (_GLF_IDENTITY(190745u & 0u, uint(uvec2(_GLF_IDENTITY(190745u & 0u, max(190745u & 0u, 190745u & 0u)), 0u)))), 1u, 0u)) | (uvec3(~ (_GLF_IDENTITY(190745u & 0u, uint(uvec2(_GLF_IDENTITY(190745u & 0u, max(190745u & 0u, 190745u & 0u)), 0u)))), 1u, 0u)))))))))))))))), min(uvec2((subgroup_local_id + 1), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), uint(uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u, (0u | 0u)))))))))) >> (190745u & 0u))), _GLF_IDENTITY(uvec2((subgroup_local_id + 1), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u))))) >> (190745u & 0u))), min(uvec2(_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(21.03), _GLF_FUZZED(vec3(711.970, -5.4, 5.2).p)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x)) ^ ((subgroup_local_id + 1))), _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u))))), clamp((_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u)), clamp(0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u))))), _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u))))), ((_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u)))))) << 0u))) >> (190745u & 0u))), uvec2((subgroup_local_id + 1), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), clamp(_GLF_IDENTITY(0u, min(0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), clamp(_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), max(_GLF_IDENTITY(min(0u, 0u), (min(0u, 0u)) - 0u), _GLF_IDENTITY(min(0u, 0u), 1u * (min(0u, 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), clamp(_GLF_IDENTITY(0u, min(0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (_GLF_IDENTITY(0u, min(0u, 0u))) | (_GLF_IDENTITY(0u, min(0u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), min(_GLF_IDENTITY(0u, min(0u, 0u)), _GLF_IDENTITY(0u, min(0u, 0u)))))), (_GLF_IDENTITY(0u, min(0u, 0u))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) ^ 0u))), (_GLF_IDENTITY(0u, min(0u, 0u))) - 0u))), _GLF_IDENTITY(0u, min(0u, 0u))))))) >> (190745u & 0u))))))), uvec2((subgroup_local_id + 1), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u))))) >> _GLF_IDENTITY((_GLF_IDENTITY(190745u & 0u, (190745u & 0u) | (190745u & 0u))), ~ (~ ((_GLF_IDENTITY(190745u & 0u, (190745u & 0u) | (190745u & 0u))))))))))), ((_GLF_IDENTITY(uvec2((subgroup_local_id + 1), _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size))), 0u)))), (false ? _GLF_FUZZED((63179u | subgroup_local_id)) : _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size))), 0u))))))) >> (190745u & 0u))), clamp(uvec2((subgroup_local_id + 1), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u))))) >> (190745u & 0u))), _GLF_IDENTITY(uvec2((subgroup_local_id + 1), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u))))) >> _GLF_IDENTITY((190745u & 0u), (_GLF_IDENTITY((190745u & 0u), min(_GLF_IDENTITY((190745u & 0u), 0u ^ ((190745u & 0u))), (190745u & 0u)))) / 1u))), min(uvec2((subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_base) : 0u)), min(0u, 0u))))) >> (190745u & 0u))), _GLF_IDENTITY(uvec2((subgroup_local_id + 1), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u))))) >> (190745u & 0u))), min(uvec2((subgroup_local_id + 1), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, _GLF_IDENTITY(0u, min(0u, 0u))))) >> (190745u & 0u))), uvec2((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) | 0u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 1), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, ((1u & 1u) ^ 1u) ^ (_GLF_IDENTITY(0u, (0u) | (0u)))), 0u))))) >> (190745u & 0u))))))), uvec2((subgroup_local_id + 1), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u))))) >> (190745u & 0u))))))) | uvec2(0u, 0u)))))) % subgroup_size), ~ (~ (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, _GLF_IDENTITY(1u, (1u) | (1u)), 0u, 0u))), _GLF_IDENTITY((subgroup_id * subgroup_size) / 1u, 0u ^ ((subgroup_id * subgroup_size) / 1u))) + (_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_IDENTITY(uvec2((subgroup_local_id + 1), 0u), ~ (~ (uvec2((subgroup_local_id + 1), 0u)))))) % subgroup_size)))), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2((subgroup_local_id + 1), 0u), ~ (~ (_GLF_IDENTITY(uvec2((subgroup_local_id + 1), 0u), (false ? _GLF_FUZZED(uvec2(169060u, 60329u)) : uvec2((subgroup_local_id + 1), 0u))))))), uint(uvec2(uint(_GLF_IDENTITY(uvec2((subgroup_local_id + 1), 0u), ~ (~ (_GLF_IDENTITY(uvec2((subgroup_local_id + 1), 0u), (false ? _GLF_FUZZED(uvec2(169060u, 60329u)) : uvec2((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1), 0u))))))), 0u)))) % subgroup_size), (true ? workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2((subgroup_local_id + 1), 0u), uvec2(_GLF_IDENTITY(uvec2(uvec2((subgroup_local_id + 1), 0u)), (uvec2(uvec2((subgroup_local_id + 1), 0u))) / uvec2(1u, 1u)))), ~ (~ (uvec2((subgroup_local_id + 1), 0u)))))) % subgroup_size) : _GLF_FUZZED(subgroup_local_id)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(54.74)), float(0.0), bool(true))))), dot(vec3(1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(255.149)), float(1.0), bool(true)))), vec3(0.0, 1.0, 0.0))), 0.0, 1.0, 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), (true ? vec4(0.0, 0.0, 1.0, 0.0) : _GLF_FUZZED(vec4(-697.333, 59.03, -9417.9915, 1282.7506))))), dot(vec4(_GLF_IDENTITY(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, 1.0), (true ? _GLF_IDENTITY(vec3(1.0, 0.0, 1.0), min(vec3(1.0, 0.0, 1.0), vec3(1.0, 0.0, 1.0))) : _GLF_FUZZED(tan(vec3(5522.1878, 7.6, -715.337))))), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, 1.0), (true ? _GLF_IDENTITY(vec3(1.0, 0.0, 1.0), min(vec3(1.0, 0.0, 1.0), vec3(1.0, 0.0, 1.0))) : _GLF_FUZZED(tan(vec3(5522.1878, 7.6, -715.337))))), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0))), clamp(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, 1.0), (true ? _GLF_IDENTITY(vec3(1.0, 0.0, 1.0), min(vec3(1.0, 0.0, 1.0), vec3(1.0, 0.0, 1.0))) : _GLF_FUZZED(tan(vec3(5522.1878, 7.6, -715.337))))), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0))), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, 1.0), (true ? _GLF_IDENTITY(vec3(1.0, 0.0, 1.0), min(vec3(1.0, 0.0, 1.0), vec3(1.0, 0.0, 1.0))) : _GLF_FUZZED(tan(vec3(5522.1878, 7.6, -715.337))))), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0))), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, 1.0), (true ? _GLF_IDENTITY(vec3(1.0, 0.0, 1.0), min(vec3(1.0, 0.0, 1.0), vec3(1.0, 0.0, 1.0))) : _GLF_FUZZED(tan(vec3(5522.1878, 7.6, -715.337))))), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0))))), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, 1.0), (true ? _GLF_IDENTITY(vec3(1.0, 0.0, 1.0), min(vec3(1.0, 0.0, 1.0), vec3(1.0, 0.0, 1.0))) : _GLF_FUZZED(tan(vec3(5522.1878, 7.6, -715.337))))), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0))))), 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), log(1.0), 0.0), transpose(transpose(mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), log(1.0), 0.0)))))).y))), true && (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(((injectionSwitch) * mat2(1.0)) * mat2(1.0), ((_GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))) * mat2(1.0)) - sqrt(vec2(0.0, 0.0))))))).x > injectionSwitch.y))), (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)))), _GLF_IDENTITY((! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))) * (mat2(1.0) * (injectionSwitch)), clamp(mat2(1.0) * (mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(mat2(1.0) * (mat2(1.0) * (injectionSwitch)), mix(vec2(_GLF_FUZZED(-4.7), _GLF_FUZZED(4.1)), vec2((mat2(1.0) * (_GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))) * (injectionSwitch)))[0], (mat2(_GLF_IDENTITY(1.0, (1.0) - log(1.0))) * (mat2(_GLF_IDENTITY(1.0, (1.0) + 0.0)) * (injectionSwitch)))[1]), bvec2(true, true))), mat2(1.0) * (mat2(1.0) * (injectionSwitch)))))).x > injectionSwitch.y))))) && true, ((! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))) * (mat2(1.0) * (injectionSwitch)), clamp(mat2(1.0) * (mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(mat2(1.0) * (mat2(1.0) * (injectionSwitch)), mix(vec2(_GLF_FUZZED(-4.7), _GLF_FUZZED(4.1)), vec2((mat2(1.0) * (_GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))) * (injectionSwitch)))[0], (mat2(_GLF_IDENTITY(1.0, (1.0) - log(1.0))) * (mat2(_GLF_IDENTITY(1.0, (1.0) + 0.0)) * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(333.897), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(30.17)), bvec2(true, false))))))[1]), bvec2(true, true))), mat2(1.0) * (mat2(1.0) * (injectionSwitch)))))).x > injectionSwitch.y))))) && true) && true)), (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (_GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), sin(vec2(0.0, 0.0)) + ((injectionSwitch))))), mat2(1.0) * (mat2(1.0) * _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), sin(vec2(0.0, 0.0)) + ((injectionSwitch)))))))))).x > injectionSwitch.y))))) || false)))) && true))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))), true && (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))) * (mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y))))))) && true)))))))))
  barrier();
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((44042 * -33873)) : 1)))) < _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), _GLF_IDENTITY(bool(bvec4(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), true, true, false)), _GLF_IDENTITY(bool(bvec4(bool(bvec4(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), true, true, false)), false, true, false)), false || (bool(bvec4(bool(bvec4(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1 < _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), clamp(~ (subgroup_size), ~ (subgroup_size), ~ (subgroup_size))))), subgroup_size)), true, true, false)), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), true, false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], 1.0 * (injectionSwitch[1])))).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0))) && (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ((false) || false) || _GLF_IDENTITY(false, false || (false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))), true, true)), (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))), true, true))) || false)))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, 0 + (4)), 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))) && true))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   subgroupAll(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, (false) || false))))), false || (false)));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), bool(bvec4(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec4(injectionSwitch.x, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-3407.1315) : float(vec4(injectionSwitch.x, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))))) > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, _GLF_IDENTITY(clamp(2, 2, 2), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(2, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(2, (false ? _GLF_FUZZED(34162) : _GLF_IDENTITY(2, ~ (~ (2))))))), 2, 2), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(clamp(2, _GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, int(ivec2(2, 0))))), 2), 1, 1, 0), (ivec4(clamp(2, 2, 2), 1, 1, 0)) | (ivec4(_GLF_IDENTITY(clamp(2, 2, 2), min(_GLF_IDENTITY(clamp(2, 2, _GLF_IDENTITY(2, int(ivec4(2, _GLF_IDENTITY(1, (1) - 0), 1, int(_GLF_ONE(1.0, injectionSwitch.y)))))), (clamp(2, 2, 2)) | (clamp(2, 2, 2))), clamp(2, 2, 2))), 1, 1, 0)))), (int(ivec4(clamp(2, 2, 2), 1, 1, 0))) | _GLF_IDENTITY((int(ivec4(clamp(2, 2, _GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, min(2, 2)), _GLF_IDENTITY(2, clamp(2, 2, 2)), 2))), 1, 1, 0))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((int(ivec4(clamp(2, 2, 2), 1, 1, 0))), 0 + ((int(ivec4(clamp(2, 2, 2), 1, 1, 0)))))), (_GLF_IDENTITY(1, (1) / 1) ^ 1) | (~ (_GLF_IDENTITY((int(ivec4(clamp(2, 2, 2), 1, 1, 0))), 0 + ((int(ivec4(clamp(2, 2, 2), 1, 1, 0))))))))))))) | 0))), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), true))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-871.012)), bool(false))) : _GLF_IDENTITY(_GLF_FUZZED(5.8), mix(float(_GLF_FUZZED(5.8)), float(_GLF_FUZZED(float(5251u))), bool(false))))) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(-871.012, (-871.012) / 1.0))), bool(false))) : _GLF_FUZZED(5.8))) > injectionSwitch.y))) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (_GLF_IDENTITY(false, ! (! (false))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, _GLF_IDENTITY(false, ! (! (false))))), (bool(bvec4(false, false, true, false))) && true))))
      barrier();
     barrier();
    }
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(82.11)), bool(false))), injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3855.6159), _GLF_FUZZED(-221.197)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, max(injectionSwitch.y, injectionSwitch.y))), max(clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(82.11)), bool(false))), injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3855.6159), _GLF_FUZZED(-221.197)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, max(injectionSwitch.y, injectionSwitch.y))), clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(82.11)), bool(false))), injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3855.6159), _GLF_FUZZED(-221.197)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, max(injectionSwitch.y, injectionSwitch.y))))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(82.11)), bool(false))), injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3855.6159), _GLF_FUZZED(-221.197)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, max(injectionSwitch.y, injectionSwitch.y)), float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3855.6159), _GLF_FUZZED(-221.197)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, sin(0.0), 0.0, 0.0, 0.0, sin(0.0), sin(0.0), 1.0)))), max(clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(82.11)), bool(false))), injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3855.6159), _GLF_FUZZED(-221.197)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, max(injectionSwitch.y, injectionSwitch.y))), clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(82.11)), bool(false))), injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3855.6159), _GLF_FUZZED(-221.197)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3855.6159), _GLF_FUZZED(-221.197)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3855.6159), _GLF_FUZZED(-221.197)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).y, max(injectionSwitch.y, injectionSwitch.y)))))))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), true && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 0.0)))) / 1.0)), ((injectionSwitch.x > injectionSwitch.y)) || false))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
