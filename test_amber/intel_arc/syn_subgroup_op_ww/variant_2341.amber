#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_14 {
 ivec4 _f0;
 uvec4 _f1;
 mat2x4 _f2;
 ivec3 _f3;
 vec4 _f4;
 mat2 _f5;
 mat4x3 _f6;
} ;

struct _GLF_struct_13 {
 bvec4 _f0;
 vec2 _f1;
 bvec2 _f2;
 int _f3;
} ;

struct _GLF_struct_15 {
 mat3x4 _f0;
 _GLF_struct_13 _f1;
 _GLF_struct_14 _f2;
 bool _f3;
} ;

struct _GLF_struct_16 {
 _GLF_struct_15 _f0;
 mat4 _f1;
 uint workgroup_base;
 vec3 _f2;
 vec3 _f3;
} ;

struct _GLF_struct_10 {
 mat4x2 _f0;
 mat4 _f1;
 uint workgroup_size;
 vec3 _f2;
 vec4 _f3;
 bvec2 _f4;
} ;

struct _GLF_struct_11 {
 float _f0;
 _GLF_struct_10 _f1;
 vec3 _f2;
} ;

struct _GLF_struct_12 {
 _GLF_struct_11 _f0;
 ivec4 _f1;
 mat4x2 _f2;
 vec3 _f3;
} ;

struct _GLF_struct_7 {
 mat3 _f0;
 mat3 _f1;
 ivec4 _f2;
 bvec2 _f3;
} ;

struct _GLF_struct_6 {
 vec2 _f0;
 uint next_virtual_gid;
 mat2 _f1;
} ;

struct _GLF_struct_5 {
 vec4 _f0;
 float _f1;
 mat4x2 _f2;
 mat4x2 _f3;
 ivec3 _f4;
} ;

struct _GLF_struct_8 {
 _GLF_struct_5 _f0;
 _GLF_struct_6 _f1;
 uint _f2;
 _GLF_struct_7 _f3;
 mat3 _f4;
} ;

struct _GLF_struct_3 {
 bvec3 _f0;
 mat4 _f1;
 mat4x2 _f2;
} ;

struct _GLF_struct_2 {
 mat4x3 _f0;
 ivec4 _f1;
 uint _f2;
 ivec4 _f3;
} ;

struct _GLF_struct_1 {
 mat4x2 _f0;
 vec4 _f1;
 uint _f2;
} ;

struct _GLF_struct_0 {
 bvec3 _f0;
} ;

struct _GLF_struct_4 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
 _GLF_struct_3 _f3;
 uvec3 _f4;
} ;

struct _GLF_struct_9 {
 bool _f0;
 bool _f1;
 _GLF_struct_4 _f2;
 uint _f3;
 _GLF_struct_8 _f4;
 bvec4 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), vec2(_GLF_FUZZED(93.98), _GLF_FUZZED(-6972.4104)), bvec2(false, false))).x, abs(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6640.0258), _GLF_FUZZED(635.535)), vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(sin(0.0), max(sin(0.0), sin(0.0))) + _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0]))), ((_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])))) + 0.0)), (injectionSwitch)[1]), bvec2(true, true))).x, float(vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6640.0258), _GLF_FUZZED(635.535)), vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, _GLF_IDENTITY(cos(length(vec3(0.0, 0.0, 0.0))), float(_GLF_IDENTITY(vec4(cos(length(vec3(0.0, 0.0, 0.0))), 0.0, 0.0, 0.0), vec4(mat3(vec4(cos(length(vec3(0.0, 0.0, 0.0))), 0.0, 0.0, 0.0), 0.0, tan(0.0), 1.0, 1.0, 1.0))))), 1.0, 1.0, 0.0, 0.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, sqrt(0.0))), abs(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0))))[1]), bvec2(true, true))).x, exp(length(vec2(0.0, 0.0))), _GLF_IDENTITY(1.0, float(mat2(1.0, 0.0, 0.0, 1.0))), 1.0))))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-382.166)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), mix(float(injectionSwitch.y), float(_GLF_FUZZED(2.9)), bool(false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9.3)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))))) > injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 _GLF_struct_12 _GLF_struct_replacement_12 = _GLF_struct_12(_GLF_struct_11(1.0, _GLF_struct_10(mat4x2(1.0), mat4(1.0), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 1u), min(uvec4(gl_WorkGroupSize, 1u), uvec4(gl_WorkGroupSize, 1u))))), _GLF_IDENTITY((gl_WorkGroupSize) | uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) - uvec3(0u, 0u, 0u))).x, _GLF_IDENTITY(vec3(1.0), (true ? vec3(1.0) : _GLF_FUZZED(vec3(-43.80, 4.0, 736.274)))), vec4(1.0), bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), (! (_GLF_IDENTITY(true, (true) && true))) || false)))))))), vec3(1.0)), ivec4(1), mat4x2(1.0), vec3(1.0));
 uint workgroup_id = gl_WorkGroupID.x;
 _GLF_struct_16 _GLF_struct_replacement_16 = _GLF_struct_16(_GLF_struct_15(mat3x4(1.0), _GLF_struct_13(bvec4(true), vec2(1.0), bvec2(true), 1), _GLF_struct_14(ivec4(1), uvec4(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), (uint(uint(1u))) ^ 0u))), mat2x4(1.0), ivec3(1), _GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0), (true ? vec4(1.0) : _GLF_FUZZED(vec4(-7.6, 9.4, 3866.3373, 167.580)))), min(vec4(1.0), vec4(1.0))), mat2(1.0), mat4x3(1.0)), true), mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0))), _GLF_struct_replacement_12._f0._f1.workgroup_size * workgroup_id, vec3(1.0), vec3(1.0));
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0))))).y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)))).y)) ? injectionSwitch.x : _GLF_FUZZED(520.614))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_struct_replacement_16.workgroup_base + subgroup_base + subgroup_local_id, (true ? _GLF_struct_replacement_16.workgroup_base + subgroup_base + subgroup_local_id : _GLF_FUZZED(num_workgroup)));
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(true, true, _GLF_struct_4(_GLF_struct_0(bvec3(true)), _GLF_struct_1(mat4x2(1.0), vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8.9)), float(1.0), bool(true)))), 1u), _GLF_struct_2(mat4x3(1.0), _GLF_IDENTITY(_GLF_IDENTITY(ivec4(1), clamp(_GLF_IDENTITY(ivec4(1), clamp(ivec4(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, int(ivec4(_GLF_IDENTITY(1, int(int(1))), 1, 0, (0 << _GLF_IDENTITY(int(6), int(6)))))), 1, 1))), ivec4(1), ivec4(1))), _GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, ~ (~ (1))))), _GLF_IDENTITY(1, clamp(1, 1, 1))))) | 0), clamp(_GLF_IDENTITY(1, (1) | 0), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), min(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), ~ (~ (_GLF_IDENTITY(1, (1) | 0)))), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), ~ (~ (_GLF_IDENTITY(1, (1) | 0)))))), _GLF_IDENTITY(1, (1) | 0)))), 1 * ((_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, ~ (~ (1))))), _GLF_IDENTITY(1, clamp(1, 1, 1))))) | 0), clamp(_GLF_IDENTITY(1, (1) | 0), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), min(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), ~ (~ (_GLF_IDENTITY(1, (1) | 0)))), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), ~ (~ (_GLF_IDENTITY(1, (1) | 0)))))), _GLF_IDENTITY(1, (1) | 0)))))), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(bvec3(true, true, true)))), bool(bool(bool(_GLF_IDENTITY(true, bool(bvec3(true, true, true))))))))), true)), (bool(bvec2(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(bvec3(true, true, true)))), bool(bool(bool(_GLF_IDENTITY(true, bool(bvec3(true, true, true))))))))), true))) || false)) ? ~ _GLF_IDENTITY((_GLF_IDENTITY(1, (1) | 0)), (false ? _GLF_FUZZED(max(_GLF_IDENTITY(ivec4(-20999, 24253, -14879, 99906), clamp(ivec4(-20999, 24253, -14879, 99906), _GLF_IDENTITY(ivec4(-20999, 24253, -14879, 99906), max(_GLF_IDENTITY(ivec4(-20999, 24253, -14879, 99906), clamp(ivec4(-20999, 24253, -14879, 99906), ivec4(-20999, _GLF_IDENTITY(24253, clamp(24253, 24253, 24253)), -14879, 99906), ivec4(-20999, 24253, -14879, 99906))), ivec4(-20999, 24253, -14879, 99906))), ivec4(-20999, 24253, -14879, 99906))), ivec4(-59894, 47182, 91930, -65206)).g) : (_GLF_IDENTITY(1, (1) | 0)))) : _GLF_FUZZED(-85085)))))), _GLF_IDENTITY((ivec4(1)) - _GLF_IDENTITY(ivec4(0, 0, 0, 0), (false ? _GLF_FUZZED(ivec4(_GLF_IDENTITY(-35799, (-35799) ^ 0), -68680, -5942, 19037)) : ivec4(0, 0, 0, _GLF_IDENTITY(0, ~ (~ (0)))))), ((ivec4(1)) - _GLF_IDENTITY(ivec4(0, 0, 0, 0), (false ? _GLF_FUZZED(ivec4(-35799, -68680, -5942, 19037)) : ivec4(0, 0, 0, _GLF_IDENTITY(0, ~ (~ (0))))))) | ((ivec4(1)) - _GLF_IDENTITY(ivec4(0, 0, 0, 0), (false ? _GLF_FUZZED(ivec4(-35799, -68680, -5942, 19037)) : ivec4(0, 0, 0, _GLF_IDENTITY(0, ~ (~ (0))))))))), ivec4(1))), (_GLF_IDENTITY(ivec4(1), clamp(ivec4(_GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, ~ (_GLF_IDENTITY(~ ((1) / 1), (~ ((1) / _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, 1)), clamp(int(ivec2(1, 1)), int(ivec2(1, 1)), int(ivec2(1, 1))))))) / 1))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, ~ (~ (1)))), _GLF_IDENTITY((ivec4(_GLF_IDENTITY(1, ~ (~ (1))))) | ivec4(0, 0, 0, 0), min(_GLF_IDENTITY((ivec4(_GLF_IDENTITY(1, ~ (~ (1))))) | ivec4(0, 0, 0, 0), (false ? _GLF_FUZZED(ivec4(-65818, 2169, -23546, -15904)) : _GLF_IDENTITY((ivec4(_GLF_IDENTITY(1, ~ (~ (1))))) | ivec4(0, 0, 0, 0), ((ivec4(_GLF_IDENTITY(1, ~ (~ (1))))) | ivec4(0, 0, 0, 0)) >> ivec4(0, 0, 0, 0)))), (ivec4(_GLF_IDENTITY(1, ~ (~ (1))))) | ivec4(0, 0, 0, 0)))), (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (0 >> _GLF_IDENTITY(int(5), int(5))) ^ (1))), (~ (1)) + 0)))), max(ivec4(_GLF_IDENTITY(1, ~ (~ (1)))), _GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, ~ (~ (1)))), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 1 * (1)), 1)), ~ (~ (1))), clamp(_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), int(ivec4(_GLF_IDENTITY(~ (~ (1)), min(~ (~ (1)), ~ (~ (1)))), 0, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, ~ (~ (1)))), max(~ (_GLF_IDENTITY(1, ~ (~ (1)))), ~ (_GLF_IDENTITY(1, ~ (~ (1)))))))), _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), 0 ^ (_GLF_IDENTITY(1, ~ (~ (1)))))))), (ivec4(_GLF_IDENTITY(1, ~ (~ (1))))) + ivec4(0, 0, 0, 0)) : _GLF_FUZZED(_GLF_IDENTITY(ivec4(-17398, -91909, _GLF_IDENTITY(-43456, max(-43456, -43456)), _GLF_IDENTITY(_GLF_IDENTITY(-97102, (-97102) >> 0), (false ? _GLF_FUZZED(70046) : _GLF_IDENTITY(-97102, int(ivec3(_GLF_IDENTITY(-97102, ~ (~ (-97102))), 0, (0 ^ 1))))))), (_GLF_IDENTITY(ivec4(-17398, -91909, _GLF_IDENTITY(-43456, max(-43456, -43456)), _GLF_IDENTITY(_GLF_IDENTITY(-97102, (-97102) >> 0), (false ? _GLF_FUZZED(70046) : _GLF_IDENTITY(-97102, int(ivec3(_GLF_IDENTITY(-97102, ~ (~ (-97102))), 0, (0 ^ 1))))))), (ivec4(-17398, -91909, _GLF_IDENTITY(-43456, max(-43456, -43456)), _GLF_IDENTITY(_GLF_IDENTITY(-97102, (-97102) >> 0), (false ? _GLF_FUZZED(70046) : _GLF_IDENTITY(-97102, int(ivec3(_GLF_IDENTITY(-97102, ~ (~ (-97102))), 0, (0 ^ 1)))))))) | ivec4(0, 0, 0, 0))) + (ivec4(0, 0, 0, 0) | ivec4(0, 0, 0, 0))))), min(_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 1 * _GLF_IDENTITY((1), ((1)) / 1)), 1)), ~ (~ (1))), clamp(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(_GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), (_GLF_IDENTITY((~ (1)), 0 ^ ((~ (1))))) << 0)), 0 ^ (_GLF_IDENTITY(1, ~ (~ (1)))))))), (ivec4(_GLF_IDENTITY(1, ~ (~ (1))))) + ivec4(0, 0, 0, 0)) : _GLF_FUZZED(ivec4(-17398, -91909, _GLF_IDENTITY(-43456, _GLF_IDENTITY(max(-43456, -43456), _GLF_IDENTITY(int(ivec3(max(-43456, -43456), 0, 0)), clamp(int(ivec3(max(-43456, -43456), 0, 0)), int(ivec3(max(-43456, -43456), 0, 0)), int(ivec3(max(-43456, -43456), 0, 0)))))), _GLF_IDENTITY(-97102, (false ? _GLF_FUZZED(70046) : _GLF_IDENTITY(-97102, int(ivec3(_GLF_IDENTITY(-97102, ~ (~ (-97102))), 0, (0 ^ 1))))))))), _GLF_IDENTITY(((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 1 * (1)), 1)), ~ (~ (1))), clamp(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), 0 ^ (_GLF_IDENTITY(1, ~ (~ (1)))))))), (ivec4(_GLF_IDENTITY(1, ~ (~ (1))))) + ivec4(0, 0, 0, 0)) : _GLF_FUZZED(ivec4(-17398, -91909, _GLF_IDENTITY(-43456, max(-43456, -43456)), _GLF_IDENTITY(-97102, (false ? _GLF_FUZZED(70046) : _GLF_IDENTITY(-97102, int(ivec3(_GLF_IDENTITY(-97102, ~ (~ (-97102))), 0, (0 ^ 1)))))))))) / ivec4(1, 1, 1, 1), (((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 1 * (1)), 1)), ~ (~ (1))), clamp(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), 0 ^ (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) + int(_GLF_ZERO(0.0, injectionSwitch.x))))))))))), _GLF_IDENTITY((ivec4(_GLF_IDENTITY(1, ~ (~ (1))))) + ivec4(0, 0, 0, 0), (_GLF_IDENTITY((ivec4(_GLF_IDENTITY(1, ~ (~ (1))))) + ivec4(0, 0, 0, 0), ivec4(0, 0, 0, 0) | ((ivec4(_GLF_IDENTITY(1, ~ (~ (1))))) + ivec4(0, 0, 0, 0)))) << (ivec4(0, 0, 0, 0) & ivec4(82771, 71744, -78887, 3124)))) : _GLF_FUZZED(ivec4(-17398, -91909, _GLF_IDENTITY(-43456, max(-43456, -43456)), _GLF_IDENTITY(-97102, (false ? _GLF_FUZZED(70046) : _GLF_IDENTITY(-97102, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(-97102, ~ (~ (-97102))), 0, (0 ^ 1))), max(int(ivec3(_GLF_IDENTITY(-97102, ~ (~ (-97102))), 0, (0 ^ 1))), int(ivec3(_GLF_IDENTITY(-97102, ~ (~ (-97102))), 0, (0 ^ 1)))))))))))) / ivec4(1, 1, 1, 1)) - ivec4(0, 0, 0, 0))), _GLF_IDENTITY((_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), ! (! (! ((injectionSwitch.x < injectionSwitch.y)))))))) ? _GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 1 * (1)), 1)), ~ (~ (1))), clamp(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), min(~ (1), _GLF_IDENTITY(~ (1), (~ (1)) - 0))))), 0 ^ (_GLF_IDENTITY(1, ~ (~ (1)))))))), (ivec4(_GLF_IDENTITY(1, ~ (~ (1))))) + ivec4(0, 0, 0, 0)) : _GLF_FUZZED(ivec4(-17398, -91909, _GLF_IDENTITY(-43456, max(-43456, -43456)), _GLF_IDENTITY(-97102, (false ? _GLF_FUZZED(70046) : _GLF_IDENTITY(-97102, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(-97102, ~ (_GLF_IDENTITY(~ (-97102), ~ (~ (~ (-97102)))))), 0, (_GLF_IDENTITY(0 ^ 1, max(_GLF_IDENTITY(0 ^ 1, int(ivec2(_GLF_IDENTITY(0 ^ 1, (0 ^ 1) << 0), 1))), _GLF_IDENTITY(0 ^ 1, (0 ^ 1) | 0))))), max(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(-97102, ~ (_GLF_IDENTITY(~ (-97102), ~ (~ (~ (-97102)))))), 0, (_GLF_IDENTITY(0 ^ 1, max(_GLF_IDENTITY(0 ^ 1, int(ivec2(_GLF_IDENTITY(0 ^ 1, (0 ^ 1) << 0), 1))), _GLF_IDENTITY(0 ^ 1, (0 ^ 1) | 0))))), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(-97102, ~ (_GLF_IDENTITY(~ (-97102), ~ (~ (~ (-97102)))))), 0, (_GLF_IDENTITY(0 ^ 1, max(_GLF_IDENTITY(0 ^ 1, int(ivec2(_GLF_IDENTITY(0 ^ 1, (0 ^ 1) << 0), 1))), _GLF_IDENTITY(0 ^ 1, (0 ^ 1) | 0))))))), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(-97102, ~ (_GLF_IDENTITY(~ (-97102), ~ (~ (~ (-97102)))))), 0, (_GLF_IDENTITY(0 ^ 1, max(_GLF_IDENTITY(0 ^ 1, int(ivec2(_GLF_IDENTITY(0 ^ 1, (0 ^ 1) << 0), 1))), _GLF_IDENTITY(0 ^ 1, (0 ^ 1) | 0))))), (ivec3(_GLF_IDENTITY(-97102, ~ (_GLF_IDENTITY(~ (-97102), ~ (~ (~ (-97102)))))), 0, (_GLF_IDENTITY(0 ^ 1, max(_GLF_IDENTITY(0 ^ 1, int(ivec2(_GLF_IDENTITY(0 ^ 1, (0 ^ 1) << 0), 1))), _GLF_IDENTITY(0 ^ 1, (0 ^ 1) | 0)))))) ^ ivec3(0, 0, 0))))))))))), max((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 1 * (1)), 1)), ~ (~ (1))), clamp(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), 0 ^ (_GLF_IDENTITY(1, ~ (~ (1)))))))), (ivec4(_GLF_IDENTITY(1, ~ (~ (1))))) + _GLF_IDENTITY(ivec4(0, 0, 0, 0), (ivec4(0, 0, 0, 0)) - ivec4(0, 0, 0, 0))) : _GLF_FUZZED(ivec4(-17398, -91909, _GLF_IDENTITY(-43456, max(-43456, -43456)), _GLF_IDENTITY(-97102, (false ? _GLF_FUZZED(70046) : _GLF_IDENTITY(-97102, int(ivec3(_GLF_IDENTITY(-97102, ~ _GLF_IDENTITY((~ (-97102)), ~ (~ (_GLF_IDENTITY((~ (-97102)), _GLF_IDENTITY(int(ivec3((~ (-97102)), 0, 1)), (true ? int(ivec3((~ (-97102)), 0, 1)) : _GLF_FUZZED(78585)))))))), 0, (0 ^ 1))))))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 1 * (1)), 1)), ~ (~ (1))), clamp(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), 0 ^ (_GLF_IDENTITY(1, ~ (~ (1)))))))), (ivec4(_GLF_IDENTITY(1, ~ (~ (1))))) + ivec4(0, 0, 0, 0)) : _GLF_FUZZED(ivec4(-17398, -91909, _GLF_IDENTITY(-43456, max(-43456, -43456)), _GLF_IDENTITY(-97102, (false ? _GLF_FUZZED(70046) : _GLF_IDENTITY(-97102, int(ivec3(_GLF_IDENTITY(-97102, ~ (~ (-97102))), 0, (0 ^ 1))))))))))))))))) | (ivec4(_GLF_IDENTITY(1, ~ (~ (1)))))), (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1), (_GLF_IDENTITY(ivec4(1), (ivec4(1)) | ivec4(0, 0, 0, 0))) | (ivec4(_GLF_IDENTITY(1, (1) >> 0)))), min(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (1) << 0)), (_GLF_IDENTITY(ivec4(1), (ivec4(1)) | ivec4(_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(33464))))), 0, 0, 0))) | _GLF_IDENTITY((ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-30357))), 1))) >> 0))), ivec4(0, 0, 0, _GLF_IDENTITY(0, (0) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) - 0), int(2))))) ^ ((ivec4(_GLF_IDENTITY(1, (1) >> 0)))))), _GLF_IDENTITY(ivec4(1), (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, (1) ^ 0))), (1) / int(_GLF_ONE(1.0, injectionSwitch.y))))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, (1) ^ 0))), (1) / int(_GLF_ONE(1.0, injectionSwitch.y))))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, (1) ^ 0))), (1) / int(_GLF_ONE(1.0, injectionSwitch.y)))))) | ((~ (_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, (1) ^ 0))), (1) / int(_GLF_ONE(1.0, injectionSwitch.y)))))))) | _GLF_IDENTITY(0, (0) | (0))))), (ivec4(_GLF_IDENTITY(1, (1) | 0))) | ivec4(0, 0, 0, 0))) | (ivec4(_GLF_IDENTITY(1, (1) >> 0))))))) - ivec4(0, 0, 0, 0)), ivec4(1)))) / ivec4(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1) - 0, 0 ^ ((1) - 0))), _GLF_IDENTITY(1, min(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(2592))), 1, 1)), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(2592))), 1, 1)), (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(2592))), 1, 1))) | 0), 0), ivec2(0, 0) | (ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(2592))), 1, 1)), (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(2592))), 1, 1))) | 0), 0))))), 1)), _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), ~ (~ ((1))))))), 1u, ivec4(1)), _GLF_struct_3(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY((true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((true))) && true), _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))) && true), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))) && true), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))) && true), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), ! (! (bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))))) || (false)))), false, false)), false || (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, (true) && true), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(bvec3(false, true, false))) || (false)))), false, false)), (bool(bvec4(_GLF_IDENTITY(true, (true) && true), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (((injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY(false, false || (false)))), false, false))) && true))), true && (bool(bvec4(_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, true && (true))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! ((! (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(false, true && (false)), false)))))), mat4(1.0), mat4x2(1.0)), uvec3(1u)), 1u, _GLF_struct_8(_GLF_struct_5(vec4(1.0), 1.0, mat4x2(1.0), mat4x2(1.0), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, (true ? _GLF_IDENTITY(_GLF_IDENTITY((1), ~ (~ (_GLF_IDENTITY((1), ((1)) * 1)))) / 1, 1 * ((1) / 1)) : _GLF_FUZZED(findLSB(_GLF_IDENTITY(-81841, (-81841) << 0))))))), _GLF_IDENTITY(ivec3(ivec4(ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, (true ? _GLF_IDENTITY(_GLF_IDENTITY((1), ~ (~ (_GLF_IDENTITY((1), ((1)) * 1)))) / 1, 1 * ((1) / 1)) : _GLF_FUZZED(findLSB(_GLF_IDENTITY(-81841, (-81841) << 0))))))), 1)), (ivec3(ivec4(ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, (true ? _GLF_IDENTITY(_GLF_IDENTITY((1), ~ (~ (_GLF_IDENTITY((1), ((1)) * 1)))) / 1, 1 * ((1) / 1)) : _GLF_FUZZED(findLSB(_GLF_IDENTITY(-81841, (-81841) << 0))))))), 1))) ^ ivec3(0, 0, 0)))), _GLF_struct_6(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), min(_GLF_IDENTITY(vec2(1.0), clamp(vec2(1.0), vec2(1.0), vec2(1.0))), vec2(1.0))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), min(_GLF_IDENTITY(vec2(1.0), clamp(vec2(1.0), vec2(1.0), vec2(1.0))), vec2(1.0))), vec2(mat4x2(_GLF_IDENTITY(vec2(1.0), min(_GLF_IDENTITY(vec2(1.0), clamp(vec2(1.0), vec2(1.0), vec2(1.0))), vec2(1.0))), 1.0, 1.0, 0.0, 1.0, sqrt(1.0), 1.0))), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0), (mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), min(_GLF_IDENTITY(vec2(1.0), clamp(vec2(1.0), vec2(1.0), vec2(1.0))), vec2(1.0))), vec2(mat4x2(_GLF_IDENTITY(vec2(1.0), min(_GLF_IDENTITY(vec2(1.0), clamp(vec2(1.0), vec2(1.0), vec2(1.0))), vec2(1.0))), 1.0, 1.0, 0.0, 1.0, sqrt(1.0), 1.0))), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)) * mat4(1.0))), (vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), min(_GLF_IDENTITY(vec2(1.0), clamp(vec2(1.0), vec2(1.0), vec2(1.0))), vec2(1.0))), vec2(mat4x2(_GLF_IDENTITY(vec2(1.0), min(_GLF_IDENTITY(vec2(1.0), clamp(vec2(1.0), vec2(1.0), vec2(1.0))), vec2(1.0))), 1.0, 1.0, 0.0, 1.0, sqrt(1.0), 1.0))), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0), (mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), min(_GLF_IDENTITY(vec2(1.0), clamp(vec2(1.0), vec2(1.0), vec2(1.0))), vec2(1.0))), vec2(mat4x2(_GLF_IDENTITY(vec2(1.0), min(_GLF_IDENTITY(vec2(1.0), clamp(vec2(1.0), vec2(1.0), vec2(1.0))), vec2(1.0))), 1.0, 1.0, 0.0, 1.0, sqrt(1.0), 1.0))), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)) * mat4(1.0)))) / vec2(1.0, 1.0))), (false ? _GLF_FUZZED(vec2(3.6, -3098.8186)) : _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), min(_GLF_IDENTITY(vec2(1.0), clamp(vec2(1.0), vec2(1.0), vec2(1.0))), vec2(1.0))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), min(_GLF_IDENTITY(vec2(1.0), clamp(vec2(1.0), vec2(1.0), vec2(1.0))), vec2(1.0))), vec2(mat4x2(_GLF_IDENTITY(vec2(1.0), min(_GLF_IDENTITY(vec2(1.0), _GLF_IDENTITY(clamp(vec2(1.0), vec2(1.0), vec2(1.0)), mix(vec2(_GLF_FUZZED(-178.475), (clamp(vec2(1.0), vec2(1.0), vec2(1.0)))[1]), vec2((clamp(vec2(1.0), vec2(1.0), vec2(1.0)))[0], _GLF_FUZZED(30.33)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), vec2(1.0))), 1.0, 1.0, 0.0, 1.0, sqrt(1.0), 1.0))), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0), (mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), min(_GLF_IDENTITY(vec2(1.0), clamp(vec2(1.0), vec2(1.0), vec2(1.0))), vec2(1.0))), vec2(mat4x2(_GLF_IDENTITY(vec2(1.0), min(_GLF_IDENTITY(vec2(1.0), clamp(vec2(1.0), vec2(1.0), vec2(1.0))), vec2(1.0))), 1.0, 1.0, 0.0, 1.0, sqrt(1.0), 1.0))), vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), min(_GLF_IDENTITY(vec2(1.0), clamp(vec2(1.0), vec2(1.0), vec2(1.0))), vec2(1.0))), vec2(mat4x2(_GLF_IDENTITY(vec2(1.0), min(_GLF_IDENTITY(vec2(1.0), clamp(vec2(1.0), vec2(1.0), vec2(1.0))), vec2(1.0))), 1.0, 1.0, 0.0, 1.0, sqrt(1.0), 1.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), min(_GLF_IDENTITY(vec2(1.0), clamp(vec2(1.0), vec2(1.0), vec2(1.0))), vec2(1.0))), vec2(mat4x2(_GLF_IDENTITY(vec2(1.0), min(_GLF_IDENTITY(vec2(1.0), clamp(vec2(1.0), vec2(1.0), vec2(1.0))), vec2(1.0))), 1.0, 1.0, 0.0, 1.0, sqrt(1.0), 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), min(_GLF_IDENTITY(vec2(1.0), clamp(vec2(1.0), vec2(1.0), vec2(1.0))), vec2(1.0))), vec2(mat4x2(_GLF_IDENTITY(vec2(1.0), min(_GLF_IDENTITY(vec2(1.0), clamp(vec2(1.0), vec2(1.0), vec2(1.0))), vec2(1.0))), 1.0, 1.0, 0.0, 1.0, sqrt(1.0), 1.0))))), 1.0), vec3(vec4(vec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), min(_GLF_IDENTITY(vec2(1.0), clamp(vec2(1.0), vec2(1.0), vec2(1.0))), vec2(1.0))), vec2(mat4x2(_GLF_IDENTITY(vec2(1.0), min(_GLF_IDENTITY(vec2(1.0), clamp(vec2(1.0), vec2(1.0), vec2(1.0))), vec2(1.0))), 1.0, 1.0, 0.0, 1.0, sqrt(1.0), 1.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), min(_GLF_IDENTITY(vec2(1.0), clamp(vec2(1.0), vec2(1.0), vec2(1.0))), vec2(1.0))), vec2(mat4x2(_GLF_IDENTITY(vec2(1.0), min(_GLF_IDENTITY(vec2(1.0), clamp(vec2(1.0), vec2(1.0), vec2(1.0))), vec2(1.0))), 1.0, 1.0, 0.0, 1.0, sqrt(1.0), 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), min(_GLF_IDENTITY(vec2(1.0), clamp(vec2(1.0), vec2(1.0), vec2(1.0))), vec2(1.0))), vec2(mat4x2(_GLF_IDENTITY(vec2(1.0), min(_GLF_IDENTITY(vec2(1.0), clamp(vec2(1.0), vec2(1.0), vec2(1.0))), vec2(1.0))), 1.0, 1.0, 0.0, 1.0, sqrt(1.0), 1.0))))), 1.0), 0.0))))), 1.0, 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)) * mat4(1.0))), (vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), min(_GLF_IDENTITY(vec2(1.0), clamp(vec2(1.0), vec2(1.0), vec2(1.0))), vec2(1.0))), vec2(mat4x2(_GLF_IDENTITY(vec2(1.0), min(_GLF_IDENTITY(vec2(1.0), clamp(vec2(1.0), vec2(1.0), vec2(1.0))), vec2(1.0))), 1.0, 1.0, 0.0, 1.0, sqrt(1.0), 1.0))), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0), (mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), min(_GLF_IDENTITY(vec2(1.0), clamp(vec2(1.0), vec2(1.0), vec2(1.0))), vec2(1.0))), vec2(mat4x2(_GLF_IDENTITY(vec2(1.0), min(_GLF_IDENTITY(vec2(1.0), clamp(vec2(1.0), vec2(1.0), vec2(1.0))), vec2(1.0))), 1.0, 1.0, 0.0, 1.0, sqrt(1.0), 1.0))), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)) * mat4(1.0)))) / vec2(1.0, 1.0))))), _GLF_struct_replacement_16.workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), (transpose(mat2(1.0))) / _GLF_IDENTITY(mat2(1.0, 1.0, 1.0, 1.0), mat2(_GLF_IDENTITY(mat3x2(mat2(1.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(mat3x2(mat4x3(mat3x2(mat2(1.0, 1.0, 1.0, 1.0)))), mat3x2(mat4(mat3x2(mat4x3(mat3x2(mat2(1.0, 1.0, 1.0, 1.0)))))))))))))), 1u, _GLF_struct_7(mat3(_GLF_IDENTITY(1.0, min(1.0, 1.0))), mat3(1.0), ivec4(1), bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(! _GLF_IDENTITY((! (true)), ((! (true))) || false), bool(_GLF_IDENTITY(bvec3(! _GLF_IDENTITY((! (true)), ((! (true))) && _GLF_TRUE(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 0.0, 1.0, 0.0)), float(mat2x4(float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 0.0, 1.0, 0.0)), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0))))), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) / exp(vec2(0.0, 0.0))).y), _GLF_IDENTITY(false, true && (false)))))))))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(799.947)), _GLF_IDENTITY(vec2(_GLF_FUZZED(5.5), (injectionSwitch)[1]), (vec2(_GLF_FUZZED(5.5), (injectionSwitch)[1])) - sqrt(vec2(0.0, 0.0))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).y))), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (! (true)), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (! (true)), _GLF_IDENTITY(false, ! (! (false))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (! (true)), true && (! (! (true)))), false, true), true))), true))), false)))))))), mat3(1.0)), bvec4(true));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if((_GLF_IDENTITY(subgroup_local_id % 2, (1u ^ 1u) | (subgroup_local_id % 2))) == 0)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true) && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true))))))))), bool(bool(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7296.6377), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3794.7078)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7296.6377), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3794.7078)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) || false), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7296.6377), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3794.7078)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false))))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ((false)) && true)))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(true && (_GLF_DEAD(false)), ! (! (true && (_GLF_DEAD(false))))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[_GLF_struct_replacement_9._f4._f1.next_virtual_gid], _GLF_IDENTITY(uint(2), min(uint(2), uint(2))), 4, _GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, (64) >> 0), _GLF_IDENTITY(64, 1 * (64)), _GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, (64) / 1))))), 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(false, true, false, true))), (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), 0.0 + (injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - 0.0), 1.0 * (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), 0.0 + (injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - 0.0), 1.0 * (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))), true && (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), 0.0 + (injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - 0.0), 1.0 * (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))), true && (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), 0.0 + (injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - 0.0), 1.0 * (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))))))))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   atomicStore(buf[_GLF_struct_replacement_9._f4._f1.next_virtual_gid], uint(_GLF_IDENTITY(2, min(2, 2))), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
