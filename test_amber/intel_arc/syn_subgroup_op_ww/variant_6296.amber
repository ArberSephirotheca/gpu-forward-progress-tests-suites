#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_5 {
 vec3 _f0;
 bvec4 _f1;
 vec2 _f2;
 uvec3 _f3;
 vec4 _f4;
 uint subgroup_size;
 mat2x3 _f5;
 vec2 _f6;
} ;

struct _GLF_struct_4 {
 float _f0;
 vec4 _f1;
 mat4x2 _f2;
 bvec4 _f3;
 mat4 _f4;
} ;

struct _GLF_struct_6 {
 _GLF_struct_4 _f0;
 vec3 _f1;
 _GLF_struct_5 _f2;
} ;

struct _GLF_struct_7 {
 _GLF_struct_6 _f0;
 vec2 _f1;
} ;

struct _GLF_struct_1 {
 mat2 _f0;
 uint _f1;
} ;

struct _GLF_struct_0 {
 uvec3 _f0;
 bool _f1;
 ivec4 _f2;
 uvec2 _f3;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 uvec3 _f2;
} ;

struct _GLF_struct_3 {
 mat3x2 _f0;
 mat4x3 _f1;
 float _f2;
 vec2 _f3;
 uint num_workgroup;
 _GLF_struct_2 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true && (_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_7 _GLF_struct_replacement_7 = _GLF_struct_7(_GLF_struct_6(_GLF_struct_4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-523.975)), bool(false))), _GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-951.236)), float(1.0), bool(true)))), clamp(vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-951.236)), float(1.0), bool(true)))), vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-951.236)), float(1.0), bool(true)))), _GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-951.236)), float(1.0), bool(true)))), (vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-951.236)), float(1.0), bool(true))))) - vec4(0.0, 0.0, 0.0, 0.0)))), mat4x2(1.0), bvec4(true), mat4(1.0)), vec3(1.0), _GLF_struct_5(vec3(1.0), bvec4(_GLF_IDENTITY(true, ! (! (true)))), vec2(1.0), uvec3(1u), vec4(1.0), gl_SubgroupSize, mat2x3(1.0), _GLF_IDENTITY(vec2(1.0), _GLF_IDENTITY(clamp(vec2(1.0), vec2(1.0), _GLF_IDENTITY(vec2(1.0), max(vec2(1.0), _GLF_IDENTITY(vec2(1.0), mix(vec2(_GLF_FUZZED(0.5), (vec2(1.0))[1]), vec2((vec2(1.0))[0], _GLF_FUZZED(-5.8)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), vec2(1.0, 1.0) * (clamp(vec2(1.0), _GLF_IDENTITY(vec2(1.0), max(vec2(1.0), vec2(1.0))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(85.53)), bool(false))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))), (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-110.384) : _GLF_IDENTITY(1.0, max(1.0, 1.0))))) - 0.0)), max(vec2(1.0), vec2(1.0))))))))), vec2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(7572.2381)), (_GLF_IDENTITY(float(_GLF_FUZZED(7572.2381)), min(float(_GLF_FUZZED(7572.2381)), float(_GLF_FUZZED(7572.2381))))) / sqrt(1.0)), float(1.0), bool(true))))), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-372.080)), bool(false))), float(vec3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-372.080)), bool(false))), 0.0, abs(1.0)))), 1.0)), 1.0))));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, sin(0.0) + (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(33.44)))), float(_GLF_FUZZED(-4.9)), bool(false))))) > injectionSwitch.y) && true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, sin(0.0) + (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(33.44)))), float(_GLF_FUZZED(-4.9)), bool(false))))) > injectionSwitch.y) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bool(true))))))))), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, sin(0.0) + (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(33.44)))), float(_GLF_FUZZED(-4.9)), bool(false)), _GLF_IDENTITY(float(mat4(mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(33.44)))), float(_GLF_FUZZED(-4.9)), bool(false)), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, abs(1.0), 0.0, _GLF_IDENTITY(dot(vec4(length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), exp(0.0), 1.0, 0.0)), clamp(_GLF_IDENTITY(float(mat4(mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(33.44)))), float(_GLF_FUZZED(-4.9)), bool(false)), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, abs(1.0), 0.0, _GLF_IDENTITY(dot(vec4(length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), exp(0.0), 1.0, 0.0)), (false ? _GLF_FUZZED(50.62) : float(mat4(mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(33.44)))), float(_GLF_FUZZED(-4.9)), bool(false)), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, abs(1.0), 0.0, _GLF_IDENTITY(dot(vec4(length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), exp(0.0), 1.0, 0.0)))), float(mat4(mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(33.44)))), float(_GLF_FUZZED(-4.9)), bool(false)), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, abs(1.0), 0.0, _GLF_IDENTITY(dot(vec4(length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), exp(0.0), 1.0, 0.0)), float(mat4(mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(33.44)))), float(_GLF_FUZZED(-4.9)), bool(false)), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, abs(1.0), 0.0, _GLF_IDENTITY(dot(vec4(length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), exp(0.0), 1.0, 0.0)))))))) > injectionSwitch.y) && true))), false, true, true)))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, sin(0.0) + (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(33.44)))), float(_GLF_FUZZED(-4.9)), bool(false))))) > injectionSwitch.y) && true)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, sin(0.0) + (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(33.44)))), float(_GLF_FUZZED(-4.9)), bool(false))))) > injectionSwitch.y) && true)), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, sin(0.0) + (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(33.44)))), float(_GLF_FUZZED(-4.9)), bool(false))))) > injectionSwitch.y) && true)), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, sin(0.0) + (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(33.44)))), float(_GLF_FUZZED(-4.9)), bool(false))))) > injectionSwitch.y) && true)), true, false))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, sin(0.0) + (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(33.44)))), float(_GLF_FUZZED(-4.9)), bool(false))))) > injectionSwitch.y) && true))), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, sin(0.0) + (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(33.44)))), float(_GLF_FUZZED(-4.9)), bool(false))))) > injectionSwitch.y) && true))), false, true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, sin(0.0) + (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(33.44, max(33.44, 33.44)))))), float(_GLF_FUZZED(-4.9)), bool(false))))) > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))) : _GLF_FUZZED(vec2(836.114, 49.70)))), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).y) && true))), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, sin(0.0) + (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(33.44)))), float(_GLF_FUZZED(-4.9)), bool(false))))) > injectionSwitch.y) && true))), false, true, true)))) && true)))))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, sin(0.0) + (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(33.44)))), float(_GLF_FUZZED(-4.9)), bool(false))))) > injectionSwitch.y) && true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, sin(0.0) + (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(33.44)))), float(_GLF_FUZZED(-4.9)), bool(false))))) > injectionSwitch.y) && true))), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))), injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, sin(0.0) + (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(33.44)))), float(_GLF_FUZZED(-4.9)), bool(false))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, sin(0.0) + (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(33.44)))), float(_GLF_FUZZED(-4.9)), bool(false))))), 0.0 + (_GLF_IDENTITY(injectionSwitch.x, sin(0.0) + (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(33.44)))), float(_GLF_FUZZED(-4.9)), bool(false)))))))) / 1.0) > injectionSwitch.y) && true))), false, true, true)))))))))))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, sin(0.0) + (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(33.44)))), float(_GLF_FUZZED(-4.9)), bool(false))))) > injectionSwitch.y) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) && true)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, sin(0.0) + (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(33.44)))), float(_GLF_FUZZED(-4.9)), bool(false))))) > injectionSwitch.y) && true))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, sin(0.0) + (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(33.44)))), float(_GLF_FUZZED(-4.9)), bool(false))))) > injectionSwitch.y) && true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, sin(0.0) + (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(33.44)))), float(_GLF_FUZZED(-4.9)), bool(false))))) > injectionSwitch.y) && true))), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, sin(0.0) + (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(33.44)))), float(_GLF_FUZZED(_GLF_IDENTITY(-4.9, max(-4.9, -4.9)))), bool(false))))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, sin(0.0) + (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(33.44)))), float(_GLF_FUZZED(_GLF_IDENTITY(-4.9, max(-4.9, -4.9)))), bool(false))))) > injectionSwitch.y)) || false) && true))))))), _GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), bool(bvec3(bool(bvec3(true, true, false)), true, false)))), true)))))))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, sin(0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(8.6)), float(_GLF_IDENTITY(injectionSwitch[1], 1.0 * (injectionSwitch[1]))), bool(true))))).x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(33.44)))), float(_GLF_FUZZED(-4.9)), bool(false))))) > injectionSwitch.y) && true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(sin(0.0), (sin(0.0)) * 1.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(463.143) : _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))))), mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(33.44)))), float(_GLF_FUZZED(-4.9)), bool(false))))) > injectionSwitch.y) && true))), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, sin(0.0) + (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(33.44), (true ? _GLF_IDENTITY(_GLF_FUZZED(33.44), (true ? _GLF_FUZZED(33.44) : _GLF_FUZZED(1168.2171))) : _GLF_FUZZED(838.741)))))), float(_GLF_FUZZED(-4.9)), bool(false))))) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, sin(0.0) + (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(33.44), (true ? _GLF_IDENTITY(_GLF_FUZZED(33.44), (true ? _GLF_FUZZED(33.44) : _GLF_FUZZED(1168.2171))) : _GLF_FUZZED(838.741)))))), float(_GLF_FUZZED(-4.9)), bool(false))))) > injectionSwitch.y))) && true))), false, true, true)))))))))))), true && (bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, sin(0.0) + (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(33.44)))), float(_GLF_FUZZED(-4.9)), bool(false))))) > injectionSwitch.y) && true, ((_GLF_IDENTITY(injectionSwitch.x, sin(0.0) + (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(33.44)))), float(_GLF_FUZZED(-4.9)), bool(false))))) > injectionSwitch.y) && true) && true)))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, sin(0.0) + (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(33.44)))), float(_GLF_FUZZED(-4.9)), bool(false))))) > injectionSwitch.y) && true))), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, sin(0.0) + (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(33.44)))), float(_GLF_FUZZED(-4.9)), bool(false))))) > injectionSwitch.y) && true))), false, true, true))))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, length(sqrt(vec3(0.0, 0.0, 0.0))) + (_GLF_IDENTITY(injectionSwitch.x, cos(0.0) * (injectionSwitch.x)))), sin(0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(33.44)))), float(_GLF_FUZZED(-4.9)), bool(false))))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) && true))), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, sin(0.0) + (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(33.44)))), float(_GLF_FUZZED(-4.9)), bool(false))))) > injectionSwitch.y) && true))), false, true, true)))))) && true)))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, sin(0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(33.44)))), float(_GLF_FUZZED(-4.9)), bool(false))))) > injectionSwitch.y) && true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, sin(0.0) + (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(33.44)))), float(_GLF_FUZZED(-4.9)), bool(false))))) > injectionSwitch.y) && true), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, sin(0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(33.44)))), float(_GLF_FUZZED(-4.9)), bool(false))), float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(33.44)))), float(_GLF_FUZZED(-4.9)), bool(false))), cos(0.0), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0))), (true ? _GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(33.44)))), float(_GLF_FUZZED(-4.9)), bool(false))), cos(0.0), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0))), mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat2x4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(33.44)))), float(_GLF_FUZZED(-4.9)), bool(false))), cos(0.0), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0))))) : _GLF_FUZZED((mat2x4(4107.7085, -537.692, -491.858, -2.7, 4522.9307, -761.181, -1.4, 828.393))))))))) > injectionSwitch.y) && _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) && true), true, true, false)))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, sin(0.0) + (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(33.44)))), float(_GLF_FUZZED(-4.9)), bool(false))))) > injectionSwitch.y) && true))), false, true, true))))))))))))))) || false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(mat3x2(1.0), mat4x3(1.0), 1.0, vec2(_GLF_IDENTITY(1.0, (1.0) / 1.0)), gl_NumWorkGroups.x, _GLF_struct_2(_GLF_struct_0(uvec3(1u), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), false || (_GLF_IDENTITY(true, (true) && true))), ivec4(1), uvec2(1u)), _GLF_struct_1(mat2(1.0), 1u), uvec3(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(1u, 0u, 1u)), (uint(uvec3(1u, 0u, 1u))) * 1u)))));
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(0u | (gl_WorkGroupSize.x), _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(0u), uint(0u))), min((0u << _GLF_IDENTITY(uint(0u), uint(0u))), (0u << _GLF_IDENTITY(uint(0u), uint(0u))))) + (_GLF_IDENTITY(0u | (gl_WorkGroupSize.x), uint(uvec4(0u | (gl_WorkGroupSize.x), 1u, 0u, 1u))))));
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), true, false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-5.1, 13.17)))))).y, (injectionSwitch.y) / 1.0))), true, false)))))))) || false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = subgroup_id * _GLF_struct_replacement_7._f0._f2.subgroup_size;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_struct_replacement_7._f0._f2.subgroup_size), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * (0u | 1u)) + 1, subgroup_local_id + 1))) % _GLF_struct_replacement_7._f0._f2.subgroup_size), (true ? ((_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * (0u | 1u)) + 1, subgroup_local_id + 1))) % _GLF_struct_replacement_7._f0._f2.subgroup_size) : _GLF_FUZZED(53707u))), (((subgroup_local_id + 1) % _GLF_struct_replacement_7._f0._f2.subgroup_size)) - 0u), 0u, 0u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) * 1.0))))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), true, true, false)))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 atomicStore(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) / 1u), uint(uint(_GLF_IDENTITY(uint(1), (uint(1)) / 1u)))), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(injectionSwitch.y, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(sin(0.0), 0.0, 0.0, 1.0), vec4(1.0, sqrt(1.0), 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(sin(0.0), 0.0, 0.0, 1.0), vec4(1.0, sqrt(1.0), 1.0, 0.0)), max(dot(vec4(sin(0.0), 0.0, 0.0, 1.0), vec4(1.0, sqrt(1.0), 1.0, 0.0)), dot(vec4(sin(0.0), 0.0, 0.0, 1.0), vec4(1.0, sqrt(1.0), 1.0, 0.0))))), 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 0.0, 1.0)), _GLF_IDENTITY(float(float(float(mat4x3(injectionSwitch.y, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(sin(0.0), 0.0, 0.0, 1.0), vec4(1.0, sqrt(1.0), 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(sin(0.0), 0.0, 0.0, 1.0), vec4(1.0, sqrt(1.0), 1.0, 0.0)), max(dot(vec4(sin(0.0), 0.0, 0.0, 1.0), vec4(1.0, sqrt(1.0), 1.0, 0.0)), dot(vec4(sin(0.0), 0.0, 0.0, 1.0), vec4(1.0, sqrt(1.0), 1.0, 0.0))))), 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 0.0, 1.0)))), min(float(float(float(mat4x3(injectionSwitch.y, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(sin(0.0), 0.0, 0.0, 1.0), vec4(1.0, sqrt(1.0), 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(sin(0.0), 0.0, 0.0, 1.0), vec4(1.0, sqrt(1.0), 1.0, 0.0)), max(dot(vec4(sin(0.0), 0.0, 0.0, 1.0), vec4(1.0, sqrt(1.0), 1.0, 0.0)), dot(vec4(sin(0.0), 0.0, 0.0, 1.0), vec4(1.0, sqrt(1.0), 1.0, 0.0))))), 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 0.0, 1.0)))), float(float(float(mat4x3(injectionSwitch.y, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(sin(0.0), 0.0, 0.0, 1.0), vec4(1.0, sqrt(1.0), 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(sin(0.0), 0.0, 0.0, 1.0), vec4(1.0, sqrt(1.0), 1.0, 0.0)), max(dot(vec4(sin(0.0), 0.0, 0.0, 1.0), vec4(1.0, sqrt(1.0), 1.0, 0.0)), dot(vec4(sin(0.0), 0.0, 0.0, 1.0), vec4(1.0, sqrt(1.0), 1.0, 0.0))))), 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 0.0, 1.0))))))))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(injectionSwitch.y, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(sin(0.0), 0.0, 0.0, 1.0), vec4(1.0, sqrt(1.0), 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(sin(0.0), 0.0, 0.0, 1.0), vec4(1.0, sqrt(1.0), 1.0, 0.0)), max(dot(vec4(sin(0.0), 0.0, 0.0, 1.0), vec4(1.0, sqrt(1.0), 1.0, 0.0)), dot(vec4(sin(0.0), 0.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(injectionSwitch.g) : _GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 0.0, 0.0, sqrt(0.0))))))), vec4(1.0, sqrt(1.0), 1.0, 0.0))))), 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 0.0, 1.0)), _GLF_IDENTITY(float(float(float(mat4x3(injectionSwitch.y, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(sin(0.0), 0.0, 0.0, 1.0), vec4(1.0, sqrt(1.0), 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(sin(0.0), 0.0, 0.0, 1.0), vec4(1.0, sqrt(1.0), 1.0, 0.0)), max(dot(vec4(sin(0.0), 0.0, 0.0, 1.0), vec4(1.0, sqrt(1.0), 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(sin(0.0), 0.0, 0.0, 1.0), vec4(1.0, sqrt(1.0), 1.0, 0.0)), clamp(dot(vec4(sin(0.0), 0.0, 0.0, 1.0), vec4(1.0, sqrt(1.0), 1.0, 0.0)), dot(vec4(sin(0.0), 0.0, 0.0, 1.0), vec4(1.0, sqrt(1.0), 1.0, 0.0)), dot(vec4(sin(0.0), 0.0, 0.0, 1.0), vec4(1.0, sqrt(1.0), 1.0, 0.0))))))), 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-523.530) : 1.0)), 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 0.0, 1.0)))), min(_GLF_IDENTITY(float(float(float(mat4x3(injectionSwitch.y, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, _GLF_IDENTITY(dot(vec4(sin(0.0), 0.0, 0.0, 1.0), vec4(1.0, sqrt(1.0), 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(sin(0.0), 0.0, 0.0, 1.0), vec4(1.0, sqrt(1.0), 1.0, 0.0)), max(dot(vec4(sin(0.0), 0.0, 0.0, 1.0), vec4(1.0, sqrt(1.0), 1.0, 0.0)), dot(vec4(sin(0.0), 0.0, 0.0, 1.0), vec4(1.0, sqrt(1.0), 1.0, 0.0))))), 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))), vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-3732.5603) : _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))))), 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 0.0, 1.0)))), (true ? float(float(float(mat4x3(injectionSwitch.y, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, _GLF_IDENTITY(dot(vec4(sin(0.0), 0.0, 0.0, 1.0), vec4(1.0, sqrt(1.0), 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(sin(0.0), 0.0, 0.0, 1.0), vec4(1.0, sqrt(1.0), 1.0, 0.0)), max(dot(vec4(sin(0.0), 0.0, 0.0, 1.0), vec4(1.0, sqrt(1.0), 1.0, 0.0)), dot(vec4(sin(0.0), 0.0, 0.0, 1.0), vec4(1.0, sqrt(1.0), 1.0, 0.0))))), 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))), vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-3732.5603) : _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))))), 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 0.0, 1.0)))) : _GLF_FUZZED(length(12.67)))), _GLF_IDENTITY(float(float(float(mat4x3(injectionSwitch.y, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(sin(0.0), 0.0, 0.0, 1.0), vec4(1.0, sqrt(1.0), 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(sin(0.0), 0.0, 0.0, 1.0), vec4(1.0, sqrt(1.0), 1.0, 0.0)), max(dot(vec4(sin(0.0), 0.0, 0.0, 1.0), vec4(1.0, sqrt(1.0), 1.0, 0.0)), dot(vec4(sin(0.0), 0.0, 0.0, 1.0), vec4(1.0, sqrt(1.0), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((+ 5.1))), float(1.0), bool(true))), 0.0))))), 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 0.0, 1.0)))), max(float(float(float(mat4x3(injectionSwitch.y, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(sin(0.0), 0.0, 0.0, 1.0), vec4(1.0, sqrt(1.0), 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(sin(0.0), 0.0, 0.0, 1.0), vec4(1.0, sqrt(1.0), 1.0, 0.0)), max(dot(vec4(sin(0.0), 0.0, 0.0, 1.0), vec4(1.0, sqrt(1.0), 1.0, 0.0)), dot(vec4(sin(0.0), 0.0, 0.0, 1.0), vec4(1.0, sqrt(1.0), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((+ 5.1))), float(1.0), bool(true))), 0.0))))), 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 0.0, 1.0)))), float(float(float(mat4x3(injectionSwitch.y, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(sin(0.0), 0.0, 0.0, 1.0), vec4(1.0, sqrt(1.0), 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(sin(0.0), 0.0, 0.0, 1.0), vec4(1.0, sqrt(1.0), 1.0, 0.0)), max(dot(vec4(sin(0.0), 0.0, 0.0, 1.0), vec4(1.0, sqrt(1.0), 1.0, 0.0)), dot(vec4(sin(0.0), 0.0, 0.0, 1.0), vec4(1.0, sqrt(1.0), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((+ 5.1))), float(1.0), bool(true))), 0.0))))), 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 0.0, 1.0))))))))))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! ((false))))))) && true))) && true)), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! ((false))))))) && true))) && true)), bool(bool(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! ((false))))))) && true))) && true))))))))) || _GLF_IDENTITY(false, ! (! (false)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), mix(vec2(_GLF_FUZZED((-27.39 - vec3(-31.22, -10.86, 666.428)).z), (min(injectionSwitch, injectionSwitch))[1]), vec2(_GLF_IDENTITY((min(injectionSwitch, injectionSwitch))[0], clamp((min(injectionSwitch, injectionSwitch))[0], (min(injectionSwitch, injectionSwitch))[0], (min(injectionSwitch, injectionSwitch))[0])), _GLF_FUZZED(660.054)), bvec2(true, false)))), injectionSwitch)).y))))
  barrier();
 if((subgroup_local_id % 2) == 0)
  {
   subgroupAll(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, false, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))), true))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) - 0u), max(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((next_virtual_gid) - 0u, ~ (_GLF_IDENTITY(~ ((next_virtual_gid) - 0u), (_GLF_IDENTITY(~ ((next_virtual_gid) - 0u), clamp(~ ((next_virtual_gid) - 0u), ~ ((next_virtual_gid) - 0u), ~ ((next_virtual_gid) - 0u)))) - 0u)))), _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) - 0u)))], uint(2), 4, 64, _GLF_IDENTITY(4, clamp(4, 4, 4)));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), true && (false))) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) || false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, ! (! (false))), false), bvec3(bvec4(bvec3(false, false, false), false))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), ! (! _GLF_IDENTITY((! (false)), ((! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, ! (! (false))), false), bvec3(bvec4(bvec3(false, false, false), false)))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! ((false) && true))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) / 1.0) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))))
      barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   subgroupAll(false);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true), false, true))))))) && true))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))) || false)), (! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), false || ((injectionSwitch.x > injectionSwitch.y))))) || false))) && true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false) || false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, (true) && true)), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true, true, false))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(injectionSwitch.x, 0.0, 0.0), mat3(1.0) * (vec3(injectionSwitch.x, 0.0, 0.0))))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), false, _GLF_IDENTITY(false, ! (! (false))), false))), true, false, true)), _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), false, false, false))), true, false, true))), ! (_GLF_IDENTITY(! ((bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), false, false, false))), true, false, true)))), bool(_GLF_IDENTITY(bvec2(! ((bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), false, false, false))), true, false, true)))), true), bvec2(bvec2(bvec2(! ((bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), false, false, false))), true, false, true)))), true)))))))) && true)), false, true)), true && (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), ! (! (bool(false))))) || false)))))), bool(bool(_GLF_IDENTITY(false, bool(bool(false))))))) || false), false, true)))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))
          barrier();
         barrier();
        }
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (false)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) || false))), (injectionSwitch.x > injectionSwitch.y)))) && true)) && true))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((false ? _GLF_FUZZED(-963.337) : injectionSwitch.y), clamp(_GLF_IDENTITY((false ? _GLF_FUZZED(-963.337) : injectionSwitch.y), (true ? (false ? _GLF_FUZZED(-963.337) : injectionSwitch.y) : _GLF_FUZZED(32.38))), _GLF_IDENTITY((false ? _GLF_FUZZED(-963.337) : injectionSwitch.y), (true ? (false ? _GLF_FUZZED(-963.337) : injectionSwitch.y) : _GLF_FUZZED(0.4))), (false ? _GLF_FUZZED(-963.337) : injectionSwitch.y))))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
