#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_14 {
 int _f0;
} ;

struct _GLF_struct_12 {
 vec3 _f0;
 mat4x2 _f1;
 int _f2;
} ;

struct _GLF_struct_11 {
 vec3 _f0;
 bool _f1;
 uint _f2;
} ;

struct _GLF_struct_13 {
 _GLF_struct_11 _f0;
 bvec3 _f1;
 _GLF_struct_12 _f2;
} ;

struct _GLF_struct_9 {
 vec3 _f0;
} ;

struct _GLF_struct_8 {
 mat4x2 _f0;
 uint workgroup_id;
} ;

struct _GLF_struct_7 {
 int _f0;
 ivec4 _f1;
 bvec3 _f2;
 bvec2 _f3;
 vec4 _f4;
 vec4 _f5;
} ;

struct _GLF_struct_10 {
 ivec4 _f0;
 _GLF_struct_7 _f1;
 ivec3 _f2;
 _GLF_struct_8 _f3;
 _GLF_struct_9 _f4;
 ivec4 _f5;
} ;

struct _GLF_struct_5 {
 mat2x4 _f0;
 mat3x4 _f1;
} ;

struct _GLF_struct_4 {
 vec2 _f0;
 mat3x2 _f1;
 mat3x4 _f2;
} ;

struct _GLF_struct_3 {
 mat3x2 _f0;
 int _f1;
 mat3 _f2;
 ivec3 _f3;
 mat4x2 _f4;
 mat3x4 _f5;
 mat3x2 _f6;
} ;

struct _GLF_struct_6 {
 _GLF_struct_3 _f0;
 _GLF_struct_4 _f1;
 _GLF_struct_5 _f2;
} ;

struct _GLF_struct_15 {
 _GLF_struct_6 _f0;
 _GLF_struct_10 _f1;
 ivec4 _f2;
 bvec2 _f3;
 _GLF_struct_13 _f4;
 int _f5;
 _GLF_struct_14 _f6;
} ;

struct _GLF_struct_1 {
 mat2x3 _f0;
 bvec3 _f1;
 uvec4 _f2;
 uvec3 _f3;
 float _f4;
 mat4x3 _f5;
 mat4 _f6;
} ;

struct _GLF_struct_0 {
 vec3 _f0;
 ivec3 _f1;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 uint next_virtual_gid;
 _GLF_struct_1 _f1;
 mat3x2 _f2;
 float _f3;
 mat4x2 _f4;
 mat3x4 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), false, true, false))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && _GLF_IDENTITY(true, ! (! (true)))) && true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), ! (! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))))))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), false || ((false)))))) || false)) && true)), bool(bvec4(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)), true, false, true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 0.0, 1.0, 1.0))))), bool(bvec4(! (! (injectionSwitch.x > injectionSwitch.y)), true, false, true))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, bool(bool(false))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (false) || false)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), false || ((false))))))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false, false, false)), ! _GLF_IDENTITY((! (bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), true && (true && (false)))), false, false)))), bool(bool((! (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))))), false, false)), (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))))), false, false)), true && (bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false))))))), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false))))))))))))), false, false))))) && true)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(-4.9)), float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(-4.9)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (true ? injectionSwitch.y : _GLF_FUZZED(-4.9)) : _GLF_FUZZED(793.255))), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x3(5731.5875, -0.9, -8336.9996, 4.3, 2.1, 690.727, -1.7, -6.1, 98.84, -5061.2096, -4880.6695, -55.73)) : mat4x3(_GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(-4.9)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (true ? injectionSwitch.y : _GLF_FUZZED(-4.9)) : _GLF_FUZZED(793.255))), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0))))))) + 0.0), injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) && true))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 _GLF_struct_15 _GLF_struct_replacement_15 = _GLF_struct_15(_GLF_struct_6(_GLF_struct_3(mat3x2(1.0), 1, mat3(1.0), ivec3(1), mat4x2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((+ (96.50 + 9088.7575)))), bool(false)))), mat3x4(1.0), mat3x2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec4(1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 1.0, 0.0), mix(vec4(_GLF_FUZZED((-1.2 - 1.1)), _GLF_FUZZED(-660.951), (vec4(1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 1.0, 0.0))[2], _GLF_FUZZED(53.01)), vec4((vec4(1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 1.0, 0.0))[0], (vec4(1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 1.0, 0.0))[1], _GLF_FUZZED(-20.12), (vec4(1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 1.0, 0.0))[3]), bvec4(true, true, false, true))))))), _GLF_struct_4(vec2(1.0), mat3x2(1.0), mat3x4(1.0)), _GLF_struct_5(mat2x4(1.0), mat3x4(1.0))), _GLF_struct_10(ivec4(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(67116)))))), _GLF_struct_7(1, ivec4(1), bvec3(true), bvec2(true), vec4(1.0), vec4(1.0)), ivec3(1), _GLF_struct_8(mat4x2(1.0), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u))) + (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u)))), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + _GLF_IDENTITY((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u))), ((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u)))) / uvec3(1u, 1u, 1u))))).x), _GLF_struct_9(vec3(1.0)), ivec4(1)), ivec4(_GLF_IDENTITY(1, (1) ^ 0)), bvec2(true), _GLF_struct_13(_GLF_struct_11(vec3(1.0), true, 1u), bvec3(true), _GLF_struct_12(vec3(1.0), mat4x2(1.0), 1)), 1, _GLF_struct_14(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, max(1, 1)) : _GLF_FUZZED(-76295)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(float(_GLF_FUZZED(-9.0)), mix(float(_GLF_FUZZED(8462.2343)), float(float(_GLF_FUZZED(-9.0))), bool(true))), bool(false)))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) && true))), (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, true && ((false) && _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, true && (true))))))))))) && true)))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-863.396)), float(0.0), bool(true)))) * 1.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))))), 0.0, _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(800.968) : 1.0)), 1.0, log(1.0), _GLF_ONE(1.0, injectionSwitch.y), cos(0.0), 0.0, 1.0, 0.0), _GLF_IDENTITY(mat4(1.0) * (mat3x4(injectionSwitch, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) * mat3(1.0)), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * (vec3(0.0, 1.0, 0.0))))), vec3(0.0, 1.0, 0.0)), (dot(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), vec3(vec3(vec3(0.0, 1.0, 0.0))))) * vec3(1.0, 1.0, 1.0)), vec3(0.0, 1.0, 0.0))) + 0.0)), 0.0, 1.0, 1.0, log(1.0), _GLF_ONE(1.0, injectionSwitch.y), cos(0.0), 0.0, 1.0, 0.0)), mat3x4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(1.0) * (mat3x4(injectionSwitch, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 1.0, 1.0, log(1.0), _GLF_ONE(1.0, injectionSwitch.y), cos(0.0), 0.0, 1.0, 0.0))))))).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, (false) && true)))), (! (! (! (_GLF_IDENTITY(false, (false) && true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec3(bvec2(false, true), true)))), bvec2(bvec2(bvec2(bvec2(bvec2(bvec3(bvec2(false, true), true))))))))))), (false) && true)))), _GLF_IDENTITY(! (! (! (! (! (_GLF_IDENTITY(false, (false) && true)))))), bool(_GLF_IDENTITY(bvec3(! (! (! (! (! (_GLF_IDENTITY(false, (false) && true)))))), true, false), bvec3(bvec3(bvec3(! (! (! (! (! (_GLF_IDENTITY(false, (false) && true)))))), true, false))))))), false, true))))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(workgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)), (1u ^ 1u), 0u), (uvec4(workgroup_size, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))))) : _GLF_FUZZED(-4.0)))), (1u ^ 1u), 0u)) * uvec4(1u, 1u, 1u, 1u)), (_GLF_IDENTITY(uvec4(workgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)), (1u ^ 1u), 0u), (uvec4(workgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)), (1u ^ 1u), 0u)) * uvec4(1u, 1u, 1u, 1u))) ^ uvec4(0u, 0u, 0u, 0u)))) * _GLF_struct_replacement_15._f1._f3.workgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-990.365, -7.9)) : injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-990.365, -7.9)) : injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-990.365, -7.9)) : injectionSwitch)).y))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), min(0.0, 0.0)), 0.0, 0.0)), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5.1)), float(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0))), bool(true))), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, 1.0 * (0.0)) : _GLF_FUZZED(99.80))))))) + vec2(0.0, 0.0)).y)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[0], mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(206.285), (true ? _GLF_FUZZED(206.285) : _GLF_FUZZED(-16.88))), float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(206.285), (true ? _GLF_FUZZED(206.285) : _GLF_FUZZED(-16.88))), 0.0 + (_GLF_IDENTITY(_GLF_FUZZED(206.285), (true ? _GLF_FUZZED(206.285) : _GLF_FUZZED(-16.88))))), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, sqrt(0.0)), mat3(1.0) * (mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(206.285), (true ? _GLF_FUZZED(206.285) : _GLF_FUZZED(-16.88))), 0.0 + (_GLF_IDENTITY(_GLF_FUZZED(206.285), (true ? _GLF_FUZZED(206.285) : _GLF_FUZZED(-16.88))))), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, sqrt(0.0))))))), float(injectionSwitch[0]), bool(true))), injectionSwitch[1])), _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(-69.89, _GLF_IDENTITY(2.6, clamp(2.6, 2.6, 2.6)), -2.0, -8.6)) : mat2(1.0))) * (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(206.285)), float(injectionSwitch[0]), bool(true))), injectionSwitch[1]))), (false ? _GLF_FUZZED(degrees(injectionSwitch)) : _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(-69.89, 2.6, -2.0, -8.6)) : mat2(1.0))) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, 1 * _GLF_IDENTITY((0), int(int(_GLF_IDENTITY((0), ~ (~ ((0))))))))], mix(float(_GLF_FUZZED(206.285)), float(injectionSwitch[0]), bool(true))), injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec4(1, 0, 1, 0)))) + 0)]))), mix(vec2(_GLF_FUZZED(-9245.5497), _GLF_FUZZED(float(false))), vec2(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, 1 * (0))], mix(float(_GLF_FUZZED(_GLF_IDENTITY(206.285, (false ? _GLF_FUZZED(-4.4) : 206.285)))), float(injectionSwitch[0]), bool(true))), injectionSwitch[1]))))[0], 0.0 + (((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, 1 * _GLF_IDENTITY((0), min(_GLF_IDENTITY((0), ((0)) + 0), _GLF_IDENTITY((0), (true ? (0) : _GLF_FUZZED(-55219))))))], mix(float(_GLF_FUZZED(206.285)), float(injectionSwitch[0]), bool(true))), _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1]))))))))))[0])), ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, 1 * (0))], mix(float(_GLF_FUZZED(206.285)), float(injectionSwitch[0]), bool(true))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0)))))[1]))))[1]), bvec2(true, true)))))).y, (false ? _GLF_FUZZED(-55.95) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_IDENTITY(_GLF_FUZZED(206.285), (true ? _GLF_FUZZED(206.285) : _GLF_IDENTITY(_GLF_FUZZED(-16.88), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(_GLF_FUZZED(-16.88), (_GLF_FUZZED(-16.88)) * abs(1.0)), 0.0, 0.0, 0.0, 1.0, 1.0), (true ? _GLF_IDENTITY(mat2x3(_GLF_IDENTITY(_GLF_FUZZED(-16.88), (_GLF_FUZZED(-16.88)) * abs(1.0)), 0.0, 0.0, 0.0, 1.0, 1.0), (true ? mat2x3(_GLF_IDENTITY(_GLF_FUZZED(-16.88), (_GLF_FUZZED(-16.88)) * abs(1.0)), 0.0, 0.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(mat2x3(-5526.1373, 84.55, 316.075, -41.25, 27.17, 7.9)))) : _GLF_FUZZED(mat2x3(-1.9, -395.094, -133.894, -70.09, -7.1, 6712.3892))))), (float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(_GLF_FUZZED(-16.88), (_GLF_FUZZED(-16.88)) * abs(1.0)), 0.0, 0.0, 0.0, 1.0, 1.0), (true ? _GLF_IDENTITY(mat2x3(_GLF_IDENTITY(_GLF_FUZZED(-16.88), (_GLF_FUZZED(-16.88)) * abs(1.0)), 0.0, 0.0, 0.0, 1.0, 1.0), (true ? mat2x3(_GLF_IDENTITY(_GLF_FUZZED(-16.88), (_GLF_FUZZED(-16.88)) * abs(1.0)), 0.0, 0.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(mat2x3(-5526.1373, 84.55, 316.075, -41.25, 27.17, 7.9)))) : _GLF_FUZZED(mat2x3(-1.9, -395.094, -133.894, -70.09, -7.1, 6712.3892)))))) - abs(0.0)))))), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))[0]), clamp(float(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))[0]), float(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))[0]), float(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))[0]))), bool(true))), injectionSwitch[1])), _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(-69.89, 2.6, -2.0, _GLF_IDENTITY(-8.6, mix(float(_GLF_FUZZED(-31.86)), float(-8.6), bool(true))))) : mat2(1.0))) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(206.285)), float(injectionSwitch[0]), bool(true))), injectionSwitch[1]), (vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(206.285)), float(injectionSwitch[0]), bool(true))), injectionSwitch[1])) * mat2(1.0)))), (false ? _GLF_FUZZED(degrees(injectionSwitch)) : _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(-69.89, 2.6, -2.0, -8.6)) : mat2(1.0))) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, 1 * (0))], mix(float(_GLF_FUZZED(206.285)), float(injectionSwitch[0]), bool(true))), injectionSwitch[1]))), mix(vec2(_GLF_FUZZED(-9245.5497), _GLF_FUZZED(float(false))), vec2(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, 1 * (0))], mix(float(_GLF_FUZZED(206.285)), float(injectionSwitch[0]), bool(true))), injectionSwitch[1]))))[0], 0.0 + (((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, 1 * (0))], mix(float(_GLF_FUZZED(206.285)), float(injectionSwitch[0]), bool(true))), injectionSwitch[1]))))[0])), ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, 1 * (0))], _GLF_IDENTITY(mix(float(_GLF_FUZZED(206.285)), float(injectionSwitch[0]), bool(true)), clamp(mix(float(_GLF_FUZZED(206.285)), float(injectionSwitch[0]), bool(true)), mix(float(_GLF_FUZZED(206.285)), float(injectionSwitch[0]), bool(true)), mix(float(_GLF_FUZZED(206.285)), float(injectionSwitch[0]), bool(true))))), _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1]))))))[1]), bvec2(true, true)))))).y))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! (_GLF_IDENTITY((! (_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false)), true, false), bvec3(bvec3(bvec3((! (_GLF_DEAD(false))), true, false)))))))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-746.402) : injectionSwitch.x)) > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(833.457)))))))) || false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), true && (bool(bool(injectionSwitch.x > injectionSwitch.y))))) || false))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))), ! (! (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))))), false)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, ! (! (false)))), false), bvec2(bvec3(bvec2(! (_GLF_IDENTITY(false, ! (! (false)))), false), true))))))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)), true && (bool(bvec2(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)))))))))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8609.7631)), bool(false))) > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), mat2(_GLF_IDENTITY(mat4x2(mat2(1.0)), (true ? mat4x2(mat2(1.0)) : _GLF_FUZZED(mat4x2(2.2, 2733.5260, -38.01, 22.91, -9.7, 9.2, 1.7, -52.16)))))) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y)) && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(0.8)), bool(false))))) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(0.8)), bool(false))))) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(0.8)), bool(false))))) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), true, false)))) && true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(-219.849)), vec2(_GLF_FUZZED(-83.46), (injectionSwitch)[1]), bvec2(false, true))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, sqrt(0.0)))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) + vec2(0.0, 0.0)).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) / vec2(1.0, 1.0))), max(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) / vec2(1.0, 1.0))), mix(vec2(_GLF_FUZZED(-202.341), _GLF_FUZZED(-8.0)), vec2(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) / vec2(1.0, 1.0))))[0], ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) / vec2(1.0, 1.0))))[1]), bvec2(true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) / vec2(1.0, 1.0))))) + vec2(0.0, 0.0)).x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(false)), false, true), bvec3(bvec3(bvec3(! (_GLF_DEAD(false)), false, true)))))))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y)), (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y))) || false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(_GLF_struct_0(vec3(1.0), ivec3(1)), workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) - 0), max(subgroup_local_id + 1, subgroup_local_id + 1))) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), 0u | (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | 0u))) | 0u)), _GLF_struct_1(mat2x3(1.0), bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(false || (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), ! (! (! _GLF_IDENTITY((! (true)), ! (! ((! (true)))))))))), false || (false || (true))))), uvec4(1u), uvec3(_GLF_IDENTITY(1u, max(1u, 1u))), 1.0, mat4x3(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), min(_GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_IDENTITY(_GLF_FUZZED(-2460.5802), (_GLF_FUZZED(-2460.5802)) * 1.0)), bool(false))), (1.0))) + 0.0)), mat4(1.0)), mat3x2(1.0), 1.0, mat4x2(1.0), mat3x4(1.0));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), max(max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))), true && _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-6625.8016)), float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-4.1) : injectionSwitch.x))), bool(true))))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, log(1.0), 1.0, 1.0))) > injectionSwitch.y)))), true && ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-6625.8016)), float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-4.1) : injectionSwitch.x))), bool(true))))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, log(1.0), 1.0, 1.0))) > injectionSwitch.y)))))), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, bool(bool(true))))) && ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-6625.8016)), float(injectionSwitch.x), bool(true))))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, log(1.0), 1.0, 1.0))) > injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, (false) || false), false, false)))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y) + 0.0))), injectionSwitch.y, injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 atomicStore(buf[virtual_gid], uint(1), _GLF_IDENTITY(4, int(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY((4), ((4)) >> 0)), 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(_GLF_struct_replacement_2.next_virtual_gid, (_GLF_IDENTITY(_GLF_struct_replacement_2.next_virtual_gid, (_GLF_struct_replacement_2.next_virtual_gid) >> 0u)) + (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))], uint(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(2, (2) >> 0), 0, 1, 0)), (_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(2, (2) >> 0), 0, 1, 0)), (int(ivec4(_GLF_IDENTITY(2, (2) >> 0), 0, 1, 0))) | (int(ivec4(_GLF_IDENTITY(2, (2) >> 0), 0, 1, 0))))) >> 0)), 2))), 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))) ? _GLF_FUZZED(99532) : _GLF_IDENTITY(4, 0 | _GLF_IDENTITY((_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) << _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0))), 4, _GLF_IDENTITY(4, 0 | (4))))))), (false ? _GLF_FUZZED(-86737) : (_GLF_IDENTITY(4, max(4, 4))))))), int(_GLF_IDENTITY(int((false ? _GLF_FUZZED(_GLF_IDENTITY(99532, (_GLF_IDENTITY(99532, (99532) | (99532))) | 0)) : _GLF_IDENTITY(4, 0 | _GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY(max(4, 4), (false ? _GLF_FUZZED(-75241) : _GLF_IDENTITY(max(4, 4), max(max(4, 4), max(4, 4))))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(-86737) : (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) - 0), 4, 4))))))), (false ? _GLF_FUZZED(-86737) : (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) - 0), 4, 4)))))))) | 0)))))), (int((_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(99532) : _GLF_IDENTITY(4, 0 | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), 0 + (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) >> 0), 4))))), (false ? _GLF_FUZZED(-86737) : (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(max(4, 4), (max(4, 4)) / 1)), (_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (46197 & 0)), max(4, 4)), clamp(_GLF_IDENTITY(4, max(4, 4)), _GLF_IDENTITY(4, max(4, 4)), _GLF_IDENTITY(4, _GLF_IDENTITY(max(4, 4), (max(4, 4)) - 0)))) : _GLF_FUZZED(57125)))) - 0)))))))) | (_GLF_IDENTITY(int(_GLF_IDENTITY((false ? _GLF_FUZZED(99532) : _GLF_IDENTITY(4, 0 | _GLF_IDENTITY((_GLF_IDENTITY(4, max(4, 4))), (false ? _GLF_IDENTITY(_GLF_FUZZED(-86737), min(_GLF_FUZZED(-86737), _GLF_FUZZED(-86737))) : (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1)))))))), min((false ? _GLF_FUZZED(99532) : _GLF_IDENTITY(4, 0 | _GLF_IDENTITY((_GLF_IDENTITY(4, max(4, 4))), (false ? _GLF_IDENTITY(_GLF_FUZZED(-86737), min(_GLF_FUZZED(-86737), _GLF_FUZZED(-86737))) : (_GLF_IDENTITY(4, max(4, 4))))))), (false ? _GLF_FUZZED(99532) : _GLF_IDENTITY(_GLF_IDENTITY(4, 0 | _GLF_IDENTITY((_GLF_IDENTITY(4, max(4, 4))), (false ? _GLF_IDENTITY(_GLF_FUZZED(-86737), min(_GLF_FUZZED(-86737), _GLF_FUZZED(-86737))) : (_GLF_IDENTITY(4, max(4, 4)))))), 0 | (_GLF_IDENTITY(4, 0 | _GLF_IDENTITY((_GLF_IDENTITY(4, max(4, 4))), (false ? _GLF_IDENTITY(_GLF_FUZZED(-86737), min(_GLF_FUZZED(-86737), _GLF_FUZZED(-86737))) : (_GLF_IDENTITY(4, max(4, 4)))))))))))), _GLF_IDENTITY(int(ivec4(int((false ? _GLF_FUZZED(99532) : _GLF_IDENTITY(4, 0 | _GLF_IDENTITY((_GLF_IDENTITY(4, max(4, 4))), (false ? _GLF_FUZZED(-86737) : _GLF_IDENTITY((_GLF_IDENTITY(4, max(4, 4))), 0 | (_GLF_IDENTITY((_GLF_IDENTITY(4, max(4, 4))), clamp((_GLF_IDENTITY(4, max(4, 4))), (_GLF_IDENTITY(4, max(4, 4))), (_GLF_IDENTITY(4, max(4, 4)))))))))))), 1, 1, 1)), int(_GLF_IDENTITY(int(int(ivec4(int((false ? _GLF_FUZZED(99532) : _GLF_IDENTITY(4, 0 | _GLF_IDENTITY((_GLF_IDENTITY(4, max(4, 4))), (false ? _GLF_FUZZED(-86737) : _GLF_IDENTITY((_GLF_IDENTITY(4, max(4, 4))), 0 | (_GLF_IDENTITY((_GLF_IDENTITY(4, max(4, 4))), clamp((_GLF_IDENTITY(4, max(4, 4))), (_GLF_IDENTITY(4, max(4, 4))), (_GLF_IDENTITY(4, max(4, 4)))))))))))), 1, 1, 1))), (false ? _GLF_FUZZED(49605) : int(int(ivec4(int((false ? _GLF_FUZZED(99532) : _GLF_IDENTITY(4, 0 | _GLF_IDENTITY((_GLF_IDENTITY(4, max(4, 4))), (false ? _GLF_FUZZED(-86737) : _GLF_IDENTITY((_GLF_IDENTITY(4, max(4, 4))), 0 | (_GLF_IDENTITY((_GLF_IDENTITY(4, max(4, 4))), clamp((_GLF_IDENTITY(4, max(4, 4))), (_GLF_IDENTITY(4, max(4, 4))), (_GLF_IDENTITY(4, max(4, 4)))))))))))), 1, 1, 1))))))))))))));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   subgroupAll(false);
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[_GLF_struct_replacement_2.next_virtual_gid], uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY(0 | (2), max(0 | (2), _GLF_IDENTITY(0 | (2), (0 | (2)) | (0 | (2))))))) ^ 0)), 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   subgroupAll(true);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), (true ? mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch) : _GLF_FUZZED(injectionSwitch)))).x > injectionSwitch.y)), (((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), (true ? mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch) : _GLF_FUZZED(injectionSwitch)))).x > injectionSwitch.y))) && true) || false), true, true, false))))))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
