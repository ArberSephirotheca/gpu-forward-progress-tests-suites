#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uvec2 GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / exp(vec2(0.0, 0.0)))).x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true)))))))))))
      barrier();
    }
  }
 GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y = subgroup_id;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) && true)))
    barrier();
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true, true)))))))
        barrier();
       barrier();
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, false || (false)), true)), bool(_GLF_IDENTITY(bvec2(bool(bvec2(_GLF_IDENTITY(false, false || (false)), true)), false), bvec2(bvec3(bvec2(bool(bvec2(_GLF_IDENTITY(false, false || (false)), true)), false), false)))))) || (_GLF_WRAPPED_IF_TRUE(true))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, false || (false)), true)), bool(_GLF_IDENTITY(bvec2(bool(bvec2(_GLF_IDENTITY(false, false || (false)), true)), false), bvec2(bvec3(bvec2(bool(bvec2(_GLF_IDENTITY(false, false || (false)), true)), false), false)))))) || (_GLF_WRAPPED_IF_TRUE(true))), true, true), false))))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), max(_GLF_IDENTITY(int(6), int(6)), _GLF_IDENTITY(int(6), int(6)))), _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, 1 * (1)) : _GLF_FUZZED(int(-3.1)))), 0)), _GLF_IDENTITY(int(ivec3(int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), max(_GLF_IDENTITY(int(6), int(6)), _GLF_IDENTITY(int(6), int(6)))), 1, 0)), 0, 1)), (int(ivec3(int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(6, (true ? 6 : _GLF_FUZZED(75079)))), int(_GLF_IDENTITY(6, (true ? 6 : _GLF_FUZZED(13076))))), max(_GLF_IDENTITY(int(6), int(6)), _GLF_IDENTITY(int(6), int(6)))), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(int(1)))) ^ 0), 0)), _GLF_IDENTITY(0, ~ (~ (0))), 1))) >> 0)))) >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u)).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (1 ^ 1)); _injected_loop_counter --)
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint subgroup_base = GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size), (workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)) + 0u), clamp(_GLF_IDENTITY(workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size), 0u | (workgroup_base + subgroup_base + (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))), ((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_local_id + 1, uint(uint(subgroup_local_id + 1))))))))) | ((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))))) % subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))), ((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_local_id + 1, uint(uint(subgroup_local_id + 1))))))))) | ((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))))) % subgroup_size), (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_local_id + 1, uint(uint(subgroup_local_id + 1)))))))), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_local_id + 1, uint(uint(subgroup_local_id + 1)))))))), 0u ^ ((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_local_id + 1, uint(uint(subgroup_local_id + 1)))))))))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_local_id + 1, uint(uint(subgroup_local_id + 1)))))))), 0u ^ ((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_local_id + 1, uint(uint(subgroup_local_id + 1))))))))))))) | ((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))))) % subgroup_size)) | (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))), ((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_local_id + 1, uint(uint(subgroup_local_id + 1))))))))) | ((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))))) % subgroup_size), max(~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))), ((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_local_id + 1, uint(uint(subgroup_local_id + 1))))))))) | ((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))))) % subgroup_size), ~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))), ((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_local_id + 1, uint(uint(subgroup_local_id + 1)))), ((false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_local_id + 1, uint(uint(subgroup_local_id + 1))))) << 0u)))))) | ((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))))) % subgroup_size)))))))))), workgroup_base + subgroup_base + _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u)), (((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u))) << 0u), _GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec4(workgroup_base + _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), 0u, 1u, 1u))) + ((subgroup_local_id + 1) % subgroup_size)));
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((0 >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(_GLF_IDENTITY(int(5), 1 * (int(5))), int(int(_GLF_IDENTITY(int(5), 1 * (int(5)))))))) << _GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 | (_GLF_IDENTITY(int(3), (_GLF_IDENTITY(false ? _GLF_FUZZED(findLSB(_injected_loop_counter)) : int(3), _GLF_IDENTITY(int(ivec3(false ? _GLF_FUZZED(findLSB(_injected_loop_counter)) : int(3), 0, 0)), (int(ivec3(false ? _GLF_FUZZED(findLSB(_injected_loop_counter)) : int(3), 0, 0))) * (1 | 1))))))), max(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY((int(3)), (false ? _GLF_FUZZED(-92183) : (int(3)))) | (int(3)))))))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
   _GLF_IDENTITY(GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.x = _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) >> _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(uint(0u), 0u ^ (uint(0u)))) - (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (true ? ~ (0u) : _GLF_FUZZED(num_workgroup))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), _GLF_IDENTITY((uint(4u)), max(_GLF_IDENTITY((uint(4u)), ((uint(4u))) - 0u), _GLF_IDENTITY((uint(4u)), ((uint(4u))) | ((uint(4u)))))) << (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), max(uint(3u), uint(3u)))))), uint(4u))) * 1u)))), (uint(_GLF_IDENTITY(uint(0u), uint(uvec2(_GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(uint(0u), (false ? _GLF_FUZZED(subgroup_base) : uint(0u)))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(0u, (0u) / 1u)))))))) * 1u), uint(uint(0u)))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(162930u), (_GLF_FUZZED(162930u)) - (0u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) | (uint(0u)))))) : _GLF_IDENTITY(GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.x = _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) >> 0u), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.x = _GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (false ? _GLF_FUZZED(workgroup_size) : next_virtual_gid)), (next_virtual_gid) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.x = _GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid)), (next_virtual_gid) >> 0u))), ~ (~ (~ (~ (GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.x = _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) >> 0u)))))), ~ (~ (_GLF_IDENTITY(~ (~ (GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.x = _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) >> 0u))), ~ (~ (~ _GLF_IDENTITY((~ (GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.x = _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) >> 0u))), ((~ (GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.x = _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) >> 0u)))) | 0u))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.x = _GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, 0u | (next_virtual_gid)), max(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (next_virtual_gid))))) >> _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(0u, max(0u, 0u))))) | (0u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) + 0u)))))))), ~ (~ (GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.x = _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) >> 0u))))), 0u | ((_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.x = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)), (next_virtual_gid) / 1u), (next_virtual_gid) >> 0u), ~ (~ (GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.x = _GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) >> 0u), (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) >> 0u)) | (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) >> 0u)))))))))) ^ 0u)))));
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, clamp(1, 1, 1))); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), true))))), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))), bool(bvec3(true, false, true))) ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(-95.51, -8.8)))).x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-873.865), _GLF_FUZZED(3.9)), bvec2(false, false))), injectionSwitch)).y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), min(int(0), int(0)))))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(0.2)))))))
            barrier();
           barrier();
          }
        }
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true))), (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)), transpose(transpose(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0))))) * (injectionSwitch)).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (! (_GLF_IDENTITY(false, true && (false)))) || false)) && true), (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))))) || false))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))), (injectionSwitch) * cos(vec2(0.0, 0.0))).y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      barrier();
     barrier();
    }
   barrier();
  }
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((subgroup_local_id % 2) == 0)
  {
   for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, 0.0)), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, 0.0)), (true ? float(vec3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, 0.0)) : _GLF_FUZZED(-6044.2109))), determinant(mat4(exp(0.0), log(1.0), tan(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, sin(0.0), 0.0, 0.0, 1.0)), cos(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), min(float(mat3(_GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, 0.0)), (true ? float(vec3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, 0.0)) : _GLF_FUZZED(-6044.2109))), determinant(mat4(exp(0.0), log(1.0), tan(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, sin(0.0), 0.0, 0.0, 1.0)), cos(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), float(mat3(_GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, 0.0)), (true ? float(vec3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, 0.0)) : _GLF_FUZZED(-6044.2109))), determinant(mat4(exp(0.0), log(1.0), tan(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, sin(0.0), 0.0, 0.0, 1.0)), cos(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))), max(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(9.4))), injectionSwitch.y))), min(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 0.0))), max(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(9.4))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), min(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((mat3x2(-7.4, -72.44, -3519.0843, -98.97, -4066.6430, -4.7) * vec3(3057.4726, 84.36, 9.2))))))).y, float(vec3(injectionSwitch.y, 1.0, 0.0))), max(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, _GLF_IDENTITY(false, false || (false)) || (true)) ? injectionSwitch.y : _GLF_FUZZED(9.4))), injectionSwitch.y))), _GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 0.0))), max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(9.4)), mix(float((true ? injectionSwitch.y : _GLF_FUZZED(9.4))), float(_GLF_FUZZED(2.2)), bool(false)))), injectionSwitch.y))))), _GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(44.70)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0)), mix(float(float(vec3(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(44.70)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0))), float(_GLF_FUZZED(9238.0341)), bool(false)))), max(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(9.4, (_GLF_IDENTITY(9.4, 0.0 + (9.4))) + 0.0)))), injectionSwitch.y))))), _GLF_IDENTITY(clamp(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(mat2x4(_GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(mat2x4(_GLF_ONE(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-833.098)), float(_GLF_IDENTITY(1.0, (1.0) / 1.0)), bool(true))) : _GLF_FUZZED(sin(mix(-6171.3468, -5.5, false))))), injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))), clamp(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(mat2x4(_GLF_ONE(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-833.098)), float(_GLF_IDENTITY(1.0, (1.0) / 1.0)), bool(true))) : _GLF_FUZZED(sin(mix(-6171.3468, -5.5, false))))), injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(mat2x4(_GLF_ONE(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-833.098)), float(_GLF_IDENTITY(1.0, (1.0) / 1.0)), bool(true))) : _GLF_FUZZED(sin(mix(-6171.3468, -5.5, false))))), injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(mat2x4(_GLF_ONE(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-833.098)), float(_GLF_IDENTITY(1.0, (1.0) / 1.0)), bool(true))) : _GLF_FUZZED(sin(mix(-6171.3468, -5.5, false))))), injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)))))), float(_GLF_IDENTITY(_GLF_FUZZED(4.3), (true ? _GLF_IDENTITY(_GLF_FUZZED(4.3), min(_GLF_FUZZED(4.3), _GLF_FUZZED(4.3))) : _GLF_FUZZED(-9.3)))), bool(false)))))), mix(float(_GLF_FUZZED(-621.186)), float(clamp(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-42.19)), bool(false)))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(mat2x4(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(mat2x4(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y))), 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, cos(0.0)))))), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))), mix(float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(mat2x4(_GLF_ONE(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-833.098)), float(_GLF_IDENTITY(1.0, (1.0) / 1.0)), bool(true))) : _GLF_FUZZED(sin(mix(-6171.3468, -5.5, false))))), injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)))), float(_GLF_IDENTITY(_GLF_FUZZED(4.3), (true ? _GLF_IDENTITY(_GLF_FUZZED(4.3), min(_GLF_FUZZED(4.3), _GLF_FUZZED(4.3))) : _GLF_FUZZED(-9.3)))), bool(false))))))), bool(true)))), (_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 0.0))), max(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(9.4))), injectionSwitch.y))), clamp(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(9866.0361), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[1], ((mat2(1.0) * (injectionSwitch))[1]) + 0.0)), vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-17.79)), bvec2(true, false)))))), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y), sin(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) + (_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(9866.0361), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[1], ((mat2(1.0) * (injectionSwitch))[1]) + 0.0)), vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-17.79)), bvec2(true, false)))))), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y), clamp(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(9866.0361), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[1], ((mat2(1.0) * (injectionSwitch))[1]) + 0.0)), vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-17.79)), bvec2(true, false)))))), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y), _GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(9866.0361), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[1], ((mat2(1.0) * (injectionSwitch))[1]) + 0.0)), vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-17.79)), bvec2(true, false)))))), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y), (_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(9866.0361), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[1], ((mat2(1.0) * (injectionSwitch))[1]) + 0.0)), vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-17.79)), bvec2(true, false)))))), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y)) / 1.0), _GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(9866.0361), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[1], ((mat2(1.0) * (injectionSwitch))[1]) + 0.0)), vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-17.79)), bvec2(true, false)))))), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(mat2x4(_GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0))), mix(float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(mat2x4(_GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), bool(bool(_GLF_IDENTITY(! (true), (! (true)) || false)))))))))) ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0))) / sqrt(1.0)), mix(float(_GLF_FUZZED(-833.098)), float(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) + 0.0)) / 1.0)), bool(true))) : _GLF_FUZZED(sin(mix(-6171.3468, -5.5, false))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-833.098)), float(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED(-98.76)), bool(false))) / 1.0)), bool(_GLF_IDENTITY(true, (true) && true)))) : _GLF_FUZZED(sin(mix(-6171.3468, -5.5, false))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-833.098)), float(_GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(sqrt(-2.7)))))), bool(true))) : _GLF_FUZZED(sin(mix(-6171.3468, -5.5, false))))) : _GLF_FUZZED(-7.1))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-833.098), float(mat3(_GLF_IDENTITY(_GLF_FUZZED(-833.098), (_GLF_IDENTITY(_GLF_FUZZED(-833.098), max(_GLF_FUZZED(-833.098), _GLF_FUZZED(-833.098)))) * sqrt(1.0)), sqrt(1.0), 1.0, 1.0, 1.0, exp(log(1.0)), determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)), abs(1.0), 1.0)))), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(1.0, 1.0), mat2(1.0) * (vec2(1.0, 1.0))))), (1.0) / _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))), bool(true))) : _GLF_FUZZED(sin(mix(-6171.3468, -5.5, false))))), mix(float(_GLF_FUZZED(-5.4)), float(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), mix(float(_GLF_FUZZED(-833.098)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), min(_GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED(0.6)), bool(false))), _GLF_IDENTITY((1.0), max((1.0), (1.0))))) / 1.0), float(mat2(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), min(_GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED(0.6)), bool(false))), _GLF_IDENTITY((1.0), max((1.0), (1.0))))) / 1.0), float(mat2(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(float(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), min(_GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED(0.6)), bool(false))), _GLF_IDENTITY((1.0), max((1.0), (1.0))))) / 1.0), float(mat2(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), min(_GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED(0.6)), bool(false))), _GLF_IDENTITY((1.0), max((1.0), (1.0))))) / 1.0), float(mat2(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))))))), max(float(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), min(_GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED(0.6)), bool(false))), _GLF_IDENTITY((1.0), max((1.0), (1.0))))) / 1.0), float(mat2(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), min(_GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED(0.6)), bool(false))), _GLF_IDENTITY((1.0), max((1.0), (1.0))))) / 1.0), float(mat2(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))))))), float(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), min(_GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED(0.6)), bool(false))), _GLF_IDENTITY((1.0), max((1.0), (1.0))))) / 1.0), float(mat2(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), min(_GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED(0.6)), bool(false))), _GLF_IDENTITY((1.0), max((1.0), (1.0))))) / 1.0), float(mat2(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), min(_GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED(0.6)), bool(false))), _GLF_IDENTITY((1.0), max((1.0), (1.0))))) / 1.0), float(mat2(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), min(_GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED(0.6)), bool(false))), _GLF_IDENTITY((1.0), max((1.0), (1.0))))) / 1.0), float(mat2(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), 0.0, 1.0, 0.0, 1.0, 0.0, log(1.0), 1.0, 1.0, 0.0, log(1.0), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))))))))), bool(true))) : _GLF_FUZZED(sin(mix(-6171.3468, -5.5, false)))))), bool(true))), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-833.098)), float(_GLF_IDENTITY(1.0, (1.0) / 1.0)), bool(true))) : _GLF_FUZZED(sin(mix(-6171.3468, -5.5, false))))))), injectionSwitch.y), 1.0, _GLF_IDENTITY(0.0, float(vec3(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0)), 0.0, 1.0))), 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0)))), float(_GLF_IDENTITY(_GLF_FUZZED(4.3), (true ? _GLF_IDENTITY(_GLF_FUZZED(4.3), min(_GLF_FUZZED(4.3), _GLF_FUZZED(4.3))) : _GLF_FUZZED(-9.3)))), bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))) * 1.0)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_injected_loop_counter != 0, false), bvec2(bvec4(bvec2(_injected_loop_counter != _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) | 0)) + 0), false), false, true)))), ! (! (bool(_GLF_IDENTITY(bvec2(_injected_loop_counter != 0, false), bvec2(bvec4(bvec2(_injected_loop_counter != 0, false), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! _GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), true && ((! (false))))))), true))))))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(2.2)), float(injectionSwitch.y), bool(true))))) && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)), _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) / int(_GLF_ONE(1.0, injectionSwitch.y))))) != 0, false), bvec2(bvec4(bvec2(_injected_loop_counter != _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), min(0, 0))) | 0)) + 0), false), false, true)))), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_injected_loop_counter != 0, false), bvec2(bvec4(bvec2(_injected_loop_counter != 0, false), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false))), true))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_injected_loop_counter != 0, false), bvec2(bvec4(bvec2(_injected_loop_counter != 0, false), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false))), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_injected_loop_counter != 0, false), bvec2(bvec4(bvec2(_injected_loop_counter != 0, false), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false))), true))), false, true))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_injected_loop_counter != 0, false), bvec2(bvec4(bvec2(_injected_loop_counter != 0, false), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false))), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_injected_loop_counter != 0, false), bvec2(bvec4(bvec2(_injected_loop_counter != 0, false), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false))), true))), false, true))), false), false)))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_injected_loop_counter != 0, false), bvec2(bvec4(bvec2(_injected_loop_counter != 0, false), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false))), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_injected_loop_counter != 0, false), bvec2(bvec4(bvec2(_injected_loop_counter != 0, false), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false))), true))), false, true))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_injected_loop_counter != 0, false), bvec2(bvec4(bvec2(_injected_loop_counter != 0, false), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false))), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_injected_loop_counter != 0, false), bvec2(bvec4(bvec2(_injected_loop_counter != 0, false), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false))), true))), false, true))), false), false)))))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_injected_loop_counter != 0, false), bvec2(bvec4(bvec2(_injected_loop_counter != 0, false), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false))), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_injected_loop_counter != 0, false), bvec2(bvec4(bvec2(_injected_loop_counter != 0, false), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false))), true))), false, true))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_injected_loop_counter != 0, false), bvec2(bvec4(bvec2(_injected_loop_counter != 0, false), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false))), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_injected_loop_counter != 0, false), bvec2(bvec4(bvec2(_injected_loop_counter != 0, false), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false))), true))), false, true))), false), false)))))))))))))), (! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_injected_loop_counter != 0, false), bvec2(bvec4(bvec2(_injected_loop_counter != 0, false), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false))), true))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_injected_loop_counter != 0, false), bvec2(bvec4(bvec2(_injected_loop_counter != 0, false), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false))), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_injected_loop_counter != 0, false), bvec2(bvec4(bvec2(_injected_loop_counter != 0, false), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false))), true))), false, false))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_injected_loop_counter != 0, false), bvec2(bvec4(bvec2(_injected_loop_counter != 0, false), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false))), true))), false, true))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_injected_loop_counter != 0, false), bvec2(bvec4(bvec2(_injected_loop_counter != 0, false), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false))), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_injected_loop_counter != 0, false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_injected_loop_counter != 0, true && (_injected_loop_counter != 0)), false), _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false)), ! (! (false))), true))), false, true))), false), false)))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_injected_loop_counter != 0, false), bvec2(bvec4(bvec2(_injected_loop_counter != 0, false), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false))), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_injected_loop_counter != 0, false), bvec2(bvec4(bvec2(_injected_loop_counter != 0, false), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false))), true))), false, true))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_injected_loop_counter != 0, false), bvec2(bvec4(bvec2(_injected_loop_counter != 0, false), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false))), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_injected_loop_counter != 0, false), bvec2(bvec4(bvec2(_injected_loop_counter != 0, false), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false))), true))), false, true))), false), false)))))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_injected_loop_counter != 0, false), bvec2(bvec4(bvec2(_injected_loop_counter != 0, false), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false))), true))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_injected_loop_counter != 0, false), bvec2(bvec4(bvec2(_injected_loop_counter != 0, false), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false))), true))), false)), bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(_injected_loop_counter != 0, false), bvec2(bvec4(bvec2(_injected_loop_counter != 0, false), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false))), true))), false)), false)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_injected_loop_counter != 0, false), bvec2(bvec4(bvec2(_injected_loop_counter != 0, false), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (! (! (false))), false || (! (! (! (false)))))))), true))), false, true))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_injected_loop_counter != 0, false), bvec2(bvec4(bvec2(_injected_loop_counter != 0, false), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false))), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_injected_loop_counter != 0, false), bvec2(bvec4(bvec2(_injected_loop_counter != 0, false), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false)))), ! (! (false))), true))), false, true))), false), false))))))))))))))) || false)))))); _injected_loop_counter --)
    {
     subgroupAll(true);
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | 0) < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     do
      {
       atomicStore(buf[_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id, ~ _GLF_IDENTITY((~ (GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id)), ~ (~ ((~ (GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id)))))).x], uint(2), 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, 1 * (64))) << 0), 4);
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_WRAPPED_LOOP(false))));
    }
  }
 else
  {
   for(int _injected_loop_counter = ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (5) | (5)))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), int(ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 1, 1))))), ~ (~ (_GLF_IDENTITY(~ (~ _GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), int(ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 1, 1)))), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), int(ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 1, 1))))) * 1)), int(int(~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), int(ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 1, 1)))))))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-4710) : _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), int(ivec3(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(5), int(5))), ~ (~ (~ (_GLF_IDENTITY(int(5), int(5)))))))), 1, 1)))), (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), int(ivec3(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(5), int(5))), ~ (~ (~ (_GLF_IDENTITY(int(5), int(5)))))))), 1, 1))))) | (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), int(ivec3(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(int(5), int(5))), ((_GLF_IDENTITY(int(5), int(5)))) ^ 0), ~ (~ (~ (_GLF_IDENTITY(int(5), int(5)))))))), 1, 1)))))))))), int(int(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), max(_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) >> 0), int(5)), clamp(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) >> 0), int(5)), _GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) >> 0), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) >> 0), int(5))) | (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) >> 0), int(5)))), 1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) >> 0), int(5)))), 1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), min(int(5), int(5))), int(5)))))))) >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > (0 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), 1 * (int(6)))) - (1 ^ 1)))), bool(_GLF_IDENTITY(bool(_injected_loop_counter > (0 << _GLF_IDENTITY(int(6), int(6)))), false || (_GLF_IDENTITY(bool(_injected_loop_counter > (0 << _GLF_IDENTITY(int(6), int(6)))), false || (bool(_GLF_IDENTITY(_injected_loop_counter, ~ (_GLF_IDENTITY(~ (_injected_loop_counter), 0 ^ (~ (_injected_loop_counter))))) > (0 << _GLF_IDENTITY(int(6), int(6)))))))))), ! (! (_GLF_IDENTITY(_injected_loop_counter > (0 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), 1 * (int(6)))) - (1 ^ 1)))), bool(_GLF_IDENTITY(bool(_injected_loop_counter > (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (6) | (0 << _GLF_IDENTITY(int(1), int(1)))))), (_GLF_IDENTITY(int(6), int(6))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(int(6), int(6))), (~ (_GLF_IDENTITY(int(6), int(6)))) >> 0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-80725) : _GLF_IDENTITY(~ (_GLF_IDENTITY(int(6), int(6))), (~ (_GLF_IDENTITY(int(6), int(6)))) >> 0))))))))), false || (_GLF_IDENTITY(bool(_injected_loop_counter > (0 << _GLF_IDENTITY(int(6), int(6)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, ~ (_GLF_IDENTITY(~ (_injected_loop_counter), 0 ^ (~ (_injected_loop_counter))))) > (0 << _GLF_IDENTITY(int(6), int(6)))), (bool(_GLF_IDENTITY(_injected_loop_counter, ~ (_GLF_IDENTITY(~ (_injected_loop_counter), 0 ^ (~ (_injected_loop_counter))))) > (0 << _GLF_IDENTITY(int(6), int(6))))) && true), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, ~ (_GLF_IDENTITY(~ (_injected_loop_counter), 0 ^ (~ (_injected_loop_counter))))) > (0 << _GLF_IDENTITY(int(6), int(6)))), (bool(_GLF_IDENTITY(_injected_loop_counter, ~ (_GLF_IDENTITY(~ (_injected_loop_counter), 0 ^ (~ (_injected_loop_counter))))) > (0 << _GLF_IDENTITY(int(6), int(6))))) && true)))))))))))))); _GLF_IDENTITY(_injected_loop_counter --, 0 | (_injected_loop_counter --)))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) - abs(0.0))))))); _injected_loop_counter ++)
            {
             do
              {
               do
                {
                 subgroupAll(_GLF_IDENTITY(false, _GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (false)) && true)) || _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || ((false)))))), ((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), bool(bvec2(_GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), ! (_GLF_IDENTITY(! (false || ((false))), _GLF_IDENTITY((! (false || ((false)))), ! (! (_GLF_IDENTITY((! (false || ((false)))), bool(bool((! (false || ((false)))))))))) && true)))), false))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))));
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
          }
         else
          {
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         for(int _injected_loop_counter = _GLF_IDENTITY(0, min(0, 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
          barrier();
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec4(_GLF_WRAPPED_LOOP(false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))));
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.x, clamp(GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.x, _GLF_IDENTITY(GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.x, 0u ^ (GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.x)), _GLF_IDENTITY(GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.x, (true ? GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.x : _GLF_FUZZED(num_workgroup)))))], uint(_GLF_IDENTITY(2, _GLF_IDENTITY(max(2, 2), 0 + (max(_GLF_IDENTITY(2, _GLF_IDENTITY((2) | 0, int(ivec3((2) | 0, 0, (1 & 1))))), 2))))), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) * 1), (4) << int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 4);
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
