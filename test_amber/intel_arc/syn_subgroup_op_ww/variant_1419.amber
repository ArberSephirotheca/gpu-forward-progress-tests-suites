#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec4(bvec2((false), true), true, false)))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec4(bvec2((false), true), true, false)))), false, true, true)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec4(bvec2((false), true), true, false)))), false, true, true))))))), (! (false)) || _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))) || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), (! (! (_GLF_DEAD(false)))) && true)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 0.0 + (1.0))) - 0.0), determinant(mat2(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 1.0, 1.0)), 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(0.5)), float(0.0), bool(true))), 0.0, 0.0)), clamp(vec2(mat3(injectionSwitch, 1.0, 1.0, determinant(mat2(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), mix(float(_GLF_FUZZED((- 5441.3112))), float(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), bool(true))), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 1.0, determinant(mat2(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 0.0)), max(vec2(mat3(injectionSwitch, 1.0, 1.0, determinant(mat2(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 1.0, determinant(mat2(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)), vec3(0.0, 0.0, 1.0))), 0.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 0.0)))), vec2(mat3(injectionSwitch, 1.0, 1.0, determinant(_GLF_IDENTITY(mat2(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(76.79) : 0.0)), 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 1.0, 1.0), mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (mat2(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(76.79) : 0.0)), 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 1.0, 1.0)))), 1.0, 0.0, 0.0, 0.0))))).y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / _GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED(vec2(258.573, 1.9)) : vec2(1.0, 1.0)))) + vec2(0.0, 0.0)).y, false || (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, ! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))))), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), _GLF_IDENTITY(bool(bvec2(bool(bvec2(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / _GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED(vec2(258.573, 1.9)) : vec2(1.0, 1.0)))) + vec2(0.0, 0.0)).y, false || (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, ! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))))), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), false)), bool(bool(_GLF_IDENTITY(bool(bvec2(bool(bvec2(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / _GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED(vec2(258.573, 1.9)) : vec2(1.0, 1.0)))) + vec2(0.0, 0.0)).y, false || (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, ! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))))), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), false)), ! (! (bool(bvec2(bool(bvec2(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / _GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED(vec2(258.573, 1.9)) : vec2(1.0, 1.0)))) + vec2(0.0, 0.0)).y, false || (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, ! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))))), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), false))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), (injectionSwitch.x > injectionSwitch.y))), false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), ! (! (bool(true))))) || _GLF_IDENTITY(false, ! (! (false)))))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(4.5))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(4.5))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(4.5))), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y)), injectionSwitch.y))) - 0.0))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y))), false, true), true)))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false))))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(uvec4(gl_NumWorkGroups, 0u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(gl_NumWorkGroups, 0u))))), (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(gl_NumWorkGroups, 0u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(gl_NumWorkGroups, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(gl_NumWorkGroups, 0u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(gl_NumWorkGroups, 0u))), (true ? _GLF_IDENTITY(uvec4(gl_NumWorkGroups, 0u), uvec4(_GLF_IDENTITY(0u, (0u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u, 0u, 0u) ^ (uvec4(gl_NumWorkGroups, 0u))) : _GLF_FUZZED(uvec4(148899u, 181822u, 150014u, 65054u))))) * uvec4(1u, 1u, 1u, 1u))))) | uvec3(0u, 0u, 0u)).x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 0.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), cos(0.0))), min(float(mat2x3(injectionSwitch.y, 0.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), cos(0.0))), float(mat2x3(injectionSwitch.y, 0.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), cos(0.0))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, true && (false)))), bool(bvec3(bool(bvec4(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, true && (false)))), true, false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u), (_GLF_IDENTITY(0u, (0u) << (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (true ? 3u : _GLF_FUZZED(subgroup_id)))), uint(3u)))) << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) | _GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, (0u) | (0u))))))) | (workgroup_base)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 1u * _GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base)))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 1u * _GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base)))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 1u * _GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base)))), 0u | (_GLF_IDENTITY(workgroup_base, 1u * _GLF_IDENTITY((workgroup_base), max((workgroup_base), (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))))))))) * 1u)) | (_GLF_IDENTITY(workgroup_base, 1u * _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(uint(uvec3((workgroup_base), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(float(-91192))), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))), _GLF_ZERO(0.0, injectionSwitch.x)))), (0u | 0u))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(uvec3((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u | 0u)), (uvec3((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u | 0u))) * uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), ~ (~ (~ (uint(uvec3((workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u | 0u)))))))))), max((workgroup_base), (workgroup_base))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u), 1u * _GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base)))))) << 0u), (~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(1u * _GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base))), min(1u * _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) | 0u), _GLF_IDENTITY(max((workgroup_base), (workgroup_base)), min(max((workgroup_base), (workgroup_base)), max((workgroup_base), (workgroup_base))))), 1u * _GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base))))))), ((_GLF_IDENTITY(workgroup_base, 1u * _GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base)))))) << 0u)) >> 0u), ~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(1u * _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), clamp((workgroup_base), (workgroup_base), (workgroup_base))), ((workgroup_base)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(1u * _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), clamp((workgroup_base), (workgroup_base), (workgroup_base))), ((workgroup_base)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), (1u * _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), clamp((workgroup_base), (workgroup_base), (workgroup_base))), ((workgroup_base)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ (1u ^ 1u))) | (_GLF_IDENTITY(1u * _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), clamp((workgroup_base), (workgroup_base), (workgroup_base))), ((workgroup_base)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(1u * _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), clamp((workgroup_base), (workgroup_base), (workgroup_base))), ((workgroup_base)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u * _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), clamp((workgroup_base), (workgroup_base), (workgroup_base))), ((workgroup_base)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), clamp(_GLF_IDENTITY(1u * _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), clamp((workgroup_base), (workgroup_base), (workgroup_base))), ((workgroup_base)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(1u * _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), clamp((workgroup_base), (workgroup_base), (workgroup_base))), ((workgroup_base)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), (1u * _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), clamp((workgroup_base), (workgroup_base), (workgroup_base))), ((workgroup_base)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ (1u ^ 1u))) | (_GLF_IDENTITY(1u * _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), clamp((workgroup_base), (workgroup_base), (workgroup_base))), ((workgroup_base)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(1u * _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), clamp((workgroup_base), (workgroup_base), (workgroup_base))), ((workgroup_base)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u * _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), clamp((workgroup_base), (workgroup_base), (workgroup_base))), ((workgroup_base)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), _GLF_IDENTITY(1u * _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), clamp((workgroup_base), (workgroup_base), (workgroup_base))), ((workgroup_base)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(1u * _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), clamp((workgroup_base), (workgroup_base), (workgroup_base))), ((workgroup_base)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), (1u * _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), clamp((workgroup_base), (workgroup_base), (workgroup_base))), ((workgroup_base)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ (1u ^ 1u))) | (_GLF_IDENTITY(1u * _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), clamp((workgroup_base), (workgroup_base), (workgroup_base))), ((workgroup_base)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(1u * _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), clamp((workgroup_base), (workgroup_base), (workgroup_base))), ((workgroup_base)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u * _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), clamp((workgroup_base), (workgroup_base), (workgroup_base))), ((workgroup_base)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), _GLF_IDENTITY(1u * _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), clamp((workgroup_base), (workgroup_base), (workgroup_base))), ((workgroup_base)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(1u * _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), clamp((workgroup_base), (workgroup_base), (workgroup_base))), ((workgroup_base)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), (1u * _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), clamp((workgroup_base), (workgroup_base), (workgroup_base))), ((workgroup_base)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ (1u ^ 1u))) | (_GLF_IDENTITY(1u * _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), clamp((workgroup_base), (workgroup_base), (workgroup_base))), ((workgroup_base)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(1u * _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), clamp((workgroup_base), (workgroup_base), (workgroup_base))), ((workgroup_base)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u * _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), clamp((workgroup_base), (workgroup_base), (workgroup_base))), ((workgroup_base)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 1u * _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))), _GLF_IDENTITY(min(_GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base)))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u | (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (_GLF_IDENTITY(min(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((workgroup_base), ((workgroup_base)) | uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(_GLF_IDENTITY(mat4x2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), (min(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0), _GLF_FUZZED(5.6)), vec2(_GLF_FUZZED(-607.891), (injectionSwitch)[1]), bvec2(false, true))).x))), _GLF_IDENTITY((workgroup_base), ((workgroup_base)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (min(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((workgroup_base), ((workgroup_base)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) | (min(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((workgroup_base), ((workgroup_base)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), (_GLF_IDENTITY(workgroup_base, 1u * _GLF_IDENTITY((workgroup_base), ((workgroup_base)) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(4.3) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 1u * _GLF_IDENTITY((workgroup_base), ((workgroup_base)) | uint(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), clamp(_GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(8.5) : 0.0)), 0.0)), injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x)))))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, 1u * _GLF_IDENTITY((workgroup_base), ((workgroup_base)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 0u | ((_GLF_IDENTITY(workgroup_base, 1u * _GLF_IDENTITY((workgroup_base), ((workgroup_base)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 1u * _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))), ((workgroup_base)) | uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x)))), (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(1u * _GLF_IDENTITY((workgroup_base), ((workgroup_base)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), (1u * _GLF_IDENTITY((workgroup_base), ((workgroup_base)) | uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))) + 0u))) ^ 0u)) >> 0u))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u), workgroup_base, workgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u | (0u))))) * _GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(((workgroup_base)), (_GLF_IDENTITY(((workgroup_base)), (((workgroup_base))) ^ (22270u & 0u))) / ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))) | uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(1u, (1u) ^ _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u | (0u))))) * _GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(((workgroup_base)), (_GLF_IDENTITY(((workgroup_base)), (((workgroup_base))) ^ (22270u & 0u))) / ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))) | uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))) ^ 0u)), _GLF_IDENTITY(workgroup_base, 1u * _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) >> 0u, uint(uvec4(_GLF_IDENTITY((workgroup_base) >> 0u, ((workgroup_base) >> 0u) ^ 0u), 1u, 0u, 1u)))), _GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))), ((workgroup_base)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(workgroup_base, 1u * _GLF_IDENTITY((workgroup_base), uint(uvec3((workgroup_base), 0u, 1u)))))), 0u ^ (~ (~ (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(1u, 1u * (1u)) * (workgroup_base)))))), min(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(workgroup_base, 1u * (workgroup_base)))), 0u ^ (~ (~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) * 1u), clamp(_GLF_IDENTITY(1u, (1u) * 1u), _GLF_IDENTITY(1u, (1u) * 1u), _GLF_IDENTITY(1u, (1u) * 1u))))) * (workgroup_base))), 1u * ((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) * 1u), clamp(_GLF_IDENTITY(1u, (1u) * 1u), _GLF_IDENTITY(1u, (1u) * 1u), _GLF_IDENTITY(1u, (1u) * 1u))))) * (workgroup_base)))))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(workgroup_base, 1u * (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))))), _GLF_IDENTITY(0u, (0u) | (0u)) ^ (~ (~ (_GLF_IDENTITY(workgroup_base, 1u * (workgroup_base))))))))) ^ 0u, uint(uvec4((_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(workgroup_base, 1u * (workgroup_base)))), 0u ^ (~ (~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, 1u * (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u)) | 0u)))), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, 1u * (workgroup_base))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, 1u * (workgroup_base))), ((_GLF_IDENTITY(workgroup_base, 1u * (workgroup_base)))) | 0u)) | ((_GLF_IDENTITY(workgroup_base, 1u * (workgroup_base)))))), ~ (_GLF_IDENTITY(~ (0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, 1u * (workgroup_base))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, 1u * (workgroup_base))), ((_GLF_IDENTITY(workgroup_base, 1u * (workgroup_base)))) | 0u)) | ((_GLF_IDENTITY(workgroup_base, 1u * (workgroup_base))))))), (false ? _GLF_FUZZED(workgroup_base) : ~ (_GLF_IDENTITY(0u, (0u) ^ (0u ^ 0u)) ^ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, 1u * (workgroup_base))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, 1u * (workgroup_base))), ((_GLF_IDENTITY(workgroup_base, 1u * (workgroup_base)))) | 0u)) | ((_GLF_IDENTITY(workgroup_base, 1u * (workgroup_base))))))))))))))), (true ? _GLF_IDENTITY(~ _GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base, 1u * (workgroup_base)))), ((~ (_GLF_IDENTITY(workgroup_base, 1u * (workgroup_base))))) / 1u), 0u ^ _GLF_IDENTITY((~ (~ (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, max(1u, 1u)))) * (workgroup_base))))), (_GLF_IDENTITY((~ (~ (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, max(1u, 1u)))) * (workgroup_base))))), 0u | ((~ (~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, max(1u, 1u)))) * (workgroup_base))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, max(1u, 1u)))) * (workgroup_base))), ((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, max(1u, 1u)))) * (workgroup_base)))) | ((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, max(1u, 1u)))) * (workgroup_base)))))) / 1u)))))) * 1u)) : _GLF_FUZZED(uvec3(61683u, 186554u, 56677u)[1])))) ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (0u)), (~ (~ (0u))) / 1u), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0u, (0u) | 0u))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0u), max(~ (0u), _GLF_IDENTITY(~ (0u), (~ (0u)) ^ 0u)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((0u), ((0u)) | ((0u))), max(~ (0u), _GLF_IDENTITY(~ (0u), (~ (0u)) ^ 0u)))), clamp(~ (_GLF_IDENTITY(~ (0u), max(~ (0u), _GLF_IDENTITY(~ (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_id)))) ^ 0u)), (~ (0u)) ^ 0u)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, (0u) / 1u)), max(~ (_GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, (0u) | 0u)))), _GLF_IDENTITY(~ (0u), (~ (0u)) ^ 0u)))), ~ (_GLF_IDENTITY(~ (0u), max(~ (0u), _GLF_IDENTITY(~ (0u), (~ (0u)) ^ 0u))))))) | 0u)) / 1u)) / 1u))) ^ 0u), 0u, 1u, 1u)))))))) + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ 0u, 0u | ((subgroup_size) ^ 0u))), subgroup_size), 0u ^ (max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ 0u, 0u | ((subgroup_size) ^ 0u))), subgroup_size)))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u + (subgroup_size), 0u ^ (_GLF_IDENTITY(0u + (subgroup_size), 0u ^ (0u + (subgroup_size)))))) + ((subgroup_local_id + _GLF_IDENTITY(1, (1) << ((19899 % 36467) & 0))) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(0u | ((subgroup_size)), 0u | (_GLF_IDENTITY(0u | ((subgroup_size)), ~ (~ (0u | ((subgroup_size)))))))), (false ? _GLF_FUZZED(uvec3(19416u, 50945u, 184337u)[2]) : _GLF_IDENTITY((subgroup_size), 0u | _GLF_IDENTITY(((subgroup_size)), _GLF_IDENTITY((((subgroup_size))), ((((subgroup_size)))) | ((((subgroup_size))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_size, 1u, 0u)), (uint(uvec3(subgroup_size, 1u, 0u))) | (uint(uvec3(subgroup_size, 1u, 0u)))))) - _GLF_IDENTITY(0u, (0u) / 1u)), uint(uint(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))))), subgroup_size)), (_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))))) + 0u)))), 0u | (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) * 1u))), _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(uvec3(19416u, 50945u, _GLF_IDENTITY(184337u, uint(uvec2(_GLF_IDENTITY(184337u, (184337u) >> 0u), 0u))))[2]) : _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) * uint(_GLF_ONE(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), max(_GLF_IDENTITY(0u, (0u) * uint(_GLF_ONE(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) * uint(_GLF_ONE(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), (_GLF_IDENTITY(0u, (0u) * uint(_GLF_ONE(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))) >> 0u))) | _GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) - _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY((_GLF_ZERO(0.0, injectionSwitch.x)), max((_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_ZERO(0.0, injectionSwitch.x)))) + 0.0)), (true ? uint(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(53777u))))), (false ? _GLF_FUZZED(uvec3(19416u, 50945u, _GLF_IDENTITY(184337u, uint(uvec2(_GLF_IDENTITY(184337u, (184337u) >> 0u), 0u))))[2]) : _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(0u, (0u) * uint(_GLF_ONE(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))) | _GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) - _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) + 0.0)), (true ? uint(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(53777u)))))) | 0u)), ((0u | 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, max(3u, 3u)))), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, max(3u, 3u)))), (true ? _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, min(3u, 3u))), uint(_GLF_IDENTITY(3u, max(3u, 3u)))) : _GLF_FUZZED(num_workgroup))), 0u)))) + ((false ? _GLF_FUZZED(uvec3(19416u, 50945u, _GLF_IDENTITY(_GLF_IDENTITY(184337u, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(184337u, (184337u) >> 0u), uint(uvec3(_GLF_IDENTITY(184337u, (184337u) >> 0u), 0u, 1u))), 0u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(184337u, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(184337u, (184337u) >> 0u), uint(uvec3(_GLF_IDENTITY(184337u, (184337u) >> 0u), 0u, 1u))), 0u)))), max(~ (_GLF_IDENTITY(184337u, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(184337u, (184337u) >> 0u), uint(uvec3(_GLF_IDENTITY(184337u, (184337u) >> 0u), 0u, 1u))), 0u)))), ~ (_GLF_IDENTITY(184337u, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(184337u, (184337u) >> 0u), uint(uvec3(_GLF_IDENTITY(184337u, (184337u) >> 0u), 0u, 1u))), 0u)))))))))[2]) : _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(0u, (0u) * uint(_GLF_ONE(1.0, injectionSwitch.y))) | _GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) - uint(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))), 0.0 + (_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x)))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(0u, (0u) * uint(_GLF_ONE(1.0, injectionSwitch.y))) | _GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) - uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 0.0 + (_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x)))))), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(0u, (0u) * uint(_GLF_ONE(1.0, injectionSwitch.y))) | _GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) - uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 0.0 + (_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x)))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(0u, (0u) * uint(_GLF_ONE(1.0, injectionSwitch.y))) | _GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) - uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 0.0 + (_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x)))))), max(_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(0u, (0u) * uint(_GLF_ONE(1.0, injectionSwitch.y))) | _GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) - uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 0.0 + (_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x)))))), _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(0u, (0u) * uint(_GLF_ONE(1.0, injectionSwitch.y))) | _GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) - uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 0.0 + (_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x)))))))) : _GLF_FUZZED(num_workgroup)))) | (_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(0u, (0u) * uint(_GLF_ONE(1.0, injectionSwitch.y))) | _GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) - uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(faceforward(pow(2.8, 5245.7698), 9.4, 51.57)))), 0.0 + (_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x)))))))))))))) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uint(subgroup_size), clamp(_GLF_IDENTITY(uint(subgroup_size), ~ (_GLF_IDENTITY(~ (uint(subgroup_size)), _GLF_IDENTITY(uint(uvec2(~ (uint(subgroup_size)), _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(atomicCompSwap(subgroup_id, subgroup_local_id, num_workgroup)) : _GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))))))), (uint(uvec2(~ (uint(subgroup_size)), _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(atomicCompSwap(subgroup_id, subgroup_local_id, num_workgroup)) : _GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))))))) - 0u)))), uint(subgroup_size), uint(subgroup_size))))), subgroup_size))) / 1u));
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(4, (4) - 0));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, int(ivec4(1, 0, (0 | 1), 1))))) < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   subgroupAll(false);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(668.477)), vec2(_GLF_FUZZED(8.7), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).y, false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), true && (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(-0.6)), float(_GLF_IDENTITY(injectionSwitch[0], clamp(_GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(3.1) : injectionSwitch[0])), injectionSwitch[0], injectionSwitch[0]))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), clamp(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(-0.6)), float(_GLF_IDENTITY(injectionSwitch[0], clamp(_GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(3.1) : injectionSwitch[0])), injectionSwitch[0], injectionSwitch[0]))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(-0.6)), float(_GLF_IDENTITY(injectionSwitch[0], clamp(_GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(3.1) : injectionSwitch[0])), injectionSwitch[0], injectionSwitch[0]))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(-0.6)), float(_GLF_IDENTITY(injectionSwitch[0], clamp(_GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(3.1) : injectionSwitch[0])), injectionSwitch[0], injectionSwitch[0]))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (injectionSwitch[_GLF_IDENTITY(0, (0) | 0)]) - abs(0.0)), injectionSwitch[1])).x > injectionSwitch.y)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))) && true)))), false || ((! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-40819) : 0))], injectionSwitch[1])).y))), bool(bvec3((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-40819) : 0))], injectionSwitch[1])).y))), false, false))) && true))))))))))), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) && true), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))) && true)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))) && true), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(2221.0762), _GLF_FUZZED(-23.47)), bvec2(false, false))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(2221.0762), _GLF_FUZZED(-23.47)), bvec2(false, false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(2221.0762), _GLF_FUZZED(-23.47)), bvec2(false, false))), min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(2221.0762), _GLF_FUZZED(-23.47)), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(2221.0762), _GLF_FUZZED(-23.47)), bvec2(false, false))))))), min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(2221.0762), _GLF_FUZZED(-23.47)), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(2221.0762), _GLF_FUZZED(-23.47)), bvec2(false, false)), max(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(2221.0762), _GLF_FUZZED(-23.47)), bvec2(false, false)), mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(2221.0762), _GLF_FUZZED(-23.47)), bvec2(false, false))))))).y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-8.3) : injectionSwitch.y))) / 1.0)))))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))))))), _GLF_IDENTITY(bool(bvec4(false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(4678.7875)))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), (! ((injectionSwitch.x < injectionSwitch.y))) && true)))) ? _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(4678.7875)))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))) && true)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, (true) || false)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(2221.0762), _GLF_FUZZED(-23.47)), bvec2(false, false))), vec2(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, 0 + (1)))))], min((injectionSwitch)[_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, 0 + (1)))))], (injectionSwitch)[_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, 0 + (1)))))]))), vec2(_GLF_FUZZED(2221.0762), _GLF_FUZZED(-23.47)), bvec2(false, false))), vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(2221.0762), _GLF_FUZZED(-23.47)), bvec2(false, false))), 1.0, 1.0, 0.0, 0.0), mat2x3(mat4x3(mat2x3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(2221.0762), _GLF_FUZZED(-23.47)), bvec2(false, false))), 1.0, 1.0, 0.0, 0.0)))))), 0.0, 1.0, 1.0, length(vec2(0.0, 0.0))))).y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), true, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))) && true)))))))), false, false, false)), ! (! (bool(bvec4(false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(4678.7875)))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), (! ((injectionSwitch.x < injectionSwitch.y))) && true)))) ? _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(4678.7875)))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))) && true)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, (true) || false)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(2221.0762), _GLF_FUZZED(-23.47)), bvec2(false, false))), vec2(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, 0 + (1)))))], min((injectionSwitch)[_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, 0 + (1)))))], (injectionSwitch)[_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, 0 + (1)))))]))), vec2(_GLF_FUZZED(2221.0762), _GLF_FUZZED(-23.47)), bvec2(false, false))), vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(2221.0762), _GLF_FUZZED(-23.47)), bvec2(false, false))), 1.0, 1.0, 0.0, 0.0), mat2x3(mat4x3(mat2x3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(2221.0762), _GLF_FUZZED(-23.47)), bvec2(false, false))), 1.0, 1.0, 0.0, 0.0)))))), 0.0, 1.0, 1.0, length(vec2(0.0, 0.0))))).y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), true, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))) && true)))))))), false, false, false)))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_DEAD(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (_GLF_DEAD(false))))), (! (! (_GLF_DEAD(false)))) && true)), bool(bvec4(_GLF_DEAD(false), false, true, _GLF_IDENTITY(false, true && (false))))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
