#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_10 {
 ivec3 _f0;
 bvec2 _f1;
 ivec3 _f2;
 uint subgroup_id;
 uvec2 _f3;
 vec4 _f4;
} ;

struct _GLF_struct_7 {
 float _f0;
 mat2x3 _f1;
 mat2x3 _f2;
 uvec2 _f3;
} ;

struct _GLF_struct_8 {
 uvec2 _f0;
 vec3 _f1;
 _GLF_struct_7 _f2;
 mat2x3 _f3;
} ;

struct _GLF_struct_5 {
 mat4x2 _f0;
 uvec2 _f1;
 uint _f2;
 float _f3;
} ;

struct _GLF_struct_6 {
 _GLF_struct_5 _f0;
 bvec2 _f1;
 vec2 _f2;
} ;

struct _GLF_struct_3 {
 int _f0;
 mat2x4 _f1;
 vec3 _f2;
 bvec4 _f3;
 bvec3 _f4;
 bvec2 _f5;
} ;

struct _GLF_struct_4 {
 vec3 _f0;
 mat4x3 _f1;
 _GLF_struct_3 _f2;
} ;

struct _GLF_struct_1 {
 bvec2 _f0;
} ;

struct _GLF_struct_0 {
 int _f0;
 mat2x4 _f1;
 mat4x3 _f2;
 mat3 _f3;
 mat4x2 _f4;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 ivec3 _f1;
 int _f2;
 vec4 _f3;
 _GLF_struct_1 _f4;
 int _f5;
 ivec4 _f6;
} ;

struct _GLF_struct_9 {
 _GLF_struct_2 _f0;
 _GLF_struct_4 _f1;
 _GLF_struct_6 _f2;
 _GLF_struct_8 _f3;
 uint workgroup_id;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 _GLF_struct_10 _GLF_struct_replacement_10 = _GLF_struct_10(_GLF_IDENTITY(ivec3(1), (ivec3(1)) - ivec3(0, 0, 0)), bvec2(true), ivec3(1), gl_SubgroupID, uvec2(1u), vec4(1.0));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), true && (_GLF_IDENTITY(false, false || (false))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), true && (_GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true)))))))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y)))) && true)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(false, ! (! (false))) || (! (false)))), (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(false, true && (false)) || (! (false))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))).x : _GLF_FUZZED(7.9))), injectionSwitch.x)) > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (true && (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (injectionSwitch.x > injectionSwitch.y)))))))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(! (bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)))))) || (_GLF_IDENTITY(false, (false) || false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).y, (injectionSwitch.x < injectionSwitch.y) || false)))))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)), vec2(1.0, 1.0) * (vec2(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))))))).y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)).x, 0u + (gl_WorkGroupSize.x));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(_GLF_struct_2(_GLF_struct_0(1, mat2x4(1.0), mat4x3(1.0), mat3(1.0), mat4x2(1.0)), ivec3(1), _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), ~ (~ ((1)))))))), _GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(1.4) : _GLF_IDENTITY(1.0, min(1.0, 1.0)), min(false ? _GLF_FUZZED(1.4) : _GLF_IDENTITY(1.0, min(1.0, 1.0)), false ? _GLF_FUZZED(1.4) : _GLF_IDENTITY(1.0, min(1.0, 1.0))))))), _GLF_IDENTITY(vec4(mat3(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(1.4) : 1.0))), (vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(1.4) : 1.0)), clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(1.4) : 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY((false ? _GLF_FUZZED(1.4) : 1.0), ((false ? _GLF_FUZZED(1.4) : 1.0)) * 1.0)), mix(float(_GLF_FUZZED(6894.7517)), float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(1.4) : 1.0))), bool(true))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(1.4) : 1.0)))))) / vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0))), round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), min(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-27.71, 600.501), vec2(vec4(_GLF_IDENTITY(vec2(-27.71, 600.501), vec2(mat2x3(vec2(-27.71, 600.501), 0.0, 0.0, 0.0, 1.0))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0)))) : normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(normalize(vec2(1.0, 1.0)), (normalize(vec2(1.0, 1.0))) * mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))))))))), 1.0, 1.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(vec4(mat3(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(1.4) : 1.0))), (vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(1.4) : 1.0)))) / vec4(1.0, 1.0, 1.0, 1.0)), round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0, 0.0)), vec4(mat2x3(vec4(mat3(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(1.4) : 1.0))), (vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(1.4) : 1.0)))) / vec4(1.0, 1.0, 1.0, 1.0)), round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0, 0.0)), sqrt(1.0), tan(_GLF_ZERO(0.0, injectionSwitch.x))))), vec4(mat3(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(1.4) : 1.0))), (vec4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(1.4) : 1.0, (false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(clamp(51.62, distance(vec3(9.9, -762.475, 1.9), vec3(3719.3234, 7.2, 0.3)), 0.9)), (_GLF_IDENTITY(_GLF_FUZZED(clamp(51.62, distance(vec3(9.9, -762.475, 1.9), vec3(3719.3234, 7.2, 0.3)), 0.9)), (_GLF_FUZZED(clamp(51.62, distance(_GLF_IDENTITY(vec3(9.9, -762.475, 1.9), (_GLF_IDENTITY(vec3(9.9, -762.475, 1.9), (true ? vec3(9.9, -762.475, 1.9) : _GLF_FUZZED(vec3(13.20, 777.571, 1.8))))) - vec3(0.0, 0.0, 0.0)), vec3(3719.3234, 7.2, 0.3)), 0.9))) - determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))) * 1.0), 0.0 + (_GLF_IDENTITY(_GLF_FUZZED(clamp(51.62, distance(vec3(9.9, -762.475, 1.9), vec3(3719.3234, 7.2, 0.3)), 0.9)), (_GLF_IDENTITY(_GLF_FUZZED(clamp(51.62, distance(vec3(9.9, -762.475, 1.9), vec3(3719.3234, 7.2, 0.3)), 0.9)), (_GLF_FUZZED(clamp(51.62, distance(_GLF_IDENTITY(vec3(9.9, -762.475, 1.9), (_GLF_IDENTITY(vec3(9.9, -762.475, 1.9), (true ? vec3(9.9, -762.475, 1.9) : _GLF_FUZZED(vec3(13.20, 777.571, 1.8))))) - vec3(0.0, 0.0, 0.0)), vec3(3719.3234, 7.2, 0.3)), 0.9))) - determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))) * 1.0))) : false ? _GLF_FUZZED(_GLF_IDENTITY(1.4, clamp(1.4, 1.4, _GLF_IDENTITY(1.4, float(vec2(1.4, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, exp(0.0), 0.0, 1.0, _GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))), exp(0.0), determinant(mat2(exp(0.0), 1.0, 0.0, 1.0)), 0.0), (true ? mat3x4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, exp(0.0), 0.0, 1.0, _GLF_IDENTITY(dot(vec4(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))), exp(0.0), determinant(mat2(exp(0.0), 1.0, 0.0, 1.0)), 0.0) : _GLF_FUZZED(mat3x4(94.65, -245.582, -6370.9903, 3.2, 48.52, -6.9, 3.7, -1825.1325, -279.588, 9.0, -7112.5498, -3.3)))))))))))) : 1.0)))))) / _GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), vec4(mat2x4(vec4(1.0, 1.0, 1.0, 1.0), 0.0, 1.0, abs(tan(0.0)), 0.0)))), round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0, 0.0)), vec4(mat3(_GLF_IDENTITY(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(1.4) : 1.0))), mat4(1.0) * (vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(1.4) : 1.0))))), (vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(1.4) : 1.0)))) / vec4(1.0, 1.0, 1.0, 1.0)), round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(vec4(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 1.0, 1.0))), 0.0, 0.0)), 0.0))))), _GLF_struct_1(bvec2(true)), 1, ivec4(1)), _GLF_struct_4(vec3(1.0), mat4x3(1.0), _GLF_struct_3(1, mat2x4(1.0), vec3(_GLF_IDENTITY(1.0, 1.0 * _GLF_IDENTITY((1.0), max(_GLF_IDENTITY((1.0), float(_GLF_IDENTITY(mat2x3((1.0), sqrt(0.0), 0.0, 1.0, 0.0, 1.0), mat2x3(mat2x3(_GLF_IDENTITY(mat2x3((1.0), sqrt(0.0), 0.0, 1.0, 0.0, 1.0), mat2x3(mat2x4(mat2x3((1.0), sqrt(0.0), 0.0, 1.0, 0.0, 1.0))))))))), (1.0))))), bvec4(_GLF_IDENTITY(true, bool(bvec3(true, false, false)))), bvec3(true), bvec2(true))), _GLF_struct_6(_GLF_struct_5(mat4x2(1.0), uvec2(1u), 1u, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(539.258)), float(1.0), bool(true))), float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(539.258)), float(1.0), bool(true))), (true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(539.258)), float(1.0), bool(true))) : _GLF_FUZZED(8.9))), 1.0, 0.0, abs(1.0), 1.0, 1.0, 0.0, 0.0))), (false ? _GLF_FUZZED(-4.0) : 1.0)), max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(-5.1), float(mat2x3(_GLF_FUZZED(-5.1), 0.0, abs(0.0), 0.0, cos(0.0), 0.0))) : _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))), 0.0 + (_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(1.0), mix(float(_GLF_FUZZED(489.643)), float(_GLF_IDENTITY(float(1.0), clamp(float(1.0), _GLF_IDENTITY(float(1.0), min(float(1.0), float(1.0))), _GLF_IDENTITY(float(1.0), max(float(1.0), float(1.0)))))), bool(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7914.1746)), bool(false))) < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-52.46)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y))), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7914.1746)), bool(false))) < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-52.46)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y))), false || ((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7914.1746)), bool(false))) < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-52.46)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y))))))))))), float(_GLF_FUZZED(8.2)), bool(false)))))))), bvec2(true), _GLF_IDENTITY(vec2(1.0), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-5832.5760, -8.3)), (_GLF_FUZZED(vec2(-5832.5760, -8.3))) - vec2(0.0, 0.0)) : vec2(1.0)))), _GLF_struct_8(uvec2(1u), vec3(1.0), _GLF_struct_7(1.0, mat2x3(1.0), mat2x3(1.0), uvec2(1u)), mat2x3(1.0)), _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) * 1u), clamp(0u, 0u, 0u))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) - 0.0), injectionSwitch[1])).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(_GLF_struct_replacement_9.workgroup_id, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_struct_replacement_9.workgroup_id));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_base = _GLF_IDENTITY(_GLF_struct_replacement_10.subgroup_id, _GLF_IDENTITY((_GLF_struct_replacement_10.subgroup_id) >> 0u, ((_GLF_struct_replacement_10.subgroup_id) >> 0u) + 0u)) * subgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool((false)), bool(bvec3(bool((false)), true, false))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), bool(bvec4((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))), true, false, false)))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec4(_GLF_IDENTITY(false || (false), bool(bvec4(false || (false), true, false, true))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true, false, false))))) || false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true, false, false)))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))), true, false, false))))) || false)))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true, false, false)))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true, false, false))))) || false)))), true, true)), (bool(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true, false, false)))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true, false, false))))) || false)))), true, true))) || false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))), true && (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0))).x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true && ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), false || (true && ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(injectionSwitch.x), float(injectionSwitch.x))))) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(-63.19)), vec2(_GLF_FUZZED(245.245), _GLF_IDENTITY(((injectionSwitch))[1], (_GLF_IDENTITY(((injectionSwitch))[1], min(((injectionSwitch))[1], ((injectionSwitch))[1]))) * 1.0)), bvec2(false, true))) * mat2(1.0)).y))))))) && true)), false || ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))), true && (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0))).x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true && ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), false || (true && ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(injectionSwitch.x), float(injectionSwitch.x))))) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(-63.19)), vec2(_GLF_FUZZED(245.245), _GLF_IDENTITY(((injectionSwitch))[1], (_GLF_IDENTITY(((injectionSwitch))[1], min(((injectionSwitch))[1], ((injectionSwitch))[1]))) * 1.0)), bvec2(false, true))) * mat2(1.0)).y))))))) && true))))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true)), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true)), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false)), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)))))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true)), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(9.2) : injectionSwitch.x))) - sin(0.0)) > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))) || false))))))), true)))))
    return;
   return;
  }
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), min(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), _GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))), ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), min(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), _GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)))))) << 0u)))) | (workgroup_base)) + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_local_id + 1 : _GLF_FUZZED(virtual_gid)))) % subgroup_size), 0u ^ (((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_local_id + 1 : _GLF_FUZZED(virtual_gid)))) % subgroup_size))) << 0u));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), ((injectionSwitch.x > injectionSwitch.y)) && true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), (bool(bvec2(_GLF_DEAD(false), true))) && true)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))) || false), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false), false, true))))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false)))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 atomicStore(buf[_GLF_IDENTITY(virtual_gid, ~ (~ (_GLF_IDENTITY(virtual_gid, 1u * _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(~ _GLF_IDENTITY((~ (_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u))), (false ? _GLF_FUZZED((++ num_workgroup)) : (~ (_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u))))), ~ (~ (~ _GLF_IDENTITY((~ (_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u))), (false ? _GLF_FUZZED((++ num_workgroup)) : (~ (_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)))))))))), (_GLF_IDENTITY((virtual_gid), (false ? _GLF_FUZZED(num_workgroup) : (virtual_gid)))) * 1u), max(_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(atomicAnd(workgroup_size, subgroup_local_id)) : _GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid))))), (_GLF_IDENTITY((virtual_gid), (false ? _GLF_FUZZED(num_workgroup) : (virtual_gid)))) * 1u), _GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), (_GLF_IDENTITY((virtual_gid), (false ? _GLF_FUZZED(num_workgroup) : (virtual_gid)))) * 1u), (_GLF_IDENTITY((virtual_gid), (_GLF_IDENTITY((virtual_gid), (false ? _GLF_FUZZED(num_workgroup) : (virtual_gid)))) * 1u)) / 1u)))))))], uint(_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0)), (_GLF_IDENTITY(true ? (_GLF_IDENTITY(1, (1) + 0)) : _GLF_IDENTITY(_GLF_FUZZED(-56616), (_GLF_FUZZED(-56616)) - 0), min(_GLF_IDENTITY(_GLF_IDENTITY(true ? (_GLF_IDENTITY(1, _GLF_IDENTITY((1) + 0, min(_GLF_IDENTITY((1) + 0, ((1) + 0) | (0 | 0)), (1) + 0)))) : _GLF_FUZZED(-56616), (_GLF_IDENTITY(true ? (_GLF_IDENTITY(1, (1) + 0)) : _GLF_FUZZED(-56616), (true ? true ? (_GLF_IDENTITY(1, (1) + 0)) : _GLF_FUZZED(-56616) : _GLF_FUZZED(-81034)))) - 0), ~ (~ (_GLF_IDENTITY(true ? (_GLF_IDENTITY(1, (1) + 0)) : _GLF_FUZZED(-56616), int(ivec4(true ? (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), (1) + 0)) : _GLF_FUZZED(-56616), 1, 1, 0)))))), true ? (_GLF_IDENTITY(1, (1) + 0)) : _GLF_FUZZED(-56616)))))), min(~ (~ (_GLF_IDENTITY(1, (1) + _GLF_IDENTITY(0, (0) | 0)))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), _GLF_IDENTITY((_GLF_IDENTITY(1, (1) + 0)), ((_GLF_IDENTITY(1, (1) + 0))) + 0) | (_GLF_IDENTITY(1, (1) + 0)))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) | (0))))), int(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), int(int(_GLF_IDENTITY(0, (0) | (0)))))))), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) | (0))))), (_GLF_IDENTITY(1, (1) + _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) | (0)))))) | (_GLF_IDENTITY(1, (1) + _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) | (0))))))), 0)))), (int(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), int(int(_GLF_IDENTITY(0, (0) | (0)))))))), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) | (0))))), (_GLF_IDENTITY(1, (1) + _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) | (0)))))) | (_GLF_IDENTITY(1, (1) + _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) | (0))))))), 0))))) - 0))), (_GLF_IDENTITY(1, (1) + _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) | _GLF_IDENTITY((0), ((0)) | ((0)))))))) | (_GLF_IDENTITY(1, (1) + _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) | (0)))))))))))))))), _GLF_IDENTITY(4, (4) << 0), 64, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> 0), (_GLF_IDENTITY(4, (4) >> 0)) ^ ((0 >> _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(7), int(7)))));
 if(_GLF_DEAD(false))
  return;
 if((subgroup_local_id % 2) == 0)
  {
   do
    {
     subgroupAll(true);
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        break;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   subgroupAll(false);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), false || ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0), min(_GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-1.4)), vec2(_GLF_FUZZED(-3345.2473), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) - sin(vec2(0.0, 0.0)))[1]) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(min(injectionSwitch, 3.9))))[1], (injectionSwitch[1]) / 1.0))))).x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, abs(0.0)))), _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0, 1.0, 0.0))))).y) / 1.0))))), true && (bool(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / 1.0, max((injectionSwitch.y) / 1.0, (injectionSwitch.y) / 1.0)))), false || ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))), _GLF_IDENTITY(true && (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), false || ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))), true && (bool(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), false || ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))))))), bool(_GLF_IDENTITY(bvec3(true && (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), false || ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))), true && (bool(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), false || ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(bvec3(true && (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), false || ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))), true && (bool(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), false || ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(true && (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), false || ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))), true && (bool(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), false || ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))))))) && (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, false)))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) >> 0u), clamp(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) >> 0u), _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) >> 0u), _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) >> 0u)))), min(~ (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) >> 0u), clamp(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((next_virtual_gid), 0u + ((next_virtual_gid))) >> 0u), _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) >> 0u), _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) >> 0u)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) >> 0u), clamp(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) >> 0u), _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) >> 0u), _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) >> 0u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) >> 0u), clamp(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) >> 0u), _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) >> 0u), _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) >> 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) >> 0u), clamp(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) >> 0u), _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) >> 0u), _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) >> 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) >> 0u), clamp(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) >> 0u), _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) >> 0u), _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) >> 0u)))))))))))))], uint(2), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, (false ? _GLF_FUZZED((-5.5 , ivec2(17514, -80439))[0]) : _GLF_IDENTITY(4, (4) | 0))), 0 | (4)));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-635.341)), float(injectionSwitch.y), bool(true)))) - 0.0), min(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-8052.3430)), vec2(_GLF_IDENTITY(_GLF_FUZZED((6041.2171 / (+ 4618.3766))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_FUZZED((6041.2171 / (+ 4618.3766))), mix(float(_GLF_IDENTITY(_GLF_FUZZED((6041.2171 / (+ 4618.3766))), clamp(_GLF_FUZZED((6041.2171 / (+ 4618.3766))), _GLF_FUZZED((6041.2171 / (+ 4618.3766))), _GLF_FUZZED((6041.2171 / (+ 4618.3766)))))), float(_GLF_FUZZED(-3.3)), bool(false))), 1.0, 1.0, 0.0), transpose(_GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(_GLF_FUZZED((6041.2171 / (+ 4618.3766))), mix(float(_GLF_IDENTITY(_GLF_FUZZED((6041.2171 / (+ 4618.3766))), clamp(_GLF_FUZZED((6041.2171 / (+ 4618.3766))), _GLF_FUZZED((6041.2171 / (+ 4618.3766))), _GLF_FUZZED((6041.2171 / (+ 4618.3766)))))), float(_GLF_FUZZED(-3.3)), bool(false))), 1.0, 1.0, 0.0)), transpose(transpose(transpose(mat2(_GLF_IDENTITY(_GLF_FUZZED((6041.2171 / (+ 4618.3766))), mix(float(_GLF_IDENTITY(_GLF_FUZZED((6041.2171 / (+ 4618.3766))), clamp(_GLF_FUZZED((6041.2171 / (+ 4618.3766))), _GLF_FUZZED((6041.2171 / (+ 4618.3766))), _GLF_FUZZED((6041.2171 / (+ 4618.3766)))))), float(_GLF_FUZZED(-3.3)), bool(false))), 1.0, 1.0, 0.0)))))))), min(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_FUZZED((6041.2171 / (+ 4618.3766))), mix(float(_GLF_IDENTITY(_GLF_FUZZED((6041.2171 / (+ 4618.3766))), clamp(_GLF_FUZZED((6041.2171 / (+ 4618.3766))), _GLF_FUZZED((6041.2171 / (+ 4618.3766))), _GLF_FUZZED((6041.2171 / (+ 4618.3766)))))), float(_GLF_FUZZED(-3.3)), bool(false))), 1.0, 1.0, 0.0), transpose(_GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(_GLF_FUZZED((6041.2171 / (+ 4618.3766))), mix(float(_GLF_IDENTITY(_GLF_FUZZED((6041.2171 / (+ 4618.3766))), clamp(_GLF_FUZZED((6041.2171 / (+ 4618.3766))), _GLF_FUZZED((6041.2171 / (+ 4618.3766))), _GLF_FUZZED((6041.2171 / (+ 4618.3766)))))), float(_GLF_FUZZED(-3.3)), bool(false))), 1.0, 1.0, 0.0)), transpose(transpose(transpose(mat2(_GLF_IDENTITY(_GLF_FUZZED((6041.2171 / (+ 4618.3766))), mix(float(_GLF_IDENTITY(_GLF_FUZZED((6041.2171 / (+ 4618.3766))), clamp(_GLF_FUZZED((6041.2171 / (+ 4618.3766))), _GLF_FUZZED((6041.2171 / (+ 4618.3766))), _GLF_FUZZED((6041.2171 / (+ 4618.3766)))))), float(_GLF_FUZZED(-3.3)), bool(false))), 1.0, 1.0, 0.0)))))))), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_FUZZED((6041.2171 / (+ 4618.3766))), mix(float(_GLF_IDENTITY(_GLF_FUZZED((6041.2171 / (+ 4618.3766))), clamp(_GLF_FUZZED((6041.2171 / (+ 4618.3766))), _GLF_FUZZED((6041.2171 / (+ 4618.3766))), _GLF_FUZZED((6041.2171 / (+ 4618.3766)))))), float(_GLF_FUZZED(-3.3)), bool(false))), 1.0, 1.0, 0.0), transpose(_GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(_GLF_FUZZED((6041.2171 / (+ 4618.3766))), mix(float(_GLF_IDENTITY(_GLF_FUZZED((6041.2171 / (+ 4618.3766))), clamp(_GLF_FUZZED((6041.2171 / (+ 4618.3766))), _GLF_FUZZED((6041.2171 / (+ 4618.3766))), _GLF_FUZZED((6041.2171 / (+ 4618.3766)))))), float(_GLF_FUZZED(-3.3)), bool(false))), 1.0, 1.0, 0.0)), transpose(transpose(transpose(mat2(_GLF_IDENTITY(_GLF_FUZZED((6041.2171 / (+ 4618.3766))), mix(float(_GLF_IDENTITY(_GLF_FUZZED((6041.2171 / (+ 4618.3766))), clamp(_GLF_FUZZED((6041.2171 / (+ 4618.3766))), _GLF_FUZZED((6041.2171 / (+ 4618.3766))), _GLF_FUZZED((6041.2171 / (+ 4618.3766)))))), float(_GLF_FUZZED(-3.3)), bool(false))), 1.0, 1.0, 0.0))))))))))), (injectionSwitch)[1]), bvec2(false, true))).y, (false ? _GLF_FUZZED(165.925) : injectionSwitch.y))) - _GLF_IDENTITY(sin(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))), (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))) ? _GLF_FUZZED(9950.1213) : _GLF_IDENTITY(sin(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))), float(mat3(sin(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, sin(0.0))))))), mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_IDENTITY(0.0, max(0.0, 0.0)))), float(_GLF_FUZZED(_GLF_IDENTITY(vec3(92.57, _GLF_IDENTITY(-15.85, float(mat4x3(-15.85, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-4.7) : _GLF_IDENTITY(1.0, (1.0) - 0.0))), 1.0, 1.0, abs(0.0), 1.0, 0.0, tan(0.0), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 1.0, 1.0), min(_GLF_IDENTITY(vec3(0.0, 1.0, 1.0), mix(vec3(_GLF_FUZZED(-399.133), _GLF_FUZZED(_GLF_IDENTITY(5970.1768, min(5970.1768, _GLF_IDENTITY(5970.1768, (false ? _GLF_FUZZED(31.16) : 5970.1768))))), (vec3(0.0, 1.0, 1.0))[2]), vec3((vec3(0.0, 1.0, 1.0))[0], (vec3(0.0, 1.0, 1.0))[1], _GLF_FUZZED(-5.2)), bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), vec3(0.0, 1.0, 1.0))), vec3(_GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0, abs(0.0))), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, abs(0.0)))), 0.0, length(abs(0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), max(1.0, 1.0))).s, min(vec3(92.57, _GLF_IDENTITY(-15.85, float(mat4x3(-15.85, 1.0, 1.0, 1.0, 1.0, abs(0.0), 1.0, 0.0, tan(0.0), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, abs(0.0))), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, abs(0.0)))), 0.0, length(abs(0.0))))), _GLF_IDENTITY(1.0, max(1.0, 1.0))).s, vec3(92.57, _GLF_IDENTITY(-15.85, float(mat4x3(-15.85, 1.0, 1.0, 1.0, 1.0, abs(0.0), 1.0, 0.0, tan(0.0), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, abs(0.0))), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, _GLF_IDENTITY(abs(0.0), (_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0)))) - _GLF_IDENTITY(sin(0.0), mix(float(sin(0.0)), float(_GLF_FUZZED(-4.6)), bool(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))))))), 0.0, length(abs(0.0))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), (max(1.0, 1.0)) / determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))))).s)))), bool(false)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), (! (! (false))) || false), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), true && (! (_GLF_IDENTITY(false, (false) && true)))), _GLF_IDENTITY((! (false)), ((! (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(true, true && (true)) && (! (false))))) || false), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (bool((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), (! (_GLF_IDENTITY(! (false), true && (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))))) || false), false, true))), _GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (false) && true)), (! (false)) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false)))))))), (! (_GLF_IDENTITY(! (false), true && (! (false))))) || false), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY(! (false), true && _GLF_IDENTITY((! (false)), bool(bvec4((! (false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false), false, true))), _GLF_IDENTITY(false, false || (false))), false, true)), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), true && (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, true && (false))), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(false, true && (false))), false, true)))))))))) || false), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED(945.560), _GLF_FUZZED(80.82)), vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), bvec2(true, true)))).x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(true, ! (! (true))) && (! (false))))) || false), _GLF_IDENTITY(false, false || (false)), true))), _GLF_IDENTITY(false, false || (false))), false, true)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY(! (false), true && (! (false))))) || false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY(! (false), true && (! (false))))) || false), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY(! (false), true && (! (false))))) || false), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY(! (false), true && (! (false))))) || false), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (! (false))), (_GLF_IDENTITY(! (false), true && (! (false)))) || false)) || false)) || false))) || false), false, true), true))))))))))), _GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false || (false), ! (! (false || (false))))) && true))), false, true)), false))), true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY(! (false), true && (! (false))))) || false), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! _GLF_IDENTITY((_GLF_IDENTITY(! (false), true && (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)))))), false, true, true))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)))))), false, true, true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)))))), false, true, true)))))), (_GLF_IDENTITY(! (false), true && (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), false || (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false))))) || false), ! (! (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)))))), false, true, true))))))) || false)) || false)), true && ((_GLF_IDENTITY(! (false), true && (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false))))), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (false))), true, false, false)))))) || false)), false, true, true))))))))))))) || false), false, true))), _GLF_IDENTITY(false, false || (false))), false, true)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY(! (false), true && (! (false))))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false))) || false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), (! (_GLF_IDENTITY(! (false), true && (! (false))))) || false), false, true))), _GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))) || (false))), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY(! (false), true && (! (false))))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false))) || false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), (! (_GLF_IDENTITY(! (false), true && (! (false))))) || false), false, true))), _GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))) || (false))), false, true)), true, false))), false))), true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY(! (false), true && (! (false))))) || false), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY(! (false), true && (! (false))))) || false), false, true))), _GLF_IDENTITY(false, false || (false))), false, true)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY(! (false), true && (! (false))))) || false), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool(bool(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), (! (_GLF_IDENTITY(! (false), true && (! (false))))) || false), false, true))), _GLF_IDENTITY(false, false || (false))), false, true)), false))), true)), _GLF_IDENTITY(true, (true) && true)))))))))), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (! (false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), true && (! (false)))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)) || false)), _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(! (false), true && (! (false))))), ((! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), ! (! ((false))))))), true && (! (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), ! (! ((false))))))), true && (! (false)))))))) || _GLF_IDENTITY(false, (false) && true)) || false, (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)))), true && (! (false))))), ((! (_GLF_IDENTITY(! (false), true && (! (false)))))) || _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (false) && true)), (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)))), true && (! (false))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)))), true && (! (false))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)))), true && (! (false))))), ((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)))), true && (! (false)))))) && true)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((! (_GLF_IDENTITY(! (false), true && (! (_GLF_IDENTITY(false, ! (! (false))))))))) || _GLF_IDENTITY(false, (false) && true))) && true) || false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(false, false || (false))))), false || (! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))) ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(43.31, -21.31), clamp(vec2(43.31, -21.31), vec2(43.31, -21.31), _GLF_IDENTITY(vec2(43.31, -21.31), (vec2(43.31, -21.31)) + vec2(0.0, 0.0))))))).x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(11.68))))))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, true))), (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (true))))) && (! (false))))) || _GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(false, false || (false))))))))))))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))) || false))))) && true)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
