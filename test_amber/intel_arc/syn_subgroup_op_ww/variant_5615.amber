#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_ZERO(0.0, injectionSwitch.x)), mix(float(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, ~ (~ (1)))])), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), vec2(_GLF_IDENTITY(vec4(max(injectionSwitch, injectionSwitch), 1.0, abs(0.0)), min(vec4(max(injectionSwitch, injectionSwitch), 1.0, abs(0.0)), vec4(max(injectionSwitch, injectionSwitch), 1.0, abs(0.0))))))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x), float(_GLF_IDENTITY(_GLF_FUZZED(-22.75), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-22.75), (_GLF_FUZZED(-22.75)) / _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, tan(0.0)), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, tan(0.0)), vec4(0.0, 0.0, 1.0, 0.0)))), mix(float(_GLF_FUZZED(8.0)), float(_GLF_FUZZED(-22.75)), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))))))), _GLF_FUZZED(-22.75), _GLF_IDENTITY(_GLF_FUZZED(-22.75), mix(float(_GLF_FUZZED(-22.75)), float(_GLF_FUZZED(-4.5)), bool(false)))))), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_ZERO(0.0, injectionSwitch.x)), mix(float(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, ~ (~ (1)))])), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), vec2(_GLF_IDENTITY(vec4(max(injectionSwitch, injectionSwitch), 1.0, abs(0.0)), min(vec4(max(injectionSwitch, injectionSwitch), 1.0, abs(0.0)), vec4(max(injectionSwitch, injectionSwitch), 1.0, abs(0.0))))))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x), float(_GLF_IDENTITY(_GLF_FUZZED(-22.75), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-22.75), (_GLF_FUZZED(-22.75)) / _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, tan(0.0)), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, tan(0.0)), vec4(0.0, 0.0, 1.0, 0.0)))), mix(float(_GLF_FUZZED(8.0)), float(_GLF_FUZZED(-22.75)), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))))))), _GLF_FUZZED(-22.75), _GLF_IDENTITY(_GLF_FUZZED(-22.75), mix(float(_GLF_FUZZED(-22.75)), float(_GLF_FUZZED(-4.5)), bool(false)))))), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_ZERO(0.0, injectionSwitch.x)), mix(float(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, ~ (~ (1)))])), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), vec2(_GLF_IDENTITY(vec4(max(injectionSwitch, injectionSwitch), 1.0, abs(0.0)), min(vec4(max(injectionSwitch, injectionSwitch), 1.0, abs(0.0)), vec4(max(injectionSwitch, injectionSwitch), 1.0, abs(0.0))))))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x), float(_GLF_IDENTITY(_GLF_FUZZED(-22.75), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-22.75), (_GLF_FUZZED(-22.75)) / _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, tan(0.0)), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, tan(0.0)), vec4(0.0, 0.0, 1.0, 0.0)))), mix(float(_GLF_FUZZED(8.0)), float(_GLF_FUZZED(-22.75)), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))))))), _GLF_FUZZED(-22.75), _GLF_IDENTITY(_GLF_FUZZED(-22.75), mix(float(_GLF_FUZZED(-22.75)), float(_GLF_FUZZED(-4.5)), bool(false)))))), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))), false || (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), bool(bvec4((false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec2(true, false))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_ZERO(0.0, injectionSwitch.x)), mix(float(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, ~ (~ (1)))])), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), vec2(_GLF_IDENTITY(vec4(max(injectionSwitch, injectionSwitch), 1.0, abs(0.0)), min(vec4(max(injectionSwitch, injectionSwitch), 1.0, abs(0.0)), vec4(max(injectionSwitch, injectionSwitch), 1.0, abs(0.0))))))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x), float(_GLF_IDENTITY(_GLF_FUZZED(-22.75), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-22.75), (_GLF_FUZZED(-22.75)) / _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, tan(0.0)), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, tan(0.0)), vec4(0.0, 0.0, 1.0, 0.0)))), mix(float(_GLF_FUZZED(8.0)), float(_GLF_FUZZED(-22.75)), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))))))), _GLF_FUZZED(-22.75), _GLF_IDENTITY(_GLF_FUZZED(-22.75), mix(float(_GLF_FUZZED(-22.75)), float(_GLF_FUZZED(-4.5)), bool(false)))))), bool(false))), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), max((injectionSwitch.x), (injectionSwitch.x))) - _GLF_ZERO(0.0, injectionSwitch.x)), mix(float(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, ~ (~ (1)))])), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), vec2(_GLF_IDENTITY(vec4(max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])), injectionSwitch), 1.0, abs(0.0)), min(vec4(max(injectionSwitch, injectionSwitch), 1.0, abs(0.0)), vec4(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), abs(0.0))))))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x), float(_GLF_IDENTITY(_GLF_FUZZED(-22.75), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-22.75), (_GLF_FUZZED(-22.75)) / _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, tan(0.0)), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, tan(0.0)), vec4(0.0, 0.0, 1.0, 0.0)))), mix(float(_GLF_FUZZED(8.0)), float(_GLF_FUZZED(-22.75)), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(_GLF_FUZZED(-22.75), mix(float(_GLF_FUZZED(float(-63584))), float(_GLF_FUZZED(-22.75)), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-22.75), min(_GLF_FUZZED(-22.75), _GLF_FUZZED(-22.75))), mix(float(_GLF_FUZZED(-22.75)), float(_GLF_FUZZED(-4.5)), bool(false)))))), bool(false))))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(5.6))), (injectionSwitch.x) - _GLF_ZERO(0.0, injectionSwitch.x)), mix(float(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, ~ (~ (1)))])), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), vec2(_GLF_IDENTITY(vec4(max(injectionSwitch, injectionSwitch), 1.0, abs(0.0)), min(vec4(max(injectionSwitch, injectionSwitch), 1.0, abs(0.0)), vec4(max(injectionSwitch, injectionSwitch), 1.0, abs(0.0))))))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x), float(_GLF_IDENTITY(_GLF_FUZZED(-22.75), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-22.75), (_GLF_FUZZED(-22.75)) / _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, tan(0.0)), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), tan(0.0)), vec4(0.0, 0.0, 1.0, 0.0)))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(8.0)), float(_GLF_FUZZED(-22.75)), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))))), clamp(mix(float(_GLF_FUZZED(8.0)), float(_GLF_FUZZED(-22.75)), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))))), mix(float(_GLF_FUZZED(8.0)), float(_GLF_FUZZED(-22.75)), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))))), mix(float(_GLF_FUZZED(8.0)), float(_GLF_FUZZED(-22.75)), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))))))))), _GLF_FUZZED(-22.75), _GLF_IDENTITY(_GLF_FUZZED(-22.75), mix(float(_GLF_FUZZED(-22.75)), float(_GLF_FUZZED(-4.5)), bool(false)))))), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(false, bool(bvec2(false, true))) || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_ZERO(0.0, injectionSwitch.x)), mix(float(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, ~ (~ (1)))])), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), max((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))))), 1.0, abs(0.0)), min(vec4(max(injectionSwitch, injectionSwitch), 1.0, abs(0.0)), vec4(max(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(2.4)), vec2(_GLF_FUZZED(-9960.5442), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)), injectionSwitch), _GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(dot(vec3(0.0, sqrt(1.0), 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, sqrt(1.0), 0.0), vec3(0.0, 1.0, 0.0)))), abs(0.0))))))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x), float(_GLF_IDENTITY(_GLF_FUZZED(-22.75), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-22.75), (_GLF_FUZZED(-22.75)) / _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, tan(_GLF_IDENTITY(0.0, max(0.0, 0.0)))), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, tan(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-3.4)), float(0.0), bool(true)))) - 0.0))), vec4(0.0, 0.0, 1.0, 0.0)))), mix(float(_GLF_FUZZED(8.0)), float(_GLF_FUZZED(-22.75)), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) < injectionSwitch.y))))))), _GLF_FUZZED(-22.75), _GLF_IDENTITY(_GLF_FUZZED(-22.75), mix(float(_GLF_FUZZED(-22.75)), float(_GLF_FUZZED(-4.5)), bool(false)))))), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ((false)) && true), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ((false)) && true), false, false))))))), false || ((! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ((false)) && true), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ((false)) && true), false, false)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-813.356), _GLF_FUZZED(-705.829)), bvec2(false, false))), clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-813.356), _GLF_FUZZED(-705.829)), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-813.356), _GLF_FUZZED(-705.829)), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-813.356), _GLF_FUZZED(-705.829)), bvec2(false, false))))).x, float(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-813.356), _GLF_FUZZED(-705.829)), bvec2(false, false))), clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-813.356), _GLF_FUZZED(-705.829)), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-813.356), _GLF_FUZZED(-705.829)), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-813.356), _GLF_FUZZED(-705.829)), bvec2(false, false))))).x, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, tan(0.0), determinant(mat4(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(3.5)), float(injectionSwitch[0]), bool(true))), injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), injectionSwitch), vec2(vec4(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), 1.0, abs(0.0))))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x, min(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(3.5)), float(injectionSwitch[0]), bool(true))), injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), injectionSwitch), vec2(vec4(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), 1.0, abs(0.0))))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(3.5)), float(injectionSwitch[0]), bool(true))), injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), injectionSwitch), vec2(vec4(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), 1.0, abs(0.0))))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x))), float(_GLF_IDENTITY(_GLF_FUZZED(-22.75), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-22.75), _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(_GLF_FUZZED(-22.75), min(_GLF_FUZZED(-22.75), _GLF_FUZZED(-22.75))), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)), max(float(mat3x2(_GLF_IDENTITY(_GLF_FUZZED(-22.75), min(_GLF_FUZZED(-22.75), _GLF_FUZZED(_GLF_IDENTITY(-22.75, 0.0 + (-22.75))))), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)), float(mat3x2(_GLF_IDENTITY(_GLF_FUZZED(-22.75), min(_GLF_FUZZED(-22.75), _GLF_FUZZED(-22.75))), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))), mix(_GLF_IDENTITY(float(_GLF_FUZZED(8.0)), mix(float(_GLF_IDENTITY(float(_GLF_FUZZED(8.0)), max(float(_GLF_FUZZED(8.0)), float(_GLF_FUZZED(8.0))))), float(_GLF_FUZZED(82.22)), bool(false))), float(_GLF_FUZZED(-22.75)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FUZZED(-22.75), _GLF_IDENTITY(_GLF_FUZZED(-22.75), mix(float(_GLF_FUZZED(-22.75)), float(_GLF_FUZZED(_GLF_IDENTITY(-4.5, max(-4.5, _GLF_IDENTITY(-4.5, min(-4.5, _GLF_IDENTITY(-4.5, (-4.5) / sqrt(1.0)))))))), bool(false)))))), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), clamp(max(injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), max(max(injectionSwitch.y, injectionSwitch.y), max(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), mix(float(_GLF_FUZZED((+ _GLF_IDENTITY(_GLF_IDENTITY(-2688.5791, clamp(-2688.5791, -2688.5791, _GLF_IDENTITY(-2688.5791, max(-2688.5791, -2688.5791)))), mix(float(_GLF_IDENTITY(-2688.5791, clamp(-2688.5791, -2688.5791, _GLF_IDENTITY(-2688.5791, max(-2688.5791, -2688.5791))))), float(_GLF_FUZZED(float(true))), bool(false)))))), float(_GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(min(max(injectionSwitch.y, injectionSwitch.y), max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y)))), clamp(min(max(injectionSwitch.y, injectionSwitch.y), max(injectionSwitch.y, injectionSwitch.y)), min(max(injectionSwitch.y, injectionSwitch.y), max(injectionSwitch.y, injectionSwitch.y)), min(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))), max(injectionSwitch.y, injectionSwitch.y)))))), bool(true)))))))))), ((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), vec2(mat3x4((injectionSwitch), determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), length(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-813.356), _GLF_FUZZED(-705.829)), bvec2(false, false))).x, mix(float(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(3.5)), float(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-899.882), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(6030.7392)), bvec2(true, false)))))[0]), bool(true))), injectionSwitch[1])), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), injectionSwitch), vec2(vec4(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), 1.0, abs(0.0))))), clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), injectionSwitch), vec2(vec4(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), 1.0, abs(0.0))))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), injectionSwitch), vec2(vec4(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), 1.0, abs(0.0))))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), injectionSwitch), vec2(vec4(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), 1.0, abs(0.0))))))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x), float(_GLF_IDENTITY(_GLF_FUZZED(-22.75), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-22.75), _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(_GLF_FUZZED(-22.75), min(_GLF_FUZZED(-22.75), _GLF_FUZZED(-22.75))), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)), max(float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-22.75), (_GLF_FUZZED(-22.75)) - 0.0), min(_GLF_FUZZED(-22.75), _GLF_FUZZED(-22.75))), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)), float(mat3x2(_GLF_IDENTITY(_GLF_FUZZED(-22.75), min(_GLF_FUZZED(-22.75), _GLF_FUZZED(-22.75))), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))), mix(float(_GLF_FUZZED(8.0)), float(_GLF_FUZZED(-22.75)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FUZZED(-22.75), _GLF_IDENTITY(_GLF_FUZZED(-22.75), mix(float(_GLF_FUZZED(-22.75)), float(_GLF_FUZZED(_GLF_IDENTITY(-4.5, max(-4.5, _GLF_IDENTITY(-4.5, min(-4.5, -4.5)))))), bool(false)))))), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), clamp(max(injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), max(max(injectionSwitch.y, injectionSwitch.y), max(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), mix(float(_GLF_FUZZED((+ _GLF_IDENTITY(-2688.5791, clamp(-2688.5791, -2688.5791, _GLF_IDENTITY(-2688.5791, max(-2688.5791, -2688.5791))))))), float(_GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(min(max(injectionSwitch.y, injectionSwitch.y), max(injectionSwitch.y, injectionSwitch.y)), clamp(min(max(injectionSwitch.y, injectionSwitch.y), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(-5.1)))), vec2(_GLF_FUZZED(-666.389), _GLF_FUZZED(92.96)), bvec2(false, false))), injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(-5.1)))), vec2(_GLF_FUZZED(-666.389), _GLF_FUZZED(92.96)), bvec2(false, false))), injectionSwitch, injectionSwitch)).y, 1.0 * (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(-5.1)))), vec2(_GLF_FUZZED(-666.389), _GLF_FUZZED(92.96)), bvec2(false, false))), injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(-5.1)))), vec2(_GLF_FUZZED(-666.389), _GLF_FUZZED(92.96)), bvec2(false, false))), injectionSwitch, injectionSwitch)).y)), injectionSwitch.y)), min(max(injectionSwitch.y, injectionSwitch.y), max(injectionSwitch.y, injectionSwitch.y)), min(max(injectionSwitch.y, injectionSwitch.y), max(injectionSwitch.y, injectionSwitch.y)))))), bool(true))))))))))) || false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false))))))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false)))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false)))), bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false)))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false)))), bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), false)))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false)))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false)))), bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), false)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false)))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false)))), bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), false)))))))))))) || false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7140.4027), _GLF_FUZZED(-39.90)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))).x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(true, true, true)))) || false)) && true))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | (_GLF_IDENTITY(~ (gl_WorkGroupID), (false ? _GLF_FUZZED(uvec3(139129u, 8289u, 152874u)) : _GLF_IDENTITY(~ (gl_WorkGroupID), ~ (~ (~ (gl_WorkGroupID)))))))), min(~ (gl_WorkGroupID), ~ (gl_WorkGroupID))))), (false ? _GLF_FUZZED((uvec2(197660u, 110995u) + num_workgroup).grr) : _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (gl_WorkGroupID), _GLF_IDENTITY(clamp(_GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (gl_WorkGroupID), (uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (gl_WorkGroupID)) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (gl_WorkGroupID), (uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (gl_WorkGroupID)) / uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (gl_WorkGroupID)), max(clamp(_GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (gl_WorkGroupID), (uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (gl_WorkGroupID)) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (gl_WorkGroupID), (uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (gl_WorkGroupID)) / uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (gl_WorkGroupID)), clamp(_GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (gl_WorkGroupID), (uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (gl_WorkGroupID)) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (gl_WorkGroupID), (uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (gl_WorkGroupID)) / uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (gl_WorkGroupID)))))))).x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(_GLF_IDENTITY((! (! (false))), true && ((! (! (false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) + tan(0.0)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) + tan(0.0))))), true && (bool((! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) + tan(0.0)))))))), false || (bool(_GLF_IDENTITY(bool((! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) + tan(0.0))))), true && (bool((! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) + tan(0.0))))))))))), _GLF_IDENTITY((_GLF_IDENTITY((! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! ((! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))), (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))))) && true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! ((! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))), (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))))) && true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false), false, true)))))), false || (_GLF_IDENTITY((_GLF_IDENTITY((! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! ((! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))), (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))))) && true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! ((! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))), (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))))) && true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false), false, true)))))), ! (! ((_GLF_IDENTITY((! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! ((! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))), (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))))) && true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! ((! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))), (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))))) && true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false), false, true))))))))))) || false), _GLF_IDENTITY(false, true && (false)))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(clamp(workgroup_size, workgroup_size, workgroup_size), ~ (~ (clamp(workgroup_size, workgroup_size, workgroup_size)))), (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))), 0u, _GLF_IDENTITY(0u, (0u) | (0u))), ~ (~ (_GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))), 0u, _GLF_IDENTITY(0u, (0u) | (0u))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))), 0u, _GLF_IDENTITY(0u, (0u) | (0u))), 0u ^ (clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))), 0u, _GLF_IDENTITY(0u, (0u) | (0u)))))) - 0u))))) | (subgroup_id))) : clamp(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u), workgroup_size, workgroup_size), (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))), 0u, _GLF_IDENTITY(0u, (0u) | (0u))), ~ (~ (_GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))), 0u, _GLF_IDENTITY(0u, (0u) | (0u))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))), 0u, _GLF_IDENTITY(0u, (0u) | (0u))), 0u ^ (clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))), 0u, _GLF_IDENTITY(0u, (0u) | (0u)))))) - 0u))))) | (subgroup_id))) : clamp(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u), workgroup_size, workgroup_size)) | (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))), 0u, _GLF_IDENTITY(0u, (0u) | (0u))), ~ (~ (_GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))), 0u, _GLF_IDENTITY(0u, (0u) | (0u))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))), 0u, _GLF_IDENTITY(0u, (0u) | (0u))), 0u ^ (clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))), 0u, _GLF_IDENTITY(0u, (0u) | (0u)))))) - 0u))))) | (subgroup_id))) : clamp(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u), workgroup_size, workgroup_size), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))), 0u, _GLF_IDENTITY(0u, (0u) | (0u))), ~ (~ (_GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))), 0u, _GLF_IDENTITY(0u, (0u) | (0u))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))), 0u, _GLF_IDENTITY(0u, (0u) | (0u))), 0u ^ (clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))), 0u, _GLF_IDENTITY(0u, (0u) | (0u)))))) - 0u))))) | (subgroup_id))) : clamp(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u), workgroup_size, workgroup_size), ~ (~ (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))), 0u, _GLF_IDENTITY(0u, (0u) | (0u))), ~ (~ (_GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))), 0u, _GLF_IDENTITY(0u, (0u) | (0u))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))), 0u, _GLF_IDENTITY(0u, (0u) | (0u))), 0u ^ (clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))), 0u, _GLF_IDENTITY(0u, (0u) | (0u)))))) - 0u))))) | (subgroup_id))) : clamp(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u), workgroup_size, workgroup_size)))))))))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(clamp(workgroup_size, workgroup_size, workgroup_size), ~ (~ (clamp(workgroup_size, workgroup_size, workgroup_size)))), clamp(_GLF_IDENTITY(clamp(workgroup_size, workgroup_size, workgroup_size), ~ (~ (clamp(workgroup_size, workgroup_size, workgroup_size)))), _GLF_IDENTITY(clamp(workgroup_size, workgroup_size, workgroup_size), ~ (~ (clamp(workgroup_size, workgroup_size, workgroup_size)))), _GLF_IDENTITY(clamp(workgroup_size, workgroup_size, workgroup_size), ~ (~ (clamp(workgroup_size, workgroup_size, workgroup_size)))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))), 0u, _GLF_IDENTITY(0u, (0u) | (0u))), ~ (~ (_GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(uint(0u), (uint(0u)) ^ 0u)) << 0u))), 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), max(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), min(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, (0u) | (0u))))))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(_GLF_IDENTITY(0u, ~ (~ (0u))))) << 0u))), 0u, _GLF_IDENTITY(0u, (0u) | (0u))), 0u ^ (clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))), 0u, _GLF_IDENTITY(0u, (0u) | (0u)))))) - 0u))))) | (subgroup_id))) : clamp(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) << 0u, (_GLF_IDENTITY((workgroup_size) << 0u, ~ (~ ((workgroup_size) << 0u)))) | 0u)), workgroup_size, workgroup_size), (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))), 0u, _GLF_IDENTITY(0u, (0u) | (0u))), ~ (~ (_GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, max(0u, 0u)))))) << 0u))), 0u, _GLF_IDENTITY(0u, (0u) | (0u))), (_GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))), 0u, _GLF_IDENTITY(0u, (0u) | (0u))), 0u ^ (clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))), 0u, _GLF_IDENTITY(0u, (0u) | (0u))))), ~ (~ (_GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))), 0u, _GLF_IDENTITY(0u, (0u) | (0u))), 0u ^ (clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(_GLF_IDENTITY(0u, 0u ^ (0u)))) << 0u))), 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), max(~ (0u), ~ (0u)))))) | (0u))))))))) - 0u))))) | (subgroup_id))) : clamp(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u), workgroup_size, workgroup_size)) | (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))), 0u, _GLF_IDENTITY(0u, (0u) | (0u))), ~ (~ (_GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))), 0u, _GLF_IDENTITY(0u, (0u) | (0u))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))), 0u, _GLF_IDENTITY(0u, (0u) | (0u))), 0u ^ (clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))), 0u, _GLF_IDENTITY(0u, (0u) | (0u)))))) - 0u)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) >> 0u))))) << 0u))), 0u, _GLF_IDENTITY(0u, (0u) | (0u))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u)), _GLF_IDENTITY(0u, (0u) | (0u))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))), 0u, _GLF_IDENTITY(0u, (0u) | (0u))), 0u ^ (clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))), 0u, _GLF_IDENTITY(0u, (0u) | (0u)))))) - 0u)), (0u | 0u) | ((_GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u)), _GLF_IDENTITY(0u, (0u) | (0u))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))), 0u, _GLF_IDENTITY(0u, (0u) | (0u))), 0u ^ (clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))), 0u, _GLF_IDENTITY(0u, (0u) | (0u)))))) - 0u)))))) : _GLF_FUZZED(num_workgroup)))) | (subgroup_id))) : clamp(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u), _GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u), workgroup_size), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(_GLF_IDENTITY(0u, (0u) / (1u | 0u)))) << 0u))), 0u, _GLF_IDENTITY(0u, (0u) | (0u))), ~ (~ (_GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))), 0u, _GLF_IDENTITY(0u, (0u) | (0u))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))), 0u, _GLF_IDENTITY(0u, (0u) | (0u))), 0u ^ (clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))), 0u, _GLF_IDENTITY(0u, (0u) | (0u)))))) - 0u))))) | (subgroup_id))) : clamp(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u), _GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u), workgroup_size), ~ (~ (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))), 0u, _GLF_IDENTITY(0u, (0u) | (0u))), ~ (~ (_GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u), max(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u), clamp(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u), _GLF_IDENTITY(uint(0u), (uint(0u)) << 0u), _GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))))))), 0u, _GLF_IDENTITY(0u, (0u) | (0u))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))), 0u, _GLF_IDENTITY(0u, (0u) | (0u))), 0u ^ (clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))), 0u, _GLF_IDENTITY(0u, (0u) | (0u)))))) - 0u))))) | (subgroup_id))) : clamp(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u), workgroup_size, workgroup_size))))))))))))) * workgroup_id, (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(clamp(workgroup_size, workgroup_size, workgroup_size), ~ (~ (clamp(workgroup_size, workgroup_size, workgroup_size)))), (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))), 0u, _GLF_IDENTITY(0u, (0u) | (0u))), ~ (~ (_GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))), 0u, _GLF_IDENTITY(0u, (0u) | (0u))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))), 0u, _GLF_IDENTITY(0u, (0u) | (0u))), 0u ^ (clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))), 0u, _GLF_IDENTITY(0u, (0u) | (0u)))))) - 0u))))) | (subgroup_id))) : clamp(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u), workgroup_size, workgroup_size), (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))), 0u, _GLF_IDENTITY(0u, (0u) | (0u))), ~ (~ (_GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))), 0u, _GLF_IDENTITY(0u, (0u) | (0u))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))), 0u, _GLF_IDENTITY(0u, (0u) | (0u))), 0u ^ (clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))), 0u, _GLF_IDENTITY(0u, (0u) | (0u)))))) - 0u))))) | (subgroup_id))) : clamp(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u), workgroup_size, workgroup_size)) | (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))), 0u, _GLF_IDENTITY(0u, (0u) | (0u))), ~ (~ (_GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))), 0u, _GLF_IDENTITY(0u, (0u) | (0u))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))), 0u, _GLF_IDENTITY(0u, (0u) | (0u))), 0u ^ (clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))), 0u, _GLF_IDENTITY(0u, (0u) | (0u)))))) - 0u))))) | (subgroup_id))) : clamp(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u), workgroup_size, workgroup_size), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))), 0u, _GLF_IDENTITY(0u, (0u) | (0u))), ~ (~ (_GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))), 0u, _GLF_IDENTITY(0u, (0u) | (0u))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))), 0u, _GLF_IDENTITY(0u, (0u) | (0u))), 0u ^ (clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))), 0u, _GLF_IDENTITY(0u, (0u) | (0u)))))) - 0u))))) | (subgroup_id))) : clamp(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u), workgroup_size, workgroup_size), ~ (~ (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))), 0u, _GLF_IDENTITY(0u, (0u) | (0u))), ~ (~ (_GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))), 0u, _GLF_IDENTITY(0u, (0u) | (0u))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))), 0u, _GLF_IDENTITY(0u, (0u) | (0u))), 0u ^ (clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))), 0u, _GLF_IDENTITY(0u, (0u) | (0u)))))) - 0u))))) | (subgroup_id))) : clamp(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u), workgroup_size, workgroup_size)))))))))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(clamp(workgroup_size, workgroup_size, workgroup_size), ~ (~ (clamp(workgroup_size, workgroup_size, workgroup_size)))), clamp(_GLF_IDENTITY(clamp(workgroup_size, workgroup_size, workgroup_size), ~ (~ (clamp(workgroup_size, workgroup_size, workgroup_size)))), _GLF_IDENTITY(clamp(workgroup_size, workgroup_size, workgroup_size), ~ (~ (clamp(workgroup_size, workgroup_size, workgroup_size)))), _GLF_IDENTITY(clamp(workgroup_size, workgroup_size, workgroup_size), ~ (~ (clamp(workgroup_size, workgroup_size, workgroup_size)))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))), 0u, _GLF_IDENTITY(0u, (0u) | (0u))), ~ (~ (_GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(uint(0u), (uint(0u)) ^ 0u)) << 0u))), 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), max(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), min(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, (0u) | (0u))))))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(_GLF_IDENTITY(0u, ~ (~ (0u))))) << 0u))), 0u, _GLF_IDENTITY(0u, (0u) | (0u))), 0u ^ (clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))), 0u, _GLF_IDENTITY(0u, (0u) | (0u)))))) - 0u))))) | (subgroup_id))) : clamp(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) << 0u, (_GLF_IDENTITY((workgroup_size) << 0u, ~ (~ ((workgroup_size) << 0u)))) | 0u)), workgroup_size, workgroup_size), (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))), 0u, _GLF_IDENTITY(0u, (0u) | (0u))), ~ (~ (_GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, max(0u, 0u)))))) << 0u))), 0u, _GLF_IDENTITY(0u, (0u) | (0u))), (_GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))), 0u, _GLF_IDENTITY(0u, (0u) | (0u))), 0u ^ (clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))), 0u, _GLF_IDENTITY(0u, (0u) | (0u))))), ~ (~ (_GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))), 0u, _GLF_IDENTITY(0u, (0u) | (0u))), 0u ^ (clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(_GLF_IDENTITY(0u, 0u ^ (0u)))) << 0u))), 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), max(~ (0u), ~ (0u)))))) | (0u))))))))) - 0u))))) | (subgroup_id))) : clamp(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u), workgroup_size, workgroup_size)) | (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))), 0u, _GLF_IDENTITY(0u, (0u) | (0u))), ~ (~ (_GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))), 0u, _GLF_IDENTITY(0u, (0u) | (0u))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))), 0u, _GLF_IDENTITY(0u, (0u) | (0u))), 0u ^ (clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))), 0u, _GLF_IDENTITY(0u, (0u) | (0u)))))) - 0u)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) >> 0u))))) << 0u))), 0u, _GLF_IDENTITY(0u, (0u) | (0u))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u)), _GLF_IDENTITY(0u, (0u) | (0u))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))), 0u, _GLF_IDENTITY(0u, (0u) | (0u))), 0u ^ (clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))), 0u, _GLF_IDENTITY(0u, (0u) | (0u)))))) - 0u)), (0u | 0u) | ((_GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u)), _GLF_IDENTITY(0u, (0u) | (0u))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))), 0u, _GLF_IDENTITY(0u, (0u) | (0u))), 0u ^ (clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))), 0u, _GLF_IDENTITY(0u, (0u) | (0u)))))) - 0u)))))) : _GLF_FUZZED(num_workgroup)))) | (subgroup_id))) : clamp(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u), _GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u), workgroup_size), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(_GLF_IDENTITY(0u, (0u) / (1u | 0u)))) << 0u))), 0u, _GLF_IDENTITY(0u, (0u) | (0u))), ~ (~ (_GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))), 0u, _GLF_IDENTITY(0u, (0u) | (0u))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))), 0u, _GLF_IDENTITY(0u, (0u) | (0u))), 0u ^ (clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))), 0u, _GLF_IDENTITY(0u, (0u) | (0u)))))) - 0u))))) | (subgroup_id))) : clamp(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u), _GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u), workgroup_size), ~ (~ (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))), 0u, _GLF_IDENTITY(0u, (0u) | (0u))), ~ (~ (_GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u), max(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u), clamp(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u), _GLF_IDENTITY(uint(0u), (uint(0u)) << 0u), _GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))))))), 0u, _GLF_IDENTITY(0u, (0u) | (0u))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))), 0u, _GLF_IDENTITY(0u, (0u) | (0u))), 0u ^ (clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))), 0u, _GLF_IDENTITY(0u, (0u) | (0u)))))) - 0u))))) | (subgroup_id))) : clamp(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u), workgroup_size, workgroup_size))))))))))))) * workgroup_id) | 0u);
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), injectionSwitch, injectionSwitch))[1])).x > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1])).x > injectionSwitch.y)) || false)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 0.0, log(1.0), 0.0, 0.0, 1.0, 0.0, tan(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), (mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 0.0, log(1.0), 0.0, 0.0, 1.0, 0.0, tan(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))) * mat3(1.0))), (vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 0.0, log(1.0), 0.0, 0.0, 1.0, 0.0, tan(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), (mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 0.0, log(1.0), 0.0, 0.0, 1.0, 0.0, tan(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))) * mat3(1.0)))) * vec2(1.0, 1.0))).y)), false, true, false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, mix(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x), float(_GLF_FUZZED(-6.5)), bool(false))), 0.0, 1.0, abs(round(length(normalize(1.0)))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false)))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(log(1.0) + (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-342.843), _GLF_FUZZED(8.8)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), _GLF_IDENTITY(clamp(log(1.0) + (injectionSwitch.y), log(1.0) + (injectionSwitch.y), _GLF_IDENTITY(log(1.0) + (injectionSwitch.y), clamp(log(1.0) + (injectionSwitch.y), log(1.0) + (injectionSwitch.y), log(1.0) + (injectionSwitch.y)))), float(mat2x3(clamp(log(1.0) + (injectionSwitch.y), log(1.0) + _GLF_IDENTITY((injectionSwitch.y), max(_GLF_IDENTITY((injectionSwitch.y), min(_GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))), _GLF_IDENTITY((injectionSwitch.y), 0.0 + ((injectionSwitch.y))))), (injectionSwitch.y))), _GLF_IDENTITY(log(1.0) + (injectionSwitch.y), clamp(log(1.0) + (injectionSwitch.y), log(1.0) + (injectionSwitch.y), log(1.0) + (injectionSwitch.y)))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(round(length(normalize(1.0))), 0.0, 1.0, abs(1.0))), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(round(length(normalize(1.0))), 0.0, 1.0, abs(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)))))), 0.0, 1.0, 1.0, 1.0)))))), _GLF_IDENTITY(float(_GLF_FUZZED((-4.9))), (float(_GLF_FUZZED((-4.9)))) / 1.0), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))), min(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, tan(0.0), 1.0, 0.0, cos(0.0), 0.0, abs(0.0), 0.0)))))), ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(log(1.0) + (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-342.843), _GLF_FUZZED(8.8)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), _GLF_IDENTITY(clamp(log(1.0) + (injectionSwitch.y), log(_GLF_IDENTITY(1.0, min(1.0, 1.0))) + (injectionSwitch.y), _GLF_IDENTITY(log(1.0) + (injectionSwitch.y), clamp(log(1.0) + (injectionSwitch.y), log(1.0) + (injectionSwitch.y), log(1.0) + (injectionSwitch.y)))), float(mat2x3(clamp(_GLF_IDENTITY(log(1.0) + (injectionSwitch.y), float(float(log(1.0) + (injectionSwitch.y)))), log(1.0) + (injectionSwitch.y), _GLF_IDENTITY(log(1.0) + (injectionSwitch.y), clamp(log(1.0) + (injectionSwitch.y), log(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), log(1.0))), min(float(vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), log(1.0))), float(vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), log(1.0))))))) + (injectionSwitch.y), log(1.0) + (injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(round(length(normalize(1.0))), 0.0, 1.0, abs(1.0))), min(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(round(length(normalize(1.0))), 0.0, 1.0, abs(1.0))), (false ? _GLF_FUZZED(111.003) : dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(round(length(normalize(1.0))), 0.0, 1.0, abs(1.0))))), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(round(length(normalize(1.0))), 0.0, 1.0, abs(1.0))))), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(round(length(normalize(1.0))), 0.0, 1.0, abs(1.0)))), 0.0, 1.0, 1.0, 1.0)))))), float(_GLF_FUZZED((-4.9))), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))) && true)))))), min(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, float(mat3(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 1.0))), 0.0, tan(0.0), 1.0, 0.0, cos(0.0), 0.0, abs(0.0), 0.0))))))) && true))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, log(1.0) + (injectionSwitch.y))), float(_GLF_FUZZED((_GLF_IDENTITY(-4.9, max(-4.9, -4.9))))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), 1.0 * (injectionSwitch.y)), injectionSwitch.y), min(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), 1.0 * (injectionSwitch.y)), injectionSwitch.y), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), 1.0 * (injectionSwitch.y)), injectionSwitch.y), mix(float(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), 1.0 * (injectionSwitch.y)), injectionSwitch.y)), float(_GLF_FUZZED(4.7)), bool(false)))))))))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, log(1.0) + (injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, log(1.0) + (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, log(1.0) + (injectionSwitch.y))))), float(_GLF_FUZZED((-4.9))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch[1], 0.0 + (injectionSwitch[1])), injectionSwitch[1]), _GLF_IDENTITY(float(mat3x2(min(_GLF_IDENTITY(injectionSwitch[1], 0.0 + (injectionSwitch[1])), injectionSwitch[1]), 1.0, 1.0, 1.0, 1.0, 1.0)), float(mat3(float(mat3x2(min(_GLF_IDENTITY(injectionSwitch[1], 0.0 + (injectionSwitch[1])), injectionSwitch[1]), 1.0, 1.0, 1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))))))), injectionSwitch)).y, 1.0 * (injectionSwitch.y)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 0.0))).y, 1.0 * (injectionSwitch.y)), float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 0.0))).y, 1.0 * (injectionSwitch.y)), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 0.0), (mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 0.0))).y, 1.0 * (injectionSwitch.y)), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 0.0)) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(1.0 * (injectionSwitch.y), determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)) * (_GLF_IDENTITY(1.0 * (injectionSwitch.y), (1.0 * (injectionSwitch.y)) - 0.0))))), float(_GLF_FUZZED(-9.7)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(1.0 * (injectionSwitch.y), min(1.0 * (injectionSwitch.y), 1.0 * (injectionSwitch.y)))))), injectionSwitch.y))))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), (_GLF_DEAD(false)) || false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false)))))))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 1.0, 1.0, 0.0)), _GLF_IDENTITY(float(mat4x3(float(mat2(injectionSwitch.x, 1.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), 0.0, 0.0, 0.0)), mix(float(float(mat4x3(float(mat2(injectionSwitch.x, 1.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), 0.0, 0.0, 0.0))), float(_GLF_FUZZED(-5.0)), bool(false))))) > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), ! (! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec4((false), true, true, true))) && true), _GLF_IDENTITY(false, true && (false))))))))))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (false))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true))))))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), false || ((_GLF_IDENTITY(false, false || (false)))))))))
  barrier();
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec4((false), false, true, false)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + subgroup_base + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) * (_GLF_IDENTITY(workgroup_base + subgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(workgroup_size)))))) + subgroup_base))))), 1u * _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))), (true ? (workgroup_base + _GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))) : _GLF_FUZZED(virtual_gid))), (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, uint(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(0u))) + ((workgroup_base + _GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((workgroup_base + subgroup_base) - 0u, uint(uvec4(_GLF_IDENTITY((workgroup_base + subgroup_base) - 0u, max((workgroup_base + subgroup_base) - 0u, (workgroup_base + subgroup_base) - 0u)), 0u, 1u, 0u)))), _GLF_IDENTITY(1u * (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (workgroup_base + subgroup_base))), (1u * (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (_GLF_IDENTITY(workgroup_base + subgroup_base, ~ (~ (workgroup_base + subgroup_base))))))) / 1u)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) + _GLF_IDENTITY(0u, (0u) * 1u)) + subgroup_base, 1u * (workgroup_base + subgroup_base)))) + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) << (0 ^ 0))))), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u)) - (_GLF_IDENTITY(1u ^ uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), (1u ^ uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))) - 0u)))) % subgroup_size);
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), bvec2(bvec2(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)))))))), false || (bool(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), bvec2(bvec2(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x, (false ? _GLF_FUZZED(atan(828.618)) : injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[virtual_gid], _GLF_IDENTITY(uint(1), max(_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) << 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, max(1, 1))))), max(uint(1), uint(1))))), uint(_GLF_IDENTITY(1, min(1, 1))))), 4, _GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY((64), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY((64), ((_GLF_IDENTITY(64, 1 * (64)))) >> 0)), ((_GLF_IDENTITY((64), ((_GLF_IDENTITY(64, 1 * (64)))) >> 0))) | ((_GLF_IDENTITY((64), ((_GLF_IDENTITY(64, 1 * (64)))) >> 0)))))), min(_GLF_IDENTITY((64), ~ (~ (_GLF_IDENTITY((64), ((_GLF_IDENTITY(64, 1 * (_GLF_IDENTITY(64, int(ivec2(64, 0))))))) >> 0)))), _GLF_IDENTITY((64), ~ (~ (_GLF_IDENTITY((64), ((_GLF_IDENTITY(_GLF_IDENTITY(64, 1 * (64)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, 1 * (64))), _GLF_IDENTITY((~ (_GLF_IDENTITY(64, 1 * _GLF_IDENTITY((64), ((64)) | ((64)))))) * 1, (_GLF_IDENTITY((~ (_GLF_IDENTITY(64, 1 * _GLF_IDENTITY((64), ((64)) | ((64)))))) * 1, max((~ (_GLF_IDENTITY(64, 1 * _GLF_IDENTITY((64), ((64)) | ((64)))))) * 1, (~ (_GLF_IDENTITY(64, 1 * _GLF_IDENTITY((64), ((64)) | ((64)))))) * 1))) - 0)))))) >> _GLF_IDENTITY(0, 0 | (0)))))))) | _GLF_IDENTITY(0, 0 | (0))), 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) && true)), _GLF_IDENTITY(false, ! (! (false))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, true))))))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) || false)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) || false))), ! (! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / round(length(normalize(vec3(1.0, 1.0, 1.0))))) > injectionSwitch.y) || false)) || false)))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), false))), _GLF_IDENTITY(false, bool(bvec2(false, false)))))))), _GLF_IDENTITY(false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(2.4)), bool(false)))), _GLF_IDENTITY(bool(bvec4(false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true, false, false)), bool(bvec4(bool(bvec4(false || (injectionSwitch.x > injectionSwitch.y), true, false, false)), true, true, true))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))), true)), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(false || (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(false || (injectionSwitch.x > injectionSwitch.y), true, false, false)), bool(bvec4(bool(bvec4(false || (injectionSwitch.x > injectionSwitch.y), true, false, false)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, false, true)))) && true)))), _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(sign(vec2(2093.3033, -616.486))))).x > injectionSwitch.y))), true))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(9.7)), vec2(_GLF_FUZZED(-5944.7026), (injectionSwitch)[1]), bvec2(false, true))).y, (injectionSwitch.y) - _GLF_IDENTITY(0.0, float(vec2(0.0, 1.0)))), (injectionSwitch.y) + 0.0))), true))), _GLF_IDENTITY((! (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false || (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(false || (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(42.82) : injectionSwitch.x)) > injectionSwitch.y), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), false, false)), bool(bvec4(bool(bvec4(false || (injectionSwitch.x > injectionSwitch.y), true, false, false)), true, true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true))))))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))), true)))), bool(bvec4(_GLF_IDENTITY((! (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false || (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(false || (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(42.82) : injectionSwitch.x)) > injectionSwitch.y), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), false, false)), bool(bvec4(bool(bvec4(false || (injectionSwitch.x > injectionSwitch.y), true, false, false)), true, true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true))))))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))), true)))), true && ((! (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false || (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(false || (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(42.82) : injectionSwitch.x)) > injectionSwitch.y), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), false, false)), bool(bvec4(bool(bvec4(false || (injectionSwitch.x > injectionSwitch.y), true, false, false)), true, true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true))))))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))), true)))))), _GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) || false))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-86.39) : injectionSwitch.x)) > injectionSwitch.y), ! (! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))) || false))))), bool(bool(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))) || false)))))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) * cos(0.0)), 0.0, 0.0, 0.0, 0.0, 0.0))).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) * cos(0.0)), 0.0, 0.0, 0.0, 0.0, 0.0))).x > injectionSwitch.y)))), true && ((_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 0.0))).x > injectionSwitch.y)))), ! (! (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), bool(bvec2(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), false))), (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)))))), (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)))))), false || ((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false))))))))) && true), ! (! (! (false)))))) || false))))), bool(bool(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))) || false)), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))) || false)))))))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) * cos(0.0)), 0.0, 0.0, 0.0, 0.0, 0.0))).x > injectionSwitch.y), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) * cos(0.0)), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED((true ? -471.780 : 3484.1653)) : 0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(3.9) : 0.0)), 0.0))).x > injectionSwitch.y))), (_GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) * cos(0.0)), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED((true ? -471.780 : 3484.1653)) : 0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(3.9) : 0.0)), 0.0))).x > injectionSwitch.y))), ! (_GLF_IDENTITY(! ((! ((_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) * cos(0.0)), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED((true ? -471.780 : 3484.1653)) : 0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(3.9) : 0.0)), 0.0))).x > injectionSwitch.y)))), bool(bvec2(! ((! ((_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) * cos(0.0)), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED((true ? -471.780 : 3484.1653)) : 0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(3.9) : 0.0)), 0.0))).x > injectionSwitch.y)))), false)))))) || false)), _GLF_IDENTITY(true && ((_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 0.0))).x > injectionSwitch.y)), (true && ((_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 0.0))).x > injectionSwitch.y))) && true))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY((subgroup_local_id % 2) == _GLF_IDENTITY(0, ~ (~ (0))), true && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, min(2, 2)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, 0u | (subgroup_local_id % 2)), (_GLF_IDENTITY(subgroup_local_id % 2, 0u | (subgroup_local_id % 2))) ^ 0u), _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_local_id % 2, 0u | (subgroup_local_id % 2)), _GLF_IDENTITY(subgroup_local_id % 2, 0u | (subgroup_local_id % 2)), _GLF_IDENTITY(subgroup_local_id % 2, 0u | (subgroup_local_id % 2))), max(clamp(_GLF_IDENTITY(subgroup_local_id % 2, 0u | (subgroup_local_id % 2)), _GLF_IDENTITY(subgroup_local_id % 2, 0u | (subgroup_local_id % 2)), _GLF_IDENTITY(subgroup_local_id % 2, 0u | (subgroup_local_id % 2))), clamp(_GLF_IDENTITY(subgroup_local_id % 2, 0u | (subgroup_local_id % 2)), _GLF_IDENTITY(subgroup_local_id % 2, 0u | (subgroup_local_id % 2)), _GLF_IDENTITY(subgroup_local_id % 2, 0u | (subgroup_local_id % 2))))))) / 1u)), _GLF_IDENTITY((0u | 0u), ((0u | 0u)) | ((0u | 0u))) | ((_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(subgroup_local_id % 2, 0u | (subgroup_local_id % 2))) / 1u)))) == _GLF_IDENTITY(0, (0) ^ (0 << _GLF_IDENTITY(int(4), int(4)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, _GLF_IDENTITY(0u, uint(uint(0u))) | (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), (true ? min(subgroup_local_id, subgroup_local_id) : _GLF_FUZZED(next_virtual_gid)))) % 2)), clamp(_GLF_IDENTITY(subgroup_local_id % 2, 0u | (subgroup_local_id % 2)), _GLF_IDENTITY(subgroup_local_id % 2, 0u | (subgroup_local_id % 2)), _GLF_IDENTITY(subgroup_local_id % 2, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) / 1u) | (subgroup_local_id % 2))))) / 1u)), _GLF_IDENTITY(_GLF_IDENTITY((0u | 0u), ((0u | 0u)) | ((0u | 0u))) | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(subgroup_local_id % 2, 0u | (subgroup_local_id % 2))) / 1u)), max((_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(subgroup_local_id % 2, 0u | (subgroup_local_id % 2))) / 1u)), (_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(subgroup_local_id % 2, 0u | (subgroup_local_id % 2))) / 1u))))), (_GLF_IDENTITY((0u | 0u), ((0u | 0u)) | ((0u | 0u))) | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(subgroup_local_id % 2, 0u | (subgroup_local_id % 2))) / 1u)), max((_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(subgroup_local_id % 2, 0u | (subgroup_local_id % 2))) / 1u)), (_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (2) - 0), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % 2, 0u | (subgroup_local_id % 2))), min((_GLF_IDENTITY(subgroup_local_id % 2, 0u | (subgroup_local_id % 2))), (_GLF_IDENTITY(subgroup_local_id % 2, 0u | (subgroup_local_id % 2))))) / 1u)))))) + uint(_GLF_ZERO(0.0, injectionSwitch.x)))) == 0)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true), true)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true), true)))), true, true))))))))
    barrier();
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))), ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(79.54), _GLF_FUZZED(-6.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x, injectionSwitch.x)) > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).x, min(_GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x, injectionSwitch.x)) > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(vec2(1.0, 1.0), mat2(1.0) * (vec2(1.0, 1.0)))))).y))))), false)))))), ((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(79.54), _GLF_FUZZED(-6.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x, injectionSwitch.x)) > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).x, min(_GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x, injectionSwitch.x)) > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(vec2(1.0, 1.0), mat2(1.0) * (vec2(1.0, 1.0)))))).y))))), false))))))) || false), _GLF_IDENTITY(! _GLF_IDENTITY((! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, 0.0, 1.0))) > injectionSwitch.y))))), false || ((! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-8.1))) > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-65.52)), vec2(_GLF_FUZZED(-8567.9183), (injectionSwitch)[1]), bvec2(false, true))).y))))))), true && (! _GLF_IDENTITY((! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, 0.0, 1.0))) > injectionSwitch.y))))), false || ((! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-8.1))) > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-65.52)), vec2(_GLF_FUZZED(-8567.9183), (injectionSwitch)[1]), bvec2(false, true))).y))))))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false)), bool(bvec3(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false)), false, false))))) || false))), false, false)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false)) || false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (false))))), (! (false)) && true)))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(2), (_GLF_IDENTITY(uint(2), (_GLF_IDENTITY(uint(2), _GLF_IDENTITY((uint(2)), (_GLF_IDENTITY((uint(2)), 0u ^ ((uint(2))))) << 0u) / 1u)) >> 0u)) >> 0u), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-45.70) : _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 1.0, 1.0, 1.0, length(vec2(0.0, 0.0)), 0.0, abs(0.0), 0.0))))))) ? _GLF_IDENTITY(uint(2), (uint(2)) >> 0u) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), uint(uvec2(_GLF_FUZZED(subgroup_size), 1u))))), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), false || (bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), false || ((false)))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), true && (bool(_GLF_IDENTITY(false, false || (false))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), true && (bool(_GLF_IDENTITY(false, false || (false))))))))))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) && true))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))) : _GLF_FUZZED(vec2(-7351.6516, 541.851)))) : _GLF_FUZZED(vec2(4.4, -8.3)))).y))))
          barrier();
         return;
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false, true))))))), false, true, true)))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))) || (false))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, true && (false)))))) || false)), _GLF_IDENTITY(false || (_GLF_DEAD(false)), (false || _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec4((_GLF_DEAD(false)), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (_GLF_IDENTITY(bool(bvec4((_GLF_DEAD(false)), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bool(bool(bvec4((_GLF_DEAD(false)), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))) || false)), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, true && (false)))))) || _GLF_IDENTITY(false, (false) || false))), _GLF_IDENTITY(false || (_GLF_DEAD(false)), (false || _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec4((_GLF_DEAD(false)), true, true, _GLF_TRUE(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), true && (_GLF_IDENTITY(bool(bvec4((_GLF_DEAD(false)), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bool(bool(bvec4((_GLF_DEAD(false)), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))) || false))) || false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false)))), _GLF_IDENTITY(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false))))) && true, true && ((bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(false, true && (false))), false))))) && true)), ! (! (_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false))))) && true, _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (true) && true), true, true))) && ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(false, true && (false))), false)))), true && (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(false, true && (false))), false))))))) && true)))))))) && true)))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            return;
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         return;
        }
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY((! (_GLF_DEAD(false))) || false, ((! (_GLF_DEAD(false))) || false) && true))), bool(bvec3(! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_DEAD(false)))), (! (_GLF_DEAD(false))) || _GLF_IDENTITY(false, false || (false)))), false, false))))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        return;
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), (! (! (_GLF_DEAD(false)))) || false)), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))))), (bool(bool(_GLF_DEAD(false)))) || false)) && true))))), _GLF_IDENTITY(true, ! (! (true))))))) && true), false, _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bool(! (_GLF_IDENTITY(false, (false) && true))))))), true)))))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true))))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))), true, false), bvec3(bvec4(bvec3(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))), true, false), true)))))), false || (bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))), true, false), bvec3(bvec4(bvec3(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))), true, false), true))))))))))
    return;
  }
 else
  {
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, ~ _GLF_IDENTITY((~ (2)), ((~ (2))) / 1))), 4, _GLF_IDENTITY(64, (64) | 0), _GLF_IDENTITY(4, (4) | (4)));
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
