#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 uvec4 GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_baseGLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uvec4 GLF_merged2_0_3_70_3_1_11GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_sizesubgroup_id;
 uvec2 GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base;
 uvec4 GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_sizesubgroup_size;
 uvec4 GLF_merged3_0_2_55_2_1_17_3_1_11GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_local_idvirtual_gid;
 if(_GLF_DEAD(false))
  return;
 uvec4 GLF_merged2_0_3_70_3_1_11GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_sizevirtual_gid;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uvec4 GLF_merged2_0_2_48_2_2_50GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base;
 uvec2 GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id;
 GLF_merged2_0_2_48_2_2_50GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.xy = GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))), float(_GLF_FUZZED(-8.0)), bool(false))) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uvec4 GLF_merged2_0_3_70_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_sizenext_virtual_gid;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))), true && (bool((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))), true && (bool((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))), true && (bool((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (! ((injectionSwitch.x > injectionSwitch.y)))), false || (! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))), true && (_GLF_IDENTITY(bool((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))), (bool((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))) || false)), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(bool((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))), (bool((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))) || false)), true, true, true)), bool(bvec4(bool(bvec4(! (_GLF_IDENTITY(bool((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))), (bool((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))) || false)), true, true, true)), true, false, true)))))))))))))))) || false)))))), bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))), true && (bool((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))), true && (bool((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))), true && (bool((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (! ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY((! (! ((injectionSwitch.x > injectionSwitch.y)))), ((! (! ((injectionSwitch.x > injectionSwitch.y))))) || false), false, true, true))))))))))) || false)) || false)))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uvec4 GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_sizenum_workgroup;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, ! (! (false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, ! (! (false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), ! (! (bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, ! (! (false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, ! (! (false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, ! (! (false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, ! (! (false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), ! (! (bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, ! (! (false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, ! (! (false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), true, false, false))) && true, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, ! (! (false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, ! (! (false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), ! (! (bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, ! (! (false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, ! (! (false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))) && true, bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, ! (! (false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, ! (! (false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, ! (! (false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, ! (! (false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))), bool(_GLF_IDENTITY(bvec2(! (bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, ! (! (false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, ! (! (false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))), false), bvec2(bvec2(bvec2(! (bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, ! (! (false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, ! (! (false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))), false))))))))) && true, false, true)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false)) && true) && true))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false))))), (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     return;
    }
   barrier();
  }
 uvec4 GLF_merged3_0_2_55_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_idsubgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, _GLF_IDENTITY(true, false || (true)), false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) && true)))))))))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
  }
 uvec2 GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base;
 GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_baseGLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id.xy = GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base;
 GLF_merged2_0_2_48_2_2_50GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.zw = GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_baseGLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id.xy;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uvec2 GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id;
 _GLF_IDENTITY(GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_baseGLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id.zw = GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id, uvec2(0u, 0u) + (GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_baseGLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id.zw = GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) || false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
  }
 GLF_merged3_0_2_55_2_1_17_3_1_11GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_local_idvirtual_gid.xy = GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_baseGLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id.zw;
 GLF_merged3_0_2_55_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_idsubgroup_local_id.xy = _GLF_IDENTITY(GLF_merged3_0_2_55_2_1_17_3_1_11GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_local_idvirtual_gid, (GLF_merged3_0_2_55_2_1_17_3_1_11GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_local_idvirtual_gid) | (GLF_merged3_0_2_55_2_1_17_3_1_11GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_local_idvirtual_gid)).xy;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 uvec3 GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_size;
 GLF_merged2_0_3_70_3_1_11GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_sizesubgroup_id.xyz = GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_sizesubgroup_size.xyz = GLF_merged2_0_3_70_3_1_11GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_sizesubgroup_id.xyz;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), ! (! (bool(bvec3(_GLF_DEAD(false), true, true)))))))
  return;
 GLF_merged2_0_3_70_3_1_11GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_sizevirtual_gid.xyz = _GLF_IDENTITY(GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_sizesubgroup_size, (false ? _GLF_FUZZED(GLF_merged3_0_2_55_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_idsubgroup_local_id) : _GLF_IDENTITY(GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_sizesubgroup_size, min(GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_sizesubgroup_size, GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_sizesubgroup_size)))).xyz;
 if(_GLF_DEAD(false))
  return;
 GLF_merged2_0_3_70_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_sizenext_virtual_gid.xyz = _GLF_IDENTITY(GLF_merged2_0_3_70_3_1_11GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_sizevirtual_gid.xyz, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_70_3_1_11GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_sizevirtual_gid, ~ (~ (GLF_merged2_0_3_70_3_1_11GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_sizevirtual_gid))).xyz, uvec3(0u, 0u, 0u) ^ (GLF_merged2_0_3_70_3_1_11GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_sizevirtual_gid.xyz))) ^ uvec3(0u, 0u, 0u));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-8.8, (-8.8) / 1.0))), float(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 1.0)))), bool(true))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))) || false)))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 _GLF_IDENTITY(GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_sizenum_workgroup.xyz = _GLF_IDENTITY(GLF_merged2_0_3_70_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_sizenext_virtual_gid.xyz, clamp(GLF_merged2_0_3_70_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_sizenext_virtual_gid.xyz, GLF_merged2_0_3_70_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_sizenext_virtual_gid.xyz, GLF_merged2_0_3_70_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_sizenext_virtual_gid.xyz)), (GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_sizenum_workgroup.xyz = _GLF_IDENTITY(GLF_merged2_0_3_70_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_sizenext_virtual_gid, uvec4(GLF_merged2_0_3_70_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_sizenext_virtual_gid[0], GLF_merged2_0_3_70_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_sizenext_virtual_gid[1], GLF_merged2_0_3_70_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_sizenext_virtual_gid[2], GLF_merged2_0_3_70_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_sizenext_virtual_gid[3])).xyz) ^ uvec3(0u, 0u, 0u));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_3_70_3_1_11GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_sizesubgroup_id.w = subgroup_id;
 GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x = GLF_merged2_0_3_70_3_1_11GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_sizesubgroup_id.w;
 GLF_merged3_0_2_55_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_idsubgroup_local_id.z = GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_sizesubgroup_size.w = subgroup_size;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_sizenum_workgroup.xyz.x = _GLF_IDENTITY(GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_sizesubgroup_size.w, _GLF_IDENTITY(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(8u), uint(8u))), ((0u >> _GLF_IDENTITY(uint(8u), uint(8u)))) | ((0u >> _GLF_IDENTITY(uint(8u), uint(8u))))), (_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(8u), uint(8u))), ((0u >> _GLF_IDENTITY(uint(8u), uint(8u)))) | ((0u >> _GLF_IDENTITY(uint(8u), uint(8u)))))) - 0u) | (_GLF_IDENTITY(GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_sizesubgroup_size.w, (GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_sizesubgroup_size.w) | (GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_sizesubgroup_size.w))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9.6) : injectionSwitch.y)))) && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, true && (false))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(4.1) : injectionSwitch.y)))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), bool(bvec2((false), true)))))))) && true)))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.5)), float(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 1.0, sqrt(0.0), 0.0, exp(0.0), 0.0, 0.0)))), _GLF_IDENTITY(bool(true), false || (bool(true))))) > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))))))
  return;
 GLF_merged3_0_2_55_2_1_17_3_1_11GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_local_idvirtual_gid.z = subgroup_local_id;
 GLF_merged3_0_2_55_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_idsubgroup_local_id.w = GLF_merged3_0_2_55_2_1_17_3_1_11GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_local_idvirtual_gid.z;
 GLF_merged3_0_2_55_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_idsubgroup_local_id.xy.y = _GLF_IDENTITY(GLF_merged3_0_2_55_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_idsubgroup_local_id.w, (_GLF_IDENTITY(GLF_merged3_0_2_55_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_idsubgroup_local_id.w, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((GLF_merged3_0_2_55_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_idsubgroup_local_id.w), 0u ^ ((GLF_merged3_0_2_55_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_idsubgroup_local_id.w))), max(~ (GLF_merged3_0_2_55_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_idsubgroup_local_id.w), ~ (GLF_merged3_0_2_55_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_idsubgroup_local_id.w)))))) | (GLF_merged3_0_2_55_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_idsubgroup_local_id.w));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            return;
          }
         return;
        }
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     return;
    }
  }
 GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_sizenum_workgroup.w = num_workgroup;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 GLF_merged3_0_2_55_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_idsubgroup_local_id.xy.x = GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_sizenum_workgroup.w;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     return;
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_sizenum_workgroup.xyz.z = workgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged2_0_2_48_2_2_50GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.xy.y = workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(21.38)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false)))))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), true && (false))), false || (_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(bool((false)))))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))) && true))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch.y, float(mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(5.1) : _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), max(0.0, 0.0)), _GLF_IDENTITY(sqrt(0.0), 1.0 * (sqrt(0.0))), 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-7.5))), 0.0, 0.0))), 0.0, 1.0, cos(tan(0.0)), 0.0, length(vec2(0.0, 0.0))), mat3(1.0) * (mat2x3(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(injectionSwitch.y, 1.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) * 1.0), _GLF_IDENTITY(1.0 * (_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(4.8)), float(sqrt(0.0)), bool(true)))), clamp(1.0 * (_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(4.8)), float(sqrt(0.0)), bool(true)))), _GLF_IDENTITY(1.0 * (_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(4.8)), float(sqrt(0.0)), bool(true)))), float(mat3x2(1.0 * (_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(4.8)), float(sqrt(0.0)), bool(true)))), tan(0.0), 0.0, 0.0, 0.0, 1.0))), 1.0 * (_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(4.8)), float(sqrt(0.0)), bool(true))))))), 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + _GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(float(mat4x3(float(mat4x3(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec2(0.0, 0.0)), (float(vec2(0.0, 0.0))) - 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0)), max(float(mat3(0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(2.3) : _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(100.572)), bool(false))))), 0.0, 0.0, 1.0, 1.0)), float(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))))), sqrt(_GLF_IDENTITY(0.0, min(0.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-64.43)), float(1.0), bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false))))), max(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-64.43)), float(1.0), bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false))))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-64.43)), float(1.0), bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false))))))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8812.4731)), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(true))), 1.0, 1.0, abs(0.0), cos(0.0), 0.0, 0.0))), 1.0, abs(0.0), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), mix(float(_GLF_FUZZED(-3.8)), float(_GLF_IDENTITY(1.0, (1.0) + 0.0)), bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (true))), false || (! (_GLF_IDENTITY(true, true && (true)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), mix(float(_GLF_FUZZED(-3.8)), float(_GLF_IDENTITY(1.0, (1.0) + 0.0)), bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (true))), false || (! (_GLF_IDENTITY(true, true && (true))))))))))) - 0.0), 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0)), max(_GLF_IDENTITY(float(mat4x3(float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x2(injectionSwitch.y, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, sqrt(1.0), 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, sqrt(1.0), 1.0))), 0.0)), clamp(float(mat4x2(injectionSwitch.y, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, sqrt(1.0), 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, sqrt(1.0), 1.0))), 0.0)), float(mat4x2(injectionSwitch.y, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, sqrt(1.0), 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, sqrt(1.0), 1.0))), 0.0)), float(mat4x2(injectionSwitch.y, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, sqrt(1.0), 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, sqrt(1.0), 1.0))), 0.0))))), 1.0, 1.0, 0.0, _GLF_IDENTITY(sqrt(0.0), max(sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), float(mat3(sqrt(0.0), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-592.550))), 0.0, 1.0, log(1.0), 0.0, 1.0, cos(0.0), 0.0))))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, float(mat4x3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0, 1.0)), (float(vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0, 1.0))) / 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0, 1.0, abs(0.0), 1.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0))), 1.0, abs(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0)), 1.0, 0.0)), (_GLF_IDENTITY(float(mat4x3(float(mat4x3(injectionSwitch.y, 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, abs(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0)), (true ? float(mat4x3(float(mat4x3(injectionSwitch.y, 1.0, 1.0, 0.0, sqrt(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(3.4)), bool(false)))), 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6.0) : 0.0)), 0.0, 0.0)), 1.0, 1.0, abs(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0)) : _GLF_FUZZED(2304.5101)))) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), _GLF_IDENTITY(float(mat4x3(float(mat4x3(injectionSwitch.y, 1.0, _GLF_IDENTITY(1.0, float(vec2(1.0, sin(0.0)))), 0.0, sqrt(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, abs(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0)), min(float(mat4x3(float(mat4x3(injectionSwitch.y, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0, sqrt(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, abs(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(float(mat4x3(float(mat4x3(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((+ -76.56))), float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), float(_GLF_FUZZED(0.5)), bool(false))), sqrt(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, abs(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0)), clamp(float(mat4x3(float(mat4x3(injectionSwitch.y, 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, abs(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0)), float(mat4x3(float(mat4x3(injectionSwitch.y, 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, abs(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0)), float(mat4x3(float(mat4x3(injectionSwitch.y, 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, abs(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0)))))))))), 0.0, 1.0, cos(_GLF_IDENTITY(tan(0.0), max(_GLF_IDENTITY(tan(0.0), float(vec2(tan(0.0), 0.0))), tan(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), (true ? _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)) : _GLF_FUZZED(-8.7))), _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))) : _GLF_FUZZED(6.7))))) : _GLF_FUZZED(-508.379))))))), 0.0, length(vec2(0.0, 0.0)))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch, injectionSwitch)).y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), (false ? _GLF_FUZZED(0.5) : 1.0)), 1.0)), injectionSwitch, injectionSwitch)).y)))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch, injectionSwitch)).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(0.5) : 1.0)), 1.0)), injectionSwitch, injectionSwitch)).y)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint workgroup_base = GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_sizenum_workgroup.xyz.z * _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_50GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.xy.y, (_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_50GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.xy.y, (true ? GLF_merged2_0_2_48_2_2_50GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.xy.y : _GLF_FUZZED(_GLF_IDENTITY(GLF_merged2_0_3_70_3_1_11GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_sizesubgroup_id, (GLF_merged2_0_3_70_3_1_11GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_sizesubgroup_id) / (uvec4(1u, 1u, 1u, 1u) & uvec4(1u, 1u, 1u, 1u))).w)))) ^ 0u);
 GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y = workgroup_base;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true)))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 GLF_merged2_0_2_48_2_2_50GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.zw.y = GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_50GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.zw, (GLF_merged2_0_2_48_2_2_50GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.zw) * uvec2(1u, 1u)).y + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_55_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_idsubgroup_local_id.z, clamp(GLF_merged3_0_2_55_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_idsubgroup_local_id.z, GLF_merged3_0_2_55_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_idsubgroup_local_id.z, GLF_merged3_0_2_55_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_idsubgroup_local_id.z)), _GLF_IDENTITY((GLF_merged3_0_2_55_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_idsubgroup_local_id.z) | (GLF_merged3_0_2_55_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_idsubgroup_local_id.z), ~ (~ ((GLF_merged3_0_2_55_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_idsubgroup_local_id.z) | (GLF_merged3_0_2_55_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_idsubgroup_local_id.z))))) * GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_sizenum_workgroup.xyz.x, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_55_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_idsubgroup_local_id.z, clamp(GLF_merged3_0_2_55_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_idsubgroup_local_id.z, GLF_merged3_0_2_55_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_idsubgroup_local_id.z, GLF_merged3_0_2_55_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_idsubgroup_local_id.z)), _GLF_IDENTITY((GLF_merged3_0_2_55_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_idsubgroup_local_id.z) | (GLF_merged3_0_2_55_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_idsubgroup_local_id.z), ~ (~ ((_GLF_IDENTITY(GLF_merged3_0_2_55_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_idsubgroup_local_id.z, (_GLF_IDENTITY(GLF_merged3_0_2_55_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_idsubgroup_local_id.z, (true ? GLF_merged3_0_2_55_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_idsubgroup_local_id.z : _GLF_IDENTITY(_GLF_FUZZED(125253u), clamp(_GLF_FUZZED(125253u), _GLF_FUZZED(125253u), _GLF_IDENTITY(_GLF_FUZZED(125253u), (_GLF_FUZZED(125253u)) << 0u)))))) >> 0u)) | (GLF_merged3_0_2_55_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_idsubgroup_local_id.z))))) * GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_sizenum_workgroup.xyz.x)) + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_55_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_idsubgroup_local_id, max(_GLF_IDENTITY(GLF_merged3_0_2_55_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_idsubgroup_local_id, (GLF_merged3_0_2_55_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_idsubgroup_local_id) << (uvec4(0u, 0u, 0u, 0u) & _GLF_IDENTITY(uvec4(131786u, 44636u, 118882u, 141451u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(131786u, 44636u, 118882u, 141451u))))), GLF_merged3_0_2_55_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_idsubgroup_local_id)), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_55_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_idsubgroup_local_id, max(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_55_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_idsubgroup_local_id, clamp(GLF_merged3_0_2_55_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_idsubgroup_local_id, GLF_merged3_0_2_55_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_idsubgroup_local_id, GLF_merged3_0_2_55_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_idsubgroup_local_id)), (GLF_merged3_0_2_55_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_idsubgroup_local_id) << (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u) | (uvec4(0u, 0u, 0u, 0u))) & uvec4(131786u, 44636u, 118882u, 141451u), (uvec4(0u, 0u, 0u, 0u) & uvec4(131786u, 44636u, 118882u, 141451u)) | (uvec4(0u, 0u, 0u, 0u) & uvec4(131786u, 44636u, 118882u, 141451u))))), GLF_merged3_0_2_55_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_idsubgroup_local_id)), uvec4(0u, 0u, 0u, 0u) | _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_2_55_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_idsubgroup_local_id, max(_GLF_IDENTITY(GLF_merged3_0_2_55_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_idsubgroup_local_id, (GLF_merged3_0_2_55_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_idsubgroup_local_id) << (uvec4(0u, 0u, 0u, 0u) & uvec4(131786u, 44636u, 118882u, 141451u))), GLF_merged3_0_2_55_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_idsubgroup_local_id))), (uvec4(0u, 0u, 0u, 0u) << _GLF_IDENTITY(uvec4(6u), uvec4(6u))) ^ ((_GLF_IDENTITY(GLF_merged3_0_2_55_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_idsubgroup_local_id, max(_GLF_IDENTITY(GLF_merged3_0_2_55_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_idsubgroup_local_id, (GLF_merged3_0_2_55_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_idsubgroup_local_id) << (uvec4(0u, 0u, 0u, 0u) & uvec4(131786u, 44636u, 118882u, 141451u))), GLF_merged3_0_2_55_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_idsubgroup_local_id))))))) | (_GLF_IDENTITY(GLF_merged3_0_2_55_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_idsubgroup_local_id, max(_GLF_IDENTITY(GLF_merged3_0_2_55_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_idsubgroup_local_id, (GLF_merged3_0_2_55_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_idsubgroup_local_id) << (uvec4(0u, 0u, 0u, 0u) & uvec4(131786u, 44636u, 118882u, 141451u))), GLF_merged3_0_2_55_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_idsubgroup_local_id)))).xy.y;
 GLF_merged3_0_2_55_2_1_17_3_1_11GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_local_idvirtual_gid.w = virtual_gid;
 GLF_merged2_0_3_70_3_1_11GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_sizevirtual_gid.w = GLF_merged3_0_2_55_2_1_17_3_1_11GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_local_idvirtual_gid.w;
 GLF_merged2_0_2_48_2_2_50GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.xy.x = GLF_merged2_0_3_70_3_1_11GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_sizevirtual_gid.w;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && ((false))))))
  barrier();
 GLF_merged2_0_2_48_2_2_50GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.zw.x = _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_50GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.xy.x, (_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_50GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.xy.x, clamp(GLF_merged2_0_2_48_2_2_50GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.xy.x, GLF_merged2_0_2_48_2_2_50GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.xy.x, _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_50GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.xy.x, max(_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_50GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.xy.x, clamp(GLF_merged2_0_2_48_2_2_50GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.xy.x, GLF_merged2_0_2_48_2_2_50GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.xy.x, _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_50GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.xy.x, ~ (~ (GLF_merged2_0_2_48_2_2_50GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.xy.x))))), GLF_merged2_0_2_48_2_2_50GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.xy.x))))) | (GLF_merged2_0_2_48_2_2_50GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.xy.x));
 GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_sizenum_workgroup.xyz.y = GLF_merged2_0_2_48_2_2_50GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.zw.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_50GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.zw.y + GLF_merged3_0_2_55_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_idsubgroup_local_id.z * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_sizenum_workgroup.xyz, uvec3(0u, 0u, 0u) | (GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_sizenum_workgroup.xyz)), (GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_sizenum_workgroup.xyz) | (GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_sizenum_workgroup.xyz)).x + ((GLF_merged3_0_2_55_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_idsubgroup_local_id.xy.y + 1) % _GLF_IDENTITY(GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_sizenum_workgroup.xyz, _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_sizenum_workgroup, (GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_sizenum_workgroup) | (uvec4(0u, 0u, 0u, 0u) << _GLF_IDENTITY(uvec4(1u), uvec4(1u)))).xyz, (GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_sizenum_workgroup.xyz) / uvec3(1u, 1u, 1u)), GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_sizenum_workgroup.xyz), (max(_GLF_IDENTITY(GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_sizenum_workgroup.xyz, (GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_sizenum_workgroup.xyz) / uvec3(1u, 1u, 1u)), GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_sizenum_workgroup.xyz)) - uvec3(0u, 0u, 0u))).x), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_50GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.zw, (GLF_merged2_0_2_48_2_2_50GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.zw) >> uvec2(0u, 0u)), uvec2(GLF_merged2_0_2_48_2_2_50GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.zw[0], _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_50GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.zw, uvec2(0u, 0u) ^ (GLF_merged2_0_2_48_2_2_50GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.zw))[1])).y + _GLF_IDENTITY(GLF_merged3_0_2_55_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_idsubgroup_local_id.z, _GLF_IDENTITY((GLF_merged3_0_2_55_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_idsubgroup_local_id.z) >> 0u, clamp((GLF_merged3_0_2_55_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_idsubgroup_local_id.z) >> 0u, _GLF_IDENTITY((GLF_merged3_0_2_55_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_idsubgroup_local_id.z) >> 0u, ((GLF_merged3_0_2_55_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_idsubgroup_local_id.z) >> 0u) | ((GLF_merged3_0_2_55_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_idsubgroup_local_id.z) >> 0u)), (GLF_merged3_0_2_55_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_idsubgroup_local_id.z) >> 0u))) * GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_sizenum_workgroup.xyz.x + ((GLF_merged3_0_2_55_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_idsubgroup_local_id.xy.y + 1) % _GLF_IDENTITY(GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_sizenum_workgroup, uvec4(GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_sizenum_workgroup[0], GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_sizenum_workgroup[1], GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_sizenum_workgroup[2], GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_sizenum_workgroup[3])).xyz.x), max(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_50GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.zw, (GLF_merged2_0_2_48_2_2_50GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.zw) >> uvec2(0u, 0u)), uvec2(GLF_merged2_0_2_48_2_2_50GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.zw[0], _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_50GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.zw, uvec2(0u, 0u) ^ _GLF_IDENTITY((GLF_merged2_0_2_48_2_2_50GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.zw), (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(3u), uvec2(3u))) | (_GLF_IDENTITY((GLF_merged2_0_2_48_2_2_50GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.zw), ((GLF_merged2_0_2_48_2_2_50GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.zw)) >> uvec2(0u, 0u)))))[1])).y + _GLF_IDENTITY(GLF_merged3_0_2_55_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_idsubgroup_local_id.z, (GLF_merged3_0_2_55_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_idsubgroup_local_id.z) >> 0u) * GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_sizenum_workgroup.xyz.x + ((GLF_merged3_0_2_55_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_idsubgroup_local_id.xy.y + 1) % GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_sizenum_workgroup.xyz.x), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_50GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.zw, (GLF_merged2_0_2_48_2_2_50GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.zw) >> uvec2(0u, 0u)), uvec2(GLF_merged2_0_2_48_2_2_50GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.zw[0], _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_50GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.zw, uvec2(0u, 0u) ^ (GLF_merged2_0_2_48_2_2_50GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.zw))[1])).y + _GLF_IDENTITY(GLF_merged3_0_2_55_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_idsubgroup_local_id.z, (GLF_merged3_0_2_55_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_idsubgroup_local_id.z) >> 0u) * GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_sizenum_workgroup.xyz.x + ((GLF_merged3_0_2_55_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_idsubgroup_local_id.xy.y + 1) % GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_sizenum_workgroup.xyz.x)))) - 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 GLF_merged2_0_3_70_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_sizenext_virtual_gid.w = _GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, 0u | (next_virtual_gid))) | (next_virtual_gid));
 atomicStore(buf[GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_sizenum_workgroup.xyz.y], uint(1), 4, 64, 4);
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)).x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), false)))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) || false) || (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, true)))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))))))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(GLF_merged3_0_2_55_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_idsubgroup_local_id.xy.y, (_GLF_IDENTITY(GLF_merged3_0_2_55_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_idsubgroup_local_id.xy.y, min(GLF_merged3_0_2_55_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_idsubgroup_local_id.xy.y, GLF_merged3_0_2_55_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_idsubgroup_local_id.xy.y))) / 1u) + 1 < GLF_merged2_0_3_70_3_1_13GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_sizenum_workgroup.xyz.x)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), true, true, false))))))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   atomicStore(buf[GLF_merged2_0_3_70_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_sizenext_virtual_gid.w], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   subgroupAll(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))));
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, false)), bool(_GLF_IDENTITY(bvec3(bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, false)), true, false), bvec3(bvec4(bvec3(bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, false)), true, false), false))))))))
    barrier();
   atomicStore(buf[GLF_merged2_0_3_70_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_sizenext_virtual_gid.w], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   subgroupAll(true);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false)), bool(bool(bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), true && ((false))))) || false))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false))))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, round(length(_GLF_IDENTITY(normalize(1.0), _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(normalize(1.0), float(mat4(normalize(1.0), _GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0))), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, determinant(_GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), mat3(1.0) * (_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), (true ? mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0) : _GLF_FUZZED((mat2x3(8.8, -25.21, 6.9, -2999.2175, 92.13, -1431.8559) * mat3x2(-52.80, -91.77, 25.50, -22.27, -3741.9202, -8181.8985))))))), (_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), mat3(1.0) * (_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), _GLF_IDENTITY((true ? mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0) : _GLF_FUZZED((mat2x3(8.8, -25.21, 6.9, -2999.2175, 92.13, -1431.8559) * mat3x2(-52.80, _GLF_IDENTITY(-91.77, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(-91.77, (_GLF_IDENTITY(-91.77, mix(float(-91.77), float(_GLF_FUZZED(67.91)), bool(false)))) - 0.0), 1.0), (vec2(_GLF_IDENTITY(-91.77, (_GLF_IDENTITY(-91.77, mix(float(-91.77), float(_GLF_FUZZED(67.91)), bool(false)))) - 0.0), 1.0)) / vec2(1.0, 1.0)))), 25.50, -22.27, -3741.9202, -8181.8985)))), mat3(_GLF_IDENTITY(mat4((true ? mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0) : _GLF_FUZZED((mat2x3(8.8, -25.21, 6.9, -2999.2175, 92.13, -1431.8559) * mat3x2(-52.80, _GLF_IDENTITY(-91.77, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(-91.77, (_GLF_IDENTITY(-91.77, mix(float(-91.77), float(_GLF_FUZZED(67.91)), bool(false)))) - 0.0), 1.0), (vec2(_GLF_IDENTITY(-91.77, (_GLF_IDENTITY(-91.77, mix(float(-91.77), float(_GLF_FUZZED(67.91)), bool(false)))) - 0.0), 1.0)) / vec2(1.0, 1.0)))), 25.50, -22.27, -3741.9202, -8181.8985))))), (mat4((true ? mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0) : _GLF_FUZZED((mat2x3(8.8, -25.21, 6.9, -2999.2175, 92.13, -1431.8559) * mat3x2(-52.80, _GLF_IDENTITY(-91.77, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(-91.77, (_GLF_IDENTITY(-91.77, mix(float(-91.77), float(_GLF_FUZZED(67.91)), bool(false)))) - 0.0), 1.0), (vec2(_GLF_IDENTITY(-91.77, (_GLF_IDENTITY(-91.77, mix(float(-91.77), float(_GLF_FUZZED(67.91)), bool(false)))) - 0.0), 1.0)) / vec2(1.0, 1.0)))), 25.50, -22.27, -3741.9202, -8181.8985)))))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))), sin(0.0), round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0)), float(vec2(_GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(normalize(1.0), float(mat4(normalize(1.0), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-4.6))), 1.0, 0.0))), sin(0.0), round(length(normalize(1.0))), 1.0, _GLF_IDENTITY(0.0, float(vec4(0.0, log(round(length(normalize(vec3(1.0, 1.0, 1.0))))), abs(1.0), determinant(mat2(_GLF_ZERO(0.0, injectionSwitch.x), determinant(mat4(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0))))), 0.0, 1.0, 0.0)), _GLF_IDENTITY(float(mat2(float(mat2x4(_GLF_IDENTITY(normalize(1.0), float(mat4(normalize(1.0), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-4.6))), 1.0, 0.0))), sin(0.0), round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(1.3)), bool(false))))), min(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0))))))), float(_GLF_IDENTITY(mat4x2(float(mat2(float(mat2x4(_GLF_IDENTITY(normalize(1.0), float(mat4(normalize(1.0), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-4.6))), 1.0, 0.0))), sin(0.0), round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(1.3)), bool(false))))), min(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0))))))), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, exp(0.0)), mat2(1.0) * (mat4x2(float(mat2(float(mat2x4(_GLF_IDENTITY(normalize(1.0), float(mat4(normalize(1.0), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-4.6))), 1.0, 0.0))), sin(0.0), round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(1.3)), bool(false))))), min(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0))))))), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, exp(0.0))))))), length(0.0))))))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, float(vec4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0))))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), round(length(normalize(vec3(1.0, 1.0, 1.0)))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
