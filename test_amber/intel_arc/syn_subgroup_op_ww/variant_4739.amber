#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_0 {
 mat2 _f0;
 uint workgroup_base;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false))))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false))))), false, false), bvec3(bvec3(bvec3((_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false))))), false, false))))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uvec2 GLF_merged2_0_1_13_1_1_11num_workgroupsubgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
  return;
 uvec4 GLF_merged2_0_3_89_3_1_16GLF_merged2_0_2_53_2_1_11GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_idvirtual_gidnext_virtual_gid;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uvec3 GLF_merged2_0_2_53_2_1_11GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_idvirtual_gid;
 GLF_merged2_0_3_89_3_1_16GLF_merged2_0_2_53_2_1_11GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_idvirtual_gidnext_virtual_gid.xyz = GLF_merged2_0_2_53_2_1_11GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_idvirtual_gid;
 uvec4 GLF_merged3_0_2_53_2_1_13_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenum_workgroupsubgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uvec4 GLF_merged3_0_2_53_2_1_11_3_1_12GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_idvirtual_gidworkgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), bool(bool(bool(bool((injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), bool(bool(bool(bool((injectionSwitch.x > injectionSwitch.y))))))))), false, true, false))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))), true && (false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))), true && (false)))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uvec4 GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), false, false)))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), false, true, true)))) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
  }
 uvec2 GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size;
 GLF_merged3_0_2_53_2_1_13_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenum_workgroupsubgroup_id.xy = GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id.xy = GLF_merged3_0_2_53_2_1_13_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenum_workgroupsubgroup_id.xy;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat3x2(injectionSwitch, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(8283.4759))))))))).x) / 1.0, max(_GLF_IDENTITY((injectionSwitch.x), min((injectionSwitch.x), (injectionSwitch.x))) / 1.0, (injectionSwitch.x) / 1.0)))) * 1.0) > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), _GLF_IDENTITY(((false)), ! (! (_GLF_IDENTITY(((false)), ! (! (((false)))))))) || false))) || false)))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-0.7) : injectionSwitch[1])))).x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 uvec2 GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 GLF_merged2_0_3_89_3_1_16GLF_merged2_0_2_53_2_1_11GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_idvirtual_gidnext_virtual_gid.xyz.xy = GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(vec2(4440.7984, -577.466)), vec2(vec2(true ? injectionSwitch : _GLF_FUZZED(vec2(4440.7984, -577.466)))))))) / abs(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, 0.0 + (1.0)), injectionSwitch.y)))).y))), true, true))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 GLF_merged3_0_2_53_2_1_11_3_1_12GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_idvirtual_gidworkgroup_id.xy = GLF_merged2_0_3_89_3_1_16GLF_merged2_0_2_53_2_1_11GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_idvirtual_gidnext_virtual_gid.xyz.xy;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, tan(0.0), 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(2.0) : 1.0)), 1.0)), 0.0, 1.0, log(1.0), 0.0, 1.0, 1.0, 1.0, 0.0)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 GLF_merged2_0_1_13_1_1_11num_workgroupsubgroup_id.y = subgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 GLF_merged3_0_2_53_2_1_13_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenum_workgroupsubgroup_id.w = GLF_merged2_0_1_13_1_1_11num_workgroupsubgroup_id.y;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id.w = _GLF_IDENTITY(GLF_merged3_0_2_53_2_1_13_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenum_workgroupsubgroup_id, (false ? _GLF_FUZZED(GLF_merged2_0_3_89_3_1_16GLF_merged2_0_2_53_2_1_11GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_idvirtual_gidnext_virtual_gid) : _GLF_IDENTITY(GLF_merged3_0_2_53_2_1_13_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenum_workgroupsubgroup_id, ~ (~ (GLF_merged3_0_2_53_2_1_13_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenum_workgroupsubgroup_id))))).w;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 GLF_merged3_0_2_53_2_1_11_3_1_12GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_idvirtual_gidworkgroup_id.xy.x = _GLF_IDENTITY(GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id, (_GLF_IDENTITY(GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id, uvec4(0u, 0u, 0u, 0u) ^ (GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id))) ^ uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u ^ (0u)))))).w;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), false, true)))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y, injectionSwitch.y))))), true, false)))) || false)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x = subgroup_size;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false)))))))
  return;
 GLF_merged3_0_2_53_2_1_11_3_1_12GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_idvirtual_gidworkgroup_id.xy.y = subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 GLF_merged2_0_1_13_1_1_11num_workgroupsubgroup_id.x = num_workgroup;
 if(_GLF_DEAD(false))
  return;
 GLF_merged3_0_2_53_2_1_13_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenum_workgroupsubgroup_id.z = GLF_merged2_0_1_13_1_1_11num_workgroupsubgroup_id.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) && true)), (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
  return;
 if(_GLF_DEAD(false))
  return;
 GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.y = workgroup_size;
 GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id.xy.y = GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.y;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 _GLF_IDENTITY(GLF_merged3_0_2_53_2_1_11_3_1_12GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_idvirtual_gidworkgroup_id.w = workgroup_id, (GLF_merged3_0_2_53_2_1_11_3_1_12GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_idvirtual_gidworkgroup_id.w = workgroup_id) + 0u);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))), (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))) || false)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), false)))))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(mat2(1.0), GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id.xy.y * GLF_merged3_0_2_53_2_1_11_3_1_12GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_idvirtual_gidworkgroup_id.w);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED(-1.5), (vec2(0.0, 0.0))[1]), vec2((vec2(0.0, 0.0))[0], _GLF_FUZZED(9.6)), bvec2(true, false))) + (injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec2(bool(bvec2(false, true)), true))))))), false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))) || false)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id.xy.x = _GLF_struct_replacement_0.workgroup_base;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint virtual_gid = GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id.xy.x + _GLF_IDENTITY(GLF_merged3_0_2_53_2_1_11_3_1_12GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_idvirtual_gidworkgroup_id.xy.x * GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, max(GLF_merged3_0_2_53_2_1_11_3_1_12GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_idvirtual_gidworkgroup_id.xy.x * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, uint(uvec2(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, 0u))), (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, uint(uvec2(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, 0u)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(GLF_merged3_0_2_53_2_1_11_3_1_12GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_idvirtual_gidworkgroup_id.xy.x * GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, (GLF_merged3_0_2_53_2_1_11_3_1_12GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_idvirtual_gidworkgroup_id.xy.x * GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x) << 0u))) + GLF_merged3_0_2_53_2_1_11_3_1_12GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_idvirtual_gidworkgroup_id.xy.y;
 if(_GLF_DEAD(false))
  return;
 GLF_merged2_0_3_89_3_1_16GLF_merged2_0_2_53_2_1_11GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_idvirtual_gidnext_virtual_gid.xyz.z = virtual_gid;
 if(_GLF_DEAD(false))
  return;
 GLF_merged3_0_2_53_2_1_11_3_1_12GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_idvirtual_gidworkgroup_id.z = GLF_merged2_0_3_89_3_1_16GLF_merged2_0_2_53_2_1_11GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_idvirtual_gidnext_virtual_gid.xyz.z;
 uint next_virtual_gid = GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id.xy.x + GLF_merged3_0_2_53_2_1_11_3_1_12GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_idvirtual_gidworkgroup_id.xy.x * GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x + _GLF_IDENTITY(((GLF_merged3_0_2_53_2_1_11_3_1_12GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_idvirtual_gidworkgroup_id.xy.y + 1) % _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, false))))))), false || (false)) ? _GLF_FUZZED(uvec3(118284u, 54066u, _GLF_IDENTITY(133446u, _GLF_IDENTITY((133446u) << uint(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(0.0, determinant(mat4(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, float(vec3(0.0, sqrt(1.0), 0.0))))), 0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0), vec3(1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0, sin(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), abs(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)))), sin(0.0), 1.0, abs(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, tan(0.0), 1.0, log(1.0), 0.0, 1.0, sqrt(0.0))), (float(_GLF_IDENTITY(_GLF_IDENTITY(mat4(0.0, determinant(mat4(0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x4(0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0), (mat2x4(0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)) + mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0, 0.0, sin(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(0.0, 1.0, 0.0)), (float(vec3(0.0, 1.0, 0.0))) * 1.0)), mix(float(_GLF_FUZZED(vec2(8.6, -5.4).s)), float(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(0.0, 1.0, 0.0)), (float(vec3(0.0, 1.0, 0.0))) * 1.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) / 1.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), sin(0.0), 0.0, abs(0.0), 0.0)), sin(0.0), 1.0, abs(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, tan(0.0), 1.0, log(1.0), 0.0, 1.0, sqrt(0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat4(0.0, determinant(mat4(0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x4(0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0), (mat2x4(0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)) + mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0, 0.0, sin(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(0.0, 1.0, 0.0)), (float(vec3(0.0, 1.0, 0.0))) * 1.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(0.0, 1.0, 0.0)), (float(vec3(0.0, 1.0, 0.0))) * 1.0)), (_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(0.0, 1.0, 0.0)), (float(vec3(0.0, 1.0, 0.0))) * 1.0))) / 1.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(0.0, 1.0, 0.0)), (float(vec3(0.0, 1.0, 0.0))) * 1.0)), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(0.0, 1.0, 0.0)), (float(vec3(0.0, 1.0, 0.0))) * 1.0)))), mix(float(_GLF_FUZZED(vec2(8.6, -5.4).s)), float(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(0.0, 1.0, 0.0)), (float(vec3(0.0, 1.0, 0.0))) * 1.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) / 1.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), sin(0.0), 0.0, abs(0.0), 0.0)), sin(0.0), 1.0, abs(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, tan(0.0), 1.0, log(1.0), 0.0, 1.0, sqrt(0.0)) : _GLF_FUZZED(mat4(-3.2, 74.51, -1.1, -3.3, -13.08, -87.18, 104.599, -54.14, 3.0, -6.3, -1014.3478, 4.3, 1.6, -54.36, -79.70, -50.53)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(mat4(0.0, determinant(mat4(0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x4(0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0), (mat2x4(0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)) + mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0, 0.0, sin(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(0.0, 1.0, 0.0)), (float(vec3(0.0, 1.0, 0.0))) * 1.0)), mix(float(_GLF_FUZZED(vec2(8.6, -5.4).s)), float(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(0.0, 1.0, 0.0)), (float(vec3(0.0, 1.0, 0.0))) * 1.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) / 1.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), sin(0.0), 0.0, abs(0.0), 0.0)), sin(0.0), 1.0, abs(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, tan(0.0), 1.0, log(1.0), 0.0, 1.0, sqrt(0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat4(0.0, determinant(mat4(0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x4(0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0), (mat2x4(0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)) + mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0, 0.0, sin(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(0.0, 1.0, 0.0)), (float(vec3(0.0, 1.0, 0.0))) * 1.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(0.0, 1.0, 0.0)), (float(vec3(0.0, 1.0, 0.0))) * 1.0)), (_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(0.0, 1.0, 0.0)), (float(vec3(0.0, 1.0, 0.0))) * 1.0))) / 1.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(0.0, 1.0, 0.0)), (float(vec3(0.0, 1.0, 0.0))) * 1.0)), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(0.0, 1.0, 0.0)), (float(vec3(0.0, 1.0, 0.0))) * 1.0)))), mix(float(_GLF_FUZZED(vec2(8.6, -5.4).s)), float(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(0.0, 1.0, 0.0)), (float(vec3(0.0, 1.0, 0.0))) * 1.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) / 1.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), max(1.0, 1.0)), min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), sin(0.0), 0.0, abs(0.0), 0.0)), sin(0.0), 1.0, abs(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, tan(0.0), 1.0, log(1.0), 0.0, 1.0, sqrt(0.0)) : _GLF_FUZZED(mat4(-3.2, 74.51, -1.1, -3.3, -13.08, -87.18, 104.599, -54.14, 3.0, -6.3, -1014.3478, 4.3, 1.6, -54.36, -79.70, -50.53)))) : _GLF_FUZZED(mat4(vec4(79.15, -95.62, -681.352, -463.872), vec4(-845.470, 4622.1238, -63.65, 3.2), (vec4(7707.9481, 4636.7377, 624.482, 8.1) + -740.793), vec4(-8.7, -81.75, -44.32, -3.4))))))) - 0.0)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2426.7718)), vec2(_GLF_FUZZED(51.66), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1])), 1.0, 1.0, 1.0, 0.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), clamp(float(mat2x3(_GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1])), 1.0, 1.0, 1.0, 0.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), float(mat2x3(_GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1])), 1.0, 1.0, 1.0, 0.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), float(mat2x3(_GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1])), 1.0, 1.0, 1.0, 0.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).x), clamp(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(219.841)), vec2(_GLF_FUZZED(65.67), (injectionSwitch)[1]), bvec2(false, true))).x), _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(-5.1)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(true), ! (! (bool(true)))))))) * (injectionSwitch.x))), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(float(true))), bool(false))), _GLF_ZERO(0.0, injectionSwitch.x)))), (true ? (133446u) << uint(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(0.0, determinant(mat4(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, float(vec3(0.0, sqrt(1.0), 0.0))))), 0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), dot(vec3(0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0), vec3(1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0, sin(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), abs(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)))), sin(0.0), 1.0, abs(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, tan(0.0), 1.0, log(1.0), 0.0, 1.0, sqrt(0.0))), (float(_GLF_IDENTITY(_GLF_IDENTITY(mat4(0.0, determinant(mat4(0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x4(0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0), (mat2x4(0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 0.0))), 0.0, 1.0)) + mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0, 0.0, sin(0.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(0.0, 1.0, 0.0)), (float(vec3(0.0, 1.0, 0.0))) * 1.0)), mix(float(_GLF_FUZZED(vec2(8.6, -5.4).s)), float(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(0.0, 1.0, 0.0)), (float(vec3(0.0, 1.0, 0.0))) * 1.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) / 1.0), max(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(0.0, 1.0, 0.0)), (float(vec3(0.0, 1.0, 0.0))) * 1.0)), mix(float(_GLF_FUZZED(vec2(8.6, -5.4).s)), float(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(0.0, 1.0, 0.0)), (float(vec3(0.0, 1.0, 0.0))) * 1.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) / 1.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(0.0, 1.0, 0.0)), (float(vec3(0.0, 1.0, 0.0))) * 1.0)), mix(float(_GLF_FUZZED(vec2(8.6, -5.4).s)), float(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(0.0, 1.0, 0.0)), (float(vec3(0.0, 1.0, 0.0))) * 1.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) / 1.0))), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mix(vec3((vec3(1.0, 0.0, 0.0))[0], _GLF_IDENTITY((vec3(1.0, 0.0, 0.0))[1], min((vec3(1.0, 0.0, 0.0))[1], (vec3(1.0, 0.0, 0.0))[1])), _GLF_FUZZED(((1122.1133 * -3951.3788)))), vec3(_GLF_FUZZED(98.14), _GLF_FUZZED(-13.95), (vec3(1.0, 0.0, 0.0))[2]), bvec3(false, false, true)))), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), sin(0.0), 0.0, abs(0.0), 0.0)), sin(0.0), 1.0, abs(1.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-1.4)), bool(false))), 0.0, tan(0.0), 1.0, _GLF_IDENTITY(log(1.0), (_GLF_IDENTITY(log(1.0), clamp(log(1.0), log(1.0), log(1.0)))) + 0.0), 0.0, 1.0, sqrt(0.0)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))))) ? mat4(0.0, determinant(mat4(0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x4(0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0), (mat2x4(0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)) + mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0, 0.0, sin(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(0.0, 1.0, 0.0)), (float(vec3(0.0, 1.0, 0.0))) * 1.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(0.0, 1.0, 0.0)), (float(vec3(0.0, 1.0, 0.0))) * 1.0)), (_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(0.0, 1.0, 0.0)), (float(vec3(0.0, 1.0, 0.0))) * 1.0))) / 1.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(0.0, 1.0, 0.0)), (float(vec3(0.0, 1.0, 0.0))) * 1.0)), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(0.0, 1.0, 0.0)), (float(vec3(0.0, 1.0, 0.0))) * 1.0)))), mix(float(_GLF_FUZZED(vec2(8.6, -5.4).s)), float(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(0.0, 1.0, 0.0)), (float(vec3(0.0, 1.0, 0.0))) * 1.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) / 1.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), sin(0.0), 0.0, abs(0.0), 0.0)), sin(0.0), 1.0, abs(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, tan(0.0), 1.0, log(1.0), 0.0, 1.0, _GLF_IDENTITY(sqrt(0.0), max(sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) - 0.0)))) : _GLF_FUZZED(mat4(-3.2, 74.51, -1.1, -3.3, -13.08, -87.18, 104.599, -54.14, 3.0, -6.3, -1014.3478, 4.3, 1.6, -54.36, -79.70, -50.53)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(mat4(0.0, determinant(mat4(0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x4(0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0), (mat2x4(0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)) + mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0, 0.0, sin(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(0.0, 1.0, 0.0)), (float(vec3(0.0, 1.0, 0.0))) * 1.0)), mix(float(_GLF_FUZZED(vec2(8.6, -5.4).s)), float(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(0.0, 1.0, 0.0)), (float(vec3(0.0, 1.0, 0.0))) * 1.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) / 1.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), sin(0.0), 0.0, abs(0.0), 0.0)), sin(0.0), 1.0, abs(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, tan(0.0), 1.0, log(1.0), 0.0, 1.0, sqrt(0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat4(0.0, determinant(mat4(0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x4(0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0), (mat2x4(0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)) + mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0, 0.0, sin(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(0.0, 1.0, 0.0)), (float(vec3(0.0, 1.0, 0.0))) * 1.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(0.0, 1.0, 0.0)), (float(vec3(0.0, 1.0, 0.0))) * 1.0)), (_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(0.0, 1.0, 0.0)), (float(vec3(0.0, 1.0, 0.0))) * 1.0))) / 1.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(0.0, 1.0, 0.0)), (float(vec3(0.0, 1.0, 0.0))) * 1.0)), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(0.0, 1.0, 0.0)), (float(vec3(0.0, 1.0, 0.0))) * 1.0)))), mix(float(_GLF_FUZZED(vec2(8.6, -5.4).s)), float(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(0.0, 1.0, 0.0)), (float(vec3(0.0, 1.0, 0.0))) * 1.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) / 1.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), max(1.0, 1.0)), min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), sin(0.0), 0.0, abs(0.0), 0.0)), sin(0.0), 1.0, abs(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, tan(0.0), 1.0, log(1.0), 0.0, 1.0, sqrt(0.0)) : _GLF_FUZZED(mat4(-3.2, 74.51, -1.1, -3.3, -13.08, -87.18, 104.599, -54.14, 3.0, -6.3, -1014.3478, 4.3, 1.6, -54.36, -79.70, -50.53)))) : _GLF_FUZZED(mat4(vec4(79.15, -95.62, -681.352, -463.872), vec4(-845.470, 4622.1238, -63.65, 3.2), (vec4(7707.9481, _GLF_IDENTITY(4636.7377, clamp(4636.7377, 4636.7377, _GLF_IDENTITY(4636.7377, float(mat4x2(4636.7377, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, tan(0.0)))))), 624.482, 8.1) + -740.793), vec4(-8.7, -81.75, -44.32, -3.4))))))) - 0.0)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2426.7718)), vec2(_GLF_FUZZED(51.66), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY((injectionSwitch)[1], max(_GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1])), (injectionSwitch)[1])), 1.0, 1.0, 1.0, 0.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), clamp(float(mat2x3(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(48134)))], max((injectionSwitch)[1], (injectionSwitch)[1])), 1.0, 1.0, 1.0, 0.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), float(mat2x3(_GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1])), 1.0, 1.0, 1.0, 0.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), float(mat2x3(_GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1])), 1.0, 1.0, 1.0, 0.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).x), clamp(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(219.841)), vec2(_GLF_FUZZED(65.67), (injectionSwitch)[1]), bvec2(false, true))).x), _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(-5.1)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), true, true))), ! (! (bool(true)))))))) * (injectionSwitch.x))), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(float(true))), bool(false))), _GLF_ZERO(0.0, injectionSwitch.x)))) : _GLF_FUZZED(num_workgroup))))).b) : GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(uvec3(118284u, 54066u, _GLF_IDENTITY(133446u, (133446u) << uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(float(true))), bool(false))), _GLF_ZERO(0.0, injectionSwitch.x)), clamp(clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(float(true))), bool(false))), _GLF_ZERO(0.0, injectionSwitch.x)), clamp(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(float(true))), bool(false))), _GLF_ZERO(0.0, injectionSwitch.x)), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(3.7) : _GLF_ZERO(0.0, injectionSwitch.x))), mix(float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0)), float(_GLF_FUZZED(float(true))), bool(false))), _GLF_ZERO(0.0, injectionSwitch.x)))))))).b) : GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x) - _GLF_IDENTITY(0u, (0u) - 0u))))), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), false || ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)))) ? _GLF_IDENTITY(((GLF_merged3_0_2_53_2_1_11_3_1_12GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_idvirtual_gidworkgroup_id.xy.y + 1) % GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x), (((GLF_merged3_0_2_53_2_1_11_3_1_12GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_idvirtual_gidworkgroup_id.xy.y + 1) % GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x)) - _GLF_IDENTITY(0u, (0u) ^ 0u)) : _GLF_FUZZED(_GLF_IDENTITY(GLF_merged3_0_2_53_2_1_11_3_1_12GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_idvirtual_gidworkgroup_id, (GLF_merged3_0_2_53_2_1_11_3_1_12GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_idvirtual_gidworkgroup_id) >> uvec4(0u, 0u, 0u, 0u)).z)));
 GLF_merged2_0_3_89_3_1_16GLF_merged2_0_2_53_2_1_11GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_idvirtual_gidnext_virtual_gid.w = next_virtual_gid;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-3.9), _GLF_FUZZED(float(52917))), bvec2(false, false))), injectionSwitch)).y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id.z = GLF_merged2_0_3_89_3_1_16GLF_merged2_0_2_53_2_1_11GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_idvirtual_gidnext_virtual_gid.w;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false || (_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ((false)) || false)))))))))) || false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
  return;
 atomicStore(buf[GLF_merged3_0_2_53_2_1_11_3_1_12GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_idvirtual_gidworkgroup_id.z], uint(_GLF_IDENTITY(1, (1) * 1)), 4, _GLF_IDENTITY(64, (64) - 0), 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-380.445, -2786.5392)) : injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false || (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))) || false))) || false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), true))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))) / vec2(1.0, 1.0)).y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true)))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(GLF_merged3_0_2_53_2_1_11_3_1_12GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_idvirtual_gidworkgroup_id.xy.y + 1 < _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, min(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size)).x)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id.z], uint(2), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, 0.0)), max(vec2(vec4(injectionSwitch, 1.0, 0.0)), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, 0.0)), clamp(vec2(vec4(injectionSwitch, 1.0, 0.0)), vec2(vec4(injectionSwitch, 1.0, 0.0)), vec2(vec4(injectionSwitch, 1.0, 0.0))))))).x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 0.0, 1.0), (_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-6447.5688)), vec2(_GLF_FUZZED(24.07), (injectionSwitch)[1]), bvec2(false, true))).x, 0.0, 0.0, 1.0), mat2(mat2(mat2(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(17.73))), 0.0, 0.0, 1.0))))) * mat2(1.0))), max(float(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 0.0, 1.0), (_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 0.0, 1.0), mat2(mat2(mat2(injectionSwitch.x, 0.0, 0.0, 1.0))))) * mat2(1.0))), float(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 0.0, 1.0), (_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 0.0, 1.0), mat2(mat2(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(1.7))), 1.0), (false ? _GLF_FUZZED(mat2(-6.9, 570.781, 1.3, 34.56)) : mat2(injectionSwitch.x, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(1.7))), 1.0))))))) * mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0)))))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, _GLF_IDENTITY(true, ! (! (true))), false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-641.466)), bool(false))) > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false))))))))))))), true, true)))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true))))))))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), false, false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true)))), false || (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true)))))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true), false))))), (! (injectionSwitch.x > injectionSwitch.y)) || false)))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), true)))))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 0.0)))))), true && (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)))) || false)))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! (_GLF_IDENTITY((false) && true, ! (! (_GLF_IDENTITY((false) && true, ! (! ((false) && true))))))))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   atomicStore(buf[_GLF_IDENTITY(GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id.z, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id.z), _GLF_IDENTITY(uint(uvec4((GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id.z), 1u, 0u, 0u)), min(_GLF_IDENTITY(uint(uvec4((GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id.z), 1u, 0u, 0u)), _GLF_IDENTITY((uint(uvec4((GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id.z), 1u, 0u, 0u))) + 0u, (true ? (uint(uvec4((GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id.z), 1u, 0u, 0u))) + 0u : _GLF_FUZZED(subgroup_id)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4((GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id.z), 1u, 0u, 0u)), max(uint(uvec4((GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id.z), 1u, 0u, 0u)), uint(uvec4((GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id.z), 1u, 0u, 0u)))), (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4((GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id.z), 1u, 0u, 0u)), max(uint(uvec4((GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id.z), 1u, 0u, 0u)), uint(uvec4((GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id.z), 1u, 0u, 0u)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4((GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id.z), 1u, 0u, 0u)), max(uint(uvec4((GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id.z), 1u, 0u, 0u)), uint(uvec4((GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id.z), 1u, 0u, _GLF_IDENTITY(0u, (0u) * 1u))))), clamp(_GLF_IDENTITY(uint(uvec4((GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id.z), 1u, 0u, 0u)), max(uint(uvec4((GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id.z), 1u, 0u, 0u)), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id.z), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(next_virtual_gid) : (GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id.z))), _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (1u) | 0u), 1u)), 0u, 0u), (false ? _GLF_FUZZED(GLF_merged3_0_2_53_2_1_11_3_1_12GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_idvirtual_gidworkgroup_id) : uvec4(_GLF_IDENTITY((GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id.z), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(next_virtual_gid) : (GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id.z))), _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (1u) | 0u), 1u)), 0u, 0u)))))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id.z), ((GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id.z)) | ((GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id.z))), 1u, 0u, 0u)), max(uint(uvec4((GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id.z), 1u, 0u, 0u)), uint(uvec4((GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id.z), 1u, 0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(next_virtual_gid))))))), _GLF_IDENTITY(uint(uvec4((GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id.z), 1u, 0u, 0u)), max(uint(uvec4((GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id.z), 1u, 0u, 0u)), uint(uvec4((GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id.z), 1u, 0u, 0u))))))))))))) >> 0u, (_GLF_IDENTITY((GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id.z), _GLF_IDENTITY(uint(uvec4((GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id.z), 1u, 0u, 0u)), min(_GLF_IDENTITY(uint(uvec4((GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id.z), 1u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY((uint(uvec4((GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id.z), 1u, 0u, 0u))) + 0u, min((uint(uvec4((GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id.z), _GLF_IDENTITY(1u, max(1u, 1u)), 0u, 0u))) + 0u, (uint(uvec4((GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id.z), 1u, 0u, 0u))) + 0u)), (_GLF_IDENTITY(_GLF_IDENTITY((uint(uvec4((GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id.z), 1u, 0u, 0u))) + 0u, min((uint(uvec4((GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id.z), 1u, 0u, 0u))) + 0u, (uint(uvec4((GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id.z), 1u, 0u, 0u))) + 0u)), (0u & 14530u) ^ (_GLF_IDENTITY(_GLF_IDENTITY((uint(uvec4((GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id.z), 1u, 0u, 0u))) + 0u, min((uint(uvec4((GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id.z), 1u, 0u, 0u))) + 0u, (uint(uvec4((GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id.z), 1u, 0u, 0u))) + 0u)), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY((uint(uvec4((GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id.z), 1u, 0u, 0u))) + 0u, min((uint(uvec4((GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id.z), 1u, 0u, 0u))) + 0u, (uint(uvec4((GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id.z), 1u, 0u, 0u))) + 0u))))))) << 0u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4((GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id.z), 1u, 0u, 0u), clamp(uvec4((GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id.z), 1u, 0u, 0u), uvec4((GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id.z), 1u, 0u, 0u), uvec4((GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id.z), 1u, 0u, 0u)))), max(uint(uvec4((GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id.z), 1u, 0u, 0u)), uint(uvec4((GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id.z), 1u, 0u, 0u))))))) >> 0u) << 0u), ((GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id.z) >> 0u) | ((_GLF_IDENTITY(GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id, uvec4(0u, 0u, 0u, 0u) | (GLF_merged3_0_2_53_2_1_16_3_1_11GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizenext_virtual_gidsubgroup_id)).z) >> 0u)))], uint(2), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
