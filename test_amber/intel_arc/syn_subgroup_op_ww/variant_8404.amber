#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 do
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))), false, false), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))), false, false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
        {
         for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) * 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter ++)
          {
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && (false || (false))))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                }
               else
                {
                }
              }
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
               barrier();
              }
            }
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
            barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (injectionSwitch.y)))) && true)))), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))) || false, (((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))) || false) && true), ! (! (_GLF_IDENTITY(((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))) || false, (((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), ((injectionSwitch.x > injectionSwitch.y)) && true))) || false) && true))))) && true))));
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
  {
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0))) * (injectionSwitch)), (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0))) * (injectionSwitch)) : _GLF_FUZZED(vec2(-13.02, 6756.9252)), max(true ? _GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0))) * (injectionSwitch)) : _GLF_FUZZED(vec2(-13.02, 6756.9252)), true ? _GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0))) * (injectionSwitch)) : _GLF_FUZZED(vec2(-13.02, 6756.9252)))))).y, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0))) * (injectionSwitch)), (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0))) * (injectionSwitch)) : _GLF_FUZZED(vec2(-13.02, 6756.9252)), max(true ? _GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0))) * (injectionSwitch)) : _GLF_FUZZED(vec2(-13.02, 6756.9252)), true ? _GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0))) * (injectionSwitch)) : _GLF_FUZZED(vec2(-13.02, 6756.9252)))))).y))))), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_IDENTITY(cos(0.0), (cos(0.0)) / 1.0), 0.0))))), clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_IDENTITY(cos(0.0), (cos(0.0)) / 1.0), 0.0))))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_IDENTITY(cos(0.0), (cos(0.0)) / 1.0), 0.0))))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_IDENTITY(cos(0.0), (cos(0.0)) / 1.0), 0.0))))))).y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), ! (! ((false))))), bool(bvec3(! (! _GLF_IDENTITY((false), ! (! ((false))))), false, true))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u)), max(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u)), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u)))))))), (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, uint(uvec2(1u, 1u))), 1u)), _GLF_IDENTITY(1u, max(1u, 1u)))), uint(uint(1u))), ((0u) / 1u) / 1u))) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u)), max(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u)), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u)))))))), (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, uint(uvec2(1u, 1u))), 1u)), _GLF_IDENTITY(1u, max(1u, 1u)))), uint(uint(1u))), ((0u) / 1u) / 1u))) - 0u)) >> 0u)), (uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (141377u & 0u) + (_GLF_IDENTITY(0u, (0u) * 1u)))) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / _GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) / 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u)), 0u | (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u)))), _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u)), _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u)), 0u | (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u)))), _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u)), _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u)))))) >> 0u)))) - 0u))) | (uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / _GLF_IDENTITY(1u, max(1u, 1u)))), (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) << 0u)) << 0u), 1u)), uint(_GLF_IDENTITY(uint(1u), min(uint(1u), uint(1u))))), ((0u) / 1u) / 1u))) - 0u))))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / _GLF_IDENTITY(1u, uint(uint(1u)))) >> 0u), ((0u) / _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id)))) / 1u)), (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(131702u) : 0u)))), _GLF_IDENTITY(0u, (0u) - 0u)))) / 1u) / 1u))) - 0u)), (uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), (uint(uint(1u))) << 0u)), ((0u) / 1u) / 1u)), (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u))) - 0u))) | (uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), max((0u) / _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), max(uint(1u), uint(1u))))), (0u) / _GLF_IDENTITY(1u, uint(uint(1u))))), ((0u) / _GLF_IDENTITY(1u, ~ (~ (1u)))) / 1u)), (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u))) - 0u))))), (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u)), (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), clamp((0u), (0u), (0u))) / 1u)) / 1u) / 1u))) - 0u)), _GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u)), (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u))) - 0u))) | (uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u)), (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u))) - 0u))), (true ? _GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u)), (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), (_GLF_IDENTITY((0u) / 1u, 0u ^ ((0u) / 1u))) / 1u))) - 0u))) | (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) / 1u), _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u)), (_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / _GLF_IDENTITY(1u, uint(uint(1u)))) << 0u), ((0u) / 1u) / 1u))) - 0u))), clamp((uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), uint(uint(1u))), ((0u) / 1u) / 1u)), (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u))) - 0u))) | (uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))))), ((0u) / 1u) / 1u)), (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u))) - 0u))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)), _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u)), (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), (_GLF_IDENTITY((0u) / 1u, (_GLF_IDENTITY((0u) / 1u, 1u * ((0u) / 1u))) << 0u)) / 1u))) - 0u))) | (uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u), (_GLF_IDENTITY((_GLF_IDENTITY(0u, ~ (~ (0u)))) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u)) + 0u)), (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u))) - _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, 0u | (0u)) : _GLF_FUZZED(subgroup_size)))))), _GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) - 0u)) / _GLF_IDENTITY(1u, uint(uint(1u))), _GLF_IDENTITY(((0u) / 1u), (((0u) / 1u)) | 0u) / 1u)), (_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u), 0u), ~ (~ (uvec2(_GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u), 0u)))))))) - 0u))) | _GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), _GLF_IDENTITY(((0u) / 1u), (((0u) / 1u)) ^ 0u) / 1u)), _GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u))) - 0u, ((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u))) - 0u) >> 0u)))), (_GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), _GLF_IDENTITY(((0u) / 1u), (((0u) / 1u)) ^ 0u) / 1u)), _GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u))) - 0u, ((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u))) - 0u) >> 0u)))), uint(uvec3((uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), _GLF_IDENTITY(((0u) / 1u), (((0u) / 1u)) ^ 0u) / 1u)), _GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u))) - 0u, ((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u))) - 0u) >> 0u)))), 0u, 0u)))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), min((uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), _GLF_IDENTITY(((0u) / 1u) / 1u, 0u | (((0u) / 1u) / 1u)))), (_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))) / _GLF_IDENTITY(1u, uint(uint(1u))), _GLF_IDENTITY(((0u) / 1u) / 1u, (((0u) / 1u) / 1u) | (((0u) / 1u) / 1u))))) - 0u))) | (uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u)), (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u))) - 0u))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u)), (_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), (_GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ~ (~ ((0u) / _GLF_IDENTITY(1u, uint(uint(1u))))))) | (_GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), clamp((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), (0u) / _GLF_IDENTITY(1u, uint(uint(1u))), (0u) / _GLF_IDENTITY(1u, uint(uint(1u))))))), (_GLF_IDENTITY((0u) / 1u, (_GLF_IDENTITY((0u) / 1u, (true ? (0u) / 1u : _GLF_FUZZED((mat2(3.2, 5925.6483, 9646.4230, 0.1) , subgroup_id))))) | (_GLF_IDENTITY((0u) / 1u, 0u | ((0u) / 1u))))) / 1u))) - 0u))) | (uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u)), (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u))) - 0u))))))) : _GLF_FUZZED(subgroup_local_id)))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), (_GLF_IDENTITY(uint(uint(1u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(1u)), (uint(uint(1u))) - 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(1u)), (uint(uint(1u))) - 0u), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(1u)), (uint(uint(1u))) - 0u), clamp(_GLF_IDENTITY(uint(uint(1u)), (uint(uint(1u))) - 0u), _GLF_IDENTITY(uint(uint(1u)), (uint(uint(1u))) - 0u), _GLF_IDENTITY(uint(uint(1u)), (uint(uint(1u))) - 0u))), 1u))), _GLF_IDENTITY(uint(uint(1u)), (uint(uint(1u))) - 0u), _GLF_IDENTITY(uint(uint(1u)), (uint(uint(1u))) - 0u))))))) | (uint(uint(1u))))), ((0u) / 1u) / 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), _GLF_IDENTITY(_GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u), _GLF_IDENTITY((_GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), (_GLF_IDENTITY((0u), (false ? _GLF_FUZZED(subgroup_local_id) : (0u))) / 1u) / 1u)) * 1u, (true ? _GLF_IDENTITY((_GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), (_GLF_IDENTITY((0u), (false ? _GLF_FUZZED(subgroup_local_id) : (0u))) / 1u) / 1u)) * 1u, clamp((_GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), (_GLF_IDENTITY((0u), (false ? _GLF_FUZZED(subgroup_local_id) : (0u))) / 1u) / 1u)) * 1u, (_GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), (_GLF_IDENTITY((0u), (false ? _GLF_FUZZED(subgroup_local_id) : (0u))) / 1u) / 1u)) * 1u, (_GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), (_GLF_IDENTITY((0u), (false ? _GLF_FUZZED(subgroup_local_id) : (0u))) / 1u) / 1u)) * 1u)) : _GLF_FUZZED((subgroup_size / subgroup_id))))))) - 0u)), (uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), (_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | 0u) / 1u) / 1u)), (_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u), min((0u), (0u))) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u))) - 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), max(_GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), (true ? uint(1u) : _GLF_FUZZED(subgroup_size)))) * 1u), uint(1u))))), ((0u) / 1u) / 1u)), _GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u))) - 0u, ~ (~ ((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u))) - 0u))))), 0u | (uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), max(_GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), (true ? uint(1u) : _GLF_FUZZED(subgroup_size)))) * 1u), uint(1u))))), ((0u) / 1u) / 1u)), _GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u))) - 0u, ~ (~ ((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u))) - 0u))))))), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), max(_GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), (true ? uint(1u) : _GLF_FUZZED(subgroup_size)))) * 1u), uint(1u))))), ((0u) / 1u) / 1u)), _GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u))) - 0u, ~ (~ ((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u))) - 0u))))), 0u | (uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), max(_GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), (true ? uint(1u) : _GLF_FUZZED(subgroup_size)))) * 1u), uint(1u))))), ((0u) / 1u) / 1u)), _GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u))) - 0u, ~ (~ ((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u))) - 0u))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), max(_GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), (true ? uint(1u) : _GLF_FUZZED(subgroup_size)))) * 1u), uint(1u))))), ((0u) / 1u) / 1u)), _GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u))) - 0u, ~ (~ ((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u))) - 0u))))), 0u | (uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), max(_GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), (true ? uint(1u) : _GLF_FUZZED(subgroup_size)))) * 1u), uint(1u))))), ((0u) / 1u) / 1u)), _GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u))) - 0u, ~ (~ ((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u))) - 0u)))))))))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), (_GLF_IDENTITY(uint(uint(1u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(uint(1u)), (uint(uint(1u))) - 0u)), (~ (_GLF_IDENTITY(uint(uint(1u)), (uint(uint(1u))) - 0u))) << 0u)))) | (uint(uint(1u))))), ((0u) / 1u) / 1u)), (_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u), (_GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), (_GLF_IDENTITY((0u), (false ? _GLF_FUZZED(subgroup_local_id) : (0u))) / 1u) / 1u)) * 1u))) - 0u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))))), ((0u) / 1u) / 1u)), (_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u), min((0u), (0u))) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / _GLF_IDENTITY(1u, (1u) | (1u))) / 1u))) - 0u)), (uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))))), ((0u) / 1u) / 1u)), (_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u), min((0u), (0u))) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / _GLF_IDENTITY(1u, (1u) | (1u))) / 1u))) - 0u))) | (uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))))), ((0u) / 1u) / 1u)), (_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u), min((0u), (0u))) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / _GLF_IDENTITY(1u, (1u) | (1u))) / 1u))) - 0u))))), min(_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))))), ((0u) / 1u) / 1u)), (_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u), min((0u), (0u))) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / _GLF_IDENTITY(1u, (1u) | (1u))) / 1u))) - 0u)), (uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))))), ((0u) / 1u) / 1u)), (_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u), min((0u), (0u))) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / _GLF_IDENTITY(1u, (1u) | (1u))) / 1u))) - 0u))) | (uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))))), ((0u) / 1u) / 1u)), (_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u), min((0u), (0u))) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / _GLF_IDENTITY(1u, (1u) | (1u))) / 1u))) - 0u))))), ((_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))))), ((0u) / 1u) / 1u)), (_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u), min((0u), (0u))) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / _GLF_IDENTITY(1u, (1u) | (1u))) / 1u))) - 0u)), (uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))))), ((0u) / 1u) / 1u)), (_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u), min((0u), (0u))) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / _GLF_IDENTITY(1u, (1u) | (1u))) / 1u))) - 0u))) | (uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))))), ((0u) / 1u) / 1u)), (_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u), min((0u), (0u))) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / _GLF_IDENTITY(1u, (1u) | (1u))) / 1u))) - 0u)))))) / 1u), (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))))), ((0u) / 1u) / 1u)), (_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u), min((0u), (0u))) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / _GLF_IDENTITY(1u, (1u) | (1u))) / 1u))) - 0u)), (uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))))), ((0u) / 1u) / 1u)), (_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u), min((0u), (0u))) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / _GLF_IDENTITY(1u, (1u) | (1u))) / 1u))) - 0u))) | (uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))))), ((0u) / 1u) / 1u)), (_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u), min((0u), (0u))) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / _GLF_IDENTITY(1u, (1u) | (1u))) / 1u))) - 0u))))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), max(_GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), (true ? uint(1u) : _GLF_FUZZED(subgroup_size)))) * 1u), uint(1u))))), _GLF_IDENTITY(((0u) / 1u) / 1u, (_GLF_IDENTITY(((0u) / 1u) / 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (((0u) / 1u) / 1u))) << 0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u))) - 0u, ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u))) - 0u), min(_GLF_IDENTITY(~ ((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u))) - 0u), 0u | (~ ((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u))) - 0u))), ~ ((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u))) - 0u))))))), 0u | (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY((0u), 0u | (_GLF_IDENTITY((0u), min((0u), _GLF_IDENTITY((0u), ~ (~ ((0u)))))))) / _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), max(_GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), (true ? uint(1u) : _GLF_FUZZED(subgroup_size)))) * 1u), _GLF_IDENTITY(uint(1u), min(uint(1u), uint(1u))))))), ((0u) / 1u) / 1u)), _GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u))) - 0u, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u))) - 0u, ((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), (_GLF_IDENTITY((0u) / 1u, ((0u) / 1u) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) / 1u))) - 0u) + 0u))), max((~ (_GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u))) - 0u, ((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), (_GLF_IDENTITY((0u) / 1u, ((0u) / 1u) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) / 1u))) - 0u) + 0u))), (~ (_GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u))) - 0u, ((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), (_GLF_IDENTITY((0u) / 1u, ((0u) / 1u) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) / 1u))) - 0u) + 0u))))))))))))), (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), (_GLF_IDENTITY(uint(uint(1u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(uint(1u)), (uint(uint(1u))) - 0u)), (~ (_GLF_IDENTITY(uint(uint(1u)), (uint(uint(1u))) - 0u))) << 0u)))) | (uint(uint(1u))))), ((0u) / 1u) / 1u)), (_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u), (_GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), (_GLF_IDENTITY((0u), (false ? _GLF_FUZZED(subgroup_local_id) : (0u))) / 1u) / 1u)) * 1u))) - 0u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))))), ((0u) / 1u) / 1u)), (_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u), min((0u), (0u))) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / _GLF_IDENTITY(1u, (1u) | (1u))) / 1u))) - 0u)), (uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))))), ((0u) / 1u) / 1u)), (_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u), min((0u), (0u))) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / _GLF_IDENTITY(1u, (1u) | (1u))) / 1u))) - 0u))) | (uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))))), ((0u) / 1u) / 1u)), (_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u), min((0u), (0u))) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / _GLF_IDENTITY(1u, (1u) | (1u))) / 1u))) - 0u))))), min(_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))))), ((0u) / 1u) / 1u)), (_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u), min((0u), (0u))) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / _GLF_IDENTITY(1u, (1u) | (1u))) / 1u))) - 0u)), (uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))))), ((0u) / 1u) / 1u)), (_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u), min((0u), (0u))) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / _GLF_IDENTITY(1u, (1u) | (1u))) / 1u))) - 0u))) | (uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))))), ((0u) / 1u) / 1u)), (_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u), min((0u), (0u))) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / _GLF_IDENTITY(1u, (1u) | (1u))) / 1u))) - 0u))))), ((_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))))), ((0u) / 1u) / 1u)), (_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u), min((0u), (0u))) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / _GLF_IDENTITY(1u, (1u) | (1u))) / 1u))) - 0u)), (uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))))), ((0u) / 1u) / 1u)), (_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u), min((0u), (0u))) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / _GLF_IDENTITY(1u, (1u) | (1u))) / 1u))) - 0u))) | (uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))))), ((0u) / 1u) / 1u)), (_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u), min((0u), (0u))) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / _GLF_IDENTITY(1u, (1u) | (1u))) / 1u))) - 0u)))))) / 1u), (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))))), ((0u) / 1u) / 1u)), (_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u), min((0u), (0u))) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / _GLF_IDENTITY(1u, (1u) | (1u))) / 1u))) - 0u)), (uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))))), ((0u) / 1u) / 1u)), (_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u), min((0u), (0u))) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / _GLF_IDENTITY(1u, (1u) | (1u))) / 1u))) - 0u))) | (uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))))), ((0u) / 1u) / 1u)), (_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u), min((0u), (0u))) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / _GLF_IDENTITY(1u, (1u) | (1u))) / 1u))) - 0u))))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), max(_GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), (true ? uint(1u) : _GLF_FUZZED(subgroup_size)))) * 1u), uint(1u))))), _GLF_IDENTITY(((0u) / 1u) / 1u, (_GLF_IDENTITY(((0u) / 1u) / 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (((0u) / 1u) / 1u))) << 0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u))) - 0u, ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u))) - 0u), min(_GLF_IDENTITY(~ ((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u))) - 0u), 0u | (~ ((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u))) - 0u))), ~ ((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u))) - 0u))))))), 0u | (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY((0u), 0u | (_GLF_IDENTITY((0u), min((0u), _GLF_IDENTITY((0u), ~ (~ ((0u)))))))) / _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), max(_GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), (true ? uint(1u) : _GLF_FUZZED(subgroup_size)))) * 1u), _GLF_IDENTITY(uint(1u), min(uint(1u), uint(1u))))))), ((0u) / 1u) / 1u)), _GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u))) - 0u, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u))) - 0u, ((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), (_GLF_IDENTITY((0u) / 1u, ((0u) / 1u) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) / 1u))) - 0u) + 0u))), max((~ (_GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u))) - 0u, ((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), (_GLF_IDENTITY((0u) / 1u, ((0u) / 1u) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) / 1u))) - 0u) + 0u))), (~ (_GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u))) - 0u, ((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), (_GLF_IDENTITY((0u) / 1u, ((0u) / 1u) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) / 1u))) - 0u) + 0u)))))))))))))) * 1u)) / _GLF_IDENTITY(1u, ~ (~ (1u)))))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uint(1u))), ~ (~ (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), max(uint(uint(1u)), uint(uint(1u)))))))), ((0u) / 1u) / _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))))), (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), (uint(uint(_GLF_IDENTITY(1u, min(1u, 1u))))) ^ 0u)), _GLF_IDENTITY(((0u) / _GLF_IDENTITY(_GLF_IDENTITY(1u, 0u ^ (1u)), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(1u, 0u ^ (1u)), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))))), (uint(uvec2(_GLF_IDENTITY(1u, 0u ^ (1u)), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))) | (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(1u, 0u ^ (1u)), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))))), 0u | (uint(uvec2(_GLF_IDENTITY(1u, 0u ^ (1u)), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))))))))))), (((0u) / _GLF_IDENTITY(1u, 0u ^ (1u)))) ^ 0u) / 1u))) - _GLF_IDENTITY(0u, 0u ^ (0u)))), _GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / _GLF_IDENTITY(1u, (1u) / 1u)) / 1u)), (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), (uint(uint(1u))) | 0u)), ((0u) / 1u) / 1u))) - 0u))) | _GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u)), (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u))) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u)), (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u))) - 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u)), (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u))) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u)), (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u))) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u)), (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u))) - 0u)))) + 0u))), ~ (~ ((uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u)), (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u))) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u)), (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u))) - 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u)), (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u))) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u)), (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u))) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u)), (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u))) - 0u)))) + 0u)))))), 0u | (_GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u)), (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u))) - 0u))) | (uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), _GLF_IDENTITY(((0u) / 1u) / 1u, ~ (_GLF_IDENTITY(~ (((0u) / 1u) / 1u), ~ (~ (~ (((0u) / 1u) / 1u)))))))), (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u))) - 0u))), ((uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u)), (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, uint(uint(1u))), ((0u) / 1u) / 1u))) - 0u))) | (uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), clamp(uint(uint(1u)), _GLF_IDENTITY(uint(uint(1u)), clamp(uint(uint(1u)), uint(uint(1u)), uint(uint(1u)))), uint(uint(1u))))), ((0u) / 1u) / 1u)), (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / _GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uint(1u))), (true ? _GLF_IDENTITY(1u, uint(uint(1u))) : _GLF_FUZZED((bvec4(true, false, false, false) , subgroup_size)))), ((0u) / 1u) / 1u))) - 0u)))) << 0u)))))))))), (_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, _GLF_IDENTITY(0u, (0u) / 1u)), max(min(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), (_GLF_IDENTITY(0u, (0u) / 1u)) | (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ~ (~ (_GLF_IDENTITY((0u), 0u ^ ((0u)))))) / 1u))))))), min(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : 0u, min(false ? _GLF_FUZZED(subgroup_id) : 0u, _GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : 0u, clamp(false ? _GLF_FUZZED(subgroup_id) : 0u, false ? _GLF_FUZZED(subgroup_id) : 0u, false ? _GLF_FUZZED(subgroup_id) : 0u))))), max(_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_id) : 0u), (true ? (false ? _GLF_FUZZED(subgroup_id) : 0u) : _GLF_FUZZED(subgroup_id))), (false ? _GLF_FUZZED(subgroup_id) : 0u)))), _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), min((0u), (0u))) / 1u)))))) + 0u))).x;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(clamp(uvec3(108918u, 28813u, 28926u), num_workgroup, workgroup_size)) : gl_WorkGroupID)).x;
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u), workgroup_size)) * _GLF_IDENTITY(workgroup_id, (0u ^ 1u) * (workgroup_id)), _GLF_IDENTITY(max(workgroup_size * workgroup_id, workgroup_size * workgroup_id), max(max(workgroup_size * workgroup_id, workgroup_size * workgroup_id), max(workgroup_size * workgroup_id, workgroup_size * workgroup_id))));
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + subgroup_id * subgroup_size)) + subgroup_local_id, (false ? _GLF_FUZZED(subgroup_local_id) : workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)), clamp(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (0u ^ 1u) * (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)) + subgroup_local_id)), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size + subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, ~ (_GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), _GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, ~ (~ (workgroup_base + _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_id) : subgroup_id)) * subgroup_size))) + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u))), 0u | ((~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)))) | (~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)))))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, ~ (_GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), _GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, ~ (~ (workgroup_base + _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_id) : subgroup_id)) * subgroup_size))) + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u))), 0u | ((~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)))) | (~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)))))), ((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, ~ (_GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), _GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, ~ (~ (workgroup_base + _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_id) : subgroup_id)) * subgroup_size))) + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u))), 0u | ((~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)))) | (~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id))))))) >> 0u)) | ((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, ~ (_GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), _GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, ~ (~ (workgroup_base + _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_id) : subgroup_id)) * subgroup_size))) + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u))), 0u | ((~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)))) | (~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)))))))) + 0u), _GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(workgroup_size) : workgroup_base)) + _GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)), (_GLF_IDENTITY(subgroup_id, 0u | _GLF_IDENTITY((subgroup_id), ((subgroup_id)) / 1u))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)))), uint(uint(uint(uint(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)))))))))) * subgroup_size, subgroup_id * subgroup_size)) + subgroup_local_id));
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(1444)))))), 0u + ((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), (subgroup_local_id))) | 0u))) + 1))) % subgroup_size, clamp(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(1444), min(_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(1444), max(_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(1444), (false ? _GLF_FUZZED(8276) : true ? 1 : _GLF_FUZZED(1444))), true ? 1 : _GLF_FUZZED(1444))), true ? 1 : _GLF_FUZZED(1444)))))))), 0u + ((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u))) + 1))) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 1, 0, (0 >> _GLF_IDENTITY(int(5), int(5))))), max(_GLF_IDENTITY(int(ivec4(1, 1, 0, (0 >> _GLF_IDENTITY(int(5), int(5))))), ~ (~ (int(ivec4(1, 1, 0, (0 >> _GLF_IDENTITY(int(5), int(5)))))))), _GLF_IDENTITY(int(ivec4(1, 1, 0, (0 >> _GLF_IDENTITY(int(5), int(5))))), (int(ivec4(1, 1, 0, (0 >> _GLF_IDENTITY(int(5), int(5)))))) << 0)))), _GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(1444)))))), 0u + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)), min(max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)), max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u))))) + 1), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)), min(max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)), max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u))))) + 1), ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)), min(max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)), max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u))))) + 1)) ^ 0u), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)), min(max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)), max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u))))) + 1), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)), min(max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)), max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u))))) + 1))))) % subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(1444)))))), 0u + ((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u))) + 1))) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(1444)))))), 0u + ((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u))) + 1))) % subgroup_size) / 1u)))), (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)) + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(1444)))))), _GLF_IDENTITY(0u + ((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u))) + 1)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) : 0u + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), clamp(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u))))))) + 1), ((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), clamp(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u))))))) + 1)) | ((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), clamp(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u))))))) + 1))))))) % subgroup_size)) >> (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), 0u ^ (workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, ~ (~ (1))), 1), min(ivec2(_GLF_IDENTITY(1, ~ (~ (1))), 1), ivec2(_GLF_IDENTITY(1, ~ (~ (1))), 1))), ivec2(0, 0) + (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, ~ (~ (1))), 1), ivec2(0, 0) | _GLF_IDENTITY((ivec2(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, min(1, 1))))), 1)), min(_GLF_IDENTITY((ivec2(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, min(1, 1))))), 1)), (_GLF_IDENTITY((ivec2(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, min(1, 1))))), 1)), ivec2(ivec4((ivec2(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, min(1, 1))))), 1)), 0, 0)))) | ((ivec2(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, min(1, 1))))), 1)))), (ivec2(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, min(1, 1))))), 1))))))))), subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), max(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (1))) | (1)))))) << 0), min(_GLF_IDENTITY(1, (1) << 0), _GLF_IDENTITY(1, (1) << 0))), _GLF_IDENTITY(1, (1) << 0))), 0, 1, 1)), (int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) + 0) << 0), max(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), min(_GLF_IDENTITY(1, (1) << 0), _GLF_IDENTITY(1, _GLF_IDENTITY((1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((1), max((1), (1)))), (true ? ~ (_GLF_IDENTITY((1), max((1), (1)))) : _GLF_FUZZED(-40325))))) << 0))), _GLF_IDENTITY(1, _GLF_IDENTITY((1) << 0, 0 | ((1) << 0))))), 0, 1, 1))) | (int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), max(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), min(_GLF_IDENTITY(1, (1) << 0), _GLF_IDENTITY(1, (1) << 0))), _GLF_IDENTITY(1, (1) << 0))), 0, 1, 1)))))) - 0)))) % subgroup_size)));
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   for(int _injected_loop_counter = _GLF_IDENTITY((0 ^ int(_GLF_ONE(1.0, injectionSwitch.y))), ((0 ^ int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))) / 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY((0 ^ 0), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0) ^ 0, _GLF_IDENTITY(clamp(_GLF_IDENTITY(0 ^ 0, max(0 ^ 0, 0 ^ 0)), _GLF_IDENTITY(0 ^ 0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0 ^ 0)), _GLF_IDENTITY(0 ^ 0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0 ^ 0))), 1 * (clamp(_GLF_IDENTITY(0 ^ 0, max(0 ^ 0, 0 ^ 0)), _GLF_IDENTITY(0 ^ 0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0 ^ 0)), _GLF_IDENTITY(0 ^ 0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0 ^ 0))))))))))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter)) < 1); _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter ++, (1 | 1) * (_GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) >> 0)) | 0)) * 1))), 0 | (_GLF_IDENTITY(_injected_loop_counter ++, ~ (_GLF_IDENTITY(~ (_injected_loop_counter ++), (_GLF_IDENTITY(~ (_injected_loop_counter ++), (~ (_injected_loop_counter ++)) >> 0)) | 0))))))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         for(int _injected_loop_counter = (1 ^ int(_GLF_ONE(1.0, injectionSwitch.y))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, (false ? _GLF_FUZZED(3242.2605) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y))))
              barrier();
             do
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
            }
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(! (_GLF_DEAD(false))))))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
          barrier();
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false), false))))))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))))));
 do
  {
   if(subgroup_local_id + 1 < subgroup_size)
    {
     for(int _injected_loop_counter = _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) ^ 0), _GLF_IDENTITY(0, 0 | (0)), 0)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & 1)), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY(1, (1) >> 0) & 1)))); _injected_loop_counter ++)
      {
       do
        {
         atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid)), uint(uvec3(_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid)), 0u, 0u))), _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) / 1u)))], _GLF_IDENTITY(_GLF_IDENTITY(uint(2), (uint(2)) / uint(_GLF_ONE(1.0, injectionSwitch.y))), min(_GLF_IDENTITY(uint(2), (uint(2)) / uint(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(uint(2), (uint(2)) / uint(_GLF_ONE(1.0, injectionSwitch.y))))), 4, 64, 4);
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     do
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), true, _GLF_IDENTITY(false, (false) || false)), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), true, _GLF_IDENTITY(false, (false) || false)), true)))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), true, _GLF_IDENTITY(false, (false) || false)), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), true, _GLF_IDENTITY(false, (false) || false)), true)))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), true, _GLF_IDENTITY(false, (false) || false)), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), true, _GLF_IDENTITY(false, (false) || false)), true))))) && true), false, false, false)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           barrier();
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, true && (true)) ? injectionSwitch : _GLF_FUZZED(vec2(-41.45, 0.7)))).x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(5.2, 5.2)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(fract(vec2(2662.9738, 3155.3564))) : injectionSwitch)), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(asinh(injectionSwitch)) : injectionSwitch)), injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(asinh(injectionSwitch)) : injectionSwitch)), injectionSwitch))) * sqrt(vec2(1.0, 1.0))), max(injectionSwitch, injectionSwitch)))))).x > injectionSwitch.y))));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
      {
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
              }
            }
           else
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
                    {
                     do
                      {
                       do
                        {
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           if(_GLF_WRAPPED_IF_FALSE(false))
                            {
                            }
                           else
                            {
                             barrier();
                            }
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                    }
                   else
                    {
                    }
                  }
                }
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
              }
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         subgroupAll(false);
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     do
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, log(1.0), sqrt(0.0), _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, 1.0), mat2(1.0) * (mat4x2(injectionSwitch, 0.0, log(1.0), sqrt(0.0), 1.0, 1.0, 1.0))))).y, _GLF_IDENTITY(true, (true) && true) && (injectionSwitch.x < injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ 0u)], uint(2), _GLF_IDENTITY(4, min(4, 4)), 64, 4);
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(6.3), (_GLF_IDENTITY(_GLF_FUZZED(6.3), (_GLF_FUZZED(6.3)) / 1.0)) + 0.0)), bool(false))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(tanh(vec2(32.17, 8381.2716))) : injectionSwitch)).y, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(6.3)), bool(false)))))), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(tanh(vec2(32.17, 8381.2716))) : injectionSwitch)).y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(6.3)), bool(false)))))), false, true, false)), (bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(tanh(vec2(32.17, 8381.2716))) : injectionSwitch)).y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED(6.3)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(float(_GLF_FUZZED(6.3)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(1.0))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0), (true ? mat3x2(float(_GLF_FUZZED(6.3)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(1.0))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0) : _GLF_FUZZED(mat3x2(-545.398, -62.45, 766.409, 4.7, 6373.7806, 2591.6795))))), (true ? float(_GLF_IDENTITY(mat3x2(float(_GLF_FUZZED(6.3)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(1.0))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0), (true ? mat3x2(float(_GLF_FUZZED(6.3)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(1.0))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0) : _GLF_FUZZED(mat3x2(-545.398, -62.45, 766.409, 4.7, 6373.7806, 2591.6795))))) : _GLF_FUZZED(-7.7)))), bool(false)))))), false, true, false))) || false))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(6.3)), bool(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED(6.3)), (true ? _GLF_IDENTITY(float(_GLF_FUZZED(6.3)), max(float(_GLF_FUZZED(6.3)), _GLF_IDENTITY(float(_GLF_FUZZED(6.3)), min(float(_GLF_FUZZED(6.3)), float(_GLF_FUZZED(6.3)))))) : _GLF_FUZZED(2.6))), _GLF_IDENTITY(bool(false), (bool(false)) && true))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(6.3, 0.0 + (6.3)))), bool(false))))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(6.3)), bool(false))))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(6.3)), bool(false)))))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(6.3, 0.0 + (6.3)))), bool(false))))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(6.3)), bool(false))))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(6.3)), bool(false)))))), min(clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(6.3, 0.0 + (6.3)))), bool(false))))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(6.3)), bool(false))))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(6.3)), bool(false)))))), clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(6.3, 0.0 + (6.3)))), bool(false))))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(6.3)), bool(false))))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(6.3)), bool(false))))))))) - 0.0))) / 1.0), mix(float(_GLF_FUZZED(5.7)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(6.3, (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (true))) ? 6.3 : _GLF_FUZZED(-76.37))))), bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true))))))), (mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(6.3, (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (true))) ? 6.3 : _GLF_FUZZED(-76.37))))), bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true)))))))) - 0.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(6.3)), bool(false))), clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(6.3)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(6.3)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(6.3)), bool(false))))))), mix(float(_GLF_FUZZED(-7643.5349)), float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(6.3)), bool(false)), mix(float(_GLF_FUZZED(-6.8)), float(mix(float(injectionSwitch.y), float(_GLF_FUZZED(6.3)), bool(false))), bool(true))))))), bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec2(bvec3(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false))), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec2(bvec3(bvec2(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))), false), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec2(bvec3(bvec2(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x < injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x < injectionSwitch.y))))), false), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))) * sqrt(1.0))), bool(true)))))))))))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      barrier();
     subgroupAll(_GLF_IDENTITY(true, false || (true)));
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, false || (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), 1.0, 0.0)), max(vec2(mat2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), 1.0, 0.0)), vec2(mat2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), 1.0, 0.0))))).x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)))))))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
          barrier();
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
