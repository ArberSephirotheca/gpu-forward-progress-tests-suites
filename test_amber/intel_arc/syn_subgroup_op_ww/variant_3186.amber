#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec4(gl_WorkGroupSize.x, 1u, 0u, 0u)))) | _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (57636u & 0u) | (0u)), 0u, 0u)));
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) || false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) || false, bool(bvec2((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) || false, false))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), ! (! (true && (_GLF_DEAD(false))))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false)), bool(bvec2((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) || false, false)))) && true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), ((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) || false, bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) || false, bool(bvec2((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), (true && (_GLF_DEAD(false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false, false))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), false)))))) || false))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), clamp(~ (1u), ~ (1u), ~ (1u))))))), max(uint(uint(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), clamp(~ (1u), ~ (1u), ~ (1u))))))), uint(uint(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), clamp(~ (1u), ~ (1u), ~ (1u)))))))))), 0u, 0u)));
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(~ (~ (subgroup_local_id)), 1u * (~ (~ (subgroup_local_id)))))))) + 1), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), (subgroup_local_id) | (subgroup_local_id)) + 1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), (subgroup_local_id) | (subgroup_local_id)) + 1, 0u ^ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1)))) >> (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), 1u * (_GLF_IDENTITY(uint(5u), uint(5u)))))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))), (~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))), (~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))) - 0u))))))) + 1), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1)) >> (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))))), min(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))))), _GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ _GLF_IDENTITY((subgroup_local_id), ~ (~ ((subgroup_local_id))))))))))) + 1), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1)) >> (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(5u), uint(5u)), (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) ^ 0u)), uint(5u))) / 1u))), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))))) + 1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))))) + 1, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))))) + 1) >> _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) - 0u), 0u))))))), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1)), (((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1))) << 0u), (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1)), (((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1))) << 0u)) >> 0u) >> (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))) : _GLF_FUZZED(subgroup_id)), ((_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) && true)) ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))))) + 1, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))))) + 1, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))))) + 1) >> 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))))) + 1, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))))) + 1) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))))) + 1, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))))) + 1) >> 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))))) + 1, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))))) + 1) >> 0u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))))) + 1, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))))) + 1) >> 0u)))), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))))) + 1, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))))) + 1) >> 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))))) + 1, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))))) + 1) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))))) + 1, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))))) + 1) >> 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))))) + 1, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))))) + 1) >> 0u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))))) + 1, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))))) + 1) >> 0u)))) : _GLF_FUZZED(164507u)))))), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY((subgroup_local_id), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : (subgroup_local_id)))) + 1)), (((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), min((subgroup_local_id), (subgroup_local_id))) | (subgroup_local_id)) + 1))) << 0u) >> (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))) : _GLF_FUZZED(subgroup_id))) / 1u)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))))))), ((~ (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(~ (~ (subgroup_local_id)), 0u ^ (~ (~ (subgroup_local_id)))))))) - 0u)) + 1), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY((subgroup_local_id), 0u ^ ((subgroup_local_id)))) + 1)) >> (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))))) % subgroup_size), 1u * (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)) | 0u)) >> 0u)) >> _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(5u))), _GLF_IDENTITY((_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(5u))), ((0u >> _GLF_IDENTITY(uint(5u), uint(5u)))) / 1u)), min((_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(5u))), ((0u >> _GLF_IDENTITY(uint(5u), uint(5u)))) / 1u)), (_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(5u))), ((0u >> _GLF_IDENTITY(uint(5u), uint(5u)))) / 1u)))) | _GLF_IDENTITY((_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 0u | ((0u >> _GLF_IDENTITY(uint(5u), uint(5u)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : (_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 0u | ((0u >> _GLF_IDENTITY(uint(5u), uint(5u)))))))))), (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)) | 0u)) >> 0u)) >> _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(5u))), _GLF_IDENTITY((_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(5u))), ((0u >> _GLF_IDENTITY(uint(5u), uint(5u)))) / 1u)), min((_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(5u))), ((0u >> _GLF_IDENTITY(uint(5u), uint(5u)))) / 1u)), (_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(5u))), ((0u >> _GLF_IDENTITY(uint(5u), uint(5u)))) / 1u)))) | _GLF_IDENTITY((_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 0u | ((0u >> _GLF_IDENTITY(uint(5u), uint(5u)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : (_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 0u | ((0u >> _GLF_IDENTITY(uint(5u), uint(5u))))))))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), subgroup_size)), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), subgroup_size)), 1u, (0u << _GLF_IDENTITY(uint(7u), uint(7u))), 1u), (uvec4(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), subgroup_size)), 1u, (0u << _GLF_IDENTITY(uint(7u), uint(7u))), 1u)) << (uvec4(1u, 1u, 1u, 1u) ^ uvec4(1u, 1u, 1u, 1u))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size)), subgroup_size)), max(subgroup_size, subgroup_size))) * 1u)), ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec4(subgroup_local_id + 1, 1u, 1u, 1u), (uvec4(subgroup_local_id + 1, 1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), max(_GLF_IDENTITY((1u), uint(uvec3((1u), 1u, 0u))), (1u)))) | ((1u))) * 1u), 1u, (0u | 0u), 1u)), 0u | (uint(uvec4(_GLF_IDENTITY(1u, (1u) * 1u), 1u, (0u | 0u), 1u))))), 1u)) - uvec4(0u, 0u, 0u, 0u))))), ((subgroup_local_id + 1)) >> (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))) % subgroup_size)) | ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(0u ^ (subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) / 1)), max(0u ^ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)), 0u ^ (subgroup_local_id + 1))))), ((subgroup_local_id + 1)) >> (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) * (1u ^ 0u))), 0u + (uint(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (5u) * 1u)) / 1u)))), uint(5u)))) % subgroup_size))))), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (1u & _GLF_IDENTITY(1u, max(1u, 1u))) * (workgroup_base + subgroup_id * subgroup_size)) + (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u) % subgroup_size)) * (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))), ~ (~ ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uint(3u) : _GLF_FUZZED(uvec4(47267u, 4911u, 114044u, 25066u).q))), uint(3u)))))) >> _GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(uint(3u), uint(3u))) ^ 0u)) | (_GLF_IDENTITY(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u)), uint(uint(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)), (false ? _GLF_FUZZED(bitfieldExtract(workgroup_id, 76474, -71533)) : (1u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (true ? _GLF_IDENTITY(3u, max(3u, 3u)) : _GLF_FUZZED(workgroup_id)))))) >> _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), bool(bool(bool(bool((injectionSwitch.x > injectionSwitch.y)))))))) && true)) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, (3u) | (_GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, (3u) | (3u))) / 1u)))) | (3u)))))))))))) >> _GLF_IDENTITY(0u, max(0u, 0u)))) << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), 0u ^ (uint(4u))))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(4u, 4u))), (true ? uint(4u) : _GLF_FUZZED(workgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(4u)), min(_GLF_IDENTITY(uint(uint(4u)), min(uint(uint(4u)), uint(uint(4u)))), uint(uint(4u)))), 0u ^ (_GLF_IDENTITY(uint(uint(4u)), min(_GLF_IDENTITY(uint(uint(4u)), min(uint(uint(4u)), uint(uint(4u)))), uint(uint(4u))))))), (1u & (1u & 1u)) * (uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(4u)), (uint(uint(4u))) >> 0u), min(_GLF_IDENTITY(uint(uint(4u)), min(uint(uint(4u)), uint(_GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(4u), (uint(4u)) * 1u)), min(uint(_GLF_IDENTITY(uint(4u), (uint(4u)) * 1u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(4u), (uint(4u)) * 1u)), ~ (~ (uint(_GLF_IDENTITY(uint(4u), (uint(4u)) * 1u))))))))))))), (true ? uint(4u) : _GLF_FUZZED(workgroup_size)))) - 0u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, max(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(uvec3(workgroup_id, 1u, 1u)), min(uint(uvec3(workgroup_id, 1u, 1u)), uint(uvec3(workgroup_id, 1u, 1u)))))))) : _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (true ? uint(4u) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_FUZZED(workgroup_size)) | 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(uint(uint(4u)), min(_GLF_IDENTITY(uint(uint(4u)), min(uint(uint(4u)), uint(uint(4u)))), uint(uint(4u)))))), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec2(bool(bvec4(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true)))) ? _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(4u)) - 0u)) ^ 0u)) + _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u))), 0u + (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u | (0u))))))))) : _GLF_FUZZED(workgroup_size)))) - 0u)))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (3u) + 0u)), uint(3u))), ~ (~ ((1u << _GLF_IDENTITY(uint(3u), uint(3u)))))) >> _GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)), uint(uint(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(uint(3u), uint(3u))) / 1u), (false ? _GLF_FUZZED(_GLF_IDENTITY(bitfieldExtract(workgroup_id, 76474, -71533), (bitfieldExtract(workgroup_id, 76474, -71533)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) : (1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(3u, ~ (~ (3u))), (_GLF_IDENTITY(3u, (3u) | (3u))) | (3u)))))))))))) >> _GLF_IDENTITY(0u, max(0u, 0u)))) << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), 0u ^ (uint(4u))))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(4u, 4u))), (true ? uint(4u) : _GLF_FUZZED(workgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(uint(4u)), min(_GLF_IDENTITY(uint(uint(4u)), min(uint(uint(4u)), uint(uint(4u)))), uint(uint(4u))))), (1u & (1u & 1u)) * (uint(_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, min(4u, 4u)), 4u, 4u)))), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(4u)), min(uint(uint(4u)), uint(uint(4u)))), (_GLF_IDENTITY(uint(uint(4u)), min(uint(uint(4u)), uint(uint(4u))))) | 0u), uint(uint(4u)))))))), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), true, true)), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), true, true)), false || (bool(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), true, true)))))))) ? uint(4u) : _GLF_FUZZED(workgroup_size)))) - 0u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, 0u + (_GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u))), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (true ? uint(0u) : _GLF_FUZZED(workgroup_id)))))))), ~ (~ (workgroup_id))), _GLF_IDENTITY(workgroup_id, uint(uvec3(workgroup_id, 1u, 1u)))))) : _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (true ? uint(4u) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))), (_GLF_FUZZED(workgroup_size)) | 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(uint(4u), (uint(4u)) / 1u), (1u ^ 0u))), min(uint(uvec2(_GLF_IDENTITY(uint(4u), (uint(4u)) / 1u), (1u ^ 0u))), uint(uvec2(_GLF_IDENTITY(uint(4u), (uint(4u)) / 1u), (1u ^ 0u)))))), uint(_GLF_IDENTITY(uint(uint(4u)), min(_GLF_IDENTITY(uint(uint(4u)), min(uint(uint(_GLF_IDENTITY(4u, (0u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))))) | (4u)))), uint(uint(4u)))), uint(uint(4u)))))), (true ? _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(4u)) - 0u)) ^ 0u)) + _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) << 0u))) + (0u))) : _GLF_FUZZED(workgroup_size)))) - 0u)))), 0u | ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))), ~ (~ ((1u << _GLF_IDENTITY(uint(3u), uint(3u)))))) >> _GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)), uint(uint(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)), (false ? _GLF_FUZZED(bitfieldExtract(workgroup_id, 76474, -71533)) : (1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, (3u) | (3u))) | (3u)))))))))))) >> _GLF_IDENTITY(0u, max(0u, 0u)))) << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), 0u ^ (uint(4u)))), 0u + ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))), ((1u << _GLF_IDENTITY(uint(3u), uint(3u)))) | ((1u << _GLF_IDENTITY(uint(3u), uint(3u))))), ~ (~ ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), _GLF_IDENTITY(uint(3u), uint(uint(_GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u)))))))), uint(3u)))))) >> _GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)), (false ? _GLF_FUZZED(bitfieldExtract(workgroup_id, 76474, -71533)) : (1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, (3u) | (3u))) | (3u)))))))), min(_GLF_IDENTITY(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)), (false ? _GLF_FUZZED(bitfieldExtract(workgroup_id, 76474, -71533)) : (1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, (3u) | (3u))) | (3u)))))))), ~ (~ (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)), (false ? _GLF_FUZZED(bitfieldExtract(workgroup_id, 76474, -71533)) : (1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, (3u) | (3u))) | (3u))))))))))), _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)), (false ? _GLF_FUZZED(bitfieldExtract(workgroup_id, 76474, -71533)) : (1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, (3u) | (3u))) | (3u)))))))))))))) >> _GLF_IDENTITY(0u, max(0u, 0u)))) << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), 0u ^ (uint(4u))))))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(4u, 4u))), (true ? uint(4u) : _GLF_FUZZED(workgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(uint(4u)), min(_GLF_IDENTITY(uint(uint(4u)), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(4u), max(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), ~ (~ (uint(4u))))) + 0u)))), max(uint(_GLF_IDENTITY(uint(4u), max(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), ~ (~ (uint(4u))))) + 0u)))), uint(_GLF_IDENTITY(uint(4u), max(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), ~ (~ (uint(4u))))) + 0u)))))), uint(uint(4u)))), uint(uint(4u))))), (1u & (1u & 1u)) * (uint(_GLF_IDENTITY(uint(uint(4u)), min(_GLF_IDENTITY(uint(uint(4u)), min(uint(uint(4u)), uint(uint(4u)))), uint(uint(4u)))))))), (true ? uint(4u) : _GLF_FUZZED(workgroup_size)))) - 0u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, max(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), _GLF_IDENTITY(workgroup_id, uint(uvec3(workgroup_id, 1u, 1u)))))) : _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (true ? uint(4u) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_FUZZED(workgroup_size)) | 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(uint(uint(4u)), min(_GLF_IDENTITY(uint(uint(4u)), min(uint(uint(4u)), uint(uint(4u)))), uint(uint(4u)))))), (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, false || (true)))) ? _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), _GLF_IDENTITY((uint(4u)) - 0u, (true ? _GLF_IDENTITY((uint(4u)) - 0u, uint(uint((uint(4u)) - 0u))) : _GLF_FUZZED(uint(-2045.3561)))))) ^ 0u)) + _GLF_IDENTITY(0u, 0u + (0u))) : _GLF_FUZZED(workgroup_size)))) - 0u)))))), ((((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))) << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), 0u | (uint(2u))))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) * 1u)), uint(2u))), 0u)), (uint(uvec3(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))), ~ (~ ((1u << _GLF_IDENTITY(uint(3u), uint(3u)))))) >> _GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)), uint(uint(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, min(3u, _GLF_IDENTITY(3u, 0u ^ (3u))))), uint(3u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (3u) >> 0u)), (uint(_GLF_IDENTITY(3u, (3u) >> 0u))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(3u)), (_GLF_IDENTITY(false ? _GLF_FUZZED(bitfieldExtract(workgroup_id, 76474, -71533)) : (1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(_GLF_IDENTITY(3u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, (3u) | (3u))) | (3u)))), clamp(_GLF_IDENTITY(3u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, (3u) | (3u))) | (3u)))), _GLF_IDENTITY(3u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, (3u) | (3u))) | (3u)))), _GLF_IDENTITY(3u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, (3u) | (3u))) | (3u)))))))), 0u ^ (false ? _GLF_FUZZED(bitfieldExtract(workgroup_id, 76474, -71533)) : (1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(_GLF_IDENTITY(3u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, (3u) | (3u))) | (3u)))), clamp(_GLF_IDENTITY(3u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, (3u) | (3u))) | (3u)))), _GLF_IDENTITY(3u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, (3u) | (3u))) | (3u)))), _GLF_IDENTITY(3u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, (3u) | (3u))) | (3u)))))))))))))))) >> _GLF_IDENTITY(0u, max(0u, 0u)))) << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), 0u ^ (uint(4u))))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(4u, 4u))), (true ? uint(4u) : _GLF_FUZZED(workgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(uint(4u)), min(_GLF_IDENTITY(uint(uint(4u)), min(uint(uint(4u)), uint(uint(4u)))), uint(uint(4u))))), (1u & (1u & 1u)) * (uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(4u)), min(_GLF_IDENTITY(uint(uint(4u)), min(uint(uint(4u)), uint(uint(4u)))), uint(uint(4u)))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(uint(4u)), min(_GLF_IDENTITY(uint(uint(4u)), min(uint(uint(4u)), uint(uint(4u)))), uint(uint(4u)))), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))), clamp(uvec2(_GLF_IDENTITY(uint(uint(4u)), min(_GLF_IDENTITY(uint(uint(4u)), min(uint(uint(4u)), uint(uint(4u)))), uint(uint(4u)))), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))), uvec2(_GLF_IDENTITY(uint(uint(4u)), min(_GLF_IDENTITY(uint(uint(4u)), min(uint(uint(4u)), uint(uint(4u)))), uint(uint(4u)))), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))), uvec2(_GLF_IDENTITY(uint(uint(4u)), min(_GLF_IDENTITY(uint(uint(4u)), min(uint(uint(4u)), uint(uint(4u)))), uint(uint(4u)))), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))))))))))), (true ? uint(_GLF_IDENTITY(4u, (4u) ^ 0u)) : _GLF_FUZZED(workgroup_size)))) - 0u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, max(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), _GLF_IDENTITY(workgroup_id, uint(uvec3(workgroup_id, 1u, 1u)))))) : _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (true ? uint(4u) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_FUZZED(workgroup_size)) | 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(uint(uint(4u)), min(_GLF_IDENTITY(uint(uint(4u)), min(uint(_GLF_IDENTITY(uint(4u), clamp(uint(4u), uint(4u), uint(4u)))), uint(uint(4u)))), uint(uint(4u)))))), (true ? _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(4u)) - 0u)) ^ 0u)) + _GLF_IDENTITY(0u, 0u + (0u))) : _GLF_FUZZED(workgroup_size)))) - 0u)))), 0u | (((_GLF_IDENTITY(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, max(3u, 3u))) | (3u))), uint(3u))), ~ (~ ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), (true ? 1u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, 0u ^ (3u)))) : _GLF_FUZZED(workgroup_id))))))) >> _GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u)))), (false ? _GLF_FUZZED(bitfieldExtract(workgroup_id, 76474, -71533)) : (1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, (3u) | (3u))) | (3u))))))))), (uint(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u)))), (false ? _GLF_FUZZED(bitfieldExtract(workgroup_id, 76474, -71533)) : (1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, (3u) | (3u))) | (3u)))))))))) | 0u)))) >> _GLF_IDENTITY(0u, max(0u, 0u)))) << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(4u, 4u))), _GLF_IDENTITY(uint(4u), 0u ^ (uint(4u))))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(4u, 4u))), (true ? uint(_GLF_IDENTITY(4u, (4u) | (4u))) : _GLF_FUZZED(workgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(uint(4u)), min(_GLF_IDENTITY(uint(uint(4u)), min(uint(uint(4u)), uint(uint(4u)))), uint(uint(4u))))), (1u & (1u & 1u)) * (uint(_GLF_IDENTITY(uint(uint(4u)), min(_GLF_IDENTITY(uint(uint(4u)), _GLF_IDENTITY(min(uint(uint(4u)), uint(uint(4u))), min(min(uint(uint(4u)), uint(uint(4u))), min(uint(uint(4u)), uint(uint(4u)))))), uint(uint(4u)))))))), (true ? uint(4u) : _GLF_FUZZED(workgroup_size)))) - 0u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, max(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), _GLF_IDENTITY(workgroup_id, uint(uvec3(workgroup_id, 1u, 1u)))))) : _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (true ? uint(4u) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_FUZZED(workgroup_size)) | 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(uint(uint(4u)), _GLF_IDENTITY(min(_GLF_IDENTITY(uint(uint(4u)), min(uint(uint(4u)), uint(uint(4u)))), uint(uint(4u))), (_GLF_IDENTITY(min(_GLF_IDENTITY(uint(uint(4u)), min(uint(uint(4u)), uint(uint(4u)))), uint(uint(4u))), (min(_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(4u)), (_GLF_IDENTITY(uint(uint(4u)), (uint(uint(4u))) / 1u)) - 0u), min(uint(uint(4u)), uint(uint(4u)))), uint(uint(4u)))) - 0u)) + 0u)))), (true ? _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(4u)) - 0u)) ^ 0u)) + _GLF_IDENTITY(0u, 0u + (0u))) : _GLF_FUZZED(workgroup_size)))) - 0u)))))), ((((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (uint(6u)) + 0u), uint(6u))) << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), 0u | (uint(2u))))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 0u))) | (uint(uvec3(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))), ~ (~ ((1u << _GLF_IDENTITY(uint(3u), uint(3u)))))) >> _GLF_IDENTITY(uint(3u), uint(3u)), 0u ^ (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))), ~ (~ ((1u << _GLF_IDENTITY(uint(3u), uint(3u)))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)), uint(uint(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)), (false ? _GLF_FUZZED(bitfieldExtract(workgroup_id, 76474, -71533)) : _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, (3u) | (3u))) | (3u)))))), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) >> 0u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, (3u) | (3u))) | (3u))))))) / 1u))))))) >> _GLF_IDENTITY(0u, max(0u, 0u)))) << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), 0u ^ (uint(4u))))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(4u, 4u))), (true ? uint(4u) : _GLF_FUZZED(workgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(uint(4u)), min(_GLF_IDENTITY(uint(uint(4u)), min(uint(uint(4u)), uint(uint(4u)))), uint(uint(4u))))), (1u & (1u & 1u)) * (uint(_GLF_IDENTITY(uint(uint(4u)), min(_GLF_IDENTITY(uint(uint(4u)), min(uint(uint(4u)), uint(uint(4u)))), uint(uint(4u)))))))), (true ? uint(4u) : _GLF_FUZZED(workgroup_size)))) - 0u), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-8963.1274) : injectionSwitch.y)))) ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, max(_GLF_IDENTITY(workgroup_id, ~ (~ _GLF_IDENTITY((workgroup_id), (true ? (workgroup_id) : _GLF_FUZZED(workgroup_id))))), _GLF_IDENTITY(workgroup_id, uint(uvec3(workgroup_id, 1u, 1u)))))) : _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (true ? uint(4u) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_FUZZED(workgroup_size)) | 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(uint(uint(4u)), min(_GLF_IDENTITY(uint(uint(4u)), min(uint(uint(4u)), uint(uint(4u)))), uint(uint(4u)))))), (true ? _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(4u)) - 0u)) ^ 0u)) + _GLF_IDENTITY(0u, 0u + (0u))) : _GLF_FUZZED(workgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(uint(uint(4u)), min(_GLF_IDENTITY(uint(uint(4u)), min(uint(uint(_GLF_IDENTITY(4u, (4u) / 1u))), uint(uint(4u)))), uint(uint(4u)))))), (true ? _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(4u)) - 0u)) ^ 0u)) + _GLF_IDENTITY(0u, 0u + (0u))) : _GLF_FUZZED(workgroup_size)))) - 0u)) - 0u)))), 0u | (((_GLF_IDENTITY(_GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), (true ? _GLF_IDENTITY(uint(3u), uint(3u)) : _GLF_FUZZED(workgroup_size)))), ~ (~ ((1u << _GLF_IDENTITY(uint(3u), uint(3u)))))) >> _GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, max(3u, _GLF_IDENTITY(3u, clamp(3u, 3u, 3u))))))) >> _GLF_IDENTITY(uint(3u), uint(3u)), uint(uint(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))) ? _GLF_FUZZED(bitfieldExtract(workgroup_id, 76474, -71533)) : (1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, (3u) | (3u))) | (3u)))))))))))) >> _GLF_IDENTITY(0u, max(0u, 0u)))) << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(4u, 4u))), _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), clamp(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) | (uint(4u))), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), ~ (~ (uint(4u))))) / 1u))), 0u ^ (uint(4u))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(4u, 4u))), (true ? uint(4u) : _GLF_FUZZED(workgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(uint(4u)), min(_GLF_IDENTITY(uint(uint(4u)), min(uint(uint(4u)), uint(uint(4u)))), uint(uint(4u))))), (1u & (1u & 1u)) * (uint(_GLF_IDENTITY(uint(uint(4u)), min(_GLF_IDENTITY(uint(uint(4u)), min(uint(uint(4u)), uint(uint(4u)))), uint(uint(4u)))))))), (true ? uint(4u) : _GLF_FUZZED(workgroup_size)))) - 0u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, max(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), _GLF_IDENTITY(workgroup_id, uint(uvec3(workgroup_id, 1u, 1u)))))) : _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (true ? uint(4u) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_FUZZED(workgroup_size)) | 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(uint(uint(4u)), min(_GLF_IDENTITY(uint(uint(4u)), min(uint(uint(4u)), uint(uint(4u)))), uint(uint(4u)))))), (true ? _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(4u)) - 0u)) ^ 0u)) + _GLF_IDENTITY(0u, 0u + (0u))) : _GLF_FUZZED(workgroup_size)))) - 0u)))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(4u, 4u))), (true ? uint(4u) : _GLF_FUZZED(workgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u)))), min(_GLF_IDENTITY(uint(uint(4u)), min(uint(uint(4u)), uint(uint(4u)))), uint(uint(4u))))), (_GLF_IDENTITY(1u, (1u) - 0u) & (1u & 1u)) * (uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(4u)), (true ? uint(uint(4u)) : _GLF_FUZZED(27635u))), min(_GLF_IDENTITY(uint(uint(4u)), min(uint(uint(4u)), uint(uint(4u)))), uint(uint(_GLF_IDENTITY(4u, (4u) << 0u))))))))), (true ? uint(4u) : _GLF_FUZZED(workgroup_size)))) - 0u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, max(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), _GLF_IDENTITY(workgroup_id, uint(uvec3(workgroup_id, 1u, 1u)))))) : _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), _GLF_IDENTITY((true ? uint(4u) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_FUZZED(workgroup_size)) | 0u)), max(_GLF_IDENTITY((true ? uint(4u) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_FUZZED(workgroup_size)) | 0u)), clamp((true ? uint(4u) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_FUZZED(workgroup_size)) | 0u)), (true ? uint(4u) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_FUZZED(workgroup_size)) | 0u)), (true ? uint(4u) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_FUZZED(workgroup_size)) | 0u)))), (true ? uint(4u) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_FUZZED(workgroup_size)) | 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(uint(uint(4u)), min(_GLF_IDENTITY(uint(uint(4u)), min(uint(uint(4u)), uint(uint(4u)))), uint(uint(4u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(uint(uint(4u)), min(_GLF_IDENTITY(uint(uint(4u)), min(uint(uint(4u)), uint(uint(4u)))), uint(uint(4u)))))), (_GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(uint(uint(4u)), min(_GLF_IDENTITY(uint(uint(4u)), min(uint(uint(4u)), uint(uint(4u)))), uint(uint(4u))))))) | (_GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(uint(uint(4u)), min(_GLF_IDENTITY(uint(uint(4u)), min(uint(uint(4u)), uint(uint(4u)))), uint(uint(4u))))))))) | (_GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(uint(uint(4u)), min(_GLF_IDENTITY(uint(uint(4u)), min(uint(uint(4u)), uint(uint(4u)))), uint(uint(4u)))))))), _GLF_IDENTITY((true ? _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(4u)) - 0u)) ^ 0u)) + _GLF_IDENTITY(0u, 0u + (0u))) : _GLF_FUZZED(workgroup_size)), min((true ? _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(4u)) - 0u)) ^ 0u)) + _GLF_IDENTITY(0u, 0u + (0u))) : _GLF_FUZZED(workgroup_size)), (true ? _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(4u)) - 0u)) ^ 0u)) + _GLF_IDENTITY(0u, 0u + (0u))) : _GLF_FUZZED(workgroup_size)))))) - 0u)))))))), ((((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))) << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), 0u | (uint(2u))))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 0u)))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), bool(bvec2(_GLF_IDENTITY(((false)), bool(bvec3(((false)), false, false))), false))))), _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, ! (! (true))))), true && (_GLF_IDENTITY(bool(bool(true)), false || (bool(bool(true))))))), ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), false || ((true))))))), true && (_GLF_IDENTITY(bool(bool(true)), false || (_GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true))))))))))))) && (! (false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
  return;
 atomicStore(buf[virtual_gid], _GLF_IDENTITY(uint(1), clamp(_GLF_IDENTITY(uint(1), ~ _GLF_IDENTITY((~ (uint(1))), ((~ (uint(1)))) | ((~ (uint(1)))))), uint(1), uint(1))), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (64) * 1), (64) - 0), 4);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), ! (! (bool(false))))))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), true && (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))))))))
  return;
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(198.374), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float((ivec2(46845, 66209) != ivec2(10382, -50173))))), bvec2(true, false))).x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, max(_GLF_IDENTITY(64, (64) >> 0), _GLF_IDENTITY(64, 0 + (64)))), (_GLF_IDENTITY(_GLF_IDENTITY(64, max(_GLF_IDENTITY(64, (64) >> 0), _GLF_IDENTITY(64, 0 + (64)))), int(ivec2(_GLF_IDENTITY(64, max(_GLF_IDENTITY(64, (64) >> 0), _GLF_IDENTITY(64, 0 + (64)))), 0)))) | 0), 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_DEAD(false), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_DEAD(false), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false)))), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true))))))) || false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true))))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), (bool(bvec3(false, true, true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))) : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bool(bool(bool(false))), ! (! (bool(bool(bool(false)))))))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-8811.3017)), vec2(_GLF_FUZZED(-86.28), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), ! (! (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   subgroupAll(true);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
