#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_3 {
 bvec3 _f0;
 bool _f1;
 uvec4 _f2;
 mat4x2 _f3;
} ;

struct _GLF_struct_4 {
 vec4 _f0;
 bool _f1;
 _GLF_struct_3 _f2;
 uint subgroup_base;
} ;

struct _GLF_struct_2 {
 mat2 _f0;
} ;

struct _GLF_struct_0 {
 uvec4 _f0;
 uvec2 _f1;
 uvec3 _f2;
 bvec3 _f3;
 mat2 _f4;
} ;

struct _GLF_struct_1 {
 ivec2 _f0;
 _GLF_struct_0 _f1;
} ;

struct _GLF_struct_5 {
 _GLF_struct_1 _f0;
 mat3 _f1;
 _GLF_struct_2 _f2;
 _GLF_struct_4 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))))))) || false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, false || (false)), false, false))))))))), bool(bvec3(false, false, true)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))) || false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))))).y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), (bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))) || false))))))) && true), false, true)))), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))))).y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), (bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))) || false))))))) && true), false, true)))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) || _GLF_IDENTITY(false, ! (! (false))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))
    return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(float(mat4(injectionSwitch.x, sqrt(sin(0.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, sin(0.0), determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 1.0, 1.0, tan(0.0), 1.0)), mix(_GLF_IDENTITY(float(float(mat4(injectionSwitch.x, sqrt(sin(0.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, sin(0.0), determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 1.0, 1.0, tan(0.0), 1.0))), (float(float(mat4(injectionSwitch.x, sqrt(sin(0.0)), 0.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, exp(0.0)), (true ? mat2(1.0, 0.0, 0.0, exp(0.0)) : _GLF_FUZZED(mat2(4.9, 7.5, -41.08, 4703.5555)))))), _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0, sin(0.0), determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 1.0, 1.0, tan(0.0), 1.0)))) / 1.0), float(_GLF_FUZZED(-6.5)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))) || false))), max(_GLF_IDENTITY(float(mat4(injectionSwitch.x, sqrt(_GLF_IDENTITY(_GLF_IDENTITY(sin(0.0), clamp(_GLF_IDENTITY(sin(0.0), float(_GLF_IDENTITY(mat4(sin(0.0), sqrt(1.0), 1.0, 1.0, 1.0, 0.0, 1.0, log(abs(1.0)), 1.0, 1.0, 1.0, 0.0, sin(0.0), 0.0, 1.0, 0.0), transpose(transpose(mat4(sin(0.0), sqrt(1.0), 1.0, 1.0, 1.0, 0.0, 1.0, log(abs(1.0)), 1.0, 1.0, 1.0, 0.0, sin(0.0), 0.0, 1.0, 0.0)))))), sin(0.0), _GLF_IDENTITY(sin(0.0), max(sin(0.0), sin(0.0))))), mix(float(_GLF_FUZZED(-7568.7224)), float(_GLF_IDENTITY(_GLF_IDENTITY(sin(0.0), clamp(sin(0.0), sin(0.0), _GLF_IDENTITY(sin(0.0), max(sin(0.0), sin(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(dot(mix(vec3(-60.67, 4389.6387, -0.2), vec3(-51.11, -1.8, 8595.1002), bvec3(true, false, false)), vec3(5.7, 8302.5189, 3734.5765)))))))))), max(_GLF_IDENTITY(sin(0.0), clamp(sin(0.0), sin(0.0), _GLF_IDENTITY(sin(0.0), max(sin(0.0), sin(0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(sin(0.0), clamp(sin(0.0), sin(0.0), _GLF_IDENTITY(sin(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(0.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.8) : 1.0)), 1.0, 0.0, 1.0), (mat3x2(0.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.8) : 1.0)), 1.0, 0.0, 1.0)) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), max(sin(0.0), sin(0.0))))), (false ? _GLF_FUZZED(-3.2) : _GLF_IDENTITY(sin(0.0), clamp(sin(0.0), sin(0.0), _GLF_IDENTITY(sin(0.0), max(sin(0.0), sin(0.0)))))))))), bool(true)))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, sin(0.0), determinant(mat2(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0)), 0.0, 0.0, 1.0, 1.0, tan(0.0), 1.0)), _GLF_IDENTITY(mix(float(float(mat4(injectionSwitch.x, sqrt(sin(0.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, sin(0.0), determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 1.0, 1.0, tan(0.0), 1.0))), float(_GLF_FUZZED(-6.5)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y)))), max(mix(float(float(mat4(injectionSwitch.x, sqrt(sin(0.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, sin(0.0), determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 1.0, 1.0, tan(0.0), 1.0))), float(_GLF_FUZZED(-6.5)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y)))), mix(float(float(mat4(injectionSwitch.x, sqrt(sin(0.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, sin(0.0), determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 1.0, 1.0, tan(0.0), 1.0))), float(_GLF_FUZZED(-6.5)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))))))), _GLF_IDENTITY(float(mat4(injectionSwitch.x, sqrt(sin(_GLF_IDENTITY(0.0, float(mat4(_GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 1.0, exp(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(0.0), 0.0, 1.0, 1.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0, 0.0))))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, sin(0.0), _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), min(_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 1.0, 0.0)), (determinant(mat2(0.0, 0.0, 1.0, 0.0))) / _GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(determinant(mat2(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, float(mat3x2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(135.465)), float(0.0), bool(true)))) - 0.0), 0.0, 1.0, 1.0, 0.0, 1.0))))), 1.0), min(vec2(determinant(mat2(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, float(mat3x2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(135.465)), float(0.0), bool(true)))) - 0.0), 0.0, 1.0, 1.0, 0.0, 1.0))))), 1.0), vec2(determinant(mat2(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, float(mat3x2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(135.465)), float(0.0), bool(true)))) - 0.0), 0.0, 1.0, 1.0, 0.0, 1.0))))), 1.0)))), max(float(vec2(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0)), float(vec2(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0))))))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, tan(0.0), 1.0)), _GLF_IDENTITY(mix(float(float(mat4(injectionSwitch.x, sqrt(sin(0.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, sin(0.0), determinant(_GLF_IDENTITY(mat2(0.0, 0.0, 1.0, 0.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(0.0, 0.0, 1.0, 0.0)))), 0.0, 0.0, 1.0, 1.0, tan(0.0), 1.0))), _GLF_IDENTITY(float(_GLF_FUZZED(-6.5)), (float(_GLF_FUZZED(-6.5))) + 0.0), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mix(float(_GLF_FUZZED(551.281)), float(mix(float(float(mat4(injectionSwitch.x, sqrt(_GLF_IDENTITY(sin(0.0), max(sin(0.0), _GLF_IDENTITY(sin(0.0), max(sin(0.0), _GLF_IDENTITY(sin(0.0), mix(float(_GLF_FUZZED(4513.3052)), float(sin(0.0)), bool(true)))))))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, sin(0.0), determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 1.0, 1.0, tan(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((+ 0.4))), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))), 1.0))), float(_GLF_FUZZED(-6.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(true))))))) > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat3x4(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(3.0))), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, abs(abs(1.0)), 1.0, 0.0))), injectionSwitch[1])).y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(float(mat4(injectionSwitch.x, sqrt(sin(0.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, sin(0.0), determinant(mat2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(5.3)), float(0.0), bool(true))), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(cosh(4701.2543)) : 0.0)), 1.0, 0.0)), 0.0, 0.0, 1.0, 1.0, tan(0.0), 1.0)), mix(_GLF_IDENTITY(float(float(mat4(injectionSwitch.x, sqrt(sin(0.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, sin(0.0), determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 1.0, 1.0, tan(0.0), 1.0))), (float(float(mat4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), sqrt(sin(0.0)), 0.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(4619.9773) : 0.0)), 0.0, exp(0.0)), (true ? mat2(1.0, 0.0, 0.0, exp(0.0)) : _GLF_FUZZED(mat2(4.9, 7.5, -41.08, 4703.5555)))))), _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0, sin(0.0), determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0, tan(0.0), 1.0)))) / 1.0), float(_GLF_FUZZED(-6.5)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec2(-38.28, -716.150).t)), float(_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 0.0, 1.0, sin(0.0))))), bool(true))))))))) || false))), max(_GLF_IDENTITY(float(mat4(injectionSwitch.x, sqrt(_GLF_IDENTITY(_GLF_IDENTITY(sin(0.0), clamp(_GLF_IDENTITY(sin(0.0), float(_GLF_IDENTITY(mat4(sin(0.0), sqrt(1.0), 1.0, 1.0, 1.0, 0.0, 1.0, log(abs(1.0)), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)))), 1.0, 1.0, 0.0, sin(0.0), 0.0, 1.0, 0.0), transpose(transpose(mat4(sin(0.0), sqrt(1.0), 1.0, 1.0, 1.0, 0.0, 1.0, log(abs(1.0)), 1.0, 1.0, 1.0, 0.0, sin(0.0), 0.0, 1.0, 0.0)))))), sin(0.0), _GLF_IDENTITY(sin(0.0), max(sin(0.0), sin(0.0))))), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-7568.7224), min(_GLF_IDENTITY(_GLF_FUZZED(-7568.7224), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(-7568.7224), min(_GLF_FUZZED(-7568.7224), _GLF_FUZZED(-7568.7224))))), _GLF_IDENTITY(_GLF_FUZZED(-7568.7224), min(_GLF_FUZZED(-7568.7224), _GLF_IDENTITY(_GLF_FUZZED(-7568.7224), float(mat2(_GLF_FUZZED(-7568.7224), 1.0, 1.0, 0.0)))))))), float(_GLF_IDENTITY(_GLF_IDENTITY(sin(0.0), clamp(_GLF_IDENTITY(sin(0.0), min(sin(0.0), sin(0.0))), sin(0.0), _GLF_IDENTITY(sin(0.0), max(sin(0.0), sin(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(dot(mix(vec3(-60.67, 4389.6387, -0.2), vec3(-51.11, -1.8, 8595.1002), bvec3(true, false, false)), vec3(5.7, 8302.5189, 3734.5765)))))))))), max(_GLF_IDENTITY(sin(0.0), clamp(sin(0.0), sin(0.0), _GLF_IDENTITY(sin(0.0), max(sin(0.0), sin(0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(sin(0.0), clamp(sin(0.0), sin(0.0), _GLF_IDENTITY(_GLF_IDENTITY(sin(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(0.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.8) : 1.0)), 1.0, 0.0, 1.0), (mat3x2(0.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.8) : 1.0)), 1.0, 0.0, 1.0)) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), float(mat2(sin(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(0.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.8) : 1.0)), 1.0, 0.0, 1.0), (mat3x2(0.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.8) : 1.0)), 1.0, 0.0, 1.0)) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), sin(0.0), 0.0, exp(0.0)))), max(sin(0.0), sin(0.0))))), (false ? _GLF_FUZZED(-3.2) : _GLF_IDENTITY(sin(0.0), clamp(sin(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0))), sin(0.0), _GLF_IDENTITY(sin(0.0), max(sin(0.0), sin(0.0)))))))))), bool(true)))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, sin(0.0), determinant(mat2(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) - 0.0), 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 0.0, 1.0, 1.0, tan(0.0), 1.0)), _GLF_IDENTITY(mix(float(float(mat4(injectionSwitch.x, sqrt(sin(0.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, sin(0.0), determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-5426.2629) : _GLF_IDENTITY(1.0, (1.0) - 0.0))), tan(0.0), 1.0))), float(_GLF_IDENTITY(_GLF_FUZZED(-6.5), float(float(_GLF_IDENTITY(_GLF_FUZZED(-6.5), (true ? _GLF_FUZZED(-6.5) : _GLF_FUZZED(-2.6))))))), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y)))), max(mix(float(float(mat4(injectionSwitch.x, sqrt(sin(0.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, sin(0.0), determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 1.0, 1.0, tan(0.0), 1.0))), float(_GLF_FUZZED(-6.5)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), mix(float(float(mat4(injectionSwitch.x, sqrt(sin(0.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, sin(_GLF_IDENTITY(0.0, max(0.0, 0.0))), determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 1.0, 1.0, tan(_GLF_IDENTITY(0.0, (0.0) / 1.0)), 1.0))), _GLF_IDENTITY(float(_GLF_FUZZED(-6.5)), min(_GLF_IDENTITY(float(_GLF_FUZZED(-6.5)), clamp(_GLF_IDENTITY(float(_GLF_FUZZED(-6.5)), 0.0 + (float(_GLF_FUZZED(-6.5)))), float(_GLF_FUZZED(-6.5)), float(_GLF_FUZZED(-6.5)))), float(_GLF_FUZZED(-6.5)))), bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))))))), _GLF_IDENTITY(float(mat4(injectionSwitch.x, sqrt(sin(_GLF_IDENTITY(0.0, float(mat4(_GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 1.0, exp(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(0.0), 0.0, 1.0, 1.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0, 0.0))))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, sin(0.0), _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), min(_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 1.0, 0.0)), (determinant(mat2(0.0, 0.0, 1.0, 0.0))) / _GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(determinant(mat2(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, float(mat3x2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(135.465)), float(0.0), bool(true)))) - 0.0), 0.0, 1.0, 1.0, 0.0, 1.0))))), 1.0), min(vec2(determinant(mat2(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, float(mat3x2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(135.465)), float(0.0), bool(true)))) - 0.0), 0.0, 1.0, 1.0, 0.0, 1.0))))), 1.0), vec2(determinant(mat2(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, float(mat3x2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(135.465)), float(0.0), bool(true)))) - 0.0), 0.0, 1.0, 1.0, 0.0, 1.0))))), 1.0)))), max(float(vec2(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0)), float(vec2(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0))))))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, tan(0.0), 1.0)), _GLF_IDENTITY(mix(float(float(mat4(injectionSwitch.x, sqrt(sin(0.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, sin(0.0), determinant(_GLF_IDENTITY(_GLF_IDENTITY(mat2(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, float(vec2(0.0, 1.0)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(transpose((mat3x2(-7.3, -62.16, 60.89, 3.5, 310.442, 128.698) * mat2x3(92.78, -6.2, 3.3, 23.11, 8003.6254, 10.60)))) : mat2(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, float(vec2(0.0, 1.0)))))), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(0.0, 0.0, 1.0, 0.0)))), 0.0, 0.0, 1.0, 1.0, tan(0.0), 1.0))), _GLF_IDENTITY(float(_GLF_FUZZED(-6.5)), (float(_GLF_FUZZED(-6.5))) + 0.0), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mix(float(_GLF_FUZZED(551.281)), float(_GLF_IDENTITY(mix(float(float(mat4(injectionSwitch.x, sqrt(_GLF_IDENTITY(sin(0.0), max(sin(0.0), _GLF_IDENTITY(sin(0.0), max(sin(0.0), _GLF_IDENTITY(sin(0.0), mix(float(_GLF_FUZZED(4513.3052)), float(sin(0.0)), bool(true)))))))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, sin(0.0), determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 1.0, 1.0, tan(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((+ 0.4))), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))), 1.0))), float(_GLF_FUZZED(-6.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (false ? _GLF_FUZZED(round(-7.9)) : _GLF_IDENTITY(mix(float(float(mat4(injectionSwitch.x, sqrt(_GLF_IDENTITY(sin(0.0), max(sin(0.0), _GLF_IDENTITY(sin(0.0), max(sin(0.0), _GLF_IDENTITY(sin(0.0), mix(float(_GLF_FUZZED(4513.3052)), float(sin(0.0)), bool(true)))))))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, sin(0.0), determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 1.0, 1.0, tan(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((+ 0.4))), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))), 1.0))), float(_GLF_FUZZED(-6.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(mix(float(float(mat4(injectionSwitch.x, sqrt(_GLF_IDENTITY(sin(0.0), max(sin(0.0), _GLF_IDENTITY(sin(0.0), max(sin(0.0), _GLF_IDENTITY(sin(0.0), mix(float(_GLF_FUZZED(4513.3052)), float(sin(0.0)), bool(true)))))))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, sin(0.0), determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 1.0, 1.0, tan(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((+ 0.4))), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))), 1.0))), float(_GLF_FUZZED(-6.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), max(mix(float(float(mat4(injectionSwitch.x, sqrt(_GLF_IDENTITY(sin(0.0), max(sin(0.0), _GLF_IDENTITY(sin(0.0), max(sin(0.0), _GLF_IDENTITY(sin(0.0), mix(float(_GLF_FUZZED(4513.3052)), float(sin(0.0)), bool(true)))))))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, sin(0.0), determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 1.0, 1.0, tan(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((+ 0.4))), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))), 1.0))), float(_GLF_FUZZED(-6.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mix(float(float(mat4(injectionSwitch.x, sqrt(_GLF_IDENTITY(sin(0.0), max(sin(0.0), _GLF_IDENTITY(sin(0.0), max(sin(0.0), _GLF_IDENTITY(sin(0.0), mix(float(_GLF_FUZZED(4513.3052)), float(sin(0.0)), bool(true)))))))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, sin(0.0), determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 1.0, 1.0, tan(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((+ 0.4))), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))), 1.0))), float(_GLF_FUZZED(-6.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) + 0.0)))), bool(true))))))) > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat3x4(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY((true ? injectionSwitch[0] : _GLF_FUZZED(3.0)), ((true ? injectionSwitch[0] : _GLF_FUZZED(3.0))) / 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, abs(abs(1.0)), 1.0, 0.0))), injectionSwitch[1])).y)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), (_GLF_IDENTITY((0u) | (0u), (_GLF_IDENTITY((0u) | (0u), uint(uvec2((0u) | (0u), 1u)))) >> 0u)) | ((0u) | (0u))))))), ((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) | (0u)))))) - uvec3(0u, 0u, 0u)) << (uvec3(1u, 1u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_size) : 1u))) ^ _GLF_IDENTITY(uvec3(1u, 1u, 1u), (_GLF_IDENTITY(uvec3(1u, 1u, 1u), min(uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u)))) * uvec3(1u, 1u, _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, (1u) | (1u)) : _GLF_FUZZED(13937u))))))), min(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) << uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) << uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u)))) << (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u))) << (uvec3(1u, 1u, _GLF_IDENTITY(1u, (1u) * 1u)) ^ uvec3(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, uint(uvec3(1u, 1u, (1u | 1u)))), 1u)), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u))), uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u))))))) << (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))))), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u)), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u)), clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u))))) << (uvec3(1u, 1u, 1u) ^ uvec3(_GLF_IDENTITY(1u, (0u << _GLF_IDENTITY(uint(1u), uint(1u))) | (_GLF_IDENTITY(1u, (1u) >> 0u))), 1u, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u))) << (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))), (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u)), min(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u)), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (true ? uvec3(0u, 0u, 0u) : _GLF_FUZZED(uvec3(114804u, 46400u, 121957u)))) | (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize), (uvec3(0u, 0u, 0u) & uvec3(49641u, 158275u, 197922u)) | ((gl_WorkGroupSize))) << uvec3(0u, 0u, 0u)))), 0u), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u)))), 0u)) >> uvec4(0u, 0u, 0u, 0u))))))) << (uvec3(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))), _GLF_IDENTITY(1u, (1u) * 1u))), _GLF_IDENTITY(1u, 0u ^ (1u)), _GLF_IDENTITY(1u, (1u) | 0u)) ^ uvec3(1u, 1u, 1u)))) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | uvec3(0u, 0u, 0u))) << uvec3(0u, 0u, 0u))) << (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))))), _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u))) << (_GLF_IDENTITY(uvec3(1u, 1u, 1u), min(_GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) | (_GLF_IDENTITY(uvec3(1u, 1u, 1u), _GLF_IDENTITY((uvec3(1u, 1u, 1u)) | uvec3(0u, 0u, 0u), ((uvec3(_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, min(1u, 1u)))) : _GLF_FUZZED(subgroup_size))), 1u, 1u)) | uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u))))), uvec3(1u, 1u, 1u))) ^ uvec3(_GLF_IDENTITY(1u, uint(uint(1u))), 1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(0u ^ (1u), max(0u ^ (1u), 0u ^ (1u))))))))), (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((false ? _GLF_FUZZED(min(_GLF_IDENTITY(uvec3(130601u, 66292u, 44068u), uvec3(uvec4(_GLF_IDENTITY(uvec3(130601u, 66292u, 44068u), (false ? _GLF_FUZZED(bitfieldReverse(uvec3(49590u, 91155u, 163141u))) : uvec3(130601u, 66292u, 44068u))), 1u))), uvec3(30840u, 16410u, 8372u))) : gl_WorkGroupSize), ((false ? _GLF_FUZZED(min(uvec3(130601u, 66292u, 44068u), uvec3(30840u, 16410u, 8372u))) : gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))), _GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) * _GLF_IDENTITY(uvec3(1u, 1u, 1u), _GLF_IDENTITY((uvec3(1u, 1u, 1u)), ((uvec3(1u, 1u, 1u))) / uvec3(1u, 1u, 1u)) ^ uvec3(0u, 0u, 0u))) << _GLF_IDENTITY(uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(78685u, 135340u, 20520u)) : uvec3(0u, 0u, 0u))))) << (uvec3(1u, 1u, 1u) ^ uvec3(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u, 1u)))) >> uvec3(0u, 0u, 0u)))).x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(_GLF_IDENTITY(injectionSwitch.y, float(mat2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec3(0.0, length(vec2(0.0, 0.0)), 1.0), vec3(0.0, 0.0, 0.0) + (vec3(0.0, length(vec2(0.0, 0.0)), 1.0))))), exp(0.0), 1.0))), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, length(vec2(0.0, 0.0)))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), true, true, false))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))), true && (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))), ! (! (bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))))))))), false, _GLF_IDENTITY(true, bool(bvec3(true, false, false))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(injectionSwitch.x, log(1.0), tan(0.0)), vec3(mat2x4(vec3(injectionSwitch.x, log(1.0), tan(0.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0))))))) > injectionSwitch.y))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false, true))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_size, uint(uint(_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(num_workgroup) : workgroup_size))))), _GLF_IDENTITY(workgroup_size, 1u * (workgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, uint(uint(_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(num_workgroup) : workgroup_size))))), (_GLF_IDENTITY(workgroup_size, uint(uint(_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(num_workgroup) : workgroup_size)))))) >> 0u), _GLF_IDENTITY(workgroup_size, 1u * (workgroup_size))), (min(_GLF_IDENTITY(workgroup_size, uint(uint(_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, 0u ^ (num_workgroup))) : workgroup_size))))), _GLF_IDENTITY(workgroup_size, 1u * (workgroup_size)))) | (_GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_size, uint(uint(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : workgroup_size, max(false ? _GLF_FUZZED(num_workgroup) : workgroup_size, false ? _GLF_FUZZED(num_workgroup) : workgroup_size))))))), _GLF_IDENTITY(workgroup_size, 1u * _GLF_IDENTITY((workgroup_size), 0u + ((workgroup_size))))), uint(uint(min(_GLF_IDENTITY(workgroup_size, uint(uint(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(num_workgroup) : workgroup_size))))), _GLF_IDENTITY(workgroup_size, 1u * (workgroup_size)))))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_size, uint(uint(_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(num_workgroup) : workgroup_size))))), _GLF_IDENTITY(workgroup_size, 1u * (workgroup_size))), (min(_GLF_IDENTITY(workgroup_size, uint(uint(_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, 0u ^ (num_workgroup))) : workgroup_size))))), _GLF_IDENTITY(workgroup_size, 1u * (workgroup_size)))) | (_GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_size, uint(uint(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(num_workgroup) : workgroup_size))))), _GLF_IDENTITY(workgroup_size, 1u * _GLF_IDENTITY((workgroup_size), _GLF_IDENTITY(0u, (0u) - 0u) + ((workgroup_size))))), uint(uint(min(_GLF_IDENTITY(workgroup_size, uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(num_workgroup) : workgroup_size)), min(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(num_workgroup) : workgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(num_workgroup) : workgroup_size)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(num_workgroup) : workgroup_size)), 1u * (_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(num_workgroup) : workgroup_size)))), _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(num_workgroup) : workgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(num_workgroup) : workgroup_size)), ~ (~ (_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(num_workgroup) : workgroup_size)))))))))))), _GLF_IDENTITY(workgroup_size, 1u * (workgroup_size)))))))), min(_GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_size, uint(uint(_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(num_workgroup) : workgroup_size))))), _GLF_IDENTITY(workgroup_size, 1u * (workgroup_size))), (min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, uint(uint(_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, 0u ^ (num_workgroup))) : workgroup_size))))), ~ (~ (_GLF_IDENTITY(workgroup_size, uint(uint(_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, 0u ^ (num_workgroup))) : workgroup_size)))))))), _GLF_IDENTITY(workgroup_size, 1u * (workgroup_size)))) | (_GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_size, uint(uint(_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(num_workgroup) : workgroup_size))))), _GLF_IDENTITY(workgroup_size, 1u * _GLF_IDENTITY((workgroup_size), 0u + ((_GLF_IDENTITY(workgroup_size, clamp(_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u), workgroup_size, _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size))))))))), _GLF_IDENTITY(uint(uint(min(_GLF_IDENTITY(workgroup_size, uint(uint(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(num_workgroup) : workgroup_size))))), _GLF_IDENTITY(workgroup_size, 1u * (workgroup_size))))), max(uint(uint(min(_GLF_IDENTITY(workgroup_size, uint(uint(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(num_workgroup) : workgroup_size))))), _GLF_IDENTITY(workgroup_size, 1u * (workgroup_size))))), uint(uint(min(_GLF_IDENTITY(workgroup_size, uint(uint(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(num_workgroup) : workgroup_size))))), _GLF_IDENTITY(workgroup_size, 1u * (workgroup_size)))))))))), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, uint(uint(_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(num_workgroup) : workgroup_size))))), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, uint(uint(_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(num_workgroup) : workgroup_size))))), (_GLF_IDENTITY(workgroup_size, uint(uint(_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(num_workgroup) : workgroup_size)))))) >> 0u), _GLF_IDENTITY(workgroup_size, uint(uint(_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(num_workgroup) : workgroup_size))))))), _GLF_IDENTITY(workgroup_size, 1u * (workgroup_size))), (min(_GLF_IDENTITY(workgroup_size, uint(uint(_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, 0u ^ (num_workgroup))) : workgroup_size))))), _GLF_IDENTITY(workgroup_size, 1u * (workgroup_size)))) | (_GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_size, uint(uint(_GLF_IDENTITY(workgroup_size, (false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), 0u + (_GLF_FUZZED(num_workgroup))) : workgroup_size))))), _GLF_IDENTITY(workgroup_size, 1u * _GLF_IDENTITY((workgroup_size), 0u + ((workgroup_size))))), uint(uint(min(_GLF_IDENTITY(workgroup_size, uint(uint(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(num_workgroup) : workgroup_size))))), _GLF_IDENTITY(workgroup_size, 1u * (workgroup_size))))))))))))) - 0u)) * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(_GLF_struct_1(_GLF_IDENTITY(ivec2(1), (ivec2(1)) ^ ivec2(0, _GLF_IDENTITY(0, (0) ^ (0 >> _GLF_IDENTITY(int(8), int(8)))))), _GLF_struct_0(_GLF_IDENTITY(uvec4(1u), min(uvec4(1u), uvec4(1u))), uvec2(1u), _GLF_IDENTITY(uvec3(1u), (uvec3(1u)) / uvec3(1u, _GLF_IDENTITY(1u, 0u ^ (1u)), 1u)), bvec3(true), _GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), vec2(vec3((injectionSwitch) / vec2(1.0, 1.0), cos(0.0))))))).y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch)))))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch, exp(vec2(0.0, 0.0)) * (injectionSwitch)).y)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, sin(0.0)), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, sin(0.0)), vec4(1.0, 1.0, 0.0, 1.0))), determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-0.1)), bool(false))), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(float(workgroup_id)) : 0.0)), 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0)), (float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), sin(0.0)), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, sin(0.0)), vec4(1.0, 1.0, 0.0, 1.0))), determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0))) - 0.0))), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y, _GLF_IDENTITY(1.0 * (injectionSwitch.y), clamp(1.0 * (injectionSwitch.y), 1.0 * (injectionSwitch.y), 1.0 * (injectionSwitch.y))))) / exp(0.0))))))))), mat3(1.0), _GLF_struct_2(_GLF_IDENTITY(mat2(1.0), (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(30.69)), bool(false))) > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(30.69)), bool(false))) > injectionSwitch.y, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) ? _GLF_FUZZED(mat2(mat2x3(3.0, -41.84, 9.5, 6147.0016, -909.149, 7.0))) : _GLF_IDENTITY(mat2(1.0), mat2(mat3(mat2(1.0))))))), _GLF_struct_4(vec4(1.0), true, _GLF_struct_3(bvec3(true), true, _GLF_IDENTITY(uvec4(1u), uvec4(0u, 0u, 0u, 0u) | (uvec4(1u))), mat4x2(1.0)), subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), uint(uvec2(~ (subgroup_size), 1u)))))));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_5._f3.subgroup_base, (workgroup_base + _GLF_struct_replacement_5._f3.subgroup_base) << 0u) + _GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)), (~ (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) | 0u, _GLF_IDENTITY(((subgroup_local_id) | 0u), (_GLF_IDENTITY(((subgroup_local_id) | 0u), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id) | 0u, min((subgroup_local_id) | 0u, (subgroup_local_id) | 0u))), ((_GLF_IDENTITY((subgroup_local_id) | 0u, min((subgroup_local_id) | 0u, (subgroup_local_id) | 0u)))) | 0u)))) << 0u) / (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), min((1u), (1u))) / 1u) ^ 0u))))) >> 0u)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)) ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), ((workgroup_base)) * 1u) | 0u), uint(uvec3(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u), 1u, 1u))) : _GLF_FUZZED(workgroup_size))) + _GLF_struct_replacement_5._f3.subgroup_base + ((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id))), _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), subgroup_local_id)) + 1) % subgroup_size);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2894.0330) : injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2894.0330) : injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2894.0330) : injectionSwitch.y)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6.3)), float(injectionSwitch.y), bool(true))), (false ? _GLF_FUZZED(2894.0330) : injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2894.0330) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(0.6)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false))))))), mix(float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)) ? _GLF_FUZZED(2894.0330) : injectionSwitch.y))), float(_GLF_FUZZED(7.4)), bool(false)))))) / 1.0))), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) / vec2(1.0, 1.0)), clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), min(_GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), (true ? (injectionSwitch) / vec2(1.0, 1.0) : _GLF_FUZZED(vec2(2433.8540, -72.62)))), (injectionSwitch) / vec2(1.0, 1.0)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) / vec2(1.0, 1.0)), clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), min(_GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), (true ? (injectionSwitch) / vec2(1.0, 1.0) : _GLF_FUZZED(vec2(2433.8540, -72.62)))), (injectionSwitch) / vec2(1.0, 1.0)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) / vec2(1.0, 1.0)), clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), min(_GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), (true ? (injectionSwitch) / vec2(1.0, 1.0) : _GLF_FUZZED(vec2(2433.8540, -72.62)))), (injectionSwitch) / vec2(1.0, 1.0)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) / vec2(1.0, 1.0)), clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), min(_GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), (true ? (injectionSwitch) / vec2(1.0, 1.0) : _GLF_FUZZED(vec2(2433.8540, -72.62)))), (injectionSwitch) / vec2(1.0, 1.0)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) / vec2(1.0, 1.0)), clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), min(_GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), (true ? (injectionSwitch) / vec2(1.0, 1.0) : _GLF_FUZZED(vec2(2433.8540, -72.62)))), (injectionSwitch) / vec2(1.0, 1.0)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) / vec2(1.0, 1.0)), clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), min(_GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), (true ? (injectionSwitch) / vec2(1.0, 1.0) : _GLF_FUZZED(vec2(2433.8540, -72.62)))), (injectionSwitch) / vec2(1.0, 1.0)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x)))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), min(_GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), (true ? (injectionSwitch) / vec2(1.0, 1.0) : _GLF_FUZZED(vec2(2433.8540, -72.62)))), (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(441.431) : 1.0)))), 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), mat2(1.0) * (mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), 1.0)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), min(_GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), (true ? (injectionSwitch) / vec2(1.0, 1.0) : _GLF_FUZZED(vec2(2433.8540, -72.62)))), (injectionSwitch) / vec2(1.0, 1.0)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(radians(26.91)))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))) / vec2(1.0, 1.0)))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)), clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), min(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0), (true ? (injectionSwitch) / vec2(1.0, 1.0) : _GLF_FUZZED(vec2(2433.8540, -72.62)))), (injectionSwitch) / vec2(1.0, 1.0)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), vec2(1.0, 1.0)))), clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), min(_GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), (true ? _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), min(_GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), mix(vec2(((injectionSwitch) / vec2(1.0, 1.0))[0], ((injectionSwitch) / vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(-9.5), _GLF_FUZZED(1.6)), bvec2(false, false))), _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), clamp((injectionSwitch) / vec2(1.0, 1.0), (injectionSwitch) / vec2(1.0, 1.0), (injectionSwitch) / vec2(1.0, 1.0))))) : _GLF_IDENTITY(_GLF_FUZZED(vec2(2433.8540, -72.62)), min(_GLF_FUZZED(vec2(2433.8540, -72.62)), _GLF_FUZZED(vec2(2433.8540, -72.62)))))), (injectionSwitch) / vec2(1.0, 1.0)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x)) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))) ? _GLF_FUZZED(2894.0330) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))) || false)), false, false)), bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(2894.0330) : injectionSwitch.y))))), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(2894.0330) : injectionSwitch.y))))), false, false), true)))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if((subgroup_local_id % 2) == 0)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true)), true && (_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true)), (bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)).x > injectionSwitch.y)), false, false, true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, true)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))) || false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), false || (_GLF_IDENTITY(! (false), (! (_GLF_IDENTITY(false, ! (! (false))))) || false))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(2), _GLF_IDENTITY((197592u & 0u), (false ? _GLF_FUZZED(subgroup_local_id) : (_GLF_IDENTITY(_GLF_IDENTITY(197592u, (true ? 197592u : _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(197592u, (true ? 197592u : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), min(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id)))))) * 1u) & 0u))) ^ (_GLF_IDENTITY(uint(2), _GLF_IDENTITY(_GLF_IDENTITY((uint(_GLF_IDENTITY(2, ~ (~ (_GLF_IDENTITY(2, ~ (~ (_GLF_IDENTITY(2, (false ? _GLF_FUZZED(76304) : 2)))))))))), (0u & 107281u) ^ ((uint(_GLF_IDENTITY(2, ~ (~ (2))))))) << 0u, (_GLF_IDENTITY(_GLF_IDENTITY((uint(_GLF_IDENTITY(2, ~ (~ (_GLF_IDENTITY(2, ~ (~ (_GLF_IDENTITY(2, (false ? _GLF_FUZZED(76304) : 2)))))))))), (0u & 107281u) ^ ((uint(_GLF_IDENTITY(2, ~ (~ (2))))))) << 0u, ~ (~ (_GLF_IDENTITY((uint(_GLF_IDENTITY(2, ~ (~ (_GLF_IDENTITY(2, ~ (~ (_GLF_IDENTITY(2, (false ? _GLF_FUZZED(76304) : 2)))))))))), (0u & 107281u) ^ ((uint(_GLF_IDENTITY(2, ~ (~ (2))))))) << 0u)))) >> 0u)))), (_GLF_IDENTITY(uint(2), (197592u & _GLF_IDENTITY(0u, min(0u, 0u))) ^ (_GLF_IDENTITY(uint(2), _GLF_IDENTITY((uint(_GLF_IDENTITY(2, ~ (~ (2))))), (0u & 107281u) ^ (_GLF_IDENTITY(_GLF_IDENTITY((uint(_GLF_IDENTITY(2, ~ (~ (2))))), clamp(_GLF_IDENTITY((uint(_GLF_IDENTITY(2, ~ (~ (2))))), min(_GLF_IDENTITY((uint(_GLF_IDENTITY(2, ~ (~ (2))))), ((uint(_GLF_IDENTITY(2, ~ (~ (2)))))) / 1u), (uint(_GLF_IDENTITY(2, ~ (~ (2))))))), (uint(_GLF_IDENTITY(2, ~ (~ (2))))), (uint(_GLF_IDENTITY(2, ~ (~ (2))))))), max((uint(_GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), (false ? _GLF_FUZZED(20882) : ~ (2))))))), (uint(_GLF_IDENTITY(2, ~ (~ (2))))))))) << 0u)))) | uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), injectionSwitch.x))), _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4) - 0, 0 + (_GLF_IDENTITY((4) - 0, min((4) - 0, _GLF_IDENTITY(_GLF_IDENTITY((4) - 0, clamp((4) - 0, (4) - _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, 0 ^ (0))), clamp(~ (_GLF_IDENTITY(0, 0 ^ (0))), ~ (_GLF_IDENTITY(0, 0 ^ (0))), ~ (_GLF_IDENTITY(0, 0 ^ (0))))))), (4) - 0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY((4) - 0, clamp((4) - 0, (4) - 0, (4) - _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (1 ^ 1) ^ (0)), 0)))), (_GLF_IDENTITY((4) - _GLF_IDENTITY(0, (0) / (1 & int(_GLF_ONE(1.0, injectionSwitch.y)))), clamp((4) - 0, (4) - 0, (4) - 0))) ^ 0) : _GLF_FUZZED(-35625)))))))), _GLF_IDENTITY(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4))))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (4), 0 + (~ (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(36577) : 4)))))), min((_GLF_IDENTITY(~ (4), 0 + (~ (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(36577) : 4)))))), (_GLF_IDENTITY(~ (4), 0 + (~ (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(36577) : 4))))))))), 4)), 64, _GLF_IDENTITY(4, _GLF_IDENTITY((false ? _GLF_FUZZED(76557) : 4), ((false ? _GLF_FUZZED(76557) : 4)) >> 0)));
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), false)), true && (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))))))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), false)), false || (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y), (! (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)) && true)), bool(bvec4(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y), (! (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)) && true)), true, false, false))))), ! (! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-402.357))))))))), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)), false)))), true && (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(574.621)), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false)), false || (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat4x2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(abs(0.0), mix(float(abs(0.0)), float(_GLF_FUZZED(806.686)), bool(false))), 0.0, 0.0, 1.0, 1.0, 1.0)))) * 1.0), injectionSwitch.x))).x > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))))))) && true), ! (! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(float(injectionSwitch[1]))))).y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))), false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))), false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y), ! (! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), false || (! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) > injectionSwitch.y)))))), false))))))))))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), true, false)), (bool(bvec3(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), true, false))) || false)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, false || (true)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), (bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, false || (false)) || (_GLF_DEAD(false))))) && true))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, abs(1.0), 1.0, 0.0, exp(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))), injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
