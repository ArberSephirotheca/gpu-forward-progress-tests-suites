#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_1 {
 mat2x4 _f0;
 ivec4 _f1;
 int _f2;
 mat4x3 _f3;
 ivec2 _f4;
 mat4x3 _f5;
 uint next_virtual_gid;
 mat3 _f6;
} ;

struct _GLF_struct_0 {
 bvec4 _f0;
 mat2x3 _f1;
 ivec3 _f2;
 mat4x3 _f3;
 mat3x4 _f4;
 mat4x3 _f5;
 uvec4 _f6;
} ;

struct _GLF_struct_2 {
 float _f0;
 _GLF_struct_0 _f1;
 ivec4 _f2;
 mat4x2 _f3;
 _GLF_struct_1 _f4;
} ;

struct _GLF_struct_3 {
 _GLF_struct_2 _f0;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true)) || false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-70.76)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(0.0, 0.0) + ((injectionSwitch) * mat2(1.0)))).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(0.0, 0.0) + ((injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y)), false || (! ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) * mat2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(mat3x4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))), 1.0))), vec2(0.0, 0.0) + ((injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y))))), bool(bvec4((_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(0.0, 0.0) + ((injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y)), false || (! ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) * mat2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(mat3x4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))), 1.0))), vec2(0.0, 0.0) + ((injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y))))), true, false, true))))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))) * mat2(1.0), _GLF_IDENTITY(vec2(0.0, 0.0) + ((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, (1.0) - 0.0))), min(vec2(0.0, 0.0) + ((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, (1.0) - 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0) + ((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, (1.0) - 0.0))), (vec2(0.0, 0.0) + ((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, (1.0) - 0.0)))) + vec2(0.0, 0.0)), (vec2(0.0, 0.0) + ((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, (1.0) - 0.0)))) * mat2(1.0)))))).x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(0.0, 0.0) + ((injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(0.0, 0.0) + ((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0))))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).y)))), false || (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(vec2((injectionSwitch) * mat2(1.0)))), vec2(0.0, 0.0) + ((injectionSwitch) * mat2(1.0)))), mix(vec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(0.0, 0.0) + ((injectionSwitch) * mat2(1.0)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(0.0, 0.0) + ((injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(injectionSwitch))))[0], _GLF_FUZZED(-5642.4885)), vec2(_GLF_FUZZED(5854.6816), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-8559.5292, -78.78, 1984.1955, -6229.0236)))), vec2(0.0, 0.0) + ((injectionSwitch) * mat2(1.0)))))[1], (false ? _GLF_FUZZED(7.6) : (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(0.0, 0.0) + ((injectionSwitch) * mat2(1.0)))))[1]))), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true)), ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true))) || _GLF_IDENTITY(false, ! (! (false))))), true, false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec3(2.8, 9938.7814, -0.0).r), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.9)), bvec2(true, false))).y, injectionSwitch.y)), ! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), ! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))))) && _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4((false), true, false, true))), false, true, false))), false || ((false))), true && ((false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), (bool(bvec3(false, _GLF_IDENTITY(false, false || (false)), true))) || false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))))), ! (! (bool(bvec3(false, false, true))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5.8), _GLF_FUZZED(-65.34)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), mix(vec2(_GLF_FUZZED(96.62), _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, min(1, 1))], min((injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(-91.95)), bvec2(true, false)))[1]), (true ? vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5.8), _GLF_FUZZED(-65.34)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), mix(vec2(_GLF_FUZZED(96.62), _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, min(1, 1))], min((injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(-91.95)), bvec2(true, false)))[1]) : _GLF_FUZZED(injectionSwitch)))).y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), true, false))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), ! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.8), _GLF_FUZZED(-28.43)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))[0], injectionSwitch[1])).y)))), true, true), bvec3(bvec3(bvec3(! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))), true, true))))), (bool(_GLF_IDENTITY(bvec3(! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))), true, true), bvec3(bvec3(bvec3(! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))), true, true)))))) && true))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)))), float(_GLF_FUZZED((- 5.7))), bool(false))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, mix(float(_GLF_FUZZED(-3969.7031)), float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], (true ? gl_WorkGroupSize[2] : _GLF_FUZZED(num_workgroup))))))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_IDENTITY(false, true && (false)))))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((false), false || ((false))), true, false)), ! (! (bool(bvec3(_GLF_IDENTITY((false), false || ((false))), true, false)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))) - uvec3(0u, 0u, 0u))) << _GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)))))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))) || false)))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) > injectionSwitch.y))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 0.0, 0.0, sin(0.0), 1.0, tan(0.0), determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 1.0))).y)), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0), vec2(mat4x2(vec2(1.0, 1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0))) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y)), true), true))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), (bool((false))) || false)), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((false)), false || (_GLF_IDENTITY(bool((false)), ! (! (bool((false))))))), (bool((false))) || false))), true && (! (bool(_GLF_IDENTITY(bool((false)), (bool((false))) || false)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec4((false), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec4((false), false, false, _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x > injectionSwitch.y))))) || false)))))))))) && true)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || _GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || _GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_IDENTITY(false, bool(bool(false)))) || _GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(false, true && (false))), true)), bool(bvec2(bool(bvec2((_GLF_IDENTITY(false, true && (false))), true)), false)))) || _GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec4((false), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))), bool(bvec2(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec4((false), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))), false))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), false || (! ((false)))))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))))))))) && true)), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || _GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))) || false))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || _GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_IDENTITY(false, bool(bool(false)))) || _GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(false, true && (false))), true)), bool(bvec2(bool(bvec2((_GLF_IDENTITY(false, true && (false))), true)), false)))) || _GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false), false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec4((false), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))), bool(bvec2(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec4((false), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))), false))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), true && ((false)))))), ! (_GLF_IDENTITY(! ((false)), false || (! ((false)))))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))))))))) && true)))), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || _GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))))), bool(bvec4((false), false, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), max(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch))))).x > injectionSwitch.y))))) || false))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec4((false), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false, (_GLF_IDENTITY((false), bool(bvec4((false), false, false, _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))) || false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true)))))))) && true)), false), true), bvec3(bvec3(bvec3(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), bool(bvec4(bool(bvec4((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), true, false, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat4x2(mat2(1.0) * (injectionSwitch), 1.0, 0.0, exp(0.0), 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0)))).y)))), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec4((false), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))), ! (! _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), bool(bvec4((false), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))))), true && _GLF_IDENTITY(((bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), bool(bvec4((false), false, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))) || false))))))), ! (! (_GLF_IDENTITY(((bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), bool(bvec4((false), false, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))) || false))))))), ! (! (((bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), bool(bvec4((false), false, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))) || false)))))))))))))))))) && true)), false), true)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, 1u * (workgroup_size * workgroup_id));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, false))), true && (_GLF_IDENTITY(false, ! (! (false)))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) && true), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) && true), true))))))))
    barrier();
   barrier();
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)))) * subgroup_size + subgroup_local_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true)))) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))) || false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(false, ! (! (false)))), false)), false || (bool(bvec2((_GLF_IDENTITY(false, ! (! (false)))), false))))))))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true), (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-502.029))))), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) && true)) && true), (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-502.029)))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false)))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false)))), (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false))))) || false)) && true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false)))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false)))), (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false))))) || false)) && true)))))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (! (false)) || false))))))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false)))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false)))), _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false))))) || false, false || ((bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false))))) || false)))) && true)))))), false, false)))) || false)) && true))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), true))))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(_GLF_struct_2(1.0, _GLF_struct_0(bvec4(true), mat2x3(1.0), ivec3(1), mat4x3(1.0), mat3x4(1.0), mat4x3(1.0), uvec4(1u)), ivec4(1), mat4x2(1.0), _GLF_struct_1(mat2x4(1.0), ivec4(1), 1, mat4x3(1.0), ivec2(1), mat4x3(1.0), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), 0u ^ (_GLF_FUZZED(workgroup_id))))), 0u | (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), 0u ^ (_GLF_FUZZED(workgroup_id))))))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)) + 0u) + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) << 0u)), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u) + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_id))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_id))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)) + 0u)) >> 0u), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_id))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)), ~ (~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))))) + 0u)), (uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_id))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)) + 0u))) - 0u))) + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (1), 0 | (~ (1)))), (false ? _GLF_FUZZED(-27921) : (_GLF_IDENTITY(~ (1), 0 | (~ (1)))))))) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) * (1 | 1)), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * (1 | 1)), clamp(_GLF_IDENTITY(1, (1) * (1 | 1)), _GLF_IDENTITY(1, (1) * (1 | 1)), _GLF_IDENTITY(1, (1) * (1 | 1))))))) % subgroup_size, min((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))) << 0u)), 0u)), (uint(uvec2(workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_id))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) * _GLF_IDENTITY(1u, (1u) << 0u))) + 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_id))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) * _GLF_IDENTITY(1u, (1u) << 0u))) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_id))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) * _GLF_IDENTITY(1u, (1u) << 0u))) + 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_id))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) * _GLF_IDENTITY(1u, (1u) << 0u))) + 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_id))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) * _GLF_IDENTITY(1u, (1u) << 0u))) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_id))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) * _GLF_IDENTITY(1u, (1u) << 0u))) + 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_id))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) * _GLF_IDENTITY(1u, (1u) << 0u))) + 0u))), (subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_id))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)) + 0u)) + 0u) + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ~ (~ ((subgroup_local_id + 1) % subgroup_size)))) << 0u)), uint(uvec3((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) >> 0u), (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(uvec4((subgroup_local_id + 1) % subgroup_size, 0u, 1u, 0u)))) << 0u)), 1u, 1u))), 0u))) | (uint(uvec2(workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_id))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)) + 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((true ? subgroup_size : _GLF_FUZZED(workgroup_id)), max((true ? subgroup_size : _GLF_FUZZED(workgroup_id)), _GLF_IDENTITY((true ? subgroup_size : _GLF_FUZZED(workgroup_id)), _GLF_IDENTITY((_GLF_IDENTITY((true ? subgroup_size : _GLF_FUZZED(workgroup_id)), ((true ? subgroup_size : _GLF_FUZZED(workgroup_id))) | ((true ? subgroup_size : _GLF_FUZZED(workgroup_id))))) >> 0u, min(_GLF_IDENTITY((_GLF_IDENTITY((true ? subgroup_size : _GLF_FUZZED(workgroup_id)), ((true ? subgroup_size : _GLF_FUZZED(workgroup_id))) | ((true ? subgroup_size : _GLF_FUZZED(workgroup_id))))) >> 0u, min((_GLF_IDENTITY((true ? subgroup_size : _GLF_FUZZED(workgroup_id)), ((true ? subgroup_size : _GLF_FUZZED(workgroup_id))) | ((true ? subgroup_size : _GLF_FUZZED(workgroup_id))))) >> 0u, _GLF_IDENTITY((_GLF_IDENTITY((true ? subgroup_size : _GLF_FUZZED(workgroup_id)), ((true ? subgroup_size : _GLF_FUZZED(workgroup_id))) | ((true ? subgroup_size : _GLF_FUZZED(workgroup_id))))) >> 0u, 0u ^ ((_GLF_IDENTITY((true ? subgroup_size : _GLF_FUZZED(workgroup_id)), ((true ? subgroup_size : _GLF_FUZZED(workgroup_id))) | ((true ? subgroup_size : _GLF_FUZZED(workgroup_id))))) >> 0u)))), (_GLF_IDENTITY((true ? subgroup_size : _GLF_FUZZED(workgroup_id)), ((true ? subgroup_size : _GLF_FUZZED(workgroup_id))) | ((true ? subgroup_size : _GLF_FUZZED(workgroup_id))))) >> 0u)))))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)) + 0u), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_id))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)) + 0u), 1u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((true ? subgroup_size : _GLF_FUZZED(workgroup_id)), max((true ? subgroup_size : _GLF_FUZZED(workgroup_id)), _GLF_IDENTITY((true ? subgroup_size : _GLF_FUZZED(workgroup_id)), (_GLF_IDENTITY((true ? subgroup_size : _GLF_FUZZED(workgroup_id)), ((true ? subgroup_size : _GLF_FUZZED(workgroup_id))) | ((true ? subgroup_size : _GLF_FUZZED(workgroup_id))))) >> 0u)))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)) + 0u), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_id))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)) + 0u), 1u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((true ? subgroup_size : _GLF_FUZZED(workgroup_id)), max((true ? subgroup_size : _GLF_FUZZED(workgroup_id)), _GLF_IDENTITY((true ? subgroup_size : _GLF_FUZZED(workgroup_id)), (_GLF_IDENTITY((true ? subgroup_size : _GLF_FUZZED(workgroup_id)), ((true ? subgroup_size : _GLF_FUZZED(workgroup_id))) | ((true ? subgroup_size : _GLF_FUZZED(workgroup_id))))) >> 0u)))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)) + 0u), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_id))), (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) * 1u)) + 0u), 1u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((true ? subgroup_size : _GLF_FUZZED(workgroup_id)), max((true ? subgroup_size : _GLF_FUZZED(workgroup_id)), _GLF_IDENTITY((true ? subgroup_size : _GLF_FUZZED(workgroup_id)), (_GLF_IDENTITY((true ? subgroup_size : _GLF_FUZZED(workgroup_id)), ((true ? subgroup_size : _GLF_FUZZED(workgroup_id))) | ((true ? subgroup_size : _GLF_FUZZED(workgroup_id))))) >> 0u)))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)) + 0u), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_id))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)) + 0u), 1u))))))) + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(0u ^ ((subgroup_local_id + 1)), clamp(0u ^ ((subgroup_local_id + 1)), 0u ^ ((subgroup_local_id + 1)), 0u ^ ((subgroup_local_id + 1))))) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(uint(uvec3((subgroup_local_id + 1) % subgroup_size, 1u, 1u)), uint(uvec3(uint(uvec3((subgroup_local_id + 1) % subgroup_size, 1u, 1u)), 1u, 1u))))) << 0u)), 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)) : _GLF_FUZZED(workgroup_id))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)) + 0u, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)) + 0u, clamp((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)) + 0u, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)) + 0u, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)) + 0u, (true ? (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)) + 0u : _GLF_FUZZED(workgroup_id)))) ^ 0u), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)) + 0u, ((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)) + 0u) | 0u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)), min((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)), ((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))) | 0u))))), min(~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)), ~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)), _GLF_IDENTITY(min(~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)), ~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))), clamp(_GLF_IDENTITY(min(~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)), ~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))), ~ (~ (min(~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)), ~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)))))), min(~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)), ~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))), _GLF_IDENTITY(min(~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)), ~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))), (min(~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)), ~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)))) | (min(~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)), ~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)))))))))))))) / 1u), min((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)), uint(uvec4((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_size) : subgroup_size))) * 1u)), 0u, 1u, uint(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) / 1.0), injectionSwitch.y))))))) + 0u)))))), clamp(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(true ? subgroup_size : _GLF_FUZZED(workgroup_id), clamp(true ? subgroup_size : _GLF_FUZZED(workgroup_id), _GLF_IDENTITY(true ? subgroup_size : _GLF_FUZZED(workgroup_id), 1u * (true ? subgroup_size : _GLF_FUZZED(workgroup_id))), true ? subgroup_size : _GLF_FUZZED(workgroup_id))))), (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)) : _GLF_FUZZED(subgroup_id)))) * 1u)) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(true ? subgroup_size : _GLF_FUZZED(workgroup_id), clamp(true ? subgroup_size : _GLF_FUZZED(workgroup_id), _GLF_IDENTITY(true ? subgroup_size : _GLF_FUZZED(workgroup_id), 1u * (true ? subgroup_size : _GLF_FUZZED(workgroup_id))), true ? subgroup_size : _GLF_FUZZED(workgroup_id))))), (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)) : _GLF_FUZZED(subgroup_id)))) * 1u)) + 0u)) << 0u), workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_id))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)) + 0u), workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), 1u, 1u), (uvec3(_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), 1u, 1u)) | (uvec3(_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), 1u, 1u)))))))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)), _GLF_IDENTITY(min((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u) * 1u)), (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))), (_GLF_IDENTITY(min((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)), (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))), 0u ^ (min((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)), (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + 0u))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)) + 0u, 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)) + 0u, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), subgroup_size))))) * 1u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)), min(~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)), ~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)), min(~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)), ~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)))))))))) / 1u), min((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_size : _GLF_FUZZED(usubBorrow(workgroup_id, subgroup_local_id, virtual_gid))))) * 1u)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)), uint(uvec4((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)), 0u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))) + 0u)))))), clamp(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(true ? subgroup_size : _GLF_FUZZED(workgroup_id), clamp(true ? subgroup_size : _GLF_FUZZED(workgroup_id), _GLF_IDENTITY(true ? subgroup_size : _GLF_FUZZED(workgroup_id), 1u * (true ? subgroup_size : _GLF_FUZZED(workgroup_id))), true ? subgroup_size : _GLF_FUZZED(workgroup_id))))), max(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(true ? subgroup_size : _GLF_FUZZED(workgroup_id), clamp(true ? subgroup_size : _GLF_FUZZED(workgroup_id), _GLF_IDENTITY(true ? subgroup_size : _GLF_FUZZED(workgroup_id), 1u * (true ? subgroup_size : _GLF_FUZZED(workgroup_id))), true ? subgroup_size : _GLF_FUZZED(workgroup_id))))), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(true ? subgroup_size : _GLF_FUZZED(workgroup_id), clamp(true ? subgroup_size : _GLF_FUZZED(workgroup_id), _GLF_IDENTITY(true ? subgroup_size : _GLF_FUZZED(workgroup_id), 1u * (true ? subgroup_size : _GLF_FUZZED(workgroup_id))), true ? subgroup_size : _GLF_FUZZED(workgroup_id))))))), (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)) : _GLF_FUZZED(subgroup_id)))) * 1u)) + 0u), workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_id))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)) + 0u), workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_id))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)), _GLF_IDENTITY(min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), ((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))) >> 0u) * 1u)), ~ (~ ((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), ((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))) >> 0u) * 1u))))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))), (_GLF_IDENTITY(min((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)), (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))), 0u ^ (min((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)), (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + 0u))), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) * 1u, min((subgroup_size) * 1u, _GLF_IDENTITY((subgroup_size) * 1u, ((subgroup_size) * 1u) | ((subgroup_size) * 1u)))))) + 0u, 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)) + 0u, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), subgroup_size))))) * 1u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) * 1u)), min(~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)), ~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) * 1u, 1u * (_GLF_IDENTITY((subgroup_size) * 1u, 1u * ((subgroup_size) * 1u)))))), min(~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)), ~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)))))))))) / 1u), min((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) || false)))), false))), (injectionSwitch.x < injectionSwitch.y)) ? subgroup_size : _GLF_FUZZED(usubBorrow(workgroup_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), virtual_gid))))) * 1u)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)), uint(uvec4((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)), 0u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))) + 0u)))))), clamp(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(true ? subgroup_size : _GLF_FUZZED(workgroup_id), (true ? subgroup_size : _GLF_FUZZED(workgroup_id)) | (_GLF_IDENTITY(true ? subgroup_size : _GLF_FUZZED(workgroup_id), min(true ? subgroup_size : _GLF_FUZZED(workgroup_id), true ? subgroup_size : _GLF_FUZZED(workgroup_id))))), clamp(true ? subgroup_size : _GLF_FUZZED(workgroup_id), _GLF_IDENTITY(true ? subgroup_size : _GLF_FUZZED(workgroup_id), 1u * (true ? subgroup_size : _GLF_FUZZED(workgroup_id))), true ? subgroup_size : _GLF_FUZZED(workgroup_id))))), max(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(true ? subgroup_size : _GLF_FUZZED(workgroup_id), clamp(true ? subgroup_size : _GLF_FUZZED(workgroup_id), _GLF_IDENTITY(true ? subgroup_size : _GLF_FUZZED(workgroup_id), 1u * (true ? subgroup_size : _GLF_FUZZED(workgroup_id))), true ? subgroup_size : _GLF_FUZZED(workgroup_id))))), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(true ? subgroup_size : _GLF_FUZZED(workgroup_id), clamp(true ? subgroup_size : _GLF_FUZZED(workgroup_id), _GLF_IDENTITY(true ? subgroup_size : _GLF_FUZZED(workgroup_id), 1u * (true ? subgroup_size : _GLF_FUZZED(workgroup_id))), true ? subgroup_size : _GLF_FUZZED(workgroup_id))))))), (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)) : _GLF_FUZZED(subgroup_id)))) * 1u)) + 0u), workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_id))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)) + 0u), workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_id))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)), _GLF_IDENTITY(min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), ((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))) >> 0u) * 1u)), ~ (~ ((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), ((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))) >> 0u) * 1u))))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))), (_GLF_IDENTITY(min((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)), (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))), 0u ^ (min((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)), (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + 0u))))) : _GLF_FUZZED(bitfieldReverse(workgroup_id)))) + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size) << 0u, min(((subgroup_local_id + 1) % subgroup_size) << _GLF_IDENTITY(0u, (0u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))))) ^ (0u)), _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size) << 0u, max(((subgroup_local_id + 1) % subgroup_size) << 0u, ((subgroup_local_id + 1) % subgroup_size) << 0u)))))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) * _GLF_IDENTITY(1u, _GLF_IDENTITY((1u) >> 0u, (_GLF_IDENTITY((1u) >> 0u, 0u ^ ((1u) >> 0u))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) + 0u) + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), 1u * (uint(1u))), _GLF_IDENTITY(uint(1u), 0u | (uint(1u)))))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), 1u * (uint(1u))), _GLF_IDENTITY(uint(1u), 0u | (uint(1u))))))) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), 1u * (uint(1u))), _GLF_IDENTITY(uint(1u), 0u | (uint(1u))))))))) << _GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), min((~ (0u)), (~ (0u))))))), min(workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_id))), (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | 0u)) * 1u)) + 0u) + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(119297u) : subgroup_local_id)) + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED((num_workgroup --))))) % subgroup_size, ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) >> (0u >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), 0u | (uint(1u))))))) << _GLF_IDENTITY(0u, ~ (~ (0u))))), workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_id))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) + (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) ^ 0u)))) ^ (0u | (199716u & 0u))))), (subgroup_size) * 1u)) + 0u) + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) | 0)) % subgroup_size, ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))) >> (0u >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), 0u | (uint(1u))))))) << _GLF_IDENTITY(0u, ~ (~ (0u))))))), (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) * _GLF_IDENTITY(1u, _GLF_IDENTITY((1u) >> 0u, (_GLF_IDENTITY((1u) >> 0u, 0u ^ ((1u) >> 0u))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) + 0u) + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) >> (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), 1u * (uint(1u))), _GLF_IDENTITY(uint(1u), 0u | (uint(1u))))), (false ? _GLF_FUZZED(138096u) : _GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))) >> (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), 1u * (uint(1u))), _GLF_IDENTITY(uint(1u), 0u | (uint(1u)))))))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), 1u * (uint(1u))), _GLF_IDENTITY(uint(1u), 0u | (uint(1u))))))) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), 1u * (uint(1u))), _GLF_IDENTITY(uint(1u), 0u | (uint(1u))))))))) << _GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), min((~ (0u)), (~ (0u))))))), min(workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_id))), (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : 0u)))) * 1u)) + 0u) + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(119297u) : _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)) << 0u))) + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED((num_workgroup --))))) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u) + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) >> (0u >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), 0u | (uint(1u))))))) << _GLF_IDENTITY(0u, ~ (~ (0u))))), workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), ~ (~ (~ (subgroup_size))))))) | (subgroup_size)), (true ? subgroup_size : _GLF_FUZZED(workgroup_id))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) + (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) ^ 0u)))) ^ (0u | (199716u & 0u))))), (subgroup_size) * 1u)) + 0u) + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, ~ (~ (1))))), (1) | 0)) % subgroup_size, _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))) >> (0u >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), 0u | (uint(1u))))))), max(_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))) >> (0u >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), 0u | (uint(1u))))))), (((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))) >> (0u >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), 0u | (uint(1u)))))))) ^ 0u), _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))) >> (0u >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), 0u | (uint(1u))))))), ~ (~ (((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))) >> (0u >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), 0u | (uint(1u)))))))))))) << _GLF_IDENTITY(0u, ~ (~ (0u)))))))) / 1u), 0u)), (uint(uvec2(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_id))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)) + 0u), (subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_id))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)) + 0u)) | (0u << _GLF_IDENTITY(uint(7u), uint(7u)))), clamp(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) - (0u | 0u)))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)) + 0u), (subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_id))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)) + 0u)) | (0u << _GLF_IDENTITY(uint(7u), uint(7u)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_id))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)) + _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) ^ (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)))))), (subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(true ? subgroup_size : _GLF_FUZZED(workgroup_id), 0u + (true ? subgroup_size : _GLF_FUZZED(workgroup_id))))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)) + 0u)) | (0u << _GLF_IDENTITY(uint(7u), uint(7u)))), uint(uvec4(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_id))), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) * 1u, ((subgroup_size) * 1u) | ((subgroup_size) * 1u)))) + 0u), (subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_id))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)) + 0u)) | (0u << _GLF_IDENTITY(uint(7u), uint(7u)))), 1u, 1u, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_id))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)) + 0u), (subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_id))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)) + 0u)) | (0u << _GLF_IDENTITY(uint(7u), uint(7u)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_id))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)), (false ? _GLF_FUZZED(workgroup_id) : (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)))) + 0u), _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)) + 0u)), (_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) | (_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))))) + 0u)))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)) + 0u)), 0u ^ ((subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) | (_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))))) + 0u)))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)) + 0u))))) >> (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))) | (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (7u) / 1u)), uint(7u)))), (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) | (_GLF_FUZZED(workgroup_id))))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)) + 0u), (subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_id))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)) + 0u)) | (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (_GLF_IDENTITY(7u, (7u) * 1u)) | (7u))), uint(7u))))) | (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_id))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)) + 0u), (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_id))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), _GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))) * 1u)) + 0u), 0u | (subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_id))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), _GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))) * 1u)) + 0u)))) | (0u << _GLF_IDENTITY(uint(7u), uint(7u))))))) * 1u))) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id)) + 1) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1) % subgroup_size) << 0u)), 0u))) | (uint(uvec2(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_id))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u ^ _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size)))) / 1u)), (subgroup_size) * 1u)), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : subgroup_size)), (subgroup_size) * 1u))) | _GLF_IDENTITY((0u & (~ 180999u)), 0u + ((0u & (~ 180999u))))) + _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 0u)))) - 0u)), (workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_id))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)) * 1u)), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))), (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))), max(((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))), ((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)))))) | (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))), min(((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))), ((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))))))) | (0u & (~ 180999u))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)) * 1u)), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))), (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))), max(((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))), (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))), ~ (~ (((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))))))) >> 0u)))) | (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))), min(((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))), ((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))))))) | (0u & (~ 180999u)))) * 1u) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_id))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)) * 1u)), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))), (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))), max(((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))), ((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)))))) | (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))), min(((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))), ((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))))))) | (0u & (~ 180999u))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)) * 1u)), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))), (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))), max(((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))), (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))), ~ (~ (((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))))))) >> 0u)))) | (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))), min(((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))), ((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))))))) | (0u & (~ 180999u)))) * 1u) + 0u), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_id))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)) * 1u)), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))), (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))), max(((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))), ((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)))))) | (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))), min(((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))), ((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))))))) | (0u & (~ 180999u))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)) * 1u)), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))), (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))), max(((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))), (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))), ~ (~ (((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))))))) >> 0u)))) | (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))), min(((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))), ((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))))))) | (0u & (~ 180999u)))) * 1u) + 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_id))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)) * 1u)), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))), (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))), max(((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))), ((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)))))) | (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))), min(((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))), ((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))))))) | (0u & (~ 180999u))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)) * 1u)), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))), (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))), max(((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))), (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))), ~ (~ (((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))))))) >> 0u)))) | (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))), min(((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))), ((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))))))) | (0u & (~ 180999u)))) * 1u) + 0u)))) / 1u) + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)), 0u ^ (subgroup_local_id + _GLF_IDENTITY(1, 0 + (1))))))) % subgroup_size) << 0u), (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(min(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)), 0u ^ (subgroup_local_id + _GLF_IDENTITY(1, 0 + (1))))), clamp(min(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)), 0u ^ (subgroup_local_id + _GLF_IDENTITY(1, 0 + (1))))), _GLF_IDENTITY(min(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)), 0u ^ (subgroup_local_id + _GLF_IDENTITY(1, 0 + (1))))), (min(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)), 0u ^ (subgroup_local_id + _GLF_IDENTITY(1, 0 + (1)))))) | (min(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)), 0u ^ (subgroup_local_id + _GLF_IDENTITY(1, 0 + (1))))))), min(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)), 0u ^ (subgroup_local_id + _GLF_IDENTITY(1, 0 + (1))))))))) % subgroup_size) << 0u)) ^ (0u >> _GLF_IDENTITY(uint(7u), uint(7u))))), 0u)))))) + 0u), mat3(1.0))));
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, false)), _GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_DEAD(false), false, true, false)), true)), false || (bool(bvec2(bool(bvec4(_GLF_DEAD(false), false, true, false)), true)))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[virtual_gid], uint(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-20259)))), 4, 64, 4);
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, (0u) | 0u) | (subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | 0u), clamp(_GLF_IDENTITY(0u, (0u) | 0u), _GLF_IDENTITY(0u, (0u) | 0u), _GLF_IDENTITY(0u, (0u) | 0u))) | (subgroup_local_id))) + 0u) + 1 < subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), (0u | 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | _GLF_IDENTITY((subgroup_local_id), max(_GLF_IDENTITY((subgroup_local_id), ~ (~ ((subgroup_local_id)))), _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) ^ 0u)))), (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))) << 0u))), _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))) + 1 < subgroup_size) && true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, false || (false)), true, true))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) ? injectionSwitch.x : _GLF_FUZZED(-9889.1913))) > injectionSwitch.y)), true)), false, true))))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, false || (false)), true, true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false, true))))), true))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))) || false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, sqrt(0.0), 0.0)))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true), bvec3(bvec3(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false)))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! ((! _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false)))))), false, true))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   atomicStore(buf[_GLF_struct_replacement_3._f0._f4.next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(2), (uint(2)) >> 0u), (_GLF_IDENTITY(uint(2), (uint(2)) >> 0u)) + (0u | 0u)), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec4(_GLF_IDENTITY(4, int(int(4))), (_GLF_IDENTITY((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(4))), ((1 << _GLF_IDENTITY(int(4), int(4)))) >> 0) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(int(4), max(int(4), int(4))))), (~ (~ (_GLF_IDENTITY(int(4), max(int(4), int(4)))))) | (_GLF_IDENTITY(~ _GLF_IDENTITY((~ (_GLF_IDENTITY(int(4), max(int(4), int(4))))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(int(4), max(int(4), int(4))))), ~ (~ ((~ (_GLF_IDENTITY(int(4), max(int(4), int(4))))))))) << 0), ~ (~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(int(4), max(int(4), int(4))))), (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(56412) : int(4)))) | (int(4))), max(int(4), int(4)))))) * 1))))))), _GLF_IDENTITY(_GLF_IDENTITY(int(4), ~ (~ (int(4)))), (int(4)) / 1))), min((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(4))), ((1 << _GLF_IDENTITY(int(4), int(4)))) >> 0) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(int(4), max(int(4), int(4))))), (~ (~ (_GLF_IDENTITY(int(4), max(int(4), int(4)))))) | (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(int(4), max(int(4), int(4))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(int(4), max(int(4), int(4))))), (~ (~ (_GLF_IDENTITY(int(4), max(int(4), int(4)))))) * 1), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(int(4), max(int(4), int(4))))), (~ (~ (_GLF_IDENTITY(int(4), max(int(4), int(4)))))) * 1)) - 0))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), ~ (~ (int(4)))), (int(4)) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(int(4), ~ (~ (int(4)))), (int(4)) / 1)) << 0))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(4))), ((1 << _GLF_IDENTITY(int(4), int(4)))) >> 0) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(int(4), max(int(4), int(4))))), (~ (~ (_GLF_IDENTITY(int(4), max(int(4), int(4)))))) | (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(int(4), max(int(4), int(4))))), ~ (~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(4), max(int(4), _GLF_IDENTITY(int(4), (int(4)) + (0 << _GLF_IDENTITY(int(7), int(7)))))), max(int(4), int(4))))), (~ (~ (_GLF_IDENTITY(int(4), max(int(4), int(4)))))) * 1))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), ~ (~ (int(4)))), (int(4)) / 1), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(4), ~ (~ (int(4)))), (int(4)) / 1))))))) ^ 1), (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(_GLF_IDENTITY(_GLF_IDENTITY(3, min(3, _GLF_IDENTITY(3, min(3, 3)))), (_GLF_IDENTITY(3, (3) - (_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)) >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, min(_GLF_IDENTITY(8, max(8, 8)), 8)), _GLF_IDENTITY((_GLF_IDENTITY(8, min(_GLF_IDENTITY(8, max(8, 8)), 8))), (_GLF_IDENTITY((_GLF_IDENTITY(8, min(_GLF_IDENTITY(8, max(8, 8)), 8))), ((_GLF_IDENTITY(8, min(_GLF_IDENTITY(8, max(8, 8)), 8)))) | 0)) | 0) - 0)), int(8))))) / 1)))), min(_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(_GLF_IDENTITY(_GLF_IDENTITY(3, min(3, _GLF_IDENTITY(3, min(3, 3)))), (_GLF_IDENTITY(3, (3) - (_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)) >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, min(_GLF_IDENTITY(8, max(8, 8)), 8)), _GLF_IDENTITY((_GLF_IDENTITY(8, min(_GLF_IDENTITY(8, max(8, 8)), 8))), (_GLF_IDENTITY((_GLF_IDENTITY(8, min(_GLF_IDENTITY(8, max(8, 8)), 8))), ((_GLF_IDENTITY(8, min(_GLF_IDENTITY(8, max(8, 8)), 8)))) | 0)) | 0) - 0)), int(8))))) / 1)))), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(_GLF_IDENTITY(_GLF_IDENTITY(3, min(3, _GLF_IDENTITY(3, min(3, 3)))), (_GLF_IDENTITY(3, (3) - (_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)) >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, min(_GLF_IDENTITY(8, max(8, 8)), 8)), _GLF_IDENTITY((_GLF_IDENTITY(8, min(_GLF_IDENTITY(8, max(8, 8)), 8))), (_GLF_IDENTITY((_GLF_IDENTITY(8, min(_GLF_IDENTITY(8, max(8, 8)), 8))), ((_GLF_IDENTITY(8, min(_GLF_IDENTITY(8, max(8, 8)), 8)))) | 0)) | 0) - 0)), int(8))))) / 1)))))))), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(3, clamp(_GLF_IDENTITY(3, (3) << (1 ^ 1)), _GLF_IDENTITY(3, (3) << 0), 3))), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))))), _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))))) / 1, int(int(((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))))) / 1)))), (-40684 & 0), 1)), int(ivec2(int(_GLF_IDENTITY(ivec3((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), max(int(3), int(3)))) - 0)))), max(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) ^ 0), (int(3)) - 0)))), (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), (int(3)) - 0)))), _GLF_IDENTITY(0, (0) >> 0) | (1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), (int(3)) - 0))))))) | 0), 1 << _GLF_IDENTITY(int(_GLF_IDENTITY(3, 0 | (_GLF_IDENTITY(3, ~ (~ (3)))))), _GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), (int(3)) - 0))))))), (-40684 & 0), 1), clamp(ivec3((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))), int(3), _GLF_IDENTITY(int(3), (int(3)) - 0))))), (-40684 & 0), 1), ivec3((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) + 0)), _GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), (int(_GLF_IDENTITY(_GLF_IDENTITY(3, (3) | (3)), max(3, 3)))) - 0))))), (_GLF_IDENTITY(-40684 & 0, min(_GLF_IDENTITY(-40684 & 0, max(-40684 & 0, _GLF_IDENTITY(-40684 & 0, (true ? -40684 & 0 : _GLF_FUZZED(76279))))), -40684 & 0))), 1), _GLF_IDENTITY(ivec3((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), (int(3)) - 0))))), (-40684 & 0), 1), min(ivec3((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), (int(3)) - 0))))), (-40684 & 0), 1), _GLF_IDENTITY(ivec3((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), (int(3)) - 0))))), (-40684 & 0), 1), (ivec3((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), (int(3)) - 0))), (_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), (int(3)) - 0)))) * 1))), (-40684 & 0), 1)) / ivec3(1, 1, 1))))))), 0)))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), min(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, max(_GLF_IDENTITY(3, (false ? _GLF_IDENTITY(_GLF_FUZZED(-71152), 1 * (_GLF_FUZZED(-71152))) : 3)), 3))), clamp(int(3), int(3), int(3)))))) - 0), int(3)), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, (3) - (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, min(_GLF_IDENTITY(8, max(8, 8)), 8)), (_GLF_IDENTITY(8, min(_GLF_IDENTITY(8, max(8, 8)), 8))) - 0)), int(8))))) / 1)))))), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY((_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, max(1, 1)))) << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))))), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))))) / 1), (-40684 & 0), 1)), int(ivec2(int(_GLF_IDENTITY(ivec3((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), (int(3)) - 0))))), (-40684 & 0), 1), clamp(ivec3((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), (int(3)) - 0))))), (-40684 & 0), 1), ivec3((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) + 0)), _GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), (int(_GLF_IDENTITY(3, max(3, 3)))) - 0))))), _GLF_IDENTITY((-40684 & 0), ~ (~ ((-40684 & 0)))), 1), ivec3((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), (int(3)) - 0))))), (-40684 & 0), 1)))), 0)))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY((_GLF_IDENTITY(int(3), min(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, max(_GLF_IDENTITY(_GLF_IDENTITY(3, int(int(3))), (false ? _GLF_FUZZED(-71152) : 3)), 3))), clamp(int(3), int(3), int(3)))))) - 0, ~ (~ ((_GLF_IDENTITY(int(3), min(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, max(_GLF_IDENTITY(3, (false ? _GLF_FUZZED(-71152) : 3)), 3))), clamp(int(3), int(3), int(3)))))) - 0)))), int(3))) | (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(_GLF_IDENTITY(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, (3) - (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, min(_GLF_IDENTITY(8, _GLF_IDENTITY(max(8, 8), (false ? _GLF_FUZZED(-1794) : max(8, 8)))), 8)), (_GLF_IDENTITY(8, min(_GLF_IDENTITY(8, max(8, 8)), 8))) - 0)), int(8))))) / 1), clamp(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, (3) - (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(8, 0 | (8)), _GLF_IDENTITY(min(_GLF_IDENTITY(8, max(8, 8)), 8), clamp(min(_GLF_IDENTITY(8, max(8, 8)), 8), _GLF_IDENTITY(min(_GLF_IDENTITY(8, max(8, 8)), 8), (min(_GLF_IDENTITY(8, max(8, 8)), 8)) << 0), min(_GLF_IDENTITY(8, max(8, 8)), 8)))), (_GLF_IDENTITY(8, min(_GLF_IDENTITY(8, max(8, 8)), 8))) - 0)), int(8))))) / 1), _GLF_IDENTITY(3, (_GLF_IDENTITY(3, (_GLF_IDENTITY(3, (true ? _GLF_IDENTITY(3, 1 * (3)) : _GLF_FUZZED(int(7.2))))) - (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, min(_GLF_IDENTITY(_GLF_IDENTITY(8, max(8, 8)), max(_GLF_IDENTITY(8, max(8, 8)), _GLF_IDENTITY(_GLF_IDENTITY(8, max(8, 8)), 0 ^ (_GLF_IDENTITY(8, max(8, 8)))))), 8)), (_GLF_IDENTITY(8, min(_GLF_IDENTITY(8, max(8, 8)), 8))) - 0)), int(8))))) / 1), _GLF_IDENTITY(3, (_GLF_IDENTITY(3, (3) - (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, min(_GLF_IDENTITY(8, max(8, 8)), 8)), (_GLF_IDENTITY(8, min(_GLF_IDENTITY(8, max(8, 8)), 8))) - 0)), int(8))))) / 1)))))))), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))))), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))))) / 1), (-40684 & 0), 1)), int(ivec2(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3((_GLF_IDENTITY(1, (1) << 0) << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(_GLF_IDENTITY(3, (false ? _GLF_FUZZED(67703) : 3))), _GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(3), 0 | (int(3)))), (0 >> _GLF_IDENTITY(int(8), int(8))) ^ (~ (_GLF_IDENTITY(int(3), 0 | (int(3)))))))), (int(3)) - 0))))), (-40684 & 0), 1), clamp(_GLF_IDENTITY(ivec3((_GLF_IDENTITY(1, (1) << 0) << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(_GLF_IDENTITY(3, (false ? _GLF_FUZZED(67703) : 3))), _GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(3), 0 | (int(3)))), (0 >> _GLF_IDENTITY(int(8), int(8))) ^ (~ (_GLF_IDENTITY(int(3), 0 | (int(3)))))))), (int(3)) - 0))))), (-40684 & 0), 1), min(ivec3((_GLF_IDENTITY(1, (1) << 0) << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(_GLF_IDENTITY(3, (false ? _GLF_FUZZED(67703) : 3))), _GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(3), 0 | (int(3)))), (0 >> _GLF_IDENTITY(int(8), int(8))) ^ (~ (_GLF_IDENTITY(int(3), 0 | (int(3)))))))), (int(3)) - 0))))), (-40684 & 0), 1), ivec3((_GLF_IDENTITY(1, (1) << 0) << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(_GLF_IDENTITY(3, (false ? _GLF_FUZZED(67703) : 3))), _GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(3), 0 | (int(3)))), (0 >> _GLF_IDENTITY(int(8), int(8))) ^ (~ (_GLF_IDENTITY(int(3), 0 | (int(3)))))))), (int(3)) - 0))))), (-40684 & 0), 1))), ivec3((_GLF_IDENTITY(1, (1) << 0) << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(_GLF_IDENTITY(3, (false ? _GLF_FUZZED(67703) : 3))), _GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(3), 0 | (int(3)))), (0 >> _GLF_IDENTITY(int(8), int(8))) ^ (~ (_GLF_IDENTITY(int(3), 0 | (int(3)))))))), (int(3)) - 0))))), (-40684 & 0), 1), _GLF_IDENTITY(ivec3((_GLF_IDENTITY(1, (1) << 0) << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(_GLF_IDENTITY(3, (false ? _GLF_FUZZED(67703) : 3))), _GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(3), 0 | (int(3)))), (0 >> _GLF_IDENTITY(int(8), int(8))) ^ (~ (_GLF_IDENTITY(int(3), 0 | (int(3)))))))), (int(3)) - 0))))), (-40684 & 0), 1), (ivec3((_GLF_IDENTITY(1, (1) << 0) << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(_GLF_IDENTITY(3, (false ? _GLF_FUZZED(67703) : 3))), _GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(3), 0 | (int(3)))), (0 >> _GLF_IDENTITY(int(8), int(8))) ^ (~ (_GLF_IDENTITY(int(3), 0 | (int(3)))))))), (int(3)) - 0))))), (-40684 & 0), 1)) / ivec3(1, 1, 1)))), clamp(ivec3((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, min(3, 3))), _GLF_IDENTITY(clamp(int(3), int(3), _GLF_IDENTITY(int(3), (int(3)) - 0)), 0 | (clamp(int(3), int(3), _GLF_IDENTITY(int(3), (int(3)) - 0))))))), (-40684 & 0), 1), ivec3((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) + 0)), _GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), (int(_GLF_IDENTITY(3, max(3, 3)))) - 0))))), (-40684 & 0), _GLF_IDENTITY(1, 0 | (1))), ivec3((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), (int(3)) - 0))))), (-40684 & 0), 1)))), 0)))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), min(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, max(_GLF_IDENTITY(3, (false ? _GLF_FUZZED(-71152) : 3)), 3))), _GLF_IDENTITY(clamp(int(3), int(3), int(3)), max(clamp(int(3), int(3), int(3)), clamp(int(3), int(3), int(3)))))))) - 0), int(3))))), 0))), (_GLF_IDENTITY(4, int(ivec4(_GLF_IDENTITY(4, int(int(4))), (_GLF_IDENTITY((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(4))), ((1 << _GLF_IDENTITY(int(4), int(4)))) >> 0) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(int(4), max(int(4), int(4))))), _GLF_IDENTITY((~ (~ (_GLF_IDENTITY(int(4), max(int(4), int(4)))))) | (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(int(4), max(int(4), int(4))))), ~ (~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(int(4), max(int(4), int(4))))), (~ (~ (_GLF_IDENTITY(int(4), max(int(4), int(4)))))) * 1))))), max(_GLF_IDENTITY((~ (~ (_GLF_IDENTITY(int(4), max(int(4), int(4)))))) | (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(int(4), max(int(4), int(4))))), ~ (~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(int(4), max(int(4), int(4))))), (~ (~ (_GLF_IDENTITY(int(4), max(int(4), int(4)))))) * 1))))), (false ? _GLF_FUZZED(-62015) : (~ (~ (_GLF_IDENTITY(int(4), max(int(4), int(4)))))) | (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(int(4), max(int(4), int(4))))), ~ (~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(int(4), max(int(4), int(4))))), (~ (~ (_GLF_IDENTITY(int(4), max(int(4), int(4)))))) * 1))))))), _GLF_IDENTITY((~ (~ (_GLF_IDENTITY(int(4), max(int(4), int(4)))))) | (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(int(4), max(int(4), int(4))))), ~ (~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(int(4), max(int(4), int(4))))), (~ (~ (_GLF_IDENTITY(int(4), max(int(4), int(4)))))) * 1))))), int(int((~ (~ (_GLF_IDENTITY(int(4), max(int(4), int(4)))))) | (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(int(4), max(int(4), int(4))))), ~ (~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(int(4), max(int(4), int(4))))), (~ (~ (_GLF_IDENTITY(int(4), max(int(4), int(4)))))) * 1)))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(int(4), ~ (~ (int(4)))), (int(4)) / 1))), min((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(4))), ((1 << _GLF_IDENTITY(int(4), int(4)))) >> 0) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(int(4), max(int(4), int(4))))), (~ (~ (_GLF_IDENTITY(int(4), max(int(4), int(4)))))) | (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(int(4), max(int(4), int(_GLF_IDENTITY(4, (_GLF_IDENTITY(true, ! (! (true))) ? 4 : _GLF_FUZZED(77092)))))))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(4), max(int(4), int(4)))), (false ? _GLF_FUZZED(findLSB(workgroup_size)) : ~ (_GLF_IDENTITY(int(4), max(int(4), int(4))))))), (~ (~ (_GLF_IDENTITY(int(4), max(int(4), int(4)))))) * 1))))))), _GLF_IDENTITY(_GLF_IDENTITY(int(4), ~ (~ (int(4)))), (int(4)) / 1))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(4))), ((1 << _GLF_IDENTITY(int(4), int(4)))) >> 0) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(int(4), max(int(4), int(4))))), (~ (~ (_GLF_IDENTITY(int(4), max(int(4), _GLF_IDENTITY(int(4), max(int(4), int(4)))))))) | (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(int(4), max(int(4), int(4))))), ~ (~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(int(4), max(int(4), int(4))))), (~ (~ (_GLF_IDENTITY(int(4), max(int(4), int(4)))))) * 1))))))), _GLF_IDENTITY(_GLF_IDENTITY(int(4), ~ (~ (int(4)))), (int(4)) / 1))))) ^ 1), (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(_GLF_IDENTITY(3, _GLF_IDENTITY(int(int(_GLF_IDENTITY(3, clamp(3, 3, 3)))), (int(int(_GLF_IDENTITY(3, clamp(3, 3, 3))))) + 0))), int(3), int(_GLF_IDENTITY(_GLF_IDENTITY(3, min(3, _GLF_IDENTITY(3, min(3, 3)))), (_GLF_IDENTITY(3, (3) - (_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)) >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, min(_GLF_IDENTITY(8, max(8, 8)), 8)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(8, ~ (~ (8))), min(_GLF_IDENTITY(8, max(8, 8)), 8))), (_GLF_IDENTITY((_GLF_IDENTITY(8, min(_GLF_IDENTITY(8, max(8, 8)), 8))), ((_GLF_IDENTITY(8, min(_GLF_IDENTITY(8, max(8, 8)), 8)))) | 0)) | 0) - 0)), int(8))))) / 1)))))), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) - (1 ^ 1))), clamp(int(3), int(3), int(3))))), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))))) / 1), (-40684 & 0), 1)), int(ivec2(int(_GLF_IDENTITY(ivec3((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), (int(3)) - 0)))), max(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), max(_GLF_IDENTITY(int(3), (int(3)) - 0), int(3)))) - 0)))), (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), (int(3)) - 0)))), 0 | (1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), (int(3)) - 0))))))) | 0), 1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY((int(3)) - 0, _GLF_IDENTITY(int(ivec2((int(3)) - 0, 1)), (int(ivec2((int(3)) - 0, 1))) - 0))))))))), (-40684 & 0), 1), clamp(ivec3((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))), int(3), _GLF_IDENTITY(int(3), (int(3)) - 0))))), (-40684 & 0), 1), ivec3((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(3, _GLF_IDENTITY((3), ~ (~ ((3)))) + 0)), _GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), (int(_GLF_IDENTITY(3, max(3, 3)))) - 0))))), (-40684 & 0), 1), _GLF_IDENTITY(ivec3((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), (int(3)) - 0))))), (-40684 & _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, clamp(0, 0, 0))))), 1), min(ivec3((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), (int(3)) - 0))))), (-40684 & 0), 1), _GLF_IDENTITY(ivec3((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) - 0), (_GLF_IDENTITY(int(3), (int(3)) - 0)) - 0))))), (-40684 & 0), 1), (ivec3((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) | 0), (int(3)) - 0))))), (-40684 & 0), 1)) / ivec3(1, 1, 1))))))), 0)))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), min(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, max(_GLF_IDENTITY(3, (false ? _GLF_IDENTITY(_GLF_FUZZED(-71152), 1 * (_GLF_FUZZED(-71152))) : 3)), 3))), _GLF_IDENTITY(int(ivec3(int(_GLF_IDENTITY(3, max(_GLF_IDENTITY(3, (false ? _GLF_IDENTITY(_GLF_FUZZED(-71152), 1 * (_GLF_FUZZED(-71152))) : 3)), 3))), 0, _GLF_IDENTITY(0, int(ivec3(0, 0, 0))))), (0 >> _GLF_IDENTITY(int(1), int(1))) ^ (int(ivec3(int(_GLF_IDENTITY(3, max(_GLF_IDENTITY(3, (false ? _GLF_IDENTITY(_GLF_FUZZED(-71152), 1 * (_GLF_FUZZED(-71152))) : 3)), 3))), 0, _GLF_IDENTITY(0, int(ivec3(0, 0, 0)))))))), clamp(int(3), int(3), int(3)))))) - 0), int(3)), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(_GLF_IDENTITY(3, _GLF_IDENTITY((_GLF_IDENTITY(3, (_GLF_IDENTITY(3, clamp(3, 3, _GLF_IDENTITY(3, max(3, 3))))) - (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, min(_GLF_IDENTITY(8, max(8, 8)), 8)), _GLF_IDENTITY((_GLF_IDENTITY(8, min(_GLF_IDENTITY(8, max(8, 8)), 8))) - 0, ((_GLF_IDENTITY(8, min(_GLF_IDENTITY(8, max(8, 8)), 8))) - 0) >> 0))), int(8))))), (false ? _GLF_FUZZED(-84691) : (_GLF_IDENTITY(3, (_GLF_IDENTITY(3, clamp(3, 3, _GLF_IDENTITY(3, max(3, 3))))) - (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, min(_GLF_IDENTITY(8, max(8, 8)), 8)), _GLF_IDENTITY((_GLF_IDENTITY(8, min(_GLF_IDENTITY(8, max(8, 8)), 8))) - 0, ((_GLF_IDENTITY(8, min(_GLF_IDENTITY(8, max(8, 8)), 8))) - 0) >> 0))), int(8))))))) / 1)))))), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY((_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, max(1, 1)))) << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))))), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))))) / 1), (-40684 & 0), 1)), int(ivec2(int(_GLF_IDENTITY(ivec3((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), (int(3)) - 0))))), (-40684 & 0), 1), clamp(ivec3((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(_GLF_IDENTITY(int(3), 0 ^ (int(3))), int(3), _GLF_IDENTITY(int(3), (int(3)) - 0))))), (-40684 & 0), 1), ivec3((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) + 0)), _GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), (int(_GLF_IDENTITY(3, max(3, 3)))) - 0))))), (-40684 & _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(44988) : 0))) << 0)), 1), ivec3((_GLF_IDENTITY(1, 0 ^ (1)) << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, (3) - 0)) | (0 | 0))), _GLF_IDENTITY(int(3), _GLF_IDENTITY((int(3)) - 0, ((int(3)) - 0) | 0)))))), (-40684 & 0), 1)))), 0)))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY((_GLF_IDENTITY(int(3), min(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(3, max(_GLF_IDENTITY(3, (false ? _GLF_FUZZED(-71152) : 3)), 3)), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(3, max(_GLF_IDENTITY(3, (false ? _GLF_FUZZED(-71152) : 3)), 3)), 1, 0)), (int(ivec3(_GLF_IDENTITY(3, max(_GLF_IDENTITY(3, (false ? _GLF_FUZZED(-71152) : 3)), 3)), 1, 0))) / 1))), clamp(int(3), int(3), int(3)))))) - 0, ~ (~ ((_GLF_IDENTITY(int(3), min(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, max(_GLF_IDENTITY(3, (false ? _GLF_FUZZED(-71152) : 3)), 3))), clamp(int(3), int(3), int(3)))))) - 0)))), int(3))) | (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(_GLF_IDENTITY(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, (3) - (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, min(_GLF_IDENTITY(8, max(8, 8)), 8)), (_GLF_IDENTITY(8, min(_GLF_IDENTITY(_GLF_IDENTITY(8, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(20782) : 8)), max(8, 8)), 8))) - 0)), int(8))))) / 1), clamp(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, (3) - (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, min(_GLF_IDENTITY(8, max(8, 8)), 8)), (_GLF_IDENTITY(8, min(_GLF_IDENTITY(8, max(8, 8)), 8))) - 0)), int(8))))) / 1), _GLF_IDENTITY(3, (_GLF_IDENTITY(3, (3) - (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, min(_GLF_IDENTITY(8, max(8, 8)), 8)), (_GLF_IDENTITY(8, min(_GLF_IDENTITY(8, max(8, 8)), 8))) - 0)), int(8))))) / 1), _GLF_IDENTITY(3, (_GLF_IDENTITY(3, (3) - (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, min(_GLF_IDENTITY(8, max(8, 8)), 8)), (_GLF_IDENTITY(8, min(_GLF_IDENTITY(8, max(8, 8)), 8))) - 0)), int(8))))) / 1)))))))), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))))), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))))) / 1), (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))))), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))))) / 1), (true ? _GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))))), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))))) / 1) : _GLF_FUZZED(57797)))) << 0), (-40684 & 0), 1)), int(ivec2(int(_GLF_IDENTITY(ivec3((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(_GLF_IDENTITY(3, (false ? _GLF_FUZZED(67703) : 3))), _GLF_IDENTITY(int(3), (int(3)) - 0))))), (-40684 & 0), 1), clamp(ivec3((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), (int(3)) - 0)))), 0 + (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), (int(3)) - 0))))))), (-40684 & 0), 1), ivec3((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) + 0)), _GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), (int(_GLF_IDENTITY(3, max(3, 3)))) - 0)))), min(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) + 0)), _GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), (int(_GLF_IDENTITY(3, max(3, 3)))) - 0)))), 1 << _GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) + 0)), _GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), (int(_GLF_IDENTITY(3, max(3, 3)))) - 0))))))), (_GLF_IDENTITY(-40684, min(-40684, _GLF_IDENTITY(-40684, int(_GLF_IDENTITY(ivec3(-40684, 1, 0), clamp(ivec3(-40684, 1, 0), ivec3(-40684, 1, 0), ivec3(-40684, 1, 0))))))) & 0), _GLF_IDENTITY(1, 0 | (1))), ivec3((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), (int(3)) - 0))))), (-40684 & 0), 1)))), 0)))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), min(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, max(_GLF_IDENTITY(3, (false ? _GLF_FUZZED(-71152) : 3)), 3))), _GLF_IDENTITY(clamp(int(3), int(3), int(3)), max(clamp(int(3), int(3), int(3)), clamp(int(3), int(3), int(3)))))))) - 0), int(3))))), 0)))) << 0));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), bool(bool(bool(false))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((true ? 8063.6902 : -7.5))), _GLF_IDENTITY(bool(false), ! (! (bool(false)))))) > injectionSwitch.y)) ? _GLF_FUZZED(vec2(_GLF_IDENTITY(-39.72, _GLF_IDENTITY(float(mat2(-39.72, sin(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0)), max(float(_GLF_IDENTITY(mat2(-39.72, sin(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0), (true ? mat2(-39.72, sin(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0) : _GLF_FUZZED(mat2(_GLF_IDENTITY(-483.059, max(-483.059, _GLF_IDENTITY(-483.059, max(-483.059, -483.059)))), 3.6, -8.5, 7509.5737))))), float(mat2(-39.72, sin(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0))))), 4.5)) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))[0], injectionSwitch[1])).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))), false, true))))))) && true))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), false, true, false)))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true))), false, true))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bool((! (false)))))), false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))), ! (! ((_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec3(bool(bvec2(false, true)), false, true)))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))) || false))))) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) && true)))))), ! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), false))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))), (bool(_GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))) && true))), (false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(step(-1048.1478, 225.610)) : _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-769.433))), injectionSwitch.x)))) > injectionSwitch.y)))))) || false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(intBitsToFloat(ivec2(99664, -27069))) : injectionSwitch)).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(mat3(injectionSwitch[1], 1.0, 1.0, 0.0, 1.0, 1.0, length(_GLF_IDENTITY(0.0, (0.0) - 0.0)), _GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), (false ? _GLF_FUZZED(roundEven(8.6)) : round(length(normalize(vec2(1.0, 1.0)))))), 1.0))))).x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[_GLF_struct_replacement_3._f0._f4.next_virtual_gid], uint(2), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), int(ivec2(4, 0))), (_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), int(ivec2(4, 0)))) ^ 0));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(true);
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(88.72)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)), injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bvec4(bool(bvec3(false, false, false)), true, false, false)))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
