#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) && true)), (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_DEAD(false)) && true)) && true))) || _GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))), bool(bool(false)))))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), bool(bvec3(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), false, false)))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), true && (_GLF_IDENTITY(! (false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec4(bvec3((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), false)), bvec3(bvec3(bvec3(bvec4(bvec3((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), false)))))))))), _GLF_IDENTITY(bool(bvec4(! (false), false, true, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec3(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))), ! (! (_GLF_IDENTITY(true, bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))), bool(bvec2(bool(bvec4(! (false), false, true, true)), true))))), ! (! ((_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(! (false), false, true, true)), bool(bvec2(bool(bvec4(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))))))))), false, true, _GLF_IDENTITY(true, false || (true)))), true)))))))) && _GLF_IDENTITY(true, (true) && true))))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), true && (_GLF_IDENTITY(! (false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! _GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec4(bvec3((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), false)), bvec3(bvec3(bvec3(bvec4(bvec3((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), false)))))))), bool(bvec2(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec4(bvec3((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), false)), bvec3(bvec3(bvec3(bvec4(bvec3((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), false)))))))), false))))), _GLF_IDENTITY(bool(bvec4(! (false), false, true, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))), true), bvec3(_GLF_IDENTITY(bvec3(bvec3(true, _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, true))), (injectionSwitch.x < injectionSwitch.y)), true)), bvec3(bvec3(bvec3(bvec3(true, _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, true))), (injectionSwitch.x < injectionSwitch.y)), true)))))))))))), ! (! (_GLF_IDENTITY(true, bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))), bool(bvec2(bool(bvec4(! (false), false, true, true)), true))))), ! (! ((_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(! (false), false, true, true)), bool(bvec4(bool(bvec4(! (false), false, true, true)), true, true, false))), bool(bvec2(bool(bvec4(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (_GLF_IDENTITY(false, (false) && true)))))))))))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false) || ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))))), (false) && true)))))))))), false, true, _GLF_IDENTITY(true, false || (true)))), true)))))))) && _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, false || (true))))))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), true && (_GLF_IDENTITY(! (false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! _GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec4(bvec3((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), false)), bvec3(bvec3(bvec3(bvec4(bvec3((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), false)))))))), bool(bvec2(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec4(bvec3((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), false)), bvec3(bvec3(bvec3(bvec4(bvec3((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), false)))))))), false))))), _GLF_IDENTITY(bool(bvec4(! (false), false, true, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))), true), bvec3(_GLF_IDENTITY(bvec3(bvec3(true, _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, true))), (injectionSwitch.x < injectionSwitch.y)), true)), bvec3(bvec3(bvec3(bvec3(true, _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, true))), (injectionSwitch.x < injectionSwitch.y)), true)))))))))))), ! (! (_GLF_IDENTITY(true, bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))), bool(bvec2(bool(bvec4(! (false), false, true, true)), true))))), ! (! ((_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(! (false), false, true, true)), bool(bvec4(bool(bvec4(! (false), false, true, true)), true, true, false))), bool(bvec2(bool(bvec4(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (_GLF_IDENTITY(false, (false) && true)))))))))))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false) || ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))))), (false) && true)))))))))), false, true, _GLF_IDENTITY(true, false || (true)))), true)))))))) && _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, false || (true))))))), true), bvec2(bvec4(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), true && (_GLF_IDENTITY(! (false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! _GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec4(bvec3((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), false)), bvec3(bvec3(bvec3(bvec4(bvec3((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), false)))))))), bool(bvec2(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec4(bvec3((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), false)), bvec3(bvec3(bvec3(bvec4(bvec3((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), false)))))))), false))))), _GLF_IDENTITY(bool(bvec4(! (false), false, true, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))), true), bvec3(_GLF_IDENTITY(bvec3(bvec3(true, _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, true))), (injectionSwitch.x < injectionSwitch.y)), true)), bvec3(bvec3(bvec3(bvec3(true, _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, true))), (injectionSwitch.x < injectionSwitch.y)), true)))))))))))), ! (! (_GLF_IDENTITY(true, bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))), bool(bvec2(bool(bvec4(! (false), false, true, true)), true))))), ! (! ((_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(! (false), false, true, true)), bool(bvec4(bool(bvec4(! (false), false, true, true)), true, true, false))), bool(bvec2(bool(bvec4(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (_GLF_IDENTITY(false, (false) && true)))))))))))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false) || ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))))), (false) && true)))))))))), false, true, _GLF_IDENTITY(true, false || (true)))), true)))))))) && _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, false || (true))))))), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY(vec2(mat4(min(injectionSwitch, injectionSwitch), 1.0, 0.0, 0.0, 1.0, 0.0, abs(0.0), 0.0, 1.0, 0.0, sqrt(0.0), 0.0, 0.0, 0.0, 1.0)), vec2(mat3(vec2(mat4(min(injectionSwitch, injectionSwitch), 1.0, 0.0, 0.0, 1.0, 0.0, abs(0.0), 0.0, 1.0, 0.0, sqrt(0.0), 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))))))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-9123.7270), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((vec3(621.932, -372.237, 18.28) * mat2x3(6869.0273, 6441.8062, -5.4, -101.751, -8.4, 765.267)).t), min(_GLF_FUZZED((vec3(621.932, -372.237, 18.28) * mat2x3(6869.0273, 6441.8062, -5.4, -101.751, -8.4, 765.267)).t), _GLF_IDENTITY(_GLF_FUZZED((vec3(621.932, -372.237, 18.28) * mat2x3(6869.0273, 6441.8062, -5.4, -101.751, -8.4, 765.267)).t), 1.0 * (_GLF_FUZZED((vec3(621.932, -372.237, 18.28) * mat2x3(6869.0273, 6441.8062, -5.4, -101.751, -8.4, 765.267)).t))))), clamp(_GLF_FUZZED((vec3(621.932, -372.237, 18.28) * mat2x3(6869.0273, 6441.8062, -5.4, _GLF_IDENTITY(-101.751, mix(float(_GLF_FUZZED(6.2)), float(-101.751), bool(true))), -8.4, _GLF_IDENTITY(765.267, min(765.267, 765.267)))).t), _GLF_IDENTITY(_GLF_FUZZED((vec3(621.932, -372.237, 18.28) * mat2x3(6869.0273, 6441.8062, -5.4, -101.751, -8.4, 765.267)).t), clamp(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY((vec3(621.932, -372.237, 18.28) * mat2x3(6869.0273, 6441.8062, -5.4, -101.751, -8.4, 765.267)).t, max((vec3(621.932, -372.237, 18.28) * mat2x3(6869.0273, 6441.8062, -5.4, -101.751, -8.4, 765.267)).t, (vec3(621.932, -372.237, 18.28) * mat2x3(6869.0273, 6441.8062, -5.4, -101.751, -8.4, 765.267)).t))), float(mat3x2(_GLF_FUZZED((_GLF_IDENTITY(vec3(621.932, -372.237, 18.28), mix(vec3((vec3(621.932, -372.237, 18.28))[0], _GLF_FUZZED(-6.5), _GLF_FUZZED(8.2)), vec3(_GLF_FUZZED(6013.7889), (vec3(621.932, -372.237, 18.28))[1], (vec3(621.932, -372.237, 18.28))[2]), bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))) * mat2x3(6869.0273, 6441.8062, -5.4, -101.751, -8.4, 765.267)).t), 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0))), _GLF_FUZZED((_GLF_IDENTITY(vec3(621.932, -372.237, 18.28), clamp(_GLF_IDENTITY(vec3(621.932, -372.237, 18.28), (true ? vec3(621.932, -372.237, 18.28) : _GLF_FUZZED(vec3(5.4, 6.5, 163.534)))), vec3(621.932, -372.237, 18.28), _GLF_IDENTITY(vec3(621.932, -372.237, 18.28), mat3(1.0) * (vec3(621.932, -372.237, 18.28))))) * mat2x3(6869.0273, 6441.8062, -5.4, -101.751, -8.4, 765.267)).t), _GLF_FUZZED((vec3(_GLF_IDENTITY(621.932, min(_GLF_IDENTITY(621.932, min(621.932, 621.932)), 621.932)), -372.237, 18.28) * mat2x3(6869.0273, 6441.8062, -5.4, -101.751, -8.4, 765.267)).t))), _GLF_FUZZED((vec3(621.932, -372.237, 18.28) * mat2x3(6869.0273, _GLF_IDENTITY(6441.8062, (6441.8062) * 1.0), -5.4, -101.751, -8.4, 765.267)).t)))), bvec2(false, false))).x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true)), ! (! (! (_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true)))))))), (bool(_GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true)), ! (! (! (_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true))))))))) && true)), ! (! (bool(false))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), false || (false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4(_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)) && ((_GLF_DEAD(false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(0u ^ (gl_WorkGroupID.x), (1u & 1u) * (0u ^ (gl_WorkGroupID.x))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 1.0, sqrt(0.0), 1.0, 1.0, 0.0, 1.0, 0.0)))) - vec2(0.0, 0.0)).y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false, true)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false, true))))), bool(bvec4(! (bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false, true))))), false, true, true))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true))), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true))), false), false)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-1.5)), bool(false)))))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).y, bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).y, true, true)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)) * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (_GLF_IDENTITY(bool(bvec2(false, true)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec2(false, true))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (bool(bvec2(false, true))), ! (! (! (bool(bvec2(false, true)))))), true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec2(_GLF_IDENTITY(! (bool(bvec2(false, true))), ! (! (! (bool(bvec2(false, true)))))), true)), false), bvec2(bvec2(bvec2(bool(bvec2(_GLF_IDENTITY(! (bool(bvec2(false, true))), ! (! (! (bool(bvec2(false, true)))))), true)), false))))), ! (! (bool(_GLF_IDENTITY(bvec2(bool(bvec2(_GLF_IDENTITY(! (bool(bvec2(false, true))), ! (! (! (bool(bvec2(false, true)))))), true)), false), bvec2(bvec2(bvec2(bool(bvec2(_GLF_IDENTITY(! (bool(bvec2(false, true))), ! (! (! (bool(bvec2(false, true)))))), true)), false)))))))))), ! (! (! (bool(bvec2(false, true))))))))) && true))), true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false)))), (_GLF_IDENTITY(bool(bvec2(false, true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! _GLF_IDENTITY((! (! (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), false, true))))))), false || ((! (! (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, true))), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(bvec2(false, true))), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec2(bvec2(false, true))), true, false)), false, false))))), false, true))))))))))))) && true))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), _GLF_IDENTITY(bool(bvec2(false, true)), (_GLF_IDENTITY(bool(bvec2(false, true)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(bvec2(false, true))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) && ((bool(bvec2(false, true))))), ! (! (! (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))))))))) && true))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), false || (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true)))) && true), _GLF_IDENTITY(bool(bvec2(false, true)), (_GLF_IDENTITY(bool(bvec2(false, true)), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true))))), ! (! (! (_GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) && true)))))))) && true))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(false, (false) || false))))), bool(bvec4(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(false, (false) && true))), bvec2(bvec4(bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(false, (false) && true))), false, false))))), (_GLF_IDENTITY(bool(bvec2(false, true)), ! (_GLF_IDENTITY(! (bool(bvec2(false, true))), ! (! (! (bool(bvec2(false, _GLF_IDENTITY(true, (true) && true)))))))))) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(! _GLF_IDENTITY((! (false)), true && ((! (false)))), bool(_GLF_IDENTITY(bvec2(! _GLF_IDENTITY((! (false)), true && ((! (false)))), false), bvec2(bvec3(bvec2(! _GLF_IDENTITY((! (false)), true && ((! (false)))), false), false))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).x, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).x) + _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-4085.4182) : _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-0.5)))))) / 1.0)))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(true, ! (! (true))) && (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), false || ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))), false)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)), bool(bvec3(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)), false, true)))) || (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))), true, false))))), false)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (injectionSwitch)).x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))), false)))))))) || false))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).x, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).x) + 0.0))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), true && (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, false, true)))))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)), bvec3(bvec4(bvec3(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)), false))))), false))))))), _GLF_IDENTITY(false, bool(bvec3(false, false, false))))), false || (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))))), true))))), false)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))), false)))))))) || false))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).x, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).x) + 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_FUZZED(injectionSwitch))) : injectionSwitch)))).x, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).x) + 0.0)) - 0.0))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), true && (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))), false, false))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))), false, false)))))) && true)), false)), false || (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(true, (true) || false)))))), false)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))), false)))))))) || false)))))) && true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x, (true ? injectionSwitch.x : _GLF_FUZZED(-7681.7256))) > injectionSwitch.y), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x, (true ? injectionSwitch.x : _GLF_FUZZED(-7681.7256))) > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_base = _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(min(subgroup_id, subgroup_id), clamp(min(subgroup_id, subgroup_id), min(subgroup_id, subgroup_id), min(subgroup_id, subgroup_id))), _GLF_IDENTITY((_GLF_IDENTITY(min(subgroup_id, subgroup_id), clamp(min(subgroup_id, subgroup_id), min(subgroup_id, subgroup_id), min(subgroup_id, subgroup_id)))), ((_GLF_IDENTITY(min(subgroup_id, subgroup_id), clamp(min(subgroup_id, subgroup_id), min(subgroup_id, subgroup_id), min(subgroup_id, subgroup_id))))) | 0u) + 0u), 0u | _GLF_IDENTITY((min(subgroup_id, subgroup_id)), (_GLF_IDENTITY((min(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(subgroup_size))), subgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(((min(subgroup_id, subgroup_id))), _GLF_IDENTITY((((min(subgroup_id, subgroup_id)))), ((((min(subgroup_id, subgroup_id))))) * 1u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(_GLF_IDENTITY(((min(subgroup_id, subgroup_id))), (_GLF_IDENTITY(true ? ((min(subgroup_id, subgroup_id))) : _GLF_FUZZED(workgroup_size), (_GLF_IDENTITY(true ? ((min(subgroup_id, subgroup_id))) : _GLF_FUZZED(workgroup_size), (true ? ((min(subgroup_id, subgroup_id))) : _GLF_FUZZED(workgroup_size)) - 0u)) - 0u))), (_GLF_IDENTITY(((min(subgroup_id, subgroup_id))), _GLF_IDENTITY((true ? ((min(subgroup_id, subgroup_id))) : _GLF_FUZZED(workgroup_size)), clamp((true ? ((min(subgroup_id, subgroup_id))) : _GLF_FUZZED(workgroup_size)), (true ? ((min(subgroup_id, subgroup_id))) : _GLF_FUZZED(workgroup_size)), (true ? ((min(subgroup_id, subgroup_id))) : _GLF_FUZZED(workgroup_size)))))) * 1u)) / 1u) >> 0u)) << 0u))) * subgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (true ? workgroup_base + _GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_base), uint(_GLF_IDENTITY(uint((subgroup_base)), (uint((subgroup_base))) ^ 0u))), min(~ _GLF_IDENTITY((subgroup_base), uint(_GLF_IDENTITY(uint((subgroup_base)), (uint((subgroup_base))) ^ 0u))), ~ _GLF_IDENTITY((subgroup_base), uint(_GLF_IDENTITY(uint((subgroup_base)), (uint((subgroup_base))) ^ 0u))))))) + subgroup_local_id : _GLF_FUZZED(atomicMax(subgroup_id, uaddCarry(subgroup_id, workgroup_id, workgroup_size)))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), (false) || false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), false || (_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), _GLF_IDENTITY(true && (! (! ((false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true && (! (! ((false))))), true && (bool(true && (! (! ((false)))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(true && (! (! ((false))))), true && (bool(true && (! (! ((false))))))))), true && (bool(bool(_GLF_IDENTITY(bool(true && (! (! ((false))))), true && (bool(true && (! (! ((false)))))))))))), (bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(true && (! (! ((false))))), true && (bool(true && (! (! ((false))))))))), true && (bool(bool(_GLF_IDENTITY(bool(true && (! (! ((false))))), true && (bool(true && (! (! ((false))))))))))))) || false))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, ! (! (false))))))), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, ! (! (false))))))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, true)))), (_GLF_IDENTITY((false), false || ((_GLF_IDENTITY(false, (false) || false))))) || false), false, false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))))))), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false)))))) || false), false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))), true && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))) || false), true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec4(false, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))) || false), true)), false), bvec2(bvec2(bvec2(bool(bvec4(false, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))) || false), true)), false))))), true && (bool(_GLF_IDENTITY(bvec2(bool(bvec4(false, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))) || false), true)), false), bvec2(bvec2(bvec2(bool(bvec4(false, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))) || false), true)), false))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))) || false), true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec4(false, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))) || false), true)), false), bvec2(bvec2(bvec2(bool(bvec4(false, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))) || false), true)), false))))), true && (bool(_GLF_IDENTITY(bvec2(bool(bvec4(false, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))) || false), true)), false), bvec2(bvec2(bvec2(bool(bvec4(false, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))) || false), true)), false))))))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (true) && true))))) || false), true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec4(false, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(true, (true) && true))), false || ((! (_GLF_IDENTITY(true, (true) && true))))))) || false), true)), false), bvec2(bvec2(bvec2(bool(bvec4(false, _GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))) || false), true)), false))))), true && (bool(_GLF_IDENTITY(bvec2(bool(bvec4(false, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))) || false), true)), false), bvec2(bvec2(bvec2(bool(bvec4(false, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), false || (! _GLF_IDENTITY((_GLF_IDENTITY(true, (true) && true)), ! (! ((_GLF_IDENTITY(true, (true) && true)))))))))) || false), true)), false)))))))))))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))))), true, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), ! (! (! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))))), bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), (bool(bvec4(false, false, true, true))) && true)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(23.18)), bool(false))), 1.0, sqrt(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(_GLF_ONE(1.0, injectionSwitch.y)), 1.0, 0.0))) > injectionSwitch.y)))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))))))), true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), (bool(bvec4(false, false, true, true))) && true)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(23.18)), bool(false))), 1.0, sqrt(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(_GLF_ONE(1.0, injectionSwitch.y)), 1.0, 0.0))) > injectionSwitch.y)))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))))))), true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, _GLF_IDENTITY(true, ! (! (true))))), (bool(bvec4(false, false, true, _GLF_IDENTITY(true, ! (! (true)))))) || false)), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, _GLF_IDENTITY(true, ! (! (true))))), (bool(bvec4(false, false, true, _GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), bool(bvec4(_GLF_IDENTITY((true), ! (! ((true)))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))))))), _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), ! (! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), ! (! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec3(! (! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), ! (! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))))), true, false)))))))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), ! (! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), ! (! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec3(! (! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), ! (! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))))), true, false)))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(bool(injectionSwitch.x > injectionSwitch.y), false, true), bvec3(bvec4(bvec3(bool(injectionSwitch.x > injectionSwitch.y), false, true), true))))))), ! (! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), ! (! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((! (bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))), true && ((! (bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))))))), ! (! ((_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((! (bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))), true && ((! (bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))))))))))))))))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) || false))))))))))))) || false)))), ! (! (bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(bool(injectionSwitch.x > injectionSwitch.y), false, true), bvec3(bvec4(bvec3(bool(injectionSwitch.x > injectionSwitch.y), false, true), true))))))), ! (! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), ! (! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((! (bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))), true && ((! (bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))))))), ! (! ((_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((! (bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))), true && ((! (bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))))))))))))))))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) || false))))))))))))) || false)))))))))))))), true && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false)))))))), false, true, true))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(561.335)), vec2(_GLF_FUZZED((+ 921.445)), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))))))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, false))))))))))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))), true && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))) || false), true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec4(false, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))) || false), true)), false), bvec2(bvec2(bvec2(bool(bvec4(false, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))) || false), true)), false))))), true && (bool(_GLF_IDENTITY(bvec2(bool(bvec4(false, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))) || false), true)), false), bvec2(bvec2(bvec2(bool(bvec4(false, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))) || false), true)), false))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))) || false), true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec4(false, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))) || false), true)), false), bvec2(bvec2(bvec2(bool(bvec4(false, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))) || false), true)), false))))), true && (bool(_GLF_IDENTITY(bvec2(bool(bvec4(false, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))) || false), true)), false), bvec2(bvec2(bvec2(bool(bvec4(false, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))) || false), true)), false))))))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (true) && true))))) || false), true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec4(false, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(true, (true) && true))), false || ((! (_GLF_IDENTITY(true, (true) && true))))))) || false), true)), false), bvec2(bvec2(bvec2(bool(bvec4(false, _GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))) || false), true)), false))))), true && (bool(_GLF_IDENTITY(bvec2(bool(bvec4(false, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))) || false), true)), false), bvec2(bvec2(bvec2(bool(bvec4(false, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), false || (! _GLF_IDENTITY((_GLF_IDENTITY(true, (true) && true)), ! (! ((_GLF_IDENTITY(true, (true) && true)))))))))) || false), true)), false)))))))))))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))))), true, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), ! (! (! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))))), bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), (bool(bvec4(false, false, true, true))) && true)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(23.18)), bool(false))), 1.0, sqrt(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(_GLF_ONE(1.0, injectionSwitch.y)), 1.0, 0.0))) > injectionSwitch.y)))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))))))), true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), (bool(bvec4(false, false, true, true))) && true)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(23.18)), bool(false))), 1.0, sqrt(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(_GLF_ONE(1.0, injectionSwitch.y)), 1.0, 0.0))) > injectionSwitch.y)))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))))))), true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, _GLF_IDENTITY(true, ! (! (true))))), (bool(bvec4(false, false, true, _GLF_IDENTITY(true, ! (! (true)))))) || false)), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, _GLF_IDENTITY(true, ! (! (true))))), (bool(bvec4(false, false, true, _GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), bool(bvec4(_GLF_IDENTITY((true), ! (! ((true)))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))))))), _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), ! (! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), ! (! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec3(! (! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), ! (! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))))), true, false)))))))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), ! (! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), ! (! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec3(! (! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), ! (! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))))), true, false)))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(bool(injectionSwitch.x > injectionSwitch.y), false, true), bvec3(bvec4(bvec3(bool(injectionSwitch.x > injectionSwitch.y), false, true), true))))))), ! (! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), ! (! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((! (bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))), true && ((! (bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))))))), ! (! ((_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((! (bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))), true && ((! (bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))))))))))))))))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) || false))))))))))))) || false)))), ! (! (bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(bool(injectionSwitch.x > injectionSwitch.y), false, true), bvec3(bvec4(bvec3(bool(injectionSwitch.x > injectionSwitch.y), false, true), true))))))), ! (! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), ! (! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((! (bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))), true && ((! (bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))))))), ! (! ((_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((! (bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))), true && ((! (bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))))))))))))))))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) || false))))))))))))) || false)))))))))))))), true && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false)))))))), false, true, true))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(561.335)), vec2(_GLF_FUZZED((+ 921.445)), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))))))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, false))))))))))), true, false, false))))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))), true && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))) || false), true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec4(false, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))) || false), true)), false), bvec2(bvec2(bvec2(bool(bvec4(false, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))) || false), true)), false))))), true && (bool(_GLF_IDENTITY(bvec2(bool(bvec4(false, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))) || false), true)), false), bvec2(bvec2(bvec2(bool(bvec4(false, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))) || false), true)), false))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))))), true, false)))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, _GLF_IDENTITY(true, ! (! (true))))), (bool(bvec4(false, false, true, _GLF_IDENTITY(true, ! (! (true)))))) || false)), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), ! (! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), ! (! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), ! (! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), ! (! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))) || false))))))))))), true && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, false)))))))))))), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(true, ! (! (true))), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))), true && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))) || false), true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec4(false, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(true, (true) && true))))) || false), true)), false), bvec2(bvec2(bvec2(bool(bvec4(false, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))) || false), true)), false))))), true && (bool(_GLF_IDENTITY(bvec2(bool(bvec4(false, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))) || false), true)), false), bvec2(bvec2(bvec2(bool(bvec4(false, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (true) && true))))) || false), true)), false))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false)))))))))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))))), true, false)))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))))), true, false)))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))))), true, false)))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))))), true, false)))), true)), false)))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))))), true, false)))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))))), true, false)))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))))), true, false)))), true)), false)))), true)), true)))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ((! (true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (bool(bvec4(false, false, true, _GLF_IDENTITY(true, ! (! (true)))))) || false)), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))), ! (! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), ! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), ! (! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(! (! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))), true))))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true, false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true, false, false)), true && (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true, false, false))))))), _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), ! (! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))) || false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), ! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), ! (! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(! (! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))), true))))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true, false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true, false, false)), true && (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true, false, false))))))), _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), ! (! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))) || false))))))))))))), true && ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), true, false), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ((! (true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (bool(bvec4(false, false, true, _GLF_IDENTITY(true, ! (! (true)))))) || false)), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))), ! (! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), ! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), ! (! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(! (! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))), true))))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true, false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true, false, false)), true && (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true, false, false))))))), _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), ! (! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))) || false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), ! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), ! (! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(! (! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))), true))))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true, false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true, false, false)), true && (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true, false, false))))))), _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), ! (! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))) || false))))))))))))), true && ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ((! (true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (bool(bvec4(false, false, true, _GLF_IDENTITY(true, ! (! (true)))))) || false)), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))), ! (! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), ! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), ! (! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(! (! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))), true))))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true, false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true, false, false)), true && (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true, false, false))))))), _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), ! (! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))) || false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), ! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), ! (! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(! (! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))), true))))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true, false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true, false, false)), true && (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true, false, false))))))), _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), ! (! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))) || false))))))))))))), true && ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), true, false), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ((! (true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (bool(bvec4(false, false, true, _GLF_IDENTITY(true, ! (! (true)))))) || false)), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))), ! (! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), ! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), ! (! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(! (! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))), true))))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true, false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true, false, false)), true && (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true, false, false))))))), _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), ! (! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))) || false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), ! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), ! (! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(! (! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))), true))))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true, false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true, false, false)), true && (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true, false, false))))))), _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), ! (! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))) || false))))))))))))), true && ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ((! (true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (bool(bvec4(false, false, true, _GLF_IDENTITY(true, ! (! (true)))))) || false)), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))), ! (! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), ! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), ! (! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(! (! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))), true))))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true, false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true, false, false)), true && (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true, false, false))))))), _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), ! (! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))) || false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), ! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), ! (! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(! (! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))), true))))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true, false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true, false, false)), true && (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true, false, false))))))), _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), ! (! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))) || false))))))))))))), true && ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), true, false), false))))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, false))))))))))))) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, false)), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))) || false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))), true && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(true, true && (true)), true))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * abs(1.0))))))))))), true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))) || false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))), true && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(true, true && (true)), true))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * abs(1.0))))))))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))) || false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))), true && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(true, true && (true)), true))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * abs(1.0))))))))))), true, false))))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true)))))), _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), false))), true, _GLF_IDENTITY(true, false || (true))))), _GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, abs(0.0), 0.0, 0.0, 0.0, log(1.0), 0.0, determinant(mat2(1.0, 0.0, 1.0, sqrt(1.0))), 1.0)))))) && (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), true))), true, true))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), true))), true, true))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), true))), true, true))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, true))), bvec2(bvec4(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), true))), true, true))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, true))), false, false))))))))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), true))), true, true))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), true))), true, true))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), true))), true, true))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, true))), bvec2(bvec4(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), true))), true, true))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, true))), false, false))))))))), ! (! ((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), true))), true, true))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), true))), true, true))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), true))), true, true))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, true))), bvec2(bvec4(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), true))), true, true))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, true))), false, false)))))))))))), true)))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)) && true)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)) && true)))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)) && true)))))), bool(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)) && true)))))), true, true))), false, false, false))))), true, false)))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(bvec4(false, false, true, true))), false || (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-2240.7548)), float(injectionSwitch.y), bool(true))))))))), true && ((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), true && (bool(bvec4(false, false, true, true))))), _GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), true && (bool(bvec4(false, false, true, true))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), true && (bool(bvec4(false, false, true, true))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), true, true)))))))))))), true, _GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))))), true && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(vec4(-6245.8751, 324.860, -6589.9222, 0.5)[2])))))))))))))), true, false))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, true))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(169.889), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(75.31)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))))), true && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, false))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)) && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))))), true && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)) && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))))), true && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(true, false || (true)) && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))))), true && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)) && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))))), true && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(true, false || (true)) && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))))), true && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true), false, false))))))), true, false))), true)), false))))))))))))))), false, false), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(true, true && (true)), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(true, true && (true)), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false || (true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(true, true && (true)), true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), false || (_GLF_IDENTITY(true, true && (true)))), true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), true, false), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec3(_GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec3(bool(bvec2(false, true)), false, true))), true, false))), ! (! (bool(bvec2(false, true)))))), false, true, _GLF_IDENTITY(true, false || (true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2((_GLF_IDENTITY(true, ! (! (true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec4(false, false, true, true))))), true))), true, true))), _GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false)))))))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), true))))))), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(true, false || (true)), true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)) && true)))))), true, false)))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, false, true, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), false || (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-2240.7548)), float(injectionSwitch.y), bool(true))))))))), true && ((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), true && (bool(bvec4(false, false, true, true))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), true && (bool(bvec4(false, false, true, true))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), true && (bool(bvec4(false, false, true, true))))), _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), ((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(4.1)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x > injectionSwitch.y)) && true))), true, true)))))))))))), true, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) || false)))), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))))), true && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, false))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))))), true && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, false))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))))), true && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, false))), true)), false)))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))))), true && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, false))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))))), true && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, false))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))))), true && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, false))), true)), false)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))))), true && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, false))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))))), true && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, false))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))))), true && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, false))), true)), false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))))), true && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, false))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))))), true && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, false))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))))), true && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, false))), true)), false)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))))), true && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, false))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))))), true && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, false))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))))), true && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, false))), true)), false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, false || (true))))) || (false)), _GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(true, true && (true)), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, false), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true)))))), false, true, _GLF_IDENTITY(true, false || (true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), true))), true, true))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)) && true)))))), true, false)))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), false || (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-2240.7548)), float(injectionSwitch.y), bool(true))))))))), true && ((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), true && (bool(bvec4(false, false, true, true))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), true && (bool(bvec4(false, false, true, true))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), true && (bool(bvec4(false, false, true, true))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), true, true)))))))))))), true, _GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))))), true && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, false))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))))), true && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, false))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))))), true && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, false))), true)), false)))))))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true)))))), false, true, _GLF_IDENTITY(true, false || (true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), true))), true, true))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)) && true)))))), true, false)))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), false || (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-2240.7548)), float(injectionSwitch.y), bool(true))))))))), true && ((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), true && (bool(bvec4(false, false, true, true))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), true && (bool(bvec4(false, false, true, true))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), true && (bool(bvec4(false, false, true, true))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), true, true)))))))))))), true, _GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))))), true && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, false))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))))), true && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, false))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))))), true && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, false))), true)), false)))))))))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true)))))), false, true, _GLF_IDENTITY(true, false || (true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), true))), true, true))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)) && true)))))), true, false)))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), false || (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-2240.7548)), float(injectionSwitch.y), bool(true))))))))), true && ((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), true && (bool(bvec4(false, false, true, true))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), true && (bool(bvec4(false, false, true, true))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), true && (bool(bvec4(false, false, true, true))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), true, true)))))))))))), true, _GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))))), true && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, false))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))))), true && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, false))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))))), true && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, false))), true)), false))))))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true)))))), false, true, _GLF_IDENTITY(true, false || (true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), true))), true, true))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)) && true)))))), true, false)))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), false || (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-2240.7548)), float(injectionSwitch.y), bool(true))))))))), true && ((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), true && (bool(bvec4(false, false, true, true))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), true && (bool(bvec4(false, false, true, true))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), true && (bool(bvec4(false, false, true, true))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), true, true)))))))))))), true, _GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))))), true && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, false))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))))), true && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, false))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))))), true && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, false))), true)), false)))))))))))))))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true)))))), false, true, _GLF_IDENTITY(true, false || (true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), true))), true, true))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)) && true)))))), true, false)))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), false || (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-2240.7548)), float(injectionSwitch.y), bool(true))))))))), true && ((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), true && (bool(bvec4(false, false, true, true))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), true && (bool(bvec4(false, false, true, true))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), true && (bool(bvec4(false, false, true, true))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), true, true)))))))))))), true, _GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))))), true && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, false))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))))), true && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, false))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))))), true && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, false))), true)), false)))))))))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true)))))), false, true, _GLF_IDENTITY(true, false || (true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), true))), true, true))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)) && true)))))), true, false)))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), false || (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-2240.7548)), float(injectionSwitch.y), bool(true))))))))), true && ((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), true && (bool(bvec4(false, false, true, true))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), true && (bool(bvec4(false, false, true, true))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), true && (bool(bvec4(false, false, true, true))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), true, true)))))))))))), true, _GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))))), true && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, false))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))))), true && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, false))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))))), true && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, false))), true)), false))))))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true)))))), false, true, _GLF_IDENTITY(true, false || (true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), true))), true, true))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)) && true)))))), true, false)))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), false || (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-2240.7548)), float(injectionSwitch.y), bool(true))))))))), true && ((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), true && (bool(bvec4(false, false, true, true))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), true && (bool(bvec4(false, false, true, true))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), true && (bool(bvec4(false, false, true, true))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), true, true)))))))))))), true, _GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))))), true && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, false))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))))), true && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, false))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))))), true && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, false))), true)), false)))))))))))))))))), false))))))))), false, false))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)))))), true && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(true, true && (true)), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, false), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true)))))), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)), ! (! (bool(bvec2(false, true))))))))))), false, true, _GLF_IDENTITY(true, false || (true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))) && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), true))), true, true))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))))))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, ! (! (false))), true, true))), true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), _GLF_IDENTITY(true, (true) && true), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)) && true)))))), true, false)))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), bool(bvec3(bool(bvec4(false, false, true, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), bool(bvec4(bool(bool(true)), false, true, true)))), true))), false || (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-2240.7548), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-2240.7548), min(_GLF_FUZZED(-2240.7548), _GLF_IDENTITY(_GLF_FUZZED(-2240.7548), mix(float(_GLF_FUZZED(-2240.7548)), float(_GLF_FUZZED(-202.406)), bool(false)))))), float(_GLF_FUZZED((false ? -92.96 : -95.55))), bool(false)))), float(injectionSwitch.y), bool(true)))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-2240.7548), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-2240.7548), min(_GLF_FUZZED(-2240.7548), _GLF_IDENTITY(_GLF_FUZZED(-2240.7548), mix(float(_GLF_FUZZED(-2240.7548)), float(_GLF_FUZZED(-202.406)), bool(false)))))), float(_GLF_FUZZED((false ? -92.96 : -95.55))), bool(false)))), float(injectionSwitch.y), bool(true))))) && true)))))), true && ((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), true && (bool(bvec4(false, false, true, true))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(1335.8989)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) > injectionSwitch.y)) && true))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), true && (_GLF_IDENTITY(bool(bvec4(false, false, true, true)), (bool(bvec4(false, false, true, true))) || false)))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))) && true))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), true && (bool(bvec4(false, false, true, true))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y), ((injectionSwitch.x > injectionSwitch.y)) && true))), true, true)))))))))))), true, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), (false) || false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), false || (true)) && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))))), true, true))))))), true && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, false))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))))), true && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))))), true && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(bool(bvec4(false, false, true, true)), _GLF_IDENTITY(bool(bvec3(bool(bvec4(false, false, true, true)), true, true)), (bool(bvec3(bool(bvec4(false, false, true, true)), true, true))) || false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_IDENTITY(true, (true) && true))))))), true && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true)), true, false))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))))), true && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, false))), true)), false))))))))))))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec2((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (true))), (! (_GLF_IDENTITY(true, true && (true)))) || false))), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, false), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true)))))), false, true, _GLF_IDENTITY(true, false || (true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), true))), true, true))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), bool(bvec2(bool(bvec4(false, false, true, true)), true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), bool(bool(_GLF_IDENTITY(bool(bvec4(false, false, true, true)), (bool(bvec4(false, false, true, true))) || false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, (false) && true), true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))))))) && true)))))), true, false)))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(false, false, true, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), false || (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-2240.7548)), float(injectionSwitch.y), bool(true))), min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-2240.7548)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-2240.7548)), float(injectionSwitch.y), bool(true))))))))))), true && ((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), true && (bool(bvec4(false, false, true, true))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), true && (bool(bvec4(false, false, true, true))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, sqrt(1.0) * (injectionSwitch.x)) > injectionSwitch.y)) && true))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), true, true)), true && (bool(bvec4(false, false, true, true))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) && true))), true, true)))))))))))), true, _GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, ! (! (false))), true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))))), true && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 0.0))) : _GLF_FUZZED(vec2(-8.8, 2.3)))).y))))))))), _GLF_IDENTITY(true, (true) || false), false))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)) && true))))), true, false))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))))), true && ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), bool(bvec3(_GLF_IDENTITY(bool(bvec4(false, false, true, true)), (bool(bvec4(false, false, true, true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, false))), true)), false))))))))))))))), false, false))))), true)))))))))), true)), bool(bvec2(bool(bvec4(_GLF_IDENTITY((false), (_GLF_IDENTITY(_GLF_IDENTITY((false), false || _GLF_IDENTITY(((false)), bool(bvec4(_GLF_IDENTITY(((false)), (((false))) || false), false, false, true)))), (_GLF_IDENTITY((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), true, false)), ! (! (bool(bvec3((false), true, false)))))))), false || ((false)))) || false)) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))), false, false, true)), false))))))) || false)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(594.316))))) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), ((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))) && true) && true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, ! (! (true))) && (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat4x3(mat2(1.0) * (injectionSwitch), sqrt(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))), vec2(vec3(mat2(1.0) * (injectionSwitch), 0.0)))).y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat4x3(mat2(1.0) * (injectionSwitch), sqrt(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(vec4(-8.8, -7916.2975, -4.1, -4621.1765)[3])))))), vec2(_GLF_IDENTITY(vec3(mat2(1.0) * (injectionSwitch), 0.0), max(vec3(mat2(1.0) * (injectionSwitch), 0.0), _GLF_IDENTITY(vec3(mat2(1.0) * (injectionSwitch), 0.0), max(vec3(mat2(1.0) * (injectionSwitch), 0.0), vec3(mat2(1.0) * (injectionSwitch), 0.0)))))))).y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat4x3(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * abs(vec2(1.0, 1.0))), injectionSwitch))), sqrt(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))), vec2(_GLF_IDENTITY(vec3(mat2(1.0) * (injectionSwitch), 0.0), mix(vec3((vec3(mat2(1.0) * (injectionSwitch), 0.0))[0], _GLF_FUZZED(-474.399), (vec3(mat2(1.0) * (injectionSwitch), 0.0))[2]), vec3(_GLF_FUZZED(-9.3), (vec3(mat2(1.0) * (injectionSwitch), 0.0))[1], _GLF_FUZZED(-71.28)), bvec3(false, true, false)))))).y, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat4x3(mat2(1.0) * (injectionSwitch), sqrt(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(286.147))), 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))))), 1.0, 0.0, 0.0, 0.0, 0.0))), vec2(vec3(mat2(1.0) * (injectionSwitch), 0.0)))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat4x3(mat2(1.0) * (injectionSwitch), sqrt(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))), vec2(vec3(mat2(1.0) * (injectionSwitch), 0.0)))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat4x3(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_IDENTITY(sqrt(0.0), (false ? _GLF_FUZZED(vec2(-735.100, 347.764).r) : sqrt(0.0)))), float(_GLF_FUZZED(vec4(-5.7, -50.01, 590.216, 695.582).y)), bool(false))), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), 1.0, 0.0, 0.0, 0.0, 0.0))), vec2(vec3(mat2(1.0) * (injectionSwitch), 0.0)))).y, mix(float(_GLF_FUZZED(-67.34)), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(vec2(mat4x3(mat2(1.0) * (injectionSwitch), sqrt(0.0), 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-8929.9888) : 0.0)), 0.0)), clamp(vec2(mat4x3(mat2(1.0) * (injectionSwitch), sqrt(0.0), 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-8929.9888) : 0.0)), 0.0)), _GLF_IDENTITY(vec2(mat4x3(mat2(1.0) * (injectionSwitch), sqrt(0.0), 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-8929.9888) : 0.0)), 0.0)), (true ? vec2(mat4x3(mat2(1.0) * (injectionSwitch), sqrt(0.0), 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-8929.9888) : 0.0)), 0.0)) : _GLF_FUZZED(vec2(-0.6, -2.1)))), _GLF_IDENTITY(vec2(mat4x3(mat2(1.0) * (injectionSwitch), sqrt(0.0), 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-8929.9888) : 0.0)), 0.0)), mix(vec2((vec2(mat4x3(mat2(1.0) * (injectionSwitch), sqrt(0.0), 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-8929.9888) : 0.0)), 0.0)))[0], _GLF_FUZZED(88.84)), vec2(_GLF_FUZZED(-0.0), (vec2(mat4x3(mat2(1.0) * (injectionSwitch), sqrt(0.0), 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-8929.9888) : 0.0)), 0.0)))[1]), bvec2(false, true)))))), vec2(vec3(mat2(1.0) * (injectionSwitch), 0.0)))).y), bool(true))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat4x3(mat2(1.0) * (injectionSwitch), sqrt(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))), vec2(vec3(mat2(1.0) * (injectionSwitch), 0.0))), _GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat4x3(mat2(1.0) * (injectionSwitch), sqrt(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))), vec2(vec3(mat2(1.0) * (injectionSwitch), 0.0))), 1.0)), vec2(0.0, 0.0) + (_GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat4x3(mat2(1.0) * (injectionSwitch), sqrt(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))), vec2(vec3(mat2(1.0) * (injectionSwitch), 0.0))), 1.0)), max(vec2(vec3(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat4x3(mat2(1.0) * (injectionSwitch), sqrt(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))), vec2(vec3(mat2(1.0) * (injectionSwitch), 0.0))), 1.0)), vec2(vec3(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat4x3(mat2(1.0) * (injectionSwitch), sqrt(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))), vec2(vec3(mat2(1.0) * (injectionSwitch), 0.0))), 1.0)))))))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))))), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) + vec2(0.0, 0.0)))), vec2(mat4x3(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)) * (injectionSwitch), sqrt(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(626.085)), bool(false))), _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0))), vec2(vec3(mat2(1.0) * (injectionSwitch), 0.0)))).y))))))))))) || false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec3(false, true, true)))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), (bool(bvec3(false, true, true))) || false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint next_virtual_gid = workgroup_base + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) << 0u)) - 0u), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(injectionSwitch.y, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, abs(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 0.0, 1.0), max(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), (vec3(0.0, 0.0, 1.0)) / vec3(1.0, 1.0, 1.0)), vec3(0.0, 0.0, 1.0))))) + (float(mat4x3(injectionSwitch.y, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3(0.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 1.0)), mix(float(_GLF_FUZZED(2520.7775)), float(float(mat3(0.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 1.0))), bool(true)))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, abs(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))))))) * _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), 1u))) + _GLF_IDENTITY(1, (1) * 1)) % subgroup_size), ~ (~ (((subgroup_local_id + _GLF_IDENTITY(1, (1) * 1)) % subgroup_size))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[virtual_gid], _GLF_IDENTITY(uint(1), 0u | _GLF_IDENTITY((uint(1)), _GLF_IDENTITY(((uint(1))), max(((uint(1))), ((uint(1))))) | 0u)), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id % 2) == _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 ^ (0))) << 0), ! (_GLF_IDENTITY(! ((subgroup_local_id % 2) == _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 ^ (0))) << 0)), ! (! (! ((subgroup_local_id % 2) == _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 ^ (0))) << 0))))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 1u)))) | 0u))) % 2) == 0), ! (_GLF_IDENTITY(! (((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 1u)))) | 0u))) % 2) == 0)), true && (! (((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 1u)))) | 0u))) % 2) == 0)))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! ((subgroup_local_id % _GLF_IDENTITY(2, min(_GLF_IDENTITY(2, max(2, _GLF_IDENTITY(2, (2) << 0))), 2))) == 0), (! ((subgroup_local_id % _GLF_IDENTITY(2, min(2, 2))) == 0)) && true)), ! _GLF_IDENTITY((! ((! ((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) % _GLF_IDENTITY(2, min(2, 2))) == 0)))), true && ((! ((! ((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) % _GLF_IDENTITY(2, min(2, 2))) == 0))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ((_GLF_DEAD(false)) && true) && true)))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, true && (false)), false), bvec3(bvec3(bvec3(false, false, false))))), false || (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(true);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)), true && (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), true), true)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), true), true)), false)))))))
      {
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-670.211) : injectionSwitch.x))) - 0.0), injectionSwitch.x)) > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))))) || _GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) / 1), _GLF_IDENTITY(4, (4) | 0), _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(_GLF_IDENTITY(26461, int(ivec2(26461, 0)))))))), (4) ^ 0), 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))) && true, ! (! ((_GLF_IDENTITY(false, true && (false))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), bool(bvec4(bool(bvec2(true, false)), true, true, false)))))))))), ! (! (false)))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), (false) || _GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), ! (! (_GLF_IDENTITY(! (! (! (false))), true && (! (! (! (false))))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), false || ((false)))))))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (false))))))) && true)) && true)))) && true)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), ! (! (_GLF_IDENTITY(true && (true), bool(bvec3(true && (true), true, false))))))), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), _GLF_IDENTITY(true, bool(bvec3(true, true, false))) && (true && (true)))), false), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(true, true && (true)), false), true))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_IDENTITY(false, (false) && true))))), true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, true && (true)), false, true, false)), bool(bool(bool(bvec4(_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), bool(bvec3(_GLF_IDENTITY((true), true && ((true))), false, true)))), false, true, false)))))), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false))))), true, false)))), true))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, true && (true)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, true && (true)), false), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(true, true && (true)), false), true))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_IDENTITY(false, (false) && true))))), true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), true && (true)), false, true, false)), bool(bool(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), true && (true)), false, true, false)))))), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false)))), true))))))), bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, true && (true)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, true && (true)), false), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(true, true && (true)), false), true))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))), true, _GLF_IDENTITY(false, (false) && true))))), true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(true, ! (! (true))) && (true)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, true && (true)), false, true, false)), bool(bool(bool(bvec4(_GLF_IDENTITY(true, true && (true)), false, true, false)))))), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false)))), true))))))))))) || false), (false) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.x), mix(float(_GLF_FUZZED(_GLF_IDENTITY(vec2(_GLF_IDENTITY(481.226, (481.226) / 1.0), -92.49), clamp(vec2(_GLF_IDENTITY(481.226, (481.226) / 1.0), -92.49), _GLF_IDENTITY(vec2(_GLF_IDENTITY(481.226, (481.226) / 1.0), -92.49), (vec2(_GLF_IDENTITY(481.226, (481.226) / 1.0), -92.49)) * mat2(1.0)), vec2(_GLF_IDENTITY(481.226, (481.226) / 1.0), -92.49))).x)), float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * _GLF_ONE(1.0, injectionSwitch.y))), min(float(injectionSwitch.x), float(injectionSwitch.x)))), bool(true))), mix(float(_GLF_FUZZED(3.9)), float(float(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec4(injectionSwitch.x, 0.0, 1.0, 1.0)), clamp(float(vec4(injectionSwitch.x, 0.0, 1.0, 1.0)), float(vec4(injectionSwitch.x, 0.0, 1.0, 1.0)), float(_GLF_IDENTITY(vec4(injectionSwitch.x, 0.0, 1.0, 1.0), min(vec4(injectionSwitch.x, 0.0, 1.0, 1.0), _GLF_IDENTITY(vec4(injectionSwitch.x, 0.0, 1.0, 1.0), max(vec4(injectionSwitch.x, 0.0, 1.0, 1.0), vec4(injectionSwitch.x, 0.0, 1.0, 1.0))))))))))))), bool(true))), (_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.x), mix(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(481.226, (481.226) / _GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 1.0, 1.0)))), -92.49), _GLF_IDENTITY(clamp(vec2(_GLF_IDENTITY(481.226, (481.226) / 1.0), -92.49), _GLF_IDENTITY(vec2(_GLF_IDENTITY(481.226, (481.226) / 1.0), -92.49), (vec2(_GLF_IDENTITY(481.226, (481.226) / 1.0), -92.49)) * mat2(1.0)), vec2(_GLF_IDENTITY(481.226, (481.226) / 1.0), -92.49)), mix(vec2((clamp(vec2(_GLF_IDENTITY(481.226, (481.226) / 1.0), -92.49), _GLF_IDENTITY(vec2(_GLF_IDENTITY(481.226, (481.226) / 1.0), -92.49), (vec2(_GLF_IDENTITY(481.226, (481.226) / 1.0), -92.49)) * mat2(1.0)), vec2(_GLF_IDENTITY(481.226, (481.226) / 1.0), -92.49)))[0], _GLF_IDENTITY((clamp(vec2(_GLF_IDENTITY(481.226, (481.226) / 1.0), -92.49), _GLF_IDENTITY(vec2(_GLF_IDENTITY(481.226, (481.226) / 1.0), -92.49), (vec2(_GLF_IDENTITY(481.226, (481.226) / 1.0), -92.49)) * mat2(1.0)), vec2(_GLF_IDENTITY(481.226, (481.226) / 1.0), -92.49)))[1], max((clamp(vec2(_GLF_IDENTITY(481.226, (481.226) / 1.0), -92.49), _GLF_IDENTITY(vec2(_GLF_IDENTITY(481.226, (481.226) / 1.0), -92.49), (vec2(_GLF_IDENTITY(481.226, (481.226) / 1.0), -92.49)) * mat2(1.0)), vec2(_GLF_IDENTITY(481.226, (481.226) / 1.0), -92.49)))[1], (clamp(vec2(_GLF_IDENTITY(481.226, (481.226) / 1.0), -92.49), _GLF_IDENTITY(vec2(_GLF_IDENTITY(481.226, (481.226) / 1.0), -92.49), (vec2(_GLF_IDENTITY(481.226, (481.226) / 1.0), -92.49)) * mat2(1.0)), vec2(_GLF_IDENTITY(481.226, (481.226) / 1.0), -92.49)))[1]))), vec2(_GLF_FUZZED(-2741.8564), _GLF_FUZZED((41.23 / 319.091))), bvec2(false, false)))).x, mix(float(_GLF_FUZZED((-9.6 - -9.1))), float(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(481.226, (481.226) / _GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 1.0, 1.0)))), -92.49), _GLF_IDENTITY(clamp(vec2(_GLF_IDENTITY(481.226, (481.226) / 1.0), -92.49), _GLF_IDENTITY(vec2(_GLF_IDENTITY(481.226, (481.226) / 1.0), -92.49), (vec2(_GLF_IDENTITY(481.226, (481.226) / 1.0), -92.49)) * mat2(1.0)), vec2(_GLF_IDENTITY(481.226, (481.226) / 1.0), -92.49)), mix(vec2((clamp(vec2(_GLF_IDENTITY(481.226, (481.226) / 1.0), -92.49), _GLF_IDENTITY(vec2(_GLF_IDENTITY(481.226, (481.226) / 1.0), -92.49), (vec2(_GLF_IDENTITY(481.226, (481.226) / 1.0), -92.49)) * mat2(1.0)), vec2(_GLF_IDENTITY(481.226, (481.226) / 1.0), -92.49)))[0], _GLF_IDENTITY((clamp(vec2(_GLF_IDENTITY(481.226, (481.226) / 1.0), -92.49), _GLF_IDENTITY(vec2(_GLF_IDENTITY(481.226, (481.226) / 1.0), -92.49), (vec2(_GLF_IDENTITY(481.226, (481.226) / 1.0), -92.49)) * mat2(1.0)), vec2(_GLF_IDENTITY(481.226, (481.226) / 1.0), -92.49)))[1], max((clamp(vec2(_GLF_IDENTITY(481.226, (481.226) / 1.0), -92.49), _GLF_IDENTITY(vec2(_GLF_IDENTITY(481.226, (481.226) / 1.0), -92.49), (vec2(_GLF_IDENTITY(481.226, (481.226) / 1.0), -92.49)) * mat2(1.0)), vec2(_GLF_IDENTITY(481.226, (481.226) / 1.0), -92.49)))[1], (clamp(vec2(_GLF_IDENTITY(481.226, (481.226) / 1.0), -92.49), _GLF_IDENTITY(vec2(_GLF_IDENTITY(481.226, (481.226) / 1.0), -92.49), (vec2(_GLF_IDENTITY(481.226, (481.226) / 1.0), -92.49)) * mat2(1.0)), vec2(_GLF_IDENTITY(481.226, (481.226) / 1.0), -92.49)))[1]))), vec2(_GLF_FUZZED(-2741.8564), _GLF_FUZZED((41.23 / 319.091))), bvec2(false, false)))).x, mix(float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(481.226, (481.226) / _GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 1.0, 1.0)))), -92.49), _GLF_IDENTITY(clamp(vec2(_GLF_IDENTITY(481.226, (481.226) / 1.0), -92.49), _GLF_IDENTITY(vec2(_GLF_IDENTITY(481.226, (481.226) / 1.0), -92.49), (vec2(_GLF_IDENTITY(481.226, (481.226) / 1.0), -92.49)) * mat2(1.0)), vec2(_GLF_IDENTITY(481.226, (481.226) / 1.0), -92.49)), mix(vec2((clamp(vec2(_GLF_IDENTITY(481.226, (481.226) / 1.0), -92.49), _GLF_IDENTITY(vec2(_GLF_IDENTITY(481.226, (481.226) / 1.0), -92.49), (vec2(_GLF_IDENTITY(481.226, (481.226) / 1.0), -92.49)) * mat2(1.0)), vec2(_GLF_IDENTITY(481.226, (481.226) / 1.0), -92.49)))[0], _GLF_IDENTITY((clamp(vec2(_GLF_IDENTITY(481.226, (481.226) / 1.0), -92.49), _GLF_IDENTITY(vec2(_GLF_IDENTITY(481.226, (481.226) / 1.0), -92.49), (vec2(_GLF_IDENTITY(481.226, (481.226) / 1.0), -92.49)) * mat2(1.0)), vec2(_GLF_IDENTITY(481.226, (481.226) / 1.0), -92.49)))[1], max((clamp(vec2(_GLF_IDENTITY(481.226, (481.226) / 1.0), -92.49), _GLF_IDENTITY(vec2(_GLF_IDENTITY(481.226, (481.226) / 1.0), -92.49), (vec2(_GLF_IDENTITY(481.226, (481.226) / 1.0), -92.49)) * mat2(1.0)), vec2(_GLF_IDENTITY(481.226, (481.226) / 1.0), -92.49)))[1], (clamp(vec2(_GLF_IDENTITY(481.226, (481.226) / 1.0), -92.49), _GLF_IDENTITY(vec2(_GLF_IDENTITY(481.226, (481.226) / 1.0), -92.49), (vec2(_GLF_IDENTITY(481.226, (481.226) / 1.0), -92.49)) * mat2(1.0)), vec2(_GLF_IDENTITY(481.226, (481.226) / 1.0), -92.49)))[1]))), vec2(_GLF_FUZZED(-2741.8564), _GLF_FUZZED((41.23 / 319.091))), bvec2(false, false)))).x), float(_GLF_FUZZED(5.2)), bool(false)))), bool(true))))), float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-54.79) : injectionSwitch.x)), (injectionSwitch.x) * _GLF_ONE(1.0, injectionSwitch.y))), min(float(injectionSwitch.x), _GLF_IDENTITY(float(injectionSwitch.x), mix(float(float(injectionSwitch.x)), float(_GLF_FUZZED(7170.3368)), bool(false)))))), bool(true))), mix(float(_GLF_FUZZED(3.9)), float(float(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec4(injectionSwitch.x, 0.0, 1.0, 1.0)), clamp(float(vec4(injectionSwitch.x, 0.0, 1.0, 1.0)), float(vec4(injectionSwitch.x, 0.0, 1.0, 1.0)), float(_GLF_IDENTITY(vec4(injectionSwitch.x, 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), min(vec4(injectionSwitch.x, 0.0, 1.0, 1.0), _GLF_IDENTITY(vec4(injectionSwitch.x, 0.0, 1.0, 1.0), max(vec4(injectionSwitch.x, 0.0, 1.0, 1.0), vec4(injectionSwitch.x, 0.0, 1.0, 1.0))))))))))))), bool(true)))) - 0.0), float(_GLF_FUZZED(5.9)), bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), true && (! (false)))))))))) > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) + 0.0), injectionSwitch[1]))[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))).y), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(5.9)), bool(false))) > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)) * _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-916.464, -47.10, -33.79, 766.549)))), min(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch), vec2(vec2((injectionSwitch)))) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-5.4)))), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(injectionSwitch))))), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))))))) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(0.0, 0.0) + ((injectionSwitch) * mat2(1.0)))))))).y, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, mix(float(_GLF_FUZZED(-0.5)), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), bool(true))), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(0.0), max(float(0.0), float(0.0)))))), mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(4.1, min(4.1, 4.1))), _GLF_IDENTITY((_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, mix(float(_GLF_FUZZED(-0.5)), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(vec2(vec4((injectionSwitch) * mat2(1.0), 1.0, 0.0)), (vec2(vec4((injectionSwitch) * mat2(1.0), 1.0, 0.0))) * exp(vec2(0.0, 0.0))))).y), bool(true))), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(0.0), max(float(0.0), float(0.0)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, mix(float(_GLF_FUZZED(-0.5)), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(vec2(vec4((injectionSwitch) * mat2(1.0), 1.0, 0.0)), (vec2(vec4((injectionSwitch) * mat2(1.0), 1.0, 0.0))) * exp(vec2(0.0, 0.0))))).y), bool(true))), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(0.0), max(float(0.0), float(0.0)))))), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, mix(float(_GLF_FUZZED(-0.5)), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(vec2(vec4((injectionSwitch) * mat2(1.0), 1.0, 0.0)), (vec2(vec4((injectionSwitch) * mat2(1.0), 1.0, 0.0))) * exp(vec2(0.0, 0.0))))).y), bool(true))), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(0.0), max(float(0.0), float(0.0)))))), (vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, mix(float(_GLF_FUZZED(-0.5)), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(vec2(vec4((injectionSwitch) * mat2(1.0), 1.0, 0.0)), (vec2(vec4((injectionSwitch) * mat2(1.0), 1.0, 0.0))) * exp(vec2(0.0, 0.0))))).y), bool(true))), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(0.0), max(float(0.0), float(0.0))))))) + vec2(0.0, 0.0))) - vec2(0.0, 0.0)) : _GLF_FUZZED(vec2(-4508.6506, 6.4))))), min((_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, mix(float(_GLF_FUZZED(-0.5)), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(vec2(vec4((injectionSwitch) * mat2(1.0), 1.0, 0.0)), (vec2(vec4((injectionSwitch) * mat2(1.0), 1.0, 0.0))) * exp(vec2(0.0, 0.0))))).y), bool(true))), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(0.0), max(float(0.0), float(0.0)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, mix(float(_GLF_FUZZED(-0.5)), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(vec2(vec4((injectionSwitch) * mat2(1.0), 1.0, 0.0)), (vec2(vec4((injectionSwitch) * mat2(1.0), 1.0, 0.0))) * exp(vec2(0.0, 0.0))))).y), bool(true))), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(0.0), max(float(0.0), float(0.0)))))), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, mix(float(_GLF_FUZZED(-0.5)), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(vec2(vec4((injectionSwitch) * mat2(1.0), 1.0, 0.0)), (vec2(vec4((injectionSwitch) * mat2(1.0), 1.0, 0.0))) * exp(vec2(0.0, 0.0))))).y), bool(true))), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(0.0), max(float(0.0), float(0.0)))))), (vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, mix(float(_GLF_FUZZED(-0.5)), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(vec2(vec4((injectionSwitch) * mat2(1.0), 1.0, 0.0)), (vec2(vec4((injectionSwitch) * mat2(1.0), 1.0, 0.0))) * exp(vec2(0.0, 0.0))))).y), bool(true))), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(0.0), max(float(0.0), float(0.0))))))) + vec2(0.0, 0.0))) - vec2(0.0, 0.0)) : _GLF_FUZZED(vec2(-4508.6506, 6.4))))), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, mix(float(_GLF_FUZZED(-0.5)), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(vec2(vec4((injectionSwitch) * mat2(1.0), 1.0, 0.0)), (vec2(vec4((injectionSwitch) * mat2(1.0), 1.0, 0.0))) * exp(vec2(0.0, 0.0))))).y), bool(true))), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(0.0), max(float(0.0), float(0.0)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, mix(float(_GLF_FUZZED(-0.5)), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(vec2(vec4((injectionSwitch) * mat2(1.0), 1.0, 0.0)), (vec2(vec4((injectionSwitch) * mat2(1.0), 1.0, 0.0))) * exp(vec2(0.0, 0.0))))).y), bool(true))), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(0.0), max(float(0.0), float(0.0)))))), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, mix(float(_GLF_FUZZED(-0.5)), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(vec2(vec4((injectionSwitch) * mat2(1.0), 1.0, 0.0)), (vec2(vec4((injectionSwitch) * mat2(1.0), 1.0, 0.0))) * exp(vec2(0.0, 0.0))))).y), bool(true))), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(0.0), max(float(0.0), float(0.0)))))), (vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, mix(float(_GLF_FUZZED(-0.5)), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(vec2(vec4((injectionSwitch) * mat2(1.0), 1.0, 0.0)), (vec2(vec4((injectionSwitch) * mat2(1.0), 1.0, 0.0))) * exp(vec2(0.0, 0.0))))).y), bool(true))), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(0.0), max(float(0.0), float(0.0))))))) + vec2(0.0, 0.0))) - vec2(0.0, 0.0)) : _GLF_FUZZED(vec2(-4508.6506, 6.4)))))))[1]), vec2((vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, mix(float(_GLF_FUZZED(-0.5)), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), bool(true))), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(_GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, sqrt(0.0))))), max(float(0.0), float(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-0.8) : 0.0)))))))))))[0], _GLF_FUZZED(7443.6520)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), min(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-5.4)))), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(injectionSwitch))))), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(0.0, 0.0) + ((injectionSwitch) * mat2(1.0))))))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-5.4)))), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(injectionSwitch))))), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(round(injectionSwitch)) : _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * ((injectionSwitch) * mat2(1.0))))), vec2(0.0, 0.0) + ((injectionSwitch) * mat2(1.0)))))))))).y, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, mix(float(_GLF_FUZZED(-0.5)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y : _GLF_FUZZED(8.6)))), bool(true))), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(0.0), max(float(0.0), float(0.0)))))), mix(vec2(_GLF_FUZZED(4.1), (vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, mix(float(_GLF_FUZZED(-0.5)), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), bool(true))), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(0.0), max(float(0.0), float(0.0)))))))[1]), vec2((vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, mix(float(_GLF_FUZZED(-0.5)), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), bool(true))), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(0.0), max(float(_GLF_IDENTITY(0.0, 0.0 + (0.0))), float(0.0)))))))[0], _GLF_FUZZED(7443.6520)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(-319.553, 73.13)))) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-5.4)))), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(injectionSwitch))))), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(0.0, 0.0) + ((injectionSwitch) * mat2(1.0)))))))).y, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, mix(float(_GLF_FUZZED(-0.5)), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), bool(true))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, mix(float(_GLF_FUZZED(-0.5)), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, mix(float(_GLF_FUZZED(-0.5)), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, mix(float(_GLF_FUZZED(-0.5)), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), bool(true))), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, mix(float(_GLF_FUZZED(-0.5)), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), bool(true))))))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(0.0), max(float(0.0), float(0.0))))), min(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(0.0), max(float(0.0), float(0.0))))), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(0.0), max(float(0.0), float(0.0)))))))), mix(vec2(_GLF_FUZZED(4.1), (vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, mix(float(_GLF_FUZZED(-0.5)), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), bool(true))), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(0.0), max(float(0.0), float(0.0)))))))[1]), vec2((vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, mix(float(_GLF_FUZZED(-0.5)), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), bool(true))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(float(0.0), max(float(0.0), float(0.0)))), clamp(float(_GLF_IDENTITY(float(0.0), max(float(0.0), float(0.0)))), float(_GLF_IDENTITY(float(0.0), max(float(0.0), float(0.0)))), float(_GLF_IDENTITY(float(0.0), max(float(0.0), float(0.0)))))))))[0], _GLF_FUZZED(7443.6520)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, true))), true, true, true))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(radians((-1724.6581 * -3.8))))))) && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.6) : 1.0)), 1.0, 1.0)), 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.y, 1.0), (vec2(injectionSwitch.y, 1.0)) / vec2(1.0, 1.0))), max(float(_GLF_IDENTITY(vec2(injectionSwitch.y, 1.0), (vec2(injectionSwitch.y, 1.0)) / vec2(1.0, 1.0))), float(_GLF_IDENTITY(vec2(injectionSwitch.y, 1.0), (vec2(injectionSwitch.y, 1.0)) / vec2(1.0, 1.0))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec3(bool(bool(false)), true, false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))) || false), ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))) || false), true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))) || false)))))) && true)))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(true, false || (true)), false)))))) && _GLF_IDENTITY(true, false || (true)), ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true)))))))), false || (true)), false)))))) && _GLF_IDENTITY(true, false || (true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true)))))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (_GLF_IDENTITY(false, true && (false))), true)))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
