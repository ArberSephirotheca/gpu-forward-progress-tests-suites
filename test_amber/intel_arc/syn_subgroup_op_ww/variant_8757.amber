#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-971.495, 419.801)))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)) ? _GLF_FUZZED(-4559.1097) : injectionSwitch.y))))))
      {
       for(int _injected_loop_counter = _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(57876))), 0, 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (-44883 & 0)); _injected_loop_counter --)
      {
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), min(1, 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))), false))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(83.90, -9.4)))), clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(83.90, min(83.90, _GLF_IDENTITY(83.90, (83.90) * 1.0))), -9.4)))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(83.90, -9.4)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) + vec2(0.0, 0.0)), (_GLF_IDENTITY(true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(83.90, -9.4)), (_GLF_IDENTITY(_GLF_FUZZED(vec2(83.90, -9.4)), (_GLF_FUZZED(vec2(83.90, -9.4))) * vec2(1.0, 1.0))) - sin(vec2(0.0, 0.0))), min(true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(83.90, -9.4)), (_GLF_IDENTITY(_GLF_FUZZED(vec2(83.90, -9.4)), (_GLF_FUZZED(vec2(83.90, -9.4))) * vec2(1.0, 1.0))) - sin(vec2(0.0, 0.0))), true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(83.90, -9.4)), (_GLF_IDENTITY(_GLF_FUZZED(vec2(83.90, -9.4)), (_GLF_FUZZED(vec2(83.90, -9.4))) * vec2(1.0, 1.0))) - sin(vec2(0.0, 0.0))))))))).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(83.90, -9.4)))), clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(83.90, -9.4)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(vec2(83.90, -9.4))), (true ? (true ? injectionSwitch : _GLF_FUZZED(vec2(83.90, -9.4))) : _GLF_FUZZED(injectionSwitch)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) + vec2(0.0, 0.0)), (true ? injectionSwitch : _GLF_FUZZED(vec2(83.90, -9.4)))))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0)))))) / 1.0, (false ? _GLF_FUZZED(min(98.12, -0.2)) : (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0))))), min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0))))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0)))))))) / 1.0))), max(injectionSwitch.y, injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false, false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((_GLF_IDENTITY(false, bool(bool(false)))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, false)))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter)) != _GLF_IDENTITY(0, (false ? _GLF_FUZZED(atomicMin(_injected_loop_counter, -59392)) : _GLF_IDENTITY(0, 0 ^ (0))))); _injected_loop_counter --)
      {
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true)))) || false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = (((1 | 1) << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) ^ 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | 0)); _injected_loop_counter --)
        {
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), false || ((! (_GLF_DEAD(false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) ^ 0)))], _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY(0u, max(0u, 0u))), (_GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY(0u, max(0u, 0u))), ((uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY(0u, max(0u, 0u)))) / (1u | 1u))) | ((uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY(0u, max(0u, 0u))))) ^ (gl_WorkGroupSize[_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) ^ 0)))])), (gl_WorkGroupSize[0]) * 1u), gl_WorkGroupSize[1], gl_WorkGroupSize[2])), uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), (uvec3(gl_WorkGroupSize)) | (uvec3(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))))))))).x;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), false || (bool(false)))) && true)), (bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), false || (bool(false)))) && true))) || false)), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)), (_GLF_IDENTITY(bool(bvec3(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)), ! (! (bool(bvec3(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)))))) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) ^ 0u)) + 0u);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.x, 1.0), clamp(vec2(injectionSwitch.x, 1.0), vec2(injectionSwitch.x, 1.0), vec2(injectionSwitch.x, 1.0)))), (true ? float(_GLF_IDENTITY(vec2(injectionSwitch.x, 1.0), clamp(vec2(injectionSwitch.x, 1.0), vec2(injectionSwitch.x, 1.0), vec2(injectionSwitch.x, 1.0)))) : _GLF_FUZZED(4.5)))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, sqrt(0.0), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0))) > injectionSwitch.y)) || (false))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), subgroup_id)) * subgroup_size, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), subgroup_id)) * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), subgroup_id)) * subgroup_size) ^ 0u)) << 0u), (workgroup_base + _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))) << 0u), subgroup_id)), subgroup_id)) * subgroup_size) * 1u) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY(true, _GLF_IDENTITY(true && (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bool(true)))))), (true && (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), true))), true, false, false)))))))))) || false)) ? (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) + 0), min(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u) + 1)), subgroup_local_id + 1)), subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, uint(uint(subgroup_local_id + 1))))), (subgroup_local_id + 1) >> _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u) | (uvec4(0u, 0u, 0u, 0u))))), (0u) ^ 0u))) % subgroup_size : _GLF_FUZZED(subgroup_local_id))));
 atomicStore(buf[virtual_gid], uint(1), _GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), min(4, _GLF_IDENTITY(4, 0 ^ (4)))), 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(bool(bvec3(false, true, true)), bool(bvec2(bool(bvec3(false, true, true)), true))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec3(false, true, true))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(subgroup_local_id + 1 < subgroup_size)
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))) || false)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   do
    {
     atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)), _injected_loop_counter)) != (((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) ^ 1)), bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter != (((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) ^ 1)), false, true, false))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0))), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0))), vec4(0.0, 0.0, 1.0, 1.0))), 0.0, 0.0), _GLF_IDENTITY(mat2x4(mat4(mat2x4(injectionSwitch, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0))), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0))), vec4(0.0, 0.0, 1.0, 1.0))), 0.0, 0.0))), (mat2x4(mat4(mat2x4(injectionSwitch, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0))), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0))), vec4(0.0, 0.0, 1.0, 1.0))), 0.0, 0.0)))) * mat2(1.0))))).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((_GLF_IDENTITY(+ 2.5, (+ _GLF_IDENTITY(2.5, min(_GLF_IDENTITY(2.5, float(_GLF_IDENTITY(vec4(2.5, 1.0, 1.0, 0.0), clamp(vec4(2.5, 1.0, 1.0, 0.0), vec4(2.5, 1.0, 1.0, 0.0), vec4(2.5, 1.0, 1.0, 0.0))))), _GLF_IDENTITY(2.5, mix(float(2.5), float(_GLF_FUZZED(-790.060)), bool(false)))))) * 1.0)))), vec2(_GLF_FUZZED(8.9), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))).y))) || _GLF_IDENTITY(false, (false) || false)), false, true)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec4(-2445.4457, 3.4, -14.89, 407.705).rg) : injectionSwitch)).x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         barrier();
        }
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false) || (injectionSwitch.x > injectionSwitch.y)), true))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)))))) || false) || (injectionSwitch.x > injectionSwitch.y)), true))))))))))
    {
     do
      {
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   do
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-92.89), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED((- 32.37))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), injectionSwitch)).y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-92.89), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED((- 32.37))), bvec2(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), float(_GLF_FUZZED((24.58 * 8.3))), bool(false))) > injectionSwitch.y))))), injectionSwitch)).y)))) && true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) + 0.0) > injectionSwitch.y))))
        barrier();
       barrier();
      }
     subgroupAll(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(4733.1843))) < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(4733.1843))) < injectionSwitch.y)))))) && true));
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_WRAPPED_LOOP(false)))) && _GLF_IDENTITY(true, ! (! (true)))));
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))) / 1.0), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))))))))) || false), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))) / 1.0), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))))))), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))) / 1.0), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))))))), _GLF_IDENTITY(false, ! (! (false))))), (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))) / 1.0), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))))))), _GLF_IDENTITY(false, ! (! (false))))), true && (bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))) / 1.0), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))))))), _GLF_IDENTITY(false, ! (! (false)))))))) || false)))) || false)) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y))))), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-328.764), _GLF_FUZZED(7423.4222)), vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(((injectionSwitch)[0]) / 1.0, max(((injectionSwitch)[0]) / 1.0, ((injectionSwitch)[0]) / 1.0))), (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), bool(bool(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, log(1.0)), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, log(1.0)), vec3(0.0, 1.0, 0.0))), 0.0)), max(float(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, log(1.0)), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, log(1.0)), vec3(0.0, 1.0, 0.0))), 0.0)), float(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, log(1.0)), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, log(1.0)), vec3(0.0, 1.0, 0.0))), 0.0))))) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))))))))));
               if(_GLF_DEAD(false))
                barrier();
              }
             barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bvec4(bool(bvec3(false, true, false)), true, true, false))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) && true))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-70.14, 5594.9484)) : injectionSwitch))) * vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))).x > injectionSwitch.y)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), (injectionSwitch.x > injectionSwitch.y))))))))), ! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), _GLF_IDENTITY((! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.6), _GLF_FUZZED((- 2854.2375))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y))), bool(_GLF_IDENTITY(bvec2(! (injectionSwitch.x > injectionSwitch.y), true), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(408.671), _GLF_IDENTITY((injectionSwitch)[1], float(mat2x3((injectionSwitch)[1], 0.0, 1.0, 1.0, abs(1.0), _GLF_IDENTITY(cos(0.0), min(_GLF_IDENTITY(cos(0.0), mix(float(_GLF_IDENTITY(cos(0.0), (cos(0.0)) - 0.0)), float(_GLF_FUZZED(3148.5569)), bool(false))), cos(0.0))))))), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-6.3), (false ? _GLF_FUZZED(-573.211) : _GLF_IDENTITY(_GLF_FUZZED(-6.3), (_GLF_IDENTITY(_GLF_FUZZED(-6.3), clamp(_GLF_FUZZED(-6.3), _GLF_FUZZED(-6.3), _GLF_FUZZED(-6.3)))) - 0.0)))), bvec2(_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(71.69) : injectionSwitch.y)))), false))).x > injectionSwitch.y), true), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(! (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(408.671), _GLF_IDENTITY((injectionSwitch)[1], float(mat2x3((injectionSwitch)[1], 0.0, 1.0, 1.0, abs(1.0), cos(0.0))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-6.3)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), true), true), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(! (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(408.671), _GLF_IDENTITY((injectionSwitch)[1], float(mat2x3((injectionSwitch)[1], 0.0, 1.0, 1.0, abs(1.0), cos(0.0))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-6.3)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x > injectionSwitch.y), true), true)), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(408.671), _GLF_IDENTITY((injectionSwitch)[1], float(mat2x3((injectionSwitch)[1], 0.0, 1.0, 1.0, abs(1.0), cos(0.0))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-6.3)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), abs(vec2(1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(408.671), _GLF_IDENTITY((injectionSwitch)[1], float(mat2x3((injectionSwitch)[1], 0.0, 1.0, 1.0, abs(1.0), cos(0.0))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-6.3)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))).x > injectionSwitch.y), true), true)), bvec3(bvec3(bvec3(bvec3(bvec2(! (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(408.671), _GLF_IDENTITY((injectionSwitch)[1], float(mat2x3((injectionSwitch)[1], 0.0, 1.0, 1.0, abs(1.0), cos(_GLF_IDENTITY(0.0, (0.0) - sin(0.0))))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-6.3)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x > injectionSwitch.y), true), true))))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(408.671), _GLF_IDENTITY((injectionSwitch)[1], float(mat2x3((injectionSwitch)[1], 0.0, 1.0, 1.0, abs(1.0), cos(0.0))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-6.3)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(408.671), _GLF_IDENTITY((injectionSwitch)[1], float(mat2x3((injectionSwitch)[1], 0.0, 1.0, 1.0, abs(1.0), cos(0.0))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-6.3)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(408.671), _GLF_IDENTITY((injectionSwitch)[1], float(mat2x3((injectionSwitch)[1], 0.0, 1.0, 1.0, abs(1.0), cos(0.0))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-6.3)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(408.671), _GLF_IDENTITY((injectionSwitch)[1], float(mat2x3((injectionSwitch)[1], 0.0, 1.0, 1.0, abs(1.0), cos(0.0))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-6.3)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))).x > injectionSwitch.y), true), true)), bvec3(bvec3(bvec3(bvec3(bvec2(! (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(408.671), _GLF_IDENTITY((injectionSwitch)[1], float(mat2x3((injectionSwitch)[1], 0.0, 1.0, 1.0, abs(1.0), cos(0.0))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-6.3)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x > injectionSwitch.y), true), true))))))), true)))))), bvec3(bvec4(bvec3(bvec2(! (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(408.671), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1])), float(mat2x3(_GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) * 1.0), 0.0, 1.0, 1.0, abs(1.0), cos(0.0))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-6.3)), bvec2(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y))))), _GLF_IDENTITY(false, (false) && true)))).x > injectionSwitch.y), true), true), false))))), false)), bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(408.671), _GLF_IDENTITY((injectionSwitch)[1], float(mat2x3((injectionSwitch)[1], 0.0, 1.0, 1.0, abs(1.0), cos(0.0))))), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-6.3, (-6.3) - 0.0))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x > _GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (injectionSwitch.y))), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(! (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(408.671), _GLF_IDENTITY((injectionSwitch)[1], float(mat2x3((injectionSwitch)[1], 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(74.94)), float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-8.9) : 1.0))), bool(true))), 1.0, abs(1.0), cos(0.0))))), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-6.3, (-6.3) - 0.0))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x > injectionSwitch.y), true), true), bvec3(bvec4(bvec3(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), mix(vec2(_GLF_FUZZED(408.671), _GLF_IDENTITY((injectionSwitch)[1], float(mat2x3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))[1], 1.0 * ((injectionSwitch)[1])), 0.0, 1.0, 1.0, abs(1.0), cos(_GLF_IDENTITY(0.0, (0.0) - 0.0)))))), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-6.3, mix(float(_GLF_FUZZED((- -8.8))), float(-6.3), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x > injectionSwitch.y), true), true), false))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)), false || (bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true))))))), true))))))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.6), _GLF_FUZZED((- 2854.2375))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y))), bool(_GLF_IDENTITY(bvec2(! (injectionSwitch.x > injectionSwitch.y), true), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(408.671), _GLF_IDENTITY((injectionSwitch)[1], float(mat2x3((injectionSwitch)[1], 0.0, 1.0, 1.0, abs(1.0), _GLF_IDENTITY(cos(0.0), min(_GLF_IDENTITY(cos(0.0), mix(float(_GLF_IDENTITY(cos(0.0), (cos(0.0)) - 0.0)), float(_GLF_FUZZED(3148.5569)), bool(false))), cos(0.0))))))), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-6.3), (false ? _GLF_FUZZED(-573.211) : _GLF_IDENTITY(_GLF_FUZZED(-6.3), (_GLF_IDENTITY(_GLF_FUZZED(-6.3), clamp(_GLF_FUZZED(-6.3), _GLF_FUZZED(-6.3), _GLF_FUZZED(-6.3)))) - 0.0)))), bvec2(_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(71.69) : injectionSwitch.y)))), false))).x > injectionSwitch.y), true), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(! (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(408.671), _GLF_IDENTITY((injectionSwitch)[1], float(mat2x3((injectionSwitch)[1], 0.0, 1.0, 1.0, abs(1.0), cos(0.0))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-6.3)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), true), true), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(! (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(408.671), _GLF_IDENTITY((injectionSwitch)[1], float(mat2x3((injectionSwitch)[1], 0.0, 1.0, 1.0, abs(1.0), cos(0.0))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-6.3)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x > injectionSwitch.y), true), true)), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(408.671), _GLF_IDENTITY((injectionSwitch)[1], float(mat2x3((injectionSwitch)[1], 0.0, 1.0, 1.0, abs(1.0), cos(0.0))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-6.3)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), abs(vec2(1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(408.671), _GLF_IDENTITY((injectionSwitch)[1], float(mat2x3((injectionSwitch)[1], 0.0, 1.0, 1.0, abs(1.0), cos(0.0))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-6.3)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))).x > injectionSwitch.y), true), true)), bvec3(bvec3(bvec3(bvec3(bvec2(! (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(408.671), _GLF_IDENTITY((injectionSwitch)[1], float(mat2x3((injectionSwitch)[1], 0.0, 1.0, 1.0, abs(1.0), cos(_GLF_IDENTITY(0.0, (0.0) - sin(0.0))))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-6.3)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x > injectionSwitch.y), true), true))))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(408.671), _GLF_IDENTITY((injectionSwitch)[1], float(mat2x3((injectionSwitch)[1], 0.0, 1.0, 1.0, abs(1.0), cos(0.0))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-6.3)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(408.671), _GLF_IDENTITY((injectionSwitch)[1], float(mat2x3((injectionSwitch)[1], 0.0, 1.0, 1.0, abs(1.0), cos(0.0))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-6.3)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(408.671), _GLF_IDENTITY((injectionSwitch)[1], float(mat2x3((injectionSwitch)[1], 0.0, 1.0, 1.0, abs(1.0), cos(0.0))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-6.3)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(408.671), _GLF_IDENTITY((injectionSwitch)[1], float(mat2x3((injectionSwitch)[1], 0.0, 1.0, 1.0, abs(1.0), cos(0.0))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-6.3)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))).x > injectionSwitch.y), true), true)), bvec3(bvec3(bvec3(bvec3(bvec2(! (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(408.671), _GLF_IDENTITY((injectionSwitch)[1], float(mat2x3((injectionSwitch)[1], 0.0, 1.0, 1.0, abs(1.0), cos(0.0))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-6.3)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x > injectionSwitch.y), true), true))))))), true)))))), bvec3(bvec4(bvec3(bvec2(! (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(408.671), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1])), float(mat2x3(_GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) * 1.0), 0.0, 1.0, 1.0, abs(1.0), cos(0.0))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-6.3)), bvec2(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y))))), _GLF_IDENTITY(false, (false) && true)))).x > injectionSwitch.y), true), true), false))))), false)), bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(408.671), _GLF_IDENTITY((injectionSwitch)[1], float(mat2x3((injectionSwitch)[1], 0.0, 1.0, 1.0, abs(1.0), cos(0.0))))), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-6.3, (-6.3) - 0.0))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x > _GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (injectionSwitch.y))), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(! (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(408.671), _GLF_IDENTITY((injectionSwitch)[1], float(mat2x3((injectionSwitch)[1], 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(74.94)), float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-8.9) : 1.0))), bool(true))), 1.0, abs(1.0), cos(0.0))))), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-6.3, (-6.3) - 0.0))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x > injectionSwitch.y), true), true), bvec3(bvec4(bvec3(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), mix(vec2(_GLF_FUZZED(408.671), _GLF_IDENTITY((injectionSwitch)[1], float(mat2x3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))[1], 1.0 * ((injectionSwitch)[1])), 0.0, 1.0, 1.0, abs(1.0), cos(_GLF_IDENTITY(0.0, (0.0) - 0.0)))))), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-6.3, mix(float(_GLF_FUZZED((- -8.8))), float(-6.3), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x > injectionSwitch.y), true), true), false))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)), false || (bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true))))))), true))))))), false)), (bool(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.6), _GLF_FUZZED((- 2854.2375))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y))), bool(_GLF_IDENTITY(bvec2(! (injectionSwitch.x > injectionSwitch.y), true), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(408.671), _GLF_IDENTITY((injectionSwitch)[1], float(mat2x3((injectionSwitch)[1], 0.0, 1.0, 1.0, abs(1.0), _GLF_IDENTITY(cos(0.0), min(_GLF_IDENTITY(cos(0.0), mix(float(_GLF_IDENTITY(cos(0.0), (cos(0.0)) - 0.0)), float(_GLF_FUZZED(3148.5569)), bool(false))), cos(0.0))))))), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-6.3), (false ? _GLF_FUZZED(-573.211) : _GLF_IDENTITY(_GLF_FUZZED(-6.3), (_GLF_IDENTITY(_GLF_FUZZED(-6.3), clamp(_GLF_FUZZED(-6.3), _GLF_FUZZED(-6.3), _GLF_FUZZED(-6.3)))) - 0.0)))), bvec2(_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(71.69) : injectionSwitch.y)))), false))).x > injectionSwitch.y), true), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(! (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(408.671), _GLF_IDENTITY((injectionSwitch)[1], float(mat2x3((injectionSwitch)[1], 0.0, 1.0, 1.0, abs(1.0), cos(0.0))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-6.3)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), true), true), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(! (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(408.671), _GLF_IDENTITY((injectionSwitch)[1], float(mat2x3((injectionSwitch)[1], 0.0, 1.0, 1.0, abs(1.0), cos(0.0))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-6.3)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x > injectionSwitch.y), true), true)), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(408.671), _GLF_IDENTITY((injectionSwitch)[1], float(mat2x3((injectionSwitch)[1], 0.0, 1.0, 1.0, abs(1.0), cos(0.0))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-6.3)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), abs(vec2(1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(408.671), _GLF_IDENTITY((injectionSwitch)[1], float(mat2x3((injectionSwitch)[1], 0.0, 1.0, 1.0, abs(1.0), cos(0.0))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-6.3)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))).x > injectionSwitch.y), true), true)), bvec3(bvec3(bvec3(bvec3(bvec2(! (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(408.671), _GLF_IDENTITY((injectionSwitch)[1], float(mat2x3((injectionSwitch)[1], 0.0, 1.0, 1.0, abs(1.0), cos(_GLF_IDENTITY(0.0, (0.0) - sin(0.0))))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-6.3)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x > injectionSwitch.y), true), true))))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(408.671), _GLF_IDENTITY((injectionSwitch)[1], float(mat2x3((injectionSwitch)[1], 0.0, 1.0, 1.0, abs(1.0), cos(0.0))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-6.3)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(408.671), _GLF_IDENTITY((injectionSwitch)[1], float(mat2x3((injectionSwitch)[1], 0.0, 1.0, 1.0, abs(1.0), cos(0.0))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-6.3)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(408.671), _GLF_IDENTITY((injectionSwitch)[1], float(mat2x3((injectionSwitch)[1], 0.0, 1.0, 1.0, abs(1.0), cos(0.0))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-6.3)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(408.671), _GLF_IDENTITY((injectionSwitch)[1], float(mat2x3((injectionSwitch)[1], 0.0, 1.0, 1.0, abs(1.0), cos(0.0))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-6.3)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))).x > injectionSwitch.y), true), true)), bvec3(bvec3(bvec3(bvec3(bvec2(! (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(408.671), _GLF_IDENTITY((injectionSwitch)[1], float(mat2x3((injectionSwitch)[1], 0.0, 1.0, 1.0, abs(1.0), cos(0.0))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-6.3)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x > injectionSwitch.y), true), true))))))), true)))))), bvec3(bvec4(bvec3(bvec2(! (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(408.671), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1])), float(mat2x3(_GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) * 1.0), 0.0, 1.0, 1.0, abs(1.0), cos(0.0))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-6.3)), bvec2(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y))))), _GLF_IDENTITY(false, (false) && true)))).x > injectionSwitch.y), true), true), false))))), false)), bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(408.671), _GLF_IDENTITY((injectionSwitch)[1], float(mat2x3((injectionSwitch)[1], 0.0, 1.0, 1.0, abs(1.0), cos(0.0))))), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-6.3, (-6.3) - 0.0))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x > _GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (injectionSwitch.y))), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(! (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(408.671), _GLF_IDENTITY((injectionSwitch)[1], float(mat2x3((injectionSwitch)[1], 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(74.94)), float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-8.9) : 1.0))), bool(true))), 1.0, abs(1.0), cos(0.0))))), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-6.3, (-6.3) - 0.0))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x > injectionSwitch.y), true), true), bvec3(bvec4(bvec3(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), mix(vec2(_GLF_FUZZED(408.671), _GLF_IDENTITY((injectionSwitch)[1], float(mat2x3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))[1], 1.0 * ((injectionSwitch)[1])), 0.0, 1.0, 1.0, abs(1.0), cos(_GLF_IDENTITY(0.0, (0.0) - 0.0)))))), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-6.3, mix(float(_GLF_FUZZED((- -8.8))), float(-6.3), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x > injectionSwitch.y), true), true), false))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)), false || (bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true))))))), true))))))), false))) && true)))))))), _GLF_IDENTITY(bool(bool((! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true && (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false, false, false)))))) && true), true), bvec2(bvec3(bvec2(! (injectionSwitch.x > injectionSwitch.y), true), _GLF_IDENTITY(false, bool(bvec3(false, false, true))))))))))))))))), bool(bvec4(bool(bool(_GLF_IDENTITY((! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0))).x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2(! (injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * _GLF_ONE(1.0, injectionSwitch.y)) > injectionSwitch.y), (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * _GLF_ONE(1.0, injectionSwitch.y)) > injectionSwitch.y), bool(bvec3(! (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED(1.0), _GLF_FUZZED(-533.386)), vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), bvec2(true, true)))))).x) * _GLF_ONE(1.0, injectionSwitch.y)) > injectionSwitch.y), false, false)))) && true), true), false)))))))))))), ! (! (_GLF_IDENTITY((! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0))).x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2(! (injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec3(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * _GLF_ONE(1.0, injectionSwitch.y)) > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * _GLF_ONE(1.0, injectionSwitch.y)) > injectionSwitch.y)))), true), false))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0))).x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * _GLF_ONE(1.0, injectionSwitch.y)) > injectionSwitch.y), true), false)), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec3(bvec2(! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * _GLF_ONE(1.0, injectionSwitch.y)) > injectionSwitch.y), true), false)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec3(bvec2(! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * _GLF_ONE(1.0, injectionSwitch.y)) > injectionSwitch.y), true), false)), true)), bvec2(bvec2(bvec2(bvec3(bvec2(bvec3(bvec2(! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * _GLF_ONE(1.0, injectionSwitch.y)) > injectionSwitch.y), true), false)), true)))))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec3(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * _GLF_ONE(1.0, injectionSwitch.y)) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * _GLF_ONE(1.0, injectionSwitch.y)) > injectionSwitch.y))), true), false)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec3(bvec2(! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * _GLF_ONE(1.0, injectionSwitch.y)) > injectionSwitch.y), true), false)), true)), bvec2(bvec2(bvec2(bvec3(bvec2(bvec3(bvec2(! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * _GLF_ONE(1.0, injectionSwitch.y)) > injectionSwitch.y), true), false)), true)))))))), true)))))))))))))))), ((! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0))).x, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0))).x), float(_GLF_FUZZED(-3868.5659)), bool(false))) > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, true, false))), true), bvec2(bvec3(bvec2(! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(faceforward(ldexp(-3415.5060, -20981), -4.0, 1811.5728)) : injectionSwitch.y)))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, 0.0, 1.0, 0.0)), max(float(vec4(injectionSwitch.y, 0.0, 1.0, 0.0)), float(vec4(injectionSwitch.y, 0.0, 1.0, 0.0)))))), true), false))))))))))))) || false)))))), true, true, false)))) && true)))))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-27.89) : injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       else
        {
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
    }
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / 1)) | (4)), _GLF_IDENTITY(64, _GLF_IDENTITY(int(_GLF_IDENTITY(int(64), 0 ^ (int(64)))), (_GLF_IDENTITY(int(_GLF_IDENTITY(int(64), 0 ^ (int(64)))), 0 | (int(_GLF_IDENTITY(int(64), 0 ^ (int(64))))))) | 0)), 4);
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-320.802)), _GLF_IDENTITY(vec2(_GLF_FUZZED(0.4), _GLF_IDENTITY((injectionSwitch)[1], (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch)[1] : _GLF_FUZZED(log(-208.284))))), (vec2(_GLF_FUZZED(0.4), _GLF_IDENTITY((injectionSwitch)[1], (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(51.84)), vec2(_GLF_FUZZED((77.29 * 40.70)), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x < injectionSwitch.y)) ? (injectionSwitch)[1] : _GLF_FUZZED(log(-208.284)))))) + log(vec2(1.0, 1.0))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), true && _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), true && (_GLF_IDENTITY(bool(bool((false))), ! (! (bool(bool((false))))))))) && true), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, cos(0.0), exp(0.0), 0.0, 1.0, 0.0)), mat2(1.0) * (vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, cos(0.0), exp(0.0), 0.0, 1.0, 0.0))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, cos(0.0), exp(0.0), 0.0, 1.0, 0.0)), mat2(1.0) * (vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, cos(0.0), exp(0.0), 0.0, 1.0, 0.0)))))) * mat2(1.0), ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, cos(0.0), exp(0.0), 0.0, 1.0, 0.0)), mat2(1.0) * (vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, cos(0.0), exp(0.0), 0.0, 1.0, 0.0)))))) * mat2(1.0)) / vec2(1.0, 1.0))).y))), bool(bool(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), true && (_GLF_IDENTITY(bool(bool((false))), ! (! (bool(bool((false))))))))) && true), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), cos(0.0), exp(0.0), 0.0, 1.0, 0.0)), mat2(1.0) * (_GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, cos(0.0), exp(0.0), 0.0, 1.0, 0.0)), clamp(_GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, cos(0.0), exp(0.0), 0.0, 1.0, 0.0)), mix(vec2(_GLF_FUZZED(-38.57), (vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, cos(0.0), exp(0.0), 0.0, 1.0, 0.0)))[1]), vec2((vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, cos(0.0), exp(0.0), 0.0, 1.0, 0.0)))[0], _GLF_FUZZED(-837.408)), bvec2(true, false))), vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, cos(0.0), exp(0.0), 0.0, 1.0, 0.0)), vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, cos(0.0), exp(0.0), 0.0, 1.0, 0.0))))))), vec2(vec3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), cos(0.0), exp(0.0), 0.0, 1.0, 0.0)), mat2(1.0) * (_GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, cos(0.0), exp(0.0), 0.0, 1.0, 0.0)), clamp(_GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, cos(0.0), exp(0.0), 0.0, 1.0, 0.0)), mix(vec2(_GLF_FUZZED(-38.57), (vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, cos(0.0), exp(0.0), 0.0, 1.0, 0.0)))[1]), vec2((vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, cos(0.0), exp(0.0), 0.0, 1.0, 0.0)))[0], _GLF_FUZZED(-837.408)), bvec2(true, false))), vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, cos(0.0), exp(0.0), 0.0, 1.0, 0.0)), vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, cos(0.0), exp(0.0), 0.0, 1.0, 0.0))))))), 0.0))).y, 1.0 * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), cos(0.0), exp(0.0), 0.0, 1.0, 0.0)), mat2(1.0) * (_GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, cos(0.0), exp(0.0), 0.0, 1.0, 0.0)), clamp(_GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(vec4(0.0, 1.0, 0.0, log(1.0)))), _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 1.0, cos(0.0), exp(0.0), 0.0, 1.0, 0.0)), mix(vec2(_GLF_FUZZED(-38.57), (vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, cos(0.0), exp(0.0), 0.0, 1.0, 0.0)))[1]), vec2((vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, cos(0.0), exp(0.0), 0.0, 1.0, 0.0)))[0], _GLF_FUZZED(-837.408)), _GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), true))))), vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, cos(0.0), exp(0.0), 0.0, 1.0, 0.0)), vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, cos(0.0), exp(0.0), 0.0, 1.0, 0.0))))))).y))))), ! (! ((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), _GLF_IDENTITY(true && (_GLF_IDENTITY(bool(bool((false))), ! (! (bool(bool((false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true && (_GLF_IDENTITY(bool(bool((false))), ! (! (bool(bool((false))))))))))) && true), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), cos(0.0), exp(0.0), 0.0, 1.0, 0.0)), mat2(1.0) * (_GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, cos(0.0), exp(0.0), 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(8.1)), bool(false))), _GLF_IDENTITY(0.0, max(0.0, 0.0)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(cos(0.0), 0.0 + (cos(0.0))), exp(0.0), 0.0, 1.0, 0.0)), clamp(_GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(cos(0.0), 0.0 + (cos(0.0))), exp(0.0), 0.0, 1.0, 0.0)), mix(vec2(_GLF_FUZZED(3.3), _GLF_FUZZED(870.007)), vec2((vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(cos(0.0), 0.0 + (cos(0.0))), exp(0.0), 0.0, 1.0, 0.0)))[0], (vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(cos(0.0), 0.0 + (cos(0.0))), exp(0.0), 0.0, 1.0, 0.0)))[1]), bvec2(true, true))), vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(cos(0.0), 0.0 + (cos(0.0))), exp(0.0), 0.0, 1.0, 0.0)), _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(cos(0.0), 0.0 + (cos(0.0))), exp(0.0), 0.0, 1.0, 0.0)), min(vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(cos(0.0), 0.0 + (cos(0.0))), exp(0.0), 0.0, 1.0, 0.0)), vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(cos(0.0), 0.0 + (cos(0.0))), exp(0.0), 0.0, 1.0, 0.0)))))), mix(vec2(_GLF_FUZZED(-38.57), (vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, cos(0.0), exp(0.0), 0.0, 1.0, 0.0)))[1]), vec2((vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, cos(_GLF_IDENTITY(0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))) + (0.0))), exp(0.0), 0.0, 1.0, 0.0)))[0], _GLF_FUZZED(-837.408)), bvec2(true, false))), _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, cos(0.0), exp(0.0), 0.0, 1.0, 0.0)), mix(vec2(_GLF_FUZZED((764.714 + 6.8)), _GLF_FUZZED(7.1)), vec2((vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, cos(0.0), exp(0.0), 0.0, 1.0, 0.0)))[0], (vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, cos(0.0), exp(0.0), 0.0, 1.0, 0.0)))[1]), bvec2(true, true))), vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, cos(0.0), exp(0.0), 0.0, 1.0, 0.0))))))).y, _GLF_IDENTITY(1.0 * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), cos(0.0), exp(0.0), 0.0, 1.0, 0.0)), mat2(1.0) * (_GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, cos(0.0), exp(0.0), 0.0, 1.0, 0.0)), clamp(_GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, cos(0.0), exp(0.0), 0.0, 1.0, 0.0)), mix(vec2(_GLF_FUZZED(-38.57), (vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, cos(0.0), exp(0.0), 0.0, 1.0, 0.0)))[1]), vec2((vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, cos(0.0), exp(0.0), 0.0, 1.0, 0.0)))[0], _GLF_FUZZED(-837.408)), bvec2(true, false))), vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, cos(0.0), exp(0.0), 0.0, 1.0, 0.0)), vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, cos(0.0), exp(0.0), 0.0, 1.0, 0.0))))))).y), 1.0 * (1.0 * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))) : _GLF_FUZZED(2537.4717))), 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), cos(0.0), exp(0.0), 0.0, 1.0, 0.0)), mat2(1.0) * (_GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, cos(0.0), exp(0.0), 0.0, 1.0, 0.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(cos(0.0), (cos(0.0)) / determinant(mat2(sqrt(1.0), 1.0, 0.0, 1.0))), exp(0.0), 0.0, 1.0, 0.0)), min(_GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(cos(0.0), (cos(0.0)) / determinant(mat2(sqrt(1.0), 1.0, 0.0, 1.0))), exp(0.0), 0.0, 1.0, 0.0)), vec2(1.0, 1.0) * (vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(cos(0.0), (cos(0.0)) / determinant(mat2(sqrt(1.0), 1.0, 0.0, 1.0))), exp(0.0), 0.0, 1.0, 0.0)))), vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(cos(0.0), (cos(0.0)) / determinant(mat2(sqrt(1.0), 1.0, 0.0, 1.0))), exp(0.0), 0.0, 1.0, 0.0)))), mix(vec2(_GLF_FUZZED(-38.57), (vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, cos(0.0), exp(0.0), 0.0, 1.0, 0.0)))[1]), vec2((vec2(mat3x4(injectionSwitch, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(4996.0799)), bool(false))), 1.0, 1.0, 0.0, 1.0, cos(0.0), exp(0.0), 0.0, 1.0, 0.0)))[0], _GLF_FUZZED(-837.408)), bvec2(true, false))), vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, cos(0.0), exp(0.0), 0.0, 1.0, 0.0)), vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, cos(0.0), exp(0.0), 0.0, 1.0, 0.0))))))).y))))))))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     else
      {
       subgroupAll(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(2.4) : injectionSwitch.x)) > injectionSwitch.y))))))) || false)))))));
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)) || false))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec2((false), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, true && (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
