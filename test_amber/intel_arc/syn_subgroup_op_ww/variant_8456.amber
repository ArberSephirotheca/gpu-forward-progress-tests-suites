#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY((_GLF_IDENTITY((false), ! (! ((false))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((false))), ((! ((false)))) || false))) || false)) || false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY((false), ! (! ((false))))) && true)), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY((false), ! (! ((false))))) && true)), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY((false), ! (! ((false))))) && true)), true, false, false))))), bool(bvec2((_GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, false, false)), (bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, false, false))) && true))))))), false))))))), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((false))), ((! ((false)))) || false))) || false)) || false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY((false), ! (! ((false))))) && true)), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY((false), ! (! ((false))))) && true)), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY((false), ! (! ((false))))) && true)), true, false, false))))), bool(bvec2((_GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, false, false)), (bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, false, false))) && true))))))), false))))))), ! (! ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((false))), ((! ((false)))) || false))) || false)) || false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY((false), ! (! ((false))))) && true)), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY((false), ! (! ((false))))) && true)), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY((false), ! (! ((false))))) && true)), true, false, false))))), bool(bvec2((_GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, false, false)), (bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, false, false))) && true))))))), false))))))))))) && true))) && true) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), false))))))), (bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(false, (false) && true))), false || (! (bool(_GLF_IDENTITY(false, (false) || false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(false)), false || (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), false || (bool(_GLF_IDENTITY(false, (false) || false)))))))), bool(bvec2(! (_GLF_IDENTITY(! (bool(false)), false || (! (bool(_GLF_IDENTITY(false, (false) || false)))))), false))))))))) || false))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, 1.0, tan(0.0), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(1.0, 1.0, 0.0)), _GLF_IDENTITY(min(float(vec3(1.0, 1.0, 0.0)), float(vec3(1.0, 1.0, 0.0))), mix(float(min(float(vec3(1.0, 1.0, 0.0)), float(vec3(1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))))), float(_GLF_FUZZED(-730.614)), bool(false)))))) / 1.0), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-9.4) : 1.0)), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(abs(0.0), mix(float(_GLF_FUZZED((- 9.7))), float(_GLF_IDENTITY(abs(0.0), max(abs(0.0), abs(0.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.9), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(1557.4752)), bvec2(true, false))).y))))), (_GLF_IDENTITY(_GLF_IDENTITY(abs(0.0), (true ? abs(0.0) : _GLF_FUZZED(-82.28))), float(mat4x3(_GLF_IDENTITY(abs(0.0), (true ? abs(0.0) : _GLF_FUZZED(-82.28))), length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, tan(0.0), 0.0, 1.0, 0.0, 1.0)))) - 0.0), 1.0, 0.0, 1.0)), mix(_GLF_IDENTITY(float(_GLF_FUZZED(-681.350)), determinant(mat2(1.0, 0.0, 0.0, 1.0)) * (float(_GLF_FUZZED(-681.350)))), float(float(mat2x3(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(abs(0.0), (abs(0.0)) / 1.0), (_GLF_IDENTITY(abs(0.0), (true ? abs(_GLF_IDENTITY(0.0, float(mat4x2(0.0, exp(0.0), abs(0.0), sin(0.0), 1.0, determinant(mat3(1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 1.0, 1.0)))) : _GLF_FUZZED(-82.28)))) - 0.0), 1.0, 0.0, 1.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), mix(float(_GLF_FUZZED(6.0)), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat2x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-2.8)), bool(false))), 1.0, abs(_GLF_IDENTITY(0.0, 1.0 * (0.0))), 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)), 0.0)), 1.0))), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat2x3(1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(1.0, 0.0, 1.0, exp(0.0), 1.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0, 1.0, 0.0), transpose(transpose(mat4x3(1.0, 0.0, 1.0, exp(0.0), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) / 1.0), 1.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(smoothstep(clamp(8.8, 4.1, -8.5), 27.42, 82.21))))), 0.0, 1.0, 0.0)))))), abs(0.0), 1.0, 0.0, 1.0))), clamp(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 1.0, _GLF_IDENTITY(abs(0.0), (false ? _GLF_FUZZED(-49.22) : abs(0.0))), 1.0, 0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) + 0.0), float(mat2x3(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(58.34) : 1.0)), abs(0.0), 1.0, 0.0, 1.0))), float(vec4(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 1.0, abs(0.0), 1.0, 0.0, 1.0))), 0.0, 1.0, 0.0))), _GLF_IDENTITY(1.0, float(mat2x3(1.0, 1.0, abs(0.0), 1.0, 0.0, 1.0))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(float(mat2x3(1.0, 1.0, abs(0.0), 1.0, 0.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 0.0, exp(0.0), 1.0, 1.0, 0.0, 0.0, 0.0))))), mix(float(float(mat2x3(1.0, 1.0, abs(0.0), 1.0, 0.0, 1.0))), float(_GLF_FUZZED(_GLF_IDENTITY(3009.3888, max(3009.3888, 3009.3888)))), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))), (false ? _GLF_FUZZED(log2(-6.1)) : _GLF_IDENTITY(float(mat2x3(1.0, 1.0, abs(0.0), 1.0, 0.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 0.0, exp(0.0), 1.0, 1.0, 0.0, 0.0, 0.0))))), mix(float(float(mat2x3(1.0, 1.0, abs(0.0), 1.0, 0.0, 1.0))), float(_GLF_FUZZED(_GLF_IDENTITY(3009.3888, max(3009.3888, 3009.3888)))), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))))), clamp(_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat2x3(1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(1.0, 0.0, 1.0, exp(0.0), 1.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0, 1.0, 0.0), transpose(transpose(mat4x3(1.0, 0.0, 1.0, exp(0.0), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) / 1.0), 1.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(smoothstep(clamp(8.8, 4.1, -8.5), 27.42, 82.21))))), 0.0, 1.0, 0.0)))))), abs(0.0), 1.0, 0.0, 1.0))), clamp(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 1.0, _GLF_IDENTITY(abs(0.0), (false ? _GLF_FUZZED(-49.22) : abs(0.0))), 1.0, 0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) + 0.0), float(mat2x3(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(58.34) : 1.0)), abs(0.0), 1.0, 0.0, 1.0))), float(vec4(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 1.0, abs(0.0), 1.0, 0.0, 1.0))), 0.0, 1.0, 0.0))), _GLF_IDENTITY(1.0, float(mat2x3(1.0, 1.0, abs(0.0), 1.0, 0.0, 1.0))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(float(mat2x3(1.0, 1.0, abs(0.0), 1.0, 0.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 0.0, exp(0.0), 1.0, 1.0, 0.0, 0.0, 0.0))))), mix(float(float(mat2x3(1.0, 1.0, abs(0.0), 1.0, 0.0, 1.0))), float(_GLF_FUZZED(_GLF_IDENTITY(3009.3888, max(3009.3888, 3009.3888)))), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))), (false ? _GLF_FUZZED(log2(-6.1)) : _GLF_IDENTITY(float(mat2x3(1.0, 1.0, abs(0.0), 1.0, 0.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 0.0, exp(0.0), 1.0, 1.0, 0.0, 0.0, 0.0))))), mix(float(float(mat2x3(1.0, 1.0, abs(0.0), 1.0, 0.0, 1.0))), float(_GLF_FUZZED(_GLF_IDENTITY(3009.3888, max(3009.3888, 3009.3888)))), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))))), min(min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat2x3(1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(1.0, 0.0, 1.0, exp(0.0), 1.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0, 1.0, 0.0), transpose(transpose(mat4x3(1.0, 0.0, 1.0, exp(0.0), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) / 1.0), 1.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(smoothstep(clamp(8.8, 4.1, -8.5), 27.42, 82.21))))), 0.0, 1.0, 0.0)))))), abs(0.0), 1.0, 0.0, 1.0))), clamp(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 1.0, _GLF_IDENTITY(abs(0.0), (false ? _GLF_FUZZED(-49.22) : abs(0.0))), 1.0, 0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) + 0.0), float(mat2x3(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(58.34) : 1.0)), abs(0.0), 1.0, 0.0, 1.0))), float(vec4(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 1.0, abs(0.0), 1.0, 0.0, 1.0))), 0.0, 1.0, 0.0))), _GLF_IDENTITY(1.0, float(mat2x3(1.0, 1.0, abs(0.0), 1.0, 0.0, 1.0))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(float(mat2x3(1.0, 1.0, abs(0.0), 1.0, 0.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 0.0, exp(0.0), 1.0, 1.0, 0.0, 0.0, 0.0))))), mix(float(float(mat2x3(1.0, 1.0, abs(0.0), 1.0, 0.0, 1.0))), float(_GLF_FUZZED(_GLF_IDENTITY(3009.3888, max(3009.3888, 3009.3888)))), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))), (false ? _GLF_FUZZED(log2(-6.1)) : _GLF_IDENTITY(float(mat2x3(1.0, 1.0, abs(0.0), 1.0, 0.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 0.0, exp(0.0), 1.0, 1.0, 0.0, 0.0, 0.0))))), mix(float(float(mat2x3(1.0, 1.0, abs(0.0), 1.0, 0.0, 1.0))), float(_GLF_FUZZED(_GLF_IDENTITY(3009.3888, max(3009.3888, 3009.3888)))), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat2x3(1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(1.0, 0.0, 1.0, exp(0.0), 1.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0, 1.0, 0.0), transpose(transpose(mat4x3(1.0, 0.0, 1.0, exp(0.0), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) / 1.0), 1.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(smoothstep(clamp(8.8, 4.1, -8.5), 27.42, 82.21))))), 0.0, 1.0, 0.0)))))), abs(0.0), 1.0, 0.0, 1.0))), clamp(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 1.0, _GLF_IDENTITY(abs(0.0), (false ? _GLF_FUZZED(-49.22) : abs(0.0))), 1.0, 0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) + 0.0), float(mat2x3(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(58.34) : 1.0)), abs(0.0), 1.0, 0.0, 1.0))), float(vec4(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 1.0, abs(0.0), 1.0, 0.0, 1.0))), 0.0, 1.0, 0.0))), _GLF_IDENTITY(1.0, float(mat2x3(1.0, 1.0, abs(0.0), 1.0, 0.0, 1.0))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(float(mat2x3(1.0, 1.0, abs(0.0), 1.0, 0.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 0.0, exp(0.0), 1.0, 1.0, 0.0, 0.0, 0.0))))), mix(float(float(mat2x3(1.0, 1.0, abs(0.0), 1.0, 0.0, 1.0))), float(_GLF_FUZZED(_GLF_IDENTITY(3009.3888, max(3009.3888, 3009.3888)))), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))), (false ? _GLF_FUZZED(log2(-6.1)) : _GLF_IDENTITY(float(mat2x3(1.0, 1.0, abs(0.0), 1.0, 0.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 0.0, exp(0.0), 1.0, 1.0, 0.0, 0.0, 0.0))))), mix(float(float(mat2x3(1.0, 1.0, abs(0.0), 1.0, 0.0, 1.0))), float(_GLF_FUZZED(_GLF_IDENTITY(3009.3888, max(3009.3888, 3009.3888)))), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))))))), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat2x3(1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(1.0, 0.0, 1.0, exp(0.0), 1.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0, 1.0, 0.0), transpose(transpose(mat4x3(1.0, 0.0, 1.0, exp(0.0), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) / 1.0), 1.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(smoothstep(clamp(8.8, 4.1, -8.5), 27.42, 82.21))))), 0.0, 1.0, 0.0)))))), abs(0.0), 1.0, 0.0, 1.0))), clamp(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 1.0, _GLF_IDENTITY(abs(0.0), (false ? _GLF_FUZZED(-49.22) : abs(0.0))), 1.0, 0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) + 0.0), float(mat2x3(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(58.34) : 1.0)), abs(0.0), 1.0, 0.0, 1.0))), float(vec4(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 1.0, abs(0.0), 1.0, 0.0, 1.0))), 0.0, 1.0, 0.0))), _GLF_IDENTITY(1.0, float(mat2x3(1.0, 1.0, abs(0.0), 1.0, 0.0, 1.0))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(float(mat2x3(1.0, 1.0, abs(0.0), 1.0, 0.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 0.0, exp(0.0), 1.0, 1.0, 0.0, 0.0, 0.0))))), mix(float(float(mat2x3(1.0, 1.0, abs(0.0), 1.0, 0.0, 1.0))), float(_GLF_FUZZED(_GLF_IDENTITY(3009.3888, max(3009.3888, 3009.3888)))), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))), (false ? _GLF_FUZZED(log2(-6.1)) : _GLF_IDENTITY(float(mat2x3(1.0, 1.0, abs(0.0), 1.0, 0.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 0.0, exp(0.0), 1.0, 1.0, 0.0, 0.0, 0.0))))), mix(float(float(mat2x3(1.0, 1.0, abs(0.0), 1.0, 0.0, 1.0))), float(_GLF_FUZZED(_GLF_IDENTITY(3009.3888, max(3009.3888, 3009.3888)))), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))))), float(mat2(min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat2x3(1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(1.0, 0.0, 1.0, exp(0.0), 1.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0, 1.0, 0.0), transpose(transpose(mat4x3(1.0, 0.0, 1.0, exp(0.0), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) / 1.0), 1.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(smoothstep(clamp(8.8, 4.1, -8.5), 27.42, 82.21))))), 0.0, 1.0, 0.0)))))), abs(0.0), 1.0, 0.0, 1.0))), clamp(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 1.0, _GLF_IDENTITY(abs(0.0), (false ? _GLF_FUZZED(-49.22) : abs(0.0))), 1.0, 0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) + 0.0), float(mat2x3(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(58.34) : 1.0)), abs(0.0), 1.0, 0.0, 1.0))), float(vec4(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 1.0, abs(0.0), 1.0, 0.0, 1.0))), 0.0, 1.0, 0.0))), _GLF_IDENTITY(1.0, float(mat2x3(1.0, 1.0, abs(0.0), 1.0, 0.0, 1.0))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(float(mat2x3(1.0, 1.0, abs(0.0), 1.0, 0.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 0.0, exp(0.0), 1.0, 1.0, 0.0, 0.0, 0.0))))), mix(float(float(mat2x3(1.0, 1.0, abs(0.0), 1.0, 0.0, 1.0))), float(_GLF_FUZZED(_GLF_IDENTITY(3009.3888, max(3009.3888, 3009.3888)))), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))), (false ? _GLF_FUZZED(log2(-6.1)) : _GLF_IDENTITY(float(mat2x3(1.0, 1.0, abs(0.0), 1.0, 0.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 0.0, exp(0.0), 1.0, 1.0, 0.0, 0.0, 0.0))))), mix(float(float(mat2x3(1.0, 1.0, abs(0.0), 1.0, 0.0, 1.0))), float(_GLF_FUZZED(_GLF_IDENTITY(3009.3888, max(3009.3888, 3009.3888)))), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))))), 0.0, 1.0, 1.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat2x3(1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(1.0, 0.0, 1.0, exp(0.0), 1.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0, 1.0, 0.0), transpose(transpose(mat4x3(1.0, 0.0, 1.0, exp(0.0), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) / 1.0), 1.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(smoothstep(clamp(8.8, 4.1, -8.5), 27.42, 82.21))))), 0.0, 1.0, 0.0)))))), abs(0.0), 1.0, 0.0, 1.0))), clamp(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 1.0, _GLF_IDENTITY(abs(0.0), (false ? _GLF_FUZZED(-49.22) : abs(0.0))), 1.0, 0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) + 0.0), float(mat2x3(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(58.34) : 1.0)), abs(0.0), 1.0, 0.0, 1.0))), float(vec4(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 1.0, abs(0.0), 1.0, 0.0, 1.0))), 0.0, 1.0, 0.0))), _GLF_IDENTITY(1.0, float(mat2x3(1.0, 1.0, abs(0.0), 1.0, 0.0, 1.0))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(float(mat2x3(1.0, 1.0, abs(0.0), 1.0, 0.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 0.0, exp(0.0), 1.0, 1.0, 0.0, 0.0, 0.0))))), mix(float(float(mat2x3(1.0, 1.0, abs(0.0), 1.0, 0.0, 1.0))), float(_GLF_FUZZED(_GLF_IDENTITY(3009.3888, max(3009.3888, 3009.3888)))), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))), (false ? _GLF_FUZZED(log2(-6.1)) : _GLF_IDENTITY(float(mat2x3(1.0, 1.0, abs(0.0), 1.0, 0.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 0.0, exp(0.0), 1.0, 1.0, 0.0, 0.0, 0.0))))), mix(float(float(mat2x3(1.0, 1.0, abs(0.0), 1.0, 0.0, 1.0))), float(_GLF_FUZZED(_GLF_IDENTITY(3009.3888, max(3009.3888, 3009.3888)))), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))))))))), _GLF_IDENTITY(bool(true), true && (bool(true))))), _GLF_IDENTITY(0.0, float(mat2x4(0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))).y), 1.0, 1.0, 1.0, cos(tan(0.0)), 0.0, 1.0))), 1.0)), vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0) * (vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0)), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) + 0.0, (_GLF_IDENTITY((0.0) + 0.0, 1.0 * (_GLF_IDENTITY((0.0), ((0.0)) + 0.0) + 0.0))) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), mix(float(_GLF_FUZZED(-808.805)), float(_GLF_IDENTITY(0.0, (0.0) + 0.0)), bool(true))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) + 0.0, (_GLF_IDENTITY((0.0) + 0.0, 1.0 * (_GLF_IDENTITY((0.0), ((0.0)) + 0.0) + 0.0))) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), mix(float(_GLF_FUZZED(-808.805)), float(_GLF_IDENTITY(0.0, (0.0) + 0.0)), bool(true))), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) + 0.0, (_GLF_IDENTITY((0.0) + 0.0, 1.0 * (_GLF_IDENTITY((0.0), ((0.0)) + 0.0) + 0.0))) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), mix(float(_GLF_FUZZED(-808.805)), float(_GLF_IDENTITY(0.0, (0.0) + 0.0)), bool(true)))) + 0.0)) / 1.0), 1.0, tan(0.0), _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((0.4))), float(0.0), bool(true))) : _GLF_FUZZED(-215.520))), 0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), (1.0) / 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY((1.0), _GLF_IDENTITY(float(vec4((1.0), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0)), mix(float(_GLF_FUZZED(-7.8)), float(float(vec4((1.0), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0))), bool(true)))) / 1.0)) * 1.0), 0.0, 1.0))))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(max(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x)), gl_WorkGroupSize.x), (false ? _GLF_FUZZED(subgroup_local_id) : max(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) / 1u) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x), max((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x)), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, (true ? _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x : _GLF_FUZZED(subgroup_id)))) + uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))), gl_WorkGroupSize.x))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(1u, 1u, 1u), clamp(uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u))) * (gl_WorkGroupID)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(0u, 0u + (0u)), 0u, 0u) | (gl_WorkGroupID)), uvec3(1u, 1u, 1u) * (gl_WorkGroupID))), clamp(~ (_GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 1u)), ~ (~ (uvec3(uvec4(gl_WorkGroupID, 1u))))))))), ~ (_GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, 1u) * (gl_WorkGroupID))), ~ (_GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, 1u) * (gl_WorkGroupID))))))))).x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false))))), ! (! ((_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false))))))))), true && (bool(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false))))), ! (! ((_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false))))))))))))))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), bvec3(bvec4(bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true))))))), (_GLF_DEAD(false)) && true), true, false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 atomicStore(buf[_GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 0u)))], uint(_GLF_IDENTITY(1, max(1, 1))), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ _GLF_IDENTITY((subgroup_local_id), ~ (~ ((subgroup_local_id))))) + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, int(ivec3(1, 0, 0))), _GLF_IDENTITY(1, (1) >> 0))) < subgroup_size, false || (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, int(ivec3(1, 0, 0))), _GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, (0) / 1)))) < subgroup_size)))
  {
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (false ? _GLF_FUZZED((subgroup_id)) : next_virtual_gid))], uint(2), _GLF_IDENTITY(4, (_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, min(0, 0)))), (0) / 1)), clamp(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0, (0) / 1)), ~ (~ ((_GLF_IDENTITY(0, (0) / 1))))), int(ivec2((_GLF_IDENTITY(0, (0) / 1)), 0))), _GLF_IDENTITY((_GLF_IDENTITY(0, (0) / 1)), (true ? (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) | (~ _GLF_IDENTITY((0), min((0), (0)))))))) / 1)) : _GLF_FUZZED(-51146))), (_GLF_IDENTITY(0, (0) / 1)))) >> 0) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-57318, (_GLF_IDENTITY(-57318, (0 ^ 0) ^ (-57318))) | 0), (_GLF_IDENTITY(-57318, (-57318) | 0)) - _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, 0 | (0))))), min(_GLF_IDENTITY(_GLF_IDENTITY(-57318, (-57318) | 0), (_GLF_IDENTITY(false ? _GLF_FUZZED(-25427) : _GLF_IDENTITY(-57318, (-57318) | 0), max(false ? _GLF_FUZZED(-25427) : _GLF_IDENTITY(-57318, _GLF_IDENTITY(_GLF_IDENTITY((-57318), min(_GLF_IDENTITY((-57318), ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))) * ((-57318))), (-57318))) | 0, ((-57318) | 0) << 0)), false ? _GLF_FUZZED(-25427) : _GLF_IDENTITY(-57318, _GLF_IDENTITY((-57318), min((-57318), (-57318))) | 0))))), _GLF_IDENTITY(-57318, (-57318) | 0)))) : int(5)), min((false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-57318, (_GLF_IDENTITY(-57318, (0 ^ 0) ^ (-57318))) | 0), (_GLF_IDENTITY(-57318, (-57318) | 0)) - _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, 0 | (0))))), min(_GLF_IDENTITY(_GLF_IDENTITY(-57318, (-57318) | 0), (_GLF_IDENTITY(false ? _GLF_FUZZED(-25427) : _GLF_IDENTITY(-57318, (-57318) | 0), max(false ? _GLF_FUZZED(-25427) : _GLF_IDENTITY(-57318, _GLF_IDENTITY(_GLF_IDENTITY((-57318), min(_GLF_IDENTITY((-57318), ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))) * ((-57318))), (-57318))) | 0, ((-57318) | 0) << 0)), false ? _GLF_FUZZED(-25427) : _GLF_IDENTITY(-57318, _GLF_IDENTITY((-57318), min((-57318), (-57318))) | 0))))), _GLF_IDENTITY(-57318, (-57318) | 0)))) : int(5)), (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-57318, (_GLF_IDENTITY(-57318, (0 ^ 0) ^ (-57318))) | 0), (_GLF_IDENTITY(-57318, (-57318) | 0)) - _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, 0 | (0))))), min(_GLF_IDENTITY(_GLF_IDENTITY(-57318, (-57318) | 0), (_GLF_IDENTITY(false ? _GLF_FUZZED(-25427) : _GLF_IDENTITY(-57318, (-57318) | 0), max(false ? _GLF_FUZZED(-25427) : _GLF_IDENTITY(-57318, _GLF_IDENTITY(_GLF_IDENTITY((-57318), min(_GLF_IDENTITY((-57318), ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))) * ((-57318))), (-57318))) | 0, ((-57318) | 0) << 0)), false ? _GLF_FUZZED(-25427) : _GLF_IDENTITY(-57318, _GLF_IDENTITY((-57318), min((-57318), (-57318))) | 0))))), _GLF_IDENTITY(-57318, (-57318) | 0)))) : int(5))))))) | (4)), 64, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), 1 * (4)));
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), true && (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true, false)))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true, false))))))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(229.290), clamp(_GLF_FUZZED(229.290), _GLF_IDENTITY(_GLF_FUZZED(229.290), clamp(_GLF_FUZZED(229.290), _GLF_FUZZED(229.290), _GLF_FUZZED(229.290))), _GLF_FUZZED(229.290))), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch), (true ? _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))) * vec2(1.0, 1.0)) : _GLF_FUZZED(sign(vec2(-11.18, -6580.6369)))))[0], _GLF_FUZZED((8144.6523))), bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(false, bool(bvec2(false, false))) || (_GLF_IDENTITY(true, false || (true)))), false))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) || false)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), false, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(false, bool(bool(false))))), false, false, false))))))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))), (bool(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))))) || false))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, determinant(mat3(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - length(vec4(0.0, 0.0, 0.0, 0.0))), injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - length(vec4(0.0, 0.0, 0.0, 0.0))), injectionSwitch.x), max(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - length(vec4(0.0, 0.0, 0.0, 0.0))), injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - length(vec4(0.0, 0.0, 0.0, 0.0))), injectionSwitch.x))), _GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - length(vec4(0.0, 0.0, 0.0, 0.0))), injectionSwitch.x), _GLF_IDENTITY(float(mat3x4(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - length(vec4(0.0, 0.0, 0.0, 0.0))), injectionSwitch.x), 1.0, 1.0, sqrt(1.0), 1.0, 1.0, 1.0, exp(0.0), 1.0, 1.0, 1.0, 0.0)), (true ? float(mat3x4(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - length(vec4(0.0, 0.0, 0.0, 0.0))), injectionSwitch.x), 1.0, 1.0, sqrt(1.0), 1.0, 1.0, 1.0, exp(0.0), 1.0, 1.0, 1.0, 0.0)) : _GLF_FUZZED(-8.4)))))), 0.0, 1.0, determinant(_GLF_IDENTITY(mat3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-40.08)), bool(false))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0), (mat3(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)), 0.0, tan(0.0), 0.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(float(vec2(_GLF_ONE(1.0, injectionSwitch.y), 1.0)), min(float(vec2(_GLF_ONE(1.0, injectionSwitch.y), 1.0)), float(vec2(_GLF_ONE(1.0, injectionSwitch.y), 1.0)))))))).x < injectionSwitch.y))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-32.60)), bool(false)))), min(_GLF_IDENTITY(float(injectionSwitch.y), float(float(float(injectionSwitch.y)))), float(injectionSwitch.y))), float(_GLF_FUZZED(0.3)), bool(false))), injectionSwitch.y)), injectionSwitch.y))) || false)), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-32.60)), bool(false)))), min(_GLF_IDENTITY(float(injectionSwitch.y), float(float(float(injectionSwitch.y)))), float(injectionSwitch.y))), float(_GLF_FUZZED(0.3)), bool(false))), injectionSwitch.y)), injectionSwitch.y))) || false)), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-32.60)), bool(false)))), min(_GLF_IDENTITY(float(injectionSwitch.y), float(float(float(injectionSwitch.y)))), float(injectionSwitch.y))), float(_GLF_FUZZED(0.3)), bool(false))), injectionSwitch.y)), injectionSwitch.y))) || false)))))))), _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + sin(sin(0.0))) < injectionSwitch.y))), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(injectionSwitch.y), min(_GLF_IDENTITY(float(injectionSwitch.y), float(float(float(injectionSwitch.y)))), float(injectionSwitch.y))), float(_GLF_FUZZED(0.3)), bool(false))), injectionSwitch.y)), injectionSwitch.y))) || false))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + sin(sin(0.0))) < injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(injectionSwitch.y), min(_GLF_IDENTITY(float(injectionSwitch.y), float(float(float(injectionSwitch.y)))), float(injectionSwitch.y))), float(_GLF_FUZZED(0.3)), bool(false))), (false ? _GLF_FUZZED(pow(-7.1, 5.6)) : _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.y), float(mat4(float(injectionSwitch.y), 1.0, 1.0, 0.0, tan(0.0), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 1.0, 1.0, exp(0.0), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0))), min(_GLF_IDENTITY(float(injectionSwitch.y), float(float(float(injectionSwitch.y)))), float(injectionSwitch.y))), float(_GLF_FUZZED(0.3)), bool(false))))), injectionSwitch.y)), injectionSwitch.y))) || false))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + sin(sin(0.0))) < injectionSwitch.y)))), false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)))), true && (bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, determinant(mat3(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - length(vec4(0.0, 0.0, 0.0, 0.0))), injectionSwitch.x), 0.0, 1.0, determinant(_GLF_IDENTITY(_GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0), (mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), mat3(mat4(_GLF_IDENTITY(_GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0), (mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), mat3(1.0) * (_GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0), (mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, (0.0) + abs(0.0)), 0.0, 0.0)), 0.0, tan(0.0), 0.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(float(vec2(_GLF_ONE(1.0, injectionSwitch.y), 1.0)), min(float(vec2(_GLF_ONE(1.0, injectionSwitch.y), 1.0)), float(vec2(_GLF_ONE(1.0, injectionSwitch.y), 1.0)))), min(_GLF_IDENTITY(float(vec2(_GLF_ONE(1.0, injectionSwitch.y), 1.0)), min(float(vec2(_GLF_ONE(1.0, injectionSwitch.y), 1.0)), float(vec2(_GLF_ONE(1.0, injectionSwitch.y), 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(float(vec2(_GLF_ONE(1.0, injectionSwitch.y), 1.0)), min(float(vec2(_GLF_ONE(1.0, injectionSwitch.y), 1.0)), float(vec2(_GLF_ONE(1.0, injectionSwitch.y), 1.0)))), float(mat3x2(_GLF_IDENTITY(float(vec2(_GLF_ONE(1.0, injectionSwitch.y), 1.0)), min(float(vec2(_GLF_ONE(1.0, injectionSwitch.y), 1.0)), float(vec2(_GLF_ONE(1.0, injectionSwitch.y), 1.0)))), 0.0, 1.0, 0.0, 0.0, 1.0))))))))).x < injectionSwitch.y))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(injectionSwitch.y), min(_GLF_IDENTITY(float(injectionSwitch.y), float(float(float(injectionSwitch.y)))), float(injectionSwitch.y))), float(_GLF_FUZZED(0.3)), bool(false))), injectionSwitch.y)), injectionSwitch.y))) || false))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + sin(sin(0.0))) < injectionSwitch.y))), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(injectionSwitch.y), _GLF_IDENTITY(min(_GLF_IDENTITY(float(injectionSwitch.y), float(float(float(injectionSwitch.y)))), float(injectionSwitch.y)), clamp(min(_GLF_IDENTITY(float(injectionSwitch.y), float(float(float(injectionSwitch.y)))), float(injectionSwitch.y)), min(_GLF_IDENTITY(float(injectionSwitch.y), float(float(float(injectionSwitch.y)))), float(injectionSwitch.y)), min(_GLF_IDENTITY(float(injectionSwitch.y), float(float(float(injectionSwitch.y)))), float(injectionSwitch.y))))), float(_GLF_IDENTITY(_GLF_FUZZED(0.3), mix(float(_GLF_FUZZED(0.3)), float(_GLF_FUZZED(-320.490)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(false))), injectionSwitch.y)), injectionSwitch.y))) || false))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + sin(sin(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, 0.0 + (0.0))) + log(1.0))))) < injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(injectionSwitch.y), min(_GLF_IDENTITY(float(injectionSwitch.y), float(float(float(injectionSwitch.y)))), float(injectionSwitch.y))), float(_GLF_FUZZED(0.3)), bool(false))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), injectionSwitch.y))) || false))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + sin(sin(0.0))) < injectionSwitch.y)))), false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)))))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(-51680)))), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), bool(bvec4((! (true)), true, true, true))))))))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))))))))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))) && true)))), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))))) || _GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   subgroupAll(_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, ! (! ((true) && true)))));
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
