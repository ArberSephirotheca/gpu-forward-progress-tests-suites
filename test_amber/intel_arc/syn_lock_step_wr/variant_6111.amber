#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_39 {
 mat3x4 _f0;
 mat4x3 _f1;
 bvec4 _f2;
 mat3x4 _f3;
} ;

struct _GLF_struct_38 {
 bvec2 _f0;
 mat4x2 _f1;
 float _f2;
 uvec2 _f3;
 bvec2 _f4;
 mat2 _f5;
 bvec3 _f6;
} ;

struct _GLF_struct_37 {
 bvec2 _f0;
 uint _f1;
 mat2x3 _f2;
 bvec2 _f3;
 bvec3 _f4;
} ;

struct _GLF_struct_40 {
 mat2 _f0;
 _GLF_struct_37 _f1;
 _GLF_struct_38 _f2;
 _GLF_struct_39 _f3;
 vec3 _f4;
} ;

struct _GLF_struct_35 {
 ivec4 _f0;
 uvec4 _f1;
 mat2 _f2;
} ;

struct _GLF_struct_34 {
 mat2 _f0;
 bvec3 _f1;
} ;

struct _GLF_struct_33 {
 mat4 _f0;
 mat4 _f1;
 uvec2 _f2;
 uvec3 _f3;
 bvec2 _f4;
 mat2x3 _f5;
} ;

struct _GLF_struct_36 {
 _GLF_struct_33 _f0;
 uvec4 _f1;
 _GLF_struct_34 _f2;
 _GLF_struct_35 _f3;
} ;

struct _GLF_struct_31 {
 mat4 _f0;
 mat4 _f1;
 mat3x4 _f2;
 uint next_virtual_gid;
 ivec4 _f3;
} ;

struct _GLF_struct_30 {
 uvec4 _f0;
 vec2 _f1;
 mat3x4 _f2;
 bool _f3;
} ;

struct _GLF_struct_29 {
 ivec4 _f0;
 vec3 _f1;
 mat4x2 _f2;
 mat3x2 _f3;
} ;

struct _GLF_struct_28 {
 bvec3 _f0;
 bvec4 _f1;
 vec2 _f2;
 uint _f3;
 float _f4;
} ;

struct _GLF_struct_27 {
 float _f0;
 int _f1;
} ;

struct _GLF_struct_32 {
 _GLF_struct_27 _f0;
 _GLF_struct_28 _f1;
 mat3x2 _f2;
 _GLF_struct_29 _f3;
 _GLF_struct_30 _f4;
 _GLF_struct_31 _f5;
} ;

struct _GLF_struct_25 {
 mat3 _f0;
 uvec4 _f1;
 bool _f2;
 mat4x3 _f3;
 mat4x2 _f4;
} ;

struct _GLF_struct_24 {
 mat2 _f0;
 ivec2 _f1;
 vec3 _f2;
 ivec4 _f3;
 mat2 _f4;
 uvec2 _f5;
} ;

struct _GLF_struct_23 {
 ivec3 _f0;
 mat2x3 _f1;
 float _f2;
 ivec2 _f3;
 mat3x4 _f4;
 mat2x3 _f5;
 bvec4 _f6;
} ;

struct _GLF_struct_22 {
 mat3x2 _f0;
 mat2x3 _f1;
} ;

struct _GLF_struct_26 {
 _GLF_struct_22 _f0;
 _GLF_struct_23 _f1;
 _GLF_struct_24 _f2;
 vec3 _f3;
 float _f4;
 _GLF_struct_25 _f5;
} ;

struct _GLF_struct_41 {
 _GLF_struct_26 _f0;
 _GLF_struct_32 _f1;
 _GLF_struct_36 _f2;
 bool _f3;
 _GLF_struct_40 _f4;
} ;

struct _GLF_struct_21 {
 ivec3 _f0;
 uvec3 _f1;
 uint subgroup_base;
 uint _f2;
 uint _f3;
 bvec4 _f4;
} ;

struct _GLF_struct_18 {
 mat3x4 _f0;
 vec3 _f1;
} ;

struct _GLF_struct_19 {
 int _f0;
 uint subgroup_size;
 mat3 _f1;
 _GLF_struct_18 _f2;
 bool _f3;
} ;

struct _GLF_struct_17 {
 mat2x4 _f0;
} ;

struct _GLF_struct_20 {
 _GLF_struct_17 _f0;
 _GLF_struct_19 _f1;
} ;

struct _GLF_struct_14 {
 vec2 _f0;
 uint num_workgroup;
 uvec4 _f1;
 float _f2;
 vec4 _f3;
 mat4x3 _f4;
} ;

struct _GLF_struct_13 {
 ivec2 _f0;
 mat2x4 _f1;
 float _f2;
 int _f3;
 float _f4;
 mat3x4 _f5;
 mat3x4 _f6;
} ;

struct _GLF_struct_12 {
 uvec2 _f0;
 int _f1;
 float _f2;
 float _f3;
 mat3x4 _f4;
} ;

struct _GLF_struct_11 {
 mat4x3 _f0;
 mat4x3 _f1;
 uvec2 _f2;
 mat4 _f3;
} ;

struct _GLF_struct_10 {
 mat4x3 _f0;
 mat4 _f1;
 uvec2 _f2;
 bool _f3;
 ivec2 _f4;
 bool _f5;
 ivec3 _f6;
} ;

struct _GLF_struct_9 {
 uvec4 _f0;
 bool _f1;
 uint _f2;
 vec2 _f3;
 int _f4;
 ivec2 _f5;
} ;

struct _GLF_struct_15 {
 _GLF_struct_9 _f0;
 bool _f1;
 _GLF_struct_10 _f2;
 _GLF_struct_11 _f3;
 _GLF_struct_12 _f4;
 _GLF_struct_13 _f5;
 _GLF_struct_14 _f6;
} ;

struct _GLF_struct_7 {
 mat3x4 _f0;
 uvec4 _f1;
 float _f2;
 bvec4 _f3;
} ;

struct _GLF_struct_6 {
 float _f0;
 uvec2 _f1;
 ivec3 _f2;
} ;

struct _GLF_struct_5 {
 vec3 _f0;
 uvec3 _f1;
 float _f2;
 vec4 _f3;
 mat4x2 _f4;
} ;

struct _GLF_struct_8 {
 uint _f0;
 mat2 _f1;
 _GLF_struct_5 _f2;
 _GLF_struct_6 _f3;
 uvec3 _f4;
 _GLF_struct_7 _f5;
 mat2x4 _f6;
} ;

struct _GLF_struct_16 {
 mat2 _f0;
 float _f1;
 _GLF_struct_8 _f2;
 _GLF_struct_15 _f3;
} ;

struct _GLF_struct_2 {
 bool _f0;
 mat4x3 _f1;
} ;

struct _GLF_struct_1 {
 uint _f0;
 mat3x4 _f1;
 uvec4 _f2;
 ivec2 _f3;
} ;

struct _GLF_struct_0 {
 uint _f0;
 mat4x2 _f1;
 mat2x3 _f2;
 mat2 _f3;
} ;

struct _GLF_struct_3 {
 mat4x2 _f0;
 bvec4 _f1;
 bvec3 _f2;
 uint workgroup_id;
 _GLF_struct_0 _f3;
 _GLF_struct_1 _f4;
 _GLF_struct_2 _f5;
} ;

struct _GLF_struct_4 {
 bvec3 _f0;
 mat3x4 _f1;
 _GLF_struct_3 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(214.567)), float(injectionSwitch.y), bool(true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)) || (true)) && (false)), (_GLF_IDENTITY(false, true && (false))) || false)), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, false), true)))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, false), true)))))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, false), _GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, false), true)))))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, false), true))))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, false), true)))))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, false), true))))))))), bool(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, false), true)))))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, false), true))))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, false), true)))))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, false), true)))))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))))), false))) && true)) || (true)), (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))) && true)))), bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, false), true)))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), false), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, ! (! (false)))), true)))))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, false))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(17.75, -0.7)) : injectionSwitch)).x > injectionSwitch.y, false)))))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, false))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))))))))))), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, false), true)))))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, false), true)))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), true))))), bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, false), true)))))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, false), true)))))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, false), true)))))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, false), true)))))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, false), true)))))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, false), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))))))))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, false), true)))))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, false), true)))))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, false), true)))))))))), _GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(_GLF_IDENTITY(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, false), true), bvec3(bvec3(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, false), true))))))))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(_GLF_IDENTITY(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, false), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, false), true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, false), true), true))))))))))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))), true))))))))), false))) && true)) || (true))) || false) && (false)), (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) && true))))))) || false))) || false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4((_GLF_IDENTITY(false, ! (! (false)))), false, false, false)))), (! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4((_GLF_IDENTITY(false, ! (! (false)))), false, false, false))))) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 _GLF_struct_20 _GLF_struct_replacement_20 = _GLF_struct_20(_GLF_struct_17(mat2x4(1.0)), _GLF_struct_19(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) + 0), gl_SubgroupSize, mat3(1.0), _GLF_struct_18(mat3x4(1.0), vec3(1.0)), true));
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 _GLF_struct_16 _GLF_struct_replacement_16 = _GLF_struct_16(mat2(1.0), 1.0, _GLF_struct_8(_GLF_IDENTITY(1u, (1u) >> 0u), mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, (true) && true) ? 1.0 : _GLF_FUZZED(-9.1))), max(1.0, 1.0))), _GLF_struct_5(vec3(1.0), uvec3(_GLF_IDENTITY(1u, (1u) ^ 0u)), 1.0, vec4(1.0), mat4x2(1.0)), _GLF_struct_6(1.0, uvec2(1u), ivec3(1)), uvec3(1u), _GLF_struct_7(mat3x4(1.0), _GLF_IDENTITY(uvec4(1u), (uvec4(1u)) | (_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) | uvec4(0u, 0u, 0u, 0u)))), 1.0, bvec4(true)), mat2x4(1.0)), _GLF_struct_15(_GLF_struct_9(uvec4(1u), true, _GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) * 1u)) ^ 0u, ((_GLF_IDENTITY(1u, (1u) * 1u)) ^ 0u) | (_GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) * 1u)), ((_GLF_IDENTITY(1u, (1u) * 1u))) ^ 0u) ^ 0u))), vec2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0))), _GLF_IDENTITY(1, min(1, 1)), ivec2(1)), true, _GLF_struct_10(mat4x3(1.0), mat4(1.0), uvec2(1u), true, ivec2(1), true, ivec3(1)), _GLF_struct_11(mat4x3(1.0), mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(mix(-991.580, -68.72, false)) : 0.0))))), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))) ? _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) - 0.0, max((1.0) - 0.0, _GLF_IDENTITY((1.0) - 0.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(_GLF_IDENTITY((1.0) - 0.0, clamp((_GLF_IDENTITY(1.0, (1.0) - 0.0)) - 0.0, (1.0) - 0.0, (1.0) - 0.0)), (false ? _GLF_FUZZED(8.0) : _GLF_IDENTITY((1.0) - _GLF_IDENTITY(0.0, max(0.0, 0.0)), clamp((1.0) - 0.0, (1.0) - 0.0, (1.0) - 0.0)))), 1.0, 1.0)), min(float(vec3(_GLF_IDENTITY((1.0) - 0.0, clamp((1.0) - 0.0, (1.0) - 0.0, (1.0) - 0.0)), 1.0, 1.0)), float(vec3(_GLF_IDENTITY((1.0) - 0.0, clamp((1.0) - 0.0, (1.0) - 0.0, (1.0) - 0.0)), 1.0, 1.0)))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) - 0.0, max((1.0) - _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(394.611) : 0.0)), min(0.0, 0.0)) : _GLF_FUZZED(42.11))), _GLF_IDENTITY((1.0) - 0.0, _GLF_IDENTITY(_GLF_IDENTITY(float(vec3(_GLF_IDENTITY(_GLF_IDENTITY((1.0) - 0.0, clamp((1.0) - 0.0, (1.0) - 0.0, (1.0) - 0.0)), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY((1.0) - 0.0, clamp((1.0) - 0.0, (1.0) - 0.0, (1.0) - 0.0)), (_GLF_IDENTITY((1.0) - 0.0, clamp((1.0) - 0.0, (1.0) - 0.0, (1.0) - 0.0))) / 1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY((1.0) - 0.0, clamp((1.0) - 0.0, (1.0) - 0.0, (1.0) - 0.0)), (_GLF_IDENTITY((1.0) - 0.0, clamp((1.0) - 0.0, (1.0) - 0.0, (1.0) - 0.0))) / 1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)))))), 1.0, 1.0)), (true ? float(vec3(_GLF_IDENTITY(_GLF_IDENTITY((1.0) - 0.0, clamp((1.0) - 0.0, (1.0) - 0.0, (1.0) - 0.0)), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY((1.0) - 0.0, clamp((1.0) - 0.0, (1.0) - 0.0, (1.0) - 0.0)), (_GLF_IDENTITY((1.0) - 0.0, clamp((1.0) - 0.0, (1.0) - 0.0, (1.0) - 0.0))) / 1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY((1.0) - 0.0, clamp((1.0) - 0.0, (1.0) - 0.0, (1.0) - 0.0)), (_GLF_IDENTITY((1.0) - 0.0, clamp((1.0) - 0.0, (1.0) - 0.0, (1.0) - 0.0))) / 1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)))))), 1.0, 1.0)) : _GLF_FUZZED(519.874))), min(float(vec3(_GLF_IDENTITY((1.0) - 0.0, clamp((1.0) - 0.0, (1.0) - 0.0, (1.0) - 0.0)), 1.0, 1.0)), float(vec3(_GLF_IDENTITY((_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(7540.8083)))) - 0.0, clamp((1.0) - 0.0, (1.0) - 0.0, (1.0) - 0.0)), 1.0, 1.0)))))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, max(1.0, 1.0))) - 0.0, max((1.0) - 0.0, _GLF_IDENTITY((1.0) - 0.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY((1.0) - 0.0, clamp((1.0) - 0.0, (1.0) - 0.0, (1.0) - 0.0)), 1.0, 1.0)), min(float(vec3(_GLF_IDENTITY((1.0) - 0.0, clamp((1.0) - 0.0, (1.0) - 0.0, (1.0) - 0.0)), 1.0, 1.0)), float(vec3(_GLF_IDENTITY((1.0) - 0.0, clamp((1.0) - 0.0, (1.0) - _GLF_IDENTITY(0.0, min(0.0, 0.0)), (1.0) - 0.0)), 1.0, 1.0))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, max(1.0, 1.0))) - 0.0, max((1.0) - 0.0, _GLF_IDENTITY((1.0) - 0.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY((1.0) - 0.0, clamp((1.0) - 0.0, (1.0) - 0.0, (1.0) - 0.0)), 1.0, 1.0)), min(float(vec3(_GLF_IDENTITY((1.0) - 0.0, clamp((1.0) - 0.0, (1.0) - 0.0, (1.0) - 0.0)), 1.0, 1.0)), float(vec3(_GLF_IDENTITY((1.0) - 0.0, clamp((1.0) - 0.0, (1.0) - _GLF_IDENTITY(0.0, min(0.0, 0.0)), (1.0) - 0.0)), 1.0, 1.0))))))))), float(mat4((_GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, max(1.0, 1.0))) - 0.0, max((1.0) - 0.0, _GLF_IDENTITY((1.0) - 0.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY((1.0) - 0.0, clamp((1.0) - 0.0, (1.0) - 0.0, (1.0) - 0.0)), 1.0, 1.0)), min(float(vec3(_GLF_IDENTITY((1.0) - 0.0, clamp((1.0) - 0.0, (1.0) - 0.0, (1.0) - 0.0)), 1.0, 1.0)), float(vec3(_GLF_IDENTITY((1.0) - 0.0, clamp((1.0) - 0.0, (1.0) - _GLF_IDENTITY(0.0, min(0.0, 0.0)), (1.0) - 0.0)), 1.0, 1.0))))))))), 1.0, exp(0.0), 1.0, sqrt(0.0), 1.0, 1.0, 1.0, 1.0, tan(0.0), 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 1.0, 0.0)))) * 1.0), (false ? _GLF_FUZZED(5434.5961) : _GLF_IDENTITY((_GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, max(1.0, 1.0))) - 0.0, max((1.0) - 0.0, _GLF_IDENTITY((1.0) - 0.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY((1.0) - 0.0, clamp((1.0) - 0.0, (1.0) - 0.0, (1.0) - 0.0)), 1.0, 1.0)), min(float(vec3(_GLF_IDENTITY((1.0) - 0.0, clamp((1.0) - 0.0, (1.0) - 0.0, (1.0) - 0.0)), 1.0, 1.0)), float(vec3(_GLF_IDENTITY((1.0) - 0.0, clamp((1.0) - 0.0, (1.0) - _GLF_IDENTITY(0.0, min(0.0, 0.0)), (1.0) - 0.0)), 1.0, 1.0))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, max(1.0, 1.0))) - 0.0, max((1.0) - 0.0, _GLF_IDENTITY((1.0) - 0.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY((1.0) - 0.0, clamp((1.0) - 0.0, (1.0) - 0.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))) - 0.0)), 1.0, 1.0)), min(float(vec3(_GLF_IDENTITY((_GLF_IDENTITY(1.0, (1.0) / 1.0)) - 0.0, clamp((1.0) - _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(5.4) : 0.0)))), (1.0) - 0.0, (1.0) - _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(893.523)), float(0.0), bool(true))), 0.0, 0.0)))), 1.0, 1.0)), float(vec3(_GLF_IDENTITY((_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 1.0, 0.0, sqrt(1.0))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? float(mat4x3(1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 1.0, 0.0, sqrt(1.0))) : _GLF_FUZZED(-76.30))))) - 0.0, clamp((1.0) - 0.0, (1.0) - _GLF_IDENTITY(0.0, min(0.0, 0.0)), (1.0) - 0.0)), 1.0, 1.0))))))))), float(mat4((_GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, max(1.0, 1.0))) - 0.0, max((1.0) - 0.0, _GLF_IDENTITY((1.0) - 0.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY((1.0) - 0.0, clamp((1.0) - 0.0, (1.0) - 0.0, (1.0) - 0.0)), 1.0, 1.0)), min(float(vec3(_GLF_IDENTITY((1.0) - 0.0, clamp((1.0) - 0.0, (1.0) - 0.0, (1.0) - 0.0)), 1.0, 1.0)), float(vec3(_GLF_IDENTITY((1.0) - 0.0, clamp((1.0) - 0.0, (1.0) - _GLF_IDENTITY(0.0, min(0.0, 0.0)), (1.0) - 0.0)), 1.0, 1.0))))))))), 1.0, exp(0.0), 1.0, sqrt(0.0), 1.0, 1.0, 1.0, 1.0, tan(0.0), 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 1.0, 0.0)))) * 1.0))) / 1.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) - 0.0, max((1.0) - 0.0, _GLF_IDENTITY((1.0) - 0.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY((1.0) - 0.0, clamp((1.0) - 0.0, (1.0) - 0.0, (1.0) - 0.0)), 1.0, 1.0)), min(float(vec3(_GLF_IDENTITY((_GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, sqrt(0.0), 0.0), vec4(1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, 1.0)), dot(vec4(0.0, 0.0, sqrt(0.0), 0.0), vec4(1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, 1.0))), 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0)))) - 0.0, clamp((1.0) - 0.0, _GLF_IDENTITY((1.0), 1.0 * ((1.0))) - 0.0, (1.0) - 0.0)), 1.0, 1.0)), float(vec3(_GLF_IDENTITY((1.0) - 0.0, clamp((1.0) - 0.0, _GLF_IDENTITY((1.0) - 0.0, (true ? _GLF_IDENTITY((1.0) - 0.0, float(vec2((1.0) - 0.0, 0.0))) : _GLF_FUZZED(-6.1))), (1.0) - 0.0)), 1.0, 1.0)))))))))))) : _GLF_FUZZED(-2.4)))), _GLF_IDENTITY(uvec2(1u), (uvec2(1u)) - _GLF_IDENTITY(uvec2(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) + 0u))))) | (0u))), (_GLF_IDENTITY(uvec2(0u, 0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uvec2(0u, 0u) : _GLF_FUZZED(uvec2(130661u, 93645u))))) | (uvec2(0u, 0u)))), mat4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(84.97) : 1.0)))), _GLF_struct_12(uvec2(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) ^ _GLF_IDENTITY(0u, 0u ^ (0u))), 1u))), 1, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0)), max(_GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) + 0.0, mix(float(_GLF_FUZZED(8856.3813)), float(_GLF_IDENTITY((1.0) + 0.0, mix(float((1.0) + 0.0), float(_GLF_FUZZED(-1.7)), bool(false)))), bool(true))))), mix(float(_GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0)), min(max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) + 0.0, ((1.0) + 0.0) / 1.0))), max(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0))))), float(_GLF_FUZZED(float(43782))), bool(false))), max(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x4(1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), (round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))) * 1.0), 1.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, abs(1.0), 0.0, 1.0, 1.0, 1.0)), 1.0, exp(0.0), 1.0), (false ? _GLF_FUZZED(mat3x4(-9.9, -3302.0495, 15.09, -8080.9904, -163.561, -7.7, 4.8, 5127.6889, 56.61, -2137.5754, -4.0, 4189.9358)) : mat3x4(1.0, 0.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, abs(1.0), 0.0, 1.0, 1.0, 1.0)), 1.0, exp(0.0), 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-7996.6846)), bool(false))), 1.0)), (1.0) + 0.0))))), mat3x4(1.0)), _GLF_struct_13(ivec2(_GLF_IDENTITY(1, 0 ^ (1))), mat2x4(1.0), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((- -400.258))), float(1.0), bool(true))), 1, 1.0, mat3x4(1.0), mat3x4(1.0)), _GLF_struct_14(_GLF_IDENTITY(vec2(1.0), mix(vec2(_GLF_FUZZED(-575.201), (vec2(1.0))[1]), vec2((vec2(1.0))[0], _GLF_FUZZED(84.51)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((gl_NumWorkGroups.x) * _GLF_IDENTITY(1u, max(1u, 1u)), max((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)).x) * _GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, 1u), (_GLF_IDENTITY(max(1u, 1u), uint(uint(max(1u, 1u))))) + 0u)), (gl_NumWorkGroups.x) * _GLF_IDENTITY(1u, max(1u, 1u))))), uvec4(1u), 1.0, vec4(1.0), mat4x3(1.0))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 1.0, 1.0, sqrt(1.0), 0.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, sqrt(0.0))), clamp(float(mat2x4(injectionSwitch.x, 1.0, 1.0, sqrt(1.0), 0.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, sqrt(0.0))), float(mat2x4(injectionSwitch.x, 1.0, 1.0, sqrt(1.0), 0.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, sqrt(0.0))), float(mat2x4(injectionSwitch.x, 1.0, 1.0, sqrt(1.0), 0.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, sqrt(0.0)))))) > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, 0.0, determinant(mat4(sqrt(0.0), 0.0, 0.0, 0.0, log(1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0)), abs(1.0), 1.0, 0.0, 1.0, cos(0.0), 1.0, 0.0, 1.0, 1.0), mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x4(injectionSwitch.x, 0.0, determinant(mat4(sqrt(0.0), 0.0, 0.0, 0.0, log(1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0)), abs(1.0), 1.0, 0.0, 1.0, cos(0.0), 1.0, 0.0, 1.0, 1.0))))) > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(294.016), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-7944.8328)), bvec2(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), false))).y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(bvec3(true), mat3x4(1.0), _GLF_struct_3(mat4x2(1.0), bvec4(true), bvec3(true), _GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(uint(uvec2(gl_WorkGroupID.x, 0u)), uint(_GLF_IDENTITY(uvec3(uint(uvec2(gl_WorkGroupID.x, 0u)), 0u, 1u), (uvec3(uint(uvec2(gl_WorkGroupID.x, 0u)), _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, min(0u, 0u)), 0u))), 0u, 0u)), 1u)) >> uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, min(0u, 0u)))))))))), _GLF_struct_0(1u, mat4x2(1.0), mat2x3(1.0), mat2(1.0)), _GLF_struct_1(1u, mat3x4(1.0), uvec4(_GLF_IDENTITY(1u, (1u) / _GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uint(1u))), (1u) >> _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))), ivec2(1)), _GLF_struct_2(true, mat4x3(1.0))));
 uint workgroup_base = workgroup_size * _GLF_struct_replacement_4._f2.workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 _GLF_struct_21 _GLF_struct_replacement_21 = _GLF_struct_21(ivec3(1), uvec3(1u), _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) | _GLF_IDENTITY((subgroup_id), uint(uint((subgroup_id))))) * _GLF_struct_replacement_20._f1.subgroup_size, 1u, 1u, bvec4(true));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_21.subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_21.subgroup_base, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), true && (! ((injectionSwitch.x < injectionSwitch.y))))))) ? _GLF_IDENTITY(_GLF_struct_replacement_21.subgroup_base, (_GLF_struct_replacement_21.subgroup_base) - 0u) : _GLF_FUZZED(subgroup_local_id)))) | (_GLF_struct_replacement_21.subgroup_base), (true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_21.subgroup_base, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), true && (! ((injectionSwitch.x < injectionSwitch.y))))))) ? _GLF_IDENTITY(_GLF_struct_replacement_21.subgroup_base, (_GLF_struct_replacement_21.subgroup_base) - 0u) : _GLF_FUZZED(subgroup_local_id)))) | (_GLF_struct_replacement_21.subgroup_base), clamp((_GLF_IDENTITY(_GLF_struct_replacement_21.subgroup_base, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), true && (! ((injectionSwitch.x < injectionSwitch.y))))))) ? _GLF_IDENTITY(_GLF_struct_replacement_21.subgroup_base, (_GLF_struct_replacement_21.subgroup_base) - 0u) : _GLF_FUZZED(subgroup_local_id)))) | (_GLF_struct_replacement_21.subgroup_base), (_GLF_IDENTITY(_GLF_struct_replacement_21.subgroup_base, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), true && (! ((injectionSwitch.x < injectionSwitch.y))))))) ? _GLF_IDENTITY(_GLF_struct_replacement_21.subgroup_base, (_GLF_struct_replacement_21.subgroup_base) - 0u) : _GLF_FUZZED(subgroup_local_id)))) | (_GLF_struct_replacement_21.subgroup_base), (_GLF_IDENTITY(_GLF_struct_replacement_21.subgroup_base, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), true && (! ((injectionSwitch.x < injectionSwitch.y))))))) ? _GLF_IDENTITY(_GLF_struct_replacement_21.subgroup_base, (_GLF_struct_replacement_21.subgroup_base) - 0u) : _GLF_FUZZED(subgroup_local_id)))) | (_GLF_struct_replacement_21.subgroup_base))) : _GLF_FUZZED(74093u)))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_41 _GLF_struct_replacement_41 = _GLF_struct_41(_GLF_struct_26(_GLF_struct_22(mat3x2(1.0), mat2x3(1.0)), _GLF_struct_23(ivec3(_GLF_IDENTITY(1, (1) * 1)), mat2x3(1.0), 1.0, ivec2(1), mat3x4(1.0), mat2x3(1.0), bvec4(true)), _GLF_struct_24(mat2(1.0), ivec2(1), vec3(1.0), ivec4(1), mat2(1.0), uvec2(_GLF_IDENTITY(1u, ~ (~ (1u))))), vec3(1.0), 1.0, _GLF_struct_25(mat3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0))) + tan(0.0)), mix(float(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0))) + tan(0.0))), _GLF_IDENTITY(float(_GLF_FUZZED(3056.1726)), mix(float(_GLF_FUZZED(71.43)), float(float(_GLF_FUZZED(3056.1726))), bool(true))), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)))))), uvec4(1u), true, mat4x3(1.0), mat4x2(1.0))), _GLF_struct_32(_GLF_struct_27(1.0, _GLF_IDENTITY(1, int(int(1)))), _GLF_struct_28(bvec3(true), bvec4(true), vec2(1.0), 1u, 1.0), mat3x2(1.0), _GLF_struct_29(ivec4(1), vec3(1.0), mat4x2(1.0), mat3x2(1.0)), _GLF_struct_30(uvec4(1u), _GLF_IDENTITY(vec2(1.0), clamp(_GLF_IDENTITY(vec2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0))), vec2(1.0), vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(578.555)), bool(false)))))), mat3x4(1.0), true), _GLF_struct_31(mat4(1.0), mat4(1.0), mat3x4(1.0), _GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))))))) + _GLF_struct_replacement_21.subgroup_base + ((_GLF_IDENTITY(subgroup_local_id + 1, 0u + (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))))) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_20._f1.subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_struct_replacement_20._f1.subgroup_size) / _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, 0u ^ (_GLF_IDENTITY(4u, clamp(4u, 4u, 4u))))), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) - 0u))), (_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, 0u ^ (_GLF_IDENTITY(4u, clamp(4u, 4u, 4u))))), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) - _GLF_IDENTITY(0u, (0u) | 0u)))), min(((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, 0u ^ (_GLF_IDENTITY(4u, clamp(4u, 4u, 4u))))), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) - 0u))), ((_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)) << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(4u, (false ? _GLF_FUZZED(subgroup_id) : 4u)), clamp(4u, 4u, 4u))))), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), max(uint(4u), _GLF_IDENTITY(uint(4u), 0u ^ (uint(4u)))))) - 0u)))))) - 0u), ((_GLF_struct_replacement_20._f1.subgroup_size) / ((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (true ? uint(4u) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)))))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), min(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), _GLF_FUZZED(subgroup_local_id))) : 4u))) << 0u)), ~ (~ (uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), min(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), _GLF_FUZZED(subgroup_local_id))) : 4u))) << 0u))))), (uint(4u)) - 0u)))) ^ 0u), min(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_struct_replacement_20._f1.subgroup_size) / _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, 0u ^ (_GLF_IDENTITY(4u, clamp(4u, 4u, 4u))))), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) - 0u))), (_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, 0u ^ (_GLF_IDENTITY(4u, clamp(4u, 4u, 4u))))), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) - _GLF_IDENTITY(0u, (0u) | 0u)))), min(((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, 0u ^ (_GLF_IDENTITY(4u, clamp(4u, 4u, 4u))))), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) - 0u))), ((_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)) << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(4u, (false ? _GLF_FUZZED(subgroup_id) : 4u)), clamp(4u, 4u, 4u))))), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), max(uint(4u), _GLF_IDENTITY(uint(4u), 0u ^ (uint(4u)))))) - 0u)))))) - 0u), ((_GLF_struct_replacement_20._f1.subgroup_size) / ((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (true ? uint(4u) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)))))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), min(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), _GLF_FUZZED(subgroup_local_id))) : 4u))) << 0u)), ~ (~ (uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), min(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), _GLF_FUZZED(subgroup_local_id))) : 4u))) << 0u))))), (uint(4u)) - 0u)))) ^ 0u), (_GLF_IDENTITY((_GLF_struct_replacement_20._f1.subgroup_size) / _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, 0u ^ (_GLF_IDENTITY(4u, clamp(4u, 4u, 4u))))), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) - 0u))), (_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, 0u ^ (_GLF_IDENTITY(4u, clamp(4u, 4u, 4u))))), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) - _GLF_IDENTITY(0u, (0u) | 0u)))), min(((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, 0u ^ (_GLF_IDENTITY(4u, clamp(4u, 4u, 4u))))), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) - 0u))), ((_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)) << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(4u, (false ? _GLF_FUZZED(subgroup_id) : 4u)), clamp(4u, 4u, 4u))))), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), max(uint(4u), _GLF_IDENTITY(uint(4u), 0u ^ (uint(4u)))))) - 0u)))))) - 0u), ((_GLF_struct_replacement_20._f1.subgroup_size) / ((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (true ? uint(4u) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)))))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), min(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), _GLF_FUZZED(subgroup_local_id))) : 4u))) << 0u)), ~ (~ (uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), min(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), _GLF_FUZZED(subgroup_local_id))) : 4u))) << 0u))))), (uint(4u)) - 0u)))) ^ 0u)) >> 0u), _GLF_IDENTITY((_GLF_struct_replacement_20._f1.subgroup_size) / _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, 0u ^ (_GLF_IDENTITY(4u, clamp(4u, 4u, 4u))))), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) - 0u))), (_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, 0u ^ (_GLF_IDENTITY(4u, clamp(4u, 4u, 4u))))), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) - _GLF_IDENTITY(0u, (0u) | 0u)))), min(((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, 0u ^ (_GLF_IDENTITY(4u, clamp(4u, 4u, 4u))))), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) - 0u))), ((_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)) << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(4u, (false ? _GLF_FUZZED(subgroup_id) : 4u)), clamp(4u, 4u, 4u))))), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), max(uint(4u), _GLF_IDENTITY(uint(4u), 0u ^ (uint(4u)))))) - 0u)))))) - 0u), ((_GLF_struct_replacement_20._f1.subgroup_size) / ((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (true ? uint(4u) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)))))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), min(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), _GLF_FUZZED(subgroup_local_id))) : 4u))) << 0u)), ~ (~ (uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), min(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), _GLF_FUZZED(subgroup_local_id))) : 4u))) << 0u))))), (uint(4u)) - 0u)))) ^ 0u)))), max(_GLF_IDENTITY(_GLF_struct_replacement_20._f1.subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_struct_replacement_20._f1.subgroup_size) / _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, 0u ^ (_GLF_IDENTITY(4u, clamp(4u, 4u, 4u))))), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) - 0u))), (_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, 0u ^ (_GLF_IDENTITY(4u, clamp(4u, 4u, 4u))))), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) - _GLF_IDENTITY(0u, (0u) | 0u)))), min(((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, 0u ^ (_GLF_IDENTITY(4u, clamp(4u, 4u, 4u))))), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) - 0u))), ((_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)) << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(4u, (false ? _GLF_FUZZED(subgroup_id) : 4u)), clamp(4u, 4u, 4u))))), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), max(uint(4u), _GLF_IDENTITY(uint(4u), 0u ^ (uint(4u)))))) - 0u)))))) - 0u), ((_GLF_struct_replacement_20._f1.subgroup_size) / ((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (true ? uint(4u) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)))))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), min(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), _GLF_FUZZED(subgroup_local_id))) : 4u))) << 0u)), ~ (~ (uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), min(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), _GLF_FUZZED(subgroup_local_id))) : 4u))) << 0u))))), (uint(4u)) - 0u)))) ^ 0u), min(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_struct_replacement_20._f1.subgroup_size) / _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, 0u ^ (_GLF_IDENTITY(4u, clamp(4u, 4u, 4u))))), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) - 0u))), (_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, 0u ^ (_GLF_IDENTITY(4u, clamp(4u, 4u, 4u))))), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) - _GLF_IDENTITY(0u, (0u) | 0u)))), min(((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, 0u ^ (_GLF_IDENTITY(4u, clamp(4u, 4u, 4u))))), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) - 0u))), ((_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)) << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(4u, (false ? _GLF_FUZZED(subgroup_id) : 4u)), clamp(4u, 4u, 4u))))), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), max(uint(4u), _GLF_IDENTITY(uint(4u), 0u ^ (uint(4u)))))) - 0u)))))) - 0u), ((_GLF_struct_replacement_20._f1.subgroup_size) / ((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (true ? uint(4u) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)))))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), min(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), _GLF_FUZZED(subgroup_local_id))) : 4u))) << 0u)), ~ (~ (uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), min(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), _GLF_FUZZED(subgroup_local_id))) : 4u))) << 0u))))), (uint(4u)) - 0u)))) ^ 0u), (_GLF_IDENTITY((_GLF_struct_replacement_20._f1.subgroup_size) / _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, 0u ^ (_GLF_IDENTITY(4u, clamp(4u, 4u, 4u))))), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) - 0u))), (_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, 0u ^ (_GLF_IDENTITY(4u, clamp(4u, 4u, 4u))))), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) - _GLF_IDENTITY(0u, (0u) | 0u)))), min(((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, 0u ^ (_GLF_IDENTITY(4u, clamp(4u, 4u, 4u))))), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) - 0u))), ((_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)) << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(4u, (false ? _GLF_FUZZED(subgroup_id) : 4u)), clamp(4u, 4u, 4u))))), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), max(uint(4u), _GLF_IDENTITY(uint(4u), 0u ^ (uint(4u)))))) - 0u)))))) - 0u), ((_GLF_struct_replacement_20._f1.subgroup_size) / ((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (true ? uint(4u) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)))))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), min(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), _GLF_FUZZED(subgroup_local_id))) : 4u))) << 0u)), ~ (~ (uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), min(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), _GLF_FUZZED(subgroup_local_id))) : 4u))) << 0u))))), (uint(4u)) - 0u)))) ^ 0u)) >> 0u), _GLF_IDENTITY((_GLF_struct_replacement_20._f1.subgroup_size) / _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, 0u ^ (_GLF_IDENTITY(4u, clamp(4u, 4u, 4u))))), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) - 0u))), (_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, 0u ^ (_GLF_IDENTITY(4u, clamp(4u, 4u, 4u))))), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) - _GLF_IDENTITY(0u, (0u) | 0u)))), min(((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, 0u ^ (_GLF_IDENTITY(4u, clamp(4u, 4u, 4u))))), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) - 0u))), ((_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)) << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(4u, (false ? _GLF_FUZZED(subgroup_id) : 4u)), clamp(4u, 4u, 4u))))), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), max(uint(4u), _GLF_IDENTITY(uint(4u), 0u ^ (uint(4u)))))) - 0u)))))) - 0u), ((_GLF_struct_replacement_20._f1.subgroup_size) / ((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (true ? uint(4u) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)))))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), min(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), _GLF_FUZZED(subgroup_local_id))) : 4u))) << 0u)), ~ (~ (uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), min(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), _GLF_FUZZED(subgroup_local_id))) : 4u))) << 0u))))), (uint(4u)) - 0u)))) ^ 0u)))), _GLF_IDENTITY(_GLF_struct_replacement_20._f1.subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_struct_replacement_20._f1.subgroup_size) / _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, 0u ^ (_GLF_IDENTITY(4u, clamp(4u, 4u, 4u))))), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) - 0u))), (_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, 0u ^ (_GLF_IDENTITY(4u, clamp(4u, 4u, 4u))))), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) - _GLF_IDENTITY(0u, (0u) | 0u)))), min(((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, 0u ^ (_GLF_IDENTITY(4u, clamp(4u, 4u, 4u))))), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) - 0u))), ((_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)) << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(4u, (false ? _GLF_FUZZED(subgroup_id) : 4u)), clamp(4u, 4u, 4u))))), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), max(uint(4u), _GLF_IDENTITY(uint(4u), 0u ^ (uint(4u)))))) - 0u)))))) - 0u), ((_GLF_struct_replacement_20._f1.subgroup_size) / ((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (true ? uint(4u) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)))))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), min(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), _GLF_FUZZED(subgroup_local_id))) : 4u))) << 0u)), ~ (~ (uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), min(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), _GLF_FUZZED(subgroup_local_id))) : 4u))) << 0u))))), (uint(4u)) - 0u)))) ^ 0u), min(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_struct_replacement_20._f1.subgroup_size) / _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, 0u ^ (_GLF_IDENTITY(4u, clamp(4u, 4u, 4u))))), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) - 0u))), (_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, 0u ^ (_GLF_IDENTITY(4u, clamp(4u, 4u, 4u))))), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) - _GLF_IDENTITY(0u, (0u) | 0u)))), min(((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, 0u ^ (_GLF_IDENTITY(4u, clamp(4u, 4u, 4u))))), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) - 0u))), ((_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)) << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(4u, (false ? _GLF_FUZZED(subgroup_id) : 4u)), clamp(4u, 4u, 4u))))), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), max(uint(4u), _GLF_IDENTITY(uint(4u), 0u ^ (uint(4u)))))) - 0u)))))) - 0u), ((_GLF_struct_replacement_20._f1.subgroup_size) / ((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (true ? uint(4u) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)))))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), min(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), _GLF_FUZZED(subgroup_local_id))) : 4u))) << 0u)), ~ (~ (uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), min(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), _GLF_FUZZED(subgroup_local_id))) : 4u))) << 0u))))), (uint(4u)) - 0u)))) ^ 0u), (_GLF_IDENTITY((_GLF_struct_replacement_20._f1.subgroup_size) / _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, 0u ^ (_GLF_IDENTITY(4u, clamp(4u, 4u, 4u))))), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) - 0u))), (_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, 0u ^ (_GLF_IDENTITY(4u, clamp(4u, 4u, 4u))))), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) - _GLF_IDENTITY(0u, (0u) | 0u)))), min(((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, 0u ^ (_GLF_IDENTITY(4u, clamp(4u, 4u, 4u))))), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) - 0u))), ((_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)) << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(4u, (false ? _GLF_FUZZED(subgroup_id) : 4u)), clamp(4u, 4u, 4u))))), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), max(uint(4u), _GLF_IDENTITY(uint(4u), 0u ^ (uint(4u)))))) - 0u)))))) - 0u), ((_GLF_struct_replacement_20._f1.subgroup_size) / ((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (true ? uint(4u) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)))))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), min(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), _GLF_FUZZED(subgroup_local_id))) : 4u))) << 0u)), ~ (~ (uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), min(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), _GLF_FUZZED(subgroup_local_id))) : 4u))) << 0u))))), (uint(4u)) - 0u)))) ^ 0u)) >> 0u), _GLF_IDENTITY((_GLF_struct_replacement_20._f1.subgroup_size) / _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, 0u ^ (_GLF_IDENTITY(4u, clamp(4u, 4u, 4u))))), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) - 0u))), (_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, 0u ^ (_GLF_IDENTITY(4u, clamp(4u, 4u, 4u))))), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) - _GLF_IDENTITY(0u, (0u) | 0u)))), min(((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, 0u ^ (_GLF_IDENTITY(4u, clamp(4u, 4u, 4u))))), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) - 0u))), ((_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)) << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(4u, (false ? _GLF_FUZZED(subgroup_id) : 4u)), clamp(4u, 4u, 4u))))), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), max(uint(4u), _GLF_IDENTITY(uint(4u), 0u ^ (uint(4u)))))) - 0u)))))) - 0u), ((_GLF_struct_replacement_20._f1.subgroup_size) / ((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (true ? uint(4u) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)))))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), min(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), _GLF_FUZZED(subgroup_local_id))) : 4u))) << 0u)), ~ (~ (uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), min(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), _GLF_FUZZED(subgroup_local_id))) : 4u))) << 0u))))), (uint(4u)) - 0u)))) ^ 0u))))))), ivec4(1))), _GLF_struct_36(_GLF_struct_33(mat4(1.0), mat4(1.0), uvec2(1u), uvec3(1u), _GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) < injectionSwitch.y))))), mat2x3(1.0)), uvec4(1u), _GLF_struct_34(_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(mat2(mat4(mat2(1.0))), mat2(mat4x2(_GLF_IDENTITY(mat2(mat4(mat2(1.0))), (false ? _GLF_FUZZED(mat2(57.63, 78.09, 24.86, -25.00)) : mat2(mat4(mat2(1.0))))))))), bvec3(true)), _GLF_struct_35(ivec4(1), uvec4(1u), mat2(1.0))), true, _GLF_struct_40(_GLF_IDENTITY(mat2(1.0), transpose(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)), transpose(transpose(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)))))))), _GLF_struct_37(bvec2(true), 1u, mat2x3(1.0), bvec2(_GLF_IDENTITY(true, (true) || false)), bvec3(_GLF_IDENTITY(true, (true) && true))), _GLF_struct_38(bvec2(true), mat4x2(1.0), 1.0, uvec2(1u), bvec2(true), mat2(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED((+ 2980.0921))), clamp(float(_GLF_FUZZED((+ 2980.0921))), float(_GLF_FUZZED((_GLF_IDENTITY(+ 2980.0921, (+ _GLF_IDENTITY(2980.0921, clamp(2980.0921, 2980.0921, 2980.0921))) - 0.0)))), float(_GLF_FUZZED((+ 2980.0921))))), float(1.0), bool(true)))), bvec3(true)), _GLF_struct_39(mat3x4(1.0), mat4x3(1.0), bvec4(true), mat3x4(1.0)), vec3(1.0)));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), clamp(min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), mix(float(min(injectionSwitch.x, injectionSwitch.x)), float(_GLF_FUZZED(-13.21)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), ! (! (bool(bvec2(_GLF_DEAD(false), false))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), ! (! (bool(bvec2(_GLF_DEAD(false), false))))), (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(false, (false) || false))), ! (! (bool(bvec2(_GLF_DEAD(false), false)))))) && true)))), false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 atomicStore(buf[_GLF_struct_replacement_41._f1._f5.next_virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, max(4, 4)), 4)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (! (! (false))), true && (! (! (! (false))))))), _GLF_IDENTITY((! (! (false))), true && (_GLF_IDENTITY((! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (! (false))), false || ((! (! (false)))))), ! (! (! (_GLF_IDENTITY((! (! (false))), false || ((! (! (false))))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY((injectionSwitch[1]), mix(float(_GLF_FUZZED(-3.5)), float((injectionSwitch[1])), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) * 1.0))).y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
