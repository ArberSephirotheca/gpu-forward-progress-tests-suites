#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), true && (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))));
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       barrier();
      }
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uvec2 GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid;
 uvec4 GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid;
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false || (false), ! (! (false || (false)))), (_GLF_IDENTITY(false || (false), ! (! (false || (false))))) || false), false, false), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false || _GLF_IDENTITY((false), false || ((false))), _GLF_IDENTITY(! _GLF_IDENTITY((! (false || _GLF_IDENTITY((false), ((false)) && true))), false || (_GLF_IDENTITY((! (false || (false))), bool(bvec2(_GLF_IDENTITY((! (false || (false))), true && ((! (false || (false))))), false))))), bool(bvec3(! _GLF_IDENTITY((! (false || (false))), false || (_GLF_IDENTITY((! (false || (false))), bool(bvec2(_GLF_IDENTITY((! (false || (false))), true && ((! (false || (_GLF_IDENTITY(false, ! (! (false)))))))), false))))), false, true)))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), true && (bool(bvec4(false, true, false, false))))), false), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false || (false), ! _GLF_IDENTITY(_GLF_IDENTITY((! (false || (false))), false || (_GLF_IDENTITY((! (false || (false))), bool(bvec2(_GLF_IDENTITY((! (false || (false))), true && ((! (false || (false))))), false))))), ! (! (_GLF_IDENTITY((! (false || (false))), false || (_GLF_IDENTITY((! (false || (false))), bool(bvec2(_GLF_IDENTITY((! (false || (false))), true && ((! (false || (false))))), false))))))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false || (false), ! _GLF_IDENTITY((! (false || _GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false))), true, true, true))))), false || (_GLF_IDENTITY((! (false || (false))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! (false || (false)), (_GLF_IDENTITY(! (false || (false)), false || (_GLF_IDENTITY(! (false || (false)), bool(bvec2(! (false || (false)), true)))))) && true)), true && ((! _GLF_IDENTITY((false || (false)), false || ((false || (false))))))), false)))))), false, false)))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false || (false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (false || (false)), ! (! (_GLF_IDENTITY(! (false || (false)), bool(bool(! (false || (false))))))))), false || (_GLF_IDENTITY((! (false || (false))), bool(bvec2(_GLF_IDENTITY((! (false || (false))), true && ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false)))))) || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(! (false || (false)), true && _GLF_IDENTITY((_GLF_IDENTITY(! (false || (false)), ! (! (! (false || (false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(! (false || (false)), ! (! (! (false || (false)))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(! (false || (false)), ! (! (! (false || (false)))))), ((_GLF_IDENTITY(! (false || (false)), ! (! (! (false || (false))))))) || false)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(! (false || (false)), ! (! (! (false || (false)))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(! (false || (false)), ! (! (! (false || (false)))))), ((_GLF_IDENTITY(! (false || (false)), ! (! (! (false || (false))))))) || false)))), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (false || (false)), ! (! (! (false || (false)))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(! (false || (false)), ! (! (! (false || (false)))))), ((_GLF_IDENTITY(! (false || (false)), ! (! (! (false || (false))))))) || false)))))))))))), bool(bvec4(! (false || (false)), false, true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false)))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false || (false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(false || (false), false || (false || (false))))), false || (_GLF_IDENTITY((! (false || (false))), bool(bvec2(_GLF_IDENTITY((! (false || (false))), true && ((! (false || (false))))), false)))))), false, false))))))))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(false || (false), ! (! (false || (false)))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))))) || false), false)), true))))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, exp(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, exp(0.0))), vec2(vec4(vec2(mat3(injectionSwitch, exp(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, exp(0.0))), length(vec4(0.0, 0.0, 0.0, 0.0)), abs(0.0))))))).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, exp(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, exp(0.0))), vec2(vec4(vec2(mat3(injectionSwitch, exp(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, exp(0.0))), length(vec4(0.0, 0.0, 0.0, 0.0)), abs(0.0))))))).x > injectionSwitch.y)))))))
          {
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            barrier();
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           barrier();
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        {
         do
          {
           barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & 1)); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             barrier();
            }
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(injectionSwitch.x)), (false ? _GLF_FUZZED(64.20) : float(float(injectionSwitch.x))))) > injectionSwitch.y)) || false))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
         barrier();
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           for(int _injected_loop_counter = (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), (28678 & 0) ^ (_GLF_IDENTITY(int(3), int(ivec4(int(3), 0, 1, 0)))))) - 0))), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), (28678 & 0) ^ (_GLF_IDENTITY(int(3), int(ivec4(int(3), 0, 1, 0)))))) - 0)))) >> 0) >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                    {
                     barrier();
                    }
                   else
                    {
                    }
                  }
                 barrier();
                }
              }
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          {
           for(int _injected_loop_counter = _GLF_IDENTITY(0, ~ (~ (0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter ++)
            {
             barrier();
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            barrier();
          }
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)))))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)) || false)))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             else
              {
              }
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))
                  {
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 else
                  {
                  }
                 barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           barrier();
                          }
                         else
                          {
                          }
                        }
                       barrier();
                      }
                     for(int _injected_loop_counter = (0 | (0 ^ 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                      {
                       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false), false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-0.2)), bool(false))), float(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-0.2)), bool(false))), 0.0, 0.0, 1.0))), (injectionSwitch.x > injectionSwitch.y) && true)))))))
                        {
                        }
                       else
                        {
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(false))
                            {
                             if(_GLF_WRAPPED_IF_FALSE(false))
                              {
                              }
                             else
                              {
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                {
                                 if(_GLF_DEAD(false))
                                  barrier();
                                 barrier();
                                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
                                  barrier();
                                }
                               barrier();
                               if(_GLF_DEAD(false))
                                {
                                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                  {
                                   barrier();
                                  }
                                 else
                                  {
                                  }
                                }
                               if(_GLF_DEAD(false))
                                barrier();
                              }
                             if(_GLF_DEAD(false))
                              barrier();
                            }
                           barrier();
                          }
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                           barrier();
                          }
                         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                          barrier();
                        }
                      }
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   do
                    {
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                }
              }
            }
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
                barrier();
              }
             else
              {
               barrier();
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))))))
                    {
                     barrier();
                    }
                   else
                    {
                    }
                  }
                }
              }
            }
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))), _GLF_IDENTITY(bool(bool(! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY(bool(bool(! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (bool(bool(! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false)) && true)))) && true));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true, true))))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))));
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
          barrier();
         for(int _injected_loop_counter = _GLF_IDENTITY((1 | 1), (_GLF_IDENTITY((1 | 1), ~ (~ (_GLF_IDENTITY((1 | 1), (_GLF_IDENTITY((1 | 1), max((1 | 1), (1 | 1)))) | 0))))) ^ 0); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, ! (! (_GLF_IDENTITY(_injected_loop_counter > 0, true && (_injected_loop_counter > 0)))))); _injected_loop_counter --)
          {
           barrier();
          }
        }
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
  {
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1), clamp(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1), _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1), max(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1), _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1))), _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1))))) != (0 | int(_GLF_ZERO(0.0, injectionSwitch.x)))); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) || false)))
              barrier();
             if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
            }
          }
         if(_GLF_DEAD(false))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | 1)); _injected_loop_counter ++)
      {
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true, false))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
     barrier();
    }
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
          {
           barrier();
          }
         else
          {
          }
        }
       barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))), (_GLF_DEAD(false)) || false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, abs(1.0), 1.0, 1.0, 1.0)))) - sqrt(vec2(0.0, 0.0))).y)), false))))))
          barrier();
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
   do
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
      barrier();
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter != 0, ! (_GLF_IDENTITY(! (_injected_loop_counter != 0), (! (_injected_loop_counter != 0)) || false)))), false || (bool(_GLF_IDENTITY(_injected_loop_counter != 0, ! (_GLF_IDENTITY(! (_injected_loop_counter != 0), (! (_injected_loop_counter != 0)) || false))))))))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
          {
           for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), max(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), clamp(_GLF_IDENTITY(1, (1) * 1), _GLF_IDENTITY(1, (1) * 1), _GLF_IDENTITY(1, (1) * 1))), _GLF_IDENTITY(1, (1) * 1))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (-54382 & 0)); _injected_loop_counter --)
            {
             barrier();
            }
          }
        }
       while(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec2(_GLF_WRAPPED_LOOP(false), false))), bool(bvec2(_GLF_WRAPPED_LOOP(false), false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec2(_GLF_WRAPPED_LOOP(false), false))), bool(bvec2(_GLF_WRAPPED_LOOP(false), false))))));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
    }
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-31.32), _GLF_FUZZED(-8.4)), bvec2(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))) && true)))).y))), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-31.32), _GLF_FUZZED(-8.4)), bvec2(false, false))).y))), (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), vec2(vec3((injectionSwitch), 1.0)))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-31.32), _GLF_FUZZED(_GLF_IDENTITY(-8.4, (false ? _GLF_FUZZED(-7454.8555) : -8.4)))), bvec2(false, false))).y)))) && true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), false || (bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))))))) || false)))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
    }
  }
 GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x = subgroup_id;
 uint subgroup_size = gl_SubgroupSize;
 _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z = _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size)), _GLF_IDENTITY(0u, (0u) | (0u)) | (GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z = subgroup_size));
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8293.4474)), float(injectionSwitch.y), bool(true)))) / _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
     else
      {
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))), false, false))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, true))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))))))
        barrier();
      }
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) | (int(8))))) ^ 0, ((0 >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) | (int(8))))) ^ 0) ^ 0))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (false)))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (5) >> 0))), (0 << _GLF_IDENTITY(int(5), int(5))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))); _injected_loop_counter --)
    {
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec2(true, true)))))), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((true), false || ((true)))), false || (! (_GLF_IDENTITY((true), false || ((true)))))))))), true, true)), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, true)), false)))))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(true, true && (true)), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, true), true)))))), _GLF_IDENTITY(false, ! (! (false))))), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, true), true))), false)), true))))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, true), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), ! (! (true))), _GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(true, ! (! (true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), bool(bvec4(_GLF_IDENTITY(true, (true) && true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))), true, true), true))), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, true), true))), false)), true))))))))), bool(bvec2(_GLF_WRAPPED_IF_TRUE(true), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(1179.6402)), bool(false))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         barrier();
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (0) / 1)); _injected_loop_counter --)
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_IDENTITY(true, ! (! (true)))))))))
        barrier();
       for(int _injected_loop_counter = _GLF_IDENTITY(1, (0 | 0) ^ (_GLF_IDENTITY(1, (1) | 0))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > (0 << _GLF_IDENTITY(int(8), int(8))), ! (! (_injected_loop_counter > (0 << _GLF_IDENTITY(int(8), int(8))))))); _injected_loop_counter --)
        {
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))));
      }
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_DEAD(false))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
    }
   GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.x = num_workgroup;
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           barrier();
          }
        }
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) | 1)); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         do
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             barrier();
            }
           else
            {
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, false)))))));
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true), (_GLF_IDENTITY((false), ((false)) && true)) || false) || false)))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
      }
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true))), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID.x, min(gl_WorkGroupID.x, gl_WorkGroupID.x))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID.x, min(gl_WorkGroupID.x, gl_WorkGroupID.x))), max((_GLF_IDENTITY(gl_WorkGroupID.x, min(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, 1u) * (gl_WorkGroupID)).x))), (_GLF_IDENTITY(gl_WorkGroupID.x, min(gl_WorkGroupID.x, gl_WorkGroupID.x))))) : _GLF_FUZZED(floatBitsToUint(5.2)))) ^ 0u);
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   do
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0))))))
      {
      }
     else
      {
       barrier();
      }
    }
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) / 1u), _GLF_IDENTITY(0u, 0u | (0u))))) / _GLF_IDENTITY(1u, (1u) ^ 0u)) | (workgroup_size * workgroup_id));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))))
  {
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bool(! (_GLF_DEAD(false))), (bool(! (_GLF_DEAD(false)))) && true))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       barrier();
      }
     else
      {
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, (workgroup_base + GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid, (GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid) | uvec4(0u, 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_local_id) : 0u)), 0u)).z) | (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid, uvec2(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid[0], _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid[1], max(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid[1], GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid[1])))).x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, uint(_GLF_IDENTITY(uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u), (_GLF_IDENTITY(uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) | uvec3(0u, 0u, 0u)) * (uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, _GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : 0u)))))) | uvec3(0u, 0u, 0u)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, _GLF_IDENTITY(0u, 0u | (0u))), min(uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u), uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u))), (_GLF_IDENTITY(uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u), uvec3(1u, 1u, 1u) * (uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u)))) | uvec3(0u, 0u, 0u)))), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (workgroup_base + _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid, uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid, ~ (~ (GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid))))).z, uint(_GLF_IDENTITY(uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u), (_GLF_IDENTITY(uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) << uvec3(0u, 0u, 0u)), uvec3(uvec3(uvec3(1u, 1u, 1u)))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) << uvec3(0u, 0u, 0u)), uvec3(uvec3(uvec3(1u, 1u, 1u)))))) * (uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, _GLF_IDENTITY(0u, (138404u & 0u) ^ (_GLF_IDENTITY(0u, ~ (~ (0u))))))))) | uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) | 0u), 0u))))))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u), min(uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u), uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u))), (_GLF_IDENTITY(uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u), uvec3(1u, 1u, 1u) * (uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u)))) | uvec3(0u, 0u, 0u)))), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (workgroup_base + _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, uint(_GLF_IDENTITY(uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u), (_GLF_IDENTITY(uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) << uvec3(0u, 0u, 0u)), uvec3(uvec3(uvec3(1u, 1u, 1u)))) * (uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, _GLF_IDENTITY(0u, (138404u & 0u) ^ (_GLF_IDENTITY(0u, ~ (~ (0u))))))))) | uvec3(0u, 0u, 0u))))))), ~ (~ (~ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u), min(uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u), uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u))), (_GLF_IDENTITY(uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u), uvec3(1u, 1u, 1u) * (uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u)))) | uvec3(0u, 0u, 0u)))), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (workgroup_base + _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, uint(_GLF_IDENTITY(uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u), (_GLF_IDENTITY(uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) << uvec3(0u, 0u, 0u)), uvec3(uvec3(uvec3(1u, 1u, 1u)))) * (uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, _GLF_IDENTITY(0u, (138404u & 0u) ^ (_GLF_IDENTITY(0u, ~ (~ (0u))))))))) | uvec3(0u, 0u, 0u)))))))))), 1u, 1u, 0u), (false ? _GLF_FUZZED(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid) : uvec4(_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u), min(uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u), uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u))), (_GLF_IDENTITY(uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u), uvec3(1u, 1u, 1u) * (uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u)))) | uvec3(0u, 0u, 0u)))), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (workgroup_base + _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, uint(_GLF_IDENTITY(uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u), (_GLF_IDENTITY(uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) << uvec3(0u, 0u, 0u)), uvec3(uvec3(uvec3(1u, 1u, 1u)))) * (uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, _GLF_IDENTITY(0u, (138404u & 0u) ^ (_GLF_IDENTITY(0u, ~ (~ (0u))))))))) | uvec3(0u, 0u, 0u))))))), ~ (~ (~ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u), min(uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u), uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u))), (_GLF_IDENTITY(uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u), uvec3(1u, 1u, 1u) * (uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u)))) | uvec3(0u, 0u, 0u)))), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (workgroup_base + _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, uint(_GLF_IDENTITY(uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u), (_GLF_IDENTITY(uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) << uvec3(0u, 0u, 0u)), uvec3(uvec3(uvec3(1u, 1u, 1u)))) * (uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, _GLF_IDENTITY(0u, (138404u & 0u) ^ (_GLF_IDENTITY(0u, ~ (~ (0u))))))))) | uvec3(0u, 0u, 0u)))))))))), 1u, 1u, 0u))), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u), min(uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u), uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u))), (_GLF_IDENTITY(uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u), uvec3(1u, 1u, 1u) * (uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u)))) | uvec3(0u, 0u, 0u)))), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (workgroup_base + _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, uint(_GLF_IDENTITY(uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u), (_GLF_IDENTITY(uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) << uvec3(0u, 0u, 0u)), uvec3(uvec3(uvec3(1u, 1u, 1u)))) * (uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, _GLF_IDENTITY(0u, (138404u & 0u) ^ (_GLF_IDENTITY(0u, ~ (~ (0u))))))))) | uvec3(0u, 0u, 0u))))))), ~ (~ (~ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u), min(uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u), uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u))), (_GLF_IDENTITY(uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u), uvec3(1u, 1u, 1u) * (uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u)))) | uvec3(0u, 0u, 0u)))), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (workgroup_base + _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, uint(_GLF_IDENTITY(uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u), (_GLF_IDENTITY(uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) << uvec3(0u, 0u, 0u)), uvec3(uvec3(uvec3(1u, 1u, 1u)))) * (uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, _GLF_IDENTITY(0u, (138404u & 0u) ^ (_GLF_IDENTITY(0u, ~ (~ (0u))))))))) | uvec3(0u, 0u, 0u)))))))))), 1u, 1u, 0u), (false ? _GLF_FUZZED(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid) : uvec4(_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u), min(uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u), uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u))), (_GLF_IDENTITY(uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u), uvec3(1u, 1u, 1u) * (uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u)))) | uvec3(0u, 0u, 0u)))), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (workgroup_base + _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, uint(_GLF_IDENTITY(uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u), (_GLF_IDENTITY(uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) << uvec3(0u, 0u, 0u)), uvec3(uvec3(uvec3(1u, 1u, 1u)))) * (uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, _GLF_IDENTITY(0u, (138404u & 0u) ^ (_GLF_IDENTITY(0u, ~ (~ (0u))))))))) | uvec3(0u, 0u, 0u))))))), ~ (~ (~ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u), min(uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u), uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u))), (_GLF_IDENTITY(uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u), uvec3(1u, 1u, 1u) * (uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u)))) | uvec3(0u, 0u, 0u)))), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (workgroup_base + _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, uint(_GLF_IDENTITY(uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u), (_GLF_IDENTITY(uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) << uvec3(0u, 0u, 0u)), uvec3(uvec3(uvec3(1u, 1u, 1u)))) * (uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, _GLF_IDENTITY(0u, (138404u & 0u) ^ (_GLF_IDENTITY(0u, ~ (~ (0u))))))))) | uvec3(0u, 0u, 0u)))))))))), 1u, 1u, 0u)))) | (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u), min(uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u), uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u))), (_GLF_IDENTITY(uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u), uvec3(1u, 1u, 1u) * (uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u)))) | uvec3(0u, 0u, 0u)))), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (workgroup_base + _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, uint(_GLF_IDENTITY(uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u), (_GLF_IDENTITY(uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) << uvec3(0u, 0u, 0u)), uvec3(uvec3(uvec3(1u, 1u, 1u)))) * (uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, _GLF_IDENTITY(0u, (138404u & 0u) ^ (_GLF_IDENTITY(0u, ~ (~ (0u))))))))) | uvec3(0u, 0u, 0u))))))), ~ (~ (~ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u), min(uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u), uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u))), (_GLF_IDENTITY(uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u), uvec3(1u, 1u, 1u) * (uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u)))) | uvec3(0u, 0u, 0u)))), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (workgroup_base + _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, uint(_GLF_IDENTITY(uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u), (_GLF_IDENTITY(uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) << uvec3(0u, 0u, 0u)), uvec3(uvec3(uvec3(1u, 1u, 1u)))) * (uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, _GLF_IDENTITY(0u, (138404u & 0u) ^ (_GLF_IDENTITY(0u, ~ (~ (0u))))))))) | uvec3(0u, 0u, 0u)))))))))), 1u, 1u, 0u), (false ? _GLF_FUZZED(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid) : uvec4(_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u), min(uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u), uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u))), (_GLF_IDENTITY(uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u), uvec3(1u, 1u, 1u) * (uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u)))) | uvec3(0u, 0u, 0u)))), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (workgroup_base + _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, uint(_GLF_IDENTITY(uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u), (_GLF_IDENTITY(uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) << uvec3(0u, 0u, 0u)), uvec3(uvec3(uvec3(1u, 1u, 1u)))) * (uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, _GLF_IDENTITY(0u, (138404u & 0u) ^ (_GLF_IDENTITY(0u, ~ (~ (0u))))))))) | uvec3(0u, 0u, 0u))))))), ~ (~ (~ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u), min(uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u), uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u))), (_GLF_IDENTITY(uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u), uvec3(1u, 1u, 1u) * (uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u)))) | uvec3(0u, 0u, 0u)))), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (workgroup_base + _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, uint(_GLF_IDENTITY(uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u), (_GLF_IDENTITY(uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, 0u), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) << uvec3(0u, 0u, 0u)), uvec3(uvec3(uvec3(1u, 1u, 1u)))) * (uvec3(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 0u, _GLF_IDENTITY(0u, (138404u & 0u) ^ (_GLF_IDENTITY(0u, ~ (~ (0u))))))))) | uvec3(0u, 0u, 0u)))))))))), 1u, 1u, 0u))))))))))) + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (0u ^ 0u));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), (injectionSwitch.x > injectionSwitch.y) && true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.y = _GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, (0u >> _GLF_IDENTITY(uint(2u), uint(2u))) | (virtual_gid)), _GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(workgroup_base) : virtual_gid))));
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED(95.26), ((injectionSwitch) * mat2(1.0))[1]), vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(0.9)), bvec2(true, false)))).y))) && true)))
    barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, 0 | (3))))) >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | _GLF_IDENTITY(0, ~ (~ (0))))); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       do
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                }
               else
                {
                 barrier();
                 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                  barrier();
                }
              }
            }
           barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.w = GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.y, (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))) ? _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.w = GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.y, ~ (~ (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.w = GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.y, 0u ^ (GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.w = GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.y))))) : _GLF_FUZZED(workgroup_size)));
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, min(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, uint(_GLF_IDENTITY(uvec3(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 1u, 1u), (uvec3(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, 1u, 1u)) / uvec3(1u, 1u, 1u)))), _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid, (GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid) - uvec4(0u, 0u, 0u, 0u)).z)) + (_GLF_IDENTITY((subgroup_local_id + 1), ~ _GLF_IDENTITY((~ ((subgroup_local_id + 1))), uint(uvec3((~ ((subgroup_local_id + 1))), 0u, 0u)))) % GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z), clamp(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid, min(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid, GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid)).x * _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, max(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, min(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z)), GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z)) + ((subgroup_local_id + 1) % GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z), ~ (~ (_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), clamp(~ _GLF_IDENTITY((workgroup_base), ((workgroup_base)) | 0u), _GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) | 0u), ~ (workgroup_base))))) + _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), 0u ^ (_GLF_IDENTITY(uint(8u), (uint(8u)) / 1u))), uint(8u))) + (GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z)) + ((subgroup_local_id + 1) % GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z)))), workgroup_base + GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid, uvec4(0u, 0u, 0u, 0u) ^ (GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid)).z + ((subgroup_local_id + 1) % _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z, (GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z) >> 0u)), workgroup_base + GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z + ((subgroup_local_id + 1) % GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z))), (workgroup_base + GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z + ((subgroup_local_id + 1) % GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.z)) >> 0u);
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = _GLF_IDENTITY(0, ~ (~ (0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            {
             do
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 do
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                   for(int _injected_loop_counter = _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                    barrier();
                   for(int _injected_loop_counter = ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(_GLF_IDENTITY(7, clamp(7, 7, 7))), (_GLF_IDENTITY(int(7), (int(7)) >> 0)) | int(_GLF_ZERO(0.0, injectionSwitch.x))))) >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               else
                {
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))));
            }
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6.0)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
            barrier();
          }
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           for(int _injected_loop_counter = (1 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (0) | 0)); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))))
                {
                 barrier();
                }
               else
                {
                }
              }
             do
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false))))), _GLF_IDENTITY(true && ((_GLF_WRAPPED_IF_FALSE(false))), true && (true && ((_GLF_WRAPPED_IF_FALSE(false))))))))
                {
                 do
                  {
                   do
                    {
                     do
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         do
                          {
                           if(_GLF_WRAPPED_IF_TRUE(true))
                            {
                             if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
                              barrier();
                            }
                           else
                            {
                             if(_GLF_DEAD(false))
                              barrier();
                            }
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                          {
                           if(_GLF_DEAD(false))
                            {
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                             barrier();
                            }
                          }
                        }
                       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))))
                        {
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                          }
                         else
                          {
                          }
                         barrier();
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(false), false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(false), false)), true && (bool(bvec2(_GLF_WRAPPED_LOOP(false), false))))), true && (bool(_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(false), false)), true && (bool(bvec2(_GLF_WRAPPED_LOOP(false), false)))))))))));
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               else
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
                      {
                      }
                     else
                      {
                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                        {
                         barrier();
                        }
                      }
                    }
                  }
                 else
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_DEAD(false))
                      {
                       do
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                       barrier();
                      }
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       barrier();
                      }
                    }
                   else
                    {
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), true, _GLF_IDENTITY(false, ! (! (false)))), false)))))))))))
                    barrier();
                  }
                 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))
                  barrier();
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
                      barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-64.22)), float(injectionSwitch.x), bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))).y, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))).y) / exp(0.0)), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y) * (float(mat3x4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))))) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mix(vec2((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))[0], _GLF_FUZZED(513.143)), vec2(_GLF_FUZZED(-1.6), (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))[1]), bvec2(false, true)))))).y))))), _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-64.22)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), clamp(mix(float(_GLF_FUZZED(-64.22)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-64.22)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), min(mix(float(_GLF_FUZZED(-64.22)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), mix(float(_GLF_FUZZED(-64.22)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), mix(_GLF_IDENTITY(float(_GLF_FUZZED(-64.22)), max(_GLF_IDENTITY(float(_GLF_FUZZED(-64.22)), (float(_GLF_FUZZED(-64.22))) - 0.0), float(_GLF_FUZZED(-64.22)))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) > injectionSwitch.y)))), bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-64.22)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)))), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-387.703)), bool(false))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-387.703)), bool(false)))) + 0.0), 0.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5.7) : float(vec2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-387.703)), bool(false))), 0.0))))) < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).y))))) > injectionSwitch.y)))), true, true))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-64.22)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > _GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).y)))), bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-64.22)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-387.703)), bool(false))), 0.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5.7) : float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0), (true ? mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat4x3(4.6, 53.08, 46.51, -7.8, 82.16, -81.88, -29.00, -3.7, 7.4, -1637.8119, -5.8, 3.2)))))), 0.0, 0.0, 0.0), min(vec4(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0), (true ? mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat4x3(4.6, 53.08, 46.51, -7.8, 82.16, -81.88, -29.00, -3.7, 7.4, -1637.8119, -5.8, 3.2)))))), 0.0, 0.0, 0.0), vec4(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0), (true ? mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat4x3(4.6, 53.08, 46.51, -7.8, 82.16, -81.88, -29.00, -3.7, 7.4, -1637.8119, -5.8, 3.2)))))), 0.0, 0.0, 0.0))))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-387.703)), bool(false))), 0.0))))) < injectionSwitch.y))))) > injectionSwitch.y)))), true, true))), (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-64.22)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > _GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).y)))), bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-64.22)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-387.703)), bool(false))), 0.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5.7) : float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0), (true ? mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat4x3(4.6, 53.08, 46.51, -7.8, 82.16, -81.88, -29.00, -3.7, 7.4, -1637.8119, -5.8, 3.2)))))), 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0), min(vec4(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(_GLF_IDENTITY(0.0, (0.0) - 0.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0), (true ? mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat4x3(4.6, 53.08, 46.51, -7.8, 82.16, -81.88, -29.00, -3.7, 7.4, -1637.8119, -5.8, 3.2)))))), 0.0, 0.0, 0.0), vec4(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0), (true ? mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat4x3(4.6, 53.08, 46.51, -7.8, 82.16, -81.88, -29.00, -3.7, 7.4, -1637.8119, -5.8, 3.2)))))), 0.0, 0.0, 0.0))))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-387.703)), bool(false))), 0.0)))), max(_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-387.703)), bool(false))), max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-387.703)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-387.703)), bool(false))))), 0.0)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 0.0, 0.0, tan(0.0), 1.0, 1.0, 0.0))))).y)) ? _GLF_FUZZED(-5.7) : float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0), (true ? mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat4x3(4.6, 53.08, 46.51, -7.8, _GLF_IDENTITY(82.16, float(mat2x3(_GLF_IDENTITY(82.16, min(82.16, 82.16)), 0.0, 1.0, 1.0, 1.0, 0.0))), -81.88, -29.00, -3.7, 7.4, -1637.8119, -5.8, 3.2)))))), 0.0, 0.0, 0.0), min(vec4(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0), (true ? mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat4x3(4.6, 53.08, 46.51, -7.8, 82.16, -81.88, -29.00, -3.7, 7.4, -1637.8119, -5.8, 3.2)))))), 0.0, 0.0, 0.0), vec4(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0), (true ? mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat4x3(4.6, _GLF_IDENTITY(53.08, _GLF_IDENTITY(float(vec4(53.08, 0.0, 1.0, sin(0.0))), float(mat4x2(float(vec4(53.08, 0.0, 1.0, sin(0.0))), 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 1.0)))), 46.51, -7.8, 82.16, -81.88, -29.00, -3.7, 7.4, -1637.8119, -5.8, 3.2)))))), 0.0, 0.0, 0.0))))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-387.703)), bool(false))), 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-387.703)), bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true)))))))), 0.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5.7) : float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0), (true ? mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat4x3(4.6, 53.08, 46.51, -7.8, 82.16, -81.88, -29.00, -3.7, 7.4, -1637.8119, -5.8, 3.2)))))), 0.0, 0.0, 0.0), min(vec4(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 1.0), (true ? mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat4x3(4.6, 53.08, 46.51, -7.8, 82.16, -81.88, -29.00, -3.7, 7.4, -1637.8119, -5.8, 3.2)))))), 0.0, 0.0, 0.0), vec4(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0), (true ? mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat4x3(4.6, 53.08, 46.51, -7.8, 82.16, -81.88, -29.00, -3.7, 7.4, -1637.8119, -5.8, 3.2)))))), 0.0, 0.0, 0.0))))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-387.703)), bool(false))), 0.0)))), (_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-387.703)), bool(false))), 0.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5.7) : float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0), (true ? mat4x3(injectionSwitch.x, 0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, _GLF_IDENTITY(abs(0.0), (false ? _GLF_FUZZED(1.0) : abs(0.0))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat4x3(4.6, 53.08, 46.51, -7.8, 82.16, -81.88, -29.00, -3.7, 7.4, -1637.8119, -5.8, _GLF_IDENTITY(3.2, (false ? _GLF_FUZZED(-229.866) : 3.2)))))))), 0.0, 0.0, 0.0), min(vec4(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0), (true ? mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat4x3(4.6, 53.08, 46.51, -7.8, 82.16, -81.88, -29.00, -3.7, 7.4, -1637.8119, -5.8, 3.2)))))), 0.0, 0.0, 0.0), vec4(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0), (true ? mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat4x3(4.6, 53.08, 46.51, -7.8, 82.16, -81.88, -29.00, -3.7, 7.4, -1637.8119, -5.8, 3.2)))))), 0.0, 0.0, 0.0))))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-387.703)), bool(false))), 0.0))))) - 0.0)))) < injectionSwitch.y))))) > injectionSwitch.y)))), true, true)))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-64.22)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > _GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).y)))), bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-64.22)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-387.703)), bool(false))), 0.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5.7) : float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0), (true ? mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat4x3(4.6, 53.08, 46.51, -7.8, 82.16, -81.88, -29.00, -3.7, 7.4, -1637.8119, -5.8, 3.2)))))), 0.0, 0.0, 0.0), min(vec4(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0), (true ? mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat4x3(4.6, 53.08, 46.51, -7.8, 82.16, -81.88, -29.00, -3.7, 7.4, -1637.8119, -5.8, 3.2)))))), 0.0, 0.0, 0.0), vec4(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0), (true ? mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat4x3(4.6, 53.08, 46.51, -7.8, 82.16, -81.88, -29.00, -3.7, 7.4, -1637.8119, -5.8, 3.2)))))), 0.0, 0.0, 0.0))))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-387.703)), bool(false))), 0.0)))), min(_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-387.703)), bool(false))), 0.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5.7) : float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0), (true ? mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat4x3(4.6, 53.08, 46.51, -7.8, 82.16, -81.88, -29.00, -3.7, 7.4, -1637.8119, -5.8, 3.2)))))), 0.0, 0.0, 0.0), min(vec4(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0), (true ? mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat4x3(4.6, 53.08, 46.51, -7.8, 82.16, -81.88, -29.00, -3.7, 7.4, -1637.8119, -5.8, 3.2)))))), 0.0, 0.0, 0.0), vec4(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0), (true ? mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat4x3(4.6, 53.08, 46.51, -7.8, 82.16, -81.88, -29.00, -3.7, 7.4, -1637.8119, -5.8, 3.2)))))), 0.0, 0.0, 0.0))))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-387.703)), bool(false))), 0.0)))), _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-387.703)), bool(false))), 0.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5.7) : float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0), (true ? mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat4x3(4.6, 53.08, 46.51, -7.8, 82.16, -81.88, -29.00, -3.7, 7.4, -1637.8119, -5.8, 3.2)))))), 0.0, 0.0, 0.0), min(vec4(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0), (true ? mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat4x3(4.6, 53.08, 46.51, -7.8, 82.16, -81.88, -29.00, -3.7, 7.4, -1637.8119, -5.8, 3.2)))))), 0.0, 0.0, 0.0), vec4(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0), (true ? mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat4x3(4.6, 53.08, 46.51, -7.8, 82.16, -81.88, -29.00, -3.7, 7.4, -1637.8119, -5.8, 3.2)))))), 0.0, 0.0, 0.0))))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-387.703)), bool(false))), 0.0))))))) < injectionSwitch.y))))) > injectionSwitch.y)))), true, true))), (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-64.22)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > _GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).y)))), bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-64.22)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-387.703)), bool(false))), 0.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5.7) : float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0), (true ? mat4x3(injectionSwitch.x, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) / 1.0), 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat4x3(4.6, 53.08, 46.51, -7.8, 82.16, -81.88, -29.00, -3.7, 7.4, -1637.8119, -5.8, 3.2)))))), 0.0, 0.0, 0.0), min(vec4(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0), (true ? mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat4x3(4.6, 53.08, 46.51, -7.8, 82.16, -81.88, -29.00, -3.7, 7.4, -1637.8119, -5.8, 3.2)))))), 0.0, 0.0, 0.0), vec4(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 1.0, 1.0, 1.0, 1.0))), 0.0, 0.0)), 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0), (true ? mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat4x3(4.6, 53.08, 46.51, -7.8, 82.16, -81.88, -29.00, -3.7, 7.4, -1637.8119, -5.8, 3.2)))))), 0.0, 0.0, 0.0)))), max(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0), (true ? mat4x3(injectionSwitch.x, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) / 1.0), 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat4x3(4.6, 53.08, 46.51, -7.8, 82.16, -81.88, -29.00, -3.7, 7.4, -1637.8119, -5.8, 3.2)))))), 0.0, 0.0, 0.0), min(vec4(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0), (true ? mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat4x3(4.6, 53.08, 46.51, -7.8, 82.16, -81.88, -29.00, -3.7, 7.4, -1637.8119, -5.8, 3.2)))))), 0.0, 0.0, 0.0), vec4(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 1.0, 1.0, 1.0, 1.0))), 0.0, 0.0)), 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0), (true ? mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat4x3(4.6, 53.08, 46.51, -7.8, 82.16, -81.88, -29.00, -3.7, 7.4, -1637.8119, -5.8, 3.2)))))), 0.0, 0.0, 0.0)))), float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0), (true ? mat4x3(injectionSwitch.x, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) / 1.0), 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat4x3(4.6, 53.08, 46.51, -7.8, 82.16, -81.88, -29.00, -3.7, 7.4, -1637.8119, -5.8, 3.2)))))), 0.0, 0.0, 0.0), min(vec4(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0), (true ? mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat4x3(4.6, 53.08, 46.51, -7.8, 82.16, -81.88, -29.00, -3.7, 7.4, -1637.8119, -5.8, 3.2)))))), 0.0, 0.0, 0.0), vec4(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 1.0, 1.0, 1.0, 1.0))), 0.0, 0.0)), 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0), (true ? mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat4x3(4.6, 53.08, 46.51, -7.8, 82.16, -81.88, -29.00, -3.7, 7.4, -1637.8119, -5.8, 3.2)))))), 0.0, 0.0, 0.0))))))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-387.703)), bool(false))), 0.0)))), max(_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-387.703)), bool(false))), 0.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5.7) : float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0), (true ? mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat4x3(4.6, 53.08, 46.51, -7.8, 82.16, -81.88, -29.00, -3.7, 7.4, -1637.8119, -5.8, 3.2)))))), 0.0, 0.0, 0.0), min(vec4(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0), (true ? mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat4x3(4.6, _GLF_IDENTITY(53.08, 1.0 * (53.08)), 46.51, -7.8, 82.16, -81.88, -29.00, -3.7, 7.4, -1637.8119, -5.8, 3.2)))))), 0.0, 0.0, 0.0), vec4(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, _GLF_IDENTITY(0.0, float(mat2x4(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-78.37)), float(0.0), bool(true))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0), (true ? mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat4x3(4.6, _GLF_IDENTITY(53.08, clamp(53.08, 53.08, _GLF_IDENTITY(53.08, (53.08) - 0.0))), 46.51, -7.8, 82.16, -81.88, -29.00, -3.7, 7.4, -1637.8119, -5.8, 3.2)))))), 0.0, 0.0, 0.0))))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-387.703)), bool(false))), 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-387.703)), bool(false))), 0.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5.7) : float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0), (true ? mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat4x3(4.6, 53.08, 46.51, -7.8, 82.16, -81.88, -29.00, -3.7, 7.4, -1637.8119, -5.8, 3.2)))))), 0.0, 0.0, 0.0), min(vec4(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0), (true ? mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat4x3(4.6, 53.08, 46.51, -7.8, 82.16, -81.88, -29.00, -3.7, 7.4, -1637.8119, -5.8, 3.2)))))), 0.0, 0.0, 0.0), vec4(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(5.3))), 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0), (true ? mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat4x3(4.6, 53.08, 46.51, -7.8, 82.16, -81.88, -29.00, -3.7, 7.4, -1637.8119, -5.8, 3.2)))))), 0.0, 0.0, 0.0)))), (true ? _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0), (true ? mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat4x3(4.6, 53.08, 46.51, -7.8, 82.16, -81.88, -29.00, -3.7, 7.4, -1637.8119, -5.8, 3.2)))))), 0.0, 0.0, 0.0), min(vec4(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0), (true ? mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat4x3(4.6, 53.08, 46.51, -7.8, 82.16, -81.88, -29.00, -3.7, 7.4, -1637.8119, -5.8, 3.2)))))), 0.0, 0.0, 0.0), vec4(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(5.3))), 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0), (true ? mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat4x3(4.6, 53.08, 46.51, -7.8, 82.16, -81.88, -29.00, -3.7, 7.4, -1637.8119, -5.8, 3.2)))))), 0.0, 0.0, 0.0)))), clamp(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0), (true ? mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat4x3(4.6, 53.08, 46.51, -7.8, 82.16, -81.88, -29.00, -3.7, 7.4, -1637.8119, -5.8, 3.2)))))), 0.0, 0.0, 0.0), min(vec4(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0), (true ? mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat4x3(4.6, 53.08, 46.51, -7.8, 82.16, -81.88, -29.00, -3.7, 7.4, -1637.8119, -5.8, 3.2)))))), 0.0, 0.0, 0.0), vec4(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(5.3))), 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0), (true ? mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat4x3(4.6, 53.08, 46.51, -7.8, 82.16, -81.88, -29.00, -3.7, 7.4, -1637.8119, -5.8, 3.2)))))), 0.0, 0.0, 0.0)))), float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0), (true ? mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat4x3(4.6, 53.08, 46.51, -7.8, 82.16, -81.88, -29.00, -3.7, 7.4, -1637.8119, -5.8, 3.2)))))), 0.0, 0.0, 0.0), min(vec4(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0), (true ? mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat4x3(4.6, 53.08, 46.51, -7.8, 82.16, -81.88, -29.00, -3.7, 7.4, -1637.8119, -5.8, 3.2)))))), 0.0, 0.0, 0.0), vec4(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(5.3))), 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0), (true ? mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat4x3(4.6, 53.08, 46.51, -7.8, 82.16, -81.88, -29.00, -3.7, 7.4, -1637.8119, -5.8, 3.2)))))), 0.0, 0.0, 0.0)))), float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0), (true ? mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat4x3(4.6, 53.08, 46.51, -7.8, 82.16, -81.88, -29.00, -3.7, 7.4, -1637.8119, -5.8, 3.2)))))), 0.0, 0.0, 0.0), min(vec4(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0), (true ? mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat4x3(4.6, 53.08, 46.51, -7.8, 82.16, -81.88, -29.00, -3.7, 7.4, -1637.8119, -5.8, 3.2)))))), 0.0, 0.0, 0.0), vec4(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(5.3))), 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0), (true ? mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat4x3(4.6, 53.08, 46.51, -7.8, 82.16, -81.88, -29.00, -3.7, 7.4, -1637.8119, -5.8, 3.2)))))), 0.0, 0.0, 0.0)))))) : _GLF_FUZZED(-3019.5404)))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-387.703)), bool(false))), 0.0)))), (_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-387.703)), bool(false))), 0.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5.7) : float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(912.810)), float(0.0), bool(true))), 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0), (true ? mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat4x3(4.6, 53.08, 46.51, -7.8, 82.16, -81.88, -29.00, -3.7, 7.4, -1637.8119, -5.8, 3.2)))))), 0.0, 0.0, 0.0), min(vec4(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0), (true ? mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat4x3(4.6, 53.08, 46.51, -7.8, 82.16, -81.88, -29.00, -3.7, 7.4, -1637.8119, -5.8, 3.2)))))), 0.0, 0.0, 0.0), vec4(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0), (true ? mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat4x3(4.6, 53.08, 46.51, -7.8, 82.16, -81.88, -29.00, -3.7, 7.4, -1637.8119, -5.8, 3.2)))))), 0.0, 0.0, 0.0))))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-387.703)), bool(false))), 0.0))))) - _GLF_IDENTITY(0.0, (0.0) - 0.0))))) < injectionSwitch.y))))) > injectionSwitch.y)))), true, true)))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-64.22)), float(injectionSwitch.x), bool(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), (! ((injectionSwitch.x < injectionSwitch.y))) && true))))))) > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-64.22)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y))))))), bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-64.22)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((-6.3 / 4.6))), bool(false))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-387.703)), bool(false))), 0.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5.7) : float(vec2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-387.703)), bool(false))), 0.0))))) < injectionSwitch.y))))) > injectionSwitch.y)))), true, true))), bool(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-64.22)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-64.22)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-387.703)), bool(false))), 0.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5.7) : float(vec2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-387.703)), bool(false))), 0.0))))) < injectionSwitch.y))))) > injectionSwitch.y)))), true, true), bvec3(bvec4(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-64.22)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-387.703)), bool(false))), 0.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5.7) : float(vec2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-387.703)), bool(false))), 0.0))))) < injectionSwitch.y))))) > injectionSwitch.y)))), true, true), false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-64.22)), float(injectionSwitch.x), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(_GLF_IDENTITY(bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))))) > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-64.22)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y))))))), bool(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-64.22)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((-6.3 / 4.6))), bool(false))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-387.703)), bool(false))), 0.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5.7) : float(vec2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-387.703)), bool(false))), 0.0))))) < injectionSwitch.y))))) > injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-64.22)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((-6.3 / 4.6))), bool(false))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-387.703)), bool(false))), 0.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5.7) : float(vec2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-387.703)), bool(false))), 0.0))))) < injectionSwitch.y))))) > injectionSwitch.y)))), bool(bvec4(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-64.22)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((-6.3 / 4.6))), bool(false))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-387.703)), bool(false))), 0.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5.7) : float(vec2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-387.703)), bool(false))), 0.0))))) < injectionSwitch.y))))) > injectionSwitch.y)))), true, false, false))), true, true))), true, true))), bool(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-64.22)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-64.22)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-387.703)), bool(false))), 0.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5.7) : float(vec2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-387.703)), bool(false))), 0.0))))) < injectionSwitch.y))))) > injectionSwitch.y)))), true, true), bvec3(bvec4(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-64.22)), float(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 1.0, determinant(mat4(0.0, 0.0, tan(0.0), 0.0, 0.0, log(1.0), sin(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 0.0)), 0.0, 1.0, 0.0, abs(1.0), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(482.283)), float(1.0), bool(true))))))), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(-387.703, (true ? -387.703 : _GLF_FUZZED(uintBitsToFloat(workgroup_base)))))), bool(false))), 0.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5.7) : float(vec2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-387.703)), bool(false))), 0.0))))) < injectionSwitch.y))))) > injectionSwitch.y)))), true, true), false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-64.22)), float(injectionSwitch.x), bool(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))))) > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-64.22, float(_GLF_IDENTITY(mat2x4(-64.22, 1.0, abs(1.0), 0.0, cos(0.0), abs(1.0), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), (true ? dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(-6.3))))), (_GLF_IDENTITY(mat2x4(-64.22, 1.0, abs(1.0), 0.0, cos(0.0), abs(1.0), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), (true ? dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(-6.3))))), mat4(1.0) * (mat2x4(-64.22, 1.0, abs(1.0), 0.0, cos(0.0), abs(1.0), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), (true ? dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(-6.3)))))))) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y))))))), bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-64.22)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_FUZZED((-6.3 / 4.6))), min(float(_GLF_FUZZED((-6.3 / 4.6))), float(_GLF_FUZZED((-6.3 / 4.6))))), bool(false))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-387.703)), bool(false))), 0.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5.7) : float(vec2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-387.703)), bool(false))), 0.0))))) < injectionSwitch.y))))) > injectionSwitch.y)))), true, true))), bool(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-64.22)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))))))))) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))), bool(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-64.22, _GLF_IDENTITY(clamp(-64.22, -64.22, -64.22), clamp(_GLF_IDENTITY(clamp(-64.22, -64.22, -64.22), (clamp(-64.22, -64.22, -64.22)) - 0.0), clamp(-64.22, -64.22, -64.22), clamp(-64.22, -64.22, -64.22)))))), float(injectionSwitch.x), _GLF_IDENTITY(bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-387.703)), bool(false))), 0.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5.7) : float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-387.703)), bool(false))), clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-387.703)), _GLF_IDENTITY(bool(false), ! (! (bool(false)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-387.703)), bool(false))), min(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-387.703)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-387.703)), bool(false))))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-387.703)), _GLF_IDENTITY(bool(false), ! (! (bool(false)))))))), 0.0))))) < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-387.703)), bool(false))), 0.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5.7) : float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-387.703)), bool(false))), clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-387.703)), _GLF_IDENTITY(bool(false), ! (! (bool(false)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-387.703)), bool(false))), min(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-387.703)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-387.703)), bool(false))))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-387.703)), _GLF_IDENTITY(bool(false), ! (! (bool(false)))))))), 0.0))))) < injectionSwitch.y))), true && (bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-387.703)), bool(false))), 0.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5.7) : float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-387.703)), bool(false))), clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-387.703)), _GLF_IDENTITY(bool(false), ! (! (bool(false)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-387.703)), bool(false))), min(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-387.703)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-387.703)), bool(false))))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-387.703)), _GLF_IDENTITY(bool(false), ! (! (bool(false)))))))), 0.0))))) < injectionSwitch.y)))))), false || (! (_GLF_IDENTITY(bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-387.703)), bool(false))), 0.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5.7) : float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-387.703)), bool(false))), clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-387.703)), _GLF_IDENTITY(bool(false), ! (! (bool(false)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-387.703)), bool(false))), min(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-387.703)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-387.703)), bool(false))))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-387.703)), _GLF_IDENTITY(bool(false), ! (! (bool(false)))))))), 0.0))))) < injectionSwitch.y))), true && (bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-387.703)), bool(false))), 0.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5.7) : float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-387.703)), bool(false))), clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-387.703)), _GLF_IDENTITY(bool(false), ! (! (bool(false)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-387.703)), bool(false))), min(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-387.703)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-387.703)), bool(false))))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-387.703)), _GLF_IDENTITY(bool(false), ! (! (bool(false)))))))), 0.0))))) < injectionSwitch.y)))))))))))) > injectionSwitch.y)))), true, true), bvec3(bvec4(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-64.22)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-387.703)), bool(false)), round(length(normalize(vec2(1.0, 1.0)))) * (mix(float(injectionSwitch.x), float(_GLF_FUZZED(-387.703)), _GLF_IDENTITY(bool(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(false), false || (bool(false))))))))), 0.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5.7) : float(vec2(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), (_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) * 1.0)) + 0.0), float(_GLF_FUZZED(-387.703)), bool(false))), 0.0))))) < injectionSwitch.y))))) > injectionSwitch.y)))), true, true), false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-64.22)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(asinh(vec2(-1697.7304, 451.171))) : injectionSwitch)).y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-0.2)), float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x, mix(float(_GLF_FUZZED(-64.22)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))) > injectionSwitch.y)))))), bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-64.22)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-387.703)), bool(false))), 0.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5.7) : float(vec2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x), float(_GLF_FUZZED(-387.703)), bool(false))), 0.0))))) < injectionSwitch.y)))), (mix(_GLF_IDENTITY(float(_GLF_FUZZED(-64.22)), (false ? _GLF_FUZZED(-4.0) : float(_GLF_IDENTITY(_GLF_FUZZED(-64.22), min(_GLF_FUZZED(-64.22), _GLF_IDENTITY(_GLF_FUZZED(-64.22), 1.0 * (_GLF_FUZZED(-64.22)))))))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-387.703)), bool(false))), 0.0)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5.7) : float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x), float(_GLF_FUZZED(-387.703)), bool(false))), 0.0), max(vec2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x), float(_GLF_FUZZED(-387.703)), bool(false))), 0.0), vec2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x), float(_GLF_FUZZED(-387.703)), bool(false))), 0.0))))), mix(float(_GLF_FUZZED(3.3)), float((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5.7) : float(vec2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x), float(_GLF_FUZZED(-387.703)), bool(false))), 0.0)))), bool(true))))) < injectionSwitch.y))))) - 0.0)) > injectionSwitch.y)))), true, true))), bool(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-64.22)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y)))), bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-64.22)), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))))).x), (false ? _GLF_FUZZED(6537.3476) : float(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x))), bool(_GLF_TRUE(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec3(true, false, false))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, _GLF_IDENTITY(1.0, max(1.0, 1.0))), mix(vec3((vec3(injectionSwitch, 1.0))[0], _GLF_FUZZED(0.4), (vec3(injectionSwitch, 1.0))[2]), vec3(_GLF_FUZZED(-510.191), (vec3(injectionSwitch, 1.0))[1], _GLF_FUZZED(5.1)), _GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false))), true))))))).x, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-387.703)), bool(false))), 0.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5.7) : float(vec2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-387.703, float(vec2(-387.703, 1.0))), clamp(_GLF_IDENTITY(-387.703, mix(float(-387.703), float(_GLF_FUZZED(-4.1)), bool(false))), -387.703, _GLF_IDENTITY(-387.703, clamp(-387.703, -387.703, -387.703)))))), bool(false))), 0.0))))) < injectionSwitch.y))))) > injectionSwitch.y)))), true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))
                      barrier();
                    }
                   else
                    {
                    }
                  }
                 else
                  {
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(4.0)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y))));
             if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
              barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(7.0)), float(injectionSwitch.y), bool(true)))))))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         else
          {
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-4450.1632))) > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(tanh(vec2(-832.798, -9.9))))).y)))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true)))))));
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   do
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, (4) | (4)))), 64, 4);
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))) && true));
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(742.624) : injectionSwitch.y)))), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y, false, true)))))), bool(bvec3((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, false || (false)), false, true)))), true)))))))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(1.0, min(1.0, 1.0)) * (injectionSwitch.x)) > injectionSwitch.y))), bool(bvec3((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true))))), false, false)))))))) && true), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y)), ! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, float(vec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, 0.0, 1.0, 0.0))) > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), (_GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, 1.0, abs(0.0)))) > injectionSwitch.y))), false)), _GLF_IDENTITY(bool(bvec4(bool(bvec2((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, 1.0, abs(0.0)))) > injectionSwitch.y))), false)), true, false, true)), ! (! (bool(bvec4(bool(bvec2((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-839.287) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0, abs(0.0)))) > injectionSwitch.y))), false)), true, false, true))))))) && true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), (_GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, 1.0, abs(0.0)))) > injectionSwitch.y))), false)), _GLF_IDENTITY(bool(bvec4(bool(bvec2((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, 1.0, abs(0.0)))) > injectionSwitch.y))), false)), true, false, true)), ! (! (bool(bvec4(bool(bvec2((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, 1.0, abs(0.0)))) > injectionSwitch.y))), false)), true, false, true))))))) && true))), true && ((_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), (_GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, 1.0, abs(0.0)))) > injectionSwitch.y))), false)), _GLF_IDENTITY(bool(bvec4(bool(bvec2((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, 1.0, abs(0.0)))) > injectionSwitch.y))), false)), true, false, true)), ! (! (bool(bvec4(bool(bvec2((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, 1.0, abs(0.0)))) > injectionSwitch.y))), false)), true, false, true))))))) && true))))), ((_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, 1.0))) : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, 1.0))) : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).x > injectionSwitch.y))))), false)), (_GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, 1.0, abs(0.0)))) > injectionSwitch.y))), false)), _GLF_IDENTITY(bool(bvec4(bool(bvec2((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, 1.0, abs(0.0)))) > injectionSwitch.y))), false)), true, false, true)), ! (! (bool(bvec4(bool(bvec2((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, 1.0, abs(0.0)))) > injectionSwitch.y))), false)), true, false, true))))))) && true)))) || false), false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0))))), injectionSwitch.y))))), false, false)), bool(bvec2(_GLF_IDENTITY(bool(bvec3((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), false, false)), ! (! (bool(bvec3((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), false, false))))), false))), bool(bvec4(_GLF_IDENTITY(bool(bvec3((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), false, false)), bool(bvec2(_GLF_IDENTITY(bool(bvec3((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))), false, _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false))))), ! (! (bool(bvec3((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), false, false))))), false))), true, false, false)))))), false, false))), false, false, true)), _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_IDENTITY(0.0, _GLF_ONE(1.0, injectionSwitch.y) * (0.0)), 0.0)).x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))), false, false)), bvec3(bvec4(bvec3(bvec3((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))), false, false)), true))))))))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) + vec2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(743.162)), bool(false))), 0.0)).x > injectionSwitch.y)), ! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))), true && (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))))))), false, false))), false, false, _GLF_IDENTITY(true, bool(bvec2(true, true)))))), ! (! ((bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_IDENTITY(0.0, _GLF_ONE(1.0, injectionSwitch.y) * (0.0)), 0.0)).x > injectionSwitch.y)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))), bool(bvec3((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))), false, false))), false || (! _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))), bool(bvec3((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), (injectionSwitch.x > injectionSwitch.y))))), false, false))))))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) + vec2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(743.162)), bool(false))), 0.0)).x > injectionSwitch.y)), ! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))), true && (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), false, false))))))), false, false))), false, false, _GLF_IDENTITY(true, bool(bvec2(true, true))))))))) || false))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) * 1)))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y) && true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y) * (injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           else
            {
            }
          }
        }
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, false)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_DEAD(false), false, true, false))), bool(bool(! (bool(bvec4(_GLF_DEAD(false), false, true, false))))))))))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
      }
     else
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
  }
 uint read = atomicLoad(buf[GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.w], _GLF_IDENTITY(4, max(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) * ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) / 1))), (4) | 0), _GLF_IDENTITY(4, (4) - 0))), 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), bool(bool(! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))), (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))) && true)))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) - 0), 0 | (1))))); _injected_loop_counter ++)
      {
       barrier();
      }
    }
  }
 else
  {
  }
 GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.y = read;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec4(_GLF_WRAPPED_IF_TRUE(true), false, false, false))), ! (! (_GLF_WRAPPED_IF_TRUE(true)))))
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   atomicStore(checker[_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid, (GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid) - (uvec4(0u, 0u, 0u, 0u) | uvec4(0u, 0u, 0u, 0u))).w], _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(next_virtual_gid), clamp(_GLF_FUZZED(next_virtual_gid), _GLF_FUZZED(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((next_virtual_gid), ((next_virtual_gid)) | (0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), 0u | (uint(6u)))))) | 0u)), _GLF_FUZZED(next_virtual_gid))) : _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid, uvec4(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid[0], GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid[1], GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid[2], GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid[3])).y, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.y, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.y, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.y, (GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.y) | (GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.y))) >> 0u)) << 0u), (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.y, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.y, (GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.y) * 1u), 0u | (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.y, ~ (~ (GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.y)))))) << 0u)) << _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), 0u, (0u | 1u)), ~ _GLF_IDENTITY((~ (uvec3(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.y, (GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.y) << 0u), 0u, (0u | 1u)))), clamp((~ (uvec3(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.y, (GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.y) << 0u), 0u, (0u | 1u)))), (~ (uvec3(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.y, (GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.y) << 0u), 0u, (0u | 1u)))), (~ (uvec3(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.y, (GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.y) << 0u), 0u, (0u | 1u)))))))), 0u | _GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.y, (GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.y) << 0u), 0u, (0u | 1u)), (uvec3(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.y, (GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.y) << 0u), 0u, (0u | 1u))) * uvec3(1u, 1u, 1u)), ~ (~ (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.y, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid, (GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid) * uvec4(1u, 1u, 1u, 1u)).y) << 0u), min(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.y, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid, (GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid) * uvec4(1u, 1u, 1u, 1u)).y) << 0u), _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.y, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid, (GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid) * uvec4(1u, 1u, 1u, 1u)).y) << 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.y, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid, (GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid) * uvec4(1u, 1u, 1u, 1u)).y) << 0u))), 0u, (0u | 1u))))))), (false ? _GLF_FUZZED(atomicAdd(num_workgroup, 84572u)) : (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.y, (GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.y) << 0u), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.y, (GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.y) << 0u))), 0u, (0u | 1u)), (uvec3(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.y, (GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.y) << 0u), 0u, (0u | 1u))) * uvec3(1u, 1u, 1u)), ~ (~ (uvec3(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid.y, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid, (GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_sizevirtual_gid) * uvec4(_GLF_IDENTITY(1u, (0u << _GLF_IDENTITY(uint(8u), uint(8u))) ^ (1u)), 1u, 1u, 1u)).y) << 0u), 0u, (0u | 1u))))))))))))), 4, 64, 4);
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y)))))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ 1)), (_GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ 1))) || false); _injected_loop_counter --)
      {
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 do
  {
   do
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_FUZZED(injectionSwitch))), clamp(_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), clamp(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (_GLF_FUZZED(injectionSwitch)) - log(vec2(1.0, 1.0))), _GLF_FUZZED(injectionSwitch))) : _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch)))), vec2(mat4x3(_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), clamp(_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), clamp(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (_GLF_FUZZED(injectionSwitch)) - log(vec2(1.0, 1.0))), _GLF_FUZZED(injectionSwitch))) : _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch)))), min(_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), clamp(_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), clamp(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (_GLF_FUZZED(injectionSwitch)) - log(vec2(1.0, 1.0))), _GLF_FUZZED(injectionSwitch))) : _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch)))), max((false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), clamp(_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), clamp(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (_GLF_FUZZED(injectionSwitch)) - _GLF_IDENTITY(log(vec2(1.0, 1.0)), max(_GLF_IDENTITY(log(vec2(1.0, 1.0)), (_GLF_IDENTITY(log(vec2(1.0, 1.0)), max(log(vec2(1.0, 1.0)), log(vec2(1.0, 1.0))))) / vec2(1.0, 1.0)), log(vec2(1.0, 1.0))))), _GLF_FUZZED(injectionSwitch))) : _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch)))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), clamp(_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), clamp(_GLF_FUZZED(injectionSwitch), _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), clamp(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))), _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (_GLF_FUZZED(injectionSwitch)) - log(_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(mat2(vec2(1.0, 1.0), 1.0, 1.0)), clamp(vec2(mat2(vec2(1.0, 1.0), 1.0, 1.0)), vec2(mat2(vec2(1.0, 1.0), 1.0, 1.0)), vec2(mat2(vec2(1.0, 1.0), 1.0, 1.0))))))), _GLF_FUZZED(injectionSwitch))) : _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch)))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), clamp(_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), clamp(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) * vec2(1.0, 1.0))), (_GLF_FUZZED(injectionSwitch)) - _GLF_IDENTITY(log(vec2(1.0, 1.0)), mix(vec2((log(vec2(1.0, 1.0)))[0], (log(vec2(1.0, 1.0)))[1]), vec2(_GLF_FUZZED(float(false)), _GLF_FUZZED(4748.8895)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), _GLF_FUZZED(injectionSwitch))) : _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch)))))), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0), _GLF_IDENTITY((mat4(0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0)) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), mat4(1.0) * ((mat4(0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0)) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), clamp(float(_GLF_IDENTITY(mat4(0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0), (mat4(0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0)) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(_GLF_IDENTITY(mat4(0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0), (mat4(0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0)) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(mat4(0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0), (mat4(0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0)) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat4(0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0), (mat4(0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0)) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (transpose(_GLF_IDENTITY(mat4(0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0), (mat4(0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0)) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) * mat4(1.0))))) - mat4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), float(_GLF_IDENTITY(mat4(0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0), (mat4(0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-413.849)), float(0.0), bool(true))), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0)) + mat4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, cos(0.0), 0.0, 0.0, 0.0)))).y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (bool(_GLF_IDENTITY(false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))
          barrier();
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(8), int(8)))); _injected_loop_counter --)
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | 0)); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 barrier();
                }
              }
             if(_GLF_DEAD(false))
              barrier();
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
          }
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
        }
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               barrier();
              }
             else
              {
              }
            }
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            barrier();
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, 0 ^ (0))); _injected_loop_counter --)
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                }
               do
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true))), false)), true && (bool(bvec2(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true))), false))))))))))))))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 for(int _injected_loop_counter = ((_GLF_IDENTITY(16289, 0 + (_GLF_IDENTITY(16289, ~ (_GLF_IDENTITY(~ (16289), (~ (16289)) / 1))))) & 0) ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                  {
                   do
                    {
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                      }
                     else
                      {
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 else
                  {
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(_GLF_IDENTITY(int(1), 1 * (int(1))), max(int(1), int(1))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)), ! (! (_GLF_IDENTITY(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)), bool(bool(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))))), true, true)), (bool(bvec3(_GLF_IDENTITY(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(bool(bool(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)))), ! (! (_GLF_IDENTITY(bool(bool(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(bool(bool(bool(bool(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)))))), (bool(bool(bool(bool(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))))))) || false)))))), true, true))) && true)))))); _injected_loop_counter --)
                  {
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                    {
                     barrier();
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                   do
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(false))))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       barrier();
                      }
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y))))
                        {
                        }
                       else
                        {
                         barrier();
                        }
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       barrier();
                      }
                    }
                  }
                }
              }
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false)))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false)))), (! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false))))) && true), true, true)))), (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  {
                   do
                    {
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 barrier();
                }
               for(int _injected_loop_counter = _GLF_IDENTITY(1, int(ivec4(_GLF_IDENTITY(1, min(1, 1)), (0 << _GLF_IDENTITY(int(3), int(3))), 0, (0 << _GLF_IDENTITY(int(3), int(3)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, min(0, 0))); _injected_loop_counter --)
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   barrier();
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).y))))
                    barrier();
                  }
                }
              }
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < (1 | 1), (_injected_loop_counter < (1 | 1)) && true)); _injected_loop_counter ++)
              {
               if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))), bool(bvec3(bool(_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))), false, true)))))) && true))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + log(1.0))))))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (bool(false))))))))))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                    }
                   else
                    {
                     barrier();
                    }
                  }
                }
              }
             else
              {
              }
             barrier();
            }
           for(int _injected_loop_counter = (((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(4))), (1 & 1) * ((_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ _GLF_IDENTITY((_GLF_IDENTITY(1, (1) - 0)), (_GLF_IDENTITY((_GLF_IDENTITY(1, (1) - 0)), int(ivec4((_GLF_IDENTITY(1, (1) - 0)), 1, ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), 0)))) ^ 0)), clamp(~ (~ _GLF_IDENTITY((_GLF_IDENTITY(1, (1) - 0)), (_GLF_IDENTITY((_GLF_IDENTITY(1, (1) - 0)), int(ivec4((_GLF_IDENTITY(1, (1) - 0)), 1, ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), 0)))) ^ 0)), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(1, (1) - 0)), (_GLF_IDENTITY((_GLF_IDENTITY(1, (1) - 0)), int(ivec4((_GLF_IDENTITY(1, (1) - 0)), 1, (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)), min((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)), (1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))))), 0)))) ^ 0)), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(1, (1) - 0)), (_GLF_IDENTITY((_GLF_IDENTITY(1, (1) - 0)), int(ivec4((_GLF_IDENTITY(1, (1) - 0)), 1, ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), 0)))) ^ 0))))) << _GLF_IDENTITY(int(4), int(4))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(4, (0 ^ 1), 0, 0), min(_GLF_IDENTITY(ivec4(4, (_GLF_IDENTITY(0 ^ 1, ~ (~ (0 ^ 1)))), 0, 0), _GLF_IDENTITY((_GLF_IDENTITY(ivec4(4, (0 ^ 1), 0, _GLF_IDENTITY(0, 0 + (0))), (ivec4(4, (0 ^ 1), 0, 0)) ^ ivec4(0, _GLF_IDENTITY(0, (0) * 1), _GLF_IDENTITY(0, (0) ^ 0), 0))), ((_GLF_IDENTITY(ivec4(4, (0 ^ 1), 0, _GLF_IDENTITY(0, 0 + (0))), (ivec4(4, (0 ^ 1), 0, 0)) ^ ivec4(0, 0, 0, 0)))) | ((_GLF_IDENTITY(ivec4(4, (0 ^ 1), 0, _GLF_IDENTITY(0, 0 + (0))), (_GLF_IDENTITY(ivec4(4, (0 ^ 1), 0, 0), (ivec4(4, (0 ^ 1), 0, 0)) << ivec4(0, 0, 0, 0))) ^ ivec4(0, 0, 0, 0))))) + ivec4(0, 0, 0, 0)), _GLF_IDENTITY(ivec4(4, (0 ^ 1), 0, 0), max(ivec4(4, (0 ^ 1), 0, 0), _GLF_IDENTITY(ivec4(4, (_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-4620))))) ^ 1), 0, 0), (ivec4(4, (0 ^ 1), 0, 0)) - ivec4(0, 0, _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) + 0))), 0))))))), min(int(ivec4(4, (0 ^ 1), 0, _GLF_IDENTITY(0, int(ivec3(0, 1, 1))))), _GLF_IDENTITY(int(ivec4(4, (0 ^ 1), 0, 0)), (int(ivec4(4, (0 ^ 1), 0, 0))) | (int(ivec4(4, (_GLF_IDENTITY(0, max(0, 0)) ^ 1), 0, 0)))))))) / 1)), int(4))) << _GLF_IDENTITY(int(_GLF_IDENTITY(6, (false ? _GLF_FUZZED(90695) : 6))), int(6))) >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-94085) : 0)) & 83183)); _injected_loop_counter --)
            {
             barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = (45102 & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                {
                 barrier();
                }
              }
            }
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              barrier();
            }
          }
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, abs(0.0))))))))), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))), true, false))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(305.189, 6.9)) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((mat3x2(-305.512, 9.8, -4.8, -0.7, -8.1, -1.3) * vec3(-8.3, -3446.9450, 436.374))) : injectionSwitch)))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     barrier();
    }
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(false)), (! (_GLF_WRAPPED_LOOP(false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     barrier();
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
