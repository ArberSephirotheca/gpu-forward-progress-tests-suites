#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), bool(bvec2((false), false))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((false)), (! (_GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), true && ((false)))))))) && true)), bool(bvec3(! (_GLF_IDENTITY(! ((false)), (! ((false))) && true)), true, false)))), bool(bvec3(_GLF_IDENTITY((false), true && ((false))), true, false))), false)), (bool(bvec2(_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), true && ((false))), true, _GLF_IDENTITY(false, ! (! (false)))))), false))) && true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, true)), (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, true))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, true)), (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, true))) && true))), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) || false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) || false)), bool(bvec2(! (_GLF_IDENTITY(! (false), (! (false)) || false)), true))), false, false, true)), bool(bool(bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) || false)), bool(bvec2(! (_GLF_IDENTITY(! (false), (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))) || false)), true))), false, false, true))))))), false, false, true)), (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, true))) && true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, false))), (false) && true)), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(acos(acosh(vec2(-4993.7105, -5.9)))) : injectionSwitch)), 1.0, 1.0, sin(0.0), tan(0.0), abs(0.0), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 1.0, log(1.0), 0.0, 0.0)), exp(0.0), abs(1.0), 0.0), (true ? mat4x3(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), sin(0.0), tan(0.0), abs(0.0), 1.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-110.884)), float(0.0), bool(true))), 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.9)), float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), bool(true))), _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, 1.0, 1.0, 0.0, 1.0))))))), 1.0, 0.0)), 0.0, 0.0, 1.0, log(1.0), 0.0, 0.0)), exp(_GLF_IDENTITY(0.0, float(vec4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)))), abs(1.0), 0.0) : _GLF_FUZZED(mat4x3(768.885, -7894.6818, 820.848, -606.388, 9888.5074, -4.6, 6.6, -99.89, -31.06, -806.678, -542.925, 0.2)))))).x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))))) && true), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))), bool(bool(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))), ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))))))) && true)) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, false, false)), (bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, false, false))) || false))), (_GLF_DEAD(false)) || _GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, 1.0, sin(0.0), tan(0.0), abs(0.0), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((vec4(-4395.3720, 0.3, -5.5, 5.1) * vec4(-7661.2608, -2309.3947, -83.00, 155.438)).q)), float(0.0), bool(true))), 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-174.395)), bool(false))))), 0.0)), 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 1.0, log(1.0), 0.0, 0.0)), exp(0.0), abs(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), 0.0), (true ? mat4x3(injectionSwitch, 1.0, 1.0, sin(0.0), tan(0.0), abs(0.0), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, 0.0, 1.0, log(1.0), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(1762.3109))), 0.0)), exp(0.0), abs(1.0), 0.0) : _GLF_FUZZED(mat4x3(768.885, -7894.6818, 820.848, -606.388, 9888.5074, -4.6, 6.6, _GLF_IDENTITY(-99.89, (false ? _GLF_FUZZED(4.1) : -99.89)), -31.06, -806.678, -542.925, 0.2)))))).x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-2.6)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y)) || (false))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) && true), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool((_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))))) && true)) && true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), true && ((! ((injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), ! (! (! (! (true)))))) && (false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, round(length(normalize(vec2(1.0, 1.0)))) * (injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, round(length(normalize(vec2(1.0, 1.0)))) * (injectionSwitch.x))) / round(length(normalize(vec3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((vec4(1.0, -107.920, 7.7, 67.19)).y)), bool(false))), 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-1.3)), float(1.0), bool(true))))))))) / 1.0, mix(float(_GLF_FUZZED(9390.7781)), float((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, round(length(normalize(vec2(1.0, 1.0)))) * (injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, round(length(normalize(vec2(1.0, 1.0)))) * (injectionSwitch.x))) / round(length(normalize(vec3(1.0, 1.0, 1.0)))))) / 1.0), bool(true)))) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))).y), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, round(length(normalize(vec2(1.0, 1.0)))) * (injectionSwitch.x)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(asin(5.1)))), round(length(normalize(vec2(1.0, 1.0)))) * (injectionSwitch.x))) / round(length(normalize(vec3(1.0, 1.0, 1.0)))))) / 1.0) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, round(length(normalize(vec2(1.0, 1.0)))) * (injectionSwitch.x)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(asin(5.1)))), round(length(normalize(vec2(1.0, 1.0)))) * (injectionSwitch.x))) / round(length(normalize(vec3(1.0, 1.0, 1.0)))))) / 1.0), max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, round(length(normalize(vec2(1.0, 1.0)))) * (injectionSwitch.x)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(asin(5.1)))), round(length(normalize(vec2(1.0, 1.0)))) * (injectionSwitch.x))) / round(length(normalize(vec3(1.0, 1.0, 1.0)))))) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, round(length(normalize(vec2(1.0, 1.0)))) * (injectionSwitch.x)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(asin(5.1)))), round(length(normalize(vec2(1.0, 1.0)))) * (injectionSwitch.x))) / round(length(normalize(vec3(1.0, 1.0, 1.0)))))) / 1.0))) > injectionSwitch.y) || false))), ! (! (((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, round(length(normalize(vec2(1.0, 1.0)))) * (injectionSwitch.x)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(asin(5.1)))), round(length(normalize(vec2(1.0, 1.0)))) * (injectionSwitch.x))) / round(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), max(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), mix(float(_GLF_FUZZED(-5142.0170)), float(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), max(length(normalize(vec3(1.0, 1.0, 1.0))), length(normalize(vec3(1.0, 1.0, 1.0)))))), bool(true))), length(normalize(vec3(1.0, 1.0, 1.0)))))), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(asin(5.1)))), round(length(normalize(vec2(1.0, 1.0)))) * (injectionSwitch.x))) / round(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), max(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), mix(float(_GLF_FUZZED(-5142.0170)), float(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), max(length(normalize(vec3(1.0, 1.0, 1.0))), length(normalize(vec3(1.0, 1.0, 1.0)))))), bool(true))), length(normalize(vec3(1.0, 1.0, 1.0)))))), 1.0 * ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(asin(5.1)))), round(length(normalize(vec2(1.0, 1.0)))) * (injectionSwitch.x))) / round(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), max(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), mix(float(_GLF_FUZZED(-5142.0170)), float(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), max(length(normalize(vec3(1.0, 1.0, 1.0))), length(normalize(vec3(1.0, 1.0, 1.0)))))), bool(true))), length(normalize(vec3(1.0, 1.0, 1.0)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(asin(5.1)))), round(length(normalize(vec2(1.0, 1.0)))) * (injectionSwitch.x))) / round(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), max(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), mix(float(_GLF_FUZZED(-5142.0170)), float(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), max(length(normalize(vec3(1.0, 1.0, 1.0))), length(normalize(vec3(1.0, 1.0, 1.0)))))), bool(true))), length(normalize(vec3(1.0, 1.0, 1.0)))))))))) / 1.0) > injectionSwitch.y))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(true, bool(bvec3(true, false, true)))), false)), bvec2(bvec4(bvec2(bvec3(bvec2(false, true), false)), true, true))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), false)), bvec2(bvec4(bvec2(bvec3(bvec2(false, true), false)), true, true))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), false)), bvec2(bvec4(bvec2(bvec3(bvec2(false, true), false)), true, true))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), false)), bvec2(bvec4(bvec2(bvec3(bvec2(false, true), false)), true, true))))), false || (bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), false)), bvec2(bvec4(bvec2(bvec3(bvec2(false, true), false)), true, true)))))))))))))) && true)) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true))))) || false), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-0.4, -758.267)))).x > injectionSwitch.y)) || false))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))) && true)) || false)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), true, true)))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), ! (! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, true))))))), true))))), ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false)))), _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false))))) || false, ((bool(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true)))))), false), false))))) || false) || false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false), false, true, false)), bool(bool(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false), false, true, false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(3u), _GLF_IDENTITY(uvec3(3u), (_GLF_IDENTITY(false ? _GLF_FUZZED(uvec3(120903u, 49693u, 91910u)) : uvec3(3u), ~ _GLF_IDENTITY((~ (false ? _GLF_FUZZED(uvec3(120903u, 49693u, 91910u)) : uvec3(3u))), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ ((~ (false ? _GLF_FUZZED(uvec3(120903u, 49693u, 91910u)) : uvec3(3u))))))))))), gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)))))).x, max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(3u), _GLF_IDENTITY(uvec3(3u), (_GLF_IDENTITY(false ? _GLF_FUZZED(uvec3(120903u, 49693u, 91910u)) : uvec3(3u), ~ _GLF_IDENTITY((~ (false ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(120903u, clamp(120903u, 120903u, 120903u)), _GLF_IDENTITY(49693u, (49693u) | (49693u)), 91910u)) : uvec3(3u))), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ ((~ (false ? _GLF_FUZZED(uvec3(120903u, 49693u, 91910u)) : uvec3(3u))))))))))), gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)))))).x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(3u, (3u) >> 0u)), _GLF_IDENTITY(uvec3(3u), (_GLF_IDENTITY(false ? _GLF_FUZZED(uvec3(120903u, 49693u, 91910u)) : uvec3(3u), ~ _GLF_IDENTITY((~ (false ? _GLF_FUZZED(uvec3(120903u, 49693u, 91910u)) : uvec3(3u))), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ ((~ (false ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(120903u, (_GLF_IDENTITY(120903u, min(120903u, 120903u))) - 0u), 49693u, 91910u)) : uvec3(3u))))))))))), gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)))))).x, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(3u, (3u) >> 0u)), _GLF_IDENTITY(uvec3(3u), (_GLF_IDENTITY(false ? _GLF_FUZZED(uvec3(120903u, 49693u, 91910u)) : uvec3(3u), ~ _GLF_IDENTITY((~ (false ? _GLF_FUZZED(uvec3(120903u, 49693u, 91910u)) : uvec3(3u))), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ ((~ (false ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(120903u, (_GLF_IDENTITY(120903u, min(120903u, 120903u))) - 0u), 49693u, 91910u)) : uvec3(3u))))))))))), gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)))))).x, 1u), uvec2(0u, 0u) | (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(3u, (3u) >> 0u)), _GLF_IDENTITY(uvec3(3u), (_GLF_IDENTITY(false ? _GLF_FUZZED(uvec3(120903u, 49693u, 91910u)) : uvec3(3u), ~ _GLF_IDENTITY((~ (false ? _GLF_FUZZED(uvec3(120903u, 49693u, 91910u)) : uvec3(3u))), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ ((~ (false ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(120903u, (_GLF_IDENTITY(120903u, min(120903u, 120903u))) - 0u), 49693u, 91910u)) : uvec3(3u))))))))))), gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)))))).x, 1u), (uvec2(_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(3u, (3u) >> 0u)), _GLF_IDENTITY(uvec3(3u), (_GLF_IDENTITY(false ? _GLF_FUZZED(uvec3(120903u, 49693u, 91910u)) : uvec3(3u), ~ _GLF_IDENTITY((~ (false ? _GLF_FUZZED(uvec3(120903u, 49693u, 91910u)) : uvec3(3u))), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ ((~ (false ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(120903u, (_GLF_IDENTITY(120903u, min(120903u, 120903u))) - 0u), 49693u, 91910u)) : uvec3(3u))))))))))), gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)))))).x, 1u)) - uvec2(0u, 0u)))))), uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(3u), _GLF_IDENTITY(uvec3(3u), (_GLF_IDENTITY(false ? _GLF_FUZZED(uvec3(120903u, 49693u, 91910u)) : uvec3(3u), ~ _GLF_IDENTITY((~ (false ? _GLF_FUZZED(uvec3(120903u, 49693u, 91910u)) : uvec3(3u))), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ ((~ (false ? _GLF_FUZZED(uvec3(120903u, 49693u, 91910u)) : uvec3(3u))))))))))), gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u))))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(3u), _GLF_IDENTITY(uvec3(3u), (_GLF_IDENTITY(false ? _GLF_FUZZED(uvec3(120903u, 49693u, 91910u)) : uvec3(3u), ~ _GLF_IDENTITY((~ (false ? _GLF_FUZZED(uvec3(120903u, 49693u, 91910u)) : uvec3(3u))), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ ((~ (false ? _GLF_FUZZED(uvec3(120903u, 49693u, 91910u)) : uvec3(3u))))))))))), gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u))))), (clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(3u), _GLF_IDENTITY(uvec3(3u), (_GLF_IDENTITY(false ? _GLF_FUZZED(uvec3(120903u, 49693u, 91910u)) : uvec3(3u), ~ _GLF_IDENTITY((~ (false ? _GLF_FUZZED(uvec3(120903u, 49693u, 91910u)) : uvec3(3u))), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ ((~ (false ? _GLF_FUZZED(uvec3(120903u, 49693u, 91910u)) : uvec3(3u))))))))))), gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)))))) >> uvec3(0u, 0u, 0u))) >> (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)))).x, 1u))))), min(_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (gl_WorkGroupSize))) >> _GLF_IDENTITY((uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(3u), _GLF_IDENTITY(uvec3(3u), (false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(uvec3(120903u, 49693u, 91910u), uvec3(0u, 0u, 0u) | (uvec3(120903u, 49693u, 91910u)))), (_GLF_FUZZED(_GLF_IDENTITY(uvec3(120903u, 49693u, 91910u), uvec3(0u, 0u, 0u) | (uvec3(120903u, 49693u, 91910u))))) - uvec3(0u, 0u, 0u)) : uvec3(3u))))), (false ? _GLF_FUZZED(uvec3(140590u, 28689u, 89409u)) : _GLF_IDENTITY((uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(3u), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(3u), min(uvec3(3u), _GLF_IDENTITY(uvec3(3u), clamp(uvec3(3u), uvec3(3u), uvec3(3u))))), (false ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(120903u, _GLF_IDENTITY(49693u, 0u ^ (_GLF_IDENTITY(49693u, (true ? 49693u : _GLF_FUZZED(num_workgroup))))), 91910u), uvec3(0u, 0u, 0u) | (uvec3(120903u, 49693u, 91910u)))) : uvec3(3u))))), uvec3(0u, 0u, 0u) ^ ((uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(3u), _GLF_IDENTITY(uvec3(3u), (false ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(120903u, 49693u, 91910u), uvec3(0u, 0u, 0u) | (uvec3(120903u, 49693u, 91910u)))) : uvec3(3u)))))))))), (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (gl_WorkGroupSize))) >> _GLF_IDENTITY((uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(3u), _GLF_IDENTITY(uvec3(3u), (false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(uvec3(120903u, 49693u, 91910u), uvec3(0u, 0u, 0u) | (uvec3(120903u, 49693u, 91910u)))), (_GLF_FUZZED(_GLF_IDENTITY(uvec3(120903u, 49693u, 91910u), uvec3(0u, 0u, 0u) | (uvec3(120903u, 49693u, 91910u))))) - uvec3(0u, 0u, 0u)) : uvec3(3u))))), (false ? _GLF_FUZZED(uvec3(140590u, 28689u, 89409u)) : _GLF_IDENTITY((uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(3u), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(3u), min(uvec3(3u), _GLF_IDENTITY(uvec3(3u), clamp(uvec3(3u), uvec3(3u), uvec3(3u))))), (false ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(120903u, _GLF_IDENTITY(49693u, 0u ^ (_GLF_IDENTITY(49693u, (true ? 49693u : _GLF_FUZZED(num_workgroup))))), 91910u), uvec3(0u, 0u, 0u) | (uvec3(120903u, 49693u, 91910u)))) : uvec3(3u))))), uvec3(0u, 0u, 0u) ^ ((uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(3u), _GLF_IDENTITY(uvec3(3u), (false ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(120903u, 49693u, 91910u), uvec3(0u, 0u, 0u) | (uvec3(120903u, 49693u, 91910u)))) : uvec3(3u))))))))))) << uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)))))).x, _GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(3u), _GLF_IDENTITY(uvec3(3u), (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec3(120903u, 49693u, 91910u)), max(_GLF_IDENTITY(_GLF_FUZZED(uvec3(120903u, 49693u, 91910u)), (_GLF_FUZZED(uvec3(120903u, 49693u, 91910u))) + uvec3(0u, 0u, 0u)), _GLF_FUZZED(uvec3(120903u, 49693u, 91910u)))) : uvec3(3u)))))), gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), (false ? _GLF_FUZZED(uvec4(72320u, 89917u, 47860u, 100239u)) : uvec4(gl_WorkGroupSize, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))))), _GLF_IDENTITY(uvec3(uvec4(uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, max(0u, 0u)))))), (false ? _GLF_FUZZED(uvec4(72320u, 89917u, 47860u, 100239u)) : uvec4(gl_WorkGroupSize, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))))), 1u)), uvec3(0u, 0u, 0u) | (uvec3(uvec4(uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), (false ? _GLF_FUZZED(uvec4(72320u, 89917u, 47860u, 100239u)) : uvec4(gl_WorkGroupSize, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), clamp((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), (1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), (1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))))))), 1u))))))) - _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3(0u, 0u, _GLF_IDENTITY(0u, 0u ^ (0u)))))) | uvec3(0u, 0u, 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), (false ? _GLF_FUZZED(uvec4(72320u, 89917u, 47860u, 100239u)) : uvec4(gl_WorkGroupSize, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))))), _GLF_IDENTITY(uvec3(uvec4(uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, max(0u, 0u)))))), (false ? _GLF_FUZZED(uvec4(72320u, 89917u, 47860u, 100239u)) : uvec4(gl_WorkGroupSize, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))))), 1u)), uvec3(0u, 0u, 0u) | (uvec3(uvec4(uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), (false ? _GLF_FUZZED(uvec4(72320u, 89917u, 47860u, 100239u)) : uvec4(gl_WorkGroupSize, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), clamp((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), (1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), (1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))))))), 1u))))))) - _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3(0u, 0u, _GLF_IDENTITY(0u, 0u ^ (0u)))))) | uvec3(0u, 0u, 0u)), clamp(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), (false ? _GLF_FUZZED(uvec4(72320u, 89917u, 47860u, 100239u)) : uvec4(gl_WorkGroupSize, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))))), _GLF_IDENTITY(uvec3(uvec4(uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, max(0u, 0u)))))), (false ? _GLF_FUZZED(uvec4(72320u, 89917u, 47860u, 100239u)) : uvec4(gl_WorkGroupSize, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))))), 1u)), uvec3(0u, 0u, 0u) | (uvec3(uvec4(uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), (false ? _GLF_FUZZED(uvec4(72320u, 89917u, 47860u, 100239u)) : uvec4(gl_WorkGroupSize, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), clamp((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), (1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), (1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))))))), 1u))))))) - _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3(0u, 0u, _GLF_IDENTITY(0u, 0u ^ (0u)))))) | uvec3(0u, 0u, 0u)), (true ? (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), (false ? _GLF_FUZZED(uvec4(72320u, 89917u, 47860u, 100239u)) : uvec4(gl_WorkGroupSize, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))))), _GLF_IDENTITY(uvec3(uvec4(uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, max(0u, 0u)))))), (false ? _GLF_FUZZED(uvec4(72320u, 89917u, 47860u, 100239u)) : uvec4(gl_WorkGroupSize, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))))), 1u)), uvec3(0u, 0u, 0u) | (uvec3(uvec4(uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), (false ? _GLF_FUZZED(uvec4(72320u, 89917u, 47860u, 100239u)) : uvec4(gl_WorkGroupSize, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), clamp((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), (1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), (1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))))))), 1u))))))) - _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3(0u, 0u, _GLF_IDENTITY(0u, 0u ^ (0u)))))) | uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(185148u, 186484u, 105753u)))), (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), (false ? _GLF_FUZZED(uvec4(72320u, 89917u, 47860u, 100239u)) : uvec4(gl_WorkGroupSize, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))))), _GLF_IDENTITY(uvec3(uvec4(uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, max(0u, 0u)))))), (false ? _GLF_FUZZED(uvec4(72320u, 89917u, 47860u, 100239u)) : uvec4(gl_WorkGroupSize, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))))), 1u)), uvec3(0u, 0u, 0u) | (uvec3(uvec4(uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), (false ? _GLF_FUZZED(uvec4(72320u, 89917u, 47860u, 100239u)) : uvec4(gl_WorkGroupSize, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), clamp((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), (1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), (1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))))))), 1u))))))) - _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3(0u, 0u, _GLF_IDENTITY(0u, 0u ^ (0u)))))) | uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), (false ? _GLF_FUZZED(uvec4(72320u, 89917u, 47860u, 100239u)) : uvec4(gl_WorkGroupSize, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))))), _GLF_IDENTITY(uvec3(uvec4(uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, max(0u, 0u)))))), (false ? _GLF_FUZZED(uvec4(72320u, 89917u, 47860u, 100239u)) : uvec4(gl_WorkGroupSize, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))))), 1u)), uvec3(0u, 0u, 0u) | (uvec3(uvec4(uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), (false ? _GLF_FUZZED(uvec4(72320u, 89917u, 47860u, 100239u)) : uvec4(gl_WorkGroupSize, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), clamp((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), (1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), (1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))))))), 1u))))))) - _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3(0u, 0u, _GLF_IDENTITY(0u, 0u ^ (0u)))))) | uvec3(0u, 0u, 0u))))) - uvec3(0u, 0u, 0u))))))).x));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (! (! (false))), (! (! (! (false)))) && true)))), false || (_GLF_IDENTITY(false, ! (! (false)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 1.0, sin(0.0)), vec3(0.0, 0.0, 1.0)), clamp(_GLF_IDENTITY(dot(vec3(1.0, 1.0, sin(0.0)), vec3(0.0, 0.0, 1.0)), clamp(dot(vec3(1.0, 1.0, sin(0.0)), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, sin(0.0)), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, sin(0.0)), vec3(0.0, 0.0, 1.0)))), _GLF_IDENTITY(dot(vec3(1.0, 1.0, sin(0.0)), vec3(0.0, 0.0, 1.0)), (true ? dot(vec3(1.0, 1.0, sin(0.0)), vec3(0.0, 0.0, 1.0)) : _GLF_FUZZED(57.38))), _GLF_IDENTITY(dot(vec3(1.0, 1.0, sin(0.0)), vec3(0.0, 0.0, 1.0)), max(dot(vec3(1.0, 1.0, sin(0.0)), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, sin(0.0)), vec3(0.0, 0.0, 1.0)))))), _GLF_IDENTITY(dot(vec3(1.0, 1.0, sin(0.0)), vec3(0.0, 0.0, 1.0)), float(float(dot(vec3(1.0, 1.0, sin(0.0)), vec3(0.0, 0.0, 1.0)))))), 0.0)), (true ? float(vec4(injectionSwitch.y, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, sin(0.0)), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, sin(0.0)), vec3(0.0, 0.0, 1.0))), 0.0)) : _GLF_FUZZED(2.9))))))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(_GLF_DEAD(false), false, true, _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, ! (! (false))))))), true, false, false)), true && (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true))), true, false, false))))), _GLF_IDENTITY(false, ! (! (false))), false, true))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && true)) || false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)) * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))) || false)))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true))))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u) + subgroup_id * subgroup_size + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id), (true ? min(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id) : _GLF_FUZZED(67064u)))) + 1, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id), clamp(_GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id), (0u << _GLF_IDENTITY(uint(1u), uint(1u))) | (min(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id))), min(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id), _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id), (min(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id)) << _GLF_IDENTITY(0u, (0u) | (0u)))))) + 1) << 0u)) % subgroup_size);
 atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, 0 | (_GLF_IDENTITY(64, clamp(64, 64, 64))))) - 0)) << _GLF_IDENTITY(0, clamp(0, 0, 0))), 64, 64)), 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), false || (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))) && true)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(33.01)), vec2(_GLF_FUZZED(7089.5838), (injectionSwitch)[1]), bvec2(false, true))).y, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(33.01)), vec2(_GLF_FUZZED(7089.5838), (injectionSwitch)[1]), bvec2(false, true))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(33.01)), vec2(_GLF_FUZZED(7089.5838), (injectionSwitch)[1]), bvec2(false, true))).y, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(33.01)), vec2(_GLF_FUZZED(7089.5838), (injectionSwitch)[1]), bvec2(false, true))).y, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(33.01)), vec2(_GLF_FUZZED(7089.5838), (injectionSwitch)[1]), bvec2(false, true))).y)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(33.01)), vec2(_GLF_FUZZED(7089.5838), (injectionSwitch)[1]), bvec2(false, true))).y)), injectionSwitch.y))))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(33.01)), vec2(_GLF_FUZZED(7089.5838), (injectionSwitch)[1]), bvec2(false, true))).y, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(33.01)), vec2(_GLF_FUZZED(7089.5838), (injectionSwitch)[1]), bvec2(false, true))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(33.01)), vec2(_GLF_FUZZED(7089.5838), (injectionSwitch)[1]), bvec2(false, true))).y, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(33.01)), vec2(_GLF_FUZZED(7089.5838), (injectionSwitch)[1]), bvec2(false, true))).y, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(33.01)), vec2(_GLF_FUZZED(7089.5838), (injectionSwitch)[1]), bvec2(false, true))).y)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(33.01)), vec2(_GLF_FUZZED(7089.5838), (injectionSwitch)[1]), bvec2(false, true))).y)), injectionSwitch.y)))))) || false), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 atomicStore(checker[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u)], read, 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) || false)), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) || false))) || false)))), (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) || false)), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) || false))) || false)))), ! (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) || false)), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) || false))) || false)))), bool(bvec4((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) || false)), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) || false))) || false)))), false, false, false))))))) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
    }
   barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
