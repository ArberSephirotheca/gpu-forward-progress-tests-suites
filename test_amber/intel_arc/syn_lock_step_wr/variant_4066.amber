#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, 0u))).x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) / abs(1.0))), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) / abs(1.0))), true))))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (true ? gl_WorkGroupID.x : _GLF_FUZZED(subgroup_size)));
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_base = _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, 1u, 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, 1u, 0u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, 1u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, 1u, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, 1u, 0u)))) ^ 0u)) ^ 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, 1u, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, 1u, 0u)))) | (_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, 1u, 0u))))))), subgroup_size)), (subgroup_id * subgroup_size) / 1u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, workgroup_base + subgroup_base)), (_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, workgroup_base + subgroup_base))) - 0u) + _GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, workgroup_base + subgroup_base)), (_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, workgroup_base + subgroup_base))) - 0u) + _GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, workgroup_base + subgroup_base)), (_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, workgroup_base + subgroup_base))) - 0u) + _GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, workgroup_base + subgroup_base)), (_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, workgroup_base + subgroup_base))) - 0u) + _GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id)))));
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u) + subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), max(_GLF_IDENTITY(uint(1), uint(uint(_GLF_IDENTITY(uint(1), max(uint(1), uint(1)))))), uint(1))), 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((64), int(ivec4((64), 1, 1, 1))), _GLF_IDENTITY((_GLF_IDENTITY(~ (64), min(~ (64), ~ (64)))), (_GLF_IDENTITY((_GLF_IDENTITY(~ (64), min(~ (64), ~ (64)))), (false ? _GLF_FUZZED((+ 13205)) : (_GLF_IDENTITY(~ (64), min(~ (64), ~ (64))))))) << 0) ^ (1 ^ 1)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((64), int(ivec4((64), 1, 1, 1))), _GLF_IDENTITY((_GLF_IDENTITY(~ (64), min(~ (64), ~ (64)))), (_GLF_IDENTITY((_GLF_IDENTITY(~ (64), min(~ (64), ~ (64)))), (false ? _GLF_FUZZED((+ 13205)) : (_GLF_IDENTITY(~ (64), min(~ (64), ~ (64))))))) << 0) ^ (1 ^ 1)), (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((64), int(ivec4((64), 1, 1, 1))), (~ _GLF_IDENTITY((64), int(ivec4(_GLF_IDENTITY((64), _GLF_IDENTITY(int(ivec2((64), 0)), (true ? int(ivec2((64), 0)) : _GLF_FUZZED(-81990)))), 1, 1, 1)))) + 0), _GLF_IDENTITY((_GLF_IDENTITY(~ (64), min(~ (64), ~ (64)))), (_GLF_IDENTITY((_GLF_IDENTITY(~ (64), min(~ (64), _GLF_IDENTITY(~ (64), 1 * (~ (64)))))), (false ? _GLF_FUZZED((+ 13205)) : (_GLF_IDENTITY(~ (64), min(~ (64), ~ (64))))))) << 0) ^ (1 ^ _GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED(-50285)))))) * 1)))))), (_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), (_GLF_IDENTITY(~ (64), min(~ (64), ~ (64)))) ^ (1 ^ 1))))) | (_GLF_IDENTITY(64, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (64), _GLF_IDENTITY((_GLF_IDENTITY(~ (64), min(~ (64), ~ _GLF_IDENTITY((64), ~ (_GLF_IDENTITY(~ ((64)), (~ ((64))) | (~ ((64))))))))), ((_GLF_IDENTITY(~ (64), min(~ (64), ~ _GLF_IDENTITY((64), ~ (_GLF_IDENTITY(~ ((64)), (~ ((64))) | (~ ((64)))))))))) | ((_GLF_IDENTITY(~ (64), min(~ (64), ~ _GLF_IDENTITY((64), ~ (_GLF_IDENTITY(~ ((64)), (~ ((64))) | (~ ((64))))))))))) ^ (_GLF_IDENTITY(1 ^ 1, (int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0) ^ (1 ^ 1))))), min(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (64), (_GLF_IDENTITY(~ (64), min(~ (64), ~ (64)))) ^ (1 ^ 1)), (false ? _GLF_FUZZED(41323) : _GLF_IDENTITY(_GLF_IDENTITY(~ (64), (_GLF_IDENTITY(~ (64), min(~ (64), ~ (64)))) ^ (1 ^ 1)), (_GLF_IDENTITY(~ (64), (_GLF_IDENTITY(~ (64), min(~ (64), ~ (64)))) ^ (1 ^ 1))) ^ 0)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (64), (_GLF_IDENTITY(~ (64), min(~ (64), ~ (64)))) ^ (1 ^ 1))), (~ (_GLF_IDENTITY(~ (64), (_GLF_IDENTITY(~ (64), min(~ (64), ~ (64)))) ^ (1 ^ 1)))) | (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, int(ivec3(64, 0, ((0 | 0) & -5076))))), (_GLF_IDENTITY(~ (64), min(~ (64), ~ _GLF_IDENTITY((64), (false ? _GLF_FUZZED(int(374.818)) : (64)))))) ^ (1 ^ 1))))))))))) / 1), 4);
 uint read = _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), _GLF_IDENTITY((atomicLoad(buf[virtual_gid], 4, 64, 2)) | (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) ^ 0), 2), 0u + (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), clamp(_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), 0u ^ (atomicLoad(buf[virtual_gid], 4, 64, 2))), (_GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (0u << _GLF_IDENTITY(uint(6u), uint(6u))) | (buf[virtual_gid])), 4, 64, 2), 0u ^ (atomicLoad(buf[virtual_gid], 4, 64, 2)))) - 0u))), max(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), 0u ^ (atomicLoad(buf[virtual_gid], 4, 64, 2))))), _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), 0u ^ (atomicLoad(buf[virtual_gid], 4, 64, 2))))))), atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) / 1)) / 1)), atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, clamp(4, 4, 4)) : _GLF_FUZZED(-894))), (4) ^ 0))), 64, 2)))))), min((atomicLoad(buf[virtual_gid], 4, 64, 2)) | (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), 0u + (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), clamp(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), 0u ^ (atomicLoad(buf[virtual_gid], 4, 64, 2))), ~ (~ (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), 0u ^ (atomicLoad(buf[virtual_gid], 4, 64, 2))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), 0u ^ (atomicLoad(buf[virtual_gid], 4, 64, 2))), uint(uvec4(false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), 0u ^ (atomicLoad(buf[virtual_gid], 4, 64, 2))), 1u, 1u, 1u)))))))))), atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, _GLF_IDENTITY(clamp(2, 2, 2), clamp(clamp(2, 2, 2), _GLF_IDENTITY(clamp(2, 2, 2), (clamp(2, 2, 2)) << 0), clamp(2, 2, 2))))), atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))], (buf[_GLF_IDENTITY(virtual_gid, ~ (_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) - 0u)))]) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ 0), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ 0), min(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ 0), min(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) ^ 0)))))))))), 64, 2)))))), (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec2(24723u, 140562u)[1]) : _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), min(atomicLoad(buf[virtual_gid], 4, 64, 2), atomicLoad(buf[virtual_gid], 4, 64, 2)))))) | _GLF_IDENTITY((_GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(uint(uint(buf[virtual_gid])), 0u ^ (uint(uint(buf[virtual_gid]))))), 4, 64, 2), 0u + (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, 0 | (_GLF_IDENTITY(2, (2) * 1)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), 0u ^ (atomicLoad(buf[virtual_gid], 4, 64, 2))))), (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), 0u ^ (atomicLoad(buf[virtual_gid], 4, 64, 2)))))) | 0u), atomicLoad(buf[virtual_gid], 4, 64, 2), _GLF_IDENTITY(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, (4) ^ 0))), 64, 2), (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, _GLF_IDENTITY((4) ^ 0, clamp((4) ^ 0, (4) ^ 0, (4) ^ 0))))), 64, 2)) / 1u)))))), min((_GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(uint(uint(buf[virtual_gid])), 0u ^ (uint(uint(buf[virtual_gid]))))), 4, 64, 2), 0u + (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, 0 | (_GLF_IDENTITY(2, (2) * 1)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), 0u ^ (atomicLoad(buf[virtual_gid], 4, 64, 2))))), (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), 0u ^ (atomicLoad(buf[virtual_gid], 4, 64, 2)))))) | 0u), atomicLoad(buf[virtual_gid], 4, 64, 2), _GLF_IDENTITY(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, (4) ^ 0))), 64, 2), (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, _GLF_IDENTITY((4) ^ 0, clamp((4) ^ 0, (4) ^ 0, (4) ^ 0))))), 64, 2)) / 1u)))))), _GLF_IDENTITY((_GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(uint(uint(buf[virtual_gid])), 0u ^ (uint(uint(buf[virtual_gid]))))), 4, 64, 2), 0u + (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, 0 | (_GLF_IDENTITY(2, (2) * 1)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), 0u ^ (atomicLoad(buf[virtual_gid], 4, 64, 2))))), (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), 0u ^ (atomicLoad(buf[virtual_gid], 4, 64, 2)))))) | 0u), atomicLoad(buf[virtual_gid], 4, 64, 2), _GLF_IDENTITY(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, (4) ^ 0))), 64, 2), (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, _GLF_IDENTITY((4) ^ 0, clamp((4) ^ 0, (4) ^ 0, (4) ^ 0))))), 64, 2)) / 1u)))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(uint(uint(buf[virtual_gid])), 0u ^ (uint(uint(buf[virtual_gid]))))), 4, 64, 2), 0u + (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, 0 | (_GLF_IDENTITY(2, (2) * 1)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), 0u ^ (atomicLoad(buf[virtual_gid], 4, 64, 2))))), (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), 0u ^ (atomicLoad(buf[virtual_gid], 4, 64, 2)))))) | 0u), atomicLoad(buf[virtual_gid], 4, 64, 2), _GLF_IDENTITY(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, (4) ^ 0))), 64, 2), (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, _GLF_IDENTITY((4) ^ 0, clamp((4) ^ 0, (4) ^ 0, (4) ^ 0))))), 64, 2)) / 1u)))))), max((_GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(uint(uint(buf[virtual_gid])), 0u ^ (uint(uint(buf[virtual_gid]))))), 4, 64, 2), 0u + (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, 0 | (_GLF_IDENTITY(2, (2) * 1)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), 0u ^ (atomicLoad(buf[virtual_gid], 4, 64, 2))))), (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), 0u ^ (atomicLoad(buf[virtual_gid], 4, 64, 2)))))) | 0u), atomicLoad(buf[virtual_gid], 4, 64, 2), _GLF_IDENTITY(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, (4) ^ 0))), 64, 2), (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, _GLF_IDENTITY((4) ^ 0, clamp((4) ^ 0, (4) ^ 0, (4) ^ 0))))), 64, 2)) / 1u)))))), (_GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(uint(uint(buf[virtual_gid])), 0u ^ (uint(uint(buf[virtual_gid]))))), 4, 64, 2), 0u + (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, 0 | (_GLF_IDENTITY(2, (2) * 1)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), 0u ^ (atomicLoad(buf[virtual_gid], 4, 64, 2))))), (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), 0u ^ (atomicLoad(buf[virtual_gid], 4, 64, 2)))))) | 0u), atomicLoad(buf[virtual_gid], 4, 64, 2), _GLF_IDENTITY(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, (4) ^ 0))), 64, 2), (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, _GLF_IDENTITY((4) ^ 0, clamp((4) ^ 0, (4) ^ 0, (4) ^ 0))))), 64, 2)) / 1u))))))))))))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))) / cos(vec2(0.0, 0.0)))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], 0.0 + (injectionSwitch[_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0), max(ivec3(1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0), ivec3(1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)))))])))).x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 atomicStore(checker[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))], read, 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, (true ? _GLF_IDENTITY(64, clamp(64, 64, 64)) : _GLF_FUZZED(-46782))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(64, (true ? _GLF_IDENTITY(64, clamp(64, 64, 64)) : _GLF_FUZZED(-46782))), 0 | (_GLF_IDENTITY(64, (true ? _GLF_IDENTITY(64, clamp(64, 64, 64)) : _GLF_FUZZED(-46782))))) : _GLF_FUZZED(90293)))) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(64, 0, 1, (-23816 & 0)), clamp(ivec4(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) - 0)) ^ 0), 0, _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (false ? _GLF_FUZZED(_GLF_IDENTITY(-27419, (_GLF_IDENTITY(-27419, (true ? -27419 : _GLF_FUZZED(-7984)))) ^ 0)) : _GLF_IDENTITY(1, (1) >> 0))), (-23816 & 0)), ivec4(64, 0, 1, (-23816 & _GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), min(0, 0)))), _GLF_IDENTITY(ivec4(64, 0, 1, (-23816 & 0)), ~ (~ (ivec4(_GLF_IDENTITY(64, (64) | (64)), _GLF_IDENTITY(0, (0) | _GLF_IDENTITY(0, int(ivec2(0, int(_GLF_ONE(1.0, injectionSwitch.y)))))), 1, (-23816 & 0)))))))), min(int(_GLF_IDENTITY(ivec4(64, 0, 1, (-23816 & 0)), clamp(ivec4(64, 0, 1, (-23816 & 0)), ivec4(64, 0, 1, (_GLF_IDENTITY(-23816, ~ (~ (_GLF_IDENTITY(-23816, (-23816) + 0)))) & 0)), _GLF_IDENTITY(ivec4(64, 0, 1, (_GLF_IDENTITY(-23816 & 0, min(_GLF_IDENTITY(_GLF_IDENTITY(-23816 & 0, 0 + (-23816 & 0)), clamp(-23816 & _GLF_IDENTITY(0, (0) << 0), -23816 & 0, -23816 & 0)), -23816 & _GLF_IDENTITY(0, (0) - 0))))), ~ (~ (ivec4(64, 0, 1, (_GLF_IDENTITY(-23816 & 0, (_GLF_IDENTITY(-23816 & 0, clamp(-23816 & 0, -23816 & 0, -23816 & 0))) >> 0))))))))), int(_GLF_IDENTITY(ivec4(64, 0, 1, (-23816 & 0)), clamp(_GLF_IDENTITY(ivec4(64, 0, 1, (-23816 & 0)), max(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(64, (64) | (64)), _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_GLF_IDENTITY((-86085 << -79881), max((-86085 << -79881), (-86085 << -79881)))) : 0)), _GLF_IDENTITY(1, 0 ^ (1)), (-23816 & 0)), clamp(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(64, (64) | (64)), _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_GLF_IDENTITY((-86085 << -79881), max((-86085 << -79881), (-86085 << -79881)))) : 0)), _GLF_IDENTITY(1, 0 ^ (1)), (-23816 & 0)), (ivec4(_GLF_IDENTITY(64, (64) | (64)), _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_GLF_IDENTITY((-86085 << -79881), max((-86085 << -79881), (-86085 << -79881)))) : 0)), _GLF_IDENTITY(1, 0 ^ (1)), (-23816 & 0))) | (ivec4(_GLF_IDENTITY(64, (64) | (64)), _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_GLF_IDENTITY((-86085 << -79881), max((-86085 << -79881), (-86085 << -79881)))) : 0)), _GLF_IDENTITY(1, 0 ^ (1)), (-23816 & 0)))), ivec4(_GLF_IDENTITY(64, (64) | (64)), _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_GLF_IDENTITY((-86085 << -79881), max((-86085 << -79881), (-86085 << -79881)))) : 0)), _GLF_IDENTITY(1, 0 ^ (1)), (-23816 & 0)), ivec4(_GLF_IDENTITY(64, (64) | (64)), _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_GLF_IDENTITY((-86085 << -79881), max((-86085 << -79881), (-86085 << -79881)))) : 0)), _GLF_IDENTITY(1, 0 ^ (1)), (-23816 & 0)))), ivec4(64, 0, 1, (-23816 & 0)))), ivec4(64, _GLF_IDENTITY(0, (0) + 0), 1, (_GLF_IDENTITY(-23816, int(ivec4(-23816, 1, 0, 1))) & _GLF_IDENTITY(0, int(int(0))))), _GLF_IDENTITY(ivec4(64, 0, 1, (-23816 & 0)), ~ _GLF_IDENTITY((~ (ivec4(64, _GLF_IDENTITY(0, 0 ^ (0)), 1, (-23816 & 0)))), ivec4(0, 0, 0, 0) | ((~ (ivec4(64, 0, 1, (-23816 & 0)))))))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(64, 0, 1, (-23816 & 0)), clamp(ivec4(_GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, (64) - 0), (true ? _GLF_IDENTITY(64, (64) - 0) : _GLF_FUZZED(-91736)))) ^ 0), 0, _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (false ? _GLF_FUZZED(_GLF_IDENTITY(-27419, (_GLF_IDENTITY(-27419, (true ? -27419 : _GLF_FUZZED(-7984)))) ^ 0)) : _GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), (_GLF_IDENTITY(1, (1) >> 0)) << (0 | 0)))))), (-23816 & 0)), ivec4(64, 0, 1, (-23816 & _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, int(ivec4(0, (0 & (95760 * 78626)), 1, 0))), 0)))), _GLF_IDENTITY(ivec4(64, 0, 1, (-23816 & 0)), _GLF_IDENTITY(~ (~ (ivec4(_GLF_IDENTITY(64, (64) | (64)), _GLF_IDENTITY(0, (0) | _GLF_IDENTITY(0, int(ivec2(0, int(_GLF_ONE(1.0, injectionSwitch.y)))))), 1, (-23816 & 0)))), ivec4(0, 0, 0, 0) | (_GLF_IDENTITY(~ (~ (ivec4(_GLF_IDENTITY(64, (64) | (64)), _GLF_IDENTITY(0, (0) | _GLF_IDENTITY(0, int(ivec2(0, int(_GLF_ONE(1.0, injectionSwitch.y)))))), 1, (-23816 & 0)))), ivec4(0, 0, 0, 0) ^ (~ (~ (ivec4(_GLF_IDENTITY(64, (64) | (64)), _GLF_IDENTITY(0, (0) | _GLF_IDENTITY(0, int(ivec2(0, int(_GLF_ONE(1.0, injectionSwitch.y)))))), 1, (-23816 & 0)))))))))))), min(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(64, 0, 1, (-23816 & 0)), clamp(ivec4(64, 0, 1, (-23816 & 0)), _GLF_IDENTITY(ivec4(64, 0, 1, (-23816 & 0)), clamp(_GLF_IDENTITY(ivec4(64, 0, 1, (-23816 & 0)), ivec4(0, 0, 0, 0) ^ (ivec4(64, 0, 1, (-23816 & 0)))), ivec4(64, 0, 1, (-23816 & 0)), ivec4(64, 0, 1, (-23816 & 0)))), _GLF_IDENTITY(ivec4(64, 0, _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) | 0), 1)), (_GLF_IDENTITY(_GLF_IDENTITY(-23816, (_GLF_IDENTITY(-23816, (-23816) << 0)) ^ 0) & 0, min(_GLF_IDENTITY(_GLF_IDENTITY(-23816 & 0, _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(-23816 & 0, 0 ^ (-23816 & 0)), int(_GLF_ONE(1.0, injectionSwitch.y)), 0, int(_GLF_ONE(1.0, injectionSwitch.y)))), min(int(ivec4(_GLF_IDENTITY(-23816 & 0, 0 ^ (-23816 & 0)), int(_GLF_ONE(1.0, injectionSwitch.y)), 0, int(_GLF_ONE(1.0, injectionSwitch.y)))), int(ivec4(_GLF_IDENTITY(-23816 & 0, 0 ^ (-23816 & 0)), int(_GLF_ONE(1.0, injectionSwitch.y)), 0, int(_GLF_ONE(1.0, injectionSwitch.y))))))), clamp(-23816 & 0, -23816 & 0, -23816 & 0)), _GLF_IDENTITY(-23816 & 0, max(-23816 & 0, -23816 & 0)))))), ~ (~ (ivec4(64, 0, 1, (_GLF_IDENTITY(-23816 & 0, (_GLF_IDENTITY(-23816 & 0, clamp(-23816 & 0, -23816 & 0, -23816 & 0))) >> 0))))))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(64, 0, 1, (-23816 & 0)), clamp(ivec4(64, 0, 1, (-23816 & 0)), _GLF_IDENTITY(ivec4(64, 0, 1, (-23816 & 0)), clamp(_GLF_IDENTITY(ivec4(64, 0, 1, (-23816 & 0)), ivec4(0, 0, 0, 0) ^ (ivec4(64, 0, 1, (-23816 & 0)))), ivec4(64, 0, 1, (-23816 & 0)), ivec4(64, 0, 1, (-23816 & 0)))), _GLF_IDENTITY(ivec4(64, 0, _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) | 0), 1)), (_GLF_IDENTITY(_GLF_IDENTITY(-23816, (_GLF_IDENTITY(-23816, (-23816) << 0)) ^ 0) & 0, min(_GLF_IDENTITY(_GLF_IDENTITY(-23816 & 0, _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(-23816 & 0, 0 ^ (-23816 & 0)), int(_GLF_ONE(1.0, injectionSwitch.y)), 0, int(_GLF_ONE(1.0, injectionSwitch.y)))), min(int(ivec4(_GLF_IDENTITY(-23816 & 0, 0 ^ (-23816 & 0)), int(_GLF_ONE(1.0, injectionSwitch.y)), 0, int(_GLF_ONE(1.0, injectionSwitch.y)))), int(ivec4(_GLF_IDENTITY(-23816 & 0, 0 ^ (-23816 & 0)), int(_GLF_ONE(1.0, injectionSwitch.y)), 0, int(_GLF_ONE(1.0, injectionSwitch.y))))))), clamp(-23816 & 0, -23816 & 0, -23816 & 0)), _GLF_IDENTITY(-23816 & 0, max(-23816 & 0, -23816 & 0)))))), ~ (~ (ivec4(64, 0, 1, (_GLF_IDENTITY(-23816 & 0, (_GLF_IDENTITY(-23816 & 0, clamp(-23816 & 0, -23816 & 0, -23816 & 0))) >> 0))))))))), (0 ^ 0) | (int(_GLF_IDENTITY(ivec4(64, 0, 1, (-23816 & 0)), clamp(ivec4(64, 0, 1, (-23816 & 0)), _GLF_IDENTITY(ivec4(64, 0, 1, (-23816 & 0)), clamp(_GLF_IDENTITY(ivec4(64, 0, 1, (-23816 & 0)), ivec4(0, 0, 0, 0) ^ (ivec4(64, 0, 1, (-23816 & 0)))), ivec4(64, 0, 1, (-23816 & 0)), ivec4(64, 0, 1, (-23816 & 0)))), _GLF_IDENTITY(ivec4(64, 0, _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) | 0), 1)), (_GLF_IDENTITY(_GLF_IDENTITY(-23816, (_GLF_IDENTITY(-23816, (-23816) << 0)) ^ 0) & 0, min(_GLF_IDENTITY(_GLF_IDENTITY(-23816 & 0, _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(-23816 & 0, 0 ^ (-23816 & 0)), int(_GLF_ONE(1.0, injectionSwitch.y)), 0, int(_GLF_ONE(1.0, injectionSwitch.y)))), min(int(ivec4(_GLF_IDENTITY(-23816 & 0, 0 ^ (-23816 & 0)), int(_GLF_ONE(1.0, injectionSwitch.y)), 0, int(_GLF_ONE(1.0, injectionSwitch.y)))), int(ivec4(_GLF_IDENTITY(-23816 & 0, 0 ^ (-23816 & 0)), int(_GLF_ONE(1.0, injectionSwitch.y)), 0, int(_GLF_ONE(1.0, injectionSwitch.y))))))), clamp(-23816 & 0, -23816 & 0, -23816 & 0)), _GLF_IDENTITY(-23816 & 0, max(-23816 & 0, -23816 & 0)))))), ~ (~ (ivec4(64, 0, 1, (_GLF_IDENTITY(-23816 & 0, (_GLF_IDENTITY(-23816 & 0, clamp(-23816 & 0, -23816 & 0, -23816 & 0))) >> 0)))))))))))) << 0), int(_GLF_IDENTITY(ivec4(64, 0, 1, (-23816 & 0)), clamp(_GLF_IDENTITY(ivec4(64, 0, 1, (-23816 & 0)), _GLF_IDENTITY(max(ivec4(_GLF_IDENTITY(64, (64) | (64)), _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_GLF_IDENTITY((-86085 << -79881), max((-86085 << -79881), (-86085 << -79881)))) : 0)), 1, (-23816 & 0)), ivec4(64, 0, 1, (-23816 & 0))), (_GLF_IDENTITY(max(ivec4(_GLF_IDENTITY(64, (64) | (64)), _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_GLF_IDENTITY((-86085 << -79881), max((-86085 << -79881), (-86085 << -79881)))) : 0)), 1, (-23816 & 0)), ivec4(64, 0, 1, (-23816 & 0))), ivec4(0, 0, 0, 0) | (max(ivec4(_GLF_IDENTITY(64, (64) | (64)), _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_GLF_IDENTITY((-86085 << -79881), max((-86085 << -79881), (-86085 << -79881)))) : 0)), 1, (-23816 & 0)), ivec4(64, 0, 1, (-23816 & 0)))))) >> ivec4(0, 0, 0, 0))), ivec4(64, _GLF_IDENTITY(0, (0) + 0), 1, (_GLF_IDENTITY(-23816, int(ivec4(-23816, 1, 0, 1))) & 0)), _GLF_IDENTITY(ivec4(64, 0, 1, (-23816 & 0)), ~ _GLF_IDENTITY((~ _GLF_IDENTITY((ivec4(64, 0, _GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1))))), (-23816 & 0))), clamp((ivec4(64, 0, _GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1))))), (-23816 & 0))), (ivec4(64, 0, _GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1))))), (-23816 & 0))), (ivec4(64, 0, _GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1))))), (-23816 & 0)))))), ivec4(0, 0, 0, 0) | ((~ (ivec4(64, 0, 1, (-23816 & 0)))))))))))), (true ? _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(64, 0, 1, (-23816 & 0)), clamp(ivec4(_GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, (64) - 0), min(_GLF_IDENTITY(64, (64) - 0), _GLF_IDENTITY(64, (64) - 0)))) ^ 0), 0, _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (false ? _GLF_FUZZED(_GLF_IDENTITY(-27419, (_GLF_IDENTITY(-27419, (true ? -27419 : _GLF_FUZZED(-7984)))) ^ 0)) : _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) >> 0))), (-23816 & 0)), ivec4(64, 0, 1, (-23816 & _GLF_IDENTITY(0, min(0, 0)))), _GLF_IDENTITY(ivec4(64, 0, 1, (-23816 & 0)), ~ (~ (ivec4(_GLF_IDENTITY(64, (64) | (64)), _GLF_IDENTITY(0, (0) | _GLF_IDENTITY(0, int(ivec2(0, int(_GLF_ONE(1.0, injectionSwitch.y)))))), 1, (-23816 & 0)))))))), min(int(_GLF_IDENTITY(ivec4(64, 0, 1, (-23816 & 0)), clamp(ivec4(64, 0, 1, (-23816 & 0)), ivec4(64, 0, 1, (-23816 & 0)), _GLF_IDENTITY(ivec4(64, 0, 1, (_GLF_IDENTITY(-23816 & 0, min(_GLF_IDENTITY(-23816 & 0, clamp(-23816 & 0, _GLF_IDENTITY(-23816 & 0, min(-23816 & 0, -23816 & 0)), -23816 & 0)), -23816 & 0)))), ~ (~ (ivec4(64, 0, 1, (_GLF_IDENTITY(-23816 & 0, (_GLF_IDENTITY(-23816 & 0, clamp(-23816 & 0, -23816 & 0, -23816 & 0))) >> 0))))))))), int(_GLF_IDENTITY(ivec4(64, 0, 1, (-23816 & 0)), clamp(_GLF_IDENTITY(ivec4(64, 0, 1, (-23816 & 0)), max(ivec4(_GLF_IDENTITY(64, (64) | (64)), _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_GLF_IDENTITY((-86085 << -79881), max((-86085 << -79881), (-86085 << -79881)))) : 0)), 1, (-23816 & 0)), ivec4(64, 0, 1, (-23816 & 0)))), ivec4(64, _GLF_IDENTITY(0, (0) + 0), 1, (_GLF_IDENTITY(-23816, int(ivec4(-23816, 1, 0, 1))) & 0)), _GLF_IDENTITY(ivec4(64, 0, 1, (-23816 & 0)), ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (ivec4(64, 0, 1, (-23816 & 0)))), ivec4(0, 0, 0, 0) | ((~ (ivec4(64, 0, 1, (-23816 & 0)))))), (_GLF_IDENTITY((~ (ivec4(64, 0, 1, (-23816 & 0)))), ivec4(0, 0, 0, 0) | ((~ (ivec4(64, 0, 1, (-23816 & 0))))))) ^ (ivec4(1, 1, 1, 1) ^ ivec4(1, 1, 1, 1))))))))) : _GLF_FUZZED(-7868))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(64, _GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(0, 0, _GLF_IDENTITY(1, 0 | (1))), ivec3(0, 0, 0) ^ (ivec3(0, 0, _GLF_IDENTITY(1, 0 | (1)))))), (int(_GLF_IDENTITY(ivec3(0, 0, _GLF_IDENTITY(1, 0 | (1))), ivec3(0, 0, 0) ^ (ivec3(0, 0, _GLF_IDENTITY(1, 0 | (1))))))) << 0)), 1, (-23816 & 0)), clamp(ivec4(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) - 0)) ^ 0), 0, _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (false ? _GLF_FUZZED(_GLF_IDENTITY(-27419, (_GLF_IDENTITY(-27419, (true ? -27419 : _GLF_FUZZED(-7984)))) ^ 0)) : _GLF_IDENTITY(1, (1) >> 0))), (-23816 & 0)), ivec4(64, 0, 1, (-23816 & _GLF_IDENTITY(0, min(0, 0)))), _GLF_IDENTITY(ivec4(64, 0, 1, (-23816 & 0)), ~ (~ (ivec4(_GLF_IDENTITY(64, (64) | (64)), _GLF_IDENTITY(0, (0) | _GLF_IDENTITY(0, int(ivec2(0, int(_GLF_ONE(1.0, injectionSwitch.y)))))), 1, (-23816 & 0)))))))), min(int(_GLF_IDENTITY(ivec4(64, _GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(0, 0, _GLF_IDENTITY(1, 0 | (1))), ivec3(0, 0, 0) ^ (ivec3(0, 0, _GLF_IDENTITY(1, 0 | (1)))))), (int(_GLF_IDENTITY(ivec3(0, 0, _GLF_IDENTITY(1, 0 | (1))), ivec3(0, 0, 0) ^ (ivec3(0, 0, _GLF_IDENTITY(1, 0 | (1))))))) << 0)), 1, (-23816 & 0)), clamp(ivec4(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) - 0)) ^ 0), 0, _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (false ? _GLF_FUZZED(_GLF_IDENTITY(-27419, (_GLF_IDENTITY(-27419, (true ? -27419 : _GLF_FUZZED(-7984)))) ^ 0)) : _GLF_IDENTITY(1, (1) >> 0))), (-23816 & 0)), ivec4(64, 0, 1, (-23816 & _GLF_IDENTITY(0, min(0, 0)))), _GLF_IDENTITY(ivec4(64, 0, 1, (-23816 & 0)), ~ (~ (ivec4(_GLF_IDENTITY(64, (64) | (64)), _GLF_IDENTITY(0, (0) | _GLF_IDENTITY(0, int(ivec2(0, int(_GLF_ONE(1.0, injectionSwitch.y)))))), 1, (-23816 & 0)))))))), int(_GLF_IDENTITY(ivec4(64, _GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(0, 0, _GLF_IDENTITY(1, 0 | (1))), ivec3(0, 0, 0) ^ (ivec3(0, 0, _GLF_IDENTITY(1, 0 | (1)))))), (int(_GLF_IDENTITY(ivec3(0, 0, _GLF_IDENTITY(1, 0 | (1))), ivec3(0, 0, 0) ^ (ivec3(0, 0, _GLF_IDENTITY(1, 0 | (1))))))) << 0)), 1, (-23816 & 0)), clamp(ivec4(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) - 0)) ^ 0), 0, _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (false ? _GLF_FUZZED(_GLF_IDENTITY(-27419, (_GLF_IDENTITY(-27419, (true ? -27419 : _GLF_FUZZED(-7984)))) ^ 0)) : _GLF_IDENTITY(1, (1) >> 0))), (-23816 & 0)), ivec4(64, 0, 1, (-23816 & _GLF_IDENTITY(0, min(0, 0)))), _GLF_IDENTITY(ivec4(64, 0, 1, (-23816 & 0)), ~ (~ (ivec4(_GLF_IDENTITY(64, (64) | (64)), _GLF_IDENTITY(0, (0) | _GLF_IDENTITY(0, int(ivec2(0, int(_GLF_ONE(1.0, injectionSwitch.y)))))), 1, (-23816 & 0)))))))))), min(int(_GLF_IDENTITY(ivec4(64, 0, 1, (-23816 & 0)), clamp(ivec4(64, 0, 1, (-23816 & 0)), ivec4(64, _GLF_IDENTITY(0, 0 | (0)), 1, (-23816 & 0)), _GLF_IDENTITY(ivec4(64, 0, 1, (_GLF_IDENTITY(-23816 & 0, min(_GLF_IDENTITY(-23816 & 0, clamp(-23816 & _GLF_IDENTITY(0, (0) | (0)), -23816 & 0, -23816 & 0)), -23816 & 0)))), ~ (~ (ivec4(64, 0, 1, (_GLF_IDENTITY(-23816 & 0, (_GLF_IDENTITY(-23816 & 0, clamp(-23816 & 0, -23816 & 0, -23816 & 0))) >> 0))))))))), int(_GLF_IDENTITY(ivec4(64, 0, 1, (-23816 & 0)), clamp(_GLF_IDENTITY(ivec4(64, 0, 1, (-23816 & 0)), _GLF_IDENTITY(max(ivec4(_GLF_IDENTITY(64, (64) | (64)), _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_GLF_IDENTITY((-86085 << -79881), max((-86085 << -79881), (-86085 << -79881)))) : 0)), 1, (-23816 & 0)), ivec4(64, 0, 1, (-23816 & 0))), (max(ivec4(_GLF_IDENTITY(64, (64) | (64)), _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_GLF_IDENTITY((-86085 << -79881), max((-86085 << -79881), (-86085 << -79881)))) : 0)), 1, (-23816 & 0)), ivec4(64, 0, 1, (-23816 & 0)))) | ivec4(0, 0, 0, 0))), ivec4(64, _GLF_IDENTITY(0, (0) + 0), 1, (_GLF_IDENTITY(-23816, int(ivec4(-23816, 1, 0, 1))) & 0)), _GLF_IDENTITY(ivec4(64, 0, 1, (-23816 & 0)), ~ _GLF_IDENTITY((~ (ivec4(64, 0, 1, (-23816 & 0)))), ivec4(_GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(0, (0) + 0), 0, 0) | ((~ (ivec4(64, 0, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY((-23816 & 0), (true ? (-23816 & 0) : _GLF_FUZZED(-24430))))))))))))))))), 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
