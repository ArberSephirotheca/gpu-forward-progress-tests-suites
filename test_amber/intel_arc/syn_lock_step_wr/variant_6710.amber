#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) && true))), false || ((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), injectionSwitch)).y, _GLF_IDENTITY((injectionSwitch.y) * 1.0, (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(90.52) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(2.3)), bool(false)))))), ((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0)))) * vec2(1.0, 1.0))).y), (true ? (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(90.52) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(2.3)), bool(false)))))), ((injectionSwitch) * mat2(1.0)) * vec2(1.0, 1.0))).y) : _GLF_FUZZED(tanh(3.1)))) * 1.0) - 0.0))))) - length(vec4(0.0, 0.0, 0.0, 0.0)))), max(min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY((injectionSwitch.y) * 1.0, clamp(_GLF_IDENTITY((injectionSwitch.y) * 1.0, min((injectionSwitch.y) * 1.0, (injectionSwitch.y) * 1.0)), _GLF_IDENTITY((injectionSwitch.y) * 1.0, float(mat2x4((injectionSwitch.y) * 1.0, 0.0, 1.0, 0.0, sin(0.0), 1.0, 1.0, 1.0))), _GLF_IDENTITY((injectionSwitch.y) * 1.0, max((injectionSwitch.y) * 1.0, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 1.0, determinant(mat3(sqrt(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))))) * 1.0, min((injectionSwitch.y) * 1.0, (injectionSwitch.y) * 1.0))))))), injectionSwitch.y), (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(-40.79, clamp(_GLF_IDENTITY(-40.79, min(-40.79, -40.79)), -40.79, _GLF_IDENTITY(-40.79, (true ? -40.79 : _GLF_FUZZED(8.1)))))) : min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y), mix(float(false ? _GLF_FUZZED(-40.79) : min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y)), float(_GLF_FUZZED(519.000)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), injectionSwitch)).y, _GLF_IDENTITY((injectionSwitch.y) * 1.0, (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(90.52) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(2.3)), bool(false)))))), ((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0)))) * vec2(1.0, 1.0))).y), (true ? (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(90.52) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(2.3)), bool(false)))))), ((injectionSwitch) * mat2(1.0)) * vec2(1.0, 1.0))).y) : _GLF_FUZZED(tanh(3.1)))) * 1.0) - 0.0))))) - length(vec4(0.0, 0.0, 0.0, 0.0)))), max(min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY((injectionSwitch.y) * 1.0, clamp(_GLF_IDENTITY((injectionSwitch.y) * 1.0, min((injectionSwitch.y) * 1.0, (injectionSwitch.y) * 1.0)), _GLF_IDENTITY((injectionSwitch.y) * 1.0, float(mat2x4((injectionSwitch.y) * 1.0, 0.0, 1.0, 0.0, sin(0.0), 1.0, 1.0, 1.0))), _GLF_IDENTITY((injectionSwitch.y) * 1.0, max((injectionSwitch.y) * 1.0, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 1.0, determinant(mat3(sqrt(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))))) * 1.0, min((injectionSwitch.y) * 1.0, (injectionSwitch.y) * 1.0))))))), injectionSwitch.y), (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(-40.79, clamp(_GLF_IDENTITY(-40.79, min(-40.79, -40.79)), -40.79, _GLF_IDENTITY(-40.79, (true ? -40.79 : _GLF_FUZZED(8.1)))))) : min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y), mix(float(false ? _GLF_FUZZED(-40.79) : min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y)), float(_GLF_FUZZED(519.000)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(-89.84, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(-89.84, 0.0 + (-89.84)), cos(0.0), 1.0, 0.0)), mix(float(_GLF_FUZZED(-9388.2872)), float(float(mat2(_GLF_IDENTITY(-89.84, 0.0 + (-89.84)), cos(0.0), 1.0, 0.0))), bool(true)))))), bool(false))), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) * 1.0, (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * _GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED(vec2(22.29, -4.3)) : vec2(1.0, 1.0)))), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * _GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED(vec2(22.29, -4.3)) : vec2(1.0, 1.0))))))).y), (true ? (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * _GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED(vec2(22.29, -4.3)) : vec2(1.0, 1.0))))).y) : _GLF_FUZZED(94.94))) * _GLF_IDENTITY(1.0, min(1.0, 1.0))) - 0.0))))) - _GLF_IDENTITY(length(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), (true ? _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), (vec4(0.0, 0.0, 0.0, 0.0)) / vec4(1.0, 1.0, 1.0, 1.0)) : _GLF_FUZZED(vec4(1.8, 0.1, 672.832, 3.4))))), max(length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec4(0.0, 0.0, 0.0, 0.0)))))), max(min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), clamp(_GLF_IDENTITY((injectionSwitch.y), float(_GLF_IDENTITY(mat4x2((injectionSwitch.y), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0), mat2(1.0) * (mat4x2((injectionSwitch.y), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0))))), (injectionSwitch.y), (injectionSwitch.y))) * 1.0), injectionSwitch.y), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), (false ? _GLF_FUZZED(-40.79) : min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y))))))))) || false))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x > injectionSwitch.y), true, false)))) && true), false, true))))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x > injectionSwitch.y), true, false)))) && true), false, true)))))))) && true))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(bool(injectionSwitch.x > injectionSwitch.y), true, false), bvec3(bvec4(bvec3(bool(injectionSwitch.x > injectionSwitch.y), true, false), false)))))) && true), false, true)))))) && true))), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x > injectionSwitch.y), true, false)))) && true), false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x > injectionSwitch.y), true, false)))) && true), false, true))), ! (! (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x > injectionSwitch.y), true, false)))) && true), false, _GLF_IDENTITY(true, _GLF_IDENTITY(false, bool(bvec4(false, false, true, false))) || (_GLF_IDENTITY(true, true && (true))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x > injectionSwitch.y), true, false)))) && true), false, _GLF_IDENTITY(true, _GLF_IDENTITY(false, bool(bvec4(false, false, true, false))) || (_GLF_IDENTITY(true, true && (true)))))))))))))) && true)))) && true)))))), true)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) + vec2(0.0, 0.0)), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(2.0), _GLF_FUZZED(4.5)), bvec2(false, false))), injectionSwitch)), injectionSwitch)))).y)), ! (! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y), ((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y)) || false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && (false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(false, (false) || false) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, true, false))), (injectionSwitch.x < injectionSwitch.y) || false))), bool(bvec4(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, true, true)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), ! (! (injectionSwitch.x < injectionSwitch.y)))))))), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) && _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec4(! (true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, true)), bool(bvec2(bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, true)), true)))), true, true)))))))))), (injectionSwitch.x < injectionSwitch.y)), true && ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), false || (! (! ((injectionSwitch.x > injectionSwitch.y)))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, true, true)))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, true, true)))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false, true)))))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))), true && (((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, true, true)))))))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, true, true)))))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, true, true)))))))))), (bool(bool(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, true, true))))))))))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, true, true)))))))))), (bool(bool(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, true, true))))))))))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false))))))) || false)) || false)), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false)))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), bool(bvec4(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x < injectionSwitch.y)))), true, true, true)))))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), mix(float(_GLF_FUZZED(1.3)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), bool(true)))) * round(length(normalize(_GLF_IDENTITY(1.0, max(1.0, 1.0)))))))), true && (((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, true, true))))))))) || false))) || false))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bool(true && (false))))), ! (! (_GLF_IDENTITY(false, true && (false)))))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false)))))), false, false), bvec3(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false)))))), false, false))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), false || (_GLF_IDENTITY(! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))), false || ((_GLF_DEAD(false)))), true && (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))), false || ((_GLF_DEAD(false)))), true && (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))))), false || (! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))), false || ((_GLF_DEAD(false)))), true && (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false) || false)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false)) || false) || false))))))))))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, clamp(_GLF_IDENTITY(workgroup_size, 0u | (workgroup_size)), workgroup_size, workgroup_size)) * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) * mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0)))) / vec2(1.0, 1.0))), injectionSwitch), max(min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0))), injectionSwitch), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0), min(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0), min(((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0))), _GLF_IDENTITY(((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0), vec2(mat4x3(((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))))))))), injectionSwitch)))).y, (false ? _GLF_FUZZED(_GLF_IDENTITY(5927.4436, (true ? 5927.4436 : _GLF_FUZZED(length(vec4(9.0, -721.538, 91.41, 14.11)))))) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0))), injectionSwitch), max(min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0))), injectionSwitch), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))), ((injectionSwitch)) * vec2(1.0, 1.0)), (injectionSwitch), (injectionSwitch))) * mat2(1.0)) / vec2(1.0, 1.0))), injectionSwitch)))).y))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0))), injectionSwitch), max(min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0))), injectionSwitch), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0))), injectionSwitch)))).y, (false ? _GLF_FUZZED(5927.4436) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))) * mat2(1.0), _GLF_IDENTITY(((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0), min(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0), min(((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0))), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0))))), injectionSwitch), max(min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)))), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0))), injectionSwitch), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * vec2(1.0, 1.0)), (injectionSwitch), (injectionSwitch))) * mat2(1.0)) / vec2(1.0, 1.0))), injectionSwitch)))).y))), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0))), injectionSwitch), max(min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0))), injectionSwitch), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0))), injectionSwitch)))).y, (false ? _GLF_FUZZED(5927.4436) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0))), injectionSwitch), max(min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0))), injectionSwitch), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * vec2(1.0, 1.0)), (injectionSwitch), (injectionSwitch))) * mat2(1.0)) / vec2(1.0, 1.0))), injectionSwitch)))).y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), (_GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))), false || _GLF_IDENTITY(((false)), ! (! (((false))))))) && true), true && (! (false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))), false, false, false))))))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, ! (! (false))), false, _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true)))))) || false), false, false)), bool(bool(_GLF_IDENTITY(bool(bvec4(true, false, _GLF_IDENTITY(false, bool(bvec3(false, true, true))), false)), true && (bool(bvec4(true, false, false, false)))))))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))), true), true, true))))))))), true && (bool(bvec4(false, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uint(subgroup_id), max(uint(subgroup_id), uint(subgroup_id))))) * subgroup_size, 0u | _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(27885u, min(27885u, 27885u))), (_GLF_IDENTITY(_GLF_FUZZED(27885u), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_FUZZED(27885u)))) | 0u) : (subgroup_id * subgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))) | (subgroup_id * subgroup_size), min(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 0u, 1u, 0u), clamp(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))))), 0u, 1u, 0u), uvec4(subgroup_id * subgroup_size, 0u, 1u, 0u), _GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 0u, 1u, 0u), ~ (~ (uvec4(subgroup_id * subgroup_size, 0u, 1u, 0u))))))))), ~ (~ ((subgroup_id * subgroup_size)))) | (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), uint(uvec4(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)))) ^ 0u))) | ((subgroup_id * subgroup_size) | _GLF_IDENTITY((subgroup_id * subgroup_size), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((subgroup_id * subgroup_size)), clamp(~ ((subgroup_id * subgroup_size)), ~ ((subgroup_id * subgroup_size)), ~ ((subgroup_id * subgroup_size)))), (_GLF_IDENTITY(~ ((subgroup_id * subgroup_size)), min(~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ~ (_GLF_IDENTITY(~ ((subgroup_id * subgroup_size)), min(~ ((subgroup_id * subgroup_size)), ~ ((subgroup_id * subgroup_size)))))), max((subgroup_id * subgroup_size), _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) | ((subgroup_id * subgroup_size)))))), ~ ((subgroup_id * subgroup_size))))) | (~ _GLF_IDENTITY(((subgroup_id * subgroup_size)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (((subgroup_id * subgroup_size)))))))))), max(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 0u, 1u, 0u), clamp(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))))), 0u, 1u, 0u), uvec4(subgroup_id * subgroup_size, 0u, 1u, 0u), _GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 0u, 1u, 0u), ~ (~ (uvec4(subgroup_id * subgroup_size, 0u, 1u, 0u))))))))), ~ (~ ((subgroup_id * subgroup_size)))) | (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), uint(uvec4(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)))) ^ 0u))) | ((subgroup_id * subgroup_size) | _GLF_IDENTITY((subgroup_id * subgroup_size), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((subgroup_id * subgroup_size)), clamp(~ ((subgroup_id * subgroup_size)), ~ ((subgroup_id * subgroup_size)), ~ ((subgroup_id * subgroup_size)))), (_GLF_IDENTITY(~ ((subgroup_id * subgroup_size)), min(~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ~ (_GLF_IDENTITY(~ ((subgroup_id * subgroup_size)), min(~ ((subgroup_id * subgroup_size)), ~ ((subgroup_id * subgroup_size)))))), max((subgroup_id * subgroup_size), _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) | ((subgroup_id * subgroup_size)))))), ~ ((subgroup_id * subgroup_size))))) | (~ _GLF_IDENTITY(((subgroup_id * subgroup_size)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (((subgroup_id * subgroup_size)))))))))), clamp(_GLF_IDENTITY((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 0u, 1u, 0u), clamp(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))))), 0u, 1u, 0u), uvec4(subgroup_id * subgroup_size, 0u, 1u, 0u), _GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 0u, 1u, 0u), ~ (~ (uvec4(subgroup_id * subgroup_size, 0u, 1u, 0u))))))))), ~ (~ ((subgroup_id * subgroup_size)))) | (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), uint(uvec4(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)))) ^ 0u))) | ((subgroup_id * subgroup_size) | _GLF_IDENTITY((subgroup_id * subgroup_size), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((subgroup_id * subgroup_size)), clamp(~ ((subgroup_id * subgroup_size)), ~ ((subgroup_id * subgroup_size)), ~ ((subgroup_id * subgroup_size)))), (_GLF_IDENTITY(~ ((subgroup_id * subgroup_size)), min(~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ~ (_GLF_IDENTITY(~ ((subgroup_id * subgroup_size)), min(~ ((subgroup_id * subgroup_size)), ~ ((subgroup_id * subgroup_size)))))), max((subgroup_id * subgroup_size), _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) | ((subgroup_id * subgroup_size)))))), ~ ((subgroup_id * subgroup_size))))) | (~ _GLF_IDENTITY(((subgroup_id * subgroup_size)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (((subgroup_id * subgroup_size)))))))))), _GLF_IDENTITY((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 0u, 1u, 0u), clamp(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))))), 0u, 1u, 0u), uvec4(subgroup_id * subgroup_size, 0u, 1u, 0u), _GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 0u, 1u, 0u), ~ (~ (uvec4(subgroup_id * subgroup_size, 0u, 1u, 0u))))))))), ~ (~ ((subgroup_id * subgroup_size)))) | (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), uint(uvec4(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)))) ^ 0u))) | ((subgroup_id * subgroup_size) | _GLF_IDENTITY((subgroup_id * subgroup_size), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((subgroup_id * subgroup_size)), clamp(~ ((subgroup_id * subgroup_size)), ~ ((subgroup_id * subgroup_size)), ~ ((subgroup_id * subgroup_size)))), (_GLF_IDENTITY(~ ((subgroup_id * subgroup_size)), min(~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ~ (_GLF_IDENTITY(~ ((subgroup_id * subgroup_size)), min(~ ((subgroup_id * subgroup_size)), ~ ((subgroup_id * subgroup_size)))))), max((subgroup_id * subgroup_size), _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) | ((subgroup_id * subgroup_size)))))), ~ ((subgroup_id * subgroup_size))))) | (~ _GLF_IDENTITY(((subgroup_id * subgroup_size)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (((subgroup_id * subgroup_size)))))))))), _GLF_IDENTITY((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 0u, 1u, 0u), clamp(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))))), 0u, 1u, 0u), uvec4(subgroup_id * subgroup_size, 0u, 1u, 0u), _GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 0u, 1u, 0u), ~ (~ (uvec4(subgroup_id * subgroup_size, 0u, 1u, 0u))))))))), ~ (~ ((subgroup_id * subgroup_size)))) | (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), uint(uvec4(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)))) ^ 0u))) | ((subgroup_id * subgroup_size) | _GLF_IDENTITY((subgroup_id * subgroup_size), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((subgroup_id * subgroup_size)), clamp(~ ((subgroup_id * subgroup_size)), ~ ((subgroup_id * subgroup_size)), ~ ((subgroup_id * subgroup_size)))), (_GLF_IDENTITY(~ ((subgroup_id * subgroup_size)), min(~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ~ (_GLF_IDENTITY(~ ((subgroup_id * subgroup_size)), min(~ ((subgroup_id * subgroup_size)), ~ ((subgroup_id * subgroup_size)))))), max((subgroup_id * subgroup_size), _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) | ((subgroup_id * subgroup_size)))))), ~ ((subgroup_id * subgroup_size))))) | (~ _GLF_IDENTITY(((subgroup_id * subgroup_size)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (((subgroup_id * subgroup_size)))))))))))), _GLF_IDENTITY((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 0u, 1u, 0u), clamp(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))))), 0u, 1u, 0u), uvec4(subgroup_id * subgroup_size, 0u, 1u, 0u), _GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 0u, 1u, 0u), ~ (~ (uvec4(subgroup_id * subgroup_size, 0u, 1u, 0u))))))))), ~ (~ ((subgroup_id * subgroup_size)))) | (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), uint(uvec4(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)))) ^ 0u))) | ((subgroup_id * subgroup_size) | _GLF_IDENTITY((subgroup_id * subgroup_size), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((subgroup_id * subgroup_size)), clamp(~ ((subgroup_id * subgroup_size)), ~ ((subgroup_id * subgroup_size)), ~ ((subgroup_id * subgroup_size)))), (_GLF_IDENTITY(~ ((subgroup_id * subgroup_size)), min(~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ~ (_GLF_IDENTITY(~ ((subgroup_id * subgroup_size)), min(~ ((subgroup_id * subgroup_size)), ~ ((subgroup_id * subgroup_size)))))), max((subgroup_id * subgroup_size), _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) | ((subgroup_id * subgroup_size)))))), ~ ((subgroup_id * subgroup_size))))) | (~ _GLF_IDENTITY(((subgroup_id * subgroup_size)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (((subgroup_id * subgroup_size)))))))))))), _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * _GLF_IDENTITY((subgroup_size), min((_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), _GLF_IDENTITY((subgroup_size), (true ? (subgroup_size) : _GLF_FUZZED((subgroup_local_id ^ subgroup_id)))))))) | (subgroup_id * subgroup_size), ((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * _GLF_IDENTITY((subgroup_size), min((subgroup_size), _GLF_IDENTITY((subgroup_size), (true ? (subgroup_size) : _GLF_FUZZED((subgroup_local_id ^ subgroup_id)))))))) | (subgroup_id * subgroup_size)) << 0u))), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)) | (subgroup_id * subgroup_size), min(_GLF_IDENTITY((subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id * subgroup_size, 1u * (subgroup_id * subgroup_size))), (_GLF_IDENTITY((subgroup_id * subgroup_size), min(_GLF_IDENTITY((subgroup_id * subgroup_size), 0u | ((subgroup_id * subgroup_size))), (subgroup_id * subgroup_size))) | (subgroup_id * subgroup_size)) | ((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))), (subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | (_GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size)))))) + 0u))) | (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))))) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) | 0u)))) | (subgroup_id * subgroup_size), min(_GLF_IDENTITY((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size), ((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)) | ((subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), min((subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_local_id))), 1u * (subgroup_size))), _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), (_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u))), ~ (~ ((subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), (uint(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))) - 0u)))))))) | 0u))), clamp(_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), min((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u))), ~ (~ ((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))))) | 0u, ((_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u))), ~ (~ ((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))))) | 0u) * 1u)))), _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), min((subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u * (subgroup_size), max(1u * (subgroup_size), _GLF_IDENTITY(1u * (subgroup_size), (1u * (subgroup_size)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), (_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), min(1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), 1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u))))), ~ (~ ((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))))) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(1u, 0u, 1u)), (uint(uvec3(1u, 0u, 1u))) / 1u)) * (subgroup_size))), 0u ^ (_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(1u, 0u, 1u)), (uint(uvec3(1u, 0u, 1u))) / 1u)) * (subgroup_size))), ((subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(1u, 0u, 1u)), (uint(uvec3(1u, 0u, 1u))) / 1u)) * (subgroup_size)))) | ((subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(1u, 0u, 1u)), (uint(uvec3(1u, 0u, 1u))) / 1u)) * (subgroup_size))))))), min((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), (_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u, (1u) / (1u ^ 0u)) * _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), subgroup_size, subgroup_size))), ((subgroup_size)) ^ 0u))), ~ (~ ((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))))) | 0u))), 1u * (_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), min((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), (_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (0u ^ 0u) + (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))))), ((subgroup_size)) ^ 0u))), ~ (~ ((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))))) | 0u))))))) | (subgroup_id * subgroup_size))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)), ((_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size))))) | (subgroup_id * subgroup_size)) ^ 0u), min(_GLF_IDENTITY((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size), ((subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u))) | (_GLF_IDENTITY((subgroup_id * subgroup_size) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u)))) * subgroup_size), ((subgroup_id * subgroup_size)) + 0u), uint(uint((subgroup_id * subgroup_size) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u)))) * subgroup_size), ((subgroup_id * subgroup_size)) + 0u)))))), (subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u * (subgroup_size), _GLF_IDENTITY((1u * (subgroup_size)) | (_GLF_IDENTITY(1u * (subgroup_size), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(1u * (subgroup_size), (1u * (subgroup_size)) >> 0u)))), 0u | ((1u * (subgroup_size)) | (_GLF_IDENTITY(1u * (subgroup_size), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(1u * (subgroup_size), (1u * (subgroup_size)) >> 0u))))))))) | (subgroup_id * subgroup_size))))))), ((_GLF_IDENTITY((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size), min(_GLF_IDENTITY((subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id * subgroup_size, 1u * (subgroup_id * subgroup_size))), (_GLF_IDENTITY((subgroup_id * subgroup_size), min(_GLF_IDENTITY((subgroup_id * subgroup_size), 0u | ((subgroup_id * subgroup_size))), (_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)) * subgroup_size))) | (subgroup_id * subgroup_size)) | ((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))), (subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) | (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))))) | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) | 0u))), ~ (~ (subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) | 0u))))))) | (subgroup_id * subgroup_size), min(_GLF_IDENTITY((subgroup_id * subgroup_size) | _GLF_IDENTITY((subgroup_id * subgroup_size), min((subgroup_id * subgroup_size), _GLF_IDENTITY((subgroup_id * subgroup_size), uint(uvec2((subgroup_id * subgroup_size), 0u))))), (_GLF_IDENTITY((subgroup_id * subgroup_size), max((subgroup_id * subgroup_size), (subgroup_id * subgroup_size))) | (subgroup_id * subgroup_size)) | ((subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), min((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), (_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u))), ~ (~ ((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))))) | 0u))), clamp(_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), min((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), (_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u))), ~ (~ ((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))))) | 0u))), _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), min((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), (_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u))), ~ (~ ((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))))) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), min((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), (_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u))), ~ (~ ((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))))) | 0u))), 1u * (_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), min((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), (_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u))), ~ (~ ((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))))) | 0u))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), min((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), (_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u))), ~ (~ ((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))))) | 0u))), clamp(_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), min((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), (_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u))), ~ (~ ((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))))) | 0u))), _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), min((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), (_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u))), ~ (~ ((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))))) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), min((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), (_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u))), ~ (~ ((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))))) | 0u))), 1u * (_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), min((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), (_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u))), ~ (~ ((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))))) | 0u))))))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), min((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), (_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u))), ~ (~ ((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))))) | 0u))), clamp(_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), min((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), (_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u))), ~ (~ ((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))))) | 0u))), _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), min((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), (_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u))), ~ (~ ((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))))) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), min((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), (_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u))), ~ (~ ((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))))) | 0u))), 1u * (_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), min((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), (_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u))), ~ (~ ((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))))) | 0u))))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)))) >> (0u & 85954u)) | (subgroup_id * subgroup_size))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size) | _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), 1u * ((subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))), ((_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))))) | (subgroup_id * subgroup_size)) ^ 0u), min(_GLF_IDENTITY((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size), ((subgroup_id * subgroup_size) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u), (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u)) - 0u))))) | ((subgroup_id * subgroup_size) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u))), uint(_GLF_IDENTITY(uvec2(~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u))), 0u), uvec2(0u, 0u) | (uvec2(~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u))), 0u)))))) * subgroup_size), ((subgroup_id * subgroup_size)) + 0u))), (subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u * (subgroup_size), (1u * (subgroup_size)) | (_GLF_IDENTITY(1u * (subgroup_size), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(1u * (subgroup_size), (1u * (subgroup_size)) >> 0u))))))) | (subgroup_id * subgroup_size)))))))) | ((_GLF_IDENTITY((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size), min(_GLF_IDENTITY((subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id * subgroup_size, 1u * (subgroup_id * subgroup_size))), (_GLF_IDENTITY((subgroup_id * subgroup_size), min(_GLF_IDENTITY((subgroup_id * subgroup_size), 0u | ((subgroup_id * subgroup_size))), (subgroup_id * subgroup_size))) | (subgroup_id * subgroup_size)) | ((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))), (subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) | (subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))) / 1u))))) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) | 0u))), (_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) | 0u)))) ^ 0u)) | (subgroup_id * subgroup_size), min(_GLF_IDENTITY((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size), ((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)) | ((subgroup_id * subgroup_size) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(atomicAdd(num_workgroup, workgroup_id)) : _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))))), (subgroup_id) | (subgroup_id)) * subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), min((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), (_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u))), ~ (~ ((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))))) | 0u))), clamp(_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), min((subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), min(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))) | (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))), _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), (_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u))), ~ (~ ((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))))) | 0u))), _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), min((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), (_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u))), ~ (~ ((subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) | 0u)) | (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))) / 1u)))))) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), min((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)))))), (_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u))), ~ (~ ((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))))) | 0u))), 1u * (_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), min((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), (_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u))), ~ (~ ((subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))))) | 0u))))))) | (subgroup_id * subgroup_size))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size), ((_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size))))) | (subgroup_id * subgroup_size)) ^ 0u), min(_GLF_IDENTITY((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size), ((subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u))) | ((subgroup_id * subgroup_size) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u)))) * subgroup_size), ((subgroup_id * subgroup_size)) + 0u))), (subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u * (subgroup_size), (1u * (subgroup_size)) | (_GLF_IDENTITY(1u * (subgroup_size), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(1u * (subgroup_size), (1u * (subgroup_size)) >> 0u))))))) | (subgroup_id * subgroup_size)))))))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), bool(bool(! (false)))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bool(! (false))))), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), mat2(mat2(mat2(1.0)))) * (injectionSwitch)), max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bool(! (false))))), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) || false)), bool(bool(! (false))))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) || false))), (! (! (_GLF_IDENTITY(false, (false) || false)))) && true)))))), (_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ! (! ((_GLF_IDENTITY(false, (false) || false))))))))) && true), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) || false))), (! (! (_GLF_IDENTITY(false, (false) || false)))) && true))))))) && true), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (_GLF_IDENTITY(false, (false) || false)))))))))) || false)))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(min(workgroup_base, workgroup_base), uint(uvec3(_GLF_IDENTITY(min(workgroup_base, workgroup_base), (false ? _GLF_FUZZED(subgroup_local_id) : min(workgroup_base, workgroup_base))), 1u, 1u))), (_GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)), workgroup_base), uint(uvec3(_GLF_IDENTITY(min(workgroup_base, workgroup_base), (false ? _GLF_FUZZED(subgroup_local_id) : min(workgroup_base, workgroup_base))), 1u, 1u)))) | 0u)) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(uint(5u), uint(5u))))) | (subgroup_base)), max(_GLF_IDENTITY(subgroup_base, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) << (0u ^ 0u)))))) | (subgroup_base)), _GLF_IDENTITY(subgroup_base, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(uint(5u), uint(5u))))) | (subgroup_base)))) : _GLF_FUZZED(num_workgroup)), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(uint(5u), uint(5u))))) | (subgroup_base)), max(_GLF_IDENTITY(subgroup_base, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) << (0u ^ 0u)))))) | (subgroup_base)), _GLF_IDENTITY(subgroup_base, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(uint(5u), uint(5u))))) | (subgroup_base)))) : _GLF_FUZZED(num_workgroup)), clamp((true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(uint(5u), uint(5u))))) | (subgroup_base)), max(_GLF_IDENTITY(subgroup_base, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) << (0u ^ 0u)))))) | (subgroup_base)), _GLF_IDENTITY(subgroup_base, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(uint(5u), uint(5u))))) | (subgroup_base)))) : _GLF_FUZZED(num_workgroup)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(uint(5u), uint(5u))))) | (subgroup_base)), max(_GLF_IDENTITY(subgroup_base, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) << (0u ^ 0u)))))) | (subgroup_base)), _GLF_IDENTITY(subgroup_base, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(uint(5u), uint(5u))))) | (subgroup_base)))) : _GLF_FUZZED(num_workgroup)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(uint(5u), uint(5u))))) | (subgroup_base)), max(_GLF_IDENTITY(subgroup_base, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) << (0u ^ 0u)))))) | (subgroup_base)), _GLF_IDENTITY(subgroup_base, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(uint(5u), uint(5u))))) | (subgroup_base)))) : _GLF_FUZZED(num_workgroup)))), 0u, 1u, 1u), (true ? uvec4(_GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(uint(5u), uint(5u))))) | (subgroup_base)), max(_GLF_IDENTITY(subgroup_base, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) << (0u ^ 0u)))))) | (subgroup_base)), _GLF_IDENTITY(subgroup_base, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(uint(5u), uint(5u))))) | (subgroup_base)))) : _GLF_FUZZED(num_workgroup)), clamp((true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(uint(5u), uint(5u))))) | (subgroup_base)), max(_GLF_IDENTITY(subgroup_base, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) << (0u ^ 0u)))))) | (subgroup_base)), _GLF_IDENTITY(subgroup_base, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(uint(5u), uint(5u))))) | (subgroup_base)))) : _GLF_FUZZED(num_workgroup)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(uint(5u), uint(5u))))) | (subgroup_base)), max(_GLF_IDENTITY(subgroup_base, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) << (0u ^ 0u)))))) | (subgroup_base)), _GLF_IDENTITY(subgroup_base, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(uint(5u), uint(5u))))) | (subgroup_base)))) : _GLF_FUZZED(num_workgroup)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(uint(5u), uint(5u))))) | (subgroup_base)), max(_GLF_IDENTITY(subgroup_base, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) << (0u ^ 0u)))))) | (subgroup_base)), _GLF_IDENTITY(subgroup_base, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(uint(5u), uint(5u))))) | (subgroup_base)))) : _GLF_FUZZED(num_workgroup)))), 0u, 1u, 1u) : _GLF_FUZZED(uvec4(196643u, 5061u, 56364u, 130437u))))))), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(uint(uvec4(subgroup_base, 0u, 0u, 0u)), 0u ^ (_GLF_IDENTITY(uint(uvec4(subgroup_base, 0u, 0u, 0u)), (uint(uvec4(subgroup_base, 0u, 0u, 0u))) << (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (uint(5u)) >> 0u), uint(5u)))))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((true ? _GLF_IDENTITY(subgroup_base, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))) | (subgroup_base)) : _GLF_FUZZED(num_workgroup)), ((true ? _GLF_IDENTITY(subgroup_base, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))) | (subgroup_base)) : _GLF_FUZZED(num_workgroup))) | ((_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), ! (! (_GLF_IDENTITY(false || (true), ! (! (false || (true)))))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 1.0, 0.0)))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(true, false || (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))) ? _GLF_IDENTITY(subgroup_base, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))) | (subgroup_base)) : _GLF_FUZZED(num_workgroup)))))), _GLF_IDENTITY(uint(uint((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(uint(uvec4(subgroup_base, 0u, 0u, 0u)), 0u ^ (_GLF_IDENTITY(uint(uvec4(subgroup_base, 0u, 0u, 0u)), (uint(uvec4(subgroup_base, 0u, 0u, 0u))) << (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (uint(5u)) >> 0u), uint(5u)))))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((true ? _GLF_IDENTITY(subgroup_base, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))) | (subgroup_base)) : _GLF_FUZZED(num_workgroup)), ((true ? _GLF_IDENTITY(subgroup_base, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))) | (subgroup_base)) : _GLF_FUZZED(num_workgroup))) | ((_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), ! (! (_GLF_IDENTITY(false || (true), ! (! (false || (true)))))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 1.0, 0.0)))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(true, false || (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))) ? _GLF_IDENTITY(subgroup_base, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))) | (subgroup_base)) : _GLF_FUZZED(num_workgroup)))))))), (uint(uint((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(uint(uvec4(subgroup_base, 0u, 0u, 0u)), 0u ^ (_GLF_IDENTITY(uint(uvec4(subgroup_base, 0u, 0u, 0u)), (uint(uvec4(subgroup_base, 0u, 0u, 0u))) << (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (uint(5u)) >> 0u), uint(5u)))))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((true ? _GLF_IDENTITY(subgroup_base, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))) | (subgroup_base)) : _GLF_FUZZED(num_workgroup)), ((true ? _GLF_IDENTITY(subgroup_base, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))) | (subgroup_base)) : _GLF_FUZZED(num_workgroup))) | ((_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), ! (! (_GLF_IDENTITY(false || (true), ! (! (false || (true)))))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 1.0, 0.0)))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(true, false || (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))) ? _GLF_IDENTITY(subgroup_base, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))) | (subgroup_base)) : _GLF_FUZZED(num_workgroup))))))))) ^ 0u))) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u | ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1) % subgroup_size)), (subgroup_local_id + 1) % subgroup_size))), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)), ((((subgroup_local_id + 1) % subgroup_size))) | 0u) | 0u)) | (((subgroup_local_id + 1) % subgroup_size)));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(-492.593) : _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(-492.593) : _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(false, bool(bvec3(false, true, true))) || (true && (false))))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(64, _GLF_IDENTITY(0, 1 * (_GLF_IDENTITY(0, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false))))) ? _GLF_FUZZED(_GLF_IDENTITY(-53080, (-53080) ^ 0)) : 0)))) | _GLF_IDENTITY((64), ((64)) / 1)), 4);
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 if(_GLF_DEAD(false))
  return;
 subgroupBarrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch)))) - vec2(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-1222.0066)), bool(false))))), _GLF_IDENTITY(0.0, (0.0) - determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0))))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-15.42) : _GLF_IDENTITY(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), mix(float(_GLF_FUZZED(-8258.5360)), float(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), bool(true))))), (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(573.664) : _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(75.58, -1.1)), (_GLF_FUZZED(vec2(75.58, -1.1))) - vec2(0.0, 0.0)) : _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))))).y, injectionSwitch.y, injectionSwitch.y), max(clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), injectionSwitch.y, injectionSwitch.y))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch)))) - _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) / cos(vec2(0.0, 0.0)))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(4.3)))), (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(573.664) : _GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 0.0), vec4(sin(0.0), 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat4(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 0.0), vec4(sin(0.0), 0.0, 1.0, 0.0)), (dot(vec4(0.0, 0.0, determinant(mat4(1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 0.0), vec4(sin(_GLF_IDENTITY(0.0, 1.0 * (0.0))), 0.0, 1.0, 0.0))) + 0.0)), 1.0, 1.0, 1.0)), vec2(1.0, 1.0) * (vec2(mat3x2(injectionSwitch, _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-5.8))), 0.0)), _GLF_IDENTITY(0.0, (0.0) / 1.0))), determinant(mat4(1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(0.0, (0.0) - tan(0.0)), sqrt(0.0), 1.0, 1.0)), (false ? _GLF_FUZZED(6113.6030) : float(mat2(_GLF_IDENTITY(0.0, (0.0) - tan(0.0)), sqrt(0.0), 1.0, 1.0)))))), vec4(sin(0.0), 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 0.0), vec4(_GLF_IDENTITY(sin(0.0), max(sin(0.0), sin(0.0))), 0.0, 1.0, 0.0)), _GLF_IDENTITY((_GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 0.0), vec4(sin(0.0), 0.0, 1.0, 0.0)), (true ? dot(vec4(0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 0.0), vec4(sin(0.0), 0.0, 1.0, 0.0)) : _GLF_FUZZED(ceil(-75.85))))), max(_GLF_IDENTITY((_GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 0.0), vec4(sin(0.0), 0.0, 1.0, 0.0)), _GLF_IDENTITY((true ? dot(vec4(0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 0.0), vec4(sin(0.0), 0.0, 1.0, 0.0)) : _GLF_FUZZED(ceil(-75.85))), clamp((true ? dot(vec4(0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 0.0), vec4(sin(0.0), 0.0, 1.0, 0.0)) : _GLF_FUZZED(ceil(-75.85))), (true ? dot(vec4(0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 0.0), vec4(sin(0.0), 0.0, 1.0, 0.0)) : _GLF_FUZZED(ceil(-75.85))), (true ? dot(vec4(0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 0.0), vec4(sin(0.0), 0.0, 1.0, 0.0)) : _GLF_FUZZED(ceil(-75.85))))))), 0.0 + ((_GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 0.0), vec4(sin(0.0), 0.0, 1.0, 0.0)), (true ? dot(vec4(0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 0.0), vec4(sin(0.0), 0.0, 1.0, 0.0)) : _GLF_FUZZED(ceil(-75.85))))))), (_GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 0.0), vec4(sin(0.0), 0.0, 1.0, 0.0)), (true ? dot(vec4(0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 0.0), vec4(sin(0.0), 0.0, 1.0, 0.0)) : _GLF_FUZZED(ceil(-75.85))))))) + 0.0)), 1.0, _GLF_IDENTITY(1.0, (1.0) - tan(sqrt(0.0))), 1.0))))).y, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, (1.0) / 1.0))), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, 0.0, 1.0, 0.0))))), 0.0), vec4(sin(0.0), 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(_GLF_IDENTITY(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0))), (mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(mat2(1.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0))), 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), 0.0), vec4(sin(0.0), 0.0, _GLF_IDENTITY(1.0, cos(0.0) * (_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), mix(float(_GLF_FUZZED(642.865)), float((1.0)), bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, false)), (bool(bvec3(true, false, false))) || false))))) - 0.0))), 0.0)), (dot(vec4(0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(1.0), mix(float(_GLF_FUZZED(1139.3847)), float(_GLF_IDENTITY(float(1.0), (float(1.0)) - sqrt(0.0))), bool(true))), float(_GLF_FUZZED(-83.26)), bool(false))))), 1.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 0.0), vec4(sin(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0)))), 0.0, 1.0, 0.0))) + 0.0)), 1.0, 1.0, 1.0)), vec2(1.0, 1.0) * (vec2(mat3x2(injectionSwitch, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat4(1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-9578.9108) : 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 0.0), vec4(sin(0.0), 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_IDENTITY(determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), mix(float(determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), float(_GLF_FUZZED(vec2(1231.1741, 27.44).g)), bool(false))), 0.0), vec4(sin(0.0), 0.0, 1.0, 0.0)), (_GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 0.0), vec4(sin(0.0), 0.0, 1.0, 0.0)), clamp(dot(vec4(0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 0.0), vec4(sin(0.0), 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 0.0), vec4(sin(0.0), 0.0, 1.0, 0.0)), (dot(vec4(0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 0.0), vec4(sin(0.0), 0.0, 1.0, 0.0))) - 0.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 0.0), vec4(sin(0.0), 0.0, 1.0, 0.0)), (dot(vec4(0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 0.0), vec4(sin(0.0), 0.0, 1.0, 0.0))) / 1.0)))) + 0.0)), 1.0, 1.0, 1.0))))).y, float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat4(1.0, _GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(84.31)), clamp(float(_GLF_FUZZED(84.31)), _GLF_IDENTITY(float(_GLF_FUZZED(84.31)), mix(float(float(_GLF_FUZZED(84.31))), float(_GLF_FUZZED(389.777)), bool(false))), float(_GLF_FUZZED(84.31)))), float(0.0), bool(true))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), min(max(1.0, 1.0), max(1.0, 1.0)))), 0.0, 1.0, 0.0, 1.0, 1.0)), 0.0), vec4(sin(0.0), 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 0.0, 1.0, 1.0)), min(float(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat2(1.0, 0.0, 1.0, 1.0)), clamp(float(mat2(1.0, 0.0, 1.0, 1.0)), float(mat2(1.0, 0.0, 1.0, 1.0)), float(mat2(1.0, 0.0, 1.0, 1.0))))))))), 0.0), vec4(sin(0.0), 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), _GLF_IDENTITY((_GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 0.0), vec4(sin(0.0), 0.0, 1.0, 0.0)), min(dot(vec4(0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-301.396)), float(1.0), bool(true))))), 0.0), vec4(sin(0.0), 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 0.0), vec4(sin(0.0), _GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 0.0))), 1.0, 0.0)), 1.0 * (dot(vec4(0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 0.0), vec4(sin(0.0), 0.0, 1.0, 0.0))))))), ((_GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 0.0), vec4(sin(0.0), 0.0, 1.0, 0.0)), min(dot(vec4(0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-301.396)), float(1.0), bool(true))))), 0.0), vec4(sin(0.0), 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 0.0), vec4(sin(0.0), _GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 0.0))), 1.0, 0.0)), 1.0 * (dot(vec4(0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 0.0), vec4(sin(0.0), 0.0, 1.0, 0.0)))))))) + _GLF_ZERO(0.0, injectionSwitch.x)) + 0.0)), 1.0, 1.0, 1.0)), vec2(1.0, 1.0) * (vec2(mat3x2(injectionSwitch, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x4(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), float(_GLF_FUZZED((-1.8 + 3.5))), bool(false))), log(1.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))))), 1.0 * (float(mat3x4(1.0, 1.0, log(1.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), vec2(0.0, 0.0))), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0)))))))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))), 0.0), vec4(_GLF_IDENTITY(sin(0.0), clamp(sin(0.0), sin(0.0), sin(0.0))), 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(_GLF_IDENTITY(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(-5785.4164), min(true ? 1.0 : _GLF_FUZZED(-5785.4164), _GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(-5785.4164), (true ? 1.0 : _GLF_FUZZED(-5785.4164)) / 1.0))))))), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0), transpose(transpose(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-5785.4164))))), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), 0.0), vec4(sin(0.0), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(61.95)), bool(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))), 0.0)), 1.0, 0.0)), _GLF_IDENTITY((dot(vec4(0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) + sin(0.0)), 1.0, 1.0)), 0.0), vec4(sin(0.0), 0.0, 1.0, 0.0))) + 0.0, max((dot(vec4(0.0, 0.0, determinant(mat4(_GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 1.0, 1.0, round(length(normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), abs(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)))), determinant(mat4(1.0, 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 1.0, exp(0.0), 1.0))), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(24.89)), float(1.0), bool(true))), 1.0)))), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 0.0), vec4(sin(0.0), 0.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED((8.3 - -452.030)))), _GLF_IDENTITY(1.0, float(vec2(1.0, 0.0))))), _GLF_IDENTITY(0.0, (0.0) / 1.0)))) + 0.0, (dot(vec4(0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 0.0), _GLF_IDENTITY(vec4(sin(0.0), 0.0, 1.0, 0.0), mix(vec4(_GLF_FUZZED((true ? 880.708 : -8658.1810)), _GLF_FUZZED(-374.819), _GLF_FUZZED(86.24), (vec4(sin(0.0), 0.0, 1.0, 0.0))[3]), vec4((vec4(sin(0.0), 0.0, 1.0, 0.0))[0], (vec4(sin(0.0), 0.0, 1.0, 0.0))[1], (vec4(sin(0.0), 0.0, 1.0, 0.0))[2], _GLF_FUZZED(-848.597)), bvec4(true, true, true, false))))) + 0.0)))), 1.0, 1.0, 1.0))))).y), (float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec3(1.0, 1.0, 0.0), clamp(vec3(1.0, 1.0, 0.0), vec3(1.0, 1.0, 0.0), vec3(1.0, 1.0, 0.0))))))), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(1605.2708)), bool(false))), _GLF_IDENTITY(1.0, 1.0 * (1.0)))), 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) / 1.0))), 1.0, 0.0, 1.0, 1.0)), 0.0), vec4(sin(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-249.135)), float(_GLF_IDENTITY(0.0, (0.0) * 1.0)), bool(true)))), 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 0.0), vec4(sin(0.0), 0.0, 1.0, 0.0)), (dot(vec4(0.0, 0.0, determinant(mat4(1.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * mat2(1.0)))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / cos(0.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 1.0, 1.0))))), 0.0), vec4(_GLF_IDENTITY(sin(0.0), mix(float(_GLF_FUZZED((false ? -5.7 : -912.039))), float(_GLF_IDENTITY(sin(0.0), min(sin(0.0), _GLF_IDENTITY(_GLF_IDENTITY(sin(0.0), max(sin(0.0), sin(0.0))), min(sin(0.0), sin(0.0)))))), bool(true))), 0.0, 1.0, 0.0))) + 0.0)), 1.0, 1.0, 1.0)), (vec2(mat3x2(injectionSwitch, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec3(1.0, 1.0, 0.0), clamp(vec3(1.0, 1.0, 0.0), vec3(1.0, 1.0, 0.0), vec3(1.0, 1.0, 0.0))))))), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(1605.2708)), bool(false))), _GLF_IDENTITY(1.0, 1.0 * (1.0)))), 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) / 1.0))), 1.0, 0.0, 1.0, 1.0)), 0.0), vec4(sin(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-249.135)), float(_GLF_IDENTITY(0.0, (0.0) * 1.0)), bool(true)))), 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 0.0), vec4(sin(0.0), 0.0, 1.0, 0.0)), (dot(vec4(0.0, 0.0, determinant(mat4(1.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * mat2(1.0)))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / cos(0.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 1.0, 1.0))))), 0.0), vec4(_GLF_IDENTITY(sin(0.0), mix(float(_GLF_FUZZED((false ? -5.7 : -912.039))), float(_GLF_IDENTITY(sin(0.0), min(sin(0.0), _GLF_IDENTITY(_GLF_IDENTITY(sin(0.0), max(sin(0.0), sin(0.0))), min(sin(0.0), sin(0.0)))))), bool(true))), 0.0, 1.0, 0.0))) + 0.0)), 1.0, 1.0, 1.0))) * mat2(1.0)), vec2(1.0, 1.0) * _GLF_IDENTITY((vec2(mat3x2(injectionSwitch, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-2051.5165))), 0.0, 1.0, 0.0, 1.0, 1.0)), 0.0), vec4(sin(0.0), 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 0.0), vec4(sin(0.0), 0.0, 1.0, 0.0)), (dot(vec4(0.0, 0.0, _GLF_IDENTITY(determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-65.01)), float(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, float(mat3x4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))), bool(true))), 0.0, 1.0, 1.0)), max(determinant(mat4(1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / sqrt(1.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-13.07)), float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), bool(true))), 0.0, 1.0, 1.0)), _GLF_IDENTITY(determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), min(determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(float(-67992))), float(_GLF_IDENTITY(1.0, 0.0 + (1.0))), bool(true))), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))))), 0.0), vec4(sin(0.0), 0.0, 1.0, 0.0))) + 0.0)), 1.0, 1.0, 1.0))), ((vec2(mat3x2(injectionSwitch, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-2051.5165))), 0.0, 1.0, 0.0, 1.0, 1.0)), 0.0), vec4(sin(0.0), 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 0.0), vec4(sin(0.0), 0.0, 1.0, 0.0)), (dot(vec4(0.0, 0.0, _GLF_IDENTITY(determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-65.01)), float(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, float(mat3x4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))), bool(true))), 0.0, 1.0, 1.0)), max(determinant(mat4(1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / sqrt(1.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-13.07)), float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), bool(true))), 0.0, 1.0, 1.0)), _GLF_IDENTITY(determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), min(determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(float(-67992))), float(_GLF_IDENTITY(1.0, 0.0 + (1.0))), bool(true))), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))))), 0.0), vec4(sin(0.0), 0.0, 1.0, 0.0))) + 0.0)), 1.0, 1.0, 1.0)))) * mat2(1.0)))).y)) - 0.0))))), injectionSwitch.y), max(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, _GLF_IDENTITY(injectionSwitch.y, float(vec2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0))))))))), injectionSwitch.y, injectionSwitch.y)))), (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch)))) - vec2(0.0, 0.0)), clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch)))) - vec2(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch)))) - vec2(0.0, 0.0)), max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch)))) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch)))) - vec2(0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch)))) - vec2(0.0, 0.0)))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) / _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, exp(0.0))), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, exp(0.0))))), clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, min(0, 0))], injectionSwitch[1])).y, injectionSwitch.y, injectionSwitch.y), (false ? _GLF_FUZZED(67.00) : clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(573.664) : _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-56.10)), float(injectionSwitch.y), bool(true))), injectionSwitch.y), max(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), max(0.0, 0.0))))))))))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(0.7, 621.769)) : injectionSwitch)).y))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, injectionSwitch.x), clamp(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(! ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), vec2(vec2(injectionSwitch)))) - _GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), vec2(0.0, 0.0)))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(_GLF_IDENTITY(573.664, min(573.664, 573.664))) : _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), max(clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), max(_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(_GLF_IDENTITY(573.664, min(573.664, 573.664))) : _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), max(clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), _GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(_GLF_IDENTITY(573.664, min(573.664, 573.664))) : _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), max(clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))), max((_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(_GLF_IDENTITY(573.664, min(573.664, 573.664))) : _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), max(clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))), (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(_GLF_IDENTITY(573.664, min(_GLF_IDENTITY(573.664, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(573.664, mix(float(573.664), float(_GLF_FUZZED(50.80)), bool(false))), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, abs(0.0), 0.0, abs(0.0), 0.0), (false ? _GLF_FUZZED(mat4x3(489.593, -91.12, -0.2, 1.8, 9.7, -9.8, 14.58, 9.6, 3.5, -46.94, 7557.2082, -8591.8403)) : mat4x3(_GLF_IDENTITY(573.664, mix(float(573.664), float(_GLF_FUZZED(50.80)), bool(false))), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, abs(0.0), 0.0, abs(0.0), 0.0))))), 573.664))) : _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)), (injectionSwitch))) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat3x2((injectionSwitch) * mat2(1.0), 1.0, 0.0, 1.0, 1.0))))))) * mat2(1.0)).y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), max(clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)))), false), bvec2(bvec3(bvec2(! ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), vec2(vec2(injectionSwitch)))) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(_GLF_IDENTITY(573.664, min(573.664, 573.664))) : _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), max(clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)).y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))), max((_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(573.664, float(_GLF_IDENTITY(mat3x2(573.664, 0.0, 1.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat3x2(-8.5, -8.6, -4331.0629, -34.12, 48.85, 76.47)) : mat3x2(573.664, 0.0, 1.0, 0.0, 0.0, 1.0))))), min(573.664, 573.664))) : _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))), float(_GLF_FUZZED(-8800.2323)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), max(clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))), (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(_GLF_IDENTITY(573.664, min(573.664, 573.664))) : _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), max(clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)))), false), false))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), ! (! (false)))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, max(injectionSwitch.y, injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec2(! (false), true)), bool(bvec4(bool(bvec2(! (false), true)), false, true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y) && true)))))
  return;
 atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, 1u * (read)), 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(true ? 64 : _GLF_IDENTITY(_GLF_FUZZED(-56335), (_GLF_FUZZED(-56335)) | (_GLF_FUZZED(-56335))), 1 * (true ? 64 : _GLF_FUZZED(-56335))))), 4);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.3)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), mix(float(_GLF_FUZZED(-3.3)), float(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(float(subgroup_local_id)) : injectionSwitch.y)), max(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.3)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.3)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)))) && true), _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))) && true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(true, true && (true))) && true, true), bvec2(bvec2(bvec2((_GLF_IDENTITY(true, true && (true))) && true, true))))), ! (! (bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(true, true && (true))) && true, true), bvec2(bvec2(bvec2((_GLF_IDENTITY(true, true && (true))) && true, true)))))))))), true && (! (_GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))) && true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(true, true && (true))) && true, true), bvec2(bvec2(bvec2((_GLF_IDENTITY(true, true && (true))) && true, true))))), ! (! (bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(true, true && (true))) && true, true), bvec2(bvec2(bvec2((_GLF_IDENTITY(true, true && (true))) && true, true))))))))))))))) && (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(inversesqrt(-7.5)) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))), (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)) && true), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true) && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && (false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(95.94)), vec2(_GLF_FUZZED(-7.7), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(((injectionSwitch)[1]) - 0.0, clamp(((injectionSwitch)[1]) - 0.0, _GLF_IDENTITY(((injectionSwitch)[1]) - 0.0, float(mat3(((injectionSwitch)[1]) - 0.0, 0.0, 0.0, 1.0, length(0.0), 0.0, 0.0, 0.0, 1.0))), ((injectionSwitch)[1]) - 0.0)))))), bvec2(false, true))).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) && true) && true))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) || false)), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY((false), ((false)) || false)))), _GLF_IDENTITY(bool(bvec3(bool(bool(! (_GLF_IDENTITY((false), ((false)) || false)))), true, false)), false || (bool(bvec3(bool(bool(! (_GLF_IDENTITY((false), ((false)) || false)))), true, false)))))))) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)) / 1.0), true, false)))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))), (bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(2.1, -3.2)))))).y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false)), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)), true && (bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), bool(bvec4((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, true && (false)), true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, true && (false)), true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), true, true))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-9.5, -4548.3643)))), injectionSwitch)).x < injectionSwitch.y))), true))))), true)))), bool(bvec2(! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((901.961 - 1.0))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), (bool((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))) && true))), true))))))), false, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), vec2(vec2(injectionSwitch))).x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, tan(0.0), 1.0), (true ? mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, tan(0.0), 1.0) : _GLF_FUZZED(mat2x4(-2.3, 5.1, -4.0, -209.860, -4133.9620, 5735.6622, 53.24, 6.6)))))).y))))) && true), ! (! (_GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-532.479)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y, true, false, true))))))), (bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(4.0), max(_GLF_FUZZED(4.0), _GLF_FUZZED(4.0))), _GLF_FUZZED(4.4)), bvec2(false, false))).x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), _GLF_IDENTITY(true && (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-7559.1678), _GLF_FUZZED((5.9 + -869.557))), bvec2(false, false))).y, (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(5.0)))) - 0.0)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bool(_GLF_IDENTITY(bool(bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) < injectionSwitch.y)), true))), true && (bool(bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))), true), bvec2(bvec2(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bool(_GLF_IDENTITY(bool(bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) < injectionSwitch.y)), true))), true && (bool(bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))), true))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true && (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / vec2(1.0, 1.0))).x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), bool(bvec4((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), false, true, false))), bool(bvec2(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec4(bvec3(true, true, true), false))))), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-82.39) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y)), _GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, false || (true)))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))), true)))), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec2(true, true))))))))), _GLF_IDENTITY(true, ! (! (true))) && (true && _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true))), (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), bool(bvec2(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - log(vec2(1.0, 1.0))).x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true)))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true))), (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), bool(bvec2(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - log(vec2(1.0, 1.0))).x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true)))), bool(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(65.57)))), _GLF_TRUE(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true))), (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), bool(bvec2(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) * sqrt(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), injectionSwitch))) - log(vec2(1.0, 1.0))).x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(tanh(injectionSwitch)) : injectionSwitch)).y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true)))), true))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8.0), _GLF_FUZZED(857.830)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) : _GLF_FUZZED(vec2(-372.420, 4.9)))).y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-420.993, 4839.3333)))).y))))), (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(true && (_GLF_IDENTITY(true, (true) && true)), (true && (_GLF_IDENTITY(true, (true) && true))) && true)), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), bool(bvec2(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true)))))), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - log(vec2(1.0, 1.0))).x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) < injectionSwitch.y)), true)))), true)))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true))), (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))), true)))), bool(bvec2(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - log(vec2(1.0, 1.0))).x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true)))), bool(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(65.57)))), _GLF_TRUE(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true))), (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) * sqrt(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), injectionSwitch))) - log(vec2(1.0, 1.0))).x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(tanh(injectionSwitch)) : injectionSwitch)).y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) * sqrt(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), injectionSwitch))) - log(vec2(1.0, 1.0))).x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(tanh(injectionSwitch)) : injectionSwitch)).y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), ! (! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), false, true)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) * sqrt(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), injectionSwitch))) - log(vec2(1.0, 1.0))).x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(tanh(injectionSwitch)) : injectionSwitch)).y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))))), true)))), true))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8.0), _GLF_FUZZED(857.830)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec2(injectionSwitch.y, _GLF_ZERO(0.0, injectionSwitch.x)), (vec2(injectionSwitch.y, _GLF_ZERO(0.0, injectionSwitch.x))) - sin(vec2(0.0, 0.0)))))))))) : _GLF_IDENTITY(_GLF_FUZZED(vec2(-372.420, 4.9)), clamp(_GLF_FUZZED(vec2(-372.420, 4.9)), _GLF_IDENTITY(_GLF_FUZZED(vec2(-372.420, 4.9)), (false ? _GLF_FUZZED(vec2(-6.5, 609.350)) : _GLF_FUZZED(vec2(-372.420, 4.9)))), _GLF_IDENTITY(_GLF_FUZZED(vec2(-372.420, 4.9)), _GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(_GLF_FUZZED(vec2(-372.420, 4.9)), mix(vec2((_GLF_FUZZED(vec2(-372.420, 4.9)))[0], (_GLF_FUZZED(vec2(-372.420, 4.9)))[1]), vec2(_GLF_FUZZED(-9828.0812), _GLF_FUZZED(4.2)), bvec2(false, false))), 0.0, 1.0)), vec2(mat3x2(vec2(vec4(_GLF_IDENTITY(_GLF_FUZZED(vec2(-372.420, 4.9)), mix(vec2((_GLF_FUZZED(vec2(-372.420, 4.9)))[0], (_GLF_FUZZED(vec2(-372.420, 4.9)))[1]), vec2(_GLF_FUZZED(-9828.0812), _GLF_FUZZED(4.2)), bvec2(false, false))), 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0)))))))).y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)) : _GLF_FUZZED(vec2(-420.993, 4839.3333)))).y)))))) && true))), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true && (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(130.907) : injectionSwitch.y)))), true)))), bool(bvec2(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true)))), true && (true && (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), mix(vec2(_GLF_FUZZED(vec2(-299.768, -2.8).t), _GLF_FUZZED(-5.2)), vec2(((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))[0], ((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))[1]), bvec2(true, true))))) - vec2(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) + 0.0), _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-9560.4178) : 0.0)))))), injectionSwitch)).x < injectionSwitch.y)), true)))), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y) && true)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), vec2(mat2(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), min(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))), 1.0, 1.0)))).y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true)))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)), false, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), bool(bvec2(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true && (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), bool(bvec2(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true)))), false, false), bvec3(bvec4(bvec3(true && (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))), float(_GLF_FUZZED(6480.3999)), bool(false))) > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true)))), false, false), true)))), true && (bool(_GLF_IDENTITY(bvec3(true && (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)), ! (_GLF_IDENTITY(! (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))), false || (! (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)))))))))), false, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), bool(bvec2(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true)))), false, false), bvec3(bvec4(bvec3(true && (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))), true)))), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y), true))), false, false, false)))) && true), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true)))), false, false), true))))))), true && (true && (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(vec4(_GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 0.0, 0.0, 1.0, abs(0.0), 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false))))), true, true)), (bool(bvec3(_GLF_IDENTITY(true, false || (true)), true, true))) || false)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) - vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), injectionSwitch)).x < injectionSwitch.y)), true)))), bool(bvec2(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))), true)))), true)))))), _GLF_IDENTITY(true, (true) && true)), true, false))), true, true)))))))), false, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x > injectionSwitch.y), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x > injectionSwitch.y)))), ! _GLF_IDENTITY((! (bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bool((! (bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x > injectionSwitch.y)))))))), ! (! (bool(bool((! (bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x > injectionSwitch.y)))))))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true)))))))) || false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false, false))) && true)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(false, (false) && true), false, true))))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
