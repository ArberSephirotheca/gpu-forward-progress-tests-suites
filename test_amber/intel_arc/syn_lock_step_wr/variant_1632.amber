#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_4 {
 mat4 _f0;
 mat4x3 _f1;
 mat2 _f2;
 uvec2 _f3;
} ;

struct _GLF_struct_3 {
 mat4 _f0;
} ;

struct _GLF_struct_2 {
 mat3x4 _f0;
 int _f1;
 mat4x3 _f2;
 uint _f3;
} ;

struct _GLF_struct_5 {
 vec3 _f0;
 _GLF_struct_2 _f1;
 _GLF_struct_3 _f2;
 _GLF_struct_4 _f3;
} ;

struct _GLF_struct_0 {
 bvec3 _f0;
 uint _f1;
 mat3x4 _f2;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
 mat2x4 _f1;
} ;

struct _GLF_struct_6 {
 _GLF_struct_1 _f0;
 uint read;
 mat2x4 _f1;
 _GLF_struct_5 _f2;
 ivec4 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) || false, (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) || false, ! (! ((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))))) || _GLF_IDENTITY(false, bool(bvec3(false, false, true)))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) || false, ! (! ((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))))) || _GLF_IDENTITY(false, bool(bvec3(false, false, true)))))), true, true, false)))) || false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? _GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) + 0.0) : _GLF_FUZZED(-364.731))), injectionSwitch[1])).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), bool(bvec4(false, true, false, false)))) || false), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(injectionSwitch.y, 0.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))))), clamp(float(mat3(injectionSwitch.y, 0.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), float(mat3(injectionSwitch.y, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) * 1.0), exp(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, abs(1.0), 1.0, 0.0, log(1.0)), mat3x2(mat4(mat3x2(injectionSwitch, abs(1.0), 1.0, 0.0, log(1.0))))))).y, 0.0, exp(0.0), 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6876.4781) : _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, 1.0, 1.0, 1.0, 1.0)))) + 0.0))), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6778.5302)), float(0.0), bool(true))))), min(float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, abs(1.0), 1.0, 0.0, log(1.0)), mat3x2(mat4(mat3x2(injectionSwitch, abs(1.0), 1.0, 0.0, log(1.0))))))).y, 0.0, exp(0.0), 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6876.4781) : _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, 1.0, 1.0, 1.0, 1.0)))) + 0.0))), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6778.5302)), float(0.0), bool(true))))), float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, abs(1.0), 1.0, 0.0, log(1.0)), mat3x2(mat4(mat3x2(injectionSwitch, abs(1.0), 1.0, 0.0, log(1.0))))))).y, 0.0, exp(0.0), 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6876.4781) : _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, 1.0, 1.0, 1.0, 1.0)))) + 0.0))), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6778.5302)), float(0.0), bool(true)))))))))))), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false, true))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 1.0, 0.0, determinant(mat3(length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, cos(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, determinant(mat3(sin(0.0), 1.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0))))).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 1.0, 0.0, determinant(mat3(length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, cos(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, determinant(mat3(sin(0.0), 1.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0))))).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(bvec2(_GLF_DEAD(false), false)))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(bvec2(_GLF_DEAD(false), false)))), true))))))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(bvec2(_GLF_DEAD(false), false)))), true)))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false)))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5.3) : injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((false ? _GLF_FUZZED(uvec3(54537u, 65551u, 59174u)) : gl_NumWorkGroups), ((false ? _GLF_FUZZED(uvec3(54537u, 65551u, 59174u)) : gl_NumWorkGroups)) - uvec3(0u, 0u, 0u))), gl_NumWorkGroups)).x, max(_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(uvec3(gl_NumWorkGroups), clamp(uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups))))))), _GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(54537u, 65551u, 59174u)) : gl_NumWorkGroups)), gl_NumWorkGroups)).x, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(54537u, 65551u, 59174u)) : gl_NumWorkGroups)), gl_NumWorkGroups)).x, uint(uvec2(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(54537u, 65551u, 59174u)) : gl_NumWorkGroups)), gl_NumWorkGroups)).x, 1u)))));
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, max(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), gl_WorkGroupSize.x))) - 0u)));
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, true)), (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, true)), true && (bool(bvec3(_GLF_DEAD(false), false, true))))) || false)))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) * uvec3(1u, 1u, 1u)), clamp(_GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) * uvec3(1u, 1u, 1u)), _GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) * uvec3(1u, 1u, 1u)), _GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) * uvec3(1u, 1u, 1u)))))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, true, true)))), false || (bool(bool(false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))), _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))) || false, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))), _GLF_IDENTITY(((_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))), ! (! (_GLF_IDENTITY(((_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(((_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))), ! (! (((_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))))))), ! (! (bool(_GLF_IDENTITY(((_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))), ! (! (((_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))))))))))))))) && true) || false))))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))), (_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(false, false || (false)) || (bool(bool(false))))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), false || (false)) || (bool(bool(false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(false)))))), false || (_GLF_IDENTITY(bool(bool(false)), true && (_GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false)))))))))) || false)))), false, false, _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, true, true))))), bool(_GLF_IDENTITY(bvec3(bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(_GLF_IDENTITY(false, (false) || false))))), ! (! (_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(_GLF_IDENTITY(false, (false) || false)))))))), _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))) || false, bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))) || false, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))), bool(bvec3((_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))), true, true))))), ! (! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))), bool(bvec3((_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))), true, true))))))))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false) || false, false || (_GLF_IDENTITY((false) || false, bool(bool((false) || false))))), ! (! (_GLF_IDENTITY((false) || false, false || (_GLF_IDENTITY((false) || false, bool(bool((false) || false)))))))), ! (! (_GLF_IDENTITY((false) || false, false || (_GLF_IDENTITY((false) || false, bool(bool((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))) || false)))))))))) && true)))), false))))), false, false, _GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), ! (! (_GLF_IDENTITY(! (false), (! (false)) || false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec4((! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(bool(bvec4((! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (bool(bool(bool(bvec4((! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))) || false)), false, true, false)), bool(bvec4(bool(bvec4((_GLF_IDENTITY(! (false), (! (false)) || false)), false, true, false)), false, false, true))))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))) || _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) || false))), bool(bvec4(bool(bool(_GLF_IDENTITY(false, (false) || false))), false, false, true))))))), true && _GLF_IDENTITY(((bool(bool(_GLF_IDENTITY(false, (false) || false))))), _GLF_IDENTITY(bool(bvec2(((bool(bool(_GLF_IDENTITY(false, (false) || false))))), true)), bool(_GLF_IDENTITY(bool(bool(bvec2(((bool(bool(_GLF_IDENTITY(false, (false) || false))))), true))), (bool(bool(bvec2(((bool(bool(_GLF_IDENTITY(false, (false) || false))))), true)))) && true)))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(bool(bool(false)), false || (_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && _GLF_IDENTITY(true, true && (true)))))) || false, bool(bvec3((_GLF_IDENTITY(bool(bool(false)), false || (_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && _GLF_IDENTITY(true, true && (true)))))) || false, true, true))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(bool(bool(false)), false || _GLF_IDENTITY(_GLF_IDENTITY((bool(bool(false))), ! (! ((bool(bool(false)))))), ! (! _GLF_IDENTITY(((bool(bool(false)))), bool(bvec3(((bool(bool(false)))), true, false))))))) || false, ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), false || _GLF_IDENTITY((bool(bool(false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((bool(bool(false))), true, false), bvec3(bvec4(bvec3((bool(bool(false))), true, false), true)))), true && (bool(_GLF_IDENTITY(bvec3((bool(bool(false))), true, false), bvec3(bvec4(bvec3((bool(bool(false))), true, false), true)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), false || _GLF_IDENTITY((bool(bool(false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))), _GLF_IDENTITY(true, true && (true)), false), bvec3(bvec4(bvec3((bool(bool(false))), true, false), true)))), _GLF_IDENTITY(true && (bool(_GLF_IDENTITY(bvec3((bool(bool(false))), true, false), bvec3(bvec4(bvec3((bool(bool(false))), true, false), true))))), true && (_GLF_IDENTITY(true && (bool(_GLF_IDENTITY(bvec3((bool(bool(false))), true, false), bvec3(bvec4(bvec3((bool(bool(false))), true, false), true))))), ! (! (true && (bool(_GLF_IDENTITY(bvec3((bool(bool(false))), true, false), bvec3(bvec4(bvec3((bool(bool(false))), true, false), true))))))))))))), bool(bool(_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(false, true && (false)) || _GLF_IDENTITY((bool(bool(false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((bool(bool(false))), true, false), bvec3(bvec4(bvec3((bool(bool(false))), true, false), true)))), true && (bool(_GLF_IDENTITY(bvec3((bool(bool(false))), true, false), bvec3(bvec4(bvec3((bool(bool(false))), true, false), true)))))))))))) && true)) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), ! (! _GLF_IDENTITY((bool(bvec3(false, true, true))), ! (_GLF_IDENTITY(! ((bool(bvec3(false, true, true)))), ! (! (! ((bool(bvec3(false, true, true))))))))))))) || false)) && true)))), false))))), false, _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false)), bool(bvec2(bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8931.6774)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) || false))), bool(bvec4(bool(bool(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))), _GLF_IDENTITY(false, ! (! (false))), false, true))))))), true && _GLF_IDENTITY(((bool(bool(_GLF_IDENTITY(false, (false) || false))))), _GLF_IDENTITY(bool(bvec2(((_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) || false))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) || false))), (bool(bool(_GLF_IDENTITY(false, (false) || false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true)), bool(_GLF_IDENTITY(bool(bool(bvec2(((bool(bool(_GLF_IDENTITY(false, (false) || false))))), true))), (_GLF_IDENTITY(bool(bool(bvec2(((bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, false, true))), (false) || false))))), true))), ! (! (bool(bool(bvec2(((bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, false, true))), (false) || false))))), true))))))) && true)))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(bool(bool(false)), false || (_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && _GLF_IDENTITY(true, true && (true)))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(bool(bool(false)), false || (_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && _GLF_IDENTITY(true, true && (true)))))), bool(bvec3((_GLF_IDENTITY(bool(bool(false)), false || (_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && _GLF_IDENTITY(true, true && (true)))))), false, false)))))) || false, bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(bool(bool(false)), false || _GLF_IDENTITY((bool(bool(false))), ! (! ((bool(bool(false)))))))) || false, ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), false || _GLF_IDENTITY((bool(bool(false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((bool(bool(false))), true, false), bvec3(bvec4(bvec3((bool(bool(_GLF_IDENTITY(false, false || (false))))), true, false), true)))), true && (bool(_GLF_IDENTITY(bvec3((bool(bool(false))), true, false), bvec3(bvec4(bvec3((bool(bool(false))), true, false), true)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), false || _GLF_IDENTITY((bool(bool(false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((bool(bool(false))), true, false), bvec3(bvec4(bvec3((bool(bool(false))), true, false), true)))), true && (bool(_GLF_IDENTITY(bvec3((bool(bool(false))), true, false), bvec3(bvec4(bvec3((bool(_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), false || (bool(false))))))), true, false), true)))))))), bool(bool(_GLF_IDENTITY(bool(bool(false)), false || _GLF_IDENTITY((bool(bool(false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((bool(bool(false))), true, false), bvec3(bvec4(bvec3((bool(bool(false))), true, false), true)))), true && (bool(_GLF_IDENTITY(bvec3((bool(bool(false))), true, false), bvec3(bvec4(bvec3((bool(bool(false))), true, false), true)))))))))))) && true)) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), ! (! (bool(bvec3(false, true, true))))))) || false)) && true)))), false))))), false, _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false)), true))), true, false))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))) || false)))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), ! (! (bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, (true) && true)))))), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), ! (! (bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, (true) && true)))))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, true)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-113.873))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(4056.0280), _GLF_IDENTITY(clamp(_GLF_FUZZED(4056.0280), _GLF_FUZZED(4056.0280), _GLF_FUZZED(4056.0280)), min(_GLF_IDENTITY(clamp(_GLF_FUZZED(4056.0280), _GLF_FUZZED(4056.0280), _GLF_FUZZED(4056.0280)), (true ? clamp(_GLF_FUZZED(4056.0280), _GLF_FUZZED(4056.0280), _GLF_FUZZED(4056.0280)) : _GLF_FUZZED(-73.33))), clamp(_GLF_FUZZED(4056.0280), _GLF_FUZZED(4056.0280), _GLF_FUZZED(4056.0280))))), max(_GLF_IDENTITY(_GLF_FUZZED(4056.0280), _GLF_IDENTITY(clamp(_GLF_FUZZED(4056.0280), _GLF_FUZZED(4056.0280), _GLF_FUZZED(4056.0280)), min(_GLF_IDENTITY(clamp(_GLF_FUZZED(4056.0280), _GLF_FUZZED(4056.0280), _GLF_FUZZED(4056.0280)), (true ? clamp(_GLF_FUZZED(4056.0280), _GLF_FUZZED(4056.0280), _GLF_FUZZED(4056.0280)) : _GLF_FUZZED(-73.33))), clamp(_GLF_FUZZED(4056.0280), _GLF_FUZZED(4056.0280), _GLF_FUZZED(4056.0280))))), _GLF_IDENTITY(_GLF_FUZZED(4056.0280), _GLF_IDENTITY(clamp(_GLF_FUZZED(4056.0280), _GLF_FUZZED(4056.0280), _GLF_FUZZED(4056.0280)), min(_GLF_IDENTITY(clamp(_GLF_FUZZED(4056.0280), _GLF_FUZZED(4056.0280), _GLF_FUZZED(4056.0280)), (true ? clamp(_GLF_FUZZED(4056.0280), _GLF_FUZZED(4056.0280), _GLF_FUZZED(4056.0280)) : _GLF_FUZZED(-73.33))), clamp(_GLF_FUZZED(4056.0280), _GLF_FUZZED(4056.0280), _GLF_FUZZED(4056.0280))))))) : injectionSwitch.x)) > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_IDENTITY(_GLF_FUZZED(4056.0280), clamp(_GLF_FUZZED(4056.0280), _GLF_FUZZED(4056.0280), _GLF_FUZZED(4056.0280))) : injectionSwitch.x)) > injectionSwitch.y), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), false))))) ? _GLF_IDENTITY(_GLF_FUZZED(4056.0280), clamp(_GLF_FUZZED(4056.0280), _GLF_FUZZED(_GLF_IDENTITY(4056.0280, clamp(_GLF_IDENTITY(4056.0280, min(4056.0280, 4056.0280)), _GLF_IDENTITY(4056.0280, (_GLF_IDENTITY(4056.0280, min(4056.0280, 4056.0280))) / 1.0), _GLF_IDENTITY(4056.0280, (false ? _GLF_FUZZED(939.843) : 4056.0280))))), _GLF_FUZZED(4056.0280))) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, 1.0)), (vec2(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, 1.0))) - vec2(0.0, 0.0))).x)) > injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)) + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ ((true ? 151156u : 18176u) & 0u)), (workgroup_base + subgroup_base + subgroup_local_id) + 0u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(virtual_gid) : workgroup_base))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(virtual_gid) : workgroup_base))), (~ (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(virtual_gid) : workgroup_base)))) >> 0u), _GLF_IDENTITY(min(~ (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, 1u * (virtual_gid))) << 0u)) : workgroup_base))), ~ (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(virtual_gid) : workgroup_base)))), 0u | (min(~ (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u), workgroup_base))))), ~ (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(virtual_gid) : workgroup_base)))))))))), min((_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(virtual_gid) : workgroup_base))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(virtual_gid) : workgroup_base))), (~ (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(virtual_gid) : workgroup_base)))) >> 0u), _GLF_IDENTITY(min(~ (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, 1u * (virtual_gid))) << 0u)) : workgroup_base))), ~ (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(virtual_gid) : workgroup_base)))), 0u | (min(~ (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u), workgroup_base))))), ~ (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(virtual_gid) : workgroup_base)))))))))), _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(virtual_gid) : workgroup_base))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(virtual_gid) : workgroup_base))), (~ (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(virtual_gid) : workgroup_base)))) >> 0u), _GLF_IDENTITY(min(~ (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, 1u * (virtual_gid))) << 0u)) : workgroup_base))), ~ (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(virtual_gid) : workgroup_base)))), 0u | (min(~ (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u), workgroup_base))))), ~ (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(virtual_gid) : workgroup_base)))))))))), 0u ^ ((_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(virtual_gid) : workgroup_base))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(virtual_gid) : workgroup_base))), (~ (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(virtual_gid) : workgroup_base)))) >> 0u), _GLF_IDENTITY(min(~ (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, 1u * (virtual_gid))) << 0u)) : workgroup_base))), ~ (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(virtual_gid) : workgroup_base)))), 0u | (min(~ (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u), workgroup_base))))), ~ (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(virtual_gid) : workgroup_base))))))))))))))) + subgroup_base + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(uvec3((subgroup_local_id + 1) % subgroup_size, 0u, 1u))), clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))))), (false ? _GLF_FUZZED(193326u) : _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(uvec3((subgroup_local_id + 1) % subgroup_size, 0u, 1u))), clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY(true, bool(bvec4(true, true, true, true))) && (! (false)))), ((_GLF_IDENTITY(! (false), _GLF_IDENTITY(true, bool(bvec4(true, true, true, true))) && (! (false))))) || false) && true)))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, false)), _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, false))) || false, bool(bvec4((bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, false))) || false, false, true, true))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((634.097 - 1.1))), float(injectionSwitch.x), bool(true))))), min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((634.097 - 1.1))), float(injectionSwitch.x), bool(true))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((634.097 - 1.1))), float(injectionSwitch.x), bool(true))))), mix(float(_GLF_FUZZED(36.55)), float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((634.097 - 1.1))), float(injectionSwitch.x), bool(true)))))), bool(true))))) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (false) && _GLF_IDENTITY(true, ! (! (true)))) || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (_GLF_IDENTITY(bool(bvec4(false, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(false, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), max(min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch)))) / vec2(1.0, 1.0))).y), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), (_GLF_IDENTITY(true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), bool(bvec2(true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), false)))) && true)))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(true && ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, round(length(normalize(vec2(1.0, 1.0)))) * (injectionSwitch.x))) - 0.0) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), ! (! (true && ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * mat2(1.0), _GLF_IDENTITY(vec2(vec4((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * mat2(1.0), abs(0.0), 0.0)), vec2(mat2(_GLF_IDENTITY(vec2(vec4((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * mat2(1.0), abs(0.0), 0.0)), (vec2(vec4((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * mat2(1.0), abs(0.0), 0.0))) - vec2(0.0, 0.0)), 1.0, 0.0))))).y))))))))))), _GLF_IDENTITY(! (! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), true && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))))).y)))))))))), ! (_GLF_IDENTITY(! (! (! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), true && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))))))))), true && (! (! (! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), true && ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4854.3253), _GLF_FUZZED(-9.6)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, sqrt(tan(0.0))))))).y))), false)))))))))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), mix(float(_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), min(max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x)))), float(_GLF_FUZZED(-72.56)), bool(false))), mix(float(_GLF_FUZZED(8299.5236)), float(max(injectionSwitch.x, injectionSwitch.x)), bool(true)))), max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))) ? _GLF_FUZZED(1.4) : injectionSwitch.x)), injectionSwitch.x)), mix(float(_GLF_FUZZED(8.4)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), mix(float(_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), min(max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x)))), float(_GLF_FUZZED(-72.56)), bool(false))), mix(float(_GLF_FUZZED(8299.5236)), float(max(injectionSwitch.x, injectionSwitch.x)), bool(true)))), max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))) ? _GLF_FUZZED(1.4) : injectionSwitch.x)), injectionSwitch.x))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), ((false)) || false)))) && true), false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), ((false)) || false)))) && true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, (1) | (1))), _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, 4))) | (4)), (_GLF_IDENTITY(4, clamp(4, 4, 4))) | (4)), 64, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) * 1)) ^ _GLF_IDENTITY(0, int(ivec4(0, _GLF_IDENTITY(0, (0) | 0), 0, (_GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) / 1) << _GLF_IDENTITY(int(2), int(2))), min((1 << _GLF_IDENTITY(int(2), int(2))), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) / 1)), int(2))), ((1 << _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, _GLF_IDENTITY((2) >> 0, ~ (~ ((2) >> 0)))), 2, 2)))))) + 0))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) / int(_GLF_ONE(1.0, injectionSwitch.y)))), int(2))))))));
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(_GLF_struct_1(_GLF_struct_0(bvec3(true), 1u, mat3x4(1.0)), mat2x4(1.0)), _GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u))), uint(uvec3(_GLF_IDENTITY(virtual_gid, 0u ^ (_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)))), 1u, 0u))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u))), uint(uvec3(_GLF_IDENTITY(virtual_gid, 0u ^ (_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)))), 1u, 0u))))))))], uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (buf[_GLF_IDENTITY(virtual_gid, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) - (0u | 0u)), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(virtual_gid, (virtual_gid) - _GLF_IDENTITY((0u | 0u), uint(uvec4((0u | 0u), 1u, 0u, 0u)))), (0u >> _GLF_IDENTITY(uint(3u), uint(3u))))), (false ? _GLF_FUZZED(104387u) : uint(uvec2(_GLF_IDENTITY(virtual_gid, (virtual_gid) - (0u | 0u)), (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(virtual_gid, 1u, 0u), clamp(_GLF_IDENTITY(uvec3(virtual_gid, 1u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3(virtual_gid, 1u, 0u))), _GLF_IDENTITY(uvec3(virtual_gid, 1u, 0u), (uvec3(virtual_gid, 1u, 0u)) / uvec3(1u, 1u, 1u)), uvec3(virtual_gid, 1u, 0u)))), ~ (_GLF_IDENTITY(~ (uint(uvec3(virtual_gid, 1u, 0u))), (_GLF_IDENTITY(~ (uint(uvec3(virtual_gid, 1u, 0u))), (true ? ~ (uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, min(0u, 0u)))), 0u | (0u))))) << 0u)))) : _GLF_FUZZED(subgroup_size)))) | (~ (uint(_GLF_IDENTITY(uvec3(virtual_gid, 1u, 0u), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(virtual_gid, 1u, 0u), (uvec3(virtual_gid, 1u, 0u)) / uvec3(1u, 1u, 1u))), clamp((_GLF_IDENTITY(uvec3(virtual_gid, 1u, 0u), (uvec3(virtual_gid, 1u, 0u)) / uvec3(1u, 1u, 1u))), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(virtual_gid, 1u, 0u), (uvec3(virtual_gid, 1u, 0u)) / uvec3(1u, 1u, 1u))), uvec3(0u, 0u, 0u) ^ ((_GLF_IDENTITY(uvec3(virtual_gid, 1u, 0u), (uvec3(virtual_gid, 1u, 0u)) / uvec3(1u, 1u, 1u))))), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(virtual_gid, 1u, 0u), (uvec3(virtual_gid, 1u, 0u)) / uvec3(1u, 1u, 1u))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(uvec3(virtual_gid, 1u, 0u), (uvec3(virtual_gid, 1u, 0u)) / uvec3(1u, 1u, 1u))), ((_GLF_IDENTITY(uvec3(virtual_gid, 1u, 0u), (uvec3(virtual_gid, 1u, 0u)) / uvec3(1u, 1u, 1u)))) | ((_GLF_IDENTITY(uvec3(virtual_gid, 1u, 0u), (uvec3(virtual_gid, 1u, 0u)) / uvec3(1u, 1u, 1u)))))))))) | uvec3(0u, 0u, 0u))))))))))))])), _GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-60031))), (0 << _GLF_IDENTITY(int(1), int(1)))), (ivec2(_GLF_IDENTITY(4, _GLF_IDENTITY((true ? 4 : _GLF_FUZZED(-60031)), ((true ? 4 : _GLF_FUZZED(-60031))) - 0)), (0 << _GLF_IDENTITY(int(1), int(1))))) | (ivec2(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, clamp(4, 4, 4)) : _GLF_FUZZED(-60031))), (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), max(int(1), int(1))), int(1)))))))), 64, 2), max(atomicLoad(buf[virtual_gid], 4, 64, 2), _GLF_IDENTITY(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(0 | (4), (false ? _GLF_FUZZED(84351) : 0 | (4)))), 4), (max(4, 4)) | (max(4, 4)))), 64, 2), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, _GLF_IDENTITY(max(4, 4), (max(4, 4)) | (max(4, _GLF_IDENTITY(4, (false ? _GLF_FUZZED(-43483) : _GLF_IDENTITY(4, (4) ^ 0))))))), 64, 2))))), mat2x4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), mix(float(_GLF_FUZZED(-4.9)), float(min(1.0, 1.0)), bool(true))))), _GLF_struct_5(vec3(1.0), _GLF_struct_2(mat3x4(1.0), 1, mat4x3(_GLF_IDENTITY(1.0, (1.0) - 0.0)), _GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), min(~ (1u), ~ (1u))))), (1u) ^ 0u), min(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) ^ 0u, ((1u) ^ 0u) ^ 0u)), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ 0u), (_GLF_IDENTITY(1u, (1u) ^ 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ 0u), (_GLF_IDENTITY(1u, (1u) ^ 0u)) - 0u))))), _GLF_IDENTITY(1u, (1u) ^ 0u)))) >> 0u)), _GLF_struct_3(mat4(_GLF_IDENTITY(1.0, (1.0) - 0.0))), _GLF_struct_4(_GLF_IDENTITY(_GLF_IDENTITY(mat4(1.0), (_GLF_IDENTITY(_GLF_IDENTITY(mat4(1.0), (mat4(1.0)) * mat4(1.0)), (mat4(1.0)) / mat4(1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) - sqrt(0.0), clamp((_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5811.6354)), float(_GLF_IDENTITY(1.0, 1.0 * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0 * (_GLF_IDENTITY(1.0, min(1.0, 1.0))))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0 * (_GLF_IDENTITY(1.0, min(1.0, 1.0))))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0 * (_GLF_IDENTITY(1.0, min(1.0, 1.0))))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0 * (_GLF_IDENTITY(1.0, min(1.0, 1.0))))))))), bool(true)))) - sqrt(0.0), (1.0) - _GLF_IDENTITY(sqrt(0.0), min(_GLF_IDENTITY(sqrt(0.0), min(sqrt(0.0), sqrt(0.0))), sqrt(0.0))), (1.0) - sqrt(0.0)))), mix(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(221.084, mix(_GLF_IDENTITY(float(221.084), 1.0 * (float(221.084))), float(_GLF_FUZZED(280.087)), bool(false))))), max(float(_GLF_FUZZED(221.084)), float(_GLF_FUZZED(221.084)))), float(1.0), bool(true))), _GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(_GLF_IDENTITY(float(_GLF_FUZZED(-573.532)), (false ? _GLF_FUZZED(float(false)) : float(_GLF_FUZZED(-573.532)))), float(1.0), bool(true)), min(mix(_GLF_IDENTITY(float(_GLF_FUZZED(-573.532)), (false ? _GLF_FUZZED(float(false)) : float(_GLF_FUZZED(-573.532)))), float(1.0), bool(true)), _GLF_IDENTITY(mix(_GLF_IDENTITY(float(_GLF_FUZZED(-573.532)), (false ? _GLF_FUZZED(float(false)) : float(_GLF_FUZZED(-573.532)))), float(1.0), bool(true)), (false ? _GLF_FUZZED(9.5) : mix(_GLF_IDENTITY(float(_GLF_FUZZED(-573.532)), (false ? _GLF_FUZZED(float(false)) : float(_GLF_FUZZED(-573.532)))), float(1.0), bool(true))))))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-4846.8898))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), mat4(1.0) * (_GLF_IDENTITY(mat4(1.0), (_GLF_IDENTITY(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(97.78)), bool(false)))), float(_GLF_FUZZED(758.029)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY((mat4(1.0)) * mat4(1.0), (false ? _GLF_FUZZED((+ mat4(5.1, 837.813, 350.048, 6.1, -93.06, 1.7, 2293.5160, 7382.5204, -209.761, -4.3, -5.1, 69.30, 3.2, 974.579, -8.1, 2.1))) : (mat4(1.0)) * mat4(1.0)))), (mat4(1.0)) / mat4(1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) - sqrt(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 0.0, determinant(mat3(abs(0.0), 0.0, sqrt(1.0), sin(0.0), 0.0, 1.0, sqrt(0.0), 0.0, 0.0)), 0.0, 0.0, 1.0)))), clamp((_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5811.6354)), float(_GLF_IDENTITY(1.0, 1.0 * _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0 * (_GLF_IDENTITY(1.0, min(1.0, 1.0))))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0 * (_GLF_IDENTITY(1.0, min(1.0, 1.0))))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0 * (_GLF_IDENTITY(1.0, min(1.0, 1.0))))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0 * (_GLF_IDENTITY(1.0, min(1.0, 1.0))))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0 * (_GLF_IDENTITY(1.0, min(1.0, 1.0))))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0 * (_GLF_IDENTITY(1.0, min(1.0, 1.0))))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0 * (_GLF_IDENTITY(1.0, min(1.0, 1.0))))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0 * (_GLF_IDENTITY(1.0, min(1.0, 1.0))))))), (false ? _GLF_FUZZED(8.2) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0 * (_GLF_IDENTITY(1.0, min(1.0, 1.0))))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0 * (_GLF_IDENTITY(1.0, min(1.0, 1.0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0 * (_GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0 * (_GLF_IDENTITY(1.0, min(1.0, 1.0)))), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0 * (_GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0 * (_GLF_IDENTITY(1.0, min(1.0, 1.0))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0 * (_GLF_IDENTITY(1.0, min(1.0, 1.0))))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), 1.0 * (_GLF_IDENTITY(1.0, min(1.0, 1.0))))))))) : _GLF_FUZZED(3619.2804))))), bool(true)))) - sqrt(0.0), (1.0) - _GLF_IDENTITY(_GLF_IDENTITY(sqrt(0.0), min(_GLF_IDENTITY(sqrt(0.0), min(sqrt(0.0), sqrt(0.0))), sqrt(0.0))), max(_GLF_IDENTITY(sqrt(0.0), min(_GLF_IDENTITY(sqrt(0.0), min(sqrt(0.0), sqrt(0.0))), sqrt(0.0))), _GLF_IDENTITY(sqrt(0.0), min(_GLF_IDENTITY(sqrt(0.0), min(sqrt(0.0), sqrt(0.0))), sqrt(0.0))))), (1.0) - _GLF_IDENTITY(sqrt(0.0), (_GLF_IDENTITY(sqrt(0.0), float(mat4x3(sqrt(0.0), cos(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)))) + 0.0)))), mix(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(221.084, mix(_GLF_IDENTITY(float(221.084), 1.0 * (float(221.084))), float(_GLF_FUZZED(280.087)), bool(_GLF_IDENTITY(false, (false) || false)))))), max(float(_GLF_FUZZED(221.084)), float(_GLF_FUZZED(221.084)))), float(1.0), bool(true))), _GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(_GLF_IDENTITY(float(_GLF_FUZZED(-573.532)), (false ? _GLF_FUZZED(float(false)) : float(_GLF_FUZZED(-573.532)))), float(1.0), bool(true)), min(_GLF_IDENTITY(mix(_GLF_IDENTITY(float(_GLF_FUZZED(-573.532)), (false ? _GLF_FUZZED(float(false)) : float(_GLF_FUZZED(-573.532)))), float(1.0), bool(true)), (false ? _GLF_FUZZED(89.78) : mix(_GLF_IDENTITY(float(_GLF_FUZZED(-573.532)), (false ? _GLF_FUZZED(float(false)) : float(_GLF_FUZZED(-573.532)))), float(1.0), bool(true)))), _GLF_IDENTITY(mix(_GLF_IDENTITY(float(_GLF_FUZZED(-573.532)), (false ? _GLF_FUZZED(float(false)) : float(_GLF_FUZZED(-573.532)))), float(1.0), bool(true)), (false ? _GLF_FUZZED(9.5) : mix(_GLF_IDENTITY(float(_GLF_FUZZED(-573.532)), (false ? _GLF_FUZZED(float(false)) : float(_GLF_FUZZED(-573.532)))), float(1.0), bool(true))))))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-4846.8898))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), mat4x3(1.0), mat2(1.0), uvec2(1u))), _GLF_IDENTITY(ivec4(1), _GLF_IDENTITY((ivec4(1)), ((ivec4(1))) ^ ivec4(0, 0, 0, 0)) >> ivec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))))) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x)), mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x))), float(_GLF_FUZZED(37.25)), bool(false)))), float(_GLF_FUZZED(-4.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(checker[virtual_gid], _GLF_IDENTITY(_GLF_struct_replacement_6.read, 0u + (_GLF_struct_replacement_6.read)), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false) || false, ((false) || false) && true)) || false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
     return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false))))), bool(bvec4(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false))))), true, false), false)))))))) && true))), true && (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
