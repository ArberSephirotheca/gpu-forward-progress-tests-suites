#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))), false || (! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))))))))), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY((injectionSwitch.x) * determinant(mat2(1.0, 0.0, sqrt(_GLF_IDENTITY(0.0, min(0.0, 0.0))), 1.0)), ((injectionSwitch.x) * determinant(mat2(1.0, 0.0, sqrt(0.0), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), float(vec3(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0, 0.0))) : _GLF_FUZZED(824.804)))) / 1.0)))) - 0.0)) > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))))), _GLF_IDENTITY((injectionSwitch.x) * determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), ((injectionSwitch.x) * determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0))) - 0.0)) > injectionSwitch.y)) && true)), true && (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY((injectionSwitch.x) * determinant(mat2(1.0, 0.0, sqrt(_GLF_IDENTITY(0.0, min(0.0, 0.0))), 1.0)), ((injectionSwitch.x) * determinant(mat2(1.0, 0.0, sqrt(0.0), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), float(vec3(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0, 0.0))) : _GLF_FUZZED(824.804)))) / 1.0)))) - 0.0)) > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))))), _GLF_IDENTITY((injectionSwitch.x) * determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), ((injectionSwitch.x) * determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0))) - 0.0)) > injectionSwitch.y)) && true))))) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bool(! (true))), (bool(bool(! (true)))) && true)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-557.477)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), ! (! (_GLF_IDENTITY(bool(true), true && (bool(true)))))))) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-557.477)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), ! (! (_GLF_IDENTITY(bool(true), true && (bool(true)))))))), float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-557.477)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), ! (! (_GLF_IDENTITY(bool(true), true && (bool(true)))))))), 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 1.0))) > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false))) && (false)), _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false))) && (false), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) || false), true, false, true)))) && true), ! (_GLF_IDENTITY(! (true), (! (true)) || false))) && _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), false || (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), ! (! (_GLF_IDENTITY((false), bool(bvec2((false), false)))))))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false))) && (false), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) || false), true, false, true)))) && true), ! (_GLF_IDENTITY(! (true), (! (true)) || false))) && _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), false || (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), ! (! (_GLF_IDENTITY((false), bool(bvec2((false), false))))))))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), bool(bvec4(! (true), false, true, true)))) || false))) && (false))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) && true), (! (_GLF_IDENTITY(true, true && (true)))) || false))) && (false)))) || false)))) || false), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))) && (true)), ! (_GLF_IDENTITY(! (true), (! _GLF_IDENTITY((true), ((true)) && true)) || false))) && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || _GLF_IDENTITY((false), ((false)) || _GLF_IDENTITY(false, (false) || false))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), _GLF_IDENTITY(_GLF_IDENTITY(clamp((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x)), clamp(_GLF_IDENTITY(clamp((injectionSwitch.x), (injectionSwitch.x), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)), clamp(clamp((injectionSwitch.x), (injectionSwitch.x), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)), _GLF_IDENTITY(clamp((injectionSwitch.x), (injectionSwitch.x), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)), mix(float(_GLF_FUZZED(-264.628)), float(clamp((injectionSwitch.x), (injectionSwitch.x), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x))), bool(true))), clamp((injectionSwitch.x), (injectionSwitch.x), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)))), clamp((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x)), clamp((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))), (injectionSwitch.x), (injectionSwitch.x)))), float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(clamp((injectionSwitch.x), (injectionSwitch.x), _GLF_IDENTITY((injectionSwitch.x), min((injectionSwitch.x), (injectionSwitch.x)))), clamp(clamp((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x)), clamp((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x)), clamp((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x)))), mix(float(_GLF_IDENTITY(clamp((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x)), clamp(clamp((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x)), clamp((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x)), clamp((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x))))), float(_GLF_FUZZED(-7.2)), bool(false))), float(float(_GLF_IDENTITY(clamp((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x)), clamp(clamp((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x)), clamp((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x)), clamp((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x))))))), sqrt(0.0), 1.0, 0.0, sqrt(1.0), 1.0), mat2(1.0) * (mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(clamp((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x)), clamp(clamp((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x)), clamp((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x)), clamp((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x)))), float(float(_GLF_IDENTITY(clamp((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x)), clamp(clamp((injectionSwitch.x), _GLF_IDENTITY((injectionSwitch.x), sqrt(0.0) + ((injectionSwitch.x))), (injectionSwitch.x)), clamp((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x)), clamp((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x), (injectionSwitch.x), (injectionSwitch.x))))))), sqrt(0.0), 1.0, 0.0, sqrt(1.0), 1.0)))))) * 1.0) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups), (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)) ^ ((gl_NumWorkGroups))) | _GLF_IDENTITY((gl_NumWorkGroups), min((gl_NumWorkGroups), _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) - (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)))))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4x2(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, tan(0.0), 0.0))), 1.0))))))).y)), bool(bvec4((false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4x2(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, tan(0.0), 0.0))), 1.0))), mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4x2(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, tan(0.0), 0.0))), 1.0))))[0], (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4x2(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, tan(0.0), 0.0))), 1.0))))[1]), vec2(_GLF_FUZZED(6.5), _GLF_FUZZED(-641.582)), bvec2(false, false))))))).y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), true, false)))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0))) + (injectionSwitch)), (injectionSwitch) * _GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) * mat2(1.0))))), _GLF_IDENTITY((injectionSwitch), vec2(mat3x2((injectionSwitch), exp(0.0), determinant(mat4(1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(log(1.0), float(mat3x4(log(1.0), 1.0, 0.0, 1.0, sqrt(0.0), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))), 1.0, 0.0, 0.0, 1.0)), 1.0, round(_GLF_IDENTITY(length(normalize(1.0)), (length(normalize(1.0))) / 1.0))))) - vec2(0.0, 0.0)), (injectionSwitch) / vec2(1.0, 1.0)).y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))), (injectionSwitch) * vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))), (injectionSwitch) - vec2(0.0, 0.0)), (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 0.0, 0.0, 1.0))))), 1.0)).y, false || (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), clamp(_GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), (vec2(0.0, 0.0) + (injectionSwitch)) * mat2(1.0)), vec2(0.0, 0.0) + (injectionSwitch), _GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), max(vec2(0.0, 0.0) + (injectionSwitch), vec2(0.0, 0.0) + (injectionSwitch)))))), (injectionSwitch) * _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, float(mat2x3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), length(0.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, exp(0.0))), dot(vec3(0.0, 0.0, 0.0), vec3(determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, exp(0.0)))), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))))), vec2(0.0, 0.0) + (_GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, float(mat2x3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), length(0.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, exp(0.0))), dot(vec3(0.0, 0.0, 0.0), vec3(determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, exp(0.0)))), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))))), (vec2(1.0, _GLF_IDENTITY(1.0, float(mat2x3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), length(0.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, exp(0.0))), dot(vec3(0.0, 0.0, 0.0), vec3(determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, exp(0.0)))), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))))))) * mat2(1.0))))), (injectionSwitch) - vec2(0.0, 0.0)), (injectionSwitch) / vec2(1.0, 1.0)).y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(312.104)), vec2(_GLF_FUZZED(-9.1), (injectionSwitch)[1]), bvec2(false, true))).y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))))), 0 | _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(0, (0) - (0 << _GLF_IDENTITY(int(4), int(4))))), ((_GLF_IDENTITY(0, (0) - (0 << _GLF_IDENTITY(int(4), int(4)))))) / 1), (~ (_GLF_IDENTITY(0, (0) - (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), max(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), min(0 << _GLF_IDENTITY(int(4), int(4)), 0 << _GLF_IDENTITY(int(4), int(4)))), 0 << _GLF_IDENTITY(int(4), int(4)))))))) | (~ (_GLF_IDENTITY(0, (0) - (0 << _GLF_IDENTITY(int(4), int(4)))))))))), clamp((_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(0, (0) - (0 << _GLF_IDENTITY(int(4), int(4))))), ((_GLF_IDENTITY(0, (0) - (0 << _GLF_IDENTITY(int(4), int(4)))))) / 1), (~ (_GLF_IDENTITY(0, (0) - (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), max(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), min(0 << _GLF_IDENTITY(int(4), int(4)), 0 << _GLF_IDENTITY(int(4), int(4)))), 0 << _GLF_IDENTITY(int(4), int(4)))))))) | (~ (_GLF_IDENTITY(0, (0) - (0 << _GLF_IDENTITY(int(4), int(4)))))))))), (_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(0, (0) - (0 << _GLF_IDENTITY(int(4), int(4))))), ((_GLF_IDENTITY(0, (0) - (0 << _GLF_IDENTITY(int(4), int(4)))))) / 1), (~ (_GLF_IDENTITY(0, (0) - (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), max(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), min(0 << _GLF_IDENTITY(int(4), int(4)), 0 << _GLF_IDENTITY(int(4), int(4)))), 0 << _GLF_IDENTITY(int(4), int(4)))))))) | (~ (_GLF_IDENTITY(0, (0) - (0 << _GLF_IDENTITY(int(4), int(4)))))))))), (_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(0, (0) - (0 << _GLF_IDENTITY(int(4), int(4))))), ((_GLF_IDENTITY(0, (0) - (0 << _GLF_IDENTITY(int(4), int(4)))))) / 1), (~ (_GLF_IDENTITY(0, (0) - (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), max(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), min(0 << _GLF_IDENTITY(int(4), int(4)), 0 << _GLF_IDENTITY(int(4), int(4)))), 0 << _GLF_IDENTITY(int(4), int(4)))))))) | (~ (_GLF_IDENTITY(0, (0) - (0 << _GLF_IDENTITY(int(4), int(4)))))))))))), (~ (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-17212) : 0)))) | _GLF_IDENTITY((~ _GLF_IDENTITY((0), (false ? _GLF_FUZZED(48038) : _GLF_IDENTITY((0), ~ (_GLF_IDENTITY(~ ((0)), (~ ((0))) | (~ ((0))))))))), 0 ^ ((~ _GLF_IDENTITY((0), (false ? _GLF_FUZZED(48038) : _GLF_IDENTITY((0), ~ (_GLF_IDENTITY(~ ((0)), (~ _GLF_IDENTITY(((0)), ~ (~ (((0)))))) | (~ ((0)))))))))))))), (_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) | (0))) | (0))), (_GLF_IDENTITY(~ (0), max(~ (0), ~ (0)))) | (~ (0)))))) ^ 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(0, (0) - (0 << _GLF_IDENTITY(int(4), int(4))))), ((_GLF_IDENTITY(0, (0) - (0 << _GLF_IDENTITY(int(4), int(4)))))) / 1), (~ (_GLF_IDENTITY(0, (0) - (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), max(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), min(0 << _GLF_IDENTITY(int(4), int(4)), 0 << _GLF_IDENTITY(int(4), int(4)))), 0 << _GLF_IDENTITY(int(4), int(4)))))))) | (~ (_GLF_IDENTITY(0, (0) - (0 << _GLF_IDENTITY(int(4), int(4)))))))))), clamp((_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(0, (0) - (0 << _GLF_IDENTITY(int(4), int(4))))), ((_GLF_IDENTITY(0, (0) - (0 << _GLF_IDENTITY(int(4), int(4)))))) / 1), (~ (_GLF_IDENTITY(0, (0) - (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), max(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), min(0 << _GLF_IDENTITY(int(4), int(4)), 0 << _GLF_IDENTITY(int(4), int(4)))), 0 << _GLF_IDENTITY(int(4), int(4)))))))) | (~ (_GLF_IDENTITY(0, (0) - (0 << _GLF_IDENTITY(int(4), int(4)))))))))), (_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(0, (0) - (0 << _GLF_IDENTITY(int(4), int(4))))), ((_GLF_IDENTITY(0, (0) - (0 << _GLF_IDENTITY(int(4), int(4)))))) / 1), (~ (_GLF_IDENTITY(0, (0) - (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), max(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), min(0 << _GLF_IDENTITY(int(4), int(4)), 0 << _GLF_IDENTITY(int(4), int(4)))), 0 << _GLF_IDENTITY(int(4), int(4)))))))) | (~ (_GLF_IDENTITY(0, (0) - (0 << _GLF_IDENTITY(int(4), int(4)))))))))), (_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(0, (0) - (0 << _GLF_IDENTITY(int(4), int(4))))), ((_GLF_IDENTITY(0, (0) - (0 << _GLF_IDENTITY(int(4), int(4)))))) / 1), (~ (_GLF_IDENTITY(0, (0) - (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), max(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), min(0 << _GLF_IDENTITY(int(4), int(4)), 0 << _GLF_IDENTITY(int(4), int(4)))), 0 << _GLF_IDENTITY(int(4), int(4)))))))) | (~ (_GLF_IDENTITY(0, (0) - (0 << _GLF_IDENTITY(int(4), int(4)))))))))))), (~ (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-17212) : 0)))) | _GLF_IDENTITY((~ _GLF_IDENTITY((0), (false ? _GLF_FUZZED(48038) : _GLF_IDENTITY((0), ~ (_GLF_IDENTITY(~ ((0)), (~ ((0))) | (~ ((0))))))))), 0 ^ ((~ _GLF_IDENTITY((0), (false ? _GLF_FUZZED(48038) : _GLF_IDENTITY((0), ~ (_GLF_IDENTITY(~ ((0)), (~ _GLF_IDENTITY(((0)), ~ (~ (((0)))))) | (~ ((0)))))))))))))), (_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) | (0))) | (0))), (_GLF_IDENTITY(~ (0), max(~ (0), ~ (0)))) | (~ (0)))))) ^ 0))) - 0), int(ivec3((_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (_GLF_IDENTITY(~ (0), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), int(int(~ (0)))), _GLF_IDENTITY(_GLF_IDENTITY(int(int(~ (0))), int(ivec4(int(int(~ (0))), 0, 0, 1))), (false ? _GLF_FUZZED((true , (-36896 + 23374))) : _GLF_IDENTITY(int(int(~ (0))), int(ivec4(int(int(~ (0))), 0, 0, 1))))))))) * 1), (~ (0)) | (~ (0))))), (_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))))) ^ 0)), 0, 0)))); _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) && true), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) && true), true)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) && true), true)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) && true), true)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)), false || (! (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))))))) && true), true)))), true && (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, true && (_injected_loop_counter < 1)))) && true), true)), false || _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) && true), true))), ! (_GLF_IDENTITY(! ((bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) && true), false)), (bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) && true), false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)))), bool(bool(! ((bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) && true), true))))))))))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) && true), true)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) && true), true))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) && true))) && true), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) && true), true)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) && true), true)))), bool(bvec4(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) && true), true)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) && true), true)))), true, true, true)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false, true, true)))) && true), true)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) && true), true))))))), false, true))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) && true), true)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) && true), true))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) && true), true)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) && true), true))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) && true), true)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) && true), true))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) && true), true)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) && true), true))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) && true), true)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> (0 | 0)) < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) && true), true)))))))) && true), false, true))), false, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ 0) < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) && true), true)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) && true), true))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, 1 * (_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_GLF_IDENTITY(_injected_loop_counter, (true ? _injected_loop_counter : _GLF_FUZZED(-53699)))))))) < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-75584))))) && true), true)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) && true), true))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))), _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)), bool(_GLF_IDENTITY(bvec3((_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3((_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) && true), true)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) && true), true))))))), false, true))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) && true), true)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) && true), true))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)), bool(bvec4(! (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)), true, false, false)))))) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) && true), true)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, false || (_injected_loop_counter < 1)))) && true), true))))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) && true), true)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) && true), true)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) && true), true)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) && true), true))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) && true), true)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) && true), true))))))), bool(bool(! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) && true), true)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) && true), true)))))))))), true, false)), ! (! (bool(bvec3(_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) && true), true)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) && true), true))))))), bool(bool(! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) && true), true)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) && true), true)))))))))), true, false))))))))), false, true))), false, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))); _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter ++, (false ? _GLF_FUZZED(-86472) : _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) / 1))), (_GLF_IDENTITY(_injected_loop_counter ++, (false ? _GLF_FUZZED(-86472) : _injected_loop_counter ++))) << (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, max(0, 0)))) << _GLF_IDENTITY(int(_GLF_IDENTITY(4, int(_GLF_ONE(1.0, injectionSwitch.y)) * (4))), int(4)), ~ (~ (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY(max(0, 0), clamp(max(0, 0), max(0, 0), _GLF_IDENTITY(max(0, 0), (max(0, 0)) >> 0))), (_GLF_IDENTITY(max(0, 0), clamp(max(0, 0), max(0, 0), _GLF_IDENTITY(max(0, 0), (max(0, 0)) >> 0)))) >> (0 >> _GLF_IDENTITY(int(3), int(3))))))) << _GLF_IDENTITY(int(_GLF_IDENTITY(4, int(_GLF_ONE(1.0, injectionSwitch.y)) * (4))), int(4))))), (_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, max(0, 0)))) << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, int(_GLF_ONE(1.0, injectionSwitch.y)) * (4))), int(4)), (_GLF_IDENTITY(int(_GLF_IDENTITY(4, int(_GLF_ONE(1.0, injectionSwitch.y)) * (4))), int(4))) | (_GLF_IDENTITY(int(_GLF_IDENTITY(4, int(_GLF_ONE(1.0, injectionSwitch.y)) * (4))), int(4)))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, _GLF_IDENTITY(max(0, 0), clamp(max(0, 0), max(0, 0), _GLF_IDENTITY(max(0, 0), (max(0, 0)) >> 0)))))) << _GLF_IDENTITY(int(_GLF_IDENTITY(4, int(_GLF_ONE(1.0, injectionSwitch.y)) * (4))), int(4))), max(_GLF_IDENTITY((_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), _GLF_IDENTITY(max(0, 0), clamp(max(0, 0), max(0, 0), _GLF_IDENTITY(max(0, 0), (max(0, 0)) >> 0)))))) << _GLF_IDENTITY(int(_GLF_IDENTITY(4, int(_GLF_ONE(1.0, injectionSwitch.y)) * (4))), int(4))), ((_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(max(0, 0), clamp(max(0, 0), max(0, 0), _GLF_IDENTITY(max(0, 0), (max(0, 0)) >> 0)))), (_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(max(0, 0), clamp(max(0, 0), max(0, 0), _GLF_IDENTITY(max(0, 0), (max(0, 0)) >> 0)))), (_GLF_IDENTITY(0, _GLF_IDENTITY(max(0, 0), clamp(max(0, 0), max(0, 0), _GLF_IDENTITY(max(0, 0), (max(0, 0)) >> 0))))) / 1)) | int(_GLF_ZERO(0.0, injectionSwitch.x))))) << _GLF_IDENTITY(int(_GLF_IDENTITY(4, int(_GLF_ONE(1.0, injectionSwitch.y)) * (4))), int(4)))) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, _GLF_IDENTITY(max(0, 0), clamp(max(0, 0), max(0, 0), _GLF_IDENTITY(max(0, 0), (max(0, 0)) >> 0)))))), (true ? _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, _GLF_IDENTITY(max(0, 0), clamp(max(0, 0), max(0, 0), _GLF_IDENTITY(max(0, 0), (max(0, 0)) >> 0)))))) : _GLF_FUZZED(76367))) << _GLF_IDENTITY(int(_GLF_IDENTITY(4, int(_GLF_ONE(1.0, injectionSwitch.y)) * (4))), int(4)))))))) / int(_GLF_ONE(1.0, injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true))))), false || (_GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true)))))))), bool(_GLF_IDENTITY(bool(false), false || (bool(false))))), false, true))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(sqrt(vec2(0.0, 0.0)))).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(length(injectionSwitch)) : injectionSwitch.y))))))
          {
           if(_GLF_DEAD(false))
            break;
           break;
          }
         if(_GLF_DEAD(false))
          break;
         barrier();
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0, 1.0 * (0.0)) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])))), injectionSwitch[1])).x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) > injectionSwitch.y) || _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false || (_GLF_IDENTITY(false, (false) || false))))) && true))), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sin(vec2(0.0, 0.0))).y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sqrt(0.0))))), _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (bool(false)), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(false)), false || ((bool(false)))), bool(bvec4(! (bool(_GLF_IDENTITY(false, ! (! (false))))), true, false, true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(false)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true))))), ! (! ((! (_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true))))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(false), ! (! (bool(false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false))), true, false, true)))), bool(bool(! (_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true))))))))))))) && true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (bool(false)), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(false)), false || ((bool(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), bool(bvec4(! (bool(false)), true, false, true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(false)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(false, ! (! (false))))), bool(bvec4(! (bool(false)), true, false, true))))), ((! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(false, ! (! (false))))), bool(bvec4(! (bool(false)), true, false, true)))))) || false)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(false), ! (! (bool(false))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true)))), false || ((_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true)))))))), bool(bool(! (_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true)))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true)))), false || ((_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true)))))))), bool(bool(! (_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true))))))))), (bool((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true)))), false || ((_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true)))))))), bool(bool(! (_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true)))))))))) || false)), (bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true)))), false || ((_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true)))))))), bool(bool(! (_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true))))))))), (bool((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true)))), false || ((_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true)))))))), bool(bool(! (_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true)))))))))) || false))) && true))))))) && true))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (bool(false)), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(false)), false || ((bool(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), bool(bvec4(! (bool(false)), true, false, true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(false)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(false, ! (! (false))))), bool(bvec4(! (bool(false)), true, false, true))))), ((! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(false, ! (! (false))))), bool(bvec4(! (bool(false)), true, false, true)))))) || false)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(false), ! (! (bool(false))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true)))), false || ((_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true)))))))), bool(bool(! (_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true)))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true)))), false || ((_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true)))))))), bool(bool(! (_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true))))))))), (bool((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true)))), false || ((_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true)))))))), bool(bool(! (_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true)))))))))) || false)), (bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true)))), false || ((_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true)))))))), bool(bool(! (_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true))))))))), (bool((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true)))), false || ((_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true)))))))), bool(bool(! (_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true)))))))))) || false))) && true))))))) && true))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (bool(false)), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(false)), false || ((bool(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), bool(bvec4(! (bool(false)), true, false, true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(false)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(false, ! (! (false))))), bool(bvec4(! (bool(false)), true, false, true))))), ((! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(false, ! (! (false))))), bool(bvec4(! (bool(false)), true, false, true)))))) || false)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(false), ! (! (bool(false))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true)))), false || ((_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true)))))))), bool(bool(! (_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true)))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true)))), false || ((_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true)))))))), bool(bool(! (_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true))))))))), (bool((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true)))), false || ((_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true)))))))), bool(bool(! (_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true)))))))))) || false)), (bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true)))), false || ((_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true)))))))), bool(bool(! (_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true))))))))), (bool((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true)))), false || ((_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true)))))))), bool(bool(! (_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true)))))))))) || false))) && true))))))) && true)))), bool(bvec4(! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (bool(false)), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(false)), false || ((bool(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), bool(bvec4(! (bool(false)), true, false, true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(false)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(false, ! (! (false))))), bool(bvec4(! (bool(false)), true, false, true))))), ((! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(false, ! (! (false))))), bool(bvec4(! (bool(false)), true, false, true)))))) || false)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(false), ! (! (bool(false))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true)))), false || ((_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true)))))))), bool(bool(! (_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true)))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true)))), false || ((_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true)))))))), bool(bool(! (_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true))))))))), (bool((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true)))), false || ((_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true)))))))), bool(bool(! (_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true)))))))))) || false)), (bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true)))), false || ((_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true)))))))), bool(bool(! (_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true))))))))), (bool((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true)))), false || ((_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true)))))))), bool(bool(! (_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true)))))))))) || false))) && true))))))) && true)))), false, false, true)))))) && true), _GLF_IDENTITY(bool(bvec3(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(bool(false), (bool(false)) || false)), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(false)), false || ((bool(false)))), bool(bvec4(! (bool(false)), true, false, true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(false)), ! (! (_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(false), ! (! (bool(false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true)))), bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec3(_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))))))))))))))) && true))), true, false)), bool(bvec4(bool(bvec3(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (bool(false)), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(false)), false || ((bool(false)))), bool(bvec4(! (bool(false)), true, false, true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(false)), ! (! (_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(false), ! (! (bool(false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true)))), bool(bool(! (_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true))))))))))))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(false)), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(false)), false || ((bool(false)))), bool(bvec4(! (bool(false)), true, false, true)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (bool(false)), ! (! (_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, false, false))), ! (! (bool(false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true)))), bool(bool(! (_GLF_IDENTITY(! (bool(false)), _GLF_IDENTITY(bool(bvec4(! (bool(_GLF_IDENTITY(false, true && (false)))), true, false, true)), ! (! (bool(bvec4(! (bool(_GLF_IDENTITY(false, true && (false)))), true, false, true)))))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(_GLF_IDENTITY(! (bool(false)), ! (! (_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, false, false))), ! (! (bool(false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true)))), bool(bool(! (_GLF_IDENTITY(! (bool(false)), _GLF_IDENTITY(bool(bvec4(! (bool(_GLF_IDENTITY(false, true && (false)))), true, false, true)), ! (! (bool(bvec4(! (bool(_GLF_IDENTITY(false, true && (false)))), true, false, true)))))))))))))))))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, false)), true, false, false)))))))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.6)), float(1.0), bool(true))), 1.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0))))))))), _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (bool(false)), ! (! (_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(false)), ! (! (_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true)))))), ! (! (_GLF_IDENTITY(! (bool(false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true))), ! (! (_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true))))))))))))) && true)))))))), (injectionSwitch.x > injectionSwitch.y))) && true, false || ((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (bool(false)), ! (! (_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(false)), ! (! (_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true)))))), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(false)), (_GLF_IDENTITY((bool(false)), bool(bool((bool(false)))))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true))), ! (! (_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true))))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true))), ! (! (_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true)))))))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true))), ! (! (_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true))))))))), bool(bool(! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true))), ! (! (_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, false, true)))))))))))))))))))))) && true)))))))), (injectionSwitch.x > injectionSwitch.y))) && true))) || (_GLF_IDENTITY(true, _GLF_IDENTITY((true), ! (! ((true)))) || false))) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(true && (bool(_GLF_IDENTITY(false, ! (! (false))))), ! (! (_GLF_IDENTITY(true && (bool(_GLF_IDENTITY(false, ! (! (false))))), (true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true)))))) || false))))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), false, true, true))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), min(_GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id))) : workgroup_base))) ^ 0u) + subgroup_base, (_GLF_IDENTITY(workgroup_base, (0u | 0u) ^ (_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u))) + subgroup_base) + _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(mat2x4(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8.5))), 0.0)), 0.0))))), min(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)))))), injectionSwitch.x)), min(_GLF_IDENTITY((_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(mat2x4(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8.5))), 0.0)), 0.0))))), min(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)))))), injectionSwitch.x)), ((_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(mat2x4(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8.5))), 0.0)), 0.0))))), min(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)))))), injectionSwitch.x))) / 1.0), (_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(mat2x4(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8.5))), 0.0)), 0.0))))), min(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)))))), injectionSwitch.x)))), ((_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(mat2x4(_GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-4.1)), bool(false)))), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0))))), min(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)))))), _GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, sqrt(1.0), 0.0, cos(0.0), 0.0, 1.0, exp(0.0))))))) / 1.0) + 0.0)), max(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(mat2x4(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8.5))), 0.0)), 0.0))))), min(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)))))), injectionSwitch.x)), min(_GLF_IDENTITY((_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(mat2x4(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8.5))), 0.0)), 0.0))))), min(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)))))), injectionSwitch.x)), ((_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(mat2x4(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8.5))), 0.0)), 0.0))))), min(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)))))), injectionSwitch.x))) / 1.0), (_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(mat2x4(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8.5))), 0.0)), 0.0))))), min(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)))))), injectionSwitch.x)))), ((_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(mat2x4(_GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-4.1)), bool(false)))), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0))))), min(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)))))), _GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, sqrt(1.0), 0.0, cos(0.0), 0.0, 1.0, exp(0.0))))))) / 1.0) + 0.0)), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(mat2x4(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8.5))), 0.0)), 0.0))))), min(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)))))), injectionSwitch.x)), min(_GLF_IDENTITY((_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(mat2x4(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8.5))), 0.0)), 0.0))))), min(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)))))), injectionSwitch.x)), ((_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(mat2x4(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8.5))), 0.0)), 0.0))))), min(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)))))), injectionSwitch.x))) / 1.0), (_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(mat2x4(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8.5))), 0.0)), 0.0))))), min(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)))))), injectionSwitch.x)))), ((_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(mat2x4(_GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-4.1)), bool(false)))), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0))))), min(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)))))), _GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, sqrt(1.0), 0.0, cos(0.0), 0.0, 1.0, exp(0.0))))))) / 1.0) + 0.0))))) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id))))) - uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x), _GLF_IDENTITY(max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), min(max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x), _GLF_IDENTITY(max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), min(max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(13.88)), bool(false))), _GLF_ZERO(0.0, injectionSwitch.x))), mix(float(_GLF_FUZZED(76.19)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true)))))), max(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-564.205)), float(injectionSwitch.x), bool(true)))), _GLF_ZERO(0.0, injectionSwitch.x)))))) / 1.0))))) + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 1, 1, 0), clamp(ivec4(_GLF_IDENTITY(1, (1) * 1), 1, 1, 0), ivec4(1, 1, 1, 0), ivec4(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 1 * (1)), 1)), 1, 1, 0)))))), ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id))))) - uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x), _GLF_IDENTITY(max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), min(max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x), _GLF_IDENTITY(max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), min(max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(13.88)), bool(false))), _GLF_ZERO(0.0, injectionSwitch.x))), mix(float(_GLF_FUZZED(76.19)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true)))))), max(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-564.205)), float(injectionSwitch.x), bool(true)))), _GLF_ZERO(0.0, injectionSwitch.x)))))) / 1.0))))) + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 1, 1, 0), clamp(ivec4(_GLF_IDENTITY(1, (1) * 1), 1, 1, 0), ivec4(1, 1, 1, 0), ivec4(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 1 * (1)), 1)), 1, 1, 0))))))) ^ 0u) % subgroup_size);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), false || (false))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false, false))))
  return;
 atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(64, max(64, 64)), 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, true)))))
    return;
   return;
  }
 uint read = _GLF_IDENTITY(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 0 ^ (4)), 64, 2), (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 0 ^ (4)), 64, 2)) * (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (false ? _GLF_FUZZED(next_virtual_gid) : uint(7u)))), uint(uvec2((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(uint(7u), uint(uvec3(_GLF_IDENTITY(uint(7u), uint(uvec2(uint(7u), 0u))), 0u, 0u)))))), 1u)))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), (false) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 subgroupBarrier();
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
