#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec2(injectionSwitch.x, 0.0)), mix(float(_GLF_FUZZED(-719.913)), float(float(vec2(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(vec2(-9265.2120, 9051.3575)) : (injectionSwitch) * mat2(1.0)))), 0.0, 1.0), (vec4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(vec2(-9265.2120, 9051.3575)) : (injectionSwitch) * mat2(1.0)))), 0.0, 1.0)) - sin(vec4(0.0, 0.0, 0.0, 0.0))))).x, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), float(_GLF_FUZZED(53.82)), bool(false)))))))), bool(true)))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(76.37)), float(injectionSwitch.x), bool(true)))), (clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_FUZZED(-5098.9081)), (_GLF_IDENTITY(float(_GLF_FUZZED(-5098.9081)), max(_GLF_IDENTITY(float(_GLF_FUZZED(-5098.9081)), (float(_GLF_FUZZED(-5098.9081))) / 1.0), float(_GLF_FUZZED(-5098.9081))))) + 0.0), bool(false))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(vec2(injectionSwitch.x, 0.0)), (true ? float(vec2(injectionSwitch.x, 0.0)) : _GLF_FUZZED(-7.0))), mix(_GLF_IDENTITY(float(_GLF_FUZZED(-719.913)), float(vec2(float(_GLF_FUZZED(-719.913)), _GLF_ZERO(0.0, injectionSwitch.x)))), float(float(vec2(injectionSwitch.x, 0.0))), bool(true)))), injectionSwitch.x)) * _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(37.85)), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(true))))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, false, false)))) || false), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))) && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)), (bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_IDENTITY(true, (true) && true), true))) && true)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))) && _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true), (true) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true)))), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true)))))), (_GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true)))))), ! (! (! (! (bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true)))))))))) && true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, sin(sqrt(0.0)))), clamp(vec2(mat3(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, sin(sqrt(0.0)))), vec2(mat3(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, sin(sqrt(0.0)))), vec2(mat3(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, sin(sqrt(0.0))))))).y)))) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0), (mat2x4(injectionSwitch, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0)) + mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0)))) / 1.0), 0.0, 0.0)))).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y), 0.0, 1.0, 1.0), (mat2x4(injectionSwitch, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 1.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0)), max(float(mat2x4(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 1.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0)), float(mat2x4(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 1.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0))))), 1.0, 1.0)) + mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))))) / 1.0), 0.0, 0.0)))).x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))), vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(2878.6471) : _GLF_IDENTITY(1.0, 1.0 * (1.0)))), clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(2878.6471) : _GLF_IDENTITY(1.0, 1.0 * (1.0)))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(2878.6471) : _GLF_IDENTITY(1.0, 1.0 * (1.0)))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(2878.6471) : _GLF_IDENTITY(1.0, 1.0 * (1.0)))))), 1.0), (mat2x4(injectionSwitch, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0)) + mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), 1.0, 0.0, 1.0)))) / 1.0), 0.0, 0.0)))).x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (false))) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) + _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(65368u) : 0u)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), injectionSwitch)).x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(12288u) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), (subgroup_size) | 0u))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(12288u) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), (subgroup_size) | 0u))), min(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(12288u) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), (subgroup_size) | 0u))), _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(12288u) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), (subgroup_size) | 0u))))))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))) + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED(12288u) : _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) << (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))) | 0u)), (_GLF_IDENTITY((false ? _GLF_FUZZED(12288u) : _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) << (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))) | 0u)), min((false ? _GLF_FUZZED(12288u) : _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) << (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))) | 0u)), (false ? _GLF_FUZZED(12288u) : _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) << (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))) | 0u))))) - (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))), 0u, 1u, 0u), (uvec4(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uvec2(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), 1u))) * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(12288u) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uvec2(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), 1u))) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (false ? _GLF_FUZZED(12288u) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)))), ~ _GLF_IDENTITY((~ (~ (workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uvec2(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), 1u))) * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(false ? _GLF_FUZZED(12288u) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ 0u)), 0u ^ (false ? _GLF_FUZZED(_GLF_IDENTITY(12288u, (12288u) | 0u)) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ 0u))))))))), ((~ (~ (workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uvec2(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), 1u))) * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(false ? _GLF_FUZZED(12288u) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ 0u)), 0u ^ (false ? _GLF_FUZZED(_GLF_IDENTITY(12288u, (12288u) | 0u)) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ 0u)))))))))) - (0u | 0u)))), ~ (~ ((_GLF_IDENTITY(~ (workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uvec2(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), 1u))) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (false ? _GLF_FUZZED(12288u) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)))), ~ _GLF_IDENTITY((~ (~ (workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uvec2(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), 1u))) * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(false ? _GLF_FUZZED(12288u) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ 0u)), 0u ^ (false ? _GLF_FUZZED(_GLF_IDENTITY(12288u, (12288u) | 0u)) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ 0u))))))))), ((~ (~ (workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uvec2(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), 1u))) * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(false ? _GLF_FUZZED(12288u) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ 0u)), 0u ^ (false ? _GLF_FUZZED(_GLF_IDENTITY(12288u, (12288u) | 0u)) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ 0u)))))))))) - (0u | 0u)))))))), _GLF_IDENTITY(0u, (0u) | 0u), 1u, 0u)) - uvec4(0u, 0u, 0u, 0u)), max(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED(12288u) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)), (true ? _GLF_IDENTITY((false ? _GLF_FUZZED(12288u) : _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)) * (1u & 1u), (((subgroup_size)) * (1u & 1u)) | (_GLF_IDENTITY(((subgroup_size)) * (1u & 1u), 0u ^ (((subgroup_size)) * (1u & 1u)))))) | 0u)), max((false ? _GLF_FUZZED(12288u) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)), _GLF_IDENTITY((false ? _GLF_FUZZED(12288u) : _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) | 0u)), ((false ? _GLF_FUZZED(12288u) : _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size)))) | 0u))) | ((false ? _GLF_FUZZED(12288u) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) | (0u)))))))))) : _GLF_FUZZED(subgroup_id)))), 0u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 1u * (1u))) / 1u), 0u), (uvec4(workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroup_id), 0u + (uint(subgroup_id))), uint(uint(uint(subgroup_id)))))), 0u ^ (subgroup_id)), 1u)), ~ (~ (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uint(subgroup_id), uint(uint(uint(subgroup_id)))))), 0u ^ (subgroup_id)), 1u)), max(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uint(subgroup_id), uint(uint(uint(subgroup_id)))))), 0u ^ (subgroup_id)), 1u)), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uint(subgroup_id), uint(uint(uint(subgroup_id)))))), 0u ^ (subgroup_id)), 1u)))))))) * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ((false) || false) || false)) ? _GLF_FUZZED(12288u) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), 1u * (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ((false) || false) || false)) ? _GLF_FUZZED(12288u) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))))), 0u, 1u, 0u)) - uvec4(0u, 0u, 0u, 0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_IDENTITY(_GLF_FUZZED(12288u), max(_GLF_FUZZED(12288u), _GLF_FUZZED(12288u))) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), 0u, _GLF_IDENTITY(1u, (1u) | 0u), 0u), (uvec4(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(subgroup_size))), uint(uvec2(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), 1u))) * _GLF_IDENTITY(subgroup_size, (false ? _GLF_IDENTITY(_GLF_FUZZED(12288u), 0u + (_GLF_FUZZED(12288u))) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), 0u, 1u, 0u)) - uvec4(0u, 0u, 0u, 0u)), max(_GLF_IDENTITY(uvec4(workgroup_base + _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) ? _GLF_FUZZED(12288u) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)), max((_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) ? _GLF_FUZZED(12288u) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (subgroup_size) | 0u)), (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), bool(bvec2(true, true)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(-5.5)), float(float(mat4(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0))), bool(true)))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), injectionSwitch.x)) < injectionSwitch.y)), false, _GLF_IDENTITY(true, bool(bvec2(true, true)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) && true), false, _GLF_IDENTITY(true, bool(bvec2(true, true))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) && true), false, _GLF_IDENTITY(true, bool(bvec2(true, true)))))))))))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(true, bool(bvec2(true, true)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(true, bool(bvec2(true, true)))))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(true, bool(bvec2(true, true)))))))))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(true, bool(bvec2(true, true)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(true, bool(bvec2(true, true)))))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(true, bool(bvec2(true, true))))))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(true, bool(bvec2(true, true)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(true, bool(bvec2(true, true)))))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(true, bool(bvec2(true, true))))))))))), true)))))))))), true))) ? _GLF_FUZZED(12288u) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))))), 0u, 1u, 0u), (uvec4(workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uvec2(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), 1u))) * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(12288u) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), 0u, 1u, 0u)) - uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec4(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(12288u) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), 0u, 1u, 0u), (uvec4(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uvec2(_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) << 0u, uint(_GLF_IDENTITY(uint((subgroup_id) << 0u), (false ? _GLF_FUZZED(num_workgroup) : uint((subgroup_id) << 0u)))))))))), 1u))) * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(12288u) : _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | 0u, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false) ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY((subgroup_size) | 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((subgroup_size) | 0u))))))), (workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) << 0u, uint(_GLF_IDENTITY(uint((subgroup_id) << 0u), (false ? _GLF_FUZZED(num_workgroup) : uint(_GLF_IDENTITY((subgroup_id), min((subgroup_id), _GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))))) << 0u)))))))))), 1u)), (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) << 0u, uint(_GLF_IDENTITY(uint((subgroup_id) << 0u), (false ? _GLF_FUZZED(num_workgroup) : uint(_GLF_IDENTITY((subgroup_id), min((subgroup_id), _GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))))) << 0u)))))))))), 1u)), max(uint(uvec2(_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) << 0u, uint(_GLF_IDENTITY(uint((subgroup_id) << 0u), (false ? _GLF_FUZZED(num_workgroup) : uint(_GLF_IDENTITY((subgroup_id), min((subgroup_id), _GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))))) << 0u)))))))))), 1u)), uint(uvec2(_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) << 0u, uint(_GLF_IDENTITY(uint((subgroup_id) << 0u), (false ? _GLF_FUZZED(num_workgroup) : uint(_GLF_IDENTITY((subgroup_id), min((subgroup_id), _GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))))) << 0u)))))))))), 1u))))) | 0u)) * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(12288u) : _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | 0u, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, bool(bvec3(false, false, false)))) ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY((subgroup_size) | 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((subgroup_size) | 0u)))))))) - (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(0u), uint(0u)))), 0u, 1u, _GLF_IDENTITY(0u, (0u) << 0u))) - uvec4(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(max(0u, 0u), (false ? _GLF_FUZZED((subgroup_size - num_workgroup)) : max(0u, 0u))))) / 1u), 0u)), min(_GLF_IDENTITY(uvec4(workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_base))), subgroup_size)), (false ? _GLF_FUZZED(12288u) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), 0u, 1u, 0u), _GLF_IDENTITY((uvec4(workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uvec2(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), 1u))) * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(12288u) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), 0u, 1u, 0u)) - uvec4(0u, 0u, 0u, 0u), min(_GLF_IDENTITY((uvec4(workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uvec2(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), 1u))) * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(12288u) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), 0u, 1u, 0u)) - uvec4(0u, 0u, 0u, 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((uvec4(workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uvec2(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), 1u))) * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(12288u) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), 0u, 1u, 0u)) - uvec4(0u, 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) / 1u))), 0u), ((uvec4(workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uvec2(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), 1u))) * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(12288u) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), 0u, 1u, 0u)) - uvec4(0u, 0u, 0u, 0u)) + uvec4(0u, 0u, 0u, 0u))), min(~ (_GLF_IDENTITY((uvec4(workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uvec2(_GLF_IDENTITY(subgroup_id, 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec4(subgroup_id, 1u, 1u, 0u), clamp(uvec4(subgroup_id, 1u, 1u, 0u), uvec4(subgroup_id, 1u, 1u, 0u), uvec4(subgroup_id, 1u, 1u, 0u)))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec4(subgroup_id, 1u, 1u, 0u), clamp(uvec4(subgroup_id, 1u, 1u, 0u), uvec4(subgroup_id, 1u, 1u, 0u), uvec4(subgroup_id, 1u, 1u, 0u)))))), min((_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec4(subgroup_id, 1u, 1u, 0u), clamp(uvec4(subgroup_id, 1u, 1u, 0u), uvec4(subgroup_id, 1u, 1u, 0u), uvec4(subgroup_id, 1u, 1u, 0u)))))), (_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec4(subgroup_id, 1u, 1u, 0u), clamp(uvec4(subgroup_id, 1u, 1u, 0u), uvec4(subgroup_id, 1u, 1u, 0u), uvec4(subgroup_id, 1u, 1u, 0u)))))))))))), 1u))) * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(12288u) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), 0u, 1u, 0u)) - uvec4(0u, 0u, 0u, 0u), ((uvec4(workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uvec2(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), 1u))) * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(false ? _GLF_FUZZED(12288u) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(false ? _GLF_FUZZED(12288u) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), min(false ? _GLF_FUZZED(12288u) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), false ? _GLF_FUZZED(12288u) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)))) | 0u))), 0u, 1u, 0u)) - uvec4(0u, 0u, 0u, 0u)) + uvec4(0u, 0u, 0u, 0u))), ~ (_GLF_IDENTITY((uvec4(workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uvec2(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), 1u))) * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false))) ? _GLF_FUZZED(12288u) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), 0u, 1u, 0u)) - uvec4(0u, 0u, 0u, 0u), ((uvec4(workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uvec2(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), 1u))) * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(12288u) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), 0u, 1u, 0u)) - uvec4(0u, 0u, 0u, 0u)) + uvec4(0u, 0u, 0u, 0u))))))), (uvec4(workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uvec2(_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))), 1u))) * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(12288u) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), 0u, 1u, 0u)) - uvec4(0u, 0u, 0u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(uvec4(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(12288u) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | 0u, 0u | (_GLF_IDENTITY((subgroup_size) | 0u, ((subgroup_size) | 0u) | ((subgroup_size) | 0u))))), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | 0u, 0u | (_GLF_IDENTITY((subgroup_size) | 0u, ((subgroup_size) | 0u) | ((subgroup_size) | 0u)))))) ^ 0u))), 0u, 1u, 0u), max(uvec4(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(12288u) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | 0u, 0u | (_GLF_IDENTITY((subgroup_size) | 0u, ((subgroup_size) | 0u) | ((subgroup_size) | 0u))))), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | 0u, 0u | (_GLF_IDENTITY((subgroup_size) | 0u, ((subgroup_size) | 0u) | ((subgroup_size) | 0u)))))) ^ 0u))), 0u, 1u, 0u), uvec4(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(12288u) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | 0u, 0u | (_GLF_IDENTITY((subgroup_size) | 0u, ((subgroup_size) | 0u) | ((subgroup_size) | 0u))))), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | 0u, 0u | (_GLF_IDENTITY((subgroup_size) | 0u, ((subgroup_size) | 0u) | ((subgroup_size) | 0u)))))) ^ 0u))), 0u, 1u, 0u))), (uvec4(workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uvec2(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, min(0u, 0u)), 0u)) ^ _GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(uint(uint((subgroup_id))), min(uint(uint((subgroup_id))), uint(_GLF_IDENTITY(uint((subgroup_id)), min(uint((subgroup_id)), _GLF_IDENTITY(uint((subgroup_id)), 1u * (uint((subgroup_id))))))))))), 1u))) * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(12288u) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, (0u) - 0u)))))))), 0u, 1u, 0u)) - uvec4(0u, 0u, 0u, 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(uvec4(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_IDENTITY(_GLF_FUZZED(12288u), (true ? _GLF_FUZZED(12288u) : _GLF_FUZZED(workgroup_id))) : _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), _GLF_IDENTITY((subgroup_size), 0u ^ ((subgroup_size))))) | 0u, ((subgroup_size) | 0u) >> (1u ^ 1u))))), 0u, 1u, 0u), (uvec4(workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uvec2(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), 1u))) * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(12288u) : _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (0u & 31413u) | (subgroup_size)))))) | 0u))), 0u, 1u, 0u)) - uvec4(0u, 0u, 0u, 0u)), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec4(workgroup_base + _GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)))) * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(12288u) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, max(0u, 0u))))))), 0u, _GLF_IDENTITY(1u, (1u) ^ _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_base))), 0u)) ^ (0u))), 0u), (uvec4(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + _GLF_IDENTITY(subgroup_id, uint(uvec2(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), _GLF_IDENTITY(1u, (1u) | 0u)))) * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(_GLF_IDENTITY(12288u, (12288u) >> 0u)) : _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | 0u, clamp(_GLF_IDENTITY((subgroup_size) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 1u * (0u))) | 0u), ((subgroup_size) | 0u) / 1u), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) | 0u, 0u ^ ((subgroup_size) | 0u)), 0u ^ ((subgroup_size) | 0u)), (subgroup_size) | 0u))))), 0u, 1u, 0u)) - uvec4(_GLF_IDENTITY(0u, (0u) * _GLF_IDENTITY(1u, (1u) - (0u ^ 0u))), 0u, 0u, 0u)))))), _GLF_IDENTITY(uvec4(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(12288u) : _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), subgroup_size, _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))) | 0u))), 0u, 1u, 0u), _GLF_IDENTITY((uvec4(workgroup_base + _GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), 1u), _GLF_IDENTITY((uvec2(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), _GLF_IDENTITY(1u, 1u * (1u)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((uvec2(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(1u, 1u * (1u)), 0u ^ (_GLF_IDENTITY(1u, 1u * (1u))))))), (~ ((uvec2(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), _GLF_IDENTITY(1u, 1u * (1u)))))) - uvec2(0u, 0u)), (_GLF_IDENTITY(~ ((uvec2(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(1u, 1u * (1u)), 0u ^ (_GLF_IDENTITY(1u, 1u * (1u))))))), (~ ((uvec2(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), _GLF_IDENTITY(1u, 1u * (1u)))))) - _GLF_IDENTITY(uvec2(0u, 0u), clamp(_GLF_IDENTITY(uvec2(0u, 0u), max(uvec2(0u, 0u), uvec2(0u, 0u))), uvec2(0u, 0u), uvec2(0u, 0u))))) * uvec2(1u, 1u)))) * uvec2(1u, 1u)))) * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(12288u) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (false ? _GLF_FUZZED(12288u) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) / 1u)), (false ? _GLF_FUZZED(subgroup_id) : (false ? _GLF_FUZZED(12288u) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (subgroup_size) | 0u))))), 0u, 1u, 0u)), (true ? (uvec4(workgroup_base + _GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), 1u), _GLF_IDENTITY((uvec2(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), _GLF_IDENTITY(1u, 1u * (1u)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((uvec2(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(1u, 1u * (1u)), 0u ^ (_GLF_IDENTITY(1u, 1u * (1u))))))), (~ ((uvec2(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), _GLF_IDENTITY(1u, 1u * (1u)))))) - uvec2(0u, 0u)), (_GLF_IDENTITY(~ ((uvec2(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(1u, 1u * (1u)), 0u ^ (_GLF_IDENTITY(1u, 1u * (1u))))))), (~ ((uvec2(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), _GLF_IDENTITY(1u, 1u * (1u)))))) - _GLF_IDENTITY(uvec2(0u, 0u), clamp(_GLF_IDENTITY(uvec2(0u, 0u), max(uvec2(0u, 0u), uvec2(0u, 0u))), uvec2(0u, 0u), uvec2(0u, 0u))))) * uvec2(1u, 1u)))) * uvec2(1u, 1u)))) * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(12288u) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (false ? _GLF_FUZZED(12288u) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) / 1u)), (false ? _GLF_FUZZED(subgroup_id) : (false ? _GLF_FUZZED(12288u) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (subgroup_size) | 0u))))), 0u, 1u, 0u)) : _GLF_FUZZED(uvec4(190856u, 132463u, 105457u, 199161u)))) - uvec4(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((_GLF_IDENTITY(subgroup_local_id * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base))), max(workgroup_base, workgroup_base)), (subgroup_local_id * workgroup_base) / _GLF_IDENTITY(1u, (1u) | (1u))))) : workgroup_base + subgroup_id * subgroup_size)) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(workgroup_base))), min(subgroup_local_id, subgroup_local_id));
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))) >> 0u)) << 0u), min(subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)), min(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)), max((0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)), (0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)))), _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)), 0u | ((0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))))))), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(subgroup_id, 1u, 0u)), (uint(uvec3(subgroup_id, _GLF_IDENTITY(1u, (1u) - 0u), 0u))) - 0u)) * subgroup_size)), subgroup_id * subgroup_size), clamp(_GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * _GLF_IDENTITY(subgroup_size, (0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))), subgroup_id * subgroup_size)), subgroup_id * subgroup_size), (min(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * _GLF_IDENTITY(subgroup_size, (0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))), subgroup_id * subgroup_size)), subgroup_id * subgroup_size)) | (min(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * _GLF_IDENTITY(subgroup_size, (0u << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (true ? 5u : _GLF_FUZZED(subgroup_id)))))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(uint(2u), (uint(2u)) >> 0u)) | (uint(2u))))) >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) | 0u)))), (subgroup_size) << 0u)), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(uint(2u), (uint(2u)) >> 0u)) | (uint(2u))))) >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) | 0u)))), (subgroup_size) << 0u))) >> (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))), subgroup_id * subgroup_size)), subgroup_id * subgroup_size))), min(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u, 0u | (0u)) << _GLF_IDENTITY(uint(5u), uint(5u))) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)), uint(uvec4((_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)), 0u, 0u, 0u)))), subgroup_id * subgroup_size)), subgroup_id * subgroup_size), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u) * subgroup_size, min(subgroup_id * _GLF_IDENTITY(subgroup_size, (0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))), subgroup_id * subgroup_size)), subgroup_id * subgroup_size)))) + ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), ~ (_GLF_IDENTITY(~ (min(subgroup_local_id, subgroup_local_id)), (true ? ~ (min(subgroup_local_id, subgroup_local_id)) : _GLF_FUZZED(subgroup_id)))))) + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))) && true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))) && true, bool(bvec4(_GLF_IDENTITY((false), true && ((false))) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))), false || (_GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))) && true, true && (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_IDENTITY((false), bool(bool((false)))))) && true)))), (_GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))) && true, false || (_GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))) && true, true && (_GLF_IDENTITY(_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), bool(bvec3((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))) && true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), bool(bvec3((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))) && true)), false || (bool(bool(_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), bool(bvec3((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))) && true)))))))))) || false)) && true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(false, (false) && true)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(atanh(injectionSwitch)))).y))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(562.797) : injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))) && true), false, false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, bool(bool(false)))), true, true), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(false, bool(bool(false)))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(true, false, false)))) || false)), (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(true, false, false)))) || false))) && true))), true), true)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-6.2)), bool(false)))) - 0.0))) > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, tan(0.0), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), length(vec2(0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), sin(0.0), 0.0, 1.0)), max(vec2(mat4(injectionSwitch, tan(0.0), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), length(vec2(0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), sin(0.0), 0.0, 1.0)), vec2(mat4(injectionSwitch, tan(0.0), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), length(vec2(0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), sin(0.0), 0.0, 1.0))))).x > injectionSwitch.y), false || (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))), _GLF_IDENTITY(((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) || false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y))))))))))))) && true, bool(bvec2(((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) || false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y))))))))))))) && true, _GLF_IDENTITY(true, bool(bvec3(true, false, true))))))))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), bool(bvec2(bool(bvec4(false, true, false, true)), false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(131098u)), _GLF_FUZZED(4.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))), false), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), false || (bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))), false), true))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(bool((injectionSwitch.x > injectionSwitch.y)), false, false))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))), ! (! (! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), (bool(bvec4(false, false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), _GLF_IDENTITY(bool(bvec2(bool(bvec3(false, true, true)), true)), ! (! (bool(bvec2(bool(bvec3(false, true, true)), true)))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (! (_GLF_DEAD(false)))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(false, bool(bvec2(false, true)))) || false)))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), false || (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))), (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(mix(vec2(1014.2569, 46.60), injectionSwitch, bvec2(true, false))))))).x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-9516.7008, -3.8)))).y))), false)), true && (bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0 + (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, injectionSwitch.x)), mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-77.13)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))) - sqrt(vec2(0.0, 0.0))).x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED((+ -4427.7836))), float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0))).x, injectionSwitch.x))), bool(true))), mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x, injectionSwitch.x))))), float(_GLF_FUZZED(-77.13)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x)) > injectionSwitch.y), false || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-0.4)), bool(false))), injectionSwitch.x))), float(_GLF_FUZZED(5703.5228)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), max(min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x)))), mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-77.13)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), min(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), max(min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x)))), mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-77.13)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), max(min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x)))), mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-77.13)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), true), false, false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && true))) || false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), true, _GLF_IDENTITY(true, false || (true)), true))), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, _GLF_IDENTITY(true, false || (true)), true))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0))), injectionSwitch.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, _GLF_IDENTITY(0.0, (0.0) - 0.0)))), injectionSwitch.x)), min(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0))), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0))), injectionSwitch.x)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, min(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(vec2(injectionSwitch.x, 0.0), 1.0, 1.0, cos(0.0), 0.0), (true ? mat3x2(vec2(injectionSwitch.x, 0.0), 1.0, 1.0, cos(0.0), 0.0) : _GLF_FUZZED(mat3x2(-5.8, 324.578, -9.2, -725.724, -6163.6599, 3.9))))), (vec2(_GLF_IDENTITY(mat3x2(vec2(injectionSwitch.x, 0.0), 1.0, 1.0, cos(0.0), 0.0), (true ? mat3x2(vec2(injectionSwitch.x, 0.0), 1.0, 1.0, cos(0.0), 0.0) : _GLF_FUZZED(mat3x2(-5.8, 324.578, -9.2, -725.724, -6163.6599, 3.9)))))) * vec2(1.0, 1.0))))), injectionSwitch.x)), min(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0))), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0))), injectionSwitch.x)))))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec2(injectionSwitch.x, 0.0)), (float(vec2(injectionSwitch.x, 0.0))) / 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(0, 0)), ~ (~ (_GLF_IDENTITY(int(ivec2(0, 0)), (int(ivec2(0, 0))) >> 0)))))], injectionSwitch[1])), mix(vec2(_GLF_FUZZED(31.94), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1]), vec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[0], _GLF_FUZZED(216.472)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x)) > injectionSwitch.y)) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0))), injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0))), injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0))), injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0))), injectionSwitch.x))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0))), injectionSwitch.x)), (false ? _GLF_FUZZED(-7.4) : _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0))), injectionSwitch.x)))))) > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), min(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0))), injectionSwitch.x)) > injectionSwitch.y)) && _GLF_IDENTITY(true, bool(bool(true)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), false || (true && (false)))))))))
    return;
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(214.414)), float(injectionSwitch.y), bool(true))))) && (_GLF_DEAD(false)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) / abs(vec2(1.0, 1.0))).x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), injectionSwitch)).y)) && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, exp(0.0) * (injectionSwitch.x)) < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec4((_GLF_DEAD(false)), false, true, true)), (bool(bvec4((_GLF_DEAD(false)), false, true, true))) || false))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))), vec2(1.0, 1.0) * (mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))))).y)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), true && (bool((injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), true && (bool((injectionSwitch.x > injectionSwitch.y)))))), true))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), true && (bool((injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), true && (bool((injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(! (_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), true && (bool((injectionSwitch.x > injectionSwitch.y))))), true, true, false))))))))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), true && (bool((injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), true && (bool((injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(! (_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), true && (bool((injectionSwitch.x > injectionSwitch.y))))), true, true, false))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, true && (false))), bvec2(bvec2(bvec2(false, false))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, 0.0, 0.0))) > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true && (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, 0.0))))))).x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-7401.0031)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true && (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, 0.0))))))).x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, true))))), true))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(656.133) : 1.0)))).y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)).y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))))) && true)) && true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(6.6) : injectionSwitch.y)) : _GLF_FUZZED(2157.5050)))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))))) && true, true && ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))) && true)))), ! (! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y)) && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && (false || (false))))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(64.96))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), false || (bool(bool(injectionSwitch.x > injectionSwitch.y)))))), ! _GLF_IDENTITY((! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(38.95), float(vec3(_GLF_FUZZED(38.95), 1.0, length(vec3(0.0, 0.0, 0.0))))) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))), ((! _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(38.95) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * vec2(1.0, 1.0))).y)))))), false || (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false ? _GLF_FUZZED(38.95) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(float(float(false ? _GLF_FUZZED(38.95) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), clamp(float(float(false ? _GLF_FUZZED(38.95) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), float(float(false ? _GLF_FUZZED(38.95) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), float(float(false ? _GLF_FUZZED(38.95) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((false), ((false)) || false), true)), ! (! (bool(bvec2(_GLF_IDENTITY((false), ((false)) || false), true))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((false), ((false)) || false), true)), ! (! (bool(bvec2(_GLF_IDENTITY((false), ((false)) || false), true)))))), ! (! (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((false), ((false)) || false), true)), ! _GLF_IDENTITY((! (bool(bvec2(_GLF_IDENTITY((false), ((false)) || false), true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (bool(bvec2(_GLF_IDENTITY((false), ((false)) || false), true)))))))))))), (! (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((false), ((false)) || false), true)), ! (! (bool(bvec2(_GLF_IDENTITY((false), ((false)) || false), true)))))))) || false)) || false)))), bool(bool(! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), ((false)) || false), true)), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), ((false)) || false), true))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((false), ((false)) || false), true)), ! (! (bool(bvec2(_GLF_IDENTITY((false), ((false)) || false), true))))))), (! (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((false), ((false)) || false), true)), ! (! (bool(bvec2(_GLF_IDENTITY((false), ((false)) || false), true)))))))) || false)) || false))))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((false), ((false)) || false), true)), ! (! (bool(bvec2(_GLF_IDENTITY((false), ((false)) || false), true))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || false), ! (! (_GLF_IDENTITY((false), ((false)) || false)))), true)), ! (! (bool(bvec2(_GLF_IDENTITY((false), ((false)) || false), true)))))), ! (! (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((false), ((false)) || false), true)), ! _GLF_IDENTITY((! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || false), ! (! (_GLF_IDENTITY((false), ((false)) || false)))), true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (bool(bvec2(_GLF_IDENTITY((false), ((false)) || false), true)))))))))))), (! (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || false), false || (_GLF_IDENTITY((false), ((false)) || false))), true)), ! (! (bool(bvec2(_GLF_IDENTITY((false), ((false)) || false), true)))))))) || false)) || false)))), bool(bool(! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), ((false)) || false), true)), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), ((false)) || false), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((false), ((false)) || false), true)), ! (! (bool(bvec2(_GLF_IDENTITY((false), ((false)) || false), true))))))), (! (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), true), bvec3(bvec4(bvec3(bvec2(false, false), true), true)))))))), ((false)) || false), true)), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), ((false)) || false), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((false), ((false)) || false), true), false, false)))))))))) || false)) || false)))))))))))))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), false || (bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), bool(bvec4(false || (_GLF_DEAD(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))), false || (bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))))))) && true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (! (false))), ! (! (! (false)))))))), _GLF_IDENTITY(bool(bvec4((! (false)), true, true, true)), (bool(bvec4((! (false)), true, _GLF_IDENTITY(true, (true) && true), true))) || false)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), (_GLF_IDENTITY(1, min(1, 1))) | (_GLF_IDENTITY(1, min(1, 1)))), max(_GLF_IDENTITY(1, int(int(1))), 1))), _GLF_IDENTITY(_GLF_IDENTITY(0u ^ (uint(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), max(_GLF_IDENTITY(1, int(int(1))), 1)))), uint(uvec3(0u ^ (uint(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), max(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), (0 | 0) ^ (int(int(1))))), 1)))), 0u, 0u))), (0u ^ (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), max(_GLF_IDENTITY(1, int(int(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, clamp(1, 1, 1))))))), 1))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, clamp(1, 1, 1)))), max(_GLF_IDENTITY(1, int(int(1))), 1)))) / (1u ^ 0u)))) * _GLF_IDENTITY(1u, (1u) - 0u))), _GLF_IDENTITY(4, 0 | (4)), 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(136532u)))) / 1u)], (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, false || (true)), true, false), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(bvec3(true, true, false)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(true, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(true, true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(true, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), _GLF_TRUE(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y, true, true)))))))) && (true)), true, _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (false)) || (false))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (false)) || (false))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (false)) || (false))), true, false, true)), bool(bvec3(bool(bvec4((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), true && (false)) || (false))), true, false, true)), true, false))))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-6.5)), float(injectionSwitch.x), bool(true)))) / 1.0), 1.0, 0.0), vec3(mat4x2(vec3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-6.5)), float(injectionSwitch.x), bool(true)))) / 1.0, mix(float(_GLF_FUZZED(6.1)), float((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-6.5)), float(injectionSwitch.x), bool(true)))) / 1.0), bool(true)))), 1.0, 0.0), 0.0, sqrt(1.0), 0.0, 0.0, 1.0))))) < injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))) ? buf[virtual_gid] : _GLF_FUZZED(workgroup_id))), _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), 0 ^ (_GLF_IDENTITY(4, (4) / ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), int(3)), max(1 << _GLF_IDENTITY(int(3), int(3)), 1 << _GLF_IDENTITY(int(3), int(3))))) >> _GLF_IDENTITY(int(3), int(3)))))), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, int(ivec4(0, 1, 0, _GLF_IDENTITY(1, int(ivec3(1, 1, 1)))))), 0)) ^ (_GLF_IDENTITY(4, (4) / ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(int(3), int(3)))), int(int(~ (~ (_GLF_IDENTITY(int(3), int(3))))))))) << 0)) >> _GLF_IDENTITY(int(3), int(3))))))))), min(4, 4)), (_GLF_IDENTITY(4, min(4, 4))) << 0)))), 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, uint(uvec2(read, 0u))), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(67.88)))), 0.0, 0.0, 0.0))), injectionSwitch)).x, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.0), _GLF_FUZZED(-684.008)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) : _GLF_FUZZED(injectionSwitch))).y)) ? _GLF_FUZZED(1.5) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 1.0, abs(0.0), 1.0, abs(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(9.9, (_GLF_IDENTITY(false ? _GLF_FUZZED(-705.220) : 9.9, float(mat2(_GLF_IDENTITY(false ? _GLF_FUZZED(-705.220) : 9.9, (false ? _GLF_FUZZED(log2(-9.0)) : false ? _GLF_FUZZED(-705.220) : 9.9)), 1.0, 1.0, 1.0)))))), (true ? _GLF_IDENTITY(_GLF_FUZZED(9.9), max(_GLF_IDENTITY(_GLF_FUZZED(9.9), min(_GLF_FUZZED(9.9), _GLF_FUZZED(9.9))), _GLF_FUZZED(9.9))) : _GLF_FUZZED(1973.8545)))), (float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(9.9, (_GLF_IDENTITY(false ? _GLF_FUZZED(-705.220) : 9.9, float(mat2(_GLF_IDENTITY(false ? _GLF_FUZZED(-705.220) : 9.9, (false ? _GLF_FUZZED(log2(-9.0)) : false ? _GLF_FUZZED(-705.220) : 9.9)), 1.0, 1.0, 1.0)))))), (true ? _GLF_IDENTITY(_GLF_FUZZED(9.9), max(_GLF_IDENTITY(_GLF_FUZZED(9.9), min(_GLF_FUZZED(9.9), _GLF_FUZZED(9.9))), _GLF_FUZZED(9.9))) : _GLF_FUZZED(1973.8545))))) / 1.0), float(float(mat4x3(injectionSwitch.x, 1.0, abs(0.0), 1.0, abs(_GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), float(mat4x2(_GLF_IDENTITY(clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), max(clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))), determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, 0.0, 1.0, cos(0.0), 1.0))))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))), bool(true)))), clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 1.0, abs(0.0), 1.0, abs(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), mix(float(_GLF_IDENTITY(_GLF_FUZZED(9.9), (true ? _GLF_IDENTITY(_GLF_FUZZED(9.9), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(9.9), (_GLF_FUZZED(9.9)) / 1.0), min(_GLF_FUZZED(9.9), _GLF_IDENTITY(_GLF_FUZZED(9.9), (false ? _GLF_FUZZED(-106.964) : _GLF_IDENTITY(_GLF_FUZZED(9.9), max(_GLF_IDENTITY(_GLF_FUZZED(9.9), (_GLF_FUZZED(9.9)) + 0.0), _GLF_FUZZED(9.9))))))), _GLF_FUZZED(9.9))) : _GLF_FUZZED(1973.8545)))), float(_GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-10.40)), float(injectionSwitch.x), bool(true))), 1.0, abs(0.0), 1.0, abs(0.0), 1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0, 1.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY((_GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-10.40)), float(injectionSwitch.x), bool(true))), 1.0, abs(0.0), 1.0, abs(0.0), 1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0, 1.0, 1.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(1527.1328)), float(float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-10.40)), float(injectionSwitch.x), bool(true))), 1.0, abs(0.0), 1.0, abs(0.0), 1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0, 1.0, 1.0, 1.0, 1.0))), bool(true)))) / 1.0, float(mat2((_GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-10.40)), float(injectionSwitch.x), bool(true))), 1.0, abs(0.0), 1.0, abs(0.0), 1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0, 1.0, 1.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(1527.1328)), float(float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-10.40)), float(injectionSwitch.x), bool(true))), 1.0, abs(0.0), 1.0, abs(0.0), 1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0, 1.0, 1.0, 1.0, 1.0))), bool(true)))) / 1.0, 0.0, 0.0, 1.0))))), bool(true)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))), injectionSwitch)).x, _GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 1.0, abs(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3.2) : 0.0))), 1.0, abs(0.0), 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, tan(0.0), 1.0))), _GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(dot(vec4(log(1.0), 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(log(1.0), 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, cos(0.0), 1.0, 1.0))), 1.0, 1.0)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(9.9), (true ? _GLF_IDENTITY(_GLF_FUZZED(9.9), max(_GLF_IDENTITY(_GLF_FUZZED(9.9), min(_GLF_FUZZED(_GLF_IDENTITY(9.9, clamp(9.9, 9.9, 9.9))), _GLF_FUZZED(9.9))), _GLF_FUZZED(9.9))) : _GLF_FUZZED(1973.8545))), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(9.9), (true ? _GLF_IDENTITY(_GLF_FUZZED(9.9), max(_GLF_IDENTITY(_GLF_FUZZED(9.9), min(_GLF_FUZZED(9.9), _GLF_FUZZED(9.9))), _GLF_FUZZED(9.9))) : _GLF_FUZZED(1973.8545)))))), float(float(mat4x3(injectionSwitch.x, 1.0, abs(0.0), 1.0, abs(0.0), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0))), bool(true)))), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 1.0, _GLF_IDENTITY(abs(0.0), (_GLF_IDENTITY(abs(0.0), max(_GLF_IDENTITY(abs(0.0), float(mat3x4(abs(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))), abs(0.0)))) / 1.0), 1.0, abs(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), clamp(float(mat4x3(injectionSwitch.x, 1.0, _GLF_IDENTITY(abs(0.0), (_GLF_IDENTITY(abs(0.0), max(_GLF_IDENTITY(abs(0.0), float(mat3x4(abs(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))), abs(0.0)))) / 1.0), 1.0, abs(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), float(mat4x3(injectionSwitch.x, 1.0, _GLF_IDENTITY(abs(0.0), (_GLF_IDENTITY(abs(0.0), max(_GLF_IDENTITY(abs(0.0), float(mat3x4(abs(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))), abs(0.0)))) / 1.0), 1.0, abs(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 1.0, _GLF_IDENTITY(abs(0.0), (_GLF_IDENTITY(abs(0.0), max(_GLF_IDENTITY(abs(0.0), float(mat3x4(abs(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))), abs(0.0)))) / 1.0), 1.0, abs(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), clamp(float(mat4x3(injectionSwitch.x, 1.0, _GLF_IDENTITY(abs(0.0), (_GLF_IDENTITY(abs(0.0), max(_GLF_IDENTITY(abs(0.0), float(mat3x4(abs(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))), abs(0.0)))) / 1.0), 1.0, abs(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), float(mat4x3(injectionSwitch.x, 1.0, _GLF_IDENTITY(abs(0.0), (_GLF_IDENTITY(abs(0.0), max(_GLF_IDENTITY(abs(0.0), float(mat3x4(abs(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))), abs(0.0)))) / 1.0), 1.0, abs(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), float(mat4x3(injectionSwitch.x, 1.0, _GLF_IDENTITY(abs(0.0), (_GLF_IDENTITY(abs(0.0), max(_GLF_IDENTITY(abs(0.0), float(mat3x4(abs(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))), abs(0.0)))) / 1.0), 1.0, abs(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(9.9), (true ? _GLF_IDENTITY(_GLF_FUZZED(9.9), max(_GLF_IDENTITY(_GLF_FUZZED(9.9), min(_GLF_FUZZED(9.9), _GLF_FUZZED(9.9))), _GLF_FUZZED(9.9))) : _GLF_FUZZED(1973.8545))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(9.9), (true ? _GLF_IDENTITY(_GLF_FUZZED(9.9), max(_GLF_IDENTITY(_GLF_FUZZED(9.9), min(_GLF_FUZZED(9.9), _GLF_FUZZED(9.9))), _GLF_FUZZED(9.9))) : _GLF_FUZZED(1973.8545))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(9.9), (true ? _GLF_IDENTITY(_GLF_FUZZED(9.9), max(_GLF_IDENTITY(_GLF_FUZZED(9.9), min(_GLF_FUZZED(9.9), _GLF_FUZZED(9.9))), _GLF_FUZZED(9.9))) : _GLF_FUZZED(1973.8545))), (_GLF_IDENTITY(_GLF_FUZZED(9.9), (true ? _GLF_IDENTITY(_GLF_FUZZED(9.9), max(_GLF_IDENTITY(_GLF_FUZZED(9.9), min(_GLF_FUZZED(9.9), _GLF_FUZZED(9.9))), _GLF_FUZZED(9.9))) : _GLF_FUZZED(1973.8545)))) - 0.0), _GLF_IDENTITY(_GLF_FUZZED(9.9), (true ? _GLF_IDENTITY(_GLF_FUZZED(9.9), max(_GLF_IDENTITY(_GLF_FUZZED(9.9), min(_GLF_FUZZED(9.9), _GLF_FUZZED(9.9))), _GLF_FUZZED(9.9))) : _GLF_FUZZED(1973.8545))))), _GLF_IDENTITY(_GLF_FUZZED(9.9), (true ? _GLF_IDENTITY(_GLF_FUZZED(9.9), max(_GLF_IDENTITY(_GLF_FUZZED(9.9), min(_GLF_FUZZED(9.9), _GLF_FUZZED(9.9))), _GLF_FUZZED(9.9))) : _GLF_FUZZED(1973.8545))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(9.9), (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(9.9, (false ? _GLF_FUZZED(69.82) : _GLF_IDENTITY(9.9, float(_GLF_IDENTITY(mat3x4(9.9, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, tan(0.0), 0.0, 1.0), mat4(1.0) * (mat3x4(9.9, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, tan(0.0), 0.0, 1.0)))))))), max(_GLF_IDENTITY(_GLF_FUZZED(9.9), min(_GLF_FUZZED(9.9), _GLF_FUZZED(9.9))), _GLF_FUZZED(9.9))) : _GLF_FUZZED(1973.8545), cos(0.0) * (true ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(9.9, (false ? _GLF_FUZZED(69.82) : _GLF_IDENTITY(9.9, float(_GLF_IDENTITY(mat3x4(9.9, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, tan(0.0), 0.0, 1.0), mat4(1.0) * (mat3x4(9.9, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, tan(0.0), 0.0, 1.0)))))))), max(_GLF_IDENTITY(_GLF_FUZZED(9.9), min(_GLF_FUZZED(9.9), _GLF_FUZZED(9.9))), _GLF_FUZZED(9.9))) : _GLF_FUZZED(1973.8545))))), _GLF_IDENTITY(_GLF_IDENTITY(float(mat3(_GLF_IDENTITY(_GLF_FUZZED(9.9), (true ? _GLF_IDENTITY(_GLF_FUZZED(9.9), max(_GLF_IDENTITY(_GLF_FUZZED(9.9), min(_GLF_FUZZED(9.9), _GLF_FUZZED(9.9))), _GLF_FUZZED(9.9))) : _GLF_FUZZED(1973.8545))), 0.0, 1.0, 1.0, log(1.0), exp(0.0), 1.0, 1.0, 0.0)), float(mat2x3(float(mat3(_GLF_IDENTITY(_GLF_FUZZED(9.9), (true ? _GLF_IDENTITY(_GLF_FUZZED(9.9), max(_GLF_IDENTITY(_GLF_FUZZED(9.9), min(_GLF_FUZZED(9.9), _GLF_FUZZED(9.9))), _GLF_FUZZED(9.9))) : _GLF_FUZZED(1973.8545))), 0.0, 1.0, 1.0, log(1.0), exp(0.0), 1.0, 1.0, 0.0)), 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0))), mix(float(float(mat3(_GLF_IDENTITY(_GLF_FUZZED(9.9), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_FUZZED(9.9), max(_GLF_IDENTITY(_GLF_FUZZED(9.9), min(_GLF_FUZZED(9.9), _GLF_FUZZED(9.9))), _GLF_FUZZED(9.9))) : _GLF_FUZZED(1973.8545)), min((true ? _GLF_IDENTITY(_GLF_FUZZED(9.9), max(_GLF_IDENTITY(_GLF_FUZZED(9.9), min(_GLF_FUZZED(9.9), _GLF_FUZZED(9.9))), _GLF_FUZZED(9.9))) : _GLF_FUZZED(1973.8545)), (true ? _GLF_IDENTITY(_GLF_FUZZED(9.9), max(_GLF_IDENTITY(_GLF_FUZZED(9.9), min(_GLF_FUZZED(9.9), _GLF_FUZZED(9.9))), _GLF_FUZZED(9.9))) : _GLF_FUZZED(1973.8545))))), 0.0, 1.0, 1.0, log(1.0), exp(0.0), 1.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(determinant(mat3(3558.5217, 765.725, -78.42, 2874.6965, -33.74, 8.3, 1.8, -8975.6918, 779.390))) : 0.0))))), float(_GLF_FUZZED(7.7)), bool(false)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(9.9), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_FUZZED(9.9), max(_GLF_IDENTITY(_GLF_FUZZED(9.9), min(_GLF_FUZZED(9.9), _GLF_FUZZED(9.9))), _GLF_FUZZED(9.9))) : _GLF_FUZZED(1973.8545)), float(_GLF_IDENTITY(vec4((true ? _GLF_IDENTITY(_GLF_FUZZED(9.9), max(_GLF_IDENTITY(_GLF_FUZZED(9.9), min(_GLF_FUZZED(9.9), _GLF_FUZZED(9.9))), _GLF_FUZZED(9.9))) : _GLF_FUZZED(1973.8545)), 1.0, exp(log(1.0)), 1.0), mix(vec4((vec4((true ? _GLF_IDENTITY(_GLF_FUZZED(9.9), max(_GLF_IDENTITY(_GLF_FUZZED(9.9), min(_GLF_FUZZED(9.9), _GLF_FUZZED(9.9))), _GLF_FUZZED(9.9))) : _GLF_FUZZED(1973.8545)), 1.0, exp(log(1.0)), 1.0))[0], _GLF_FUZZED(179.370), (vec4((true ? _GLF_IDENTITY(_GLF_FUZZED(9.9), max(_GLF_IDENTITY(_GLF_FUZZED(9.9), min(_GLF_FUZZED(9.9), _GLF_FUZZED(9.9))), _GLF_FUZZED(9.9))) : _GLF_FUZZED(1973.8545)), 1.0, exp(log(1.0)), 1.0))[2], (vec4((true ? _GLF_IDENTITY(_GLF_FUZZED(9.9), max(_GLF_IDENTITY(_GLF_FUZZED(9.9), min(_GLF_FUZZED(9.9), _GLF_FUZZED(9.9))), _GLF_FUZZED(9.9))) : _GLF_FUZZED(1973.8545)), 1.0, exp(log(1.0)), 1.0))[3]), vec4(_GLF_FUZZED(1662.7216), (vec4((true ? _GLF_IDENTITY(_GLF_FUZZED(9.9), max(_GLF_IDENTITY(_GLF_FUZZED(9.9), min(_GLF_FUZZED(9.9), _GLF_FUZZED(9.9))), _GLF_FUZZED(9.9))) : _GLF_FUZZED(1973.8545)), 1.0, exp(log(1.0)), 1.0))[1], _GLF_FUZZED(2269.3879), _GLF_FUZZED(4.5)), bvec4(false, true, false, false)))))), (_GLF_IDENTITY(_GLF_FUZZED(9.9), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_FUZZED(9.9), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(9.9), (_GLF_IDENTITY(_GLF_FUZZED(9.9), float(mat3x2(_GLF_FUZZED(9.9), 1.0, 1.0, 0.0, 1.0, 1.0)))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_FUZZED(9.9), _GLF_FUZZED(9.9)), cos(0.0) * (_GLF_IDENTITY(min(_GLF_FUZZED(9.9), _GLF_FUZZED(9.9)), min(min(_GLF_FUZZED(9.9), _GLF_FUZZED(9.9)), min(_GLF_FUZZED(9.9), _GLF_FUZZED(9.9)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_FUZZED(9.9), _GLF_FUZZED(9.9)), cos(0.0) * (_GLF_IDENTITY(min(_GLF_FUZZED(9.9), _GLF_FUZZED(9.9)), min(min(_GLF_FUZZED(9.9), _GLF_FUZZED(9.9)), min(_GLF_FUZZED(9.9), _GLF_FUZZED(9.9)))))), min(_GLF_IDENTITY(min(_GLF_FUZZED(9.9), _GLF_FUZZED(9.9)), cos(0.0) * (_GLF_IDENTITY(min(_GLF_FUZZED(9.9), _GLF_FUZZED(9.9)), min(min(_GLF_FUZZED(9.9), _GLF_FUZZED(9.9)), min(_GLF_FUZZED(9.9), _GLF_FUZZED(9.9)))))), _GLF_IDENTITY(min(_GLF_FUZZED(9.9), _GLF_FUZZED(9.9)), cos(0.0) * (_GLF_IDENTITY(min(_GLF_FUZZED(9.9), _GLF_FUZZED(9.9)), min(min(_GLF_FUZZED(9.9), _GLF_FUZZED(9.9)), min(_GLF_FUZZED(9.9), _GLF_FUZZED(9.9)))))))), _GLF_IDENTITY(min(_GLF_FUZZED(9.9), _GLF_FUZZED(9.9)), cos(0.0) * (_GLF_IDENTITY(min(_GLF_FUZZED(9.9), _GLF_FUZZED(9.9)), min(min(_GLF_FUZZED(9.9), _GLF_FUZZED(9.9)), min(_GLF_FUZZED(9.9), _GLF_FUZZED(9.9))))))))), _GLF_FUZZED(9.9))) : _GLF_FUZZED(1973.8545)), max((true ? _GLF_IDENTITY(_GLF_FUZZED(9.9), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(9.9), (_GLF_IDENTITY(_GLF_FUZZED(9.9), float(mat3x2(_GLF_FUZZED(9.9), 1.0, 1.0, 0.0, 1.0, 1.0)))) - 0.0), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_FUZZED(9.9), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(9.9), clamp(_GLF_FUZZED(9.9), _GLF_FUZZED(9.9), _GLF_FUZZED(9.9))))), _GLF_FUZZED(9.9)), cos(0.0) * (_GLF_IDENTITY(min(_GLF_FUZZED(9.9), _GLF_FUZZED(_GLF_IDENTITY(9.9, min(9.9, 9.9)))), min(min(_GLF_FUZZED(9.9), _GLF_FUZZED(9.9)), min(_GLF_FUZZED(9.9), _GLF_FUZZED(9.9))))))), _GLF_FUZZED(9.9))) : _GLF_FUZZED(_GLF_IDENTITY(1973.8545, 0.0 + (1973.8545)))), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_FUZZED(9.9), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(9.9), (_GLF_IDENTITY(_GLF_FUZZED(9.9), float(mat3x2(_GLF_FUZZED(9.9), 1.0, 1.0, 0.0, 1.0, 1.0)))) - 0.0), _GLF_IDENTITY(min(_GLF_FUZZED(9.9), _GLF_FUZZED(9.9)), cos(0.0) * (_GLF_IDENTITY(min(_GLF_FUZZED(9.9), _GLF_FUZZED(9.9)), min(min(_GLF_FUZZED(9.9), _GLF_FUZZED(9.9)), min(_GLF_FUZZED(9.9), _GLF_FUZZED(9.9))))))), _GLF_FUZZED(9.9))) : _GLF_FUZZED(1973.8545)), min((_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_FUZZED(9.9), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(9.9), (_GLF_IDENTITY(_GLF_FUZZED(9.9), float(mat3x2(_GLF_FUZZED(9.9), 1.0, 1.0, 0.0, 1.0, 1.0)))) - 0.0), _GLF_IDENTITY(min(_GLF_FUZZED(9.9), _GLF_FUZZED(9.9)), cos(0.0) * (_GLF_IDENTITY(min(_GLF_FUZZED(9.9), _GLF_FUZZED(9.9)), min(min(_GLF_FUZZED(9.9), _GLF_FUZZED(9.9)), min(_GLF_FUZZED(9.9), _GLF_FUZZED(9.9))))))), _GLF_FUZZED(9.9)), mix(float(max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(9.9), (_GLF_IDENTITY(_GLF_FUZZED(9.9), float(mat3x2(_GLF_FUZZED(9.9), 1.0, 1.0, 0.0, 1.0, 1.0)))) - 0.0), _GLF_IDENTITY(min(_GLF_FUZZED(9.9), _GLF_FUZZED(9.9)), cos(0.0) * (_GLF_IDENTITY(min(_GLF_FUZZED(9.9), _GLF_FUZZED(9.9)), min(min(_GLF_FUZZED(9.9), _GLF_FUZZED(9.9)), min(_GLF_FUZZED(9.9), _GLF_FUZZED(9.9))))))), _GLF_FUZZED(9.9))), float(_GLF_FUZZED(8.5)), bool(false)))) : _GLF_FUZZED(1973.8545), (false ? _GLF_FUZZED(-3.4) : _GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_FUZZED(9.9), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(9.9), (_GLF_IDENTITY(_GLF_FUZZED(9.9), float(mat3x2(_GLF_FUZZED(9.9), 1.0, 1.0, 0.0, 1.0, 1.0)))) - 0.0), _GLF_IDENTITY(min(_GLF_FUZZED(9.9), _GLF_FUZZED(9.9)), cos(0.0) * (_GLF_IDENTITY(min(_GLF_FUZZED(9.9), _GLF_FUZZED(9.9)), min(min(_GLF_FUZZED(9.9), _GLF_FUZZED(9.9)), min(_GLF_FUZZED(9.9), _GLF_FUZZED(9.9))))))), _GLF_FUZZED(9.9)), mix(float(max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(9.9), (_GLF_IDENTITY(_GLF_FUZZED(9.9), float(mat3x2(_GLF_FUZZED(9.9), 1.0, 1.0, 0.0, 1.0, 1.0)))) - 0.0), _GLF_IDENTITY(min(_GLF_FUZZED(9.9), _GLF_FUZZED(9.9)), cos(0.0) * (_GLF_IDENTITY(min(_GLF_FUZZED(9.9), _GLF_FUZZED(9.9)), min(min(_GLF_FUZZED(9.9), _GLF_FUZZED(9.9)), min(_GLF_FUZZED(9.9), _GLF_FUZZED(9.9))))))), _GLF_FUZZED(9.9))), float(_GLF_FUZZED(8.5)), bool(false)))) : _GLF_FUZZED(1973.8545), (true ? _GLF_IDENTITY(_GLF_FUZZED(9.9), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(9.9), (_GLF_IDENTITY(_GLF_FUZZED(9.9), float(mat3x2(_GLF_FUZZED(9.9), 1.0, 1.0, 0.0, 1.0, 1.0)))) - 0.0), _GLF_IDENTITY(min(_GLF_FUZZED(9.9), _GLF_FUZZED(9.9)), cos(0.0) * (_GLF_IDENTITY(min(_GLF_FUZZED(9.9), _GLF_FUZZED(9.9)), min(min(_GLF_FUZZED(9.9), _GLF_FUZZED(9.9)), min(_GLF_FUZZED(9.9), _GLF_FUZZED(9.9))))))), _GLF_FUZZED(9.9)), mix(float(max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(9.9), (_GLF_IDENTITY(_GLF_FUZZED(9.9), float(mat3x2(_GLF_FUZZED(9.9), 1.0, 1.0, 0.0, 1.0, 1.0)))) - 0.0), _GLF_IDENTITY(min(_GLF_FUZZED(9.9), _GLF_FUZZED(9.9)), cos(0.0) * (_GLF_IDENTITY(min(_GLF_FUZZED(9.9), _GLF_FUZZED(9.9)), min(min(_GLF_FUZZED(9.9), _GLF_FUZZED(9.9)), min(_GLF_FUZZED(9.9), _GLF_FUZZED(9.9))))))), _GLF_FUZZED(9.9))), float(_GLF_FUZZED(8.5)), bool(false)))) : _GLF_FUZZED(1973.8545)) + 0.0)))), (true ? _GLF_IDENTITY(_GLF_FUZZED(9.9), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(9.9), (_GLF_IDENTITY(_GLF_FUZZED(9.9), float(mat3x2(_GLF_FUZZED(9.9), 1.0, 1.0, 0.0, 1.0, 1.0)))) - 0.0), _GLF_IDENTITY(min(_GLF_FUZZED(9.9), _GLF_FUZZED(9.9)), cos(0.0) * (_GLF_IDENTITY(min(_GLF_FUZZED(9.9), _GLF_FUZZED(9.9)), min(min(_GLF_FUZZED(9.9), _GLF_FUZZED(9.9)), min(_GLF_IDENTITY(_GLF_FUZZED(9.9), min(_GLF_FUZZED(9.9), _GLF_FUZZED(9.9))), _GLF_FUZZED(9.9))))))), _GLF_FUZZED(9.9))) : _GLF_FUZZED(1973.8545)))))))) * 1.0)))), float(float(mat4x3(injectionSwitch.x, 1.0, abs(0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(1.0), mix(float(float(1.0)), float(_GLF_FUZZED((5.1 * vec4(3.5, 915.444, -4.5, 191.356)).r)), bool(false))), float(_GLF_FUZZED(-9.6)), bool(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), ! (! (bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))), (injectionSwitch.x > injectionSwitch.y)))))), float(_GLF_FUZZED(-63.42)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(mix(float(float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_FUZZED(-18.62)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mix(float(mix(float(float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_FUZZED(-18.62)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), float(_GLF_FUZZED(-509.380)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), clamp(_GLF_IDENTITY(float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(mix(float(float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_FUZZED(-18.62)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mix(float(mix(float(float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_FUZZED(-18.62)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), float(_GLF_FUZZED(-509.380)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(mix(float(float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_FUZZED(-18.62)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mix(float(mix(float(float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_FUZZED(-18.62)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), float(_GLF_FUZZED(-509.380)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(_GLF_IDENTITY(float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(mix(float(float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_FUZZED(-18.62)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mix(float(mix(float(float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_FUZZED(-18.62)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), float(_GLF_FUZZED(-509.380)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0 * (_GLF_IDENTITY(float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(mix(float(float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_FUZZED(-18.62)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mix(float(mix(float(float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_FUZZED(-18.62)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), float(_GLF_FUZZED(-509.380)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), abs(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))), bool(true))))) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, _GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 1.0, abs(0.0), 1.0, abs(0.0), 1.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) - 0.0, float(mat3((1.0) - 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0)))))), 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 0.0, 1.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0))), transpose(transpose(mat4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 0.0, 1.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)))))))), (1.0) - 0.0))), 1.0, 1.0, 1.0, 1.0)), mix(float(_GLF_IDENTITY(_GLF_FUZZED(9.9), (true ? _GLF_IDENTITY(_GLF_FUZZED(9.9), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(9.9), (_GLF_FUZZED(9.9)) / _GLF_IDENTITY(1.0, (1.0) * 1.0)), min(_GLF_FUZZED(9.9), _GLF_IDENTITY(_GLF_FUZZED(9.9), clamp(_GLF_IDENTITY(_GLF_FUZZED(9.9), (false ? _GLF_FUZZED(ceil(-64.84)) : _GLF_FUZZED(9.9))), _GLF_FUZZED(9.9), _GLF_IDENTITY(_GLF_FUZZED(9.9), (_GLF_FUZZED(9.9)) / _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))))))), _GLF_FUZZED(9.9))) : _GLF_FUZZED(1973.8545)))), float(float(mat4x3(injectionSwitch.x, 1.0, abs(0.0), 1.0, abs(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))), bool(true)))))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
