#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, true, false)))) && true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, bool(bvec4(true, false, false, false))) && (true && (injectionSwitch.x > injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))), ! (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_IDENTITY(false, (false) || false), false))))))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(usubBorrow((subgroup_size ++), workgroup_size, subgroup_size)))), (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(num_workgroup)))), uint(0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(usubBorrow((subgroup_size ++), workgroup_size, subgroup_size)))), 0u ^ (_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(usubBorrow((subgroup_size ++), workgroup_size, subgroup_size)))))))))), min(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)) * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, max(workgroup_id, _GLF_IDENTITY(workgroup_id, clamp(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)), workgroup_id, workgroup_id)))), ~ (_GLF_IDENTITY(~ (workgroup_id), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (workgroup_id), max(~ (workgroup_id), ~ (workgroup_id)))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(~ (workgroup_id), max(~ (workgroup_id), ~ (workgroup_id)))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(~ (workgroup_id), max(~ (workgroup_id), ~ (workgroup_id))))), (false ? _GLF_FUZZED(67666u) : ~ ((_GLF_IDENTITY(~ (workgroup_id), max(~ (workgroup_id), ~ (workgroup_id)))))))))))), min(_GLF_IDENTITY((_GLF_IDENTITY(~ (workgroup_id), max(~ (workgroup_id), ~ (workgroup_id)))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(~ (workgroup_id), max(~ (workgroup_id), ~ (workgroup_id)))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(~ (workgroup_id), max(~ (workgroup_id), ~ (workgroup_id))))), (false ? _GLF_FUZZED(67666u) : ~ ((_GLF_IDENTITY(~ (workgroup_id), max(_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) * 1u), ~ (workgroup_id)))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(~ (workgroup_id), max(~ (workgroup_id), ~ (workgroup_id)))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(~ (workgroup_id), max(~ (workgroup_id), ~ (workgroup_id)))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(~ (workgroup_id), max(~ (workgroup_id), ~ (workgroup_id))))), (false ? _GLF_FUZZED(67666u) : ~ ((_GLF_IDENTITY(~ (workgroup_id), max(~ (workgroup_id), ~ (workgroup_id)))))))))))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))), workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))))), min(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - log(1.0)), 1.0, 1.0))), vec3(0.0, 0.0, 1.0)))))), _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(810.024)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) && true))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) >> (0u | 0u)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) + 0u)], uint(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-7386) : _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1))))), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(9.7), _GLF_FUZZED(3.6)), bvec2(false, false))), injectionSwitch)).y, clamp(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(9.7), _GLF_FUZZED(3.6)), bvec2(false, false))), injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(9.7), _GLF_FUZZED(3.6)), bvec2(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))), injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(9.7), _GLF_FUZZED(3.6)), bvec2(false, false))), injectionSwitch)).y))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y)) || false))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))) > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, bool(bvec2(false, false))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))), injectionSwitch.x))) - 0.0) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, 1.0, abs(1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), bool(bvec4(! (_GLF_IDENTITY(false, (false) || false)), true, true, true)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, false || (true)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 1.0))), injectionSwitch)).y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), tan(length(vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))), round(length(normalize(vec3(1.0, 1.0, 1.0))))), (false ? _GLF_FUZZED(mat2(-1129.3129, 7.7, -3214.9181, 47.76)) : _GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), tan(length(vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0)), float(mat3(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0)), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).y), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)))) - _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, tan(0.0) + (_GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 0.0)))))) - 0.0)))), 0.0))), round(length(normalize(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-30.38) : 1.0)), 1.0, 1.0), _GLF_IDENTITY((vec3(1.0, 1.0, 1.0)), max((vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY((vec3(1.0, 1.0, 1.0)), ((vec3(1.0, 1.0, 1.0))) * vec3(1.0, 1.0, 1.0)))) * mat3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(smoothstep(-1472.8176, -1.7, 2.9)) : _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(5.2))))))))))), transpose(_GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(tan(length(vec2(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-3.6))), 0.0))) + 0.0)))), mix(float(tan(length(vec2(0.0, 0.0)))), float(_GLF_FUZZED(-0.8)), bool(false))), round(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), mix(float(_GLF_FUZZED(-150.132)), float(length(normalize(vec3(1.0, 1.0, 1.0)))), bool(true)))))), transpose(transpose(transpose(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), tan(length(vec2(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0)))), round(length(normalize(vec3(1.0, 1.0, 1.0))))))))))))))).x > injectionSwitch.y) && true))))), true && ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), tan(length(vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))), round(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), (normalize(vec3(1.0, 1.0, 1.0))) / vec3(1.0, 1.0, 1.0))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(mat2(-1129.3129, 7.7, -3214.9181, 47.76)), (true ? _GLF_FUZZED(mat2(-1129.3129, 7.7, -3214.9181, 47.76)) : _GLF_FUZZED(mat2(6.7, 96.89, -6.4, -1.5)))) : _GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), tan(length(vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(_GLF_IDENTITY(0.0, float(float(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, 0.0 + (0.0))))))), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.0)), float(0.0), bool(true)))))) + abs(sqrt(0.0)))), min(min(_GLF_IDENTITY(0.0, float(float(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, 0.0 + (0.0))))))), 0.0), min(_GLF_IDENTITY(0.0, float(float(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, 0.0 + (0.0))))))), 0.0))))) - 0.0), 0.0))), round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), (vec3(1.0, 1.0, 1.0)) * mat3(1.0)))))), transpose(_GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), tan(length(vec2(0.0, 0.0))), round(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), (true ? normalize(vec3(1.0, 1.0, 1.0)) : _GLF_FUZZED(vec3(5.8, -2315.3637, -0.2)))))))), transpose(transpose(transpose(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), min(min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), tan(length(vec2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + 0.0), (_GLF_IDENTITY(0.0, (0.0) + 0.0)) + 0.0)))), _GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), (round(length(normalize(vec3(1.0, 1.0, 1.0))))) + 0.0)))))))))))).x > injectionSwitch.y) && true))))))) || false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 1.0))), injectionSwitch)).y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), tan(length(vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))), round(length(normalize(vec3(1.0, 1.0, 1.0))))), (false ? _GLF_FUZZED(mat2(-1129.3129, 7.7, -3214.9181, 47.76)) : _GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), tan(length(vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0)), float(mat3(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)))) - _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)))), 0.0))), round(length(normalize(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-30.38) : 1.0)), 1.0, 1.0), _GLF_IDENTITY((vec3(1.0, 1.0, 1.0)), max((vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY((vec3(1.0, 1.0, 1.0)), ((_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0), clamp(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0), clamp(vec3(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0), vec3(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0), vec3(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0))), vec3(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0), vec3(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0))))) * vec3(1.0, 1.0, 1.0)))) * mat3(1.0)))))), transpose(_GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(tan(length(vec2(0.0, 0.0))), mix(float(tan(length(vec2(0.0, 0.0)))), float(_GLF_FUZZED(-0.8)), bool(false))), round(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), mix(float(_GLF_FUZZED(-150.132)), float(length(normalize(vec3(1.0, 1.0, 1.0)))), bool(true)))))), transpose(transpose(transpose(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), tan(length(vec2(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0)))), round(length(normalize(vec3(1.0, 1.0, 1.0))))))))))))))).x > injectionSwitch.y) && true))))), true && ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), tan(length(vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))), round(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), (normalize(vec3(1.0, 1.0, 1.0))) / vec3(1.0, 1.0, 1.0))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(mat2(-1129.3129, 7.7, -3214.9181, 47.76)), (true ? _GLF_FUZZED(mat2(-1129.3129, 7.7, -3214.9181, 47.76)) : _GLF_FUZZED(mat2(6.7, 96.89, -6.4, -1.5)))) : _GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), tan(length(vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(_GLF_IDENTITY(0.0, float(float(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, 0.0 + (0.0))))))), 0.0), min(min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(float(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, 0.0 + (0.0))))))), (false ? _GLF_FUZZED(-132.853) : _GLF_IDENTITY(0.0, float(float(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(3.4)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))), 0.0), min(_GLF_IDENTITY(0.0, float(float(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, 0.0 + (0.0))))))), 0.0))))) - 0.0), 0.0))), round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), (vec3(1.0, 1.0, 1.0)) * mat3(1.0)))))), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), tan(length(vec2(0.0, 0.0))), round(length(normalize(vec3(1.0, 1.0, 1.0))))), mat2(_GLF_IDENTITY(mat2x4(mat2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), tan(length(vec2(0.0, 0.0))), round(length(normalize(vec3(1.0, 1.0, 1.0)))))), (mat2x4(mat2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), tan(length(vec2(0.0, 0.0))), round(length(normalize(vec3(1.0, 1.0, 1.0))))))) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), transpose(transpose(transpose(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), tan(length(vec2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + 0.0), (_GLF_IDENTITY(0.0, (0.0) + 0.0)) + 0.0)))), _GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), (round(length(normalize(vec3(1.0, 1.0, 1.0))))) + 0.0)))))))))))).x > injectionSwitch.y) && true))))))) || false))), (bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 1.0))), injectionSwitch)).y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, log(1.0), 1.0, abs(0.0), 1.0, 1.0, 0.0))).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(vec2(462.177, 7.2))))), vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), min(min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch)))), tan(length(vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))), round(length(normalize(vec3(1.0, 1.0, 1.0))))), (false ? _GLF_FUZZED(mat2(-1129.3129, 7.7, -3214.9181, 47.76)) : _GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), tan(length(vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0), min(min(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0), min(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0)))), float(mat3(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)))) - _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)))), 0.0))), round(length(normalize(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-30.38) : 1.0)), 1.0, 1.0), _GLF_IDENTITY((vec3(1.0, 1.0, 1.0)), max((vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY((vec3(1.0, 1.0, 1.0)), ((vec3(1.0, 1.0, 1.0))) * vec3(1.0, 1.0, 1.0)))) * mat3(1.0)))))), transpose(_GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(tan(length(vec2(0.0, 0.0))), mix(float(tan(length(vec2(0.0, 0.0)))), float(_GLF_FUZZED(-0.8)), bool(false))), round(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), mix(float(_GLF_FUZZED(-150.132)), float(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(bool(true), bool(bvec2(bool(true), false)))))))), _GLF_IDENTITY(transpose(transpose(transpose(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), tan(length(vec2(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0)))), round(length(normalize(vec3(1.0, 1.0, 1.0)))))))), transpose(transpose(transpose(transpose(transpose(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), tan(length(vec2(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0)))), round(length(normalize(vec3(1.0, 1.0, 1.0)))))))))))))))))).x > injectionSwitch.y) && true))))), true && _GLF_IDENTITY(((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), tan(length(vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))), round(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), (normalize(vec3(1.0, 1.0, 1.0))) / vec3(1.0, 1.0, 1.0))))), (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(mat2(-1129.3129, 7.7, -3214.9181, 47.76)), (true ? _GLF_FUZZED(mat2(-1129.3129, 7.7, -3214.9181, 47.76)) : _GLF_FUZZED(mat2(6.7, 96.89, -6.4, -1.5)))) : _GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), tan(length(vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(_GLF_IDENTITY(0.0, float(float(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat4x3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 1.0, 0.0, sqrt(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, exp(0.0)))), 0.0 + (0.0))))))), 0.0), min(min(_GLF_IDENTITY(0.0, float(float(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, 0.0 + _GLF_IDENTITY((0.0), max((0.0), _GLF_IDENTITY((0.0), _GLF_IDENTITY(float(float(_GLF_IDENTITY((0.0), min((0.0), (0.0))))), mix(float(_GLF_FUZZED(-687.721)), float(float(float(_GLF_IDENTITY((0.0), min((0.0), (0.0)))))), bool(true)))))))))))), 0.0), min(_GLF_IDENTITY(0.0, float(float(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, 0.0 + (0.0))))))), 0.0))))) - 0.0), 0.0))), round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), (vec3(1.0, 1.0, 1.0)) * mat3(1.0)))))), transpose(_GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), tan(length(vec2(0.0, 0.0))), round(length(normalize(vec3(1.0, 1.0, 1.0)))))), transpose(transpose(transpose(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), tan(length(vec2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + 0.0), (_GLF_IDENTITY(0.0, (0.0) + 0.0)) + 0.0)))), _GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), (round(length(normalize(vec3(1.0, 1.0, 1.0))))) + 0.0)))))))), (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(mat2(-1129.3129, 7.7, -3214.9181, 47.76)), (true ? _GLF_FUZZED(mat2(-1129.3129, 7.7, -3214.9181, 47.76)) : _GLF_FUZZED(mat2(6.7, 96.89, -6.4, -1.5)))) : _GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), tan(length(vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(_GLF_IDENTITY(0.0, float(float(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat4x3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 1.0, 0.0, sqrt(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, exp(0.0)))), 0.0 + (0.0))))))), 0.0), min(min(_GLF_IDENTITY(0.0, float(float(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, 0.0 + _GLF_IDENTITY((0.0), max((0.0), _GLF_IDENTITY((0.0), _GLF_IDENTITY(float(float(_GLF_IDENTITY((0.0), min((0.0), (0.0))))), mix(float(_GLF_FUZZED(-687.721)), float(float(float(_GLF_IDENTITY((0.0), min((0.0), (0.0)))))), bool(true)))))))))))), 0.0), min(_GLF_IDENTITY(0.0, float(float(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, 0.0 + (0.0))))))), 0.0))))) - 0.0), 0.0))), round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), (vec3(1.0, 1.0, 1.0)) * mat3(1.0)))))), transpose(_GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), tan(length(vec2(0.0, 0.0))), round(length(normalize(vec3(1.0, 1.0, 1.0)))))), transpose(transpose(transpose(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), tan(length(vec2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + 0.0), (_GLF_IDENTITY(0.0, (0.0) + 0.0)) + 0.0)))), _GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), (round(length(normalize(vec3(1.0, 1.0, 1.0))))) + 0.0)))))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(mat2(-1129.3129, 7.7, -3214.9181, 47.76)), (true ? _GLF_FUZZED(mat2(-1129.3129, 7.7, -3214.9181, 47.76)) : _GLF_FUZZED(mat2(6.7, 96.89, -6.4, -1.5)))) : _GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), tan(length(vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(_GLF_IDENTITY(0.0, float(float(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat4x3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 1.0, 0.0, sqrt(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, exp(0.0)))), 0.0 + (0.0))))))), 0.0), min(min(_GLF_IDENTITY(0.0, float(float(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, 0.0 + _GLF_IDENTITY((0.0), max((0.0), _GLF_IDENTITY((0.0), _GLF_IDENTITY(float(float(_GLF_IDENTITY((0.0), min((0.0), (0.0))))), mix(float(_GLF_FUZZED(-687.721)), float(float(float(_GLF_IDENTITY((0.0), min((0.0), (0.0)))))), bool(true)))))))))))), 0.0), min(_GLF_IDENTITY(0.0, float(float(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, 0.0 + (0.0))))))), 0.0))))) - 0.0), 0.0))), round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), (vec3(1.0, 1.0, 1.0)) * mat3(1.0)))))), transpose(_GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), tan(length(vec2(0.0, 0.0))), round(length(normalize(vec3(1.0, 1.0, 1.0)))))), transpose(transpose(transpose(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), tan(length(vec2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + 0.0), (_GLF_IDENTITY(0.0, (0.0) + 0.0)) + 0.0)))), _GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), (round(length(normalize(vec3(1.0, 1.0, 1.0))))) + 0.0))))))))) / mat2(1.0, 1.0, 1.0, 1.0))) * mat2(1.0)))))).x, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), tan(length(vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))), round(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), (normalize(vec3(1.0, 1.0, 1.0))) / vec3(1.0, 1.0, 1.0))))), (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(mat2(-1129.3129, 7.7, -3214.9181, 47.76)), (true ? _GLF_FUZZED(mat2(-1129.3129, 7.7, -3214.9181, 47.76)) : _GLF_FUZZED(mat2(6.7, 96.89, -6.4, -1.5)))) : _GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), tan(length(vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(_GLF_IDENTITY(0.0, float(float(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat4x3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 1.0, 0.0, sqrt(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, exp(0.0)))), 0.0 + (0.0))))))), 0.0), min(min(_GLF_IDENTITY(0.0, float(float(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, 0.0 + _GLF_IDENTITY((0.0), max((0.0), _GLF_IDENTITY((0.0), _GLF_IDENTITY(float(float(_GLF_IDENTITY((0.0), min((0.0), (0.0))))), mix(float(_GLF_FUZZED(-687.721)), float(float(float(_GLF_IDENTITY((0.0), min((0.0), (0.0)))))), bool(true)))))))))))), 0.0), min(_GLF_IDENTITY(0.0, float(float(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, 0.0 + (0.0))))))), 0.0))))) - 0.0), 0.0))), round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), (vec3(1.0, 1.0, 1.0)) * mat3(1.0)))))), transpose(_GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), tan(length(vec2(0.0, 0.0))), round(length(normalize(vec3(1.0, 1.0, 1.0)))))), transpose(transpose(transpose(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), tan(length(vec2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + 0.0), (_GLF_IDENTITY(0.0, (0.0) + 0.0)) + 0.0)))), _GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), (round(length(normalize(vec3(1.0, 1.0, 1.0))))) + 0.0)))))))), (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(mat2(-1129.3129, 7.7, -3214.9181, 47.76)), (true ? _GLF_FUZZED(mat2(-1129.3129, 7.7, -3214.9181, 47.76)) : _GLF_FUZZED(mat2(6.7, 96.89, -6.4, -1.5)))) : _GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), tan(length(vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(_GLF_IDENTITY(0.0, float(float(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat4x3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 1.0, 0.0, sqrt(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, exp(0.0)))), 0.0 + (0.0))))))), 0.0), min(min(_GLF_IDENTITY(0.0, float(float(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, 0.0 + _GLF_IDENTITY((0.0), max((0.0), _GLF_IDENTITY((0.0), _GLF_IDENTITY(float(float(_GLF_IDENTITY((0.0), min((0.0), (0.0))))), mix(float(_GLF_FUZZED(-687.721)), float(float(float(_GLF_IDENTITY((0.0), min((0.0), (0.0)))))), bool(true)))))))))))), 0.0), min(_GLF_IDENTITY(0.0, float(float(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, 0.0 + (0.0))))))), 0.0))))) - 0.0), 0.0))), round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), (vec3(1.0, 1.0, 1.0)) * mat3(1.0)))))), transpose(_GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), tan(length(vec2(0.0, 0.0))), round(length(normalize(vec3(1.0, 1.0, 1.0)))))), transpose(transpose(transpose(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), tan(length(vec2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + 0.0), (_GLF_IDENTITY(0.0, (0.0) + 0.0)) + 0.0)))), _GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), (round(length(normalize(vec3(1.0, 1.0, 1.0))))) + 0.0)))))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(mat2(-1129.3129, 7.7, -3214.9181, 47.76)), (true ? _GLF_FUZZED(mat2(-1129.3129, 7.7, -3214.9181, 47.76)) : _GLF_FUZZED(mat2(6.7, 96.89, -6.4, -1.5)))) : _GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), tan(length(vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(_GLF_IDENTITY(0.0, float(float(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat4x3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 1.0, 0.0, sqrt(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, exp(0.0)))), 0.0 + (0.0))))))), 0.0), min(min(_GLF_IDENTITY(0.0, float(float(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, 0.0 + _GLF_IDENTITY((0.0), max((0.0), _GLF_IDENTITY((0.0), _GLF_IDENTITY(float(float(_GLF_IDENTITY((0.0), min((0.0), (0.0))))), mix(float(_GLF_FUZZED(-687.721)), float(float(float(_GLF_IDENTITY((0.0), min((0.0), (0.0)))))), bool(true)))))))))))), 0.0), min(_GLF_IDENTITY(0.0, float(float(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, 0.0 + (0.0))))))), 0.0))))) - 0.0), 0.0))), round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), (vec3(1.0, 1.0, 1.0)) * mat3(1.0)))))), transpose(_GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), tan(length(vec2(0.0, 0.0))), round(length(normalize(vec3(1.0, 1.0, 1.0)))))), transpose(transpose(transpose(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), tan(length(vec2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + 0.0), (_GLF_IDENTITY(0.0, (0.0) + 0.0)) + 0.0)))), _GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), (round(length(normalize(vec3(1.0, 1.0, 1.0))))) + 0.0))))))))) / mat2(1.0, 1.0, 1.0, 1.0))) * mat2(1.0)))))).x), float(_GLF_FUZZED((true ? -2.2 : -37.81))), bool(false))) > injectionSwitch.y) && true)))))), (((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), tan(length(vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))), round(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), (normalize(vec3(1.0, 1.0, 1.0))) / vec3(1.0, 1.0, 1.0))))), (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(mat2(-1129.3129, 7.7, -3214.9181, 47.76)), (true ? _GLF_FUZZED(mat2(-1129.3129, 7.7, -3214.9181, 47.76)) : _GLF_FUZZED(mat2(6.7, 96.89, -6.4, -1.5)))) : _GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), tan(length(vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(_GLF_IDENTITY(0.0, float(float(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat4x3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 1.0, 0.0, sqrt(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, exp(0.0)))), 0.0 + (0.0))))))), 0.0), min(min(_GLF_IDENTITY(0.0, float(float(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, 0.0 + _GLF_IDENTITY((0.0), max((0.0), _GLF_IDENTITY((0.0), _GLF_IDENTITY(float(float(_GLF_IDENTITY((0.0), min((0.0), (0.0))))), mix(float(_GLF_FUZZED(-687.721)), float(float(float(_GLF_IDENTITY((0.0), min((0.0), (0.0)))))), bool(true)))))))))))), 0.0), min(_GLF_IDENTITY(0.0, float(float(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, 0.0 + (0.0))))))), 0.0))))) - 0.0), 0.0))), round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), (vec3(1.0, 1.0, 1.0)) * mat3(1.0)))))), transpose(_GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), tan(length(vec2(0.0, 0.0))), round(length(normalize(vec3(1.0, 1.0, 1.0)))))), transpose(transpose(transpose(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), tan(length(vec2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + 0.0), (_GLF_IDENTITY(0.0, (0.0) + 0.0)) + 0.0)))), _GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), (round(length(normalize(vec3(1.0, 1.0, 1.0))))) + 0.0)))))))), (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(mat2(-1129.3129, 7.7, -3214.9181, 47.76)), (true ? _GLF_FUZZED(mat2(-1129.3129, 7.7, -3214.9181, 47.76)) : _GLF_FUZZED(mat2(6.7, 96.89, -6.4, -1.5)))) : _GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), tan(length(vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(_GLF_IDENTITY(0.0, float(float(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat4x3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 1.0, 0.0, sqrt(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, exp(0.0)))), 0.0 + (0.0))))))), 0.0), min(min(_GLF_IDENTITY(0.0, float(float(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, 0.0 + _GLF_IDENTITY((0.0), max((0.0), _GLF_IDENTITY((0.0), _GLF_IDENTITY(float(float(_GLF_IDENTITY((0.0), min((0.0), (0.0))))), mix(float(_GLF_FUZZED(-687.721)), float(float(float(_GLF_IDENTITY((0.0), min((0.0), (0.0)))))), bool(true)))))))))))), 0.0), min(_GLF_IDENTITY(0.0, float(float(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, 0.0 + (0.0))))))), 0.0))))) - 0.0), 0.0))), round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), (vec3(1.0, 1.0, 1.0)) * mat3(1.0)))))), transpose(_GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), tan(length(vec2(0.0, 0.0))), round(length(normalize(vec3(1.0, 1.0, 1.0)))))), transpose(transpose(transpose(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), tan(length(vec2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + 0.0), (_GLF_IDENTITY(0.0, (0.0) + 0.0)) + 0.0)))), _GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), (round(length(normalize(vec3(1.0, 1.0, 1.0))))) + 0.0)))))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(mat2(-1129.3129, 7.7, -3214.9181, 47.76)), (true ? _GLF_FUZZED(mat2(-1129.3129, 7.7, -3214.9181, 47.76)) : _GLF_FUZZED(mat2(6.7, 96.89, -6.4, -1.5)))) : _GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), tan(length(vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(_GLF_IDENTITY(0.0, float(float(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat4x3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 1.0, 0.0, sqrt(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, exp(0.0)))), 0.0 + (0.0))))))), 0.0), min(min(_GLF_IDENTITY(0.0, float(float(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, 0.0 + _GLF_IDENTITY((0.0), max((0.0), _GLF_IDENTITY((0.0), _GLF_IDENTITY(float(float(_GLF_IDENTITY((0.0), min((0.0), (0.0))))), mix(float(_GLF_FUZZED(-687.721)), float(float(float(_GLF_IDENTITY((0.0), min((0.0), (0.0)))))), bool(true)))))))))))), 0.0), min(_GLF_IDENTITY(0.0, float(float(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, 0.0 + (0.0))))))), 0.0))))) - 0.0), 0.0))), round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), (vec3(1.0, 1.0, 1.0)) * mat3(1.0)))))), transpose(_GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), tan(length(vec2(0.0, 0.0))), round(length(normalize(vec3(1.0, 1.0, 1.0)))))), transpose(transpose(transpose(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), tan(length(vec2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + 0.0), (_GLF_IDENTITY(0.0, (0.0) + 0.0)) + 0.0)))), _GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), (round(length(normalize(vec3(1.0, 1.0, 1.0))))) + 0.0))))))))) / mat2(1.0, 1.0, 1.0, 1.0))) * mat2(1.0)))))).x, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), tan(length(vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))), round(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), (normalize(vec3(1.0, 1.0, 1.0))) / vec3(1.0, 1.0, 1.0))))), (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(mat2(-1129.3129, 7.7, -3214.9181, 47.76)), (true ? _GLF_FUZZED(mat2(-1129.3129, 7.7, -3214.9181, 47.76)) : _GLF_FUZZED(mat2(6.7, 96.89, -6.4, -1.5)))) : _GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), tan(length(vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(_GLF_IDENTITY(0.0, float(float(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat4x3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 1.0, 0.0, sqrt(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, exp(0.0)))), 0.0 + (0.0))))))), 0.0), min(min(_GLF_IDENTITY(0.0, float(float(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, 0.0 + _GLF_IDENTITY((0.0), max((0.0), _GLF_IDENTITY((0.0), _GLF_IDENTITY(float(float(_GLF_IDENTITY((0.0), min((0.0), (0.0))))), mix(float(_GLF_FUZZED(-687.721)), float(float(float(_GLF_IDENTITY((0.0), min((0.0), (0.0)))))), bool(true)))))))))))), 0.0), min(_GLF_IDENTITY(0.0, float(float(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, 0.0 + (0.0))))))), 0.0))))) - 0.0), 0.0))), round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), (vec3(1.0, 1.0, 1.0)) * mat3(1.0)))))), transpose(_GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), tan(length(vec2(0.0, 0.0))), round(length(normalize(vec3(1.0, 1.0, 1.0)))))), transpose(transpose(transpose(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), tan(length(vec2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + 0.0), (_GLF_IDENTITY(0.0, (0.0) + 0.0)) + 0.0)))), _GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), (round(length(normalize(vec3(1.0, 1.0, 1.0))))) + 0.0)))))))), (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(mat2(-1129.3129, 7.7, -3214.9181, 47.76)), (true ? _GLF_FUZZED(mat2(-1129.3129, 7.7, -3214.9181, 47.76)) : _GLF_FUZZED(mat2(6.7, 96.89, -6.4, -1.5)))) : _GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), tan(length(vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(_GLF_IDENTITY(0.0, float(float(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat4x3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 1.0, 0.0, sqrt(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, exp(0.0)))), 0.0 + (0.0))))))), 0.0), min(min(_GLF_IDENTITY(0.0, float(float(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, 0.0 + _GLF_IDENTITY((0.0), max((0.0), _GLF_IDENTITY((0.0), _GLF_IDENTITY(float(float(_GLF_IDENTITY((0.0), min((0.0), (0.0))))), mix(float(_GLF_FUZZED(-687.721)), float(float(float(_GLF_IDENTITY((0.0), min((0.0), (0.0)))))), bool(true)))))))))))), 0.0), min(_GLF_IDENTITY(0.0, float(float(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, 0.0 + (0.0))))))), 0.0))))) - 0.0), 0.0))), round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), (vec3(1.0, 1.0, 1.0)) * mat3(1.0)))))), transpose(_GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), tan(length(vec2(0.0, 0.0))), round(length(normalize(vec3(1.0, 1.0, 1.0)))))), transpose(transpose(transpose(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), tan(length(vec2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + 0.0), (_GLF_IDENTITY(0.0, (0.0) + 0.0)) + 0.0)))), _GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), (round(length(normalize(vec3(1.0, 1.0, 1.0))))) + 0.0)))))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(mat2(-1129.3129, 7.7, -3214.9181, 47.76)), (true ? _GLF_FUZZED(mat2(-1129.3129, 7.7, -3214.9181, 47.76)) : _GLF_FUZZED(mat2(6.7, 96.89, -6.4, -1.5)))) : _GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), tan(length(vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(_GLF_IDENTITY(0.0, float(float(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat4x3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 1.0, 0.0, sqrt(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, exp(0.0)))), 0.0 + (0.0))))))), 0.0), min(min(_GLF_IDENTITY(0.0, float(float(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, 0.0 + _GLF_IDENTITY((0.0), max((0.0), _GLF_IDENTITY((0.0), _GLF_IDENTITY(float(float(_GLF_IDENTITY((0.0), min((0.0), (0.0))))), mix(float(_GLF_FUZZED(-687.721)), float(float(float(_GLF_IDENTITY((0.0), min((0.0), (0.0)))))), bool(true)))))))))))), 0.0), min(_GLF_IDENTITY(0.0, float(float(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, 0.0 + (0.0))))))), 0.0))))) - 0.0), 0.0))), round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), (vec3(1.0, 1.0, 1.0)) * mat3(1.0)))))), transpose(_GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), tan(length(vec2(0.0, 0.0))), round(length(normalize(vec3(1.0, 1.0, 1.0)))))), transpose(transpose(transpose(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), tan(length(vec2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + 0.0), (_GLF_IDENTITY(0.0, (0.0) + 0.0)) + 0.0)))), _GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), (round(length(normalize(vec3(1.0, 1.0, 1.0))))) + 0.0))))))))) / mat2(1.0, 1.0, 1.0, 1.0))) * mat2(1.0)))))).x), float(_GLF_FUZZED((true ? -2.2 : -37.81))), bool(false))) > injectionSwitch.y) && true))))))) && true)) || false)))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), bool(bvec3(bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
