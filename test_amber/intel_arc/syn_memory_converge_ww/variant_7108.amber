#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_14 {
 bool _f0;
 ivec2 _f1;
 float _f2;
 ivec2 _f3;
 mat2x4 _f4;
 bvec3 _f5;
} ;

struct _GLF_struct_13 {
 bvec3 _f0;
} ;

struct _GLF_struct_12 {
 vec3 _f0;
} ;

struct _GLF_struct_11 {
 mat4 _f0;
 mat3x2 _f1;
} ;

struct _GLF_struct_10 {
 vec4 _f0;
 mat4 _f1;
 uvec3 _f2;
 bool _f3;
} ;

struct _GLF_struct_15 {
 _GLF_struct_10 _f0;
 _GLF_struct_11 _f1;
 bool _f2;
 _GLF_struct_12 _f3;
 _GLF_struct_13 _f4;
 uint subgroup_size;
 _GLF_struct_14 _f5;
} ;

struct _GLF_struct_8 {
 mat4 _f0;
} ;

struct _GLF_struct_7 {
 mat4 _f0;
 ivec2 _f1;
 mat3x4 _f2;
} ;

struct _GLF_struct_9 {
 mat3 _f0;
 _GLF_struct_7 _f1;
 ivec3 _f2;
 _GLF_struct_8 _f3;
 uvec2 _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_5 {
 bool _f0;
 uvec4 _f1;
} ;

struct _GLF_struct_4 {
 mat3 _f0;
 ivec3 _f1;
 vec2 _f2;
 mat3 _f3;
 mat3x4 _f4;
 vec4 _f5;
 mat2x3 _f6;
} ;

struct _GLF_struct_3 {
 uvec3 _f0;
 mat3x2 _f1;
} ;

struct _GLF_struct_6 {
 bvec3 _f0;
 _GLF_struct_3 _f1;
 int _f2;
 _GLF_struct_4 _f3;
 mat4 _f4;
 _GLF_struct_5 _f5;
 ivec2 _f6;
} ;

struct _GLF_struct_1 {
 mat4x3 _f0;
 vec3 _f1;
 vec4 _f2;
 bvec3 _f3;
 uvec4 _f4;
} ;

struct _GLF_struct_0 {
 uint _f0;
 bool _f1;
 int _f2;
 mat2x4 _f3;
 mat3x4 _f4;
 bool _f5;
} ;

struct _GLF_struct_2 {
 int _f0;
 _GLF_struct_0 _f1;
 mat3 _f2;
 _GLF_struct_1 _f3;
 uvec2 _f4;
 mat4x2 _f5;
} ;

struct _GLF_struct_16 {
 _GLF_struct_2 _f0;
 _GLF_struct_6 _f1;
 float _f2;
 _GLF_struct_9 _f3;
 _GLF_struct_15 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec2(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), 0.0))) > injectionSwitch.y)), false)))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, true && (false))), true), bvec2(bvec2(bvec2(! (_GLF_IDENTITY(false, true && (false))), true)))))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false)))))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, true && (false))), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(! (_GLF_IDENTITY(false, true && (false))), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(! (_GLF_IDENTITY(false, true && (false))), true)), bvec2(bvec4(bvec2(bvec2(! (_GLF_IDENTITY(false, true && (false))), true)), true, true))), true, false))))))))), (injectionSwitch.x > injectionSwitch.y)), false))), false)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))), bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), (! (false)) && true)))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), _GLF_IDENTITY(true && ((false)), bool(bool(true && ((false))))))), ! (! (! (_GLF_IDENTITY((false), true && ((false))))))))), (! (false)) && true)))))))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 _GLF_struct_16 _GLF_struct_replacement_16 = _GLF_struct_16(_GLF_struct_2(1, _GLF_struct_0(1u, true, 1, mat2x4(_GLF_IDENTITY(1.0, (1.0) / 1.0)), mat3x4(1.0), _GLF_IDENTITY(true, _GLF_IDENTITY((true), true && ((true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mat3(1.0), _GLF_struct_1(mat4x3(1.0), vec3(1.0), vec4(1.0), bvec3(true), _GLF_IDENTITY(uvec4(1u), uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, 1.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(atanh(injectionSwitch)) : injectionSwitch)).x)) ^ (_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) / uvec4(1u, 1u, 1u, _GLF_IDENTITY(1u, uint(uvec3(1u, 1u, 0u)))))))), uvec2(1u), mat4x2(1.0)), _GLF_struct_6(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, false || (true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, false || (true))), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, false || (true))), true))), false))), _GLF_struct_3(uvec3(1u), mat3x2(1.0)), 1, _GLF_struct_4(mat3(1.0), ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (1) / 1), 1, (1 ^ 0), 0), ivec4(0, 0, 0, 0) ^ (ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) >> 0), (1) / 1), 1, (1 ^ 0), 0)))))), vec2(1.0), mat3(1.0), mat3x4(1.0), vec4(1.0), mat2x3(1.0)), mat4(1.0), _GLF_struct_5(true, uvec4(1u)), ivec2(1)), 1.0, _GLF_struct_9(mat3(1.0), _GLF_struct_7(mat4(1.0), ivec2(_GLF_IDENTITY(1, (1) + 0)), mat3x4(_GLF_IDENTITY(1.0, min(1.0, 1.0)))), ivec3(1), _GLF_struct_8(mat4(1.0)), uvec2(1u), ivec3(1)), _GLF_struct_15(_GLF_struct_10(vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), mat4(1.0), _GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY((uvec3(1u)) | uvec3(0u, 0u, 0u), ~ (~ ((uvec3(1u)) | uvec3(0u, 0u, 0u))))), true), _GLF_struct_11(mat4(1.0), mat3x2(1.0)), true, _GLF_struct_12(vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_struct_13(bvec3(true)), gl_SubgroupSize, _GLF_struct_14(true, ivec2(1), 1.0, ivec2(1), mat2x4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((- -70.63))), float(1.0), bool(true)))), bvec3(true))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))) || false), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((- -38.20))), bool(false))), _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y), (false ? _GLF_FUZZED(uintBitsToFloat(_GLF_IDENTITY(uvec4(98605u, 83527u, 56353u, 53842u), (uvec4(0u, _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) | (0u)))), 0u, 0u) | uvec4(0u, 0u, 0u, 0u)) ^ (uvec4(98605u, 83527u, 56353u, 53842u)))).w) : _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y), _GLF_IDENTITY(clamp(max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y), _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y), min(max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y), max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y))), max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y)), mix(float(_GLF_FUZZED(7480.3863)), float(clamp(max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y), _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y), min(max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y), max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, _GLF_IDENTITY(sqrt(0.0), mix(float(sqrt(0.0)), float(_GLF_FUZZED(59.56)), bool(false))), 1.0))), injectionSwitch.y))), max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y))), bool(true))))))), ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((- -38.20))), bool(false))), _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, float(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(round(length(normalize(1.0))), float(_GLF_IDENTITY(mat3x2(round(length(normalize(1.0))), 0.0, 0.0, 0.0, abs(0.0), 1.0), (false ? _GLF_FUZZED(mat3x2(-91.59, 9097.2087, -2.2, -218.049, -7.1, -3.5)) : _GLF_IDENTITY(mat3x2(round(length(normalize(1.0))), 0.0, 0.0, 0.0, abs(0.0), 1.0), (false ? _GLF_FUZZED(mat3x2(5963.0583, -6261.2854, -447.868, 755.100, -36.16, 33.66)) : mat3x2(round(length(normalize(1.0))), 0.0, 0.0, 0.0, abs(0.0), 1.0))))))) * (_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) - 0.0)) - 0.0))), 0.0, 1.0, 1.0))), 1.0, sqrt(0.0), 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (false ? _GLF_FUZZED(vec2(-9.4, -6.8)) : mat2(1.0) * (injectionSwitch)))).y), (false ? _GLF_FUZZED(uintBitsToFloat(uvec4(98605u, 83527u, 56353u, 53842u)).w) : _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y), clamp(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), max(_GLF_IDENTITY((injectionSwitch.y), min((injectionSwitch.y), _GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) - 0.0))), (injectionSwitch.y))) / cos(0.0)), float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y), _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(sqrt(0.0), max(_GLF_IDENTITY(sqrt(0.0), max(sqrt(0.0), sqrt(0.0))), _GLF_IDENTITY(sqrt(0.0), min(sqrt(0.0), sqrt(0.0))))), mix(float(_GLF_FUZZED(-88.02)), float(sqrt(0.0)), bool(true))), 1.0))), injectionSwitch.y), min(max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y), max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y))), max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))))), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(true, true, false)))) || false))) && (_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((- -38.20))), bool(false))), _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y), (false ? _GLF_FUZZED(uintBitsToFloat(uvec4(98605u, _GLF_IDENTITY(83527u, (83527u) | (83527u)), 56353u, 53842u)).w) : _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(abs(vec2(0.0, 0.0)))).y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y), clamp(max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0 + (_GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, 0.0, 0.0), (clamp(0.0, 0.0, 0.0)) * 1.0)))), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, sqrt(0.0), 1.0))), injectionSwitch.y), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), (injectionSwitch) - vec2(0.0, 0.0)).y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) * round(length(normalize(vec3(1.0, 1.0, 1.0))))))), sqrt(0.0), 1.0))), injectionSwitch.y), _GLF_IDENTITY(min(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y), max(max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y), _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y), _GLF_IDENTITY(float(mat3(max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y), determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)), max(float(mat3(max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y), determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)), float(mat3(max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y), determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))))))), max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y)), max(_GLF_IDENTITY(min(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y), max(max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y), _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y), _GLF_IDENTITY(float(mat3(max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y), determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)), max(float(mat3(max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y), determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)), float(mat3(max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y), determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))))))), max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y)), (true ? _GLF_IDENTITY(min(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y), max(max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y), _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y), _GLF_IDENTITY(float(mat3(max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y), determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)), max(float(mat3(max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y), determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)), float(mat3(max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y), determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))))))), max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y)), mix(float(min(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y), max(max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y), _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y), _GLF_IDENTITY(float(mat3(max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y), determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)), max(float(mat3(max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y), determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)), float(mat3(max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y), determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))))))), max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y))), float(_GLF_FUZZED(9605.9032)), bool(false))) : _GLF_FUZZED(-9.4))), min(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y), max(max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y), _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y), _GLF_IDENTITY(float(mat3(max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y), determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)), max(float(mat3(max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y), determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)), float(mat3(max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y), determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))))))), max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y))))), max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y))))))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((- -38.20))), bool(false))), _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y), (false ? _GLF_FUZZED(uintBitsToFloat(uvec4(98605u, _GLF_IDENTITY(83527u, (83527u) | (83527u)), 56353u, 53842u)).w) : _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y), clamp(max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, sqrt(0.0), 1.0))), _GLF_IDENTITY(injectionSwitch.y, float(mat4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), sqrt(1.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, determinant(mat2(1.0, 1.0, log(1.0), 1.0)))))), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), _GLF_IDENTITY(1.0, (1.0) / 1.0)))), injectionSwitch.y), min(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y), max(max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y), _GLF_IDENTITY(float(mat3(max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y), determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-707.312)), bool(false)))), float(_GLF_FUZZED(-528.408)), bool(false))), 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)), max(float(mat3(max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y), determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)), float(mat3(max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y), determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))))))), _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y), min(max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y), max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y))))), max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y))))))), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((- _GLF_IDENTITY(-38.20, _GLF_ZERO(0.0, injectionSwitch.x) + (-38.20))))), bool(false))), _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y), (false ? _GLF_FUZZED(uintBitsToFloat(uvec4(98605u, _GLF_IDENTITY(83527u, (83527u) | (83527u)), 56353u, 53842u)).w) : _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y), clamp(max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, sqrt(0.0), 1.0))), injectionSwitch.y), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y), min(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y), max(max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y), _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y), _GLF_IDENTITY(float(mat3(max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y), determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)), max(float(mat3(max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y), determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)), float(mat3(max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y), determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(float(-60629))), float(0.0), bool(true))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))))))), max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y))), max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), ! (_GLF_IDENTITY(! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((- -38.20))), bool(false))), _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y), (false ? _GLF_FUZZED(uintBitsToFloat(uvec4(98605u, 83527u, 56353u, 53842u)).w) : _GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y), clamp(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y), (false ? _GLF_FUZZED(acosh(3.3)) : _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y), mix(float(max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y)), float(_GLF_FUZZED(9.6)), bool(false))))), max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((vec3(24.50, -922.810, 43.34)).g), _GLF_FUZZED(2.7)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y), max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y))), clamp(max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 1.0, sqrt(0.0), 1.0)), (false ? _GLF_FUZZED(0.4) : float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))))), _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))), _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y), min(max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0)), (float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))) - 0.0)), injectionSwitch.y), max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), 1.0 * (_GLF_IDENTITY(min(1.0, 1.0), mix(float(min(1.0, 1.0)), float(_GLF_FUZZED(-817.358)), bool(false)))))), 1.0, sqrt(0.0), 1.0))), (_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, _GLF_IDENTITY(sqrt(0.0), clamp(_GLF_IDENTITY(sqrt(0.0), float(vec2(sqrt(0.0), 0.0))), sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), float(mat4x2(sqrt(0.0), 0.0, 1.0, 1.0, log(1.0), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(degrees(-1.1)) : _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-3376.7959)), float(0.0), bool(true))))), 0.0, 0.0))))), 1.0)))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), mix(float(_GLF_FUZZED(4594.2310)), float(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0)))), bool(true))), _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))))), injectionSwitch.y)))))))), ! (_GLF_IDENTITY(! (! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((- -38.20))), bool(false))), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y), (false ? _GLF_FUZZED(uintBitsToFloat(uvec4(98605u, 83527u, 56353u, 53842u)).w) : _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y), clamp(max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0)), (false ? _GLF_FUZZED(0.4) : float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))))), _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : mat2(1.0) * (injectionSwitch)))).y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y), max(max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : mat2(1.0) * (injectionSwitch)))).y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y), max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : mat2(1.0) * (injectionSwitch)))).y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y))), min(max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y), max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(11.14)), float(1.0), bool(true))), sqrt(0.0), 1.0))), (_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0)))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), mix(float(_GLF_FUZZED(4594.2310)), float(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0)))), bool(true))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0)), min(float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0)), float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))))))), injectionSwitch.y))))))))), bool(bvec3(! (! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((- -38.20))), bool(false))), _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y), (false ? _GLF_FUZZED(uintBitsToFloat(uvec4(98605u, 83527u, 56353u, 53842u)).w) : _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0)))), injectionSwitch.y), clamp(max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0)), (false ? _GLF_FUZZED(0.4) : float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))))), _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))), _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))).y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), injectionSwitch.y), min(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), (_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0)))) - 0.0), injectionSwitch.y), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), min(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))))), injectionSwitch.y))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0)), (float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))) - _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(log(1.0), 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(log(1.0), 0.0, 1.0, 1.0))))), (_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0)))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))), mix(float(_GLF_FUZZED(4594.2310)), float(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0)))), bool(true))), _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 1.0))))), injectionSwitch.y))))))))), false, true)))))))))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY(true && (bool(_GLF_DEAD(false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && (bool(_GLF_DEAD(false))), (true && (bool(_GLF_DEAD(false)))) && true)), (! (_GLF_IDENTITY(true && (bool(_GLF_DEAD(false))), (true && (bool(_GLF_DEAD(false)))) && true))) || false)))))), false, false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(8667.3178) : _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), bool(bvec3(! (! (_GLF_DEAD(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))), injectionSwitch.x, injectionSwitch.x))) + 0.0) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((1.7 * injectionSwitch)) : injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.y), mix(_GLF_IDENTITY(float(_GLF_FUZZED(-7584.0372)), (float(_GLF_FUZZED(-7584.0372))) - 0.0), float((injectionSwitch.y)), _GLF_IDENTITY(bool(true), false || (bool(true))))), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.y), min(_GLF_IDENTITY((injectionSwitch.y), mix(float(_GLF_FUZZED(2.9)), float(_GLF_IDENTITY((injectionSwitch.y), float(mat2x4((injectionSwitch.y), 1.0, exp(0.0), 0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))))), bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))), (injectionSwitch.y))), mix(float(_GLF_FUZZED(-7584.0372)), float((injectionSwitch.y)), bool(true))), _GLF_IDENTITY((injectionSwitch.y), mix(float(_GLF_FUZZED(-7584.0372)), float((_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(uintBitsToFloat(uvec2(57662u, 199800u)), clamp(uintBitsToFloat(uvec2(57662u, 199800u)), _GLF_IDENTITY(uintBitsToFloat(uvec2(57662u, 199800u)), vec2(vec2(uintBitsToFloat(uvec2(57662u, 199800u))))), _GLF_IDENTITY(uintBitsToFloat(_GLF_IDENTITY(uvec2(57662u, 199800u), min(uvec2(57662u, 199800u), uvec2(57662u, 199800u)))), min(uintBitsToFloat(uvec2(57662u, 199800u)), uintBitsToFloat(uvec2(57662u, 199800u))))))) : injectionSwitch)), determinant(mat4(sqrt(0.0), 0.0, 1.0, 1.0, sqrt(0.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(float(true)))))), 0.0, 0.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0)), cos(0.0), 0.0, 0.0, sqrt(0.0), 1.0, 0.0, 1.0, 1.0, 1.0))).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(sin(vec2(0.0, 0.0)))).y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))), bool(true)))), (false ? _GLF_FUZZED(-11.43) : min(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.y), min(_GLF_IDENTITY((injectionSwitch.y), mix(float(_GLF_FUZZED(2.9)), float(_GLF_IDENTITY((injectionSwitch.y), float(mat2x4((injectionSwitch.y), 1.0, exp(0.0), 0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))))), bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))), (injectionSwitch.y))), mix(float(_GLF_FUZZED(-7584.0372)), float((injectionSwitch.y)), bool(true))), _GLF_IDENTITY((injectionSwitch.y), mix(float(_GLF_FUZZED(-7584.0372)), float((_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(uintBitsToFloat(uvec2(57662u, 199800u)), clamp(uintBitsToFloat(uvec2(57662u, 199800u)), _GLF_IDENTITY(uintBitsToFloat(uvec2(57662u, 199800u)), vec2(vec2(uintBitsToFloat(uvec2(57662u, 199800u))))), _GLF_IDENTITY(uintBitsToFloat(_GLF_IDENTITY(uvec2(57662u, 199800u), min(uvec2(57662u, 199800u), uvec2(57662u, 199800u)))), min(uintBitsToFloat(uvec2(57662u, 199800u)), uintBitsToFloat(uvec2(57662u, 199800u))))))) : injectionSwitch)), determinant(mat4(sqrt(0.0), 0.0, 1.0, 1.0, sqrt(0.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(float(true)))))), 0.0, 0.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0)), cos(0.0), 0.0, 0.0, sqrt(0.0), 1.0, 0.0, 1.0, 1.0, 1.0))).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(sin(vec2(0.0, 0.0)))).y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))), bool(true))))))) - _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, 0.0, 0.0), (_GLF_IDENTITY(clamp(0.0, 0.0, 0.0), clamp(clamp(0.0, 0.0, 0.0), clamp(0.0, 0.0, 0.0), _GLF_IDENTITY(clamp(0.0, 0.0, 0.0), (_GLF_IDENTITY(clamp(0.0, 0.0, 0.0), mix(float(_GLF_FUZZED(-63.52)), float(clamp(0.0, 0.0, 0.0)), bool(true)))) + 0.0)))) - 0.0)))), clamp(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, 0.0, 0.0), (clamp(0.0, 0.0, 0.0)) - 0.0)))), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, 0.0, 0.0), (clamp(0.0, 0.0, 0.0)) - 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, max(0.0, 0.0)) : _GLF_FUZZED(reflect(-9529.6701, 2554.8895)))))), max(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(3006.6389)), float(0.0), bool(true))), 0.0), (clamp(0.0, 0.0, 0.0)) - 0.0)))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(5775.6711))), max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_IDENTITY(true, (true) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec4(true, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)), true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) ? injectionSwitch.x : _GLF_FUZZED(5775.6711))), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(5775.6711))))) > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch)), tan(0.0), 0.0, 1.0, 1.0))), 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(vec4(-5056.0189, -643.536, -79.12, 96.23)[1])))), 1.0, 1.0, 0.0, 0.0))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), _GLF_IDENTITY(! (! (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))), false || (! (! (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), ! (! (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), mix(vec2((max(injectionSwitch, injectionSwitch))[0], (max(injectionSwitch, injectionSwitch))[1]), vec2(_GLF_FUZZED(5.3), _GLF_FUZZED(-8230.5023)), bvec2(false, false)))).y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), false || (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, bool(bool(true))), true))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), clamp(_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), _GLF_IDENTITY(~ (~ (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u))), (~ (~ (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)))) << 0u)), false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u))))) * _GLF_struct_replacement_16._f4.subgroup_size + subgroup_local_id, max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), min(false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u))), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), 0u | (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)))) | 0u)) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u))), uint(uvec2(false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(subgroup_id, (subgroup_id) / _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), clamp(~ (1u), ~ (1u), ~ (_GLF_IDENTITY(1u, (1u) | 0u)))))), min(1u, 1u))), 1u)))) ^ (_GLF_IDENTITY(18516u, (18516u) * 1u) & 0u)))) * _GLF_struct_replacement_16._f4.subgroup_size + subgroup_local_id, (workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), min(false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u))), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), 0u | (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)))) | 0u)) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u))), uint(uvec2(false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(subgroup_id, (subgroup_id) / _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), clamp(~ _GLF_IDENTITY((1u), max((1u), (1u))), ~ (1u), ~ (_GLF_IDENTITY(1u, (1u) | 0u)))))), min(1u, 1u))), 1u)))) ^ (18516u & 0u)))) * _GLF_struct_replacement_16._f4.subgroup_size + subgroup_local_id) | (workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), min(false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u))), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), 0u | (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)))) | 0u)) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u))), uint(uvec2(false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(subgroup_id, (subgroup_id) / _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), clamp(~ _GLF_IDENTITY((1u), clamp((1u), (1u), (1u))), ~ (1u), ~ (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | 0u), (_GLF_IDENTITY(1u, (1u) | 0u)) + 0u)))))), min(1u, 1u))), 1u)))) ^ (18516u & 0u)))) * _GLF_struct_replacement_16._f4.subgroup_size + subgroup_local_id)), uint(uvec4(workgroup_base + _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), (subgroup_id) / 1u))) * _GLF_struct_replacement_16._f4.subgroup_size + subgroup_local_id, 0u, 0u, 1u))), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u))) * _GLF_struct_replacement_16._f4.subgroup_size + subgroup_local_id, ~ (_GLF_IDENTITY(~ (workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u), (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, ~ (~ _GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), min((subgroup_id), (subgroup_id)))) + 0u)))) / 1u)) >> (0u ^ 0u))), (true ? (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u), (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, ~ (~ _GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), min((subgroup_id), (subgroup_id)))) + 0u)))) / 1u)) >> (0u ^ 0u))) : _GLF_FUZZED(subgroup_local_id))), ((false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u))) | (_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u, (false ? _GLF_FUZZED(write_val) : (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u), ~ _GLF_IDENTITY((~ (subgroup_id)), (_GLF_IDENTITY((~ (subgroup_id)), clamp((~ (subgroup_id)), (~ (subgroup_id)), (~ (subgroup_id))))) - 0u))) / 1u)))), (_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) - (0u & 134895u)))))) / 1u)), _GLF_IDENTITY(((false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(~ (~ (subgroup_id)), max(_GLF_IDENTITY(~ (~ (subgroup_id)), min(~ (~ (subgroup_id)), ~ (~ (subgroup_id)))), ~ (~ (subgroup_id)))))) / 1u))) | 0u, (((false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(~ (~ (subgroup_id)), max(_GLF_IDENTITY(~ (~ (subgroup_id)), min(~ (~ (subgroup_id)), ~ (~ (subgroup_id)))), ~ (~ (subgroup_id)))))) / 1u))) | 0u) | (((false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(~ (~ (subgroup_id)), max(_GLF_IDENTITY(~ (~ (subgroup_id)), min(~ (~ (subgroup_id)), ~ (~ (subgroup_id)))), ~ (~ (subgroup_id)))))) / 1u))) | 0u)))) | (_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u)), (_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) >> 0u)) / 1u)), 1u * ((false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u))))) ^ 0u)))))) * _GLF_struct_replacement_16._f4.subgroup_size + subgroup_local_id), min(~ (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u))), ~ (~ (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)))))) * _GLF_struct_replacement_16._f4.subgroup_size + subgroup_local_id), ~ (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u))), ~ (~ _GLF_IDENTITY((uint(uint(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u)))), (_GLF_IDENTITY((uint(uint(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u)))), ~ (~ _GLF_IDENTITY(((uint(uint(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u))))), clamp(((uint(uint(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u))))), ((uint(uint(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u))))), ((uint(uint(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u)))))))))) ^ _GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) + uint(_GLF_ZERO(0.0, injectionSwitch.x)))), max((0u << _GLF_IDENTITY(uint(6u), uint(6u))), (0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), 0u + (uint(6u))))))))))) + _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, 0u ^ (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, 0u ^ (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))))), (~ (_GLF_IDENTITY(subgroup_local_id, 0u ^ (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))))) >> 0u), (true ? ~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u ^ (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))))), clamp((_GLF_IDENTITY(subgroup_local_id, 0u ^ (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u), 0u ^ (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))))), (_GLF_IDENTITY(subgroup_local_id, 0u ^ (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))))))) : _GLF_FUZZED(workgroup_base)))) - 0u), (_GLF_IDENTITY(~ (subgroup_local_id), ~ (~ (_GLF_IDENTITY(~ (subgroup_local_id), clamp(_GLF_IDENTITY(~ (subgroup_local_id), (~ (subgroup_local_id)) | (~ (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((154563u & 0u), clamp((154563u & 0u), (154563u & 0u), (154563u & 0u))) ^ (subgroup_local_id))))), ~ (subgroup_local_id), ~ (subgroup_local_id))))))) ^ 0u)))) : _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u))) * _GLF_struct_replacement_16._f4.subgroup_size + subgroup_local_id)))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(bvec2((false), false))), bool(bvec2(! (false), _GLF_IDENTITY(true, ! (! (true))))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (false), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(! (false), true), false)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec3(bvec2(! (false), true), false)))), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec2(bvec2(bvec3(bvec2(! (false), true), false)))), true)), bvec2(bvec4(bvec2(bvec3(bvec2(bvec2(bvec2(bvec3(bvec2(! (false), true), false)))), true)), false, false)))))))))), (! (! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))))) && true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (false), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(! (false), true), false)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec3(bvec2(! (false), true), false)))), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec2(bvec2(bvec3(bvec2(! (false), true), false)))), true)), bvec2(bvec4(bvec2(bvec3(bvec2(bvec2(bvec2(bvec3(bvec2(! (false), true), false)))), true)), false, false)))))))))), (! (! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))))) && true)), true, true), bvec3(bvec3(bvec3(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (false), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(! (false), true), false)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec3(bvec2(! (false), true), false)))), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec2(bvec2(bvec3(bvec2(! (false), true), false)))), true)), bvec2(bvec4(bvec2(bvec3(bvec2(bvec2(bvec2(bvec3(bvec2(! (false), true), false)))), true)), false, false)))))))))), (! (! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))))) && true)), true, true))))), ! (! (bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (false), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(! (false), true), false)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec3(bvec2(! (false), true), false)))), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec2(bvec2(bvec3(bvec2(! (false), true), false)))), true)), bvec2(bvec4(bvec2(bvec3(bvec2(bvec2(bvec2(bvec3(bvec2(! (false), true), false)))), true)), false, false)))))))))), (! (! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))))) && true)), true, true), bvec3(bvec3(bvec3(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (false), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(! (false), true), false)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec3(bvec2(! (false), true), false)))), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec2(bvec2(bvec3(bvec2(! (false), true), false)))), true)), bvec2(bvec4(bvec2(bvec3(bvec2(bvec2(bvec2(bvec3(bvec2(! (false), true), false)))), true)), false, false)))))))))), (! (! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))))) && true)), true, true))))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(bvec2((false), false))), bool(bvec2(! (false), true)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (false), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(! (false), true), false)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec3(bvec2(! (false), true), false)))), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec2(bvec2(bvec3(bvec2(! (false), true), false)))), true)), bvec2(bvec4(bvec2(bvec3(bvec2(bvec2(bvec2(bvec3(bvec2(! (false), true), false)))), true)), false, false)))))))))), (! (! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))))) && true)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(bvec2((false), false))), bool(bvec2(! (false), true)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (false), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(! (false), true), false)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec3(bvec2(! (false), true), false)))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec3(bvec2(! (false), _GLF_IDENTITY(true, bool(bvec4(true, false, false, true)))), false)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2(! (false), _GLF_IDENTITY(true, bool(bvec4(true, false, false, true)))), false))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2(! (false), _GLF_IDENTITY(true, bool(bvec4(true, false, false, true)))), false))), bvec2(bvec2(bvec2(bvec2(bvec3(bvec2(! (false), _GLF_IDENTITY(true, bool(bvec4(true, false, false, true)))), false)))))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2(! (false), _GLF_IDENTITY(true, bool(bvec4(true, false, false, true)))), false))), bvec2(bvec2(bvec2(bvec2(bvec3(bvec2(! (false), _GLF_IDENTITY(true, bool(bvec4(true, false, false, true)))), false)))))))), false)))))))), true)), bvec2(bvec4(bvec2(bvec3(bvec2(bvec2(bvec2(bvec3(bvec2(! (false), true), false)))), true)), false, false)))))))))), (! (! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))))) && true)))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true), bool(bvec2((false), false))), bool(bvec2(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))), true)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (false), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(! (false), true), false)), bvec2(bvec2(bvec2(bvec3(bvec2(! (false), true), false)))))))))), (! (! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))))) && true))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, ! (! (true)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, ((_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), (injectionSwitch.x > injectionSwitch.y))) || false) || false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 atomicStore(write_val, uint(virtual_gid), 4, _GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, _GLF_IDENTITY(min(64, 64), int(ivec3(_GLF_IDENTITY(min(64, _GLF_IDENTITY(64, 0 ^ (64))), 0 ^ (min(64, _GLF_IDENTITY(64, (64) - 0)))), (1 & _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-47458)))), 1)))))), 0);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), true && (bool(_GLF_IDENTITY(false, false || (false)))))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint read_val = atomicLoad(_GLF_IDENTITY(write_val, 0u ^ (write_val)), 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))) || false)))
  return;
 if(_GLF_DEAD(false))
  return;
 buf[virtual_gid] = uint(subgroupAllEqual(read_val));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(_GLF_IDENTITY(false, true && (false)), false))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(false, false))))), true, false)), _GLF_IDENTITY(false, true && (false)) || (bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(false, false))))), true, false))))), true))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), min(float(mat2x4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), float(mat2x4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))).y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)))) && true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), ! (! (bool(bvec4(false, true, false, false))))))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) / vec2(1.0, 1.0)).y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec2(bvec2(_GLF_DEAD(false), true)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), true && (bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) && true))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 1.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat2(1.0, 0.0, 1.0, 1.0), mat2(1.0) * (mat2(1.0, 0.0, 1.0, 1.0))))))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x))))) - 0.0), 0.0))).y))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
