#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_6 {
 vec3 _f0;
 ivec2 _f1;
 uint workgroup_id;
 ivec4 _f2;
 bool _f3;
} ;

struct _GLF_struct_3 {
 mat4x2 _f0;
 vec4 _f1;
 mat2x3 _f2;
 bvec3 _f3;
 uvec2 _f4;
 uvec4 _f5;
} ;

struct _GLF_struct_4 {
 uint _f0;
 ivec2 _f1;
 float _f2;
 _GLF_struct_3 _f3;
} ;

struct _GLF_struct_1 {
 mat3x2 _f0;
 ivec2 _f1;
 bvec2 _f2;
} ;

struct _GLF_struct_0 {
 bool _f0;
 vec3 _f1;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
} ;

struct _GLF_struct_5 {
 uint subgroup_id;
 _GLF_struct_2 _f0;
 _GLF_struct_4 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(86.67) : injectionSwitch.x)) : _GLF_FUZZED(-417.968))) < injectionSwitch.y)) && (false)))) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false))))))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || false))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || false)))) && true))) || false), (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)) && true))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) && true))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) && true)))), true && (bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) && true)))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false)))))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! ((false))))))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, _GLF_IDENTITY(true, (true) && true), false)))) || false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(smoothstep((-94.76 / -7766.3382), -0.0, floor(-8.0))))), 0.0))).x > injectionSwitch.y) && true)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(gl_SubgroupID, _GLF_struct_2(_GLF_struct_0(true, vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(706.416) : 1.0)), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))))) / 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))), max(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), clamp(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY((1.0) / 1.0, 1.0 * ((1.0) / 1.0)), float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY((1.0) / 1.0, 1.0 * ((1.0) / 1.0)), 1.0, log(1.0), 0.0, 1.0, 0.0, abs(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, sin(0.0), 1.0, 0.0), vec4(_GLF_IDENTITY(0.0, (0.0) / 1.0), length(vec2(0.0, 0.0)), 1.0, 0.0)), dot(vec4(0.0, sin(0.0), 1.0, 0.0), vec4(0.0, length(vec2(0.0, 0.0)), 1.0, 0.0))), exp(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)))), 0.0), mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x4(_GLF_IDENTITY((1.0) / 1.0, 1.0 * ((1.0) / 1.0)), 1.0, log(1.0), 0.0, 1.0, 0.0, abs(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, (0.0) / determinant(mat2(1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0))), sin(0.0), 1.0, 0.0), vec4(0.0, length(vec2(0.0, 0.0)), 1.0, 0.0)), dot(vec4(0.0, sin(0.0), 1.0, 0.0), vec4(0.0, length(vec2(0.0, 0.0)), 1.0, 0.0))), exp(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)))), 0.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(vec3(-667.671, 808.035, 7.1).p)), float(1.0), bool(true))))), (1.0) / 1.0), _GLF_IDENTITY(1.0, (1.0) / 1.0))))))), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) / 1.0, mix(float(_GLF_FUZZED(6727.6073)), float(_GLF_IDENTITY((1.0) / 1.0, float(float((1.0) / 1.0)))), bool(true))))))))) - 0.0))), _GLF_struct_1(mat3x2(1.0), ivec2(1), bvec2(true))), _GLF_struct_4(_GLF_IDENTITY(1u, (1u) * 1u), ivec2(1), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-5818.0666) : 1.0)), _GLF_struct_3(mat4x2(1.0), vec4(1.0), mat2x3(1.0), bvec3(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)), uvec2(1u), _GLF_IDENTITY(uvec4(1u), max(uvec4(1u), uvec4(1u))))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))), true))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * _GLF_IDENTITY(uvec3(1u, 1u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED((subgroup_local_id ++)) : 1u))), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(uvec3(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED((_GLF_IDENTITY(subgroup_local_id ++, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id ++, (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec2(_GLF_IDENTITY((! (false)), ! (! ((! (false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(subgroup_local_id ++, (true ? subgroup_local_id ++ : _GLF_FUZZED(subgroup_size)))))), (~ (_GLF_IDENTITY(subgroup_local_id ++, (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec2(_GLF_IDENTITY((! (false)), ! (! ((! (false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(subgroup_local_id ++, (true ? subgroup_local_id ++ : _GLF_FUZZED(subgroup_size))))))) / ((1u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (false ? _GLF_FUZZED(write_val) : uint(1u))))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))))) : 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED((_GLF_IDENTITY(subgroup_local_id ++, ~ (~ (_GLF_IDENTITY(subgroup_local_id ++, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(subgroup_local_id ++, (true ? subgroup_local_id ++ : _GLF_FUZZED(subgroup_size)))))))))) : 1u)), (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED((_GLF_IDENTITY(subgroup_local_id ++, ~ (~ (_GLF_IDENTITY(subgroup_local_id ++, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(subgroup_local_id ++, (true ? subgroup_local_id ++ : _GLF_FUZZED(subgroup_size)))))))))) : 1u))) << 0u)) ^ 0u)), (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false) ? uvec3(1u, 1u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(_GLF_IDENTITY((subgroup_local_id ++), ((subgroup_local_id ++)) << (_GLF_IDENTITY(32762u, (32762u) / _GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, (1u) - 0u)))) & 0u))) : 1u))) : _GLF_FUZZED(uvec3(1958u, 99001u, 113872u))))))).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1]), max(vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1]), vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])))).y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(-3.6))))), max(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), (true ? _GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])) : _GLF_FUZZED(_GLF_IDENTITY(-3.3, max(_GLF_IDENTITY(-3.3, float(mat4(-3.3, sqrt(1.0), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0))), -3.3))))))), injectionSwitch[1])).y, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, max(0, 0))], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y), bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(_GLF_IDENTITY(injectionSwitch[0], float(_GLF_IDENTITY(mat4x3(injectionSwitch[0], 0.0, sqrt(1.0), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 0.0, 1.0, 0.0, abs(0.0)), (mat4x3(injectionSwitch[0], 0.0, sqrt(1.0), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 0.0, 1.0, 0.0, abs(0.0))) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y))))), false || (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y), bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y)))))))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y)))))))), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))) + vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y)))))))), false, _GLF_IDENTITY(false, ! (! (false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(9473.6283))))), mix(vec2(_GLF_FUZZED((+ -4568.8675)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(9473.6283))))))[1], 0.0 + ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(9473.6283))))))[1]))), vec2((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(9473.6283))))))[0], _GLF_FUZZED(((- 405.496) * (1.7 - 927.798)))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y))))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y))))), true))))), false, false))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ((false)) || false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bool(! (_GLF_DEAD(false))), (bool(! (_GLF_DEAD(false)))) || false)))), bool(bool(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bool(! (_GLF_DEAD(false))), (bool(! (_GLF_DEAD(false)))) || false)))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))) && true)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(float(-94739)), clamp(_GLF_IDENTITY(_GLF_FUZZED(float(-94739)), clamp(_GLF_FUZZED(float(-94739)), _GLF_FUZZED(float(-94739)), _GLF_IDENTITY(_GLF_FUZZED(float(-94739)), (_GLF_FUZZED(float(-94739))) - 0.0))), _GLF_IDENTITY(_GLF_FUZZED(float(-94739)), min(_GLF_FUZZED(float(-94739)), _GLF_FUZZED(float(-94739)))), _GLF_FUZZED(float(-94739))))), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(float(-94739)), clamp(_GLF_FUZZED(float(-94739)), _GLF_IDENTITY(_GLF_FUZZED(float(-94739)), min(_GLF_FUZZED(float(-94739)), _GLF_IDENTITY(_GLF_FUZZED(float(-94739)), (_GLF_FUZZED(float(-94739))) * 1.0))), _GLF_FUZZED(float(-94739))))), bool(false))), (false ? _GLF_FUZZED(520.019) : _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(float(-94739)), clamp(_GLF_FUZZED(float(-94739)), _GLF_IDENTITY(_GLF_FUZZED(float(-94739)), min(_GLF_FUZZED(float(-94739)), _GLF_IDENTITY(_GLF_FUZZED(float(-94739)), (_GLF_FUZZED(float(-94739))) * 1.0))), _GLF_FUZZED(float(-94739))))), bool(false))))), float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(float(-94739)), clamp(_GLF_FUZZED(float(-94739)), _GLF_IDENTITY(_GLF_FUZZED(float(-94739)), min(_GLF_FUZZED(_GLF_IDENTITY(float(-94739), (float(-94739)) + 0.0)), _GLF_FUZZED(float(_GLF_IDENTITY(-94739, 0 + (-94739)))))), _GLF_FUZZED(float(-94739)))), (true ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(float(-94739), max(_GLF_IDENTITY(float(-94739), max(_GLF_IDENTITY(float(-94739), mix(float(float(-94739)), float(_GLF_FUZZED(-7.0)), bool(false))), float(-94739))), float(-94739)))), clamp(_GLF_FUZZED(float(-94739)), _GLF_IDENTITY(_GLF_FUZZED(float(-94739)), min(_GLF_FUZZED(_GLF_IDENTITY(float(-94739), (_GLF_IDENTITY(float(-94739), clamp(float(-94739), _GLF_IDENTITY(float(-94739), min(float(-94739), _GLF_IDENTITY(float(-94739), 0.0 + (float(-94739))))), _GLF_IDENTITY(float(-94739), min(float(-94739), float(-94739)))))) + 0.0)), _GLF_FUZZED(float(_GLF_IDENTITY(-94739, 0 + (-94739)))))), _GLF_FUZZED(float(-94739)))) : _GLF_FUZZED(-6092.8335)))), bool(false))), float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(float(-94739)), clamp(_GLF_FUZZED(float(-94739)), _GLF_IDENTITY(_GLF_FUZZED(float(_GLF_IDENTITY(-94739, (true ? -94739 : _GLF_FUZZED(39270))))), min(_GLF_FUZZED(float(-94739)), _GLF_FUZZED(float(-94739)))), _GLF_FUZZED(float(-94739))))), bool(false))), min(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(float(-94739)), clamp(_GLF_FUZZED(float(-94739)), _GLF_IDENTITY(_GLF_FUZZED(float(-94739)), (_GLF_FUZZED(float(-94739))) / 1.0), _GLF_FUZZED(float(-94739)))), clamp(_GLF_FUZZED(float(-94739)), _GLF_IDENTITY(_GLF_FUZZED(float(-94739)), min(_GLF_FUZZED(float(-94739)), _GLF_FUZZED(float(-94739)))), _GLF_FUZZED(float(-94739))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(float(-94739)), clamp(_GLF_FUZZED(float(-94739)), _GLF_IDENTITY(_GLF_FUZZED(float(-94739)), min(_GLF_IDENTITY(_GLF_FUZZED(float(-94739)), (true ? _GLF_IDENTITY(_GLF_FUZZED(float(-94739)), clamp(_GLF_IDENTITY(_GLF_FUZZED(float(-94739)), max(_GLF_IDENTITY(_GLF_FUZZED(float(-94739)), mix(float(_GLF_IDENTITY(_GLF_FUZZED(float(-94739)), max(_GLF_FUZZED(float(-94739)), _GLF_FUZZED(float(-94739))))), float(_GLF_FUZZED((true ? 753.605 : -878.342))), bool(false))), _GLF_FUZZED(float(-94739)))), _GLF_FUZZED(float(-94739)), _GLF_FUZZED(float(-94739)))) : _GLF_FUZZED(655.421))), _GLF_FUZZED(float(-94739)))), _GLF_FUZZED(float(-94739)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(float(-94739)), clamp(_GLF_FUZZED(float(-94739)), _GLF_IDENTITY(_GLF_FUZZED(float(-94739)), min(_GLF_IDENTITY(_GLF_FUZZED(float(-94739)), (true ? _GLF_IDENTITY(_GLF_FUZZED(float(-94739)), clamp(_GLF_IDENTITY(_GLF_FUZZED(float(-94739)), max(_GLF_IDENTITY(_GLF_FUZZED(float(-94739)), mix(float(_GLF_IDENTITY(_GLF_FUZZED(float(-94739)), max(_GLF_FUZZED(float(-94739)), _GLF_FUZZED(float(-94739))))), float(_GLF_FUZZED((true ? 753.605 : -878.342))), bool(false))), _GLF_FUZZED(float(-94739)))), _GLF_FUZZED(float(-94739)), _GLF_FUZZED(float(-94739)))) : _GLF_FUZZED(655.421))), _GLF_FUZZED(float(-94739)))), _GLF_FUZZED(float(-94739)))), max(_GLF_IDENTITY(_GLF_FUZZED(float(-94739)), clamp(_GLF_FUZZED(float(-94739)), _GLF_IDENTITY(_GLF_FUZZED(float(-94739)), min(_GLF_IDENTITY(_GLF_FUZZED(float(-94739)), (true ? _GLF_IDENTITY(_GLF_FUZZED(float(-94739)), clamp(_GLF_IDENTITY(_GLF_FUZZED(float(-94739)), max(_GLF_IDENTITY(_GLF_FUZZED(float(-94739)), mix(float(_GLF_IDENTITY(_GLF_FUZZED(float(-94739)), max(_GLF_FUZZED(float(-94739)), _GLF_FUZZED(float(-94739))))), float(_GLF_FUZZED((true ? 753.605 : -878.342))), bool(false))), _GLF_FUZZED(float(-94739)))), _GLF_FUZZED(float(-94739)), _GLF_FUZZED(float(-94739)))) : _GLF_FUZZED(655.421))), _GLF_FUZZED(float(-94739)))), _GLF_FUZZED(float(-94739)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(float(-94739)), clamp(_GLF_FUZZED(float(-94739)), _GLF_IDENTITY(_GLF_FUZZED(float(-94739)), min(_GLF_IDENTITY(_GLF_FUZZED(float(-94739)), (true ? _GLF_IDENTITY(_GLF_FUZZED(float(-94739)), clamp(_GLF_IDENTITY(_GLF_FUZZED(float(-94739)), max(_GLF_IDENTITY(_GLF_FUZZED(float(-94739)), mix(float(_GLF_IDENTITY(_GLF_FUZZED(float(-94739)), max(_GLF_FUZZED(float(-94739)), _GLF_FUZZED(float(-94739))))), float(_GLF_FUZZED((true ? 753.605 : -878.342))), bool(false))), _GLF_FUZZED(float(-94739)))), _GLF_FUZZED(float(-94739)), _GLF_FUZZED(float(-94739)))) : _GLF_FUZZED(655.421))), _GLF_FUZZED(float(-94739)))), _GLF_FUZZED(float(-94739)))), float(mat3x2(_GLF_IDENTITY(_GLF_FUZZED(float(-94739)), clamp(_GLF_FUZZED(float(-94739)), _GLF_IDENTITY(_GLF_FUZZED(float(-94739)), min(_GLF_IDENTITY(_GLF_FUZZED(float(-94739)), (true ? _GLF_IDENTITY(_GLF_FUZZED(float(-94739)), clamp(_GLF_IDENTITY(_GLF_FUZZED(float(-94739)), max(_GLF_IDENTITY(_GLF_FUZZED(float(-94739)), mix(float(_GLF_IDENTITY(_GLF_FUZZED(float(-94739)), max(_GLF_FUZZED(float(-94739)), _GLF_FUZZED(float(-94739))))), float(_GLF_FUZZED((true ? 753.605 : -878.342))), bool(false))), _GLF_FUZZED(float(-94739)))), _GLF_FUZZED(float(-94739)), _GLF_FUZZED(float(-94739)))) : _GLF_FUZZED(655.421))), _GLF_FUZZED(float(-94739)))), _GLF_FUZZED(float(-94739)))), 0.0, 0.0, 0.0, 1.0, 1.0))))) : _GLF_FUZZED(-3.1)))), bool(false))))), 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(vec2(0.0, 1.0), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, sqrt(1.0))), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, sqrt(1.0)))), 1.0, 0.0), mat3(1.0) * (mat2x3(vec2(0.0, 1.0), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, sqrt(1.0))), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, sqrt(1.0)))), 1.0, 0.0)))), _GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(vec2(0.0, 1.0), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, sqrt(1.0))), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, sqrt(1.0)))), 1.0, 0.0), mat3(1.0) * (mat2x3(vec2(0.0, 1.0), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, sqrt(1.0))), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, sqrt(1.0)))), 1.0, 0.0)))), (vec2(_GLF_IDENTITY(mat2x3(vec2(0.0, 1.0), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, sqrt(1.0))), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, sqrt(1.0)))), 1.0, 0.0), mat3(1.0) * (mat2x3(vec2(0.0, 1.0), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, sqrt(1.0))), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, sqrt(1.0)))), 1.0, 0.0))))) + vec2(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), mix(vec2(_GLF_FUZZED(-3948.0115), (vec2(mat3(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(vec2(0.0, 1.0), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, sqrt(1.0))), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, sqrt(1.0)))), 1.0, 0.0), mat3(1.0) * (mat2x3(vec2(0.0, 1.0), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, sqrt(1.0))), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, sqrt(1.0)))), 1.0, 0.0)))), (vec2(_GLF_IDENTITY(mat2x3(vec2(0.0, 1.0), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, sqrt(1.0))), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, sqrt(1.0)))), 1.0, 0.0), mat3(1.0) * (mat2x3(vec2(0.0, 1.0), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, sqrt(1.0))), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, sqrt(1.0)))), 1.0, 0.0))))) + vec2(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)))[1]), vec2((vec2(mat3(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(vec2(0.0, 1.0), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, sqrt(1.0))), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, sqrt(1.0)))), 1.0, 0.0), mat3(1.0) * (mat2x3(vec2(0.0, 1.0), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, sqrt(1.0))), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, sqrt(1.0)))), 1.0, 0.0)))), (vec2(_GLF_IDENTITY(mat2x3(vec2(0.0, 1.0), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, sqrt(1.0))), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, sqrt(1.0)))), 1.0, 0.0), mat3(1.0) * (mat2x3(vec2(0.0, 1.0), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, sqrt(1.0))), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, sqrt(1.0)))), 1.0, 0.0))))) + vec2(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)))[0], _GLF_FUZZED(5.9)), bvec2(true, false))))))), 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-168.550) : 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), sqrt(0.0), 1.0)))), 1.0, 0.0, 1.0, 0.0, exp(0.0), 0.0))), 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(float(-94739)), clamp(_GLF_FUZZED(float(-94739)), _GLF_IDENTITY(_GLF_FUZZED(float(-94739)), min(_GLF_FUZZED(float(-94739)), _GLF_FUZZED(float(-94739)))), _GLF_FUZZED(float(-94739))))), bool(false))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, false)), true && (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, false))))), false, false)), bool(bvec4(bool(bvec4(false, false, false, false)), true, false, true))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, injectionSwitch.y)))), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_DEAD(false)), bool(bool(_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(((_GLF_DEAD(false))) && true, ! (! (((_GLF_DEAD(false))) && true)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), true && (bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), true && (bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), _GLF_IDENTITY(true && (bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), true && (_GLF_IDENTITY(true && (bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), bool(bvec4(true && (bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), true, true, false))))))), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), true && (bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), true && (bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))), false || (_GLF_IDENTITY(bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), true && (_GLF_IDENTITY(bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), ! (! (_GLF_IDENTITY(bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), ! (! (bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), true && (bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), true && (bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))), false || (_GLF_IDENTITY(bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), true && (_GLF_IDENTITY(bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), ! (! (_GLF_IDENTITY(bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), ! (! (bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))))))))))))))))), true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), true && (bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), true && (bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))), false || (_GLF_IDENTITY(bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), true && (_GLF_IDENTITY(bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), ! (! (_GLF_IDENTITY(bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), ! (! (bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), true && (bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), true && (bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))), false || (_GLF_IDENTITY(bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), true && (_GLF_IDENTITY(bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), ! (! (_GLF_IDENTITY(bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), ! (! (bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))))))))))))))))), true, true), false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), true && (bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), true && (bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))), false || (_GLF_IDENTITY(bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), true && (_GLF_IDENTITY(bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), ! (! (_GLF_IDENTITY(bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), ! (! (bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), true && (bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), true && (bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))), false || (_GLF_IDENTITY(bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), true && (_GLF_IDENTITY(bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), ! (! (_GLF_IDENTITY(bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), ! (! (bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))))))))))))))))), true, true), false)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), true && (bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), true && (bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))), false || (_GLF_IDENTITY(bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), true && (_GLF_IDENTITY(bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), ! (! (_GLF_IDENTITY(bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), ! (! (bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), true && (bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), true && (bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))), false || (_GLF_IDENTITY(bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), true && (_GLF_IDENTITY(bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), ! (! (_GLF_IDENTITY(bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), ! (! (bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))))))))))))))))), true, true), false)))), true)))))))))))))))) && true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec2(4.7, -7.4).s), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(34294u))), bvec2(true, false))).y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))) && true)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3((false) || false, true, true)))), bool(bvec3(false, false, true)))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true))))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-4.2)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y))), ! (! (true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-4.2)), float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(1.0))))), max(_GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(1.0))))), float(mat2(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(1.0))))), 1.0, 0.0, 0.0))), float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(1.0))))))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).y))))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))
        return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(vec3(1.0), ivec2(1), gl_WorkGroupID.x, ivec4(1), true);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))))), bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (false), (! (false)) || false))), bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-990.169, -514.218)) : injectionSwitch)).x < injectionSwitch.y)), true, false))), false, false))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_base = workgroup_size * _GLF_struct_replacement_6.workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), false || (false || (_GLF_DEAD(false))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_5.subgroup_id * subgroup_size + subgroup_local_id, (true ? workgroup_base + _GLF_struct_replacement_5.subgroup_id * subgroup_size + subgroup_local_id : _GLF_FUZZED(107270u))), (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + _GLF_struct_replacement_5.subgroup_id * subgroup_size + subgroup_local_id) | (workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_id * subgroup_size, (0u | 0u) ^ (_GLF_struct_replacement_5.subgroup_id * subgroup_size)) + subgroup_local_id)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) < injectionSwitch.y)) ? _GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_5.subgroup_id * subgroup_size + subgroup_local_id, _GLF_IDENTITY((workgroup_base + _GLF_struct_replacement_5.subgroup_id * subgroup_size + subgroup_local_id), (false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), 0u | (_GLF_FUZZED(num_workgroup))) : (_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_5.subgroup_id * subgroup_size, 1u * (workgroup_base + _GLF_struct_replacement_5.subgroup_id * subgroup_size)) + subgroup_local_id))) | 0u) : _GLF_FUZZED(num_workgroup)));
 atomicStore(write_val, uint(virtual_gid), 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, (true) || false) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, (true) || false) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bool(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, (true) || false) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (bool(bool(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, (true) || false) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((- 319.127))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec4(_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bool(! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(58.97)), bool(false))) > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true && (! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-837.446, -5.5)))).x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(6.3), _GLF_FUZZED(57.06)), bvec2(false, false))))).x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec4(_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(0.2, -879.253)))).x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bool(! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true && (! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-837.446, -5.5)))).x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && true)), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec4(_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bool(! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec3(0.0, 1.0, 1.0))), 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat4x2(-6.2, -17.60, 3.3, 1264.4015, -897.648, 8227.7795, 3.0, 140.165)) : _GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec3(0.0, 1.0, 1.0))), 0.0, 0.0, 0.0), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x2(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec3(0.0, 1.0, 1.0))), 0.0, 0.0, 0.0)))))), min(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec3(0.0, 1.0, 1.0))), 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat4x2(-6.2, -17.60, 3.3, 1264.4015, -897.648, 8227.7795, 3.0, 140.165)) : _GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec3(0.0, 1.0, 1.0))), 0.0, 0.0, 0.0), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x2(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec3(0.0, 1.0, 1.0))), 0.0, 0.0, 0.0)))))), vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec3(0.0, 1.0, 1.0))), 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat4x2(-6.2, -17.60, 3.3, 1264.4015, -897.648, 8227.7795, 3.0, 140.165)) : _GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec3(0.0, 1.0, 1.0))), 0.0, 0.0, 0.0), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x2(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec3(0.0, 1.0, 1.0))), 0.0, 0.0, 0.0))))))))).x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true && (! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-837.446, -5.5)))).x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))))) && true))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch, injectionSwitch)).x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(599.751) : 0.0))), injectionSwitch.x)) > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(326.008), _GLF_FUZZED(-6137.4269)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(false || (true), ! (! (_GLF_IDENTITY(false || (true), bool(_GLF_IDENTITY(bvec2(false || (true), false), bvec2(bvec2(bvec2(false || (true), false)))))))))), true))).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))))), true && (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), (injectionSwitch.x > injectionSwitch.y) && true))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-3.3)), float(injectionSwitch.x), bool(true))) > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))))).y)), false))))), true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (injectionSwitch)).x, mix(float(_GLF_FUZZED(-3.3)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-3.3)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-3.3)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), false)), false || (bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (injectionSwitch)).x, mix(float(_GLF_FUZZED(-3.3)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-3.3)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-3.3)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), false))))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (injectionSwitch)).x, mix(float(_GLF_FUZZED(-3.3)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-3.3)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-3.3)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), false)), false || (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y, _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (injectionSwitch)).x, mix(float(_GLF_FUZZED(-3.3)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-3.3)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-3.3)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), false))))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bool(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-3.3)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-3.3)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))), bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 1.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(3.2)), float(float(mat2(injectionSwitch.x, 1.0, 0.0, 1.0))), bool(true)))) : _GLF_FUZZED(refract(50.24, -31.92, 1245.7026)))) > injectionSwitch.y, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(asin(vec2(-178.662, -2.5))) : injectionSwitch), clamp((false ? _GLF_FUZZED(asin(vec2(-178.662, -2.5))) : injectionSwitch), _GLF_IDENTITY((false ? _GLF_FUZZED(asin(vec2(-178.662, -2.5))) : injectionSwitch), min(_GLF_IDENTITY((false ? _GLF_FUZZED(asin(vec2(-178.662, -2.5))) : injectionSwitch), vec2(1.0, 1.0) * ((false ? _GLF_FUZZED(asin(vec2(-178.662, -2.5))) : injectionSwitch))), (false ? _GLF_FUZZED(asin(vec2(-178.662, -2.5))) : injectionSwitch))), _GLF_IDENTITY((false ? _GLF_FUZZED(asin(vec2(-178.662, -2.5))) : injectionSwitch), clamp((false ? _GLF_FUZZED(asin(vec2(-178.662, -2.5))) : injectionSwitch), (false ? _GLF_FUZZED(asin(vec2(-178.662, -2.5))) : injectionSwitch), (false ? _GLF_FUZZED(asin(vec2(-178.662, -2.5))) : injectionSwitch)))))).x, mix(float(_GLF_FUZZED(-3.3)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (bool(true)), (! (bool(true))) && true))))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), mix(float(_GLF_FUZZED(float(-36369))), float(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), bool(true)))))), false)))))))), true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (! _GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (bool(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (bool(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false || (bool(_GLF_IDENTITY(bool(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (bool(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) || false))))))))))))))))), _GLF_IDENTITY(((! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-3.3)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), false))))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-7.0, 4.0)))).x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(906.457)), float(injectionSwitch.y), bool(true))))), (((! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-3.3)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), false))))), true && (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-7.0, 4.0)))).x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(906.457)), float(injectionSwitch.y), bool(true)))))) || false)))))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false)))) || false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true)))))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-567.553)), float(injectionSwitch.y), bool(true))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint read_val = atomicLoad(write_val, 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_DEAD(false))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, int(ivec2(_GLF_IDENTITY(0, (0) + 0), 1)))], _GLF_FUZZED((-8.7 / -28.95))), vec2(_GLF_FUZZED(9.0), (injectionSwitch)[_GLF_IDENTITY(1, max(1, 1))]), bvec2(false, true))), 1.0, 1.0, cos(0.0), 0.0, _GLF_IDENTITY(tan(0.0), float(mat2x3(tan(0.0), 0.0, 0.0, 0.0, 0.0, 0.0))), 0.0, 0.0))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), ! (! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))))))))), bool(bvec4(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), true, false, false)))))), ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), true, false, false))))))) && true)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 _GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), (true ? _GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), 1u * (buf[virtual_gid] = uint(subgroupAllEqual(read_val)))) : _GLF_FUZZED(mix(workgroup_size, virtual_gid, false))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false)))), true && (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
