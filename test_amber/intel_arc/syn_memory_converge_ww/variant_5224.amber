#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)), injectionSwitch)).x > injectionSwitch.y))))
  return;
 uvec3 GLF_merged3_0_1_8_1_1_11_2_1_14read_valsubgroup_idworkgroup_base;
 uvec4 GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uvec4 GLF_merged2_0_3_89_3_1_13GLF_merged2_0_2_51_2_1_13GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenum_workgroupnum_workgroup;
 if(_GLF_DEAD(false))
  return;
 uvec4 GLF_merged2_0_3_89_3_1_17GLF_merged2_0_2_51_2_1_13GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenum_workgroupsubgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uvec2 GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uvec3 GLF_merged2_0_2_51_2_1_13GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenum_workgroup;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 GLF_merged2_0_3_89_3_1_13GLF_merged2_0_2_51_2_1_13GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenum_workgroupnum_workgroup.xyz = GLF_merged2_0_2_51_2_1_13GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenum_workgroup;
 GLF_merged2_0_3_89_3_1_17GLF_merged2_0_2_51_2_1_13GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenum_workgroupsubgroup_local_id.xyz = GLF_merged2_0_3_89_3_1_13GLF_merged2_0_2_51_2_1_13GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenum_workgroupnum_workgroup.xyz;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), true)), bvec2(bvec2(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), true)))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3((_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8882.8770), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(float((injectionSwitch)[_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, clamp(0, 0, 0)) : _GLF_FUZZED((-27774 - 83990))))]))), _GLF_FUZZED(5.1)), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(true, false || _GLF_IDENTITY((_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false))))))), true && ((_GLF_IDENTITY(true, bool(bvec2(true, false)))))))))), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, false))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, false))), true, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), false)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(true, false), false)), bvec2(bvec2(bvec2(bvec3(bvec2(true, false), false)))))), true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec2(true, false), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, false), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec2(true, false), false))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec2(true, false), false))), true)))))), true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false))), true)), true))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, false))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, false))), true, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), false))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, false))), true, true), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, false))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, false))), true, true)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, false))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, false))), true, true))))))), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y)))))))))))), false)))))))))))).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, 1.0)), max(vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 1.0, 1.0, 1.0)), vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, 1.0))))).y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(false), false || (bool(false)))), true && (! (_GLF_IDENTITY(bool(false), false || (bool(false))))))))), false || (bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(false), false || (bool(false)))), true && (! (_GLF_IDENTITY(bool(false), false || (bool(false))))))))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false || (false), ! _GLF_IDENTITY((! _GLF_IDENTITY((false || (false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false || (false)), ((false || _GLF_IDENTITY((false), ! (! ((false)))))) || false)), (bool(_GLF_IDENTITY((false || (false)), ((false || (false))) || false))) || false)))), _GLF_IDENTITY(false, false || (false)) || ((! _GLF_IDENTITY((false || (false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false || (false)), ((false || _GLF_IDENTITY((false), ! (! ((false)))))) || false)), (bool(_GLF_IDENTITY((false || (false)), ((false || (false))) || false))) || false))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false || (false), ! (! (false || (false)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false || (false), true && (false || (false))), ! (! (false || (false)))), false || (_GLF_IDENTITY(false || (false), ! (! (false || (false)))))))), false, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) - tan(0.0), max((0.0) - tan(0.0), _GLF_IDENTITY((0.0) - tan(0.0), clamp((0.0) - tan(0.0), _GLF_IDENTITY((0.0) - tan(0.0), (true ? (0.0) - tan(0.0) : _GLF_FUZZED(4.7))), (0.0) - tan(0.0)))))) + (injectionSwitch.x)), min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) - tan(0.0), max((0.0) - tan(0.0), _GLF_IDENTITY((0.0) - tan(0.0), clamp((0.0) - tan(0.0), _GLF_IDENTITY(_GLF_IDENTITY((0.0) - tan(0.0), (true ? (0.0) - tan(0.0) : _GLF_FUZZED(4.7))), mix(float(_GLF_FUZZED(6.1)), float(_GLF_IDENTITY((0.0) - tan(0.0), (true ? (0.0) - tan(0.0) : _GLF_FUZZED(4.7)))), bool(true))), (0.0) - tan(0.0)))))) + (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) - tan(0.0), max((0.0) - tan(0.0), _GLF_IDENTITY((0.0) - tan(0.0), _GLF_IDENTITY(clamp((0.0) - tan(0.0), _GLF_IDENTITY((0.0) - tan(0.0), (true ? (0.0) - tan(0.0) : _GLF_FUZZED(4.7))), (0.0) - tan(0.0)), min(clamp((0.0) - tan(0.0), _GLF_IDENTITY((0.0) - tan(0.0), (true ? (0.0) - tan(0.0) : _GLF_FUZZED(4.7))), (0.0) - tan(0.0)), clamp((0.0) - tan(0.0), _GLF_IDENTITY((0.0) - tan(0.0), (true ? (0.0) - tan(0.0) : _GLF_FUZZED(4.7))), (0.0) - tan(0.0)))))))) + (injectionSwitch.x)))) > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))) && true))), bool(bvec4((! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))) || false))))))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), false))))))), false || (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), false)))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 uvec2 GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size;
 GLF_merged2_0_3_89_3_1_17GLF_merged2_0_2_51_2_1_13GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenum_workgroupsubgroup_local_id.xyz.xy = GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uvec4 GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valvirtual_gidworkgroup_base;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false))))))) && true))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 GLF_merged3_0_1_8_1_1_11_2_1_14read_valsubgroup_idworkgroup_base.y = subgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), bool(bvec3(! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (false))), false, true))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), bool(bvec3(! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))) && true), false))))) || (false))), false, true)))) && true)))))
  return;
 GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.y = GLF_merged3_0_1_8_1_1_11_2_1_14read_valsubgroup_idworkgroup_base.y;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-1.9)) : injectionSwitch)))).x, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-1.9)) : injectionSwitch)))).x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-1.9)) : injectionSwitch)))).x)) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)) && _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(9.1, -7831.1067)))), injectionSwitch, injectionSwitch)).y)), true, true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (false) || false))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (false) || false))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) || false))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 _GLF_IDENTITY(GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.w = subgroup_size, 0u ^ (GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.w = _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec3(! (_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, ! (! (true)))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, false || (true)))), ! (_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bool(! (true)), ! (! (bool(! (true)))))))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, false || (true)))), ! (_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bool(! (true)), ! (! (bool(! (true)))))))))), false, false)))))), true)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), bool(bvec3(! (_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, ! (! (true))))), _GLF_IDENTITY(true, ! (! (true)))))))), bool(bvec4(! ((_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), ! (! (_GLF_IDENTITY((! (! (false))), ! (! ((! (! (false)))))))))), bool(bvec3(! (false), _GLF_IDENTITY(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))) || _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), bool(bvec2(! (! (true)), true))))), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (_GLF_IDENTITY(true, ! (! (true))))), false)))), true, false))))))), true))))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ((_GLF_IDENTITY(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), true && (! (false))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (false), true && (! (false))), false, false)))))))))))), bool(bvec3(! (_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, ! (! (true))))), true))))), _GLF_IDENTITY(bool(bvec4(! ((_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), bool(bvec3(! (false), _GLF_IDENTITY(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))) || _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bool((true))), bool(bvec2(bool(bool((true))), true))))))), bool(bvec3((_GLF_IDENTITY(true, ! (! (true)))), true, false))))))), true))))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bvec4(! ((_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), bool(bvec3(! (false), _GLF_IDENTITY(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))) || _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bool((true))), bool(bvec2(bool(bool((true))), true))))))), bool(bvec3((_GLF_IDENTITY(true, ! (! (true)))), true, false))))))), true))))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(! ((_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), bool(bvec3(! (false), _GLF_IDENTITY(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))) || _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bool((true))), bool(bvec2(bool(bool((true))), true))))))), bool(bvec3((_GLF_IDENTITY(true, ! (! (true)))), true, false))))))), true))))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))))))) || false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, _GLF_IDENTITY(false, ! (! (false))))))))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
  return;
 GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.z = subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 GLF_merged2_0_3_89_3_1_17GLF_merged2_0_2_51_2_1_13GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenum_workgroupsubgroup_local_id.w = GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.z;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) || false))))))
    return;
   return;
  }
 GLF_merged2_0_3_89_3_1_13GLF_merged2_0_2_51_2_1_13GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenum_workgroupnum_workgroup.w = _GLF_IDENTITY(num_workgroup, (num_workgroup) >> 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 GLF_merged2_0_3_89_3_1_17GLF_merged2_0_2_51_2_1_13GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenum_workgroupsubgroup_local_id.xyz.z = _GLF_IDENTITY(GLF_merged2_0_3_89_3_1_13GLF_merged2_0_2_51_2_1_13GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenum_workgroupnum_workgroup.w, max(GLF_merged2_0_3_89_3_1_13GLF_merged2_0_2_51_2_1_13GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenum_workgroupnum_workgroup.w, GLF_merged2_0_3_89_3_1_13GLF_merged2_0_2_51_2_1_13GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenum_workgroupnum_workgroup.w));
 if(_GLF_DEAD(false))
  return;
 GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valvirtual_gidworkgroup_base.x = _GLF_IDENTITY(GLF_merged2_0_3_89_3_1_17GLF_merged2_0_2_51_2_1_13GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenum_workgroupsubgroup_local_id, min(GLF_merged2_0_3_89_3_1_17GLF_merged2_0_2_51_2_1_13GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenum_workgroupsubgroup_local_id, GLF_merged2_0_3_89_3_1_17GLF_merged2_0_2_51_2_1_13GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenum_workgroupsubgroup_local_id)).xyz.z;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true, true, false)), false || (bool(bvec4(_GLF_DEAD(false), true, true, false))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, sqrt(abs(0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, cos(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))) || false), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))))), true))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(0u, 0u, 0u)), clamp(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize))) - uvec3(0u, 0u, 0u)), gl_WorkGroupSize, gl_WorkGroupSize)).x, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(0u, 0u, 0u)), clamp(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize))) - uvec3(0u, 0u, 0u)), gl_WorkGroupSize, gl_WorkGroupSize)).x, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), clamp(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, (0u) | 0u))), 0u, _GLF_IDENTITY(0u, (0u) - 0u))), 0u, 0u), min(uvec3(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, (0u) | 0u))), 0u, _GLF_IDENTITY(0u, (0u) - 0u))), 0u, 0u), uvec3(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) | 0u))), 0u, _GLF_IDENTITY(0u, (0u) - 0u))), 0u, 0u)))), clamp(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | _GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) / (uvec3(1u, 1u, 1u) & uvec3(1u, 1u, 1u))))) - uvec3(0u, 0u, 0u)), gl_WorkGroupSize, gl_WorkGroupSize)).x, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ~ (~ (uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(0u, 0u, 0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize))) - uvec3(0u, 0u, 0u)), min(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize))) - uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize))) - uvec3(0u, 0u, 0u)), (false ? _GLF_FUZZED(_GLF_IDENTITY(GLF_merged3_0_1_8_1_1_11_2_1_14read_valsubgroup_idworkgroup_base, (GLF_merged3_0_1_8_1_1_11_2_1_14read_valsubgroup_idworkgroup_base) / uvec3(1u, 1u, 1u))) : _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize))) - uvec3(0u, 0u, 0u)))))), gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) + (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(1u), uvec3(1u)))))).x, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> _GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u))), (_GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u))), (uvec3(0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u)))) | (uvec3(0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u)))))) + uvec3(0u, 0u, 0u))), clamp(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize))) - uvec3(0u, 0u, 0u)), gl_WorkGroupSize, gl_WorkGroupSize)).x, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) << 0u), 0u)), clamp(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize))) - uvec3(0u, 0u, 0u)), gl_WorkGroupSize, gl_WorkGroupSize)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) << 0u), 0u)), clamp(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize))) - uvec3(0u, 0u, 0u)), gl_WorkGroupSize, gl_WorkGroupSize)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) << 0u), 0u)), clamp(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize))) - uvec3(0u, 0u, 0u)), gl_WorkGroupSize, gl_WorkGroupSize)) : _GLF_FUZZED(uvec3(192441u, 153889u, 73002u)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) << 0u), 0u)), clamp(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize))) - uvec3(0u, 0u, 0u)), gl_WorkGroupSize, gl_WorkGroupSize)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) << 0u), 0u)), clamp(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize))) - uvec3(0u, 0u, 0u)), gl_WorkGroupSize, gl_WorkGroupSize)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) << 0u), 0u)), clamp(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize))) - uvec3(0u, 0u, 0u)), gl_WorkGroupSize, gl_WorkGroupSize)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) << 0u), 0u)), clamp(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize))) - uvec3(0u, 0u, 0u)), gl_WorkGroupSize, gl_WorkGroupSize)))))).x, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), bool(bvec2(! (! (_GLF_DEAD(false))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false))))))) && true))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false, false), false))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y = workgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 GLF_merged2_0_3_89_3_1_17GLF_merged2_0_2_51_2_1_13GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenum_workgroupsubgroup_local_id.xyz.xy.y = GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((true), bool(bvec4((true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true) && (false), bool(bvec4(_GLF_IDENTITY(true, (true) && true) && (false), false, true, false))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0)), clamp(vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0)), vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0)), vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))))).x < injectionSwitch.y)))), bool(bool(bool(bvec3(false, true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false)), (bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false))) || false)))))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, cos(0.0) * (injectionSwitch.y)))) ? _GLF_FUZZED((GLF_merged3_0_1_8_1_1_11_2_1_14read_valsubgroup_idworkgroup_base << GLF_merged2_0_2_51_2_1_13GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenum_workgroup)) : _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)))).x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec3(bvec2(bvec2(false, false)), true))))))), false || (false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bvec4(_GLF_IDENTITY((false) || false, ! (! ((false) || false))), true, true, false)))), true, false, true))), (false) && _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), (_GLF_DEAD(false)) && true), false, true)), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, true)), (bool(bvec3(_GLF_DEAD(false), false, true))) && true))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
         if(_GLF_DEAD(false))
          return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 GLF_merged2_0_3_89_3_1_17GLF_merged2_0_2_51_2_1_13GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenum_workgroupsubgroup_local_id.xyz.xy.x = workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, (false) || false)) || false), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_base = GLF_merged2_0_3_89_3_1_17GLF_merged2_0_2_51_2_1_13GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenum_workgroupsubgroup_local_id.xyz.xy.y * _GLF_IDENTITY(GLF_merged2_0_3_89_3_1_17GLF_merged2_0_2_51_2_1_13GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenum_workgroupsubgroup_local_id.xyz, (_GLF_IDENTITY(GLF_merged2_0_3_89_3_1_17GLF_merged2_0_2_51_2_1_13GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenum_workgroupsubgroup_local_id.xyz, (false ? _GLF_FUZZED((_GLF_IDENTITY(uvec3(111471u, _GLF_IDENTITY(10423u, 0u ^ (10423u)), 184309u), uvec3(uvec4(uvec3(111471u, 10423u, 184309u), 0u))) << uvec3(150145u, 96023u, _GLF_IDENTITY(31706u, 0u | (31706u))))) : _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_89_3_1_17GLF_merged2_0_2_51_2_1_13GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenum_workgroupsubgroup_local_id.xyz, max(GLF_merged2_0_3_89_3_1_17GLF_merged2_0_2_51_2_1_13GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenum_workgroupsubgroup_local_id.xyz, GLF_merged2_0_3_89_3_1_17GLF_merged2_0_2_51_2_1_13GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenum_workgroupsubgroup_local_id.xyz)), uvec3(0u, 0u, 0u) + (GLF_merged2_0_3_89_3_1_17GLF_merged2_0_2_51_2_1_13GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenum_workgroupsubgroup_local_id.xyz))))) | uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u, 0u)).xy.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false))))) && true))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) || false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) && true))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)) && true)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 GLF_merged3_0_1_8_1_1_11_2_1_14read_valsubgroup_idworkgroup_base.z = workgroup_base;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), (_GLF_IDENTITY(bool(bvec4(false, true, false, false)), true && (bool(bvec4(false, true, false, false))))) && true))))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valvirtual_gidworkgroup_base.w = GLF_merged3_0_1_8_1_1_11_2_1_14read_valsubgroup_idworkgroup_base.z;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), false)))), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), false)))), bool(bool(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), false))))))), true, false))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) && true))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec2(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false)))) || false)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))) || false))), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))) || false))), true))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-0.8, -5.3)) : injectionSwitch))))).y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), true && (bool(bvec4(false, true, true, false)))))), ! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), true && (bool(bvec4(false, true, true, false))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), 1.0, 1.0, 0.0, 0.0, 1.0), transpose(transpose(mat2x3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), 1.0, 1.0, 0.0, 0.0, 1.0))))), mix(float(_GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), 1.0, 1.0, 0.0, 0.0, 1.0), transpose(transpose(mat2x3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), 1.0, 1.0, 0.0, 0.0, 1.0))))), clamp(float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), 1.0, 1.0, 0.0, 0.0, 1.0), transpose(transpose(mat2x3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), 1.0, 1.0, 0.0, 0.0, 1.0))))), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), 1.0, 1.0, 0.0, 0.0, 1.0), transpose(transpose(mat2x3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), 1.0, 1.0, 0.0, 0.0, 1.0))))), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), 1.0, 1.0, 0.0, 0.0, 1.0), transpose(transpose(mat2x3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), 1.0, 1.0, 0.0, 0.0, 1.0)))))))), float(_GLF_FUZZED(-1.0)), bool(false)))), float(mat4x2(injectionSwitch.x, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), tan(0.0) + (_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0)), 0.0, 1.0, abs(0.0), 0.0, 0.0))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valvirtual_gidworkgroup_base.w, (GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valvirtual_gidworkgroup_base.w) / _GLF_IDENTITY((0u | 1u), ((0u | 1u)) * 1u)), (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valvirtual_gidworkgroup_base.w, (GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valvirtual_gidworkgroup_base.w) / _GLF_IDENTITY((0u | 1u), ((0u | 1u)) * 1u))) | (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valvirtual_gidworkgroup_base.w, (GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valvirtual_gidworkgroup_base.w) / _GLF_IDENTITY((0u | 1u), ((0u | 1u)) * 1u)))) + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.y * GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.w, _GLF_IDENTITY(uint(uvec3(GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.y * GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.w, 0u, 0u)), clamp(uint(uvec3(GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.y * _GLF_IDENTITY(GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size, (GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size) << uvec4(0u, 0u, 0u, 0u))) ^ uvec4(0u, 0u, 0u, 0u)).w, 0u, _GLF_IDENTITY(0u, (0u) ^ 0u))), uint(uvec3(GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.y * GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.w, 0u, 0u)), _GLF_IDENTITY(uint(uvec3(GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.y * GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.w, 0u, 0u)), (true ? uint(uvec3(GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.y * GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.w, 0u, 0u)) : _GLF_FUZZED(workgroup_size)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.y * GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.w, _GLF_IDENTITY(uint(uvec3(GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.y * GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.w, 0u, 0u)), clamp(uint(uvec3(GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.y * GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.w, 0u, 0u)), uint(uvec3(GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.y * GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.w, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.y * GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.w, 0u, 0u)), (true ? uint(uvec3(GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.y * GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.w, 0u, 0u)) : _GLF_FUZZED(workgroup_size))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(uvec3(GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.y * GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.w, 0u, 0u)), (true ? uint(uvec3(GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.y * GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.w, 0u, 0u)) : _GLF_FUZZED(workgroup_size))), 0u), (uvec2(_GLF_IDENTITY(uint(uvec3(GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.y * GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.w, 0u, 0u)), (true ? uint(uvec3(GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.y * GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.w, 0u, 0u)) : _GLF_FUZZED(workgroup_size))), 0u)) >> uvec2(0u, 0u))))))), 0u | (_GLF_IDENTITY(GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.y * _GLF_IDENTITY(GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.w, (GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.w) * 1u), _GLF_IDENTITY(uint(uvec3(GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.y * GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.w, 0u, 0u)), clamp(uint(uvec3(GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.y * GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.w, 0u, 0u)), _GLF_IDENTITY(uint(uvec3(GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.y * GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.w, 0u, 0u)), (uint(uvec3(GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.y * GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.w, 0u, 0u))) | (uint(uvec3(GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.y * GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.w, 0u, 0u)))), _GLF_IDENTITY(uint(uvec3(GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.y * GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.w, 0u, 0u)), (true ? uint(uvec3(GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.y * GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.w, 0u, 0u)) : _GLF_FUZZED(workgroup_size)))))))), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.y * GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.w, _GLF_IDENTITY(uint(uvec3(GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.y * GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.w, 0u, 0u)), clamp(uint(uvec3(GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.y * GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.w, 0u, 0u)), uint(uvec3(GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.y * GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.w, 0u, 0u)), _GLF_IDENTITY(uint(uvec3(GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.y * GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.w, 0u, 0u)), (true ? uint(uvec3(GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.y * GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.w, 0u, 0u)) : _GLF_FUZZED(workgroup_size)))))), max(_GLF_IDENTITY(GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.y * _GLF_IDENTITY(GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.w, (GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.w) | (GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.w)), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.y * GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.w, 0u, 0u)), (_GLF_IDENTITY(uint(uvec3(GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.y * GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.w, 0u, 0u)), clamp(_GLF_IDENTITY(uint(uvec3(GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.y * GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.w, 0u, 0u)), clamp(uint(uvec3(GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.y * GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.w, 0u, 0u)), uint(uvec3(GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.y * GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.w, 0u, 0u)), uint(uvec3(GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.y * GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.w, 0u, 0u)))), uint(uvec3(GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.y * GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.w, 0u, 0u)), uint(uvec3(GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.y * GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.w, 0u, 0u))))) << 0u), clamp(uint(uvec3(GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.y * GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.w, 0u, 0u)), uint(uvec3(GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.y * GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.w, 0u, 0u)), _GLF_IDENTITY(uint(uvec3(GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.y * GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.w, 0u, 0u)), (true ? uint(uvec3(GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.y * GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.w, 0u, 0u)) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), max(_GLF_FUZZED(workgroup_size), _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), max(_GLF_FUZZED(workgroup_size), _GLF_FUZZED(workgroup_size)))))))))), _GLF_IDENTITY(GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.y * GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.w, _GLF_IDENTITY(uint(uvec3(GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.y * GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.w, 0u, 0u)), clamp(uint(uvec3(GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.y * GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.w, 0u, 0u)), uint(uvec3(GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.y * GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.w, 0u, 0u)), _GLF_IDENTITY(uint(uvec3(GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.y * GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.w, 0u, 0u)), (true ? uint(uvec3(GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.y * GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.w, 0u, 0u)) : _GLF_FUZZED(workgroup_size)))))))))) + GLF_merged2_0_3_89_3_1_17GLF_merged2_0_2_51_2_1_13GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenum_workgroupsubgroup_local_id.w;
 if(_GLF_DEAD(false))
  return;
 GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x = virtual_gid;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(_GLF_IDENTITY(bool(false || (false)), true && (bool(false || (false)))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valvirtual_gidworkgroup_base.z = GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) || false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 atomicStore(write_val, uint(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valvirtual_gidworkgroup_base.z), _GLF_IDENTITY(4, clamp(4, 4, 4)), 64, 0);
 uint read_val = atomicLoad(_GLF_IDENTITY(write_val, _GLF_IDENTITY((write_val), ((write_val)) - 0u) << uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x))), _GLF_IDENTITY(4, min(4, 4)), _GLF_IDENTITY(64, 0 | (64)), _GLF_IDENTITY(0, _GLF_IDENTITY(max(0, 0), _GLF_IDENTITY(int(int(max(0, 0))), (int(int(max(0, 0)))) ^ 0))));
 GLF_merged3_0_1_8_1_1_11_2_1_14read_valsubgroup_idworkgroup_base.x = read_val;
 GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.x = GLF_merged3_0_1_8_1_1_11_2_1_14read_valsubgroup_idworkgroup_base.x;
 GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valvirtual_gidworkgroup_base.y = GLF_merged4_0_1_8_1_1_11_2_1_17_3_1_13read_valsubgroup_idsubgroup_local_idsubgroup_size.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 buf[GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valvirtual_gidworkgroup_base.z] = uint(subgroupAllEqual(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valvirtual_gidworkgroup_base, (uvec4(0u, 0u, 0u, 0u) | uvec4(0u, 0u, 0u, 0u)) | (GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valvirtual_gidworkgroup_base)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valvirtual_gidworkgroup_base, (uvec4(0u, 0u, 0u, 0u) | uvec4(0u, 0u, 0u, 0u)) | (GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valvirtual_gidworkgroup_base)), clamp(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valvirtual_gidworkgroup_base, (uvec4(0u, 0u, 0u, 0u) | uvec4(0u, 0u, 0u, 0u)) | (GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valvirtual_gidworkgroup_base)), _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valvirtual_gidworkgroup_base, (uvec4(0u, 0u, 0u, 0u) | uvec4(0u, 0u, 0u, 0u)) | (GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valvirtual_gidworkgroup_base)), _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valvirtual_gidworkgroup_base, (uvec4(0u, 0u, 0u, 0u) | uvec4(0u, 0u, 0u, 0u)) | (GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valvirtual_gidworkgroup_base)))), _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valvirtual_gidworkgroup_base, (uvec4(0u, 0u, 0u, 0u) | uvec4(0u, 0u, 0u, 0u)) | (GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valvirtual_gidworkgroup_base)), _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valvirtual_gidworkgroup_base, (uvec4(0u, 0u, 0u, 0u) | uvec4(0u, 0u, 0u, 0u)) | (GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valvirtual_gidworkgroup_base)))).y));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], ((injectionSwitch))[_GLF_IDENTITY(1, (1) << 0)]), vec2(_GLF_FUZZED(-71.42), _GLF_FUZZED((+ 63.92))), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) - vec2(_GLF_IDENTITY(0.0, (0.0) + tan(0.0)), 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(8.3)))) / 1.0)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(8.8)), bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (_GLF_IDENTITY(false, false || (false)))) && true))), true && (false))))) > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), bool(bool(bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))), false, true, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), bool(bool(bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))), false, true, false)), true, false, true))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec4(injectionSwitch.x, 0.0, 0.0, 1.0), max(vec4(injectionSwitch.x, 0.0, 0.0, 1.0), vec4(injectionSwitch.x, 0.0, 0.0, 1.0))))) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
