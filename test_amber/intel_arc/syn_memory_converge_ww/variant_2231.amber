#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_5 {
 ivec2 _f0;
 bool _f1;
 vec2 _f2;
 mat3x2 _f3;
 uvec2 _f4;
 mat2x4 _f5;
} ;

struct _GLF_struct_4 {
 ivec2 _f0;
} ;

struct _GLF_struct_3 {
 mat4x3 _f0;
 float _f1;
 mat4 _f2;
 bvec2 _f3;
 uvec3 _f4;
 vec3 _f5;
 ivec3 _f6;
} ;

struct _GLF_struct_6 {
 _GLF_struct_3 _f0;
 vec4 _f1;
 _GLF_struct_4 _f2;
 bool _f3;
 _GLF_struct_5 _f4;
} ;

struct _GLF_struct_1 {
 mat4x3 _f0;
 vec4 _f1;
 ivec2 _f2;
 ivec4 _f3;
 bvec4 _f4;
} ;

struct _GLF_struct_0 {
 uvec2 _f0;
 vec3 _f1;
 vec3 _f2;
 bvec2 _f3;
 mat3 _f4;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 uint workgroup_base;
 vec4 _f1;
 _GLF_struct_1 _f2;
 float _f3;
 mat4x3 _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_7 {
 bvec3 _f0;
 _GLF_struct_2 _f1;
 uint _f2;
 bvec3 _f3;
 _GLF_struct_6 _f4;
 ivec3 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), _GLF_IDENTITY(bool(bvec4(bool(bvec3(false, false, false)), false, false, true)), ! (! (bool(bvec4(bool(bvec3(false, false, false)), false, false, true)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))))), bool(bvec2(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))))), true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))))), true, true, false)), true && (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))))), true, true, false))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))
        return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     barrier();
    }
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   return;
  }
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED(uvec3(43708u, 176649u, 56934u)) : _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])))).x, (gl_WorkGroupSize.x) | (_GLF_IDENTITY(gl_WorkGroupSize.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sqrt(0.0)) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-4644.3536) : injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-4644.3536) : injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, false)))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true), (_GLF_IDENTITY(true, true && (true))) || false))), false || (bool(bvec2(_GLF_DEAD(false), true))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), ! (! (bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(false, (false) && true))))))), (injectionSwitch.x > injectionSwitch.y)), false, true)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), true && (_GLF_IDENTITY((bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), ((bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false)))), true)))) && true))), _GLF_IDENTITY((! (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, 0.0, 1.0), mix(vec4(_GLF_FUZZED(float(false)), _GLF_FUZZED(-49.83), _GLF_FUZZED((- -2966.9952)), (vec4(injectionSwitch.y, 1.0, 0.0, 1.0))[3]), vec4((vec4(injectionSwitch.y, 1.0, 0.0, 1.0))[0], (vec4(injectionSwitch.y, 1.0, 0.0, 1.0))[1], _GLF_IDENTITY((vec4(injectionSwitch.y, 1.0, 0.0, 1.0))[2], max(_GLF_IDENTITY(_GLF_IDENTITY((vec4(injectionSwitch.y, 1.0, 0.0, 1.0))[2], 0.0 + ((vec4(injectionSwitch.y, 1.0, 0.0, 1.0))[2])), max(_GLF_IDENTITY((vec4(injectionSwitch.y, 1.0, 0.0, 1.0))[2], 0.0 + ((vec4(injectionSwitch.y, 1.0, 0.0, 1.0))[2])), _GLF_IDENTITY((vec4(injectionSwitch.y, 1.0, 0.0, 1.0))[2], 0.0 + ((vec4(injectionSwitch.y, 1.0, 0.0, 1.0))[2])))), (vec4(injectionSwitch.y, 1.0, 0.0, 1.0))[2])), _GLF_FUZZED(1257.7542)), bvec4(true, true, true, false))))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))), false, true)))), _GLF_IDENTITY(((! (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(abs(810.829)) : 1.0)), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 1.0)))))))))))), false, true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (((! (bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))) && _GLF_IDENTITY(true, false || (true)))), false, true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))) && true)), false, _GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), _GLF_IDENTITY(true, false || (true)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), ! (! (bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(false, (false) && true))))))), (injectionSwitch.x > injectionSwitch.y)), false, true)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), true && (_GLF_IDENTITY((bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), ((bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false)))), true)))) && true))), _GLF_IDENTITY((! (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, 0.0, 1.0), mix(vec4(_GLF_FUZZED(float(false)), _GLF_FUZZED(-49.83), _GLF_FUZZED((- -2966.9952)), (vec4(injectionSwitch.y, 1.0, 0.0, 1.0))[3]), vec4((vec4(injectionSwitch.y, 1.0, 0.0, 1.0))[0], (vec4(injectionSwitch.y, 1.0, 0.0, 1.0))[1], _GLF_IDENTITY((vec4(injectionSwitch.y, 1.0, 0.0, 1.0))[2], max(_GLF_IDENTITY(_GLF_IDENTITY((vec4(injectionSwitch.y, 1.0, 0.0, 1.0))[2], 0.0 + ((vec4(injectionSwitch.y, 1.0, 0.0, 1.0))[2])), max(_GLF_IDENTITY((vec4(injectionSwitch.y, 1.0, 0.0, 1.0))[2], 0.0 + ((vec4(injectionSwitch.y, 1.0, 0.0, 1.0))[2])), _GLF_IDENTITY((vec4(injectionSwitch.y, 1.0, 0.0, 1.0))[2], 0.0 + ((vec4(injectionSwitch.y, 1.0, 0.0, 1.0))[2])))), (vec4(injectionSwitch.y, 1.0, 0.0, 1.0))[2])), _GLF_FUZZED(1257.7542)), bvec4(true, true, true, false))))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))), false, true)))), _GLF_IDENTITY(((! (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(abs(810.829)) : 1.0)), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 1.0)))))))))))), false, true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (((! (bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))) && _GLF_IDENTITY(true, false || (true)))), false, true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))) && true)), false, _GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y) / 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), ! (! (bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(false, (false) && true))))))), (injectionSwitch.x > injectionSwitch.y)), false, true)), true && (_GLF_IDENTITY(bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), ! (! (bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(false, (false) && true))))))), (injectionSwitch.x > injectionSwitch.y)), false, true)), (bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), ! (! (bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(false, (false) && true))))))), (injectionSwitch.x > injectionSwitch.y)), false, true))) || false))), _GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), true && (_GLF_IDENTITY((bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), ((bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false)))), true)))) && true))), _GLF_IDENTITY((! (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, 0.0, 1.0), mix(vec4(_GLF_FUZZED(float(false)), _GLF_FUZZED(-49.83), _GLF_FUZZED((- -2966.9952)), (vec4(injectionSwitch.y, 1.0, 0.0, 1.0))[3]), vec4((vec4(injectionSwitch.y, 1.0, 0.0, 1.0))[0], (vec4(injectionSwitch.y, 1.0, 0.0, 1.0))[1], _GLF_IDENTITY((vec4(injectionSwitch.y, 1.0, 0.0, 1.0))[2], max(_GLF_IDENTITY(_GLF_IDENTITY((vec4(injectionSwitch.y, 1.0, 0.0, 1.0))[2], 0.0 + ((vec4(injectionSwitch.y, 1.0, 0.0, 1.0))[2])), max(_GLF_IDENTITY((vec4(injectionSwitch.y, 1.0, 0.0, 1.0))[2], 0.0 + ((vec4(injectionSwitch.y, 1.0, 0.0, 1.0))[2])), _GLF_IDENTITY((vec4(injectionSwitch.y, 1.0, 0.0, 1.0))[2], 0.0 + ((vec4(injectionSwitch.y, 1.0, 0.0, 1.0))[2])))), (vec4(injectionSwitch.y, 1.0, 0.0, 1.0))[2])), _GLF_FUZZED(1257.7542)), bvec4(true, true, true, false))))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))), false, true)))), _GLF_IDENTITY(((! (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(abs(810.829)) : 1.0)), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 1.0)))))))))))), false, true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (((! (bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))) && _GLF_IDENTITY(true, false || (true)))), false, true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)), ! (! (! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), true && (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))) || false)), ((bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false)))), true)))) && true))), _GLF_IDENTITY((! (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, 0.0, 1.0), mix(vec4(_GLF_FUZZED(float(false)), _GLF_FUZZED(-49.83), _GLF_FUZZED((- -2966.9952)), (vec4(injectionSwitch.y, 1.0, 0.0, 1.0))[3]), vec4((vec4(injectionSwitch.y, 1.0, 0.0, 1.0))[0], (vec4(injectionSwitch.y, 1.0, 0.0, 1.0))[1], _GLF_IDENTITY((vec4(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(70.14)), float(0.0), bool(true))))), 1.0))[2], max(_GLF_IDENTITY(_GLF_IDENTITY((vec4(injectionSwitch.y, 1.0, 0.0, 1.0))[2], 0.0 + ((vec4(injectionSwitch.y, 1.0, 0.0, 1.0))[2])), max(_GLF_IDENTITY((vec4(injectionSwitch.y, 1.0, 0.0, 1.0))[2], 0.0 + ((vec4(injectionSwitch.y, 1.0, 0.0, 1.0))[2])), _GLF_IDENTITY((vec4(injectionSwitch.y, 1.0, 0.0, 1.0))[2], 0.0 + ((vec4(injectionSwitch.y, 1.0, 0.0, 1.0))[2])))), _GLF_IDENTITY((vec4(injectionSwitch.y, 1.0, 0.0, 1.0)), min((vec4(injectionSwitch.y, 1.0, 0.0, 1.0)), (vec4(injectionSwitch.y, 1.0, 0.0, 1.0))))[2])), _GLF_FUZZED(1257.7542)), bvec4(true, true, true, false))))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / 1.0, min((injectionSwitch.y) / 1.0, (injectionSwitch.y) / 1.0))))))), false, true)))), _GLF_IDENTITY(((! (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5.1), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED((9910.3022 + 8.0))), bvec2(true, false))).y, (injectionSwitch.y) / _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(abs(810.829)) : 1.0)), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 1.0)))))))))))), false, true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (((_GLF_IDENTITY(! (bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))) && _GLF_IDENTITY(true, false || (true)))), false, true))), ! (! (_GLF_IDENTITY(! (bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))) && _GLF_IDENTITY(true, false || (true)))), false, true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))) && _GLF_IDENTITY(true, false || (true)))), false, true))), true && (! (bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))) && _GLF_IDENTITY(true, false || (true)))), false, true))))), false, true)), false || (bool(bvec3(_GLF_IDENTITY(! (bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))) && _GLF_IDENTITY(true, false || (true)))), false, true))), true && (! (bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))) && _GLF_IDENTITY(true, false || (true)))), false, true))))), false, true)))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true))))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))) && true)), false, _GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_DEAD(false))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)) && true, _GLF_IDENTITY(((false) && true), _GLF_IDENTITY(! (! (((false) && true))), (! (! (((false) && true)))) && true)) && true))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && _GLF_IDENTITY((false), ((false)) && true), (true && (false)) && true))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))) / abs(1.0)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))
            return;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)) || false)) && true))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               return;
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  return;
                 barrier();
                }
               return;
              }
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 return;
                }
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             return;
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              return;
             barrier();
            }
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, false)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, false)))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, false)))), false)))))))))))
            return;
          }
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-150.515)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))), ! (! (! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-13.49) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)))) - 0.0), _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (max(injectionSwitch.x, injectionSwitch.x)) - 0.0))), float(_GLF_FUZZED((-0.3 + _GLF_IDENTITY(4.6, (4.6) + 0.0)))), bool(false))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_7 _GLF_struct_replacement_7 = _GLF_struct_7(bvec3(true), _GLF_struct_2(_GLF_struct_0(uvec2(1u), vec3(1.0), _GLF_IDENTITY(vec3(1.0), (true ? vec3(1.0) : _GLF_FUZZED(vec3(284.158, _GLF_IDENTITY(-5.2, float(float(-5.2))), _GLF_IDENTITY(35.68, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 35.68 : _GLF_IDENTITY(_GLF_FUZZED(-1.1), (_GLF_FUZZED(-1.1)) / _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))))))))), bvec2(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ((! _GLF_IDENTITY((true), true && ((true))))) && true))), mat3(1.0)), workgroup_size * workgroup_id, vec4(1.0), _GLF_struct_1(mat4x3(1.0), vec4(1.0), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, 0 + (1))), (ivec2(_GLF_IDENTITY(1, 0 + (1)))) | (ivec2(0, 0) | ivec2(0, 0))), ivec4(1), bvec4(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, mat4x3(1.0), ivec3(_GLF_IDENTITY(1, (1) | (1)))), 1u, bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (_GLF_IDENTITY(! (bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true && (! (bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))), bool(bvec3(true, _GLF_IDENTITY(true, false || (true)), false)))), _GLF_struct_6(_GLF_struct_3(mat4x3(_GLF_IDENTITY(1.0, min(1.0, 1.0))), _GLF_IDENTITY(1.0, min(1.0, 1.0)), mat4(1.0), bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(true, true, true)))) || false)), _GLF_IDENTITY(uvec3(1u), uvec3(1u, _GLF_IDENTITY(1u, ~ (~ (1u))), 1u) * (uvec3(1u))), vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0))), ivec3(1)), vec4(1.0), _GLF_struct_4(_GLF_IDENTITY(ivec2(1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), max(int(_GLF_IDENTITY(1, (1) ^ 0)), int(_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1 << _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, 0 | (2))))) >> _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-85713) : _GLF_IDENTITY(2, (2) ^ 0)))))) * (_GLF_IDENTITY((1), ((1)) << 0))) ^ 0)))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), max(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), (int(_GLF_IDENTITY(1, (1) ^ 0))) ^ 0), int(_GLF_IDENTITY(1, (1) ^ 0)))))), clamp(_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), max(int(_GLF_IDENTITY(1, (1) ^ 0)), int(_GLF_IDENTITY(1, (1) ^ 0)))))), _GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), max(int(_GLF_IDENTITY(1, (1) ^ 0)), int(_GLF_IDENTITY(1, (1) ^ 0)))))), _GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 + (1))) ^ 0)), max(int(_GLF_IDENTITY(1, (1) ^ _GLF_IDENTITY(0, 0 | (0)))), int(_GLF_IDENTITY(1, (1) ^ 0)))), clamp(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), max(int(_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 ^ ((1))) ^ _GLF_IDENTITY(0, (0) + 0))), int(_GLF_IDENTITY(1, (1) ^ 0)))), _GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), max(int(_GLF_IDENTITY(1, (1) ^ 0)), int(_GLF_IDENTITY(1, (1) ^ 0)))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), (_GLF_IDENTITY(1, (1) ^ 0)) * 1)))), max(int(_GLF_IDENTITY(1, (1) ^ 0)), int(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (1) + 0)) ^ 0, ((1) ^ 0) | 0))))), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), max(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ _GLF_IDENTITY(0, min(0, 0)))), (int(_GLF_IDENTITY(1, (1) ^ _GLF_IDENTITY(0, min(0, 0))))) - 0), int(_GLF_IDENTITY(1, (1) ^ 0)))), min(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), (_GLF_IDENTITY(1, (1) ^ 0)) - 0)), max(int(_GLF_IDENTITY(1, (1) ^ 0)), int(_GLF_IDENTITY(1, (1) ^ 0)))), _GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), max(int(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, clamp(1, 1, 1))))), ((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, clamp(1, 1, 1)))))) | (_GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, clamp(1, 1, 1))))), 0 | ((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, clamp(1, 1, 1))))))))) ^ 0)), int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), (1) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), max(min(1, 1), min(1, 1)))), (1) ^ 0)) | (0 >> _GLF_IDENTITY(int(1), int(1))))))))), 1, 0)))))))))))) | 0)), clamp(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), max(int(_GLF_IDENTITY(1, (1) ^ 0)), int(_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1 << _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, 0 | (2))))) >> _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-85713) : _GLF_IDENTITY(2, (2) ^ 0)))))) * (_GLF_IDENTITY((1), ((1)) << 0))) ^ 0)))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), max(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), (int(_GLF_IDENTITY(1, (1) ^ 0))) ^ 0), int(_GLF_IDENTITY(1, (1) ^ 0)))))), clamp(_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), max(int(_GLF_IDENTITY(1, (1) ^ 0)), int(_GLF_IDENTITY(1, (1) ^ 0)))))), _GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), max(int(_GLF_IDENTITY(1, (1) ^ 0)), int(_GLF_IDENTITY(1, (1) ^ 0)))))), _GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 + (1))) ^ 0)), max(int(_GLF_IDENTITY(1, (1) ^ _GLF_IDENTITY(0, 0 | (0)))), int(_GLF_IDENTITY(1, (1) ^ 0)))), clamp(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), max(int(_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 ^ ((1))) ^ _GLF_IDENTITY(0, (0) + 0))), int(_GLF_IDENTITY(1, (1) ^ 0)))), _GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), max(int(_GLF_IDENTITY(1, (1) ^ 0)), int(_GLF_IDENTITY(1, (1) ^ 0)))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), (_GLF_IDENTITY(1, (1) ^ 0)) * 1)))), max(int(_GLF_IDENTITY(1, (1) ^ 0)), int(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (1) + 0)) ^ 0, ((1) ^ 0) | 0))))), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), max(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ _GLF_IDENTITY(0, min(0, 0)))), (int(_GLF_IDENTITY(1, (1) ^ _GLF_IDENTITY(0, min(0, 0))))) - 0), int(_GLF_IDENTITY(1, (1) ^ 0)))), min(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), (_GLF_IDENTITY(1, (1) ^ 0)) - 0)), max(int(_GLF_IDENTITY(1, (1) ^ 0)), int(_GLF_IDENTITY(1, (1) ^ 0)))), _GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), max(int(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, clamp(1, 1, 1))))), ((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, clamp(1, 1, 1)))))) | (_GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, clamp(1, 1, 1))))), 0 | ((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, clamp(1, 1, 1))))))))) ^ 0)), int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), (1) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), max(min(1, 1), min(1, 1)))), (1) ^ 0)) | (0 >> _GLF_IDENTITY(int(1), int(1))))))))), 1, 0)))))))))))) | 0)), ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), max(int(_GLF_IDENTITY(1, (1) ^ 0)), int(_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1 << _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, 0 | (2))))) >> _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-85713) : _GLF_IDENTITY(2, (2) ^ 0)))))) * (_GLF_IDENTITY((1), ((1)) << 0))) ^ 0)))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), max(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), (int(_GLF_IDENTITY(1, (1) ^ 0))) ^ 0), int(_GLF_IDENTITY(1, (1) ^ 0)))))), clamp(_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), max(int(_GLF_IDENTITY(1, (1) ^ 0)), int(_GLF_IDENTITY(1, (1) ^ 0)))))), _GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), max(int(_GLF_IDENTITY(1, (1) ^ 0)), int(_GLF_IDENTITY(1, (1) ^ 0)))))), _GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 + (1))) ^ 0)), max(int(_GLF_IDENTITY(1, (1) ^ _GLF_IDENTITY(0, 0 | (0)))), int(_GLF_IDENTITY(1, (1) ^ 0)))), clamp(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), max(int(_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 ^ ((1))) ^ _GLF_IDENTITY(0, (0) + 0))), int(_GLF_IDENTITY(1, (1) ^ 0)))), _GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), max(int(_GLF_IDENTITY(1, (1) ^ 0)), int(_GLF_IDENTITY(1, (1) ^ 0)))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), (_GLF_IDENTITY(1, (1) ^ 0)) * 1)))), max(int(_GLF_IDENTITY(1, (1) ^ 0)), int(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (1) + 0)) ^ 0, ((1) ^ 0) | 0))))), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), max(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ _GLF_IDENTITY(0, min(0, 0)))), (int(_GLF_IDENTITY(1, (1) ^ _GLF_IDENTITY(0, min(0, 0))))) - 0), int(_GLF_IDENTITY(1, (1) ^ 0)))), min(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), (_GLF_IDENTITY(1, (1) ^ 0)) - 0)), max(int(_GLF_IDENTITY(1, (1) ^ 0)), int(_GLF_IDENTITY(1, (1) ^ 0)))), _GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), max(int(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, clamp(1, 1, 1))))), ((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, clamp(1, 1, 1)))))) | (_GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, clamp(1, 1, 1))))), 0 | ((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, clamp(1, 1, 1))))))))) ^ 0)), int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), (1) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), max(min(1, 1), min(1, 1)))), (1) ^ 0)) | (0 >> _GLF_IDENTITY(int(1), int(1))))))))), 1, 0)))))))))))) | 0)), ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), max(int(_GLF_IDENTITY(1, (1) ^ 0)), int(_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1 << _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, 0 | (2))))) >> _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-85713) : _GLF_IDENTITY(2, (2) ^ 0)))))) * (_GLF_IDENTITY((1), ((1)) << 0))) ^ 0)))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), max(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), (int(_GLF_IDENTITY(1, (1) ^ 0))) ^ 0), int(_GLF_IDENTITY(1, (1) ^ 0)))))), clamp(_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), max(int(_GLF_IDENTITY(1, (1) ^ 0)), int(_GLF_IDENTITY(1, (1) ^ 0)))))), _GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), max(int(_GLF_IDENTITY(1, (1) ^ 0)), int(_GLF_IDENTITY(1, (1) ^ 0)))))), _GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 + (1))) ^ 0)), max(int(_GLF_IDENTITY(1, (1) ^ _GLF_IDENTITY(0, 0 | (0)))), int(_GLF_IDENTITY(1, (1) ^ 0)))), clamp(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), max(int(_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 ^ ((1))) ^ _GLF_IDENTITY(0, (0) + 0))), int(_GLF_IDENTITY(1, (1) ^ 0)))), _GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), max(int(_GLF_IDENTITY(1, (1) ^ 0)), int(_GLF_IDENTITY(1, (1) ^ 0)))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), (_GLF_IDENTITY(1, (1) ^ 0)) * 1)))), max(int(_GLF_IDENTITY(1, (1) ^ 0)), int(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (1) + 0)) ^ 0, ((1) ^ 0) | 0))))), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), max(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ _GLF_IDENTITY(0, min(0, 0)))), (int(_GLF_IDENTITY(1, (1) ^ _GLF_IDENTITY(0, min(0, 0))))) - 0), int(_GLF_IDENTITY(1, (1) ^ 0)))), min(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), (_GLF_IDENTITY(1, (1) ^ 0)) - 0)), max(int(_GLF_IDENTITY(1, (1) ^ 0)), int(_GLF_IDENTITY(1, (1) ^ 0)))), _GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), max(int(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, clamp(1, 1, 1))))), ((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, clamp(1, 1, 1)))))) | (_GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, clamp(1, 1, 1))))), 0 | ((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, clamp(1, 1, 1))))))))) ^ 0)), int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), (1) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), max(min(1, 1), min(1, 1)))), (1) ^ 0)) | (0 >> _GLF_IDENTITY(int(1), int(1))))))))), 1, 0)))))))))))) | 0)))), (ivec2(1)) | (ivec2(1))), _GLF_IDENTITY((_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), max(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1), clamp((1), _GLF_IDENTITY((1), min((1), _GLF_IDENTITY((1), clamp((1), (1), (1))))), (1))) ^ 0)) ^ 0)), int(_GLF_IDENTITY(1, (1) ^ 0)))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), max(int(_GLF_IDENTITY(1, (1) ^ 0)), int(_GLF_IDENTITY(1, (1) ^ 0)))))), clamp(_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), max(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, 0 | (1)), 1)))) ^ 0)), _GLF_IDENTITY(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / (1 & 1))) ^ 0)), min(int(_GLF_IDENTITY(1, (1) ^ 0)), int(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), (_GLF_IDENTITY(1, (1) ^ 0)) ^ 0)))))))), _GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), max(int(_GLF_IDENTITY(1, (1) ^ 0)), int(_GLF_IDENTITY(1, (1) ^ 0)))))), _GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), max(int(_GLF_IDENTITY(1, (1) ^ 0)), int(_GLF_IDENTITY(_GLF_IDENTITY(1, (0 >> _GLF_IDENTITY(int(5), int(5))) | (1)), (1) ^ 0))))))))))) | _GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(ivec2(0, 1)))) << 0))), (ivec2(1)) | (ivec2(1)))) ^ ivec2(0, 0), max(_GLF_IDENTITY((_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), max(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) ^ 0)), int(_GLF_IDENTITY(1, (1) ^ 0)))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), max(int(_GLF_IDENTITY(1, (1) ^ 0)), int(_GLF_IDENTITY(1, (1) ^ 0)))))), clamp(_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), max(int(_GLF_IDENTITY(1, (1) ^ 0)), _GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), min(int(_GLF_IDENTITY(1, (1) ^ 0)), int(_GLF_IDENTITY(1, (1) ^ 0)))))))), _GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(bitCount(-4199))))) ^ 0)), max(int(_GLF_IDENTITY(1, (1) ^ 0)), int(_GLF_IDENTITY(1, (1) ^ 0)))))), _GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), max(int(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), (1) ^ 0)), int(_GLF_IDENTITY(1, (1) ^ 0))))))))))) | _GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0 ^ 0)), int(ivec2(0, 1)))) << 0))), (ivec2(1)) | (ivec2(1)))) ^ ivec2(0, 0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, _GLF_IDENTITY((1) ^ 0, max((1) ^ 0, _GLF_IDENTITY((1) ^ 0, max((1) ^ 0, _GLF_IDENTITY((1) ^ 0, ((1) ^ 0) / 1))))))), max(int(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) ^ 0), (_GLF_IDENTITY(1, (1) ^ 0)) ^ 0)), int(_GLF_IDENTITY(1, (1) ^ 0)))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, _GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED(273))) ^ 0)), max(int(_GLF_IDENTITY(1, (1) ^ 0)), int(_GLF_IDENTITY(1, (1) ^ 0)))))), clamp(_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), max(int(_GLF_IDENTITY(1, (1) ^ 0)), _GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), min(int(_GLF_IDENTITY(1, (1) ^ 0)), int(_GLF_IDENTITY(1, (1) ^ 0)))))))), _GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, _GLF_IDENTITY((1) ^ 0, clamp((1) ^ 0, _GLF_IDENTITY((1) ^ 0, max((1) ^ 0, _GLF_IDENTITY((1) ^ 0, ((1) ^ 0) ^ 0))), (1) ^ 0)))), max(int(_GLF_IDENTITY(1, (1) ^ 0)), int(_GLF_IDENTITY(1, (1) ^ 0)))))), _GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), _GLF_IDENTITY(max(int(_GLF_IDENTITY(1, (1) ^ 0)), int(_GLF_IDENTITY(1, (1) ^ 0))), ~ (~ (max(int(_GLF_IDENTITY(1, (1) ^ 0)), int(_GLF_IDENTITY(1, (1) ^ 0)))))))))))))) | _GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ _GLF_IDENTITY(0, (0) | (0))), int(ivec2(0, 1)))) << 0))), (ivec2(1)) | (ivec2(1)))) ^ ivec2(0, 0) : _GLF_FUZZED(ivec2(65140, -41958)))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), max(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) ^ 0)), int(_GLF_IDENTITY(1, (1) ^ 0)))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), max(int(_GLF_IDENTITY(1, (1) ^ 0)), int(_GLF_IDENTITY(1, (1) ^ 0)))))), clamp(_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), max(int(_GLF_IDENTITY(1, (1) ^ 0)), _GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), min(int(_GLF_IDENTITY(1, (1) ^ 0)), int(_GLF_IDENTITY(1, (1) ^ 0)))))))), _GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), max(int(_GLF_IDENTITY(1, (1) ^ 0)), int(_GLF_IDENTITY(1, (1) ^ 0)))))), _GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), max(int(_GLF_IDENTITY(1, (1) ^ 0)), int(_GLF_IDENTITY(1, (1) ^ 0))))))))))) | _GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(ivec2(0, 1)))) << 0))), (ivec2(1)) | (ivec2(1)))) ^ ivec2(0, 0), ~ (~ ((_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), max(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) ^ 0)), _GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), (_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), min(int(_GLF_IDENTITY(1, (1) ^ 0)), int(_GLF_IDENTITY(1, (1) ^ 0))))) << 0))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), max(int(_GLF_IDENTITY(1, (1) ^ 0)), int(_GLF_IDENTITY(1, (1) ^ 0)))))), clamp(_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ _GLF_IDENTITY(0, (0) + 0))), max(int(_GLF_IDENTITY(1, (1) ^ 0)), _GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), min(int(_GLF_IDENTITY(1, (1) ^ 0)), int(_GLF_IDENTITY(1, (1) ^ 0)))))))), _GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), max(int(_GLF_IDENTITY(1, (1) ^ 0)), int(_GLF_IDENTITY(1, (1) ^ 0)))))), _GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), max(int(_GLF_IDENTITY(1, (1) ^ 0)), int(_GLF_IDENTITY(1, (1) ^ 0))))))))))) | _GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(ivec2(0, 1)))) << 0))), _GLF_IDENTITY((ivec2(1)) | (ivec2(1)), clamp((ivec2(1)) | (ivec2(1)), (ivec2(1)) | (ivec2(1)), (ivec2(1)) | (ivec2(1)))))) ^ ivec2(0, 0)))), max(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), max(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) ^ 0)), int(_GLF_IDENTITY(1, (1) ^ 0)))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), max(int(_GLF_IDENTITY(1, (1) ^ 0)), int(_GLF_IDENTITY(1, (1) ^ 0)))))), clamp(_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), max(int(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(24556) : _GLF_IDENTITY(1, (1) ^ 0)))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), clamp(int(_GLF_IDENTITY(1, (1) ^ 0)), int(_GLF_IDENTITY(1, (1) ^ 0)), int(_GLF_IDENTITY(1, (1) ^ 0)))), min(int(_GLF_IDENTITY(1, (1) ^ 0)), int(_GLF_IDENTITY(1, (1) ^ 0)))))))), _GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), max(int(_GLF_IDENTITY(1, _GLF_IDENTITY((1) ^ 0, min((1) ^ 0, (1) ^ 0)))), int(_GLF_IDENTITY(1, (1) ^ 0)))))), _GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), max(int(_GLF_IDENTITY(1, (1) ^ 0)), int(_GLF_IDENTITY(1, (1) ^ 0)))))), (_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), max(int(_GLF_IDENTITY(1, (1) ^ 0)), int(_GLF_IDENTITY(1, (1) ^ 0)))))), clamp(_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), max(int(_GLF_IDENTITY(1, (1) ^ 0)), int(_GLF_IDENTITY(1, (1) ^ 0)))))), _GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), max(int(_GLF_IDENTITY(1, (1) ^ 0)), int(_GLF_IDENTITY(1, (1) ^ 0)))))), _GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), max(int(_GLF_IDENTITY(1, (1) ^ 0)), int(_GLF_IDENTITY(1, (1) ^ 0))))))))) | (_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), max(int(_GLF_IDENTITY(1, (1) ^ 0)), int(_GLF_IDENTITY(1, (1) ^ 0))))))))))))) | _GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(ivec2(0, 1)))) << 0))), (ivec2(1)) | (ivec2(1)))) ^ ivec2(0, 0), ~ (~ ((_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), max(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) ^ 0)), int(_GLF_IDENTITY(1, (1) ^ 0)))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), max(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), ~ (~ (int(_GLF_IDENTITY(1, (1) ^ 0))))), int(_GLF_IDENTITY(1, (1) ^ 0)))))), clamp(_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), (1) ^ 0)), max(int(_GLF_IDENTITY(1, (1) ^ 0)), _GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), min(int(_GLF_IDENTITY(1, (1) ^ 0)), int(_GLF_IDENTITY(1, (1) ^ 0)))))))), _GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), max(int(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(13557))), 1)), (1) ^ 0)), int(_GLF_IDENTITY(1, (1) ^ 0)))))), _GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), max(int(_GLF_IDENTITY(1, (1) ^ 0)), int(_GLF_IDENTITY(1, (1) ^ 0))))))))))) | _GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(ivec2(0, 1)))) << 0))), (ivec2(1)) | (ivec2(1)))) ^ ivec2(0, 0)))), (_GLF_IDENTITY((_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), max(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), (_GLF_IDENTITY(1, (1) ^ 0)) | 0)) ^ 0)), int(_GLF_IDENTITY(1, (1) ^ 0)))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (1) ^ 0)), max(int(_GLF_IDENTITY(1, (1) ^ 0)), int(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) ^ 0))), (1) ^ 0)))))), clamp(_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), max(int(_GLF_IDENTITY(1, (1) ^ 0)), _GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), min(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) ^ 0)), int(_GLF_IDENTITY(1, (1) ^ 0)))))))), _GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), 0 ^ (_GLF_IDENTITY(1, (1) ^ 0)))), max(int(_GLF_IDENTITY(1, (1) ^ 0)), int(_GLF_IDENTITY(1, (1) ^ 0)))))), _GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), max(int(_GLF_IDENTITY(1, (1) ^ 0)), int(_GLF_IDENTITY(1, (1) ^ 0))))))))))) | _GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(ivec2(0, 1)))) << 0))), (ivec2(1)) | (ivec2(1)))) ^ ivec2(0, 0), ~ (~ ((_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) / 1), 1))) ^ 0)), max(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) ^ 0)), int(_GLF_IDENTITY(1, (1) ^ 0)))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), max(int(_GLF_IDENTITY(1, (1) ^ _GLF_IDENTITY(0, (0) / 1))), int(_GLF_IDENTITY(1, (1) ^ 0)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), max(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) ^ 0)), _GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), min(int(_GLF_IDENTITY(1, (1) ^ 0)), int(_GLF_IDENTITY(1, (1) ^ 0)))))))), _GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), max(int(_GLF_IDENTITY(1, (1) ^ 0)), int(_GLF_IDENTITY(1, (1) ^ 0)))))), _GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), max(int(_GLF_IDENTITY(1, (1) ^ 0)), int(_GLF_IDENTITY(1, (1) ^ 0))))))))))) | _GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(ivec2(0, 1)))) << 0))), (ivec2(1)) | (ivec2(1)))) ^ ivec2(0, 0))))) << ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (1) ^ 0)), max(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) ^ 0)), int(_GLF_IDENTITY(1, (1) ^ 0)))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), max(int(_GLF_IDENTITY(1, (1) ^ 0)), int(_GLF_IDENTITY(1, (1) ^ 0)))))), clamp(_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), max(int(_GLF_IDENTITY(1, (1) ^ 0)), _GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), min(int(_GLF_IDENTITY(1, (1) ^ 0)), int(_GLF_IDENTITY(1, (1) ^ 0)))))))), _GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), max(int(_GLF_IDENTITY(1, (1) ^ 0)), int(_GLF_IDENTITY(1, (1) ^ 0)))))), _GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), max(int(_GLF_IDENTITY(1, (1) ^ 0)), int(_GLF_IDENTITY(1, (1) ^ 0)))))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), max(int(_GLF_IDENTITY(1, (1) ^ 0)), int(_GLF_IDENTITY(1, (1) ^ 0)))))), clamp(_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), max(int(_GLF_IDENTITY(1, (1) ^ 0)), _GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), min(int(_GLF_IDENTITY(1, (1) ^ 0)), int(_GLF_IDENTITY(1, (1) ^ 0)))))))), _GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), max(int(_GLF_IDENTITY(1, (1) ^ 0)), int(_GLF_IDENTITY(1, (1) ^ 0)))))), _GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), max(int(_GLF_IDENTITY(1, (1) ^ 0)), int(_GLF_IDENTITY(1, (1) ^ 0))))))))))))) | _GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(ivec2(0, 1)))) << 0))), (ivec2(1)) | (ivec2(1)))) ^ ivec2(0, 0), ~ (~ ((_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), max(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) ^ 0)), int(_GLF_IDENTITY(1, (1) ^ 0)))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), max(int(_GLF_IDENTITY(1, (1) ^ 0)), int(_GLF_IDENTITY(1, (1) ^ 0)))))), clamp(_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), max(int(_GLF_IDENTITY(1, (1) ^ 0)), _GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), min(int(_GLF_IDENTITY(1, (1) ^ 0)), int(_GLF_IDENTITY(1, (1) ^ 0)))))))), _GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), max(int(_GLF_IDENTITY(1, (1) ^ 0)), int(_GLF_IDENTITY(1, (1) ^ 0)))))), _GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ 0)), max(int(_GLF_IDENTITY(1, (1) ^ 0)), int(_GLF_IDENTITY(1, (1) ^ 0))))))))))) | _GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(ivec2(0, 1)))) << 0))), (ivec2(1)) | (ivec2(1)))) ^ ivec2(0, 0))))))))) : _GLF_FUZZED(ivec2(-27506, -6154))))), true, _GLF_struct_5(ivec2(1), true, vec2(1.0), mat3x2(1.0), uvec2(_GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), (false ? _GLF_FUZZED(94559u) : 1u))), max((_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(94559u) : 1u))), _GLF_IDENTITY((_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(94559u) : 1u))), uint(uvec4((_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) | (1u)), (false ? _GLF_FUZZED(94559u) : 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(1u ^ 1u, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat4x3(0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, abs(1.0), 1.0, 1.0))), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4(0.0, 0.0, sin(0.0), 0.0, sqrt(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), max(vec4(0.0, 0.0, 1.0, 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), (vec4(0.0, 0.0, 1.0, 0.0)) * vec4(1.0, 1.0, 1.0, 1.0)))), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0))), 0.0, 0.0, 0.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat4(0.0, 0.0, sin(0.0), 0.0, sqrt(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), max(vec4(0.0, 0.0, 1.0, 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), (vec4(0.0, 0.0, 1.0, 0.0)) * vec4(1.0, 1.0, 1.0, 1.0)))), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0))), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-4.0)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (mat4(0.0, 0.0, sin(0.0), 0.0, sqrt(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), max(vec4(0.0, 0.0, 1.0, 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), (vec4(0.0, 0.0, 1.0, 0.0)) * vec4(1.0, 1.0, 1.0, 1.0)))), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0))), 0.0, 0.0, 0.0, 1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))))), injectionSwitch.x)) ^ (1u ^ 1u)), (_GLF_IDENTITY(1u ^ 1u, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat4x3(0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + abs(0.0)), (1.0) + 0.0), 1.0, 1.0, 0.0, abs(1.0), _GLF_IDENTITY(1.0, (1.0) - log(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, (1.0) / 1.0))))), 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(6.6)), bool(false)))) * 1.0), float(mat4(0.0, 0.0, sin(_GLF_IDENTITY(_GLF_IDENTITY(0.0, 0.0 + (0.0)), _GLF_IDENTITY(min(0.0, _GLF_IDENTITY(0.0, (0.0) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), min(_GLF_IDENTITY(min(0.0, _GLF_IDENTITY(0.0, (0.0) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), max(min(0.0, _GLF_IDENTITY(0.0, (0.0) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), min(0.0, _GLF_IDENTITY(0.0, (0.0) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))))), min(0.0, _GLF_IDENTITY(0.0, (0.0) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))))))), 0.0, sqrt(0.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(622.977)), bool(false))), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))))))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0))), 0.0, 0.0, 0.0, 1.0))))), injectionSwitch.x)) ^ (_GLF_IDENTITY(1u ^ 1u, max(1u ^ 1u, 1u ^ 1u))))) + (_GLF_IDENTITY(15569u, max(15569u, 15569u)) & 0u))), 1u, (1u ^ 1u)))))) - 0u)), mat2x4(1.0))), ivec3(1));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x, injectionSwitch.x), mix(float(min(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x, injectionSwitch.x)), float(_GLF_FUZZED(-4.0)), bool(false)))), injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(injectionSwitch.x, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, sqrt(0.0)), (mat4x2(injectionSwitch.x, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, sqrt(0.0))) * mat4(1.0))), min(float(_GLF_IDENTITY(mat4x2(injectionSwitch.x, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, sqrt(0.0)), (mat4x2(injectionSwitch.x, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, sqrt(0.0))) * mat4(1.0))), float(_GLF_IDENTITY(mat4x2(injectionSwitch.x, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, sqrt(0.0)), (mat4x2(injectionSwitch.x, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, sqrt(0.0))) * mat4(1.0)))))) > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))) || false)))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint virtual_gid = _GLF_struct_replacement_7._f1.workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (1u | 0u) * (subgroup_size))) >> 0u) + subgroup_local_id;
 atomicStore(write_val, uint(virtual_gid), 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(709.263)), vec2(_GLF_FUZZED(_GLF_IDENTITY(-1660.3841, (true ? -1660.3841 : _GLF_FUZZED(9.1)))), _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0)], _GLF_IDENTITY(((injectionSwitch)[1]), float(vec3(((injectionSwitch)[1]), 1.0, 0.0))) * 1.0)), bvec2(false, true)))) - vec2(0.0, 0.0)), max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(709.263)), vec2(_GLF_FUZZED(_GLF_IDENTITY(-1660.3841, (true ? -1660.3841 : _GLF_FUZZED(9.1)))), _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0)], _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch)[1]), float(vec3(((injectionSwitch)[1]), 1.0, 0.0))), (_GLF_IDENTITY(((injectionSwitch)[1]), float(vec3(((injectionSwitch)[1]), 1.0, 0.0)))) - 0.0) * 1.0)), bvec2(false, true)))) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(709.263)), vec2(_GLF_FUZZED(_GLF_IDENTITY(-1660.3841, (true ? -1660.3841 : _GLF_FUZZED(9.1)))), _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0)], _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * vec2(1.0, 1.0))[1]), float(vec3(((injectionSwitch)[1]), 1.0, 0.0))) * 1.0)), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true)))))) - vec2(0.0, 0.0)))).x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! (bool((injectionSwitch.x > injectionSwitch.y)))))))) && true)), (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(injectionSwitch.x, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) / 1.0)), float(_GLF_FUZZED(-2972.9521)), bool(false))), 0.0, abs(0.0), 1.0, 1.0, 0.0, 0.0, determinant(mat4(1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, false)), ! (! (bool(bvec3(true, false, false)))))) ? 0.0 : _GLF_FUZZED(cosh(-588.466)))), log(1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, abs(0.0), 1.0)), 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0), (false ? _GLF_FUZZED(mat4(-7431.1575, 2.8, 206.857, -5.1, -6.4, 9981.8480, -55.07, -4598.7241, 4345.0021, 0.7, -840.349, -445.535, 269.354, 690.009, 4.9, -2.5)) : _GLF_IDENTITY(mat4(injectionSwitch.x, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) / 1.0)), float(_GLF_FUZZED(-2972.9521)), bool(false))), 0.0, abs(0.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(vec3(30.36, 879.776, -0.7).x)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), determinant(mat4(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(cosh(-588.466)))), log(1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, abs(0.0), 1.0)), 0.0, 0.0, 0.0), mat4(1.0) * (mat4(injectionSwitch.x, 1.0, 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y), _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) / 1.0)), float(_GLF_FUZZED(-2972.9521)), bool(false))), 0.0, abs(0.0), 1.0, 1.0, 0.0, 0.0, determinant(mat4(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(cosh(-588.466)))), log(1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, abs(0.0), 1.0)), 0.0, 0.0, 0.0)))))), mix(float(float(mat4(injectionSwitch.x, 1.0, _GLF_IDENTITY(0.0, (0.0) * _GLF_ONE(1.0, injectionSwitch.y)), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, abs(0.0), 1.0, 1.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, log(1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, abs(0.0), 1.0)), 0.0, 0.0, 0.0))), float(_GLF_FUZZED(6.8)), bool(false)))) > injectionSwitch.y))) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), true && (! (! ((injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))), false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (false || (false)))))), (bool(_GLF_IDENTITY(false, false || (false)))) || false)))))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))).y))), false)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec2((false), false))) || false), true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))) && true)))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7914.9652)), float(injectionSwitch.y), bool(true)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))), injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint read_val = atomicLoad(write_val, 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 buf[virtual_gid] = uint(subgroupAllEqual(read_val));
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
