#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))[1], injectionSwitch[1], injectionSwitch[1])))).y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(false, (false) && true)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))))))) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(3674.3850, 788.855)) : injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-8.0) : injectionSwitch.y))))) || false)))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-161.045)), bool(false))))) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((false ? _GLF_FUZZED(1.2) : injectionSwitch.x), min((false ? _GLF_FUZZED(1.2) : injectionSwitch.x), (false ? _GLF_FUZZED(1.2) : injectionSwitch.x)))) > injectionSwitch.y)))) && true), _GLF_IDENTITY(true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-70.52)), bool(false)))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(18.02)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 1.0, exp(0.0), 0.0)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), true))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - tan(0.0)) > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - tan(0.0)) > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), mix(float(min(injectionSwitch.x, injectionSwitch.x)), float(_GLF_FUZZED(-9827.7115)), bool(false))), 0.0, abs(1.0), 1.0)), (float(vec4(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), mix(float(min(injectionSwitch.x, injectionSwitch.x)), float(_GLF_FUZZED(-9827.7115)), bool(false))), 0.0, abs(1.0), 1.0))) / 1.0))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) || false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0))).x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) || false)), (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)) || false))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[0], (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(563.114)), bvec2(false, false))), min(_GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[0], (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(563.114)), bvec2(false, false))), (_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[0], (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(563.114)), bvec2(false, false)))) + vec2(0.0, 0.0)), _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[0], (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(563.114)), bvec2(false, false)))))).y), ! (_GLF_IDENTITY(! (bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[0], (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(563.114)), bvec2(false, false))), min(_GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[0], (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(563.114)), bvec2(false, false))), (_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[0], (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(563.114)), bvec2(false, false)))) + vec2(0.0, 0.0)), _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[0], (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(563.114)), bvec2(false, false)))))).y)), ! (! (! (bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[0], (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(563.114)), bvec2(false, false))), min(_GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[0], (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(563.114)), bvec2(false, false))), (_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[0], (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(563.114)), bvec2(false, false)))) + vec2(0.0, 0.0)), _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[0], (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(563.114)), bvec2(false, false)))))).y)))))))), (_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))) || false)), bool(bool(injectionSwitch.x > injectionSwitch.y)))) && true))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0))).x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) || false)), (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)) || false))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[0], (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(563.114)), bvec2(false, false))), min(_GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[0], (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(563.114)), bvec2(false, false))), (_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[0], (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(563.114)), bvec2(false, false)))) + vec2(0.0, 0.0)), _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[0], (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(563.114)), bvec2(false, false)))))).y), ! (_GLF_IDENTITY(! (bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[0], (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(563.114)), bvec2(false, false))), min(_GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[0], (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(563.114)), bvec2(false, false))), (_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[0], (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(563.114)), bvec2(false, false)))) + vec2(0.0, 0.0)), _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[0], (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(563.114)), bvec2(false, false)))))).y)), ! (! (! (bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[0], (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(563.114)), bvec2(false, false))), min(_GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[0], (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(563.114)), bvec2(false, false))), (_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[0], (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(563.114)), bvec2(false, false)))) + vec2(0.0, 0.0)), _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[0], (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(563.114)), bvec2(false, false)))))).y)))))))), (_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))) || false)), bool(bool(injectionSwitch.x > injectionSwitch.y)))) && true))))), bool(bvec4((_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0))).x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) || false)), (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)) || false))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[0], (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(563.114)), bvec2(false, false))), min(_GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[0], (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(563.114)), bvec2(false, false))), (_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[0], (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(563.114)), bvec2(false, false)))) + vec2(0.0, 0.0)), _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[0], (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(563.114)), bvec2(false, false)))))).y), ! (_GLF_IDENTITY(! (bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[0], (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(563.114)), bvec2(false, false))), min(_GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[0], (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(563.114)), bvec2(false, false))), (_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[0], (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(563.114)), bvec2(false, false)))) + vec2(0.0, 0.0)), _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[0], (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(563.114)), bvec2(false, false)))))).y)), ! (! (! (bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[0], (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(563.114)), bvec2(false, false))), min(_GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[0], (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(563.114)), bvec2(false, false))), (_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[0], (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(563.114)), bvec2(false, false)))) + vec2(0.0, 0.0)), _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[0], (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(563.114)), bvec2(false, false)))))).y)))))))), (_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))) || false)), bool(bool(injectionSwitch.x > injectionSwitch.y)))) && true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), true)), false || (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0))).x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) || false)), (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)) || false))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[0], (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(563.114)), bvec2(false, false))), min(_GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[0], (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(563.114)), bvec2(false, false))), (_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[0], (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(563.114)), bvec2(false, false)))) + vec2(0.0, 0.0)), _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[0], (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(563.114)), bvec2(false, false)))))).y), ! (_GLF_IDENTITY(! (bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[0], (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(563.114)), bvec2(false, false))), min(_GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[0], (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(563.114)), bvec2(false, false))), (_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[0], (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(563.114)), bvec2(false, false)))) + vec2(0.0, 0.0)), _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[0], (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(563.114)), bvec2(false, false)))))).y)), ! (! (! (bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[0], (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(563.114)), bvec2(false, false))), min(_GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[0], (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(563.114)), bvec2(false, false))), (_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[0], (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(563.114)), bvec2(false, false)))) + vec2(0.0, 0.0)), _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[0], (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(563.114)), bvec2(false, false)))))).y)))))))), (_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))) || false)), bool(bool(injectionSwitch.x > injectionSwitch.y)))) && true))))), bool(bvec4((_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0))).x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) || false)), (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)) || false))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[0], (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(563.114)), bvec2(false, false))), min(_GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[0], (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(563.114)), bvec2(false, false))), (_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[0], (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(563.114)), bvec2(false, false)))) + vec2(0.0, 0.0)), _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[0], (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(563.114)), bvec2(false, false)))))).y), ! (_GLF_IDENTITY(! (bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[0], (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(563.114)), bvec2(false, false))), min(_GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[0], (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(563.114)), bvec2(false, false))), (_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[0], (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(563.114)), bvec2(false, false)))) + vec2(0.0, 0.0)), _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[0], (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(563.114)), bvec2(false, false)))))).y)), ! (! (! (bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[0], (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(563.114)), bvec2(false, false))), min(_GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[0], (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(563.114)), bvec2(false, false))), (_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[0], (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(563.114)), bvec2(false, false)))) + vec2(0.0, 0.0)), _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[0], (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(563.114)), bvec2(false, false)))))).y)))))))), (_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))) || false)), bool(bool(injectionSwitch.x > injectionSwitch.y)))) && true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), true)), true && (bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0))).x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) || false)), (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)) || false))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[0], (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(563.114)), bvec2(false, false))), min(_GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[0], (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(563.114)), bvec2(false, false))), (_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[0], (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(563.114)), bvec2(false, false)))) + vec2(0.0, 0.0)), _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[0], (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(563.114)), bvec2(false, false)))))).y), ! (_GLF_IDENTITY(! (bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[0], (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(563.114)), bvec2(false, false))), min(_GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[0], (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(563.114)), bvec2(false, false))), (_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[0], (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(563.114)), bvec2(false, false)))) + vec2(0.0, 0.0)), _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[0], (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(563.114)), bvec2(false, false)))))).y)), ! (! (! (bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[0], (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(563.114)), bvec2(false, false))), min(_GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[0], (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(563.114)), bvec2(false, false))), (_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[0], (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(563.114)), bvec2(false, false)))) + vec2(0.0, 0.0)), _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[0], (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(563.114)), bvec2(false, false)))))).y)))))))), (_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))) || false)), bool(bool(injectionSwitch.x > injectionSwitch.y)))) && true))))), bool(bvec4((_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0))).x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) || false)), (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)) || false))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[0], (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(563.114)), bvec2(false, false))), min(_GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[0], (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(563.114)), bvec2(false, false))), (_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[0], (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(563.114)), bvec2(false, false)))) + vec2(0.0, 0.0)), _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[0], (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(563.114)), bvec2(false, false)))))).y), ! (_GLF_IDENTITY(! (bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[0], (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(563.114)), bvec2(false, false))), min(_GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[0], (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(563.114)), bvec2(false, false))), (_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[0], (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(563.114)), bvec2(false, false)))) + vec2(0.0, 0.0)), _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[0], (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(563.114)), bvec2(false, false)))))).y)), ! (! (! (bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[0], (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(563.114)), bvec2(false, false))), min(_GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[0], (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(563.114)), bvec2(false, false))), (_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[0], (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(563.114)), bvec2(false, false)))) + vec2(0.0, 0.0)), _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[0], (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(563.114)), bvec2(false, false)))))).y)))))))), (_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))) || false)), bool(bool(injectionSwitch.x > injectionSwitch.y)))) && true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), true)))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))) || false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), false || (! ((false))))))), (! (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), false || (! ((false)))))))) && true))) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-5.3) : injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), false, false, false))), true, true, false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), bool(bvec2(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), false)))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), (false ? _GLF_FUZZED(2.4) : injectionSwitch.y))) / 1.0)))))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec2(_GLF_IDENTITY(false, (false) || false), true)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), bool(bvec2(! (! (_GLF_DEAD(false))), true)))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(bool((_GLF_IDENTITY(false, false || (false)))))), ! (! (! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool((false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool((false)), (bool((false))) || false)), bool(bvec2(! (_GLF_IDENTITY(bool((false)), (bool((false))) || false)), true))))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), bool(bvec3(bool(bvec3(_GLF_DEAD(false), true, true)), false, true)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(write_val, uint(virtual_gid), 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read_val = atomicLoad(write_val, 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(70.14) : _GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))))) > injectionSwitch.y)))))))
  barrier();
 _GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), (0u << _GLF_IDENTITY(uint(4u), uint(4u))) ^ (buf[virtual_gid] = uint(subgroupAllEqual(read_val))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
