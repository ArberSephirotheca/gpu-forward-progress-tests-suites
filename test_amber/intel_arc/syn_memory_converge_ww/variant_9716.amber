#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) || (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | _GLF_IDENTITY((gl_NumWorkGroups), (true ? _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) >> uvec3(0u, 0u, 0u)) : _GLF_FUZZED((+ uvec3(180878u, 186006u, 95322u)))))).x, _GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, ~ (~ (_GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(168897u) : _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)).x), ((_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)).x)) ^ 0u) ^ 0u))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups)).x, _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, min(_GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, ((gl_NumWorkGroups.x) ^ 0u) | 0u), (gl_NumWorkGroups.x) ^ 0u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(168897u) : (gl_NumWorkGroups.x) ^ 0u))))), (_GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, min(_GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, ((gl_NumWorkGroups.x) ^ 0u) | 0u), (gl_NumWorkGroups.x) ^ 0u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(168897u) : (gl_NumWorkGroups.x) ^ 0u)))))) * ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))))) | 0u) | 0u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))) || false) && true), true, _GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(false, (false) && true)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! (_GLF_IDENTITY((false) && true, ! (! ((false) && true))))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, ! (! (_GLF_IDENTITY((false) && true, ! (! _GLF_IDENTITY(((false) && true), (((false) && true)) || false))))))))), _GLF_IDENTITY(bool(bvec4(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, ! (! (_GLF_IDENTITY((false) && true, ! (! ((false) && true))))))), false || (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, ! (! (_GLF_IDENTITY((false) && true, ! (! ((false) && true))))))))))), _GLF_IDENTITY(false, (false) && true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2(bool(bvec4(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, ! (! (_GLF_IDENTITY((false) && true, ! (! ((false) && true))))))))), _GLF_IDENTITY(false, (false) && true), true, _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)))), true)), ! (! (bool(bvec2(bool(bvec4(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, ! (! (_GLF_IDENTITY((false) && true, ! (! (_GLF_IDENTITY((false), bool(bvec4((false), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))))))))), _GLF_IDENTITY(false, (false) && true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))), bool(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) && true))), bool(bvec2(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) && true))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(false, (false) && true)))), false || (! (bool(bool(_GLF_IDENTITY(false, (false) && true)))))))), false))), true, true))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), (! (false)) || false))), _GLF_IDENTITY(bool(bvec2(! (false), true)), false || (bool(bvec2(! (false), true)))))))) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, bool(bvec2(false, true))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))), true), bvec3(bvec3(bvec3(bvec2(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))), true))))))))))) || false)) && true), (_GLF_IDENTITY(false, (false) && true)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, 0u, 0u)), max(gl_WorkGroupID, gl_WorkGroupID)).x;
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id))) | (workgroup_size * workgroup_id)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id))) | (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id))) | (workgroup_size * workgroup_id)), 0u ^ (_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, 0u + (workgroup_size * workgroup_id)), min(workgroup_size * workgroup_id, workgroup_size * workgroup_id))) | (workgroup_size * workgroup_id)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id))) | (workgroup_size * workgroup_id)), 0u ^ (_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, 0u + (workgroup_size * workgroup_id)), min(workgroup_size * workgroup_id, workgroup_size * workgroup_id))) | (workgroup_size * workgroup_id)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id))) | (workgroup_size * workgroup_id)), 0u ^ (_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, 0u + (workgroup_size * workgroup_id)), min(workgroup_size * workgroup_id, workgroup_size * workgroup_id))) | (workgroup_size * workgroup_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id))) | (workgroup_size * workgroup_id)), 0u ^ (_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, 0u + (workgroup_size * workgroup_id)), min(workgroup_size * workgroup_id, workgroup_size * workgroup_id))) | (workgroup_size * workgroup_id))))) * 1u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id))) | (workgroup_size * workgroup_id)), 0u ^ (_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, 0u + (workgroup_size * workgroup_id)), min(workgroup_size * workgroup_id, workgroup_size * workgroup_id))) | (workgroup_size * workgroup_id)))))), _GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(min(workgroup_size * workgroup_id, workgroup_size * workgroup_id), (min(workgroup_size * workgroup_id, workgroup_size * workgroup_id)) | (min(workgroup_size * workgroup_id, workgroup_size * workgroup_id))))) | _GLF_IDENTITY((workgroup_size * workgroup_id), (_GLF_IDENTITY((workgroup_size * workgroup_id), ~ (_GLF_IDENTITY(~ ((workgroup_size * workgroup_id)), ~ (~ (~ ((workgroup_size * workgroup_id)))))))) ^ 0u))), (clamp(_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) * 1u) * workgroup_id, ~ (~ (workgroup_size * workgroup_id))), min(workgroup_size * workgroup_id, workgroup_size * workgroup_id))) | (workgroup_size * workgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id))) | (workgroup_size * workgroup_id)), 0u ^ (_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), (_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id))) | _GLF_IDENTITY((workgroup_size * workgroup_id), clamp((workgroup_size * workgroup_id), (workgroup_size * workgroup_id), (_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) / 1u))))))), _GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(min(workgroup_size * workgroup_id, workgroup_size * workgroup_id), (min(workgroup_size * workgroup_id, workgroup_size * workgroup_id)) << 0u))) | (_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) | 0u))))) - 0u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id))) | (workgroup_size * workgroup_id)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, min(_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id))) / 1u), workgroup_size * workgroup_id))) | (workgroup_size * workgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u)) << 0u), (_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id))) | (workgroup_size * workgroup_id)), 0u ^ (_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id))) | (workgroup_size * workgroup_id)))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id))) | (workgroup_size * workgroup_id)), clamp(_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id))) | (workgroup_size * workgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id))) | (workgroup_size * workgroup_id)), (true ? _GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id))) | (workgroup_size * workgroup_id)) : _GLF_FUZZED(write_val))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id))) | (workgroup_size * workgroup_id)), (_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id))) | (workgroup_size * workgroup_id))) + 0u)))), (clamp(_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, ~ _GLF_IDENTITY((~ (workgroup_size * workgroup_id)), clamp((~ (workgroup_size * workgroup_id)), (~ (workgroup_size * workgroup_id)), (~ (workgroup_size * workgroup_id))))), min(workgroup_size * workgroup_id, workgroup_size * workgroup_id))) | (workgroup_size * workgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id))) | (workgroup_size * workgroup_id)), 0u ^ (_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id))) | (workgroup_size * workgroup_id)))), _GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_size * workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_size * workgroup_id), uint(uvec2(~ (workgroup_size * workgroup_id), uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), workgroup_size * workgroup_id), (min(workgroup_size * workgroup_id, workgroup_size * workgroup_id)) << 0u))) | (workgroup_size * workgroup_id)))) - 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id))) | (workgroup_size * workgroup_id)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id))) | (workgroup_size * workgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) | 0u)) >> 0u))), (_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id))) | (workgroup_size * workgroup_id)), 0u ^ (_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id))) | (workgroup_size * workgroup_id)))), _GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id))) | (workgroup_size * workgroup_id))), (clamp(_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, ~ (~ (workgroup_size * workgroup_id))), min(workgroup_size * workgroup_id, workgroup_size * workgroup_id))) | (workgroup_size * workgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) | (workgroup_size * workgroup_id)), min(workgroup_size * workgroup_id, workgroup_size * workgroup_id))) | (workgroup_size * workgroup_id)), 0u ^ (_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id))) | (workgroup_size * workgroup_id)))), _GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(min(workgroup_size * workgroup_id, workgroup_size * workgroup_id), (min(workgroup_size * workgroup_id, workgroup_size * workgroup_id)) << 0u))) | (workgroup_size * workgroup_id)))) - 0u))), uint(uvec3((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id))) | (workgroup_size * workgroup_id)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, min(_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id))) / 1u), workgroup_size * workgroup_id))) | (workgroup_size * workgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u)) << 0u), (_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id))) | (workgroup_size * workgroup_id)), 0u ^ (_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id))) | (workgroup_size * workgroup_id)))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id))) | (workgroup_size * workgroup_id)), clamp(_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id))) | (workgroup_size * workgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id))) | (workgroup_size * workgroup_id)), (true ? _GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id))) | (workgroup_size * workgroup_id)) : _GLF_FUZZED(write_val))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id))) | (workgroup_size * workgroup_id)), (_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id))) | (workgroup_size * workgroup_id))) + 0u)))), (clamp(_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, ~ _GLF_IDENTITY((~ (workgroup_size * workgroup_id)), clamp((~ (workgroup_size * workgroup_id)), (~ (workgroup_size * workgroup_id)), (~ (workgroup_size * workgroup_id))))), min(workgroup_size * workgroup_id, workgroup_size * workgroup_id))) | (workgroup_size * workgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id))) | (workgroup_size * workgroup_id)), 0u ^ (_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id))) | (workgroup_size * workgroup_id)))), _GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_size * workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_size * workgroup_id), uint(uvec2(~ (workgroup_size * workgroup_id), uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), workgroup_size * workgroup_id), (min(workgroup_size * workgroup_id, workgroup_size * workgroup_id)) << 0u))) | (workgroup_size * workgroup_id)))) - 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id))) | (workgroup_size * workgroup_id)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id))) | (workgroup_size * workgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) | 0u)) >> 0u))), (_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id))) | (workgroup_size * workgroup_id)), 0u ^ (_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id))) | (workgroup_size * workgroup_id)))), _GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id))) | (workgroup_size * workgroup_id))), (clamp(_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, ~ (~ (workgroup_size * workgroup_id))), min(workgroup_size * workgroup_id, workgroup_size * workgroup_id))) | (workgroup_size * workgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) | (workgroup_size * workgroup_id)), min(workgroup_size * workgroup_id, workgroup_size * workgroup_id))) | (workgroup_size * workgroup_id)), 0u ^ (_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id))) | (workgroup_size * workgroup_id)))), _GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(min(workgroup_size * workgroup_id, workgroup_size * workgroup_id), (min(workgroup_size * workgroup_id, workgroup_size * workgroup_id)) << 0u))) | (workgroup_size * workgroup_id)))) - 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u))));
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u), subgroup_id * subgroup_size, subgroup_id * subgroup_size))), min(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u), subgroup_id * subgroup_size, subgroup_id * subgroup_size))), uint(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u)))) << 0u), subgroup_id * subgroup_size, subgroup_id * subgroup_size))))), 0u | (uint(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) + 0u)))))))), subgroup_id * subgroup_size)) + subgroup_local_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false))))
  barrier();
 atomicStore(write_val, uint(virtual_gid), _GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4), int(ivec3((4), 0, 0))) + (_GLF_IDENTITY(_GLF_IDENTITY(0 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), 0 | (int(1)))), (_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), 0 | (int(1))))) >> 0), (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), 0 | (int(1)))), (_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), 0 | (int(1))))) >> 0)) ^ 0), (0 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), 0 | (int(1)))), (_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), 0 | (int(1))))) | (_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), 0 | (int(1)))))), (_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), 0 | (int(1))))) >> 0)) * 1))), (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) + (_GLF_IDENTITY(0, (_GLF_IDENTITY(false, bool(bvec2(false, true))) ? _GLF_FUZZED(16630) : _GLF_IDENTITY(0, (0) + 0))) << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), _GLF_IDENTITY(0 | (int(1)), 0 | (0 | (int(1)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) + (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), 0 | (int(_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0), transpose(transpose(mat2x4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0))))), abs(0.0) + (float(_GLF_IDENTITY(mat2x4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0), transpose(transpose(mat2x4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0)))))))))) * _GLF_IDENTITY((1), (_GLF_IDENTITY((1), ((1)) + 0)) | ((1)))), min(_GLF_IDENTITY(1, int(ivec2(1, 1))), _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) + 0)))))))))))))), min(_GLF_IDENTITY(4, (4) + (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, 0 | (1))), _GLF_IDENTITY(int(1), 0 | (_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) * 1)), (int(1)) << 0)))))), _GLF_IDENTITY(4, (4) + (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (0) | 0)))), 0)), 0 ^ (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (0) | 0)))), 0)))) | (int(1))))))))) | (_GLF_IDENTITY(4, (4) + (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), _GLF_IDENTITY(clamp(int(1), _GLF_IDENTITY(int(1), (int(1)) | (int(1))), int(1)), (0 & ivec3(-28445, 36519, 98577).y) ^ (clamp(int(1), _GLF_IDENTITY(int(1), _GLF_IDENTITY((int(1)), ~ (~ (_GLF_IDENTITY((int(1)), ~ (~ ((int(1)))))))) | (int(1))), int(1))))), 0 | (int(1))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), max(int(1), int(1))), clamp(int(1), _GLF_IDENTITY(int(1), (int(1)) | (int(1))), int(1))), _GLF_IDENTITY(0 | (int(1)), (0 | (int(1))) << 0)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), max(int(1), int(1))), clamp(int(1), _GLF_IDENTITY(int(1), (int(1)) | (int(1))), int(1))), _GLF_IDENTITY(0 | (int(1)), (0 | (int(1))) << 0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), max(int(1), int(1))), clamp(int(1), _GLF_IDENTITY(int(1), (int(1)) | (int(1))), int(1))), _GLF_IDENTITY(0 | (int(1)), (0 | (int(1))) << 0)), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), max(int(1), int(1))), clamp(int(1), _GLF_IDENTITY(int(1), (int(1)) | (int(1))), int(1))), _GLF_IDENTITY(0 | (int(1)), (0 | (int(1))) << 0)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), max(int(1), int(1))), clamp(int(1), _GLF_IDENTITY(int(1), (int(1)) | (int(1))), int(1))), _GLF_IDENTITY(0 | (int(1)), (0 | (int(1))) << 0))))), 1, 1, 1)))))) + 0))))))) - _GLF_IDENTITY((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(8), (true ? int(8) : _GLF_FUZZED(-40957))), int(8))), clamp(_GLF_IDENTITY((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(8), (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, false)))) && true) ? int(8) : _GLF_FUZZED(_GLF_IDENTITY(-40957, (_GLF_IDENTITY(-40957, int(ivec3(-40957, 0, 0)))) | 0)))), int(8))), 0 ^ ((0 >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(8), (true ? int(8) : _GLF_FUZZED(-40957))), _GLF_IDENTITY((_GLF_IDENTITY(int(8), (true ? _GLF_IDENTITY(int(8), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(8), (int(8)) >> 0)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(8), (int(8)) >> 0)), (false ? _GLF_FUZZED(22589) : ~ (_GLF_IDENTITY(int(8), (int(8)) >> 0))))) | 0))) : _GLF_FUZZED(_GLF_IDENTITY(-40957, (false ? _GLF_FUZZED(-91206) : -40957)))))), (_GLF_IDENTITY((_GLF_IDENTITY(int(8), (true ? _GLF_IDENTITY(int(8), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(8), (int(8)) >> 0)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(8), (int(8)) >> 0)), (false ? _GLF_FUZZED(22589) : ~ (_GLF_IDENTITY(int(8), (int(8)) >> 0))))) | 0))) : _GLF_FUZZED(_GLF_IDENTITY(-40957, (false ? _GLF_FUZZED(-91206) : -40957)))))), int(ivec2((_GLF_IDENTITY(int(8), (true ? _GLF_IDENTITY(int(8), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(8), (int(8)) >> 0)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(8), (int(8)) >> 0)), (false ? _GLF_FUZZED(22589) : ~ (_GLF_IDENTITY(int(8), (int(8)) >> 0))))) | 0))) : _GLF_FUZZED(_GLF_IDENTITY(-40957, (false ? _GLF_FUZZED(-91206) : -40957)))))), 0)))) - 0) / int(_GLF_ONE(1.0, injectionSwitch.y))), int(8))))), (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(8), (true ? int(8) : _GLF_FUZZED(-40957))), int(8))), (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(8), (true ? int(8) : _GLF_FUZZED(-40957))), int(8))))))), 0 | (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, _GLF_IDENTITY((4), (_GLF_IDENTITY((4), _GLF_IDENTITY(min(_GLF_IDENTITY((4), 0 ^ _GLF_IDENTITY(((4)), 1 * (((4))))), (4)), max(_GLF_IDENTITY(min(_GLF_IDENTITY((4), 0 ^ _GLF_IDENTITY(((4)), 1 * (((4))))), (4)), (min(_GLF_IDENTITY((4), 0 ^ _GLF_IDENTITY(((4)), 1 * (((4))))), (4))) >> 0), min(_GLF_IDENTITY((4), 0 ^ _GLF_IDENTITY(((4)), 1 * (((4))))), (4)))))) | (_GLF_IDENTITY((4), max(_GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) >> 0)) / int(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(((4)) | ((4)), clamp(((4)) | ((4)), _GLF_IDENTITY(((4)) | ((4)), 0 + (((4)) | ((4)))), ((4)) | ((4))))), _GLF_IDENTITY((4), _GLF_IDENTITY(((4)), _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, (0) << 0))) ^ (_GLF_IDENTITY((_GLF_IDENTITY((4), 1 * ((4)))), _GLF_IDENTITY(~ (~ (((4)))), (true ? ~ (~ (((4)))) : _GLF_FUZZED(89097)))))) - 0))))) + (_GLF_IDENTITY(0 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), 0 ^ (clamp(1, 1, 1))))), 0 ^ (int(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, min(1, 1))))))), int(_GLF_IDENTITY(1, 0 ^ _GLF_IDENTITY((_GLF_IDENTITY(1, (1) | (1))), min((_GLF_IDENTITY(1, (1) | (1))), _GLF_IDENTITY((_GLF_IDENTITY(1, (1) | (1))), (_GLF_IDENTITY((_GLF_IDENTITY(1, (1) | (1))), ((_GLF_IDENTITY(1, (1) | (1)))) / 1)) | ((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), (1) | (1)))))))))), max(_GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(_GLF_IDENTITY(int(1), clamp(int(1), int(1), _GLF_IDENTITY(int(1), (int(1)) | _GLF_IDENTITY((_GLF_IDENTITY(int(1), (_GLF_IDENTITY(false ? _GLF_FUZZED(-33377) : int(1), 0 ^ (false ? _GLF_FUZZED(-33377) : int(1)))))), max(_GLF_IDENTITY((_GLF_IDENTITY(int(1), (_GLF_IDENTITY(false ? _GLF_FUZZED(-33377) : int(1), 0 ^ (false ? _GLF_FUZZED(-33377) : int(1)))))), min((_GLF_IDENTITY(int(1), (_GLF_IDENTITY(false ? _GLF_FUZZED(-33377) : int(1), 0 ^ (false ? _GLF_FUZZED(-33377) : int(1)))))), (_GLF_IDENTITY(int(1), (_GLF_IDENTITY(false ? _GLF_FUZZED(-33377) : int(1), 0 ^ (false ? _GLF_FUZZED(-33377) : int(1)))))))), (_GLF_IDENTITY(int(1), (_GLF_IDENTITY(false ? _GLF_FUZZED(-33377) : int(1), 0 ^ (false ? _GLF_FUZZED(-33377) : int(1))))))))))), int(1)))), _GLF_IDENTITY(int(int(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(1, 1, 1))), int(1)), max(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), min(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, clamp(1, 1, 1))))), int(1)), 0 ^ (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (clamp(1, 1, 1)) | 0)), (false ? _GLF_FUZZED(int(55.84)) : _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (clamp(1, 1, 1)) | 0))))), int(1)))), 0 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0 ^ 0)) + (clamp(1, 1, 1))))), _GLF_IDENTITY(int(1), ~ (~ (int(1))))))))), (int(int(0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(_GLF_IDENTITY(int(1), max(int(1), int(1))), (_GLF_IDENTITY(int(1), max(int(1), int(1)))) - 0))))) ^ 0))))), 0 ^ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY((4), (_GLF_IDENTITY((4), min(_GLF_IDENTITY((4), 0 ^ _GLF_IDENTITY(((4)), _GLF_IDENTITY(1, (1) | (1)) * (((4))))), (4)))) | (_GLF_IDENTITY((4), max(_GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) >> 0)) / int(_GLF_ONE(1.0, injectionSwitch.y)))), ((4)) | ((4))), _GLF_IDENTITY((4), _GLF_IDENTITY(((4)), 0 ^ (_GLF_IDENTITY((_GLF_IDENTITY((4), 1 * ((4)))), ~ (~ (((4))))))) - 0))))) + (_GLF_IDENTITY(0 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(1, 1, 1))), 0 ^ (int(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), (0 | 0) | (_GLF_IDENTITY(1, min(1, 1))))))))), int(_GLF_IDENTITY(1, 0 ^ _GLF_IDENTITY((_GLF_IDENTITY(1, (1) | (1))), min((_GLF_IDENTITY(1, (1) | (1))), _GLF_IDENTITY((_GLF_IDENTITY(1, (1) | (1))), (_GLF_IDENTITY((_GLF_IDENTITY(1, (1) | (1))), _GLF_IDENTITY(((_GLF_IDENTITY(1, (1) | (1)))), ~ (~ (_GLF_IDENTITY(((_GLF_IDENTITY(1, (1) | (1)))), min(((_GLF_IDENTITY(1, (1) | (1)))), ((_GLF_IDENTITY(1, (1) | (1))))))))) / 1)) | ((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), (1) | (1)))))))))), max(_GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(_GLF_IDENTITY(int(1), clamp(int(1), int(1), _GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(int(1), (false ? _GLF_FUZZED(-33377) : int(1))))))), int(1)))), _GLF_IDENTITY(int(int(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(1, 1, 1))), int(1)), max(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), min(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, clamp(1, 1, 1))))), int(1)), 0 ^ (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (clamp(1, 1, 1)) | 0))), int(1)))), 0 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0 ^ 0)) + (clamp(1, 1, 1))))), int(1)))))), (int(int(0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(_GLF_IDENTITY(int(1), max(int(1), int(1))), _GLF_IDENTITY((_GLF_IDENTITY(int(1), max(int(1), int(_GLF_IDENTITY(1, 0 ^ (1)))))), clamp((_GLF_IDENTITY(int(1), max(int(1), int(_GLF_IDENTITY(1, 0 ^ (1)))))), (_GLF_IDENTITY(int(1), max(int(1), int(_GLF_IDENTITY(1, 0 ^ (1)))))), _GLF_IDENTITY((_GLF_IDENTITY(int(1), max(int(1), int(_GLF_IDENTITY(1, 0 ^ (1)))))), ((_GLF_IDENTITY(int(1), max(int(1), int(_GLF_IDENTITY(1, 0 ^ (1))))))) | ((_GLF_IDENTITY(int(1), max(int(1), int(_GLF_IDENTITY(1, 0 ^ (1)))))))))) - 0))))) ^ 0))))))))))), 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read_val = atomicLoad(write_val, 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 0.0, 1.0))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_DEAD(false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (! (_GLF_DEAD(false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(bvec3((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), _GLF_IDENTITY(bool(bvec4(! _GLF_IDENTITY((false), bool(bvec3((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(true, ! (! (true))))), false || (bool(bvec4(! _GLF_IDENTITY((false), bool(bvec3((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(true, ! (! (true)))))))))), bool(bvec4(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec3((false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x < injectionSwitch.y)))), false))))), false, false, false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 buf[virtual_gid] = uint(subgroupAllEqual(read_val));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, sin(0.0) + (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4.5)), vec2(_GLF_FUZZED(4.0), (injectionSwitch)[1]), bvec2(false, true))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))[0], _GLF_FUZZED((- 46.15))), vec2(_GLF_FUZZED(-7.7), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)).y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((- 46.15))), vec2(_GLF_IDENTITY(_GLF_FUZZED(-7.7), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-7.7), max(_GLF_FUZZED(-7.7), _GLF_IDENTITY(_GLF_FUZZED(-7.7), float(mat3(_GLF_IDENTITY(_GLF_FUZZED(-7.7), float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(_GLF_FUZZED(-7.7), 1.0 * (_GLF_FUZZED(-7.7))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(_GLF_IDENTITY(_GLF_FUZZED(-7.7), 1.0 * (_GLF_FUZZED(-7.7))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0))))), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))))), float(_GLF_FUZZED(59.36)), bool(false))), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)).y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED((- 46.15))), (vec2((injectionSwitch)[0], _GLF_FUZZED((- 46.15)))) / vec2(1.0, 1.0)), vec2(_GLF_FUZZED(-7.7), (injectionSwitch)[_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) << 0), 1))))]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y), bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED((- 46.15))), (vec2((injectionSwitch)[0], _GLF_FUZZED((- 46.15)))) / vec2(1.0, 1.0)), vec2(_GLF_FUZZED(-7.7), (injectionSwitch)[_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) << 0), 1))))]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
