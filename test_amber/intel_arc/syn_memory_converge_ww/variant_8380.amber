#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460
struct _GLF_struct_0 {
 vec2 _f0;
 ivec2 _f1;
 mat4x3 _f2;
 ivec2 _f3;
 bool _f4;
 uvec2 _f5;
 bool _f6;
} ;

struct _GLF_struct_1 {
 mat4x2 _f0;
 _GLF_struct_0 _f1;
 uint _f2;
 uint _f3;
 mat2x3 _f4;
} ;

struct _GLF_struct_2 {
 float _f0;
 uint virtual_gid;
 _GLF_struct_1 _f1;
 bool _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_8_1_1_14read_valworkgroup_size;
 uvec3 GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size;
 uvec4 GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_13num_workgroupread_valsubgroup_idsubgroup_size;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_13num_workgroupread_valsubgroup_idsubgroup_size.z = subgroup_id;
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_13num_workgroupread_valsubgroup_idsubgroup_size.w = subgroup_size;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.x = subgroup_local_id;
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_13num_workgroupread_valsubgroup_idsubgroup_size.x = num_workgroup;
 uint workgroup_size = gl_WorkGroupSize.x;
 GLF_merged2_0_1_8_1_1_14read_valworkgroup_size.y = workgroup_size;
 GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.z = GLF_merged2_0_1_8_1_1_14read_valworkgroup_size.y;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.z * workgroup_id;
 GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.y = workgroup_base;
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(1.0, GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.y + GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_13num_workgroupread_valsubgroup_idsubgroup_size.z * GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_13num_workgroupread_valsubgroup_idsubgroup_size.w + GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.x, _GLF_struct_1(mat4x2(1.0), _GLF_struct_0(vec2(1.0), ivec2(1), mat4x3(1.0), ivec2(1), true, uvec2(1u), true), 1u, 1u, mat2x3(1.0)), true);
 atomicStore(write_val, uint(_GLF_struct_replacement_2.virtual_gid), 4, 64, 0);
 uint read_val = atomicLoad(write_val, 4, 64, 0);
 GLF_merged2_0_1_8_1_1_14read_valworkgroup_size.x = read_val;
 GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_13num_workgroupread_valsubgroup_idsubgroup_size.y = GLF_merged2_0_1_8_1_1_14read_valworkgroup_size.x;
 buf[_GLF_struct_replacement_2.virtual_gid] = uint(subgroupAllEqual(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_13num_workgroupread_valsubgroup_idsubgroup_size.y));
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
