#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_3 {
 vec4 _f0;
 bool _f1;
 mat4x3 _f2;
 bvec3 _f3;
 bool _f4;
} ;

struct _GLF_struct_2 {
 bvec4 _f0;
 uvec4 _f1;
 mat4 _f2;
 ivec4 _f3;
} ;

struct _GLF_struct_1 {
 mat3x2 _f0;
 vec3 _f1;
 uint subgroup_local_id;
 mat3x4 _f2;
 int _f3;
 mat3 _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_0 {
 bvec2 _f0;
 bvec3 _f1;
 mat4x2 _f2;
 ivec3 _f3;
} ;

struct _GLF_struct_4 {
 _GLF_struct_0 _f0;
 mat2 _f1;
 _GLF_struct_1 _f2;
 _GLF_struct_2 _f3;
 mat3x4 _f4;
 _GLF_struct_3 _f5;
} ;

struct _GLF_struct_5 {
 _GLF_struct_4 _f0;
 mat4x3 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, true, true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(27.01)), float(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0)))), bool(true))), (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(_GLF_struct_4(_GLF_struct_0(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(true && _GLF_IDENTITY((true), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || ((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (true))), true && (! (_GLF_IDENTITY(true, true && (true)))))))))), _GLF_IDENTITY(bool(bool(true && _GLF_IDENTITY((true), false || ((true))))), (bool(bool(true && _GLF_IDENTITY((true), false || ((true)))))) && _GLF_IDENTITY(true, false || (true)))))), bvec3(true), mat4x2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x2(1.0, exp(0.0), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0)), max(float(mat4x2(1.0, exp(0.0), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0)), float(mat4x2(1.0, exp(0.0), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0)))))), ivec3(1)), _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(-655.344, 600.656, 0.1, -3537.4452)) : _GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (mat2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0))))), (mat2(1.0) * (mat2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0)))))) / _GLF_IDENTITY(mat2(1.0, 1.0, 1.0, 1.0), transpose(transpose(mat2(1.0, 1.0, 1.0, 1.0))))), _GLF_IDENTITY(mat2(mat3x4(mat2(1.0) * (mat2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0))))))), transpose(transpose(mat2(mat3x4(mat2(1.0) * (mat2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0)))))))))))))), _GLF_struct_1(mat3x2(1.0), vec3(1.0), gl_SubgroupInvocationID, mat3x4(1.0), 1, mat3(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 0.0, cos(0.0)))) : _GLF_FUZZED(-8.6))), (true ? _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 0.0, cos(0.0)))) : _GLF_FUZZED(-8.6))) : _GLF_FUZZED(7.8))), 1.0))) / 1.0), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), max(_GLF_IDENTITY(min(1.0, 1.0), float(_GLF_IDENTITY(mat3x4(min(1.0, 1.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, cos(0.0), abs(0.0), abs(0.0), _GLF_IDENTITY(1.0, (1.0) * 1.0), 0.0), (_GLF_IDENTITY(mat3x4(min(1.0, 1.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, cos(0.0), abs(0.0), abs(0.0), 1.0, 0.0), (mat3x4(min(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2.8)), float(1.0), bool(true)))), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, cos(0.0), abs(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 1.0, 0.0), (mat2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 1.0, 0.0)) - mat2(0.0, 0.0, 0.0, 0.0))))), abs(0.0), 1.0, 0.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat4x3(1.0, sin(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0))), (_GLF_IDENTITY(1.0, float(mat4x3(1.0, sin(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))) / 1.0), 1.0)), 1.0), max(min(1.0, 1.0), min(1.0, 1.0)))))), mix(float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), max(_GLF_IDENTITY(min(1.0, 1.0), float(_GLF_IDENTITY(mat3x4(min(1.0, 1.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, cos(0.0), abs(0.0), abs(0.0), _GLF_IDENTITY(1.0, (1.0) * 1.0), 0.0), (_GLF_IDENTITY(mat3x4(min(1.0, 1.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, cos(0.0), abs(0.0), abs(0.0), 1.0, 0.0), (mat3x4(min(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2.8)), float(1.0), bool(true)))), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, cos(0.0), abs(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 1.0, 0.0), (mat2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 1.0, 0.0)) - mat2(0.0, 0.0, 0.0, 0.0))))), abs(0.0), 1.0, 0.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat4x3(1.0, sin(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0))), (_GLF_IDENTITY(1.0, float(mat4x3(1.0, sin(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))) / 1.0), 1.0)), 1.0), max(min(1.0, 1.0), min(1.0, 1.0))))))), float(_GLF_FUZZED(-290.841)), bool(false)))) / 1.0), (true ? _GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, min(1.0, 1.0))), min((_GLF_IDENTITY(1.0, min(1.0, 1.0))), (_GLF_IDENTITY(1.0, min(1.0, 1.0))))) / 1.0) : _GLF_FUZZED(550.899))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY((false ? _GLF_FUZZED(abs(-35.48)) : 1.0), clamp((false ? _GLF_FUZZED(abs(-35.48)) : 1.0), _GLF_IDENTITY((false ? _GLF_FUZZED(abs(-35.48)) : 1.0), clamp((false ? _GLF_FUZZED(abs(-35.48)) : 1.0), (false ? _GLF_FUZZED(abs(-35.48)) : 1.0), (false ? _GLF_FUZZED(abs(-35.48)) : 1.0))), _GLF_IDENTITY((false ? _GLF_FUZZED(abs(-35.48)) : 1.0), 0.0 + ((false ? _GLF_FUZZED(abs(-35.48)) : _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0)))))))), min(1.0, 1.0))) / 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), min(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))), 1.0))) / 1.0), min(_GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)), float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0))), max(_GLF_IDENTITY(max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x2(1.0, 0.0, 1.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0)), min(float(mat4x2(1.0, 0.0, 1.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0)), float(mat4x2(1.0, 0.0, 1.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0))))))), 1.0))), float(_GLF_IDENTITY(float(max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))), min(float(max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))), float(max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))))))), max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))))), 0.0, 1.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, abs(1.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), min(1.0, 1.0))) + _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) - abs(0.0), (true ? (0.0) - abs(0.0) : _GLF_FUZZED(-4020.9283)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)), float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0))), max(_GLF_IDENTITY(max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x2(1.0, 0.0, 1.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0)), min(float(mat4x2(1.0, 0.0, 1.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0)), float(mat4x2(1.0, 0.0, 1.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0))))))), 1.0))), float(_GLF_IDENTITY(float(max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))), min(float(max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))), float(max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))))))), max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))))), 0.0, 1.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, abs(1.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), min(1.0, 1.0))) + _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) - abs(0.0), (true ? (0.0) - abs(0.0) : _GLF_FUZZED(-4020.9283))))))) / round(length(normalize(1.0)))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), exp(0.0), 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, exp(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)))), float(mat3(float(mat4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), exp(0.0), 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, exp(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)))), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, 0.0, 0.0, 1.0))))) / 1.0), max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), clamp(min(1.0, 1.0), min(1.0, 1.0), min(1.0, 1.0))))) / 1.0), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0)))))) / 1.0))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 0.0, cos(0.0)))) : _GLF_FUZZED(-8.6))), 1.0))) / 1.0), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 0.0, cos(0.0)))) : _GLF_FUZZED(-8.6))), 1.0))) / 1.0), max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 0.0, cos(0.0)))) : _GLF_FUZZED(-8.6))), 1.0))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 0.0, cos(0.0)))) : _GLF_FUZZED(-8.6))), 1.0))) / 1.0), clamp(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 0.0, cos(0.0)))) : _GLF_FUZZED(-8.6))), 1.0))) / 1.0), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 0.0, cos(0.0)))) : _GLF_FUZZED(-8.6))), 1.0))) / 1.0), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 0.0, cos(0.0)))) : _GLF_FUZZED(-8.6))), 1.0))) / 1.0))))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 0.0, cos(0.0)))) : _GLF_FUZZED(-8.6))), 1.0))) / 1.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), max(_GLF_IDENTITY(min(1.0, 1.0), float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(min(1.0, 1.0), min(min(1.0, 1.0), min(1.0, 1.0))), float(_GLF_IDENTITY(mat4x2(min(1.0, 1.0), sqrt(1.0), log(1.0), 0.0, 0.0, 1.0, 1.0, 0.0), transpose(transpose(mat4x2(min(1.0, 1.0), sqrt(1.0), log(1.0), 0.0, 0.0, 1.0, 1.0, 0.0)))))), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, cos(0.0), _GLF_IDENTITY(abs(0.0), mix(float(_GLF_IDENTITY(abs(0.0), (abs(0.0)) + 0.0)), float(_GLF_FUZZED((+ -9.1))), bool(false))), abs(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, (1.0) * 1.0), 0.0), (_GLF_IDENTITY(mat3x4(min(1.0, 1.0), 1.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, log(1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 1.0))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), abs(1.0), 0.0), (_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, log(1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 1.0))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), abs(1.0), 0.0), (mat3x4(_GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, log(1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 1.0))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), abs(1.0), 0.0)) * mat3(1.0))) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), clamp(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), cos(0.0), abs(0.0), _GLF_IDENTITY(abs(0.0), clamp(abs(0.0), _GLF_IDENTITY(abs(0.0), clamp(abs(0.0), _GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), abs(0.0))), 1.0, 0.0), (mat3x4(min(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-48.95) : _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-8710.3426, (true ? -8710.3426 : _GLF_FUZZED(distance(-7.5, 9.5)))))), float(1.0), bool(true))))), mix(float(_GLF_FUZZED(-2.8)), float(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-34.98)), float(1.0), bool(true))), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-34.98)), float(1.0), bool(true))), mix(float(_GLF_FUZZED(3185.3215)), float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-34.98)), float(1.0), bool(true)))), bool(true))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-34.98)), float(1.0), bool(true))))), _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0))), bool(true)))), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, cos(0.0), abs(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(1.0, max(1.0, 1.0))), 1.0, 1.0, 0.0), _GLF_IDENTITY((mat2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 1.0, 0.0)), ((mat2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 1.0, 0.0))) / mat2(1.0, 1.0, 1.0, 1.0)) - mat2(0.0, 0.0, 0.0, 0.0))))), abs(0.0), 1.0, 0.0)) - mat3x4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)))), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) - mat3x4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat4x3(1.0, sin(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0))), (_GLF_IDENTITY(1.0, float(mat4x3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), sin(0.0), 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(4291.7907)), bool(false))), 1.0, 1.0)), _GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-4.3) : 0.0)), 0.0)))) / _GLF_IDENTITY(1.0, (1.0) / 1.0)), 1.0)), 1.0), max(min(1.0, 1.0), min(1.0, 1.0))))))) / 1.0), (true ? _GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, min(1.0, 1.0))), min((_GLF_IDENTITY(1.0, min(1.0, 1.0))), (_GLF_IDENTITY(1.0, min(1.0, 1.0))))) / 1.0) : _GLF_FUZZED(550.899))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY((false ? _GLF_FUZZED(abs(-35.48)) : 1.0), clamp(_GLF_IDENTITY((false ? _GLF_FUZZED(abs(-35.48)) : 1.0), min((false ? _GLF_FUZZED(abs(-35.48)) : 1.0), (false ? _GLF_FUZZED(abs(-35.48)) : 1.0))), _GLF_IDENTITY((false ? _GLF_FUZZED(abs(-35.48)) : 1.0), clamp((_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(abs(-35.48)) : 1.0), (false ? _GLF_FUZZED(abs(-35.48)) : 1.0), (false ? _GLF_IDENTITY(_GLF_FUZZED(abs(-35.48)), (_GLF_IDENTITY(_GLF_FUZZED(abs(-35.48)), float(_GLF_IDENTITY(vec4(_GLF_FUZZED(abs(-35.48)), 0.0, 0.0, 1.0), max(vec4(_GLF_FUZZED(abs(-35.48)), 0.0, 0.0, 1.0), vec4(_GLF_FUZZED(abs(-35.48)), 0.0, 0.0, 1.0)))))) / abs(1.0)) : 1.0))), _GLF_IDENTITY((false ? _GLF_FUZZED(abs(-35.48)) : 1.0), 0.0 + ((_GLF_IDENTITY(false ? _GLF_FUZZED(abs(-35.48)) : 1.0, min(false ? _GLF_FUZZED(abs(-35.48)) : 1.0, false ? _GLF_FUZZED(abs(-35.48)) : 1.0)))))))), min(1.0, 1.0))) / 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0))) / 1.0), min(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0))), max(_GLF_IDENTITY(max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), 0.0 + (_GLF_IDENTITY(min(1.0, 1.0), (false ? _GLF_FUZZED(-65.77) : min(1.0, 1.0)))))), _GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(float(max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))), min(float(max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))), float(max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))))))), max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))))), 0.0, 1.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, abs(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), max(vec2(1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), vec2(mat3x4(vec2(1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))))))), 1.0, 1.0)), length(0.0), cos(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(determinant(mat2(1.0, 0.0, 0.0, 1.0)), mix(float(determinant(mat2(1.0, 0.0, 0.0, 1.0))), float(_GLF_FUZZED(4514.7079)), bool(false))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, _GLF_IDENTITY(dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)))), _GLF_IDENTITY(dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)))), min(dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)))), dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(determinant(mat2(1.0, 1.0, 0.0, 1.0)), min(determinant(mat2(1.0, 1.0, 0.0, 1.0)), determinant(mat2(1.0, 1.0, 0.0, 1.0))))))))), log(1.0), 0.0), mat4x3(mat4x3(mat4x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), length(0.0), cos(0.0), 0.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, _GLF_IDENTITY(dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), _GLF_IDENTITY(vec3(0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0))), (vec3(0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)))) / vec3(1.0, 1.0, 1.0))), _GLF_IDENTITY(dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)))), min(dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)))), dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0))))))), log(1.0), 0.0))))), (false ? _GLF_FUZZED(9.1) : float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), length(0.0), cos(0.0), 0.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), min(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0))), vec3(0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)))), _GLF_IDENTITY(dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)))), min(dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)))), dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0))))))), log(1.0), 0.0), mat4x3(mat4x3(mat4x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), length(0.0), cos(0.0), 0.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, _GLF_IDENTITY(dot(vec3(0.0, length(vec4(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-7.6))), 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)))), _GLF_IDENTITY(dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)))), min(dot(vec3(0.0, length(vec4(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0)), 1.0), vec3(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)))), dot(vec3(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), determinant(mat2(1.0, 1.0, 0.0, 1.0))))))), log(1.0), 0.0)))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), min(1.0, 1.0))) + _GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))) - abs(0.0), (_GLF_IDENTITY(true ? (0.0) - _GLF_IDENTITY(abs(0.0), mix(float(_GLF_FUZZED((+ -165.149))), float(abs(0.0)), bool(true))) : _GLF_FUZZED(-4020.9283), (true ? (0.0) - _GLF_IDENTITY(abs(0.0), mix(float(_GLF_FUZZED((+ -165.149))), float(abs(0.0)), bool(true))) : _GLF_FUZZED(-4020.9283)) - 0.0)))))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), (false ? _GLF_FUZZED(0.6) : _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(8.3)), bool(false)))))))) / 1.0), max(_GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0, mix(float(_GLF_FUZZED(-573.999)), float((_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0), bool(true)))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0)))))) / 1.0))) : _GLF_FUZZED(49.41))), 1.0))), ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), min(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), clamp(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(clamp(1, 1, 1), clamp(clamp(1, 1, 1), clamp(1, 1, 1), clamp(1, 1, 1))), 0), min(ivec2(_GLF_IDENTITY(clamp(1, 1, 1), clamp(clamp(1, 1, 1), clamp(1, 1, 1), clamp(1, 1, 1))), 0), ivec2(_GLF_IDENTITY(clamp(1, 1, 1), clamp(clamp(1, 1, 1), clamp(1, 1, 1), clamp(1, 1, 1))), 0)))))))), _GLF_IDENTITY(1, clamp(1, 1, 1)))))), _GLF_struct_2(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, false || (true))), ((true)) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))).y, (injectionSwitch.y) - 0.0))), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((true), bool(bvec4((true), false, true, false)))), bool(bool(! (_GLF_IDENTITY((true), bool(bvec4((true), false, true, false)))))))), _GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(bvec3(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3((false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && true, false, true)))) || ((! (_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bvec4(_GLF_IDENTITY((true), (_GLF_IDENTITY((true), true && ((true)))) && true), false, true, _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((true), bool(bvec4(_GLF_IDENTITY((true), ((true)) && true), false, true, false)))), bool(bvec3(! (_GLF_IDENTITY((true), bool(bvec4(_GLF_IDENTITY((true), ((true)) && true), false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))), false)))), true, true)))))))))) || false)), _GLF_IDENTITY(uvec4(1u), (uvec4(1u)) * uvec4(1u, 1u, 1u, 1u)), mat4(1.0), ivec4(1)), mat3x4(1.0), _GLF_struct_3(vec4(1.0), true, mat4x3(_GLF_IDENTITY(1.0, (1.0) + 0.0)), bvec3(true), true)), mat4x3(_GLF_IDENTITY(1.0, determinant(mat4(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(-4794.6991), max(_GLF_FUZZED(-4794.6991), _GLF_FUZZED(-4794.6991))) : 0.0)), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0, 1.0), (mat2(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(vec4(-915.548, -884.260, 3.9, -27.59).q))), 0.0, 0.0)), 0.0, 1.0, 1.0)) - mat2(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), (float(float(0.0))) * 1.0)))), 0.0, 0.0, 0.0)))), 0.0, 1.0, log(1.0), 0.0, 0.0, 0.0)) + (1.0))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))), true && (false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (! (! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 1.0, 0.0, sin(tan(0.0)), 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), (vec2(mat4(injectionSwitch, 1.0, 0.0, sin(tan(0.0)), 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))) * vec2(1.0, 1.0))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id))) - (43755u & 0u)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) | (workgroup_id), ((workgroup_id) | (workgroup_id)) >> 0u))) | (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(min(workgroup_id, workgroup_id), (min(workgroup_id, workgroup_id)) >> 0u)))), clamp(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(min(workgroup_id, workgroup_id), (true ? _GLF_IDENTITY(min(workgroup_id, workgroup_id), (_GLF_IDENTITY(min(workgroup_id, workgroup_id), max(min(workgroup_id, workgroup_id), min(workgroup_id, workgroup_id)))) | 0u) : _GLF_FUZZED(184304u)))))), _GLF_IDENTITY(workgroup_id, (workgroup_id) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (6u)))), (uint(_GLF_IDENTITY(6u, ~ (~ (6u))))) - 0u), uint(6u))))) * (workgroup_id)), min(workgroup_id, workgroup_id)))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), (workgroup_id) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u), _GLF_IDENTITY(min(workgroup_id, workgroup_id), (min(workgroup_id, workgroup_id)) ^ 0u)))))))), (_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id))) - (_GLF_IDENTITY(43755u & 0u, _GLF_IDENTITY((true ? 43755u & 0u : _GLF_FUZZED(subgroup_id)), min(_GLF_IDENTITY((true ? 43755u & 0u : _GLF_FUZZED(subgroup_id)), ((true ? 43755u & 0u : _GLF_FUZZED(subgroup_id))) * 1u), (true ? 43755u & 0u : _GLF_FUZZED(subgroup_id))))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)), min(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)), _GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id))))) / 1u)) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) * 1u), min(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), workgroup_id)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)))), min(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)))), _GLF_IDENTITY(workgroup_id, (workgroup_id) | (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)))))), _GLF_IDENTITY(workgroup_id, (workgroup_id) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), min(workgroup_id, workgroup_id)))), _GLF_IDENTITY(workgroup_id, (workgroup_id) | (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(min(workgroup_id, workgroup_id), (min(workgroup_id, _GLF_IDENTITY(workgroup_id, 0u | (workgroup_id)))) ^ 0u))))))))) >> 0u);
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && ((false))), bool(bvec2(! (false), true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_struct_replacement_5._f0._f2.subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 1.0))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), false || (_GLF_IDENTITY(injectionSwitch.x, 0.0 + _GLF_IDENTITY((injectionSwitch.x), 1.0 * ((injectionSwitch.x)))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) / 1.0), float(vec2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 0.0)))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 1.0))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / 1.0, ((injectionSwitch.y) / 1.0) * 1.0)), false || (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), min((injectionSwitch.y), (injectionSwitch.y))) / 1.0), float(vec2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 0.0)))))))), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) + _GLF_IDENTITY(dot(vec3(1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0), vec3(0.0, 0.0, 1.0)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 1.0))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), false || (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), mix(float(_GLF_FUZZED(-3.2)), float((injectionSwitch.y)), bool(true))) / 1.0), float(vec2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 0.0)))))))), true)))))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 atomicStore(write_val, uint(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), _GLF_IDENTITY(4, int(int(_GLF_IDENTITY(4, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(4, 1, 1, 0), (ivec4(4, 1, 1, 0)) | _GLF_IDENTITY((ivec4(4, 1, 1, 0)), (_GLF_IDENTITY((ivec4(4, 1, 1, 0)), ivec4(0, 0, 0, 0) ^ ((ivec4(4, 1, 1, 0))))) ^ ivec4(0, 0, 0, 0))), _GLF_IDENTITY(ivec4(0, 0, 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(3001) : _GLF_IDENTITY(0, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((0), ((0)) + 0), (~ (0)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))), ((~ (0))) | _GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(int(0)))) | (0 << _GLF_IDENTITY(int(4), int(4))))))))) | (ivec4(4, 1, 1, 0)), clamp(ivec4(0, 0, 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(3001) : _GLF_IDENTITY(0, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((0), ((0)) + 0), (~ (0)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))), ((~ (0))) | _GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(int(0)))) | (0 << _GLF_IDENTITY(int(4), int(4))))))))) | (ivec4(4, 1, 1, 0)), ivec4(0, 0, 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(3001) : _GLF_IDENTITY(0, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((0), ((0)) + 0), (~ (0)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))), ((~ (0))) | _GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(int(0)))) | (0 << _GLF_IDENTITY(int(4), int(4))))))))) | (ivec4(4, 1, 1, 0)), ivec4(0, 0, 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(3001) : _GLF_IDENTITY(0, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((0), ((0)) + 0), (~ (0)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))), ((~ (0))) | _GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(int(0)))) | (0 << _GLF_IDENTITY(int(4), int(4))))))))) | (ivec4(4, 1, 1, 0)))))))))), 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ((false)) || _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (_GLF_IDENTITY(false, ! (! (false))))))), ! (! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ((false)) || _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), ! (! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))))), (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ((false)) || _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), (! (! (_GLF_IDENTITY(false, ! (! (false)))))) || false)))))))) || false)))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ((false)) || _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (_GLF_IDENTITY(false, ! (! (false))))))), ! (! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ((false)) || _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), ! (! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))))), (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ((false)) || _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), (! (! (_GLF_IDENTITY(false, ! (! (false)))))) || false)))))))) || false))))))))))) || false)))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint read_val = atomicLoad(write_val, 4, 64, 0);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)), bool(bvec3(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)), false, false))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 buf[virtual_gid] = uint(subgroupAllEqual(read_val));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
