#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), _GLF_IDENTITY(bool(bool(! (! (! (false))))), true && (bool(bool(! (! (! (false)))))))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (false))))), _GLF_IDENTITY(bool(bool(! (! (! (false))))), true && _GLF_IDENTITY((bool(bool(! (! (! (false)))))), ! (! ((bool(bool(! (! (! (false))))))))))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (! (false)) || false)) && true), _GLF_IDENTITY(! (! (! (false))), _GLF_IDENTITY(bool(bool(! (! (! (false))))), _GLF_IDENTITY(true && (bool(bool(! (! (! (false)))))), (true && (bool(bool(! (! (! (false))))))) && true))))))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), true && (! (false))))))), true, false)))), (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), _GLF_IDENTITY(bool(bool(! (! (! (false))))), true && (bool(bool(! (! (! (false)))))))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (false))))), _GLF_IDENTITY(bool(bool(! (! (! (false))))), true && _GLF_IDENTITY((bool(bool(! (! (! (false)))))), ! (! ((bool(bool(! (! (! (false))))))))))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (! (false)) || false)) && true), _GLF_IDENTITY(! (! (! (false))), _GLF_IDENTITY(bool(bool(! (! (! (false))))), _GLF_IDENTITY(true && (bool(bool(! (! (! (false)))))), (true && (bool(bool(! (! (! (false))))))) && true))))))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), true && (! (false))))))), true, false)))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), _GLF_IDENTITY(bool(bool(! (! (! (false))))), true && (bool(bool(! (! (! (false)))))))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (false))))), _GLF_IDENTITY(bool(bool(! (! (! (false))))), true && _GLF_IDENTITY((bool(bool(! (! (! (false)))))), ! (! ((bool(bool(! (! (! (false))))))))))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (! (false)) || false)) && true), _GLF_IDENTITY(! (! (! (false))), _GLF_IDENTITY(bool(bool(! (! (! (false))))), _GLF_IDENTITY(true && (bool(bool(! (! (! (false)))))), (true && (bool(bool(! (! (! (false))))))) && true))))))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), true && (! (false))))))), true, false)))), (injectionSwitch.x > injectionSwitch.y))), true, false))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), (bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))) || false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false), true && (_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false)))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false)))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) && true)) || _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false)), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false))))))))), (bool(_GLF_DEAD(false))) || false)))), ! (_GLF_IDENTITY(! ((! ((_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false))))))))), (bool(_GLF_DEAD(false))) || false))))), bool(bvec4(! ((! ((_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false))))))))), (bool(_GLF_DEAD(false))) || false))))), true, true, true))))))))) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), tan(0.0)))).y, false || (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y)))), _GLF_IDENTITY(false || (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(false || (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))))), ! (_GLF_IDENTITY(! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec3(false || (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (! (! ((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))))) && true))), true, false)))) || false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), (! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))) || false), true)), bool(_GLF_IDENTITY(bvec3(bool(bvec2(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, true))))))), _GLF_IDENTITY((! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false, bool(bvec4((! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))) || false, false, false, true)))), true)), _GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false), (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), ! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))), true), bvec3(bvec3(bvec3(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), min(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch))))).x > injectionSwitch.y))))), (! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-2.0))) > injectionSwitch.y)))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), min(vec2(vec2(injectionSwitch)), vec2(vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], float(_GLF_IDENTITY(vec3((injectionSwitch)[1], 1.0, 0.0), mix(vec3((vec3((injectionSwitch)[1], 1.0, 0.0))[0], (vec3((injectionSwitch)[1], 1.0, 0.0))[1], (vec3((injectionSwitch)[1], 1.0, 0.0))[2]), vec3(_GLF_FUZZED(-4533.6235), _GLF_FUZZED(-5787.6195), _GLF_FUZZED(-5.0)), bvec3(false, false, false)))))), vec2(_GLF_FUZZED((9355.6151 / 8.8)), _GLF_FUZZED(8.9)), bvec2(false, false)))))))).x > injectionSwitch.y))))), (! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false), true && (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), min(vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) + vec2(0.0, 0.0))), vec2(vec2(injectionSwitch))))), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), min(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), min(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch))))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), min(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch)))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), min(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch))))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), min(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch)))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec2(injectionSwitch)), min(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch)))), max(_GLF_IDENTITY(vec2(vec2(injectionSwitch)), min(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch)))), _GLF_IDENTITY(vec2(vec2(injectionSwitch)), min(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch))))))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), min(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch)))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))) + vec2(0.0, 0.0))) * vec2(1.0, 1.0)))).x > injectionSwitch.y))))), (! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true))))))))), ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true)))))))))) || false), bool(bvec4(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true))))))))), ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true)))))))))) || false), true && (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true))))))))), ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true)))))))))) || false))), _GLF_IDENTITY(false, bool(bvec2(false, false))), false, true)))))))) || false)))) && true), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, tan(0.0)))).y, false || (injectionSwitch.x > injectionSwitch.y))), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, tan(0.0)))).y, false || (injectionSwitch.x > injectionSwitch.y))), false))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(fract(sqrt(vec2(-4.5, -36.41)))))).x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))) / vec2(1.0, 1.0))).y)))), _GLF_IDENTITY(false || (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))), (_GLF_IDENTITY(false || (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y)))))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec3(false || (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (_GLF_IDENTITY(! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false)))))), true, false)))) || false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), _GLF_IDENTITY(true, bool(bvec2(true, true))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, true))))))), _GLF_IDENTITY((! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false, bool(bvec4((! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))) || false, false, false, true)))), true)), true && (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, true))))))), _GLF_IDENTITY((! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false, bool(bvec4((! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))) || false, false, false, true)))), true)), (bool(bvec2(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, true))))))), _GLF_IDENTITY((! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false, bool(bvec4((! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))) || false, false, false, true)))), true))) || false))), _GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), true), bvec3(bvec3(bvec3(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), min(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch))))).x > injectionSwitch.y))))), (! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), min(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch))))).x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), min(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch))))).x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY((! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (! ((! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) || _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, false))))))))), true && (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), min(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch))))), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), min(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), min(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch))))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), min(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch)))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(min(mix(injectionSwitch, injectionSwitch, -5.5), vec2(2.2, 1.5))) : injectionSwitch)), _GLF_IDENTITY(vec2(vec2(injectionSwitch)), min(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch))))), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), min(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), min(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch))))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), min(_GLF_IDENTITY(vec2(vec2(injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : vec2(vec2(injectionSwitch)))), vec2(vec2(injectionSwitch)))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))).x > injectionSwitch.y) && true)))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true)))) && true), bool(bool(! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0))) > injectionSwitch.y)))) || false)))), (! (injectionSwitch.x > injectionSwitch.y)) && true))))))))), (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((! (injectionSwitch.x > injectionSwitch.y))) || false) && true))))))))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((! (injectionSwitch.x > injectionSwitch.y))) || false) && true))))))))))))) || false)))))) || false)))) && true), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)).x;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4.9)), float(injectionSwitch.y), bool(true)))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(abs(0.0), 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(abs(0.0), 1.0, 0.0))), round(length(normalize(sqrt(1.0)))), 0.0, 0.0, 0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-22.13), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[_GLF_IDENTITY(1, ~ (~ (1)))], _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-4.9)), bool(false)), float(_GLF_IDENTITY(mat3x2(mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-4.9)), bool(false)), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))), _GLF_IDENTITY(mat3x2(mat3x4(mat3x2(mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-4.9)), bool(false)), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))))), transpose(transpose(mat3x2(mat3x4(mat3x2(mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-4.9)), bool(false)), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))))))))))))))), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-8562.4753), max(_GLF_IDENTITY(_GLF_FUZZED(-8562.4753), max(_GLF_FUZZED(-8562.4753), _GLF_FUZZED(-8562.4753))), _GLF_IDENTITY(_GLF_FUZZED(-8562.4753), 0.0 + (_GLF_FUZZED(-8562.4753)))))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-22.13), _GLF_IDENTITY((injectionSwitch)[1], min((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))))[1], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-4.9)), _GLF_IDENTITY(bool(false), (bool(false)) && true)))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-8562.4753)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)))), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-22.13), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-4.9)), bool(false))), min(_GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-4.9)), bool(false))), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-4.9)), bool(false)))))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-8562.4753)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)))), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-22.13), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-4.9)), bool(false))), min(_GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-4.9)), bool(false))), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-4.9)), bool(false)))))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-8562.4753)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)))), false, false), bvec3(bvec3(bvec3((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-22.13), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-4.9)), bool(false))), min(_GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-4.9)), bool(false))), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-4.9)), bool(false)))))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-8562.4753)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)))), false, false))))))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-22.13), _GLF_IDENTITY((injectionSwitch)[1], min((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))))[1], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-4.9)), _GLF_IDENTITY(bool(false), (bool(false)) && true)))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-8562.4753)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)))), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-22.13), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-4.9)), bool(false))), min(_GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-4.9)), bool(false))), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-4.9)), bool(false)))))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-8562.4753)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)))), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-22.13), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-4.9)), bool(false))), min(_GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-4.9)), bool(false))), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-4.9)), bool(false)))))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-8562.4753)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)))), false, false), bvec3(bvec3(bvec3((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-22.13), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-4.9)), bool(false))), min(_GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-4.9)), bool(false))), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-4.9)), bool(false)))))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-8562.4753)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)))), false, false)))))))))))), ! (! (! (bool(_GLF_IDENTITY(bvec3((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-22.13), _GLF_IDENTITY((injectionSwitch)[1], min((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))))[1], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-4.9)), _GLF_IDENTITY(bool(false), (bool(false)) && true)))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-8562.4753)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)))), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-22.13), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-4.9)), bool(false))), min(_GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-4.9)), bool(false))), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-4.9)), bool(false)))))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-8562.4753)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)))), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-22.13), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-4.9)), bool(false))), min(_GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-4.9)), bool(false))), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-4.9)), bool(false)))))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-8562.4753)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)))), false, false), bvec3(bvec3(bvec3((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-22.13), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-4.9)), bool(false))), min(_GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-4.9)), bool(false))), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-4.9)), bool(false)))))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-8562.4753)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)))), false, false)))))))))))))))))), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0))) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-22.13), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-4.9)), bool(false)))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-8562.4753)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)))), ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0))) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-22.13), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-4.9)), bool(false)))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-8562.4753)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y))))) && true), bool(_GLF_IDENTITY(bvec3((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-22.13), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-4.9)), bool(false)))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-8562.4753)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)))), false, false), bvec3(bvec3(bvec3((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-22.13), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-4.9)), bool(false)))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-8562.4753)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)))), false, false))))))), false || (! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-22.13), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0))[1]), float(_GLF_FUZZED(-4.9)), bool(false)))))), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-8562.4753, clamp(-8562.4753, -8562.4753, -8562.4753)))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))).y)))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-22.13), _GLF_IDENTITY((injectionSwitch)[1], min(_GLF_IDENTITY((injectionSwitch)[1], (true ? _GLF_IDENTITY((injectionSwitch)[1], 0.0 + ((injectionSwitch)[1])) : _GLF_FUZZED(0.0))), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-4.9)), bool(false)))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-8562.4753)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))).y, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-27.54), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-7.2)), bvec2(true, false))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-22.13), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED(_GLF_IDENTITY(55382, clamp(55382, 55382, 55382)))))], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-4.9)), bool(false)))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-8562.4753)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y) || false))))), false, false), bvec3(bvec4(bvec3((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-22.13), _GLF_IDENTITY((injectionSwitch)[1], min(_GLF_IDENTITY((injectionSwitch)[1], (true ? _GLF_IDENTITY((injectionSwitch)[1], 0.0 + ((injectionSwitch)[1])) : _GLF_FUZZED(0.0))), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-4.9)), bool(false)))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-8562.4753)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))).y, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-27.54), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-7.2)), bvec2(true, false))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-22.13), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED(_GLF_IDENTITY(55382, clamp(55382, 55382, 55382)))))], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-4.9)), bool(false)))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-8562.4753)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y) || false))))), false, false), false))), bvec3(bvec3(bvec3((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-22.13), float(_GLF_IDENTITY(mat4x3(_GLF_FUZZED(-22.13), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), cos(0.0), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 0.0, 1.0, 0.0, log(1.0), 1.0), transpose(transpose(mat4x3(_GLF_FUZZED(-22.13), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), cos(0.0), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 0.0, 1.0, 0.0, log(1.0), 1.0)))))), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-4.9)), bool(false)))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-8562.4753)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))).y))))).y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-22.13), float(_GLF_IDENTITY(mat4x3(_GLF_FUZZED(-22.13), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), cos(0.0), _GLF_IDENTITY(1.0, 1.0 * (1.0)), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 0.0, 1.0, 0.0, log(1.0), 1.0), transpose(transpose(mat4x3(_GLF_FUZZED(-22.13), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), cos(0.0), 1.0, round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), (normalize(vec2(1.0, 1.0))) * mat2(1.0)))), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(922.115)), bool(false))), 0.0, log(1.0), 1.0)))))), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-4.9)), bool(false)))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-8562.4753)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))).y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))).y, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0))), 0.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0, 0.0, 1.0), (mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))).y, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0))), 0.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0, 0.0, 1.0)) * mat3(1.0))), float(mat3x2(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))).y, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0))), 0.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0, 0.0, 1.0), (mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))).y, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0))), 0.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0, 0.0, 1.0)) * mat3(1.0))), 1.0, 0.0, 0.0, 0.0, exp(0.0)))))))))).y)))) || false)), false, false))))))))))))), false))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1]))))), mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-6.4), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(-6.4), min(_GLF_FUZZED(-6.4), _GLF_FUZZED(-6.4))))), (vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), mix(vec2(_GLF_FUZZED(-8986.0916), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1]), vec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[0], _GLF_FUZZED(-82.26)), bvec2(true, false)))) - vec2(0.0, 0.0))))[1]), vec2((vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[0], _GLF_FUZZED(-8.1)), bvec2(true, false))))))).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false)))))))))), _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), _GLF_IDENTITY((bool(true)), false || (_GLF_IDENTITY((bool(true)), true && (_GLF_IDENTITY((bool(true)), ! (! ((bool(_GLF_IDENTITY(true, true && (true))))))))))) && _GLF_IDENTITY(true, true && (true)))), ! _GLF_IDENTITY((! _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY((bool(true)), false || _GLF_IDENTITY((_GLF_IDENTITY((bool(true)), ! (! (_GLF_IDENTITY((bool(true)), ((bool(true))) && true))))), (_GLF_IDENTITY((_GLF_IDENTITY((bool(true)), ! (! (_GLF_IDENTITY((bool(true)), ((bool(true))) && true))))), bool(bvec4((_GLF_IDENTITY((bool(true)), ! (! (_GLF_IDENTITY((bool(true)), ((bool(true))) && true))))), false, true, true)))) || false)) && true))), ((bool(_GLF_IDENTITY(bool(true), _GLF_IDENTITY((bool(true)), false || ((bool(true)))) && true)))) && true)), bool(_GLF_IDENTITY(bool((! _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY((bool(true)), false || _GLF_IDENTITY((_GLF_IDENTITY((bool(true)), ! (! (_GLF_IDENTITY((bool(true)), ((bool(true))) && true))))), (_GLF_IDENTITY((_GLF_IDENTITY((bool(true)), ! (! (_GLF_IDENTITY((bool(true)), ((bool(true))) && true))))), bool(bvec4((_GLF_IDENTITY((bool(true)), ! (! (_GLF_IDENTITY((bool(true)), ((bool(true))) && true))))), false, true, true)))) || false)) && true))), ((bool(_GLF_IDENTITY(bool(true), _GLF_IDENTITY((bool(true)), false || ((bool(true)))) && true)))) && true))), (bool((! _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY((bool(true)), false || _GLF_IDENTITY((_GLF_IDENTITY((bool(true)), ! (! (_GLF_IDENTITY((bool(true)), ((bool(true))) && true))))), (_GLF_IDENTITY((_GLF_IDENTITY((bool(true)), ! (! (_GLF_IDENTITY((bool(true)), ((bool(true))) && true))))), bool(bvec4((_GLF_IDENTITY((bool(true)), ! (! (_GLF_IDENTITY((bool(true)), ((bool(true))) && true))))), false, true, true)))) || false)) && true))), ((bool(_GLF_IDENTITY(bool(true), _GLF_IDENTITY((bool(true)), false || ((bool(true)))) && true)))) && true)))) && true)))), false || _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec2(bool(true), false))), (_GLF_IDENTITY(bool(true), true && _GLF_IDENTITY((_GLF_IDENTITY(bool(true), (bool(true)) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-674.107)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), true && ((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-674.107)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-674.107)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-674.107)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-674.107)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-674.107)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))) : _GLF_FUZZED(-54.22))))))) && ((_GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), (bool(true)) && true)) || false)))))) && true))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec2(bool(true), false))), (_GLF_IDENTITY(bool(true), true && _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), (bool(true)) || false)), _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-674.107)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-674.107)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))), bool(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-674.107)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-674.107)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))), true && (_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-674.107)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-674.107)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))), ! (! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-674.107)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-674.107)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))))))), true, false))) && ((_GLF_IDENTITY(bool(true), (bool(true)) || false)))))) && true))), ! (! ((bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec2(bool(true), false))), (_GLF_IDENTITY(bool(true), true && _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), (bool(true)) || false)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-674.107)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) + _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-674.107)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))) && ((_GLF_IDENTITY(bool(true), (bool(true)) || false)))))) && true)))))), true)), (bool(bvec2(_GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec2(bool(true), false))), (_GLF_IDENTITY(bool(true), true && _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), (bool(true)) || false)), _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-674.107)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-674.107)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))), bool(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-674.107)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-674.107)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))), true && (_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-674.107)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-674.107)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))), ! (! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-674.107)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-674.107)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))))))), true, false))) && ((_GLF_IDENTITY(bool(true), (bool(true)) || false)))))) && true))), ! (! ((bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec2(bool(true), false))), (_GLF_IDENTITY(bool(true), true && _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), (bool(true)) || false)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-674.107)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) + _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-674.107)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))) && ((_GLF_IDENTITY(bool(true), (bool(true)) || false)))))) && true)))))), true))) && true)))), (injectionSwitch.x < injectionSwitch.y)), true, false))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-46.36), _GLF_FUZZED(-637.121)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y))))
  return;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(max(subgroup_id, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) | (subgroup_id), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) | (subgroup_id), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) | (subgroup_id), ((_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) | (subgroup_id)) + 0u)) / 1u), (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) | (subgroup_id), (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) | (subgroup_id))))), ~ (~ (_GLF_IDENTITY(max(subgroup_id, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) | (subgroup_id), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) | (subgroup_id), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) | (subgroup_id), ((_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) | (subgroup_id)) + 0u)) / 1u), (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) | (subgroup_id), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) | (subgroup_id), ((_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) | (subgroup_id)) | 0u))))), (max(subgroup_id, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)), ((_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u))) >> 0u) | _GLF_IDENTITY((subgroup_id), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(write_val) : (subgroup_id))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), min(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), 0u + (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)))))))) | (subgroup_id), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) | (subgroup_id), ((_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) | (subgroup_id)) + 0u)) / 1u), (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) | (subgroup_id), (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) | (subgroup_id)))))) >> 0u)))), min(max(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) >> 0u, (true ? _GLF_IDENTITY((subgroup_id) >> 0u, _GLF_IDENTITY(uint(uint((subgroup_id) >> 0u)), uint(uvec3(uint(uint((subgroup_id) >> 0u)), 0u, 0u)))) : _GLF_FUZZED(packUnorm2x16(injectionSwitch)))))) / 1u)) | _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(((subgroup_id)) - 0u, max(((subgroup_id)) - 0u, ((subgroup_id)) - 0u))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(((subgroup_id)) - 0u, max(((subgroup_id)) - 0u, ((subgroup_id)) - 0u))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(((subgroup_id)) - 0u, max(((subgroup_id)) - 0u, ((subgroup_id)) - 0u))), clamp(_GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(((subgroup_id)) - 0u, max(((subgroup_id)) - 0u, ((subgroup_id)) - 0u))), _GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(((subgroup_id)) - 0u, max(((subgroup_id)) - 0u, ((subgroup_id)) - 0u))), _GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(((subgroup_id)) - 0u, max(((subgroup_id)) - 0u, ((subgroup_id)) - 0u))))))))))), max(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) | (subgroup_id)))))), 0u), _GLF_IDENTITY((uvec2(subgroup_id, 0u)) | (uvec2(subgroup_id, 0u)), _GLF_IDENTITY(((uvec2(subgroup_id, _GLF_IDENTITY(0u, (0u) ^ 0u))) | (uvec2(subgroup_id, 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY((uvec2(subgroup_id, 0u)) | (uvec2(subgroup_id, 0u)), ~ (~ ((uvec2(subgroup_id, 0u)) | (uvec2(subgroup_id, 0u))))), max(_GLF_IDENTITY(_GLF_IDENTITY((uvec2(subgroup_id, _GLF_IDENTITY(0u, (0u) - (1u ^ 1u)))) | (uvec2(subgroup_id, 0u)), ~ (~ ((uvec2(subgroup_id, 0u)) | (uvec2(subgroup_id, 0u))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((uvec2(subgroup_id, 0u)) | (uvec2(subgroup_id, 0u)), ~ (~ ((uvec2(subgroup_id, 0u)) | (uvec2(subgroup_id, 0u))))), (_GLF_IDENTITY((uvec2(subgroup_id, 0u)) | (uvec2(subgroup_id, 0u)), ~ (~ ((uvec2(subgroup_id, 0u)) | (uvec2(subgroup_id, 0u)))))) | uvec2(0u, 0u)), _GLF_IDENTITY((uvec2(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u), 0u)) | (uvec2(subgroup_id, 0u)), ~ (~ ((uvec2(subgroup_id, 0u)) | (uvec2(subgroup_id, 0u))))), _GLF_IDENTITY((uvec2(subgroup_id, 0u)) | (uvec2(subgroup_id, 0u)), ~ (~ ((uvec2(subgroup_id, 0u)) | (uvec2(subgroup_id, 0u))))))), _GLF_IDENTITY((uvec2(subgroup_id, 0u)) | (uvec2(subgroup_id, 0u)), ~ (~ ((uvec2(subgroup_id, 0u)) | (uvec2(subgroup_id, 0u)))))))), (((uvec2(subgroup_id, _GLF_IDENTITY(0u, (0u) ^ 0u))) | (uvec2(subgroup_id, 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((uvec2(subgroup_id, 0u)) | (uvec2(subgroup_id, 0u)), ~ (~ _GLF_IDENTITY(((uvec2(subgroup_id, 0u)) | (uvec2(subgroup_id, 0u))), uvec2(uvec4(((uvec2(subgroup_id, 0u)) | (uvec2(subgroup_id, 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY((uvec2(subgroup_id, 0u)) | (_GLF_IDENTITY(uvec2(subgroup_id, _GLF_IDENTITY(0u, (0u) | 0u)), (_GLF_IDENTITY(uvec2(subgroup_id, _GLF_IDENTITY(0u, (0u) | 0u)), (uvec2(subgroup_id, _GLF_IDENTITY(0u, (0u) | 0u))) << uvec2(0u, 0u))) / uvec2(1u, 1u))), ~ (~ ((uvec2(subgroup_id, 0u)) | (uvec2(subgroup_id, 0u))))), uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY((uvec2(subgroup_id, 0u)) | (uvec2(subgroup_id, 0u)), ~ (~ ((uvec2(subgroup_id, 0u)) | (uvec2(subgroup_id, 0u))))))) : _GLF_FUZZED(uvec2(55795u, 44511u)))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((uvec2(subgroup_id, 0u)), min((uvec2(subgroup_id, 0u)), _GLF_IDENTITY((uvec2(subgroup_id, 0u)), clamp((uvec2(subgroup_id, 0u)), (uvec2(subgroup_id, 0u)), (uvec2(subgroup_id, 0u)))))) | (uvec2(_GLF_IDENTITY(subgroup_id, uint(uvec3(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), 0u, 0u))), 0u)), ~ (~ ((uvec2(subgroup_id, 0u)) | (uvec2(subgroup_id, 0u))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((uvec2(subgroup_id, _GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, (0u) | (0u)), 0u))))) | (uvec2(subgroup_id, 0u)), ~ (~ ((uvec2(subgroup_id, 0u)) | (uvec2(subgroup_id, 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY((uvec2(subgroup_id, _GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, (0u) | (0u)), 0u))))) | (uvec2(subgroup_id, 0u)), ~ (~ ((uvec2(subgroup_id, 0u)) | (uvec2(subgroup_id, 0u))))), uvec2(0u, 0u) | (_GLF_IDENTITY((uvec2(subgroup_id, _GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, (0u) | (0u)), 0u))))) | (uvec2(subgroup_id, 0u)), ~ (~ ((uvec2(subgroup_id, 0u)) | (uvec2(subgroup_id, 0u)))))))) ^ uvec2(0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY((uvec2(subgroup_id, 0u)), clamp(_GLF_IDENTITY((uvec2(subgroup_id, 0u)), _GLF_IDENTITY(uvec2(0u, 0u) + (_GLF_IDENTITY((uvec2(subgroup_id, 0u)), max((uvec2(subgroup_id, 0u)), (uvec2(subgroup_id, 0u))))), (_GLF_IDENTITY(uvec2(0u, 0u) + (_GLF_IDENTITY((uvec2(subgroup_id, 0u)), max((uvec2(subgroup_id, 0u)), (uvec2(subgroup_id, 0u))))), ~ (~ (uvec2(0u, 0u) + (_GLF_IDENTITY((uvec2(subgroup_id, 0u)), max((uvec2(subgroup_id, 0u)), (uvec2(subgroup_id, 0u))))))))) << uvec2(0u, 0u))), (uvec2(subgroup_id, 0u)), (uvec2(subgroup_id, 0u)))) | (uvec2(subgroup_id, 0u)), ~ (~ ((uvec2(subgroup_id, 0u)) | (uvec2(subgroup_id, 0u))))), _GLF_IDENTITY((uvec2(subgroup_id, 0u)) | (uvec2(subgroup_id, 0u)), ~ (~ ((uvec2(subgroup_id, 0u)) | (_GLF_IDENTITY(uvec2(subgroup_id, 0u), (uvec2(subgroup_id, 0u)) / uvec2(1u, 1u)))))))), _GLF_IDENTITY(_GLF_IDENTITY((uvec2(subgroup_id, 0u)) | (uvec2(subgroup_id, 0u)), ~ (~ ((uvec2(subgroup_id, 0u)) | (uvec2(subgroup_id, _GLF_IDENTITY(0u, max(0u, 0u))))))), uvec2(0u, 0u) | (_GLF_IDENTITY((uvec2(subgroup_id, 0u)) | (uvec2(subgroup_id, 0u)), ~ (~ ((uvec2(subgroup_id, 0u)) | (uvec2(subgroup_id, _GLF_IDENTITY(0u, max(0u, 0u))))))))))))) / uvec2(1u, 1u))))), (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(max(subgroup_id, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) | (subgroup_id), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) | (subgroup_id), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) | (subgroup_id), ((_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) | (subgroup_id)) + 0u)) / 1u), (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) | (subgroup_id), (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) | (subgroup_id))))), ~ (~ (_GLF_IDENTITY(max(subgroup_id, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) | (subgroup_id), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) | (subgroup_id), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) | (subgroup_id), ((_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) | (subgroup_id)) + 0u)) / 1u), (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) | (subgroup_id), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) | (subgroup_id), ((_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) | (subgroup_id)) | 0u))))), (max(subgroup_id, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)), ((_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u))) >> 0u) | _GLF_IDENTITY((subgroup_id), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(write_val) : (subgroup_id))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), min(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), 0u + (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)))))))) | (subgroup_id), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) | (subgroup_id), ((_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) | (subgroup_id)) + 0u)) / 1u), (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) | (subgroup_id), (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) | (subgroup_id)))))) >> 0u)))), min(max(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) >> 0u, (true ? _GLF_IDENTITY((subgroup_id) >> 0u, _GLF_IDENTITY(uint(uint((subgroup_id) >> 0u)), uint(uvec3(uint(uint((subgroup_id) >> 0u)), 0u, 0u)))) : _GLF_FUZZED(packUnorm2x16(injectionSwitch)))))) / 1u)) | _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(((subgroup_id)) - 0u, max(((subgroup_id)) - 0u, ((subgroup_id)) - 0u))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(((subgroup_id)) - 0u, max(((subgroup_id)) - 0u, ((subgroup_id)) - 0u))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(((subgroup_id)) - 0u, max(((subgroup_id)) - 0u, ((subgroup_id)) - 0u))), clamp(_GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(((subgroup_id)) - 0u, max(((subgroup_id)) - 0u, ((subgroup_id)) - 0u))), _GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(((subgroup_id)) - 0u, max(((subgroup_id)) - 0u, ((subgroup_id)) - 0u))), _GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(((subgroup_id)) - 0u, max(((subgroup_id)) - 0u, ((subgroup_id)) - 0u))))))))))), max(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) | (subgroup_id)))))), 0u), _GLF_IDENTITY((uvec2(subgroup_id, 0u)) | (uvec2(subgroup_id, 0u)), _GLF_IDENTITY(((uvec2(subgroup_id, _GLF_IDENTITY(0u, (0u) ^ 0u))) | (uvec2(subgroup_id, 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY((uvec2(subgroup_id, 0u)) | (uvec2(subgroup_id, 0u)), ~ (~ ((uvec2(subgroup_id, 0u)) | (uvec2(subgroup_id, 0u))))), max(_GLF_IDENTITY(_GLF_IDENTITY((uvec2(subgroup_id, _GLF_IDENTITY(0u, (0u) - (1u ^ 1u)))) | (uvec2(subgroup_id, 0u)), ~ (~ ((uvec2(subgroup_id, 0u)) | (uvec2(subgroup_id, 0u))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((uvec2(subgroup_id, 0u)) | (uvec2(subgroup_id, 0u)), ~ (~ ((uvec2(subgroup_id, 0u)) | (uvec2(subgroup_id, 0u))))), (_GLF_IDENTITY((uvec2(subgroup_id, 0u)) | (uvec2(subgroup_id, 0u)), ~ (~ ((uvec2(subgroup_id, 0u)) | (uvec2(subgroup_id, 0u)))))) | uvec2(0u, 0u)), _GLF_IDENTITY((uvec2(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u), 0u)) | (uvec2(subgroup_id, 0u)), ~ (~ ((uvec2(subgroup_id, 0u)) | (uvec2(subgroup_id, 0u))))), _GLF_IDENTITY((uvec2(subgroup_id, 0u)) | (uvec2(subgroup_id, 0u)), ~ (~ ((uvec2(subgroup_id, 0u)) | (uvec2(subgroup_id, 0u))))))), _GLF_IDENTITY((uvec2(subgroup_id, 0u)) | (uvec2(subgroup_id, 0u)), ~ (~ ((uvec2(subgroup_id, 0u)) | (uvec2(subgroup_id, 0u)))))))), (((uvec2(subgroup_id, _GLF_IDENTITY(0u, (0u) ^ 0u))) | (uvec2(subgroup_id, 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((uvec2(subgroup_id, 0u)) | (uvec2(subgroup_id, 0u)), ~ (~ _GLF_IDENTITY(((uvec2(subgroup_id, 0u)) | (uvec2(subgroup_id, 0u))), uvec2(uvec4(((uvec2(subgroup_id, 0u)) | (uvec2(subgroup_id, 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY((uvec2(subgroup_id, 0u)) | (_GLF_IDENTITY(uvec2(subgroup_id, _GLF_IDENTITY(0u, (0u) | 0u)), (_GLF_IDENTITY(uvec2(subgroup_id, _GLF_IDENTITY(0u, (0u) | 0u)), (uvec2(subgroup_id, _GLF_IDENTITY(0u, (0u) | 0u))) << uvec2(0u, 0u))) / uvec2(1u, 1u))), ~ (~ ((uvec2(subgroup_id, 0u)) | (uvec2(subgroup_id, 0u))))), uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY((uvec2(subgroup_id, 0u)) | (uvec2(subgroup_id, 0u)), ~ (~ ((uvec2(subgroup_id, 0u)) | (uvec2(subgroup_id, 0u))))))) : _GLF_FUZZED(uvec2(55795u, 44511u)))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((uvec2(subgroup_id, 0u)), min((uvec2(subgroup_id, 0u)), _GLF_IDENTITY((uvec2(subgroup_id, 0u)), clamp((uvec2(subgroup_id, 0u)), (uvec2(subgroup_id, 0u)), (uvec2(subgroup_id, 0u)))))) | (uvec2(_GLF_IDENTITY(subgroup_id, uint(uvec3(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), 0u, 0u))), 0u)), ~ (~ ((uvec2(subgroup_id, 0u)) | (uvec2(subgroup_id, 0u))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((uvec2(subgroup_id, _GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, (0u) | (0u)), 0u))))) | (uvec2(subgroup_id, 0u)), ~ (~ ((uvec2(subgroup_id, 0u)) | (uvec2(subgroup_id, 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY((uvec2(subgroup_id, _GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, (0u) | (0u)), 0u))))) | (uvec2(subgroup_id, 0u)), ~ (~ ((uvec2(subgroup_id, 0u)) | (uvec2(subgroup_id, 0u))))), uvec2(0u, 0u) | (_GLF_IDENTITY((uvec2(subgroup_id, _GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, (0u) | (0u)), 0u))))) | (uvec2(subgroup_id, 0u)), ~ (~ ((uvec2(subgroup_id, 0u)) | (uvec2(subgroup_id, 0u)))))))) ^ uvec2(0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY((uvec2(subgroup_id, 0u)), clamp(_GLF_IDENTITY((uvec2(subgroup_id, 0u)), _GLF_IDENTITY(uvec2(0u, 0u) + (_GLF_IDENTITY((uvec2(subgroup_id, 0u)), max((uvec2(subgroup_id, 0u)), (uvec2(subgroup_id, 0u))))), (_GLF_IDENTITY(uvec2(0u, 0u) + (_GLF_IDENTITY((uvec2(subgroup_id, 0u)), max((uvec2(subgroup_id, 0u)), (uvec2(subgroup_id, 0u))))), ~ (~ (uvec2(0u, 0u) + (_GLF_IDENTITY((uvec2(subgroup_id, 0u)), max((uvec2(subgroup_id, 0u)), (uvec2(subgroup_id, 0u))))))))) << uvec2(0u, 0u))), (uvec2(subgroup_id, 0u)), (uvec2(subgroup_id, 0u)))) | (uvec2(subgroup_id, 0u)), ~ (~ ((uvec2(subgroup_id, 0u)) | (uvec2(subgroup_id, 0u))))), _GLF_IDENTITY((uvec2(subgroup_id, 0u)) | (uvec2(subgroup_id, 0u)), ~ (~ ((uvec2(subgroup_id, 0u)) | (_GLF_IDENTITY(uvec2(subgroup_id, 0u), (uvec2(subgroup_id, 0u)) / uvec2(1u, 1u)))))))), _GLF_IDENTITY(_GLF_IDENTITY((uvec2(subgroup_id, 0u)) | (uvec2(subgroup_id, 0u)), ~ (~ ((uvec2(subgroup_id, 0u)) | (uvec2(subgroup_id, _GLF_IDENTITY(0u, max(0u, 0u))))))), uvec2(0u, 0u) | (_GLF_IDENTITY((uvec2(subgroup_id, 0u)) | (uvec2(subgroup_id, 0u)), ~ (~ ((uvec2(subgroup_id, 0u)) | (uvec2(subgroup_id, _GLF_IDENTITY(0u, max(0u, 0u))))))))))))) / uvec2(1u, 1u)))))) / 1u)) * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 atomicStore(write_val, uint(virtual_gid), _GLF_IDENTITY(4, (4) ^ (_GLF_IDENTITY(0, (0) << 0) << _GLF_IDENTITY(int(0), int(0)))), 64, 0);
 uint read_val = atomicLoad(write_val, 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))), true && (_GLF_IDENTITY(! (false), (! (false)) && true)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 buf[virtual_gid] = _GLF_IDENTITY(uint(subgroupAllEqual(read_val)), _GLF_IDENTITY((_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (uint(subgroupAllEqual(read_val))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), ((~ (_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (uint(subgroupAllEqual(read_val))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) << (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) | 0u)), uint(5u)))), (~ _GLF_IDENTITY((~ (_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (uint(subgroupAllEqual(read_val))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), ((~ _GLF_IDENTITY((_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (uint(subgroupAllEqual(read_val))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 0u | ((_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (uint(subgroupAllEqual(read_val))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) << (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) | 0u)), uint(5u))))) / 1u))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (uint(subgroupAllEqual(read_val))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), ((_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (uint(subgroupAllEqual(read_val))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 0u | _GLF_IDENTITY((~ (_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (uint(subgroupAllEqual(read_val))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), ((~ (_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (uint(subgroupAllEqual(read_val))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) * 1u)))) << (_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))), uint(5u)), (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(5u), uint(5u)), (0u << _GLF_IDENTITY(uint(5u), uint(5u))) / 1u)) >> _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) | (uint(6u))))), (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) | (uint(6u))))), min((0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) | (uint(6u))))), (0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) | (uint(6u)))))))) - 0u))))), (_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (uint(subgroupAllEqual(read_val))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), ((_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (uint(subgroupAllEqual(read_val))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 0u | _GLF_IDENTITY((~ (_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (uint(subgroupAllEqual(read_val))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), ((~ (_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (uint(subgroupAllEqual(read_val))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) * 1u)))) << (_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))), uint(5u)), (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(5u), uint(5u)), (0u << _GLF_IDENTITY(uint(5u), uint(5u))) / 1u)) >> _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) | (uint(6u))))), (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) | (uint(6u))))), min((0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) | (uint(6u))))), (0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) | (uint(6u)))))))) - 0u)))))) ^ 0u)), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (uint(subgroupAllEqual(read_val))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (uint(subgroupAllEqual(read_val))) << 0u)) << 0u))), (uint(subgroupAllEqual(read_val))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) << (0u << _GLF_IDENTITY(uint(5u), uint(5u))))), (_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), ~ _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (uint(subgroupAllEqual(read_val))) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(float(mat3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0)), round(length(normalize(vec2(1.0, 1.0)))), 1.0), max(vec3(float(mat3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0)), round(length(normalize(vec2(1.0, 1.0)))), 1.0), vec3(float(mat3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0)), round(length(normalize(vec2(1.0, 1.0)))), 1.0)))), max(float(_GLF_IDENTITY(vec3(float(mat3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0)), round(length(normalize(vec2(1.0, 1.0)))), 1.0), max(vec3(float(mat3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0)), round(length(normalize(vec2(1.0, 1.0)))), 1.0), vec3(float(mat3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0)), round(length(normalize(vec2(1.0, 1.0)))), 1.0)))), float(_GLF_IDENTITY(vec3(float(mat3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0)), round(length(normalize(vec2(1.0, 1.0)))), 1.0), max(vec3(float(mat3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0)), round(length(normalize(vec2(1.0, 1.0)))), 1.0), vec3(float(mat3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0)), round(length(normalize(vec2(1.0, 1.0)))), 1.0)))))))), injectionSwitch.x)))), (true ? (_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (uint(subgroupAllEqual(read_val))) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(float(mat3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0)), round(length(normalize(vec2(1.0, 1.0)))), 1.0), max(vec3(float(mat3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0)), round(length(normalize(vec2(1.0, 1.0)))), 1.0), vec3(float(mat3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0)), round(length(normalize(vec2(1.0, 1.0)))), 1.0)))), max(float(_GLF_IDENTITY(vec3(float(mat3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0)), round(length(normalize(vec2(1.0, 1.0)))), 1.0), max(vec3(float(mat3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0)), round(length(normalize(vec2(1.0, 1.0)))), 1.0), vec3(float(mat3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0)), round(length(normalize(vec2(1.0, 1.0)))), 1.0)))), float(_GLF_IDENTITY(vec3(float(mat3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0)), round(length(normalize(vec2(1.0, 1.0)))), 1.0), max(vec3(float(mat3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0)), round(length(normalize(vec2(1.0, 1.0)))), 1.0), vec3(float(mat3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0)), round(length(normalize(vec2(1.0, 1.0)))), 1.0)))))))), injectionSwitch.x)))) : _GLF_FUZZED(read_val)))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (uint(subgroupAllEqual(read_val))) << 0u)) << 0u))), (uint(subgroupAllEqual(read_val))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) << (0u << _GLF_IDENTITY(uint(5u), uint(5u)))))) / ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (uint(subgroupAllEqual(read_val))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (uint(subgroupAllEqual(read_val))) << 0u)) << 0u))), (uint(subgroupAllEqual(read_val))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) << (0u << _GLF_IDENTITY(uint(5u), uint(5u))))), (_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), ~ _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (uint(subgroupAllEqual(read_val))) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(float(mat3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0)), round(length(normalize(vec2(1.0, 1.0)))), 1.0), max(vec3(float(mat3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0)), round(length(normalize(vec2(1.0, 1.0)))), 1.0), vec3(float(mat3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0)), round(length(normalize(vec2(1.0, 1.0)))), 1.0)))), max(float(_GLF_IDENTITY(vec3(float(mat3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0)), round(length(normalize(vec2(1.0, 1.0)))), 1.0), max(vec3(float(mat3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0)), round(length(normalize(vec2(1.0, 1.0)))), 1.0), vec3(float(mat3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0)), round(length(normalize(vec2(1.0, 1.0)))), 1.0)))), float(_GLF_IDENTITY(vec3(float(mat3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0)), round(length(normalize(vec2(1.0, 1.0)))), 1.0), max(vec3(float(mat3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0)), round(length(normalize(vec2(1.0, 1.0)))), 1.0), vec3(float(mat3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0)), round(length(normalize(vec2(1.0, 1.0)))), 1.0)))))))), injectionSwitch.x)))), (true ? (_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (uint(subgroupAllEqual(read_val))) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(float(mat3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0)), round(length(normalize(vec2(1.0, 1.0)))), 1.0), max(vec3(float(mat3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0)), round(length(normalize(vec2(1.0, 1.0)))), 1.0), vec3(float(mat3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0)), round(length(normalize(vec2(1.0, 1.0)))), 1.0)))), max(float(_GLF_IDENTITY(vec3(float(mat3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0)), round(length(normalize(vec2(1.0, 1.0)))), 1.0), max(vec3(float(mat3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0)), round(length(normalize(vec2(1.0, 1.0)))), 1.0), vec3(float(mat3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0)), round(length(normalize(vec2(1.0, 1.0)))), 1.0)))), float(_GLF_IDENTITY(vec3(float(mat3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0)), round(length(normalize(vec2(1.0, 1.0)))), 1.0), max(vec3(float(mat3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0)), round(length(normalize(vec2(1.0, 1.0)))), 1.0), vec3(float(mat3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0)), round(length(normalize(vec2(1.0, 1.0)))), 1.0)))))))), injectionSwitch.x)))) : _GLF_FUZZED(read_val)))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (uint(subgroupAllEqual(read_val))) << 0u)) << 0u))), (uint(subgroupAllEqual(read_val))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) << (0u << _GLF_IDENTITY(uint(5u), uint(5u)))))) / ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (uint(subgroupAllEqual(read_val))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (uint(subgroupAllEqual(read_val))) << 0u)) << 0u))), (uint(subgroupAllEqual(read_val))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) << (0u << _GLF_IDENTITY(uint(5u), uint(5u))))), (_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), ~ _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (uint(subgroupAllEqual(read_val))) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(float(mat3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0)), round(length(normalize(vec2(1.0, 1.0)))), 1.0), max(vec3(float(mat3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0)), round(length(normalize(vec2(1.0, 1.0)))), 1.0), vec3(float(mat3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0)), round(length(normalize(vec2(1.0, 1.0)))), 1.0)))), max(float(_GLF_IDENTITY(vec3(float(mat3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0)), round(length(normalize(vec2(1.0, 1.0)))), 1.0), max(vec3(float(mat3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0)), round(length(normalize(vec2(1.0, 1.0)))), 1.0), vec3(float(mat3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0)), round(length(normalize(vec2(1.0, 1.0)))), 1.0)))), float(_GLF_IDENTITY(vec3(float(mat3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0)), round(length(normalize(vec2(1.0, 1.0)))), 1.0), max(vec3(float(mat3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0)), round(length(normalize(vec2(1.0, 1.0)))), 1.0), vec3(float(mat3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0)), round(length(normalize(vec2(1.0, 1.0)))), 1.0)))))))), injectionSwitch.x)))), (true ? (_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (uint(subgroupAllEqual(read_val))) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(float(mat3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0)), round(length(normalize(vec2(1.0, 1.0)))), 1.0), max(vec3(float(mat3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0)), round(length(normalize(vec2(1.0, 1.0)))), 1.0), vec3(float(mat3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0)), round(length(normalize(vec2(1.0, 1.0)))), 1.0)))), max(float(_GLF_IDENTITY(vec3(float(mat3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0)), round(length(normalize(vec2(1.0, 1.0)))), 1.0), max(vec3(float(mat3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0)), round(length(normalize(vec2(1.0, 1.0)))), 1.0), vec3(float(mat3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0)), round(length(normalize(vec2(1.0, 1.0)))), 1.0)))), float(_GLF_IDENTITY(vec3(float(mat3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0)), round(length(normalize(vec2(1.0, 1.0)))), 1.0), max(vec3(float(mat3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0)), round(length(normalize(vec2(1.0, 1.0)))), 1.0), vec3(float(mat3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0)), round(length(normalize(vec2(1.0, 1.0)))), 1.0)))))))), injectionSwitch.x)))) : _GLF_FUZZED(read_val)))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (uint(subgroupAllEqual(read_val))) << 0u)) << 0u))), (uint(subgroupAllEqual(read_val))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) << (0u << _GLF_IDENTITY(uint(5u), uint(5u)))))) / ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))))) >> 0u))))) - 0u)) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) | 0u)) - _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, 0.0 + _GLF_IDENTITY((0.0), min((0.0), (0.0)))), (0.0) * 1.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), injectionSwitch.x), clamp(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, 0.0 + _GLF_IDENTITY((0.0), min((0.0), (0.0)))), (0.0) * 1.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, 0.0 + _GLF_IDENTITY((0.0), min((0.0), (0.0)))), (0.0) * 1.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, 0.0 + _GLF_IDENTITY((0.0), min((0.0), (0.0)))), (0.0) * 1.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), injectionSwitch.x)))), (uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))) + 0.0))), 0.0)), injectionSwitch.x))) >> (34372u & 0u)), (_GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, float(mat4x2(0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0))), 1.0, 0.0, 1.0))))), max(0.0, 0.0)), (false ? _GLF_FUZZED(-29.25) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), (_GLF_IDENTITY(0.0, max(0.0, 0.0))) * cos(0.0)))), 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x)), (uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, max(0.0, 0.0)) : _GLF_FUZZED(-1356.9858))), (0.0) * 1.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), injectionSwitch.x))) >> _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(34372u, clamp(34372u, _GLF_IDENTITY(34372u, (1u & 1u) * (34372u)), 34372u)), (34372u) * _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) | (uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u))), clamp(((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) | (uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u))), _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) | (uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u))), uint(uvec3(((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) | (uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u, 0u))), ((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) | (uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u)))))) & 0u), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(34372u, (34372u) * ((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) | (uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u)))) & 0u), uint(uint((_GLF_IDENTITY(34372u, (34372u) * _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) | (uint(4u))))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u))))), (_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) | (uint(4u))))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u))))), (((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) | (uint(4u))))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u)))))) / 1u)) | 0u)) & 0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(34372u, (34372u) * ((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) | _GLF_IDENTITY((uint(4u)), max(_GLF_IDENTITY((uint(4u)), ((uint(4u))) - 0u), (uint(4u))))))) >> _GLF_IDENTITY(uint(4u), uint(4u)))) & _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), uint(uint((_GLF_IDENTITY(_GLF_IDENTITY(34372u, (34372u) * ((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) | (uint(4u))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u)))))) & 0u, 0u ^ (_GLF_IDENTITY(34372u, (34372u) * ((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) | (uint(4u))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u)))))) & 0u))))))) * (1u & 1u))) - 0u))) << 0u));
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
