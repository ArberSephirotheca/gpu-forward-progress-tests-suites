#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_0 {
 uint subgroup_id;
 mat4x3 _f0;
 uvec2 _f1;
 uvec2 _f2;
 mat2x4 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
  barrier();
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(gl_SubgroupID, mat4x3(1.0), uvec2(1u), uvec2(1u), mat2x4(1.0));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y) * (_GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0, 1.0, sqrt(1.0), 1.0, 1.0), (mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0, 1.0, sqrt(1.0), 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8.2) : 1.0)))) + mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, ! (! (false))) || ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, round(length(_GLF_IDENTITY(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0)))), min(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0)))), normalize(_GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0)))))))) * (injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, round(length(_GLF_IDENTITY(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0)))), min(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0)))), normalize(_GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0)))))))) * (injectionSwitch.y)), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, round(length(_GLF_IDENTITY(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0)))), min(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0)))), normalize(_GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0)))))))) * (injectionSwitch.y)))))) || false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0)))), float(_GLF_FUZZED(1.7)), bool(false))), max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0)))), float(_GLF_FUZZED(1.7)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(734.409)), vec2(_GLF_FUZZED(-9.7), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) * 1.0)), bvec2(false, true))))).x, float(mat3x2(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0)))), float(_GLF_FUZZED(1.7)), bool(false))))), 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-55.60))))), 1.0)), clamp(float(mat2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0)))), float(_GLF_FUZZED(1.7)), bool(false))), 1.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0)))), float(_GLF_FUZZED(1.7)), bool(_GLF_IDENTITY(false, (false) || false)))), 1.0, _GLF_IDENTITY(1.0, float(mat2x4(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0))), 1.0, cos(0.0), 1.0, cos(0.0), 0.0, 0.0, 0.0))), 1.0)), float(vec4(float(mat2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) * 1.0))), min(injectionSwitch, injectionSwitch)))).x, 1.0, 1.0, 0.0, 0.0, 0.0)))), float(_GLF_FUZZED(1.7)), bool(false))), 1.0, 1.0, 1.0)), 1.0, 0.0, 1.0))), _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0)))), float(_GLF_FUZZED(1.7)), bool(false))), 1.0, 1.0, 1.0)), max(float(mat2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0)))), float(_GLF_FUZZED(1.7)), bool(false))), 1.0, 1.0, 1.0)), float(mat2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0)))), float(_GLF_FUZZED(1.7)), bool(false)), (mix(float(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0)))), float(_GLF_FUZZED(1.7)), bool(false))) + 0.0)), 1.0, 1.0, 1.0))))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, log(1.0)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 0.0))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   return;
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, 1u * (workgroup_size)) * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))) || false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED((uvec4(139347u, 123587u, 28860u, 124682u) , 8.6)))) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED((uvec4(139347u, 123587u, 28860u, 124682u) , 8.6)))) > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, bool(bool(false)))) && true)))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(670.662), _GLF_FUZZED(2623.0374)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x, injectionSwitch.x)) > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, 0.0, 0.0, 1.0)), (float(vec4(injectionSwitch.y, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) / vec2(1.0, 1.0))), (false ? _GLF_FUZZED(918.111) : float(_GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) / vec2(1.0, 1.0)))))), 0.0, 1.0))) - 0.0)), injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, true && (false)), true)), ! (! (bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-5.8))) > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))))) > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((injectionSwitch / -7806.7565)))).y), false || ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))))) > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((injectionSwitch / -7806.7565)))).y))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_base = _GLF_struct_replacement_0.subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(subgroup_size, 1u), (_GLF_IDENTITY(uvec2(subgroup_size, 1u), max(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 1u), uvec2(subgroup_size, 1u)))) >> uvec2(0u, 0u))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_size, 1u), max(_GLF_IDENTITY(uvec2(subgroup_size, 1u), (uvec2(subgroup_size, 1u)) | (_GLF_IDENTITY(uvec2(subgroup_size, 1u), clamp(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), 1u), uvec2(subgroup_size, 1u), uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 1u))))), uvec2(subgroup_size, 1u))), (_GLF_IDENTITY(uvec2(subgroup_size, 1u), max(uvec2(subgroup_size, 1u), uvec2(subgroup_size, 1u)))) >> uvec2(0u, _GLF_IDENTITY(0u, (0u) - _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) - 0u)))))))) ^ 0u))) * 1u)) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u))));
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, workgroup_base + subgroup_base)) + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - (1u ^ 1u));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base + ((subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0)) % subgroup_size), (true ? workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size) : _GLF_FUZZED(uvec3(15764u, 2326u, _GLF_IDENTITY(62307u, min(62307u, _GLF_IDENTITY(62307u, clamp(62307u, 62307u, 62307u))))).g)));
 atomicStore(buf[virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec3(4, 1, (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))))), clamp(ivec3(4, 1, (_GLF_IDENTITY(0 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))), max(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))), _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))))), min(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), min(int(3), int(3))), clamp(_GLF_IDENTITY(int(3), min(int(3), int(3))), _GLF_IDENTITY(int(3), min(int(3), int(3))), _GLF_IDENTITY(_GLF_IDENTITY(int(3), min(int(3), int(3))), clamp(_GLF_IDENTITY(int(3), min(int(3), int(3))), _GLF_IDENTITY(_GLF_IDENTITY(int(3), min(int(3), int(3))), 0 | (_GLF_IDENTITY(int(3), min(int(3), int(3))))), _GLF_IDENTITY(int(3), min(int(3), int(3)))))))), (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))), (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3))))) >> 0)) ^ 0), 0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(_GLF_IDENTITY(3, (3) * 1))))))))), ivec3(4, 1, (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))))), _GLF_IDENTITY(ivec3(4, 1, (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))))), (ivec3(4, 1, (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(_GLF_IDENTITY(3, clamp(3, 3, _GLF_IDENTITY(3, 0 | (3))))), _GLF_IDENTITY(int(3), (int(3)) | 0))))))) / _GLF_IDENTITY(ivec3(1, 1, 1), _GLF_IDENTITY(clamp(ivec3(1, 1, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (true ? ~ (1) : _GLF_FUZZED(30789)))))), ivec3(1, 1, 1), _GLF_IDENTITY(ivec3(1, 1, 1), max(ivec3(1, 1, 1), ivec3(1, 1, 1)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ivec3(-40941, -2111, -32604)) : clamp(ivec3(1, 1, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (true ? ~ (1) : _GLF_FUZZED(30789)))))), ivec3(1, 1, 1), _GLF_IDENTITY(ivec3(1, 1, 1), max(ivec3(1, 1, 1), ivec3(1, 1, 1)))))))))))), _GLF_IDENTITY(max(_GLF_IDENTITY(4, 0 | (4)), 4), max(_GLF_IDENTITY(max(_GLF_IDENTITY(4, 0 | (4)), 4), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(max(_GLF_IDENTITY(4, 0 | (4)), 4), (max(_GLF_IDENTITY(4, 0 | (4)), 4)) - 0), 0)), (int(ivec2(_GLF_IDENTITY(max(_GLF_IDENTITY(4, 0 | (4)), 4), (max(_GLF_IDENTITY(4, 0 | (4)), 4)) - 0), 0))) << 0)), max(_GLF_IDENTITY(4, 0 | (4)), 4)))), (_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec3(4, 1, (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))))), clamp(ivec3(4, 1, (_GLF_IDENTITY(0 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))), max(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))), _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))))), min(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), min(int(3), int(3))), clamp(_GLF_IDENTITY(int(3), min(int(3), int(3))), _GLF_IDENTITY(int(3), min(int(3), int(3))), _GLF_IDENTITY(_GLF_IDENTITY(int(3), min(int(3), int(3))), clamp(_GLF_IDENTITY(int(3), min(int(3), int(3))), _GLF_IDENTITY(_GLF_IDENTITY(int(3), min(int(3), int(3))), 0 | (_GLF_IDENTITY(int(3), min(int(3), int(3))))), _GLF_IDENTITY(int(3), min(int(3), int(3)))))))), (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))), (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3))))) >> 0)) ^ 0), 0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(_GLF_IDENTITY(3, (3) * 1))))))))), ivec3(4, 1, (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))))), _GLF_IDENTITY(ivec3(4, 1, (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))))), (ivec3(4, 1, (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(_GLF_IDENTITY(3, clamp(3, 3, _GLF_IDENTITY(3, 0 | (3))))), _GLF_IDENTITY(int(3), (int(3)) | 0))))))) / _GLF_IDENTITY(ivec3(1, 1, 1), _GLF_IDENTITY(clamp(ivec3(1, 1, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (true ? ~ (1) : _GLF_FUZZED(30789)))))), ivec3(1, 1, 1), _GLF_IDENTITY(ivec3(1, 1, 1), max(ivec3(1, 1, 1), ivec3(1, 1, 1)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ivec3(-40941, -2111, -32604)) : clamp(ivec3(1, 1, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (true ? ~ (1) : _GLF_FUZZED(30789)))))), ivec3(1, 1, 1), _GLF_IDENTITY(ivec3(1, 1, 1), max(ivec3(1, 1, 1), ivec3(1, 1, 1)))))))))))), _GLF_IDENTITY(max(_GLF_IDENTITY(4, 0 | (4)), 4), max(_GLF_IDENTITY(max(_GLF_IDENTITY(4, 0 | (4)), 4), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(max(_GLF_IDENTITY(4, 0 | (4)), 4), (max(_GLF_IDENTITY(4, 0 | (4)), 4)) - 0), 0)), (int(ivec2(_GLF_IDENTITY(max(_GLF_IDENTITY(4, 0 | (4)), 4), (max(_GLF_IDENTITY(4, 0 | (4)), 4)) - 0), 0))) << 0)), max(_GLF_IDENTITY(4, 0 | (4)), 4))))) ^ 0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec3(4, 1, (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, _GLF_IDENTITY((3) - 0, ((3) - 0) | 0))) | (3))), min(int(3), int(3)))), (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, (3) - 0)) | (3))), min(int(3), int(3))))) * int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED((-3872.3983 / -5.3)), (mat2(1.0) * (injectionSwitch))[1]), vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-44.37)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))).y))))), clamp(ivec3(4, 1, (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))))), ivec3(4, 1, (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, min(3, 3))), min(int(3), int(3)))))), _GLF_IDENTITY(ivec3(4, 1, (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))))), _GLF_IDENTITY((ivec3(4, 1, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 ^ (0))) + 0) << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3))))))) / ivec3(1, 1, 1), min((ivec3(4, 1, (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), max(int(3), int(3))), min(int(3), int(3))))))) / ivec3(1, 1, 1), (ivec3(4, 1, (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3))))))) / ivec3(1, 1, 1)))))))), max(_GLF_IDENTITY(4, 0 | (4)), 4)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec3(4, 1, (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))))), clamp(ivec3(4, 1, (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) - 0)), _GLF_IDENTITY(_GLF_IDENTITY(int(3), max(int(3), _GLF_IDENTITY(int(3), (int(3)) | (int(3))))), min(int(3), int(3)))), min(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))), _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), min(int(3), int(3))), (_GLF_IDENTITY(int(3), min(int(3), int(3)))) >> 0)), (-78979 & 0) | (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, max(_GLF_IDENTITY(3, (3) | 0), 3))), min(int(3), int(3)))))))))), ivec3(4, 1, (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), min(int(3), int(3))), min(int(3), int(3)))), _GLF_IDENTITY(int(ivec3(0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), min(int(3), int(3))), min(int(3), int(3)))), 0, 1)), (int(ivec3(0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), min(int(3), int(3))), min(int(3), int(3)))), 0, 1))) - (0 << _GLF_IDENTITY(int(3), int(3))))))), _GLF_IDENTITY(ivec3(4, 1, _GLF_IDENTITY((0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3))))), ((0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), min(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(ivec4(int(3), 1, 0, 0)), int(ivec3(int(ivec4(int(3), 1, 0, 0)), 0, 1)))), int(3))), 0 ^ (_GLF_IDENTITY(int(3), min(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(ivec4(int(3), 1, 0, 0)), int(ivec3(int(ivec4(int(3), 1, 0, 0)), 0, 1)))), int(3)))))))) | _GLF_IDENTITY(((0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))))), max(_GLF_IDENTITY(((0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))))), (((0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3))))))) / 1), ((0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))))))))), (ivec3(4, 1, (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(min(int(3), int(3)), (min(int(3), int(3))) - 0)))))) / ivec3(_GLF_IDENTITY(1, min(1, 1)), 1, 1)))))), max(_GLF_IDENTITY(4, _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) | (0))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) | (0))), 0 + (~ (_GLF_IDENTITY(0, (0) | (0)))))) << 0))) | (4)), 4)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec3(4, 1, (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) / (0 ^ (1 & 1)))), 0 | (int(3))), min(int(3), int(3)))))), clamp(_GLF_IDENTITY(ivec3(4, 1, (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))))), (ivec3(4, 1, (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(_GLF_IDENTITY(3, (3) | (_GLF_IDENTITY(3, (3) - 0)))), int(3))))))) | (ivec3(4, 1, (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))))))), ivec3(_GLF_IDENTITY(4, min(4, 4)), 1, (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))))), _GLF_IDENTITY(ivec3(4, 1, (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))))), (ivec3(4, _GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY((0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, clamp(3, 3, 3))), min(int(3), int(3))))), clamp((0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, clamp(3, 3, 3))), min(int(3), int(3))))), (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, clamp(3, 3, 3))), min(int(3), int(3))))), (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, clamp(3, 3, 3))), min(int(3), int(3))))))))) / ivec3(_GLF_IDENTITY(1, (1) ^ (_GLF_IDENTITY((26392 & 0), clamp((26392 & 0), (26392 & 0), (26392 & 0))) >> _GLF_IDENTITY(int(7), int(7)))), 1, 1)))))), max(_GLF_IDENTITY(4, 0 | (4)), _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, max(4, 4)), 4, 4)))), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec3(4, 1, (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))))), clamp(ivec3(4, 1, (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ (~ (_GLF_IDENTITY(int(3), 0 | (int(3)))))), min(int(3), int(3)))))), ivec3(4, 1, (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))))), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(4, 1, (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))))), (ivec3(4, 1, (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3))))))) / ivec3(1, 1, 1)), (_GLF_IDENTITY(ivec3(4, 1, (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))))), (ivec3(4, 1, (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3))))))) / ivec3(_GLF_IDENTITY(1, 0 | (1)), 1, 1))) ^ ivec3(0, 0, 0)))))), max(_GLF_IDENTITY(4, 0 | (4)), 4)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec3(4, 1, (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))))), clamp(ivec3(4, 1, (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ (~ (_GLF_IDENTITY(int(3), 0 | (int(3)))))), min(int(3), int(3)))))), ivec3(4, 1, (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))))), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(4, 1, (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))))), (ivec3(4, 1, (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3))))))) / ivec3(1, 1, 1)), (_GLF_IDENTITY(ivec3(4, 1, (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))))), (ivec3(4, 1, (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3))))))) / ivec3(_GLF_IDENTITY(1, 0 | (1)), 1, 1))) ^ ivec3(0, 0, 0)))))), max(_GLF_IDENTITY(4, 0 | (4)), 4)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec3(4, 1, (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))))), clamp(ivec3(4, 1, (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ (~ (_GLF_IDENTITY(int(3), 0 | (int(3)))))), min(int(3), int(3)))))), ivec3(4, 1, (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))))), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(4, 1, (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))))), (ivec3(4, 1, (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3))))))) / ivec3(1, 1, 1)), (_GLF_IDENTITY(ivec3(4, 1, (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))))), (ivec3(4, 1, (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3))))))) / ivec3(_GLF_IDENTITY(1, 0 | (1)), 1, 1))) ^ ivec3(0, 0, 0)))))), max(_GLF_IDENTITY(4, 0 | (4)), 4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec3(4, 1, (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))))), clamp(ivec3(4, 1, (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ (~ (_GLF_IDENTITY(int(3), 0 | (int(3)))))), min(int(3), int(3)))))), ivec3(4, 1, (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))))), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(4, 1, (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))))), (ivec3(4, 1, (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3))))))) / ivec3(1, 1, 1)), (_GLF_IDENTITY(ivec3(4, 1, (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))))), (ivec3(4, 1, (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3))))))) / ivec3(_GLF_IDENTITY(1, 0 | (1)), 1, 1))) ^ ivec3(0, 0, 0)))))), max(_GLF_IDENTITY(4, 0 | (4)), 4))) * 1), _GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec3(4, 1, (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))))), clamp(ivec3(4, 1, (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ (~ (_GLF_IDENTITY(int(3), 0 | (int(3)))))), min(int(3), int(3)))))), ivec3(4, 1, (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))))), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(4, 1, (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))))), (ivec3(4, 1, (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3))))))) / ivec3(1, 1, 1)), (_GLF_IDENTITY(ivec3(4, 1, (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))))), (ivec3(4, 1, (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3))))))) / ivec3(_GLF_IDENTITY(1, 0 | (1)), 1, 1))) ^ ivec3(0, 0, 0)))))), max(_GLF_IDENTITY(4, 0 | (4)), 4)))), _GLF_IDENTITY(1, int(int(1))), (-17133 & 0), 1)))))), _GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec3(4, 1, (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(min(int(3), int(3)), (min(int(3), int(3))) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))))), clamp(ivec3(4, 1, (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) | (int(3))), min(int(3), int(3)))))), ivec3(4, 1, (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(_GLF_IDENTITY(3, ~ (~ (3)))), int(3)))))), _GLF_IDENTITY(ivec3(4, 1, (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), min(int(3), int(3))), min(_GLF_IDENTITY(int(3), min(_GLF_IDENTITY(int(3), 0 ^ (_GLF_IDENTITY(int(3), (false ? _GLF_FUZZED(-78350) : int(3))))), int(3))), _GLF_IDENTITY(int(3), min(int(3), int(3)))))))), _GLF_IDENTITY((ivec3(4, 1, (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))), ~ (~ (_GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), clamp(_GLF_IDENTITY(int(3), _GLF_IDENTITY(1 * (int(3)), 0 | (1 * (int(3))))), int(3), int(3))), min(int(3), int(3)))))))))), min((ivec3(4, 1, (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) ^ 0), min(int(3), int(3)))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) | (3))), min(int(3), int(3)))))), clamp(_GLF_IDENTITY((~ (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) | (3))), min(int(3), int(3)))))), max(_GLF_IDENTITY((~ (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) | (3))), min(int(3), int(3)))))), ((~ (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) | (3))), min(int(3), int(3))))))) / 1), (~ (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) | (3))), min(int(3), int(3)))))))), (~ (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) | (3))), min(int(3), int(3)))))), (~ (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) | (3))), min(int(3), int(3)))))))))))), _GLF_IDENTITY((ivec3(4, 1, (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))), ~ (~ (_GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), min(int(3), int(3))), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(int(3), min(int(3), int(3)))))))))))), (_GLF_IDENTITY((ivec3(4, 1, (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))), ~ (~ (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))))))))), max((ivec3(4, 1, (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), _GLF_IDENTITY(int(3), max(int(3), _GLF_IDENTITY(int(3), (false ? _GLF_FUZZED(59419) : int(3)))))))), ~ (~ (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))))))))), (ivec3(4, 1, _GLF_IDENTITY(_GLF_IDENTITY((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(_GLF_IDENTITY(3, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(3, (0 << _GLF_IDENTITY(int(3), int(3))) ^ (3)), 0)), (_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(3, (0 << _GLF_IDENTITY(int(3), int(3))) ^ (3)), 0)), (int(ivec2(_GLF_IDENTITY(3, (0 << _GLF_IDENTITY(int(3), int(3))) ^ (3)), 0))) * 1)) << 0)))))), ~ (~ (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(min(int(3), int(3)), (min(int(3), _GLF_IDENTITY(int(3), int(ivec2(int(3), 1))))) / 1))))))), 0 | (_GLF_IDENTITY((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, int(ivec2(3, 0)))), _GLF_IDENTITY(int(3), min(int(3), int(3)))), ~ (~ (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))))))), ((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))), ~ (~ (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3))))))))) - 0))), clamp(_GLF_IDENTITY((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(min(int(3), int(3)), min(min(int(3), int(3)), min(int(3), int(3)))))))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(_GLF_IDENTITY(3, (false ? _GLF_FUZZED(83412) : 3)))))))), 0 ^ (~ (~ (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3))))))))) >> 0))), min(_GLF_IDENTITY((_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(29884)))))))) << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, min(_GLF_IDENTITY(3, 0 | (3)), 3))), _GLF_IDENTITY(int(3), _GLF_IDENTITY(min(int(3), int(3)), int(ivec4(min(int(3), int(_GLF_IDENTITY(3, (3) | (3)))), (0 >> _GLF_IDENTITY(int(8), int(8))), 1, 0))))), ~ (~ (_GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) ^ 0)), _GLF_IDENTITY(int(3), min(int(3), int(3)))))))), min((_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(29884)))))))) << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, min(_GLF_IDENTITY(3, 0 | (3)), 3))), _GLF_IDENTITY(int(3), _GLF_IDENTITY(min(int(3), int(3)), int(ivec4(min(int(3), int(_GLF_IDENTITY(3, (3) | (3)))), (0 >> _GLF_IDENTITY(int(8), int(8))), 1, 0))))), ~ (~ (_GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) ^ 0)), _GLF_IDENTITY(int(3), min(int(3), int(3)))))))), (_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(29884)))))))) << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, min(_GLF_IDENTITY(3, 0 | (3)), 3))), _GLF_IDENTITY(int(3), _GLF_IDENTITY(min(int(3), int(3)), int(ivec4(min(int(3), int(_GLF_IDENTITY(3, (3) | (3)))), (0 >> _GLF_IDENTITY(int(8), int(8))), 1, 0))))), ~ (~ (_GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) ^ 0)), _GLF_IDENTITY(int(3), min(int(3), int(3)))))))))), _GLF_IDENTITY((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))), ~ (~ (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))))))), (_GLF_IDENTITY((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))), ~ (~ (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))))))), int(ivec2((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))), ~ (~ (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))))))), 0)))) << 0))), _GLF_IDENTITY((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), 0 + (_GLF_IDENTITY(int(3), int(ivec2(int(3), 1)))))) | (int(3)))))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3))))), ~ (~ ((_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3))))))))))), (_GLF_IDENTITY((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))), ~ (~ (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))))))), 0 | ((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))), ~ (~ (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3))))))))))) | ((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))), ~ (~ (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))))))))), (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))))), (1 ^ int(_GLF_ONE(1.0, injectionSwitch.y))) ^ (~ (~ (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3))))))))))))))))) / ivec3(1, 1, 1)))) / ivec3(1, 1, 1)))))), max(_GLF_IDENTITY(4, 0 | (4)), 4)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (false)), ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(! (! (_GLF_IDENTITY((! (false)), (_GLF_IDENTITY(_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), false, _GLF_IDENTITY(true, true && (true))))), (_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), false, _GLF_IDENTITY(true, _GLF_IDENTITY(true, false || (true)) && (true)))))) && true)) || false))), ! _GLF_IDENTITY(_GLF_IDENTITY((! (! (! (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(((! (false))) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY((! (false)), true && ((! (false))))) || false, ! (_GLF_IDENTITY(! (((! (false))) || false), bool(bvec3(! (((! (false))) || false), true, false)))))), (! (_GLF_IDENTITY(((! (false))) || false, ! (_GLF_IDENTITY(! (((! (false))) || false), bool(bvec3(! (((! (false))) || false), true, false))))))) || false)))))))), true && (_GLF_IDENTITY((! (! (! (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(((! (false))) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((! (false))) || false, ! (_GLF_IDENTITY(! (((! (false))) || false), bool(bvec3(! (((! (false))) || false), true, false)))))), (! (_GLF_IDENTITY(((! (false))) || false, ! (_GLF_IDENTITY(! (((! (false))) || false), bool(bvec3(! (((! (false))) || false), true, false))))))) || false)))))))), bool(bvec3((! (! (! (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(((! (false))) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((! (false))) || _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (((! (false))) || false), bool(bvec3(! (((! (false))) || false), true, false)))))), (! (_GLF_IDENTITY(((! (false))) || false, ! (_GLF_IDENTITY(! (((! (false))) || false), bool(bvec3(! (((! (false))) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, false))))))) || false)))))))), true, true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (! (! (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(((! (false))) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY((! (false)), true && ((! (false))))) || false, ! (_GLF_IDENTITY(! (((! (false))) || false), bool(bvec3(! (((! (false))) || false), true, false)))))), (! (_GLF_IDENTITY(((! (false))) || false, ! (_GLF_IDENTITY(! (((! (false))) || false), bool(bvec3(! (((! (false))) || false), true, false))))))) || false)))))))), true && (_GLF_IDENTITY((! (! (! (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(((! (false))) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((! (false))) || false, ! (_GLF_IDENTITY(! (((! (false))) || false), bool(bvec3(! (((! (false))) || false), true, false)))))), (! (_GLF_IDENTITY(((! (false))) || false, ! (_GLF_IDENTITY(! (((! (false))) || false), bool(bvec3(! (((! (false))) || false), true, false))))))) || false)))))))), bool(bvec3((! (! (! (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(((! (false))) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((! (false))) || _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (((! (false))) || false), bool(bvec3(! (((! (false))) || false), true, false)))))), (! (_GLF_IDENTITY(((! (false))) || false, ! (_GLF_IDENTITY(! (((! (false))) || false), bool(bvec3(! (((! (false))) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, false))))))) || false)))))))), true, true))))), true && (_GLF_IDENTITY((! (! (! (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(((! (false))) || false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((! (false)), true && ((! (false))))) || false, bool(bool((_GLF_IDENTITY((! (false)), true && ((! (false))))) || false))), ! (_GLF_IDENTITY(! (((! (false))) || false), bool(bvec3(! (((! (false))) || false), true, false)))))), _GLF_IDENTITY((! (_GLF_IDENTITY(((! (false))) || false, ! (_GLF_IDENTITY(! (((! (false))) || false), bool(bvec3(! (((! _GLF_IDENTITY((false), true && ((false))))) || false), true, false))))))), bool(bvec4((! (_GLF_IDENTITY(((! (false))) || false, ! (_GLF_IDENTITY(! (((! (false))) || false), bool(bvec3(! (((! _GLF_IDENTITY((false), true && ((false))))) || false), true, false))))))), false, false, false))) || false)), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((! (false)), true && ((! (false))))) || false, bool(bool((_GLF_IDENTITY((! (false)), true && ((! (false))))) || false))), ! (_GLF_IDENTITY(! (((! (false))) || false), bool(bvec3(! (((! (false))) || false), true, false)))))), _GLF_IDENTITY((! (_GLF_IDENTITY(((! (false))) || false, ! (_GLF_IDENTITY(! (((! (false))) || false), bool(bvec3(! (((! _GLF_IDENTITY((false), true && ((false))))) || false), true, false))))))), bool(bvec4((! (_GLF_IDENTITY(((! (false))) || false, ! (_GLF_IDENTITY(! (((! (false))) || false), bool(bvec3(! (((! _GLF_IDENTITY((false), true && ((false))))) || false), true, false))))))), false, false, false))) || false))))))))))), true && (_GLF_IDENTITY((! (! (! (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(((! (false))) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((! (false))) || false, ! (_GLF_IDENTITY(! (((! (false))) || false), bool(bvec3(! (((! (false))) || false), true, false)))))), (! (_GLF_IDENTITY(((! (false))) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (((! (false))) || false), bool(bvec3(! (((! (false))) || false), true, false)))), bool(bvec2(! (_GLF_IDENTITY(! (((! (false))) || false), bool(bvec3(! (((! (false))) || false), true, false)))), true)))))) || false)))))))), bool(bvec3((! (! (! (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(((! (false))) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(((! (false))), ! (! (_GLF_IDENTITY(((! (false))), bool(bvec3(((! (false))), true, false)))))) || _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((! (false))), ! (! (((! (false)))))) || false), bool(bvec3(! (((! (false))) || false), true, false)))))), (! (_GLF_IDENTITY(((! (false))) || false, ! (_GLF_IDENTITY(! (((! (false))) || false), bool(bvec3(! (((! (false))) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, false))))))) || false)))))))), true, true)))))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
