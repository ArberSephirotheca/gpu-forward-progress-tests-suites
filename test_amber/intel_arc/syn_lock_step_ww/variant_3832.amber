#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 uvec4 GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, false, false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) && true))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), (bool(bvec4(false, true, true, false))) && true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 0.0, abs(0.0), 1.0, 1.0)), max(_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 0.0, abs(0.0), 1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))) ? _GLF_FUZZED(injectionSwitch) : vec2(mat3x2(injectionSwitch, 0.0, abs(0.0), 1.0, 1.0)), clamp(_GLF_IDENTITY(false, bool(bvec2(false, true))) ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), min(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))) : vec2(mat3x2(injectionSwitch, 0.0, abs(0.0), 1.0, 1.0)), _GLF_IDENTITY(false, bool(bvec2(false, true))) ? _GLF_FUZZED(injectionSwitch) : vec2(mat3x2(injectionSwitch, 0.0, abs(0.0), 1.0, 1.0)), _GLF_IDENTITY(false, bool(bvec2(false, true))) ? _GLF_FUZZED(injectionSwitch) : vec2(mat3x2(injectionSwitch, 0.0, abs(0.0), 1.0, 1.0)))))), vec2(mat3x2(injectionSwitch, 0.0, abs(0.0), 1.0, 1.0))))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base.z = subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) || false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), ! (! (! (_GLF_IDENTITY(false, (false) || false)))))))), true && ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), ! (! (! (_GLF_IDENTITY(false, (false) || false)))))))))), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), ! (! (! (_GLF_IDENTITY(false, (false) || false)))))))), true && ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), ! (! (! (_GLF_IDENTITY(false, (false) || false))))))))))), ! (_GLF_IDENTITY(! (! (! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), ! (! (! (_GLF_IDENTITY(false, (false) || false)))))))), true && ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), ! (! (! (_GLF_IDENTITY(false, (false) || false)))))))))))), (! (! (! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (false) || false)), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), ! (! (! (_GLF_IDENTITY(false, (false) || false)))))))), true && ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (false) || false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), ! (! (! (_GLF_IDENTITY(false, (false) || false))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), ! (! (! (_GLF_IDENTITY(false, (false) || false))))), true, true, true))))))))))) && true))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base.y = subgroup_local_id;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base.x = _GLF_IDENTITY(num_workgroup, (num_workgroup) | (num_workgroup));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4.5)), float(injectionSwitch.y), bool(true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(-5123.4272))), injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 0, 0, 1), ivec4(0, 0, 0, 0) ^ (ivec4(1, 0, 0, 1)))))) - 0)]))) * mat2(1.0)).x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[0], (true ? injectionSwitch[0] : _GLF_FUZZED(-5123.4272))), injectionSwitch[1]))) * mat2(1.0)).x : _GLF_FUZZED(-3335.0729))) > injectionSwitch.y))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec4(bvec3(true, true, true), false))))) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(vec4(-96.06, 174.457, 0.5, -7.2).g)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (! (! (! (_GLF_DEAD(false))))))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))), true && (! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), (! (! (_GLF_DEAD(false)))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bool((! _GLF_IDENTITY((false), ((false)) && true))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), false || (! ((false)))))) || false)))), true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, bool(bool(false))))), ! (! (false)))) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), false || (! ((false))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), true && (false))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) && true))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))))), true && (bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false)))))))))))), false || (bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bool(bool(_GLF_IDENTITY(false, (false) && true)))))))))), true && (bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, false, false)))), bool(bvec4(! (_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), false, false, false)))), true, true, true)))))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u) * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(workgroup_id, 1u, 1u, 1u), (false ? _GLF_FUZZED(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base) : uvec4(workgroup_id, 1u, 1u, 1u)))), (uint(_GLF_IDENTITY(uvec4(workgroup_id, 1u, 1u, 1u), (false ? _GLF_FUZZED(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base) : uvec4(workgroup_id, 1u, 1u, 1u))))) | (uint(_GLF_IDENTITY(uvec4(workgroup_id, 1u, 1u, 1u), (false ? _GLF_FUZZED(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base) : uvec4(workgroup_id, 1u, 1u, 1u))))))), (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(workgroup_id, 1u, 1u, 1u), (false ? _GLF_FUZZED(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base) : uvec4(workgroup_id, 1u, 1u, 1u)))), (uint(_GLF_IDENTITY(uvec4(workgroup_id, 1u, 1u, 1u), (false ? _GLF_FUZZED(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base) : uvec4(workgroup_id, 1u, 1u, 1u))))) | (uint(_GLF_IDENTITY(uvec4(workgroup_id, 1u, 1u, 1u), (false ? _GLF_FUZZED(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base) : uvec4(workgroup_id, 1u, 1u, 1u)))))))) >> 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ((_GLF_IDENTITY(false, ! (! (false))))) && true)) && true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false), true, false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, false || (false))))), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base.w = workgroup_base, 0u + _GLF_IDENTITY((GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base.w = workgroup_base), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base.w = workgroup_base), (true ? (GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base.w = workgroup_base) : _GLF_FUZZED(((true != false) ? 24446u : subgroup_local_id)))), 0u + (_GLF_IDENTITY((GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base.w = workgroup_base), 1u * _GLF_IDENTITY((_GLF_IDENTITY((GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base.w = workgroup_base), ((GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base.w = workgroup_base)) >> 0u)), ((_GLF_IDENTITY((GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base.w = workgroup_base), ((GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base.w = workgroup_base)) >> 0u))) / 1u))))), ~ _GLF_IDENTITY((~ (~ _GLF_IDENTITY(((GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base.w = workgroup_base)), (((GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base.w = workgroup_base))) ^ (0u << _GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(1u, (1u) ^ 0u))))))), _GLF_IDENTITY(((~ (~ _GLF_IDENTITY(((GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base.w = workgroup_base)), (((GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base.w = workgroup_base))) ^ (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(1u), uint(1u)), (0u << _GLF_IDENTITY(uint(1u), uint(1u))) - 0u)))))) >> 0u, (((~ (~ _GLF_IDENTITY(((GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base.w = workgroup_base)), (((GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base.w = workgroup_base))) ^ (0u << _GLF_IDENTITY(uint(1u), uint(1u))))))) >> 0u) ^ 0u))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true))), true, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))), false || (false)), true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true))), true, _GLF_IDENTITY(false, false || (false)), true))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.5), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((+ 2.3))), bvec2(true, false))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.5), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((+ 2.3))), bvec2(true, false))).x > injectionSwitch.y)))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))))), false, false, true))), true, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), true)))) && true))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, false || (false)), false, true))), true, false, true)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, false || (false)), false, true))), true, false, true))))), ! (! (! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, false || (false)), false, true))), true, false, true)))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, false || (false)), false, true))), true, false, true)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, false || (false)), false, true))), true, false, _GLF_IDENTITY(true, false || (true))))))), ! _GLF_IDENTITY((! (! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, false || (false)), false, true))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, false || (false)), false, true))), true))), true, false, true))))))), ((! (! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, false || (false)), false, true))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, false || (false)), false, true))), true))), true, false, true)))))))) && true))))) && true) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), true && (true && _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! ((false))))))))))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base.w + subgroup_id * GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base.z + _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base, clamp(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base, GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base, GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base)).y, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base.w + subgroup_id * _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base, max(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base, GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base)).z + _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base, clamp(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base, GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base, GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base)).y, ~ (~ (GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base.w + subgroup_id * GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base.z + _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base, clamp(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base, GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base, GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base)).y)))) << 0u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(_GLF_IDENTITY(571.027, min(571.027, 571.027)))), bool(false))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED((+ 5004.9797))), bool(false)), clamp(_GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED((+ 5004.9797))), bool(false)), _GLF_IDENTITY(1.0 * (_GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED((+ 5004.9797))), bool(false)), 1.0 * (mix(float(injectionSwitch.x), float(_GLF_FUZZED((+ 5004.9797))), bool(false))))), (false ? _GLF_FUZZED(1042.8004) : 1.0 * (_GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED((+ 5004.9797))), bool(false)), 1.0 * (mix(float(injectionSwitch.x), float(_GLF_FUZZED((+ 5004.9797))), bool(false)))))))), mix(float(injectionSwitch.x), float(_GLF_FUZZED((+ 5004.9797))), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED((+ 5004.9797))), bool(false))))) > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(3.1))) > injectionSwitch.y, true, true, true)))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(7892.9722) : injectionSwitch.x)) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(7892.9722) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)))) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch), min(min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)))).y), true && ((_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch), min(min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)))).y)))))) || false, ! (! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(410.835))), injectionSwitch.x)) > injectionSwitch.y)))) || false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(1.9), _GLF_FUZZED(-1.6)), bvec2(false, false))))).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) || false, bool(bvec3(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) || false, false, true)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true), false, true)))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base, ~ (_GLF_IDENTITY(~ (GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base), ~ (~ (~ (GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base)))))).w + _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)), clamp(subgroup_id, subgroup_id, subgroup_id)))) * GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base.z, clamp(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base.w + subgroup_id * _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base.z, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base.z, ~ (~ (GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base.z)))), (~ (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base.z, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base, (GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base) | uvec4(0u, 0u, 0u, 0u)).z)), 0u | (_GLF_IDENTITY((~ (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base, (GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base) | uvec4(0u, 0u, 0u, 0u)).z)), ~ (_GLF_IDENTITY(~ ((~ (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base, (GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base) | uvec4(0u, 0u, 0u, 0u)).z))), min(~ ((~ (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base, (GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base) | uvec4(0u, 0u, 0u, 0u)).z))), ~ ((~ (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base, (GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base) | uvec4(0u, 0u, 0u, 0u)).z)))))))))))) | (~ (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base.z, ~ (~ (GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base.z)))))))), GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base.w + _GLF_IDENTITY(subgroup_id * GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base.z, (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base.z, max(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base.z, GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base.z))) | (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base.z, ~ (~ (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base.z, _GLF_IDENTITY((GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base.z), ((GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base.z)) + 0u) ^ 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base.z, max(subgroup_id * GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base.z, subgroup_id * GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base.z)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(uvec2(97156u, 193721u)[1]) : _GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)))), (subgroup_id) << (0u << _GLF_IDENTITY(uint(8u), uint(8u)))) * GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base.z, max(subgroup_id * GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base.z, subgroup_id * _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base.z, min(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base.z, min(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base.z, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base, max(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base, clamp(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base, GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base, GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base)))).z)), GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base.z)))) : _GLF_FUZZED(subgroup_id)))) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base.w, 0u + (GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base.w)) + subgroup_id * GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base.z, uint(uvec4(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base.w, (GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base.w) * 1u) + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base, ~ (~ (GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base))).z, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base, ~ (~ (GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base))).z) | (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base, ~ (~ (GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base))).z)), (true ? subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base, max(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base, GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base)), ~ (~ (GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base))).z : _GLF_FUZZED(bitfieldInsert(subgroup_local_id, workgroup_id, 85610, -92345)))), _GLF_IDENTITY(0u, (0u) >> (0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (true ? uint(6u) : _GLF_FUZZED(subgroup_size)))))), 1u, 0u))))) + ((GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base.y + 1) % GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_base.z);
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((_GLF_IDENTITY(false, ! (! (false)))) && true) && true)), (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) && true, ((false) && true) && true), false || (_GLF_IDENTITY((false) && true, ((false) && true) && true))))) || _GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), false))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec2(_GLF_DEAD(false), true))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true))))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   atomicStore(buf[virtual_gid], uint(_GLF_IDENTITY(1, min(1, 1))), 4, _GLF_IDENTITY(64, 1 * (64)), 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) || false)), ! (! ((! (false))))))))), (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, length(sqrt(vec2(0.0, 0.0))), 0.0, 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(vec2(-59.13, 34.83)) : injectionSwitch)).y), determinant(mat2(1.0, 0.0, 0.0, 1.0)), log(1.0)))).x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false)))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bvec3(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))))))), true))), true && (_GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bvec3(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(false, (false) || false)), bvec3(bvec4(bvec3(false, true, false), true))), true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(bvec4(_GLF_DEAD(false), true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((false)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), false, true, true)), ! (! (bool(bvec4((false), false, true, true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), false, true, true)), ! (! (bool(bvec4((false), false, true, true)))))))))))), ! (_GLF_IDENTITY(! (! ((false))), (! (! ((false)))) && true))))) && true), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true && (true), ! (! (true && (true))))))) && ((false))) && true)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(true, true && (true)) && ((false))) && true)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(true, true && (true)) && ((false))) && true)), false || ((_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(true, true && (true)) && ((false))) && true)))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(true, true && (true)) && ((false))) && true)), false || ((_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(true, true && (true)) && ((false))) && true)))), true), true, true))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true))), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))))).y)) && (injectionSwitch.x > injectionSwitch.y)), true, true, false)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y)), true, true, false)), false)))))))) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false, true)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(uint(2), (true ? uint(2) : _GLF_FUZZED(subgroup_id))))), _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4), max((4), (4))) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 4 : _GLF_FUZZED(-9091))), _GLF_IDENTITY(_GLF_IDENTITY((4), max((4), (4))) ^ 0, (_GLF_IDENTITY(_GLF_IDENTITY((4), ((4)) | 0), max((4), (4))) ^ 0) | 0))) / 1), 64, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, 4, 4))) | (_GLF_IDENTITY(4, min(4, 4)))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! _GLF_IDENTITY((false), false || _GLF_IDENTITY(((false)), false || (((false))))), true && _GLF_IDENTITY((! (false)), ((! (false))) || false))) && true), false || (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), true && (! (false)))) && true)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.1), _GLF_FUZZED(4.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))) - determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))) * _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), max(_GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), clamp(mat2(1.0) * ((injectionSwitch)), mat2(1.0) * ((injectionSwitch)), mat2(1.0) * ((injectionSwitch)))), mat2(1.0) * ((injectionSwitch))))), max(_GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-4400.5822, -6.0, 964.382, -930.370)))) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y)) || false)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(305.960) : injectionSwitch.y)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) < injectionSwitch.y))))) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) + vec2(0.0, 0.0)), sqrt(1.0), 1.0, 1.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, tan(0.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0))).x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), false || (bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)), (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))) || false)))), ! (_GLF_IDENTITY(! ((bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true)), (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))) || false))))), ! (! (! ((bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(bvec3(true, false, true))))), (bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(bvec3(true, false, true)))))) && true)))), (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true)), true))) || false)))))))))) && true))))), _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (! (false))), _GLF_IDENTITY(false || (! (false)), true && (false || (! (false))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + _GLF_IDENTITY((injectionSwitch.y), max(_GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))), (injectionSwitch.y))))))), ((_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(false || (! (false)), true && (false || (! (false))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + _GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y)))))))) && true) && true)), (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) < injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) < injectionSwitch.y) || false)) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) < injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) < injectionSwitch.y) || false)) || false)) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) < injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) < injectionSwitch.y) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))))) < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-7080.3404) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) < injectionSwitch.y) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) < injectionSwitch.y) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y)))))))) || false)))))), ! (! (_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + _GLF_IDENTITY(0.0, 1.0 * (0.0))))) < injectionSwitch.y))))) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-717.072), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))))), vec2((injectionSwitch)[0], _GLF_FUZZED((-7.5 + -1489.0249))), bvec2(true, false))).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true)), true && (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true)))))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), false || (bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(3.6, -8.6)))).x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + _GLF_IDENTITY((injectionSwitch.y), _GLF_IDENTITY(max((injectionSwitch.y), (injectionSwitch.y)), (_GLF_IDENTITY(max((injectionSwitch.y), (injectionSwitch.y)), clamp(_GLF_IDENTITY(max((injectionSwitch.y), (injectionSwitch.y)), (max((injectionSwitch.y), (injectionSwitch.y))) - 0.0), max((injectionSwitch.y), (injectionSwitch.y)), max((injectionSwitch.y), (injectionSwitch.y))))) - sqrt(0.0))))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + _GLF_IDENTITY((injectionSwitch.y), _GLF_IDENTITY(max((_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x3(injectionSwitch.y, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0), mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat2x3(injectionSwitch.y, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0)))))), (injectionSwitch.y)), (_GLF_IDENTITY(max((injectionSwitch.y), (injectionSwitch.y)), clamp(_GLF_IDENTITY(max((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / abs(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), _GLF_IDENTITY((injectionSwitch.y), max(_GLF_IDENTITY((injectionSwitch.y), 1.0 * ((injectionSwitch.y))), (injectionSwitch.y)))), (max((injectionSwitch.y), (injectionSwitch.y))) - 0.0), max((injectionSwitch.y), (injectionSwitch.y)), max((injectionSwitch.y), (injectionSwitch.y))))) - sqrt(0.0)))))))))), ! (_GLF_IDENTITY(! ((_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! (false)))), ! (! ((_GLF_IDENTITY(! (false), false || (! (false)))))))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, 0.0 + _GLF_IDENTITY((injectionSwitch.y), _GLF_IDENTITY(max((injectionSwitch.y), (injectionSwitch.y)), (_GLF_IDENTITY(max((injectionSwitch.y), (injectionSwitch.y)), clamp(_GLF_IDENTITY(max((injectionSwitch.y), (injectionSwitch.y)), _GLF_IDENTITY((max((injectionSwitch.y), (injectionSwitch.y))), mix(float(_GLF_FUZZED(-4.4)), float(_GLF_IDENTITY((max((injectionSwitch.y), (injectionSwitch.y))), ((max((injectionSwitch.y), (injectionSwitch.y)))) - 0.0)), bool(true))) - 0.0), max((injectionSwitch.y), (injectionSwitch.y)), max((injectionSwitch.y), (injectionSwitch.y))))) - sqrt(0.0))))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + _GLF_IDENTITY((injectionSwitch.y), _GLF_IDENTITY(max((injectionSwitch.y), (injectionSwitch.y)), (_GLF_IDENTITY(max((injectionSwitch.y), (injectionSwitch.y)), clamp(_GLF_IDENTITY(max((injectionSwitch.y), (injectionSwitch.y)), (max((injectionSwitch.y), (injectionSwitch.y))) - 0.0), max((injectionSwitch.y), (injectionSwitch.y)), max((injectionSwitch.y), (injectionSwitch.y))))) - sqrt(0.0))))))))))), ! (! (! ((_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + _GLF_IDENTITY((injectionSwitch.y), _GLF_IDENTITY(max((injectionSwitch.y), (injectionSwitch.y)), (_GLF_IDENTITY(max((injectionSwitch.y), (injectionSwitch.y)), clamp(_GLF_IDENTITY(max(_GLF_IDENTITY((injectionSwitch.y), min((injectionSwitch.y), (injectionSwitch.y))), (injectionSwitch.y)), (max((injectionSwitch.y), (injectionSwitch.y))) - 0.0), max((injectionSwitch.y), (injectionSwitch.y)), max((injectionSwitch.y), (injectionSwitch.y))))) - sqrt(0.0))))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + _GLF_IDENTITY((injectionSwitch.y), _GLF_IDENTITY(max((injectionSwitch.y), (injectionSwitch.y)), (_GLF_IDENTITY(max((injectionSwitch.y), (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2.1) : injectionSwitch.y))) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(max((injectionSwitch.y), (injectionSwitch.y)), (max((injectionSwitch.y), (injectionSwitch.y))) - 0.0), mix(float(_GLF_IDENTITY(max((injectionSwitch.y), (injectionSwitch.y)), (max((injectionSwitch.y), (injectionSwitch.y))) - 0.0)), float(_GLF_FUZZED(-9.4)), bool(false))), max((injectionSwitch.y), (injectionSwitch.y)), max((injectionSwitch.y), (injectionSwitch.y))))) - sqrt(0.0)))))))))))))))) && true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + _GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))))))) && true), ! (! (bool((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + _GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + _GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y)))))), bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + _GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y)))))), true)))) && true)) && true))))), (bool(_GLF_IDENTITY(bool((_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + _GLF_IDENTITY((injectionSwitch.y), max((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), (injectionSwitch.y))))))) && true), ! (! (bool(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (! (false))), (_GLF_IDENTITY(! (false), false || (! (false)))) || false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + _GLF_IDENTITY((injectionSwitch.y), max((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), (injectionSwitch.y))))))), ((_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (! (false))), (_GLF_IDENTITY(! (false), false || (! (false)))) || false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + _GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y)))))))) && true) && true)))))) && true))))) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(false || _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)))) / abs(vec2(1.0, 1.0))).y, injectionSwitch.y))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y, injectionSwitch.y))))))), ((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, float(mat2(0.0, 1.0, 1.0, 0.0))), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))).y, (injectionSwitch.y) - 0.0), injectionSwitch.y, injectionSwitch.y)))))))) || false), ! (! (_GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) || false)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-484.130))), injectionSwitch.x), clamp(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(float(false))), bool(false))))) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
