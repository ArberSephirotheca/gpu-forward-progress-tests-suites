#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) - log(1.0))), false || ((injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), bool(bool((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))))))), false || (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), false || (true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))))) && true))), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y)), false)))))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-8775.0852)), float(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)))), bool(true))), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-8775.0852)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), float(mat4x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)))), bool(true))))) > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-8775.0852)), float(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)))), bool(true))), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-8775.0852)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), float(mat4x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)))), bool(true))))) > injectionSwitch.y)) && true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false))), false))))), bool(bool(bool(_GLF_IDENTITY(bvec3(((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false))), false))))))))), bool(bool(((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-75.36)), float(injectionSwitch.y), bool(true))))), exp(0.0), 1.0, sin(0.0))))))))))))))), false || _GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! _GLF_IDENTITY((! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))), true && ((! ((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))), false || ((_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), ! _GLF_IDENTITY((! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))), true && ((! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))))))))), true && (_GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))), (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))) && true))), ! (! ((! (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(2.1)), vec2(_GLF_FUZZED(3.3), (injectionSwitch)[1]), bvec2(false, true))), cos(0.0)))), injectionSwitch)).x > injectionSwitch.y))))))))), ! (! ((! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))), _GLF_IDENTITY(true && (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))), ((_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))))) || false)), false || (true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch), mix(vec2(_GLF_FUZZED(float(197834u)), _GLF_FUZZED(23.63)), vec2((clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch))[0], (clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))).x > injectionSwitch.y)))))))), ((_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))))) || false))))))))), false), false, true))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! _GLF_IDENTITY((! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))), true && ((! _GLF_IDENTITY(((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))), (! (((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))) || false)))))))), false || ((_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! _GLF_IDENTITY((! ((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))))))), true && ((! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))))))))), true && (_GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-103.262) : injectionSwitch.y)))))), ! (! ((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))))), ! (! ((! (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, vec2(0.0, 0.0) + (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))))), ! (! ((! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))), ((_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))))) || false))))))), false), false, true))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! _GLF_IDENTITY((! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))), true && ((! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))))), false || ((_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! _GLF_IDENTITY((! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch), (clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch)) + vec2(0.0, 0.0))).x > injectionSwitch.y)))))), true && ((! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))))))), (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! _GLF_IDENTITY((! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))), true && ((! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))))), false || ((_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! _GLF_IDENTITY((! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch), (clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch)) + vec2(0.0, 0.0))).x > injectionSwitch.y)))))), true && ((! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))))))), (! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! _GLF_IDENTITY((! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch), (clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch)) + vec2(0.0, 0.0))).x > injectionSwitch.y)))))), true && ((! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))))), false || ((_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)))), ! _GLF_IDENTITY((! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch), (clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch)) + vec2(0.0, 0.0))).x > injectionSwitch.y)))))), _GLF_IDENTITY(true && ((! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))), bool(bvec4(true && ((! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))), false, true, false))))))))) && true)) && true)), true && (_GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! _GLF_IDENTITY((! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))), ((! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))) && true)))), ! (! ((! (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, mix(vec2(_GLF_FUZZED(8760.1398), _GLF_FUZZED(2378.3717)), vec2((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)[0], (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)[1]), bvec2(true, true))))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(9.2, -7662.4871)) : injectionSwitch)), injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))))), ! (! ((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch)).x, min(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch)).x, min(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y))))))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))), _GLF_IDENTITY(((_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) / vec2(1.0, 1.0)), injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) / vec2(1.0, 1.0)), injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) / vec2(1.0, 1.0)), injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) / vec2(1.0, 1.0)), injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch)))))).x > injectionSwitch.y))))))))), (((_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) / vec2(1.0, 1.0)), injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) / vec2(1.0, 1.0)), injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) / vec2(1.0, 1.0)), injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) / vec2(1.0, 1.0)), injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch)))))).x > injectionSwitch.y)))))))))) || false) || false))))))), false), false, true)))))))))))))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) || false), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))).y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), min(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), vec2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))).x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)), true)), ! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), true)))), ! (_GLF_IDENTITY(! ((! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), true))))), true && (! ((! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), true))))))))), true && (_GLF_IDENTITY((! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), false || (_GLF_IDENTITY((! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), false || ((! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true && (_GLF_IDENTITY((! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, (true) || false))))), false || ((! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))), (bool(_GLF_IDENTITY((! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true && (_GLF_IDENTITY((! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) - determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))))), 1.0)), 0.0), mix(vec3((vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 0.0))[0], (vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 0.0))[1], (vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 0.0))[2]), vec3(_GLF_FUZZED(-4.8), _GLF_FUZZED(61.90), _GLF_FUZZED(-2.3)), bvec3(false, false, false))))).x < injectionSwitch.y)), true)))), false || ((! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))))) && true))))))))) || false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), min(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))).x > injectionSwitch.y))), _GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)), true)), ! _GLF_IDENTITY(_GLF_IDENTITY((! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, sqrt(1.0), 1.0, cos(0.0)))))), true)))), true && (_GLF_IDENTITY((! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), max(vec3(injectionSwitch, 1.0), vec3(injectionSwitch, 1.0))))).x < injectionSwitch.y)), true))))))), false || ((! (bool(bvec4(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ((! (true))) && true)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), (! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || false)), false || ((! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY((! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true && (_GLF_IDENTITY((! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), false || ((! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))), ! (! (_GLF_IDENTITY((! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-436.483)), bool(false))))), true)))), true && (_GLF_IDENTITY((! (bool(bvec4(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))), true)))), false || ((! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-9214.3021))))), true))))))))))))) && true))))))))) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), false || (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / _GLF_IDENTITY(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), min(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), vec2(mat3((injectionSwitch) / _GLF_IDENTITY(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), min(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), 0.0, 0.0, 0.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, sin(0.0))), abs(0.0))))).x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(injectionSwitch.y, abs(1.0), 1.0, 0.0), max(vec4(injectionSwitch.y, abs(1.0), 1.0, 0.0), vec4(injectionSwitch.y, abs(1.0), 1.0, 0.0))))))))) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)), true)), ! _GLF_IDENTITY(_GLF_IDENTITY((! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true && (_GLF_IDENTITY((! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), false || ((! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true && (_GLF_IDENTITY((! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), false || ((! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))), (bool(_GLF_IDENTITY((! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true && (_GLF_IDENTITY((! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), false || ((! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))))) && true), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true && (_GLF_IDENTITY((! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), false || ((! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))), (bool(_GLF_IDENTITY((! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true && (_GLF_IDENTITY((! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), false || ((! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))))) && true), false, true, true))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), min(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))).x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)), true)), ! _GLF_IDENTITY(_GLF_IDENTITY((! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true && (_GLF_IDENTITY((! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), false || ((! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true && (_GLF_IDENTITY((! (bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), bool(bvec3(! (! (true)), true, true)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), false || ((! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY((! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true && (_GLF_IDENTITY((! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), false || ((! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY((! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true && (_GLF_IDENTITY((! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), false || ((! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true && (_GLF_IDENTITY((! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), false || ((! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))), ! (! (bool(_GLF_IDENTITY((! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true && (_GLF_IDENTITY((! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), false || ((! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))))))), false, false)))))) && true))))))))), bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), min(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))).x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (_GLF_IDENTITY(true, ! (! (true))))), true, _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)), true)), ! _GLF_IDENTITY(_GLF_IDENTITY((! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true && (_GLF_IDENTITY((! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), false || ((! (bool(bvec4(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec4(_GLF_IDENTITY(! (true), bool(bool(! (true)))), false, true, false))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y)), true)))), true && (_GLF_IDENTITY((! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) - vec2(0.0, 0.0)).y)), true)))), false || ((! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))), (bool(_GLF_IDENTITY((! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true && (_GLF_IDENTITY((! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), false || ((! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))))) && true))))))))))))), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), min(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))).x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)), true)), ! _GLF_IDENTITY(_GLF_IDENTITY((! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true && (_GLF_IDENTITY((! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), false || ((! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true && (_GLF_IDENTITY((! (bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), bool(bvec3(! (! (true)), true, true)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), false || ((! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY((! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true && (_GLF_IDENTITY((! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), false || ((! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY((! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true && (_GLF_IDENTITY((! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), false || ((! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true && (_GLF_IDENTITY((! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), false || ((! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))), ! (! (bool(_GLF_IDENTITY((! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true && (_GLF_IDENTITY((! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), false || ((! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))))))), false, false)))))) && true))))))))), bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), min(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))).x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (_GLF_IDENTITY(true, ! (! (true))))), true, _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)), true)), ! _GLF_IDENTITY(_GLF_IDENTITY((! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true && (_GLF_IDENTITY((! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), false || ((! (bool(bvec4(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec4(_GLF_IDENTITY(! (true), bool(bool(! (true)))), false, true, false))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y)), true)))), true && (_GLF_IDENTITY((! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) - vec2(0.0, 0.0)).y)), true)))), false || ((! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))), (bool(_GLF_IDENTITY((! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true && (_GLF_IDENTITY((! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), false || ((! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))))) && true))))))))))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(4.1, 393.362)) : injectionSwitch)), 0.0, 1.0)), mat2(1.0) * (vec2(mat2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(4.1, 393.362)) : injectionSwitch)), 0.0, 1.0))))), injectionSwitch)), (injectionSwitch) + vec2(0.0, 0.0)), vec2(mat2x4(injectionSwitch, sin(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) - 0.0)) / 1.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_IDENTITY(cos(0.0), min(cos(0.0), cos(0.0))), 1.0))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)).x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)).x > injectionSwitch.y)))) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_ZERO(0.0, injectionSwitch.x))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, 0.0, _GLF_ONE(1.0, injectionSwitch.y), tan(tan(0.0)))), clamp(float(vec4(injectionSwitch.y, 0.0, _GLF_ONE(1.0, injectionSwitch.y), tan(tan(0.0)))), float(vec4(injectionSwitch.y, 0.0, _GLF_ONE(1.0, injectionSwitch.y), tan(tan(0.0)))), float(vec4(injectionSwitch.y, 0.0, _GLF_ONE(1.0, injectionSwitch.y), tan(tan(0.0))))))), ! (! (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, _GLF_IDENTITY(false, (false) || false), true)), ! (! (bool(bvec4(true, false, false, true)))))) && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 1.0, round(length(normalize(abs(vec2(1.0, 1.0))))), exp(log(1.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), true, _GLF_IDENTITY(false, (false) && true))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(6254.1555)), vec2(_GLF_IDENTITY(_GLF_FUZZED(242.149), (_GLF_FUZZED(242.149)) * 1.0), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)) + sqrt(0.0)))) < injectionSwitch.y))))).y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(length(0.0), max(length(0.0), length(0.0))), 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(length(0.0), 0.0, 1.0), vec3(1.0, 1.0, 0.0))), sqrt(0.0), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0), transpose(_GLF_IDENTITY(transpose(mat4x3(injectionSwitch, _GLF_IDENTITY(dot(vec3(length(0.0), 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(length(0.0), 0.0, 1.0), _GLF_IDENTITY(vec3(1.0, 1.0, 0.0), max(vec3(1.0, 1.0, 0.0), vec3(1.0, 1.0, 0.0))))), sqrt(0.0), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0)), 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0)), (transpose(mat4x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(dot(vec3(length(0.0), 0.0, 1.0), vec3(1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))), dot(vec3(length(0.0), 0.0, 1.0), vec3(1.0, 1.0, 0.0))), sqrt(0.0), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-3.4))), 0.0)), 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0))) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) / cos(vec2(0.0, 0.0)), min((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) / cos(_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) / vec2(1.0, 1.0))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) / cos(vec2(0.0, 0.0))))).y, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(4361.2365)), vec2(_GLF_FUZZED(-711.124), ((injectionSwitch))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) * mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(2643.6802)), float(1.0), bool(true)))))) / cos(vec2(0.0, 0.0)), min((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) / cos(vec2(0.0, 0.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) / cos(vec2(0.0, 0.0))))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) / cos(vec2(0.0, 0.0)), min((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) / cos(vec2(0.0, 0.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) / cos(vec2(0.0, 0.0))))).y)))), false, false, _GLF_IDENTITY(false, (false) && true))))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), ! (! (bool(bvec4(false, true, true, true))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), false, false, false))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-53.95, -75.71)))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), float(_GLF_FUZZED(339.295)), bool(false)))) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(256.152, -26.79, 6966.6627, 1932.6804)))))).y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), float(_GLF_FUZZED(339.295)), bool(false)))) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(256.152, -26.79, 6966.6627, 1932.6804)))))).y) / 1.0)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), (bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))) || false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), bvec3(bvec4(bvec3(bvec4(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true, false))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   return;
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(828.219), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(29.68)), bvec2(true, false))).x > injectionSwitch.y))))
  return;
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id));
 uint next_virtual_gid = workgroup_base + subgroup_base + ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, int(ivec2(1, 1))), min(subgroup_local_id + _GLF_IDENTITY(1, int(ivec2(1, 1))), subgroup_local_id + _GLF_IDENTITY(1, int(ivec2(1, 1)))))) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), subgroup_size))) / 1u));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(833.389), _GLF_FUZZED(1146.6606)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), true, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), true, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, false || (false)), true, false)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! (false)))), ! (! ((_GLF_IDENTITY(! (false), false || (! (false))))))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, true && (false))))))
      return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[virtual_gid], _GLF_IDENTITY(uint(1), max(uint(1), uint(1))), 4, 64, 4);
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), _GLF_IDENTITY(min(uint(2), uint(2)), (_GLF_IDENTITY(min(uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) | (2))) | (_GLF_IDENTITY(2, (false ? _GLF_FUZZED(32484) : 2))))), uint(2)), (_GLF_IDENTITY(min(uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) | (2))) | (_GLF_IDENTITY(2, (false ? _GLF_FUZZED(32484) : 2))))), uint(2)), (min(uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) | (2))) | (_GLF_IDENTITY(2, (false ? _GLF_FUZZED(32484) : 2))))), uint(2))) >> 0u)) | (min(uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) | (2))) | (_GLF_IDENTITY(2, (false ? _GLF_FUZZED(32484) : 2))))), uint(2))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-6.7))) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
