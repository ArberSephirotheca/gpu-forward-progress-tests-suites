#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_0 {
 vec4 _f0;
 int _f1;
 bool _f2;
 uint subgroup_id;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
} ;

struct _GLF_struct_2 {
 mat2 _f0;
 mat2 _f1;
 _GLF_struct_1 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(mat4x2(-235.728, 8547.8618, -824.891, 167.960, -7.9, 35.57, -4749.1471, 579.789)[1]))).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))))), bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))))))
  return;
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(mat2(1.0), _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(_GLF_IDENTITY(outerProduct(injectionSwitch, injectionSwitch), (true ? _GLF_IDENTITY(outerProduct(injectionSwitch, injectionSwitch), (false ? _GLF_FUZZED(mat2(-91.46, -3.6, -8.3, -923.373)) : outerProduct(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) - vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)))))))) : _GLF_FUZZED((mat2(212.946, -897.502, -196.746, _GLF_IDENTITY(7438.6575, (true ? _GLF_IDENTITY(7438.6575, min(7438.6575, 7438.6575)) : _GLF_FUZZED(2290.6851))))))))) : mat2(1.0))), _GLF_struct_1(_GLF_struct_0(vec4(1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (0 >> _GLF_IDENTITY(int(1), int(1))) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1 ^ 1), ((1 ^ 1)) / 1) + (1)), max(_GLF_IDENTITY(1, _GLF_IDENTITY((1 ^ 1), ((1 ^ 1)) / 1) + (1)), _GLF_IDENTITY(1, _GLF_IDENTITY((1 ^ 1), ((1 ^ 1)) / 1) + (1)))), _GLF_IDENTITY((1), ((1)) / _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) - 0), _GLF_IDENTITY(1, (1) << 0)))) << 0)) / 1))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(1, min(1, 1))), int(1))), ((0 >> _GLF_IDENTITY(int(1), int(1)))) + 0), clamp(_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(1, min(1, 1))), int(1))), ((0 >> _GLF_IDENTITY(int(1), int(1)))) + 0), _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(1, min(1, 1))), int(1))), ((0 >> _GLF_IDENTITY(int(1), int(1)))) + 0), _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(1, min(1, 1))), int(1))), ((0 >> _GLF_IDENTITY(int(1), int(1)))) + 0))) + (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), int(ivec4(_GLF_IDENTITY(1, (1) / 1), 1, 0, 1))))), ~ (~ (_GLF_IDENTITY(1, _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(1), int(1))) + (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, min(1, 1))), clamp(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, max(1, 1)), 1)), min(1, 1))), ~ (_GLF_IDENTITY(1, min(1, 1))), ~ (_GLF_IDENTITY(1, min(1, 1)))))))) / 1)), 0 ^ ((0 >> _GLF_IDENTITY(int(1), int(1))) + (_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), (1) / 1))))))))), int(ivec2((_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, clamp(1, 1, 1))))), ((0 >> _GLF_IDENTITY(int(1), int(1)))) + 0) + (_GLF_IDENTITY(1, (1) / 1))), ~ (~ (_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(1), int(1))) + (_GLF_IDENTITY(1, (1) / 1)), max((0 >> _GLF_IDENTITY(int(1), int(1))) + (_GLF_IDENTITY(1, (1) / 1)), (0 >> _GLF_IDENTITY(int(1), int(1))) + (_GLF_IDENTITY(1, (1) / 1)))), _GLF_IDENTITY(0, int(ivec2(0, 0))) ^ _GLF_IDENTITY(((0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(70520) : _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(1, 1, (0 & -5648)), (ivec3(1, 1, (0 & -5648))) * ivec3(1, 1, 1))), max(int(_GLF_IDENTITY(ivec3(1, 1, (0 & -5648)), (ivec3(1, 1, (0 & -5648))) * ivec3(1, 1, 1))), int(_GLF_IDENTITY(ivec3(1, 1, (0 & -5648)), (ivec3(1, 1, (0 & -5648))) * ivec3(1, 1, 1))))))))), int(1))) + (_GLF_IDENTITY(1, (1) / 1))), (((0 >> _GLF_IDENTITY(int(1), int(1))) + (_GLF_IDENTITY(1, (1) / 1)))) / 1))))))), int(_GLF_ZERO(0.0, injectionSwitch.x))))) >> 0), (false ? _GLF_FUZZED(59843) : _GLF_IDENTITY(_GLF_IDENTITY(1, (0 >> _GLF_IDENTITY(int(1), int(1))) + (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0) ^ 1) + (1)), _GLF_IDENTITY((1), _GLF_IDENTITY(_GLF_IDENTITY(((1)), 0 ^ (((1)))), max(((1)), _GLF_IDENTITY(((1)), min(((1)), ((1)))))) / _GLF_IDENTITY(1, (1) << 0)) / 1))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(1, min(1, 1))), int(1))), (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(1), int(1))), int(ivec4((0 >> _GLF_IDENTITY(int(1), int(1))), 1, ((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) >> 0))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), max(int(5), int(5))))), 0)))) + 0), (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(1, min(1, 1))), int(1))), _GLF_IDENTITY(((0 >> _GLF_IDENTITY(int(1), int(1)))) + 0, (((0 >> _GLF_IDENTITY(int(1), int(1)))) + 0) | (((0 >> _GLF_IDENTITY(int(1), int(1)))) + 0)))) | (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(1, min(1, 1))), int(1))), ((0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (~ (int(1))))))) + 0))) + (_GLF_IDENTITY(1, (1) / 1))), ~ (~ (_GLF_IDENTITY(1, _GLF_IDENTITY((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), (true ? _GLF_IDENTITY(int(1), (int(1)) ^ 0) : _GLF_FUZZED(47020))), _GLF_IDENTITY(int(1), _GLF_IDENTITY((int(1)), clamp((int(1)), (int(1)), (int(1)))) | (_GLF_IDENTITY(int(1), (int(1)) + 0))))) + (_GLF_IDENTITY(1, (1) / 1)), 0 ^ ((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), int(int(_GLF_IDENTITY(int(1), int(1)))))) * 1)) + (_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), (1) / 1))))))))), int(ivec2((_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(1), int(1)), (0 >> _GLF_IDENTITY(int(1), int(1))) << _GLF_IDENTITY((_GLF_IDENTITY(0, ~ (~ (0))) << _GLF_IDENTITY(int(7), int(7))), int(int((_GLF_IDENTITY(0, ~ (~ (0))) << _GLF_IDENTITY(int(7), int(7)))))))), ((0 >> _GLF_IDENTITY(int(1), int(1)))) + 0) + (_GLF_IDENTITY(1, (1) / 1)), (_GLF_IDENTITY((_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(1), int(1)), (0 >> _GLF_IDENTITY(int(1), int(1))) << (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) - 0)), int(7))))), ((0 >> _GLF_IDENTITY(int(1), int(1)))) + 0) + (_GLF_IDENTITY(1, (1) / 1))) | 0)), ~ (~ (_GLF_IDENTITY(1, _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(sign(-15854)) : 1))), int(1))) + (_GLF_IDENTITY(1, (1) / 1)), _GLF_IDENTITY(0, int(ivec2(0, 0))) ^ _GLF_IDENTITY(((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), 0 ^ (int(_GLF_IDENTITY(1, (1) ^ 0)))), int(1))) + (_GLF_IDENTITY(1, (1) / 1))), ((_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(1), int(1))), _GLF_IDENTITY((_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(1), int(1))), int(ivec3((0 >> _GLF_IDENTITY(int(1), int(1))), 0, 0)))), ((_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(1), int(1))), int(ivec3((0 >> _GLF_IDENTITY(int(1), int(1))), 0, 0))))) + _GLF_IDENTITY(0, clamp(0, 0, 0))) * 1) + (_GLF_IDENTITY(1, (1) / 1)))) / 1))))))), int(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x))))) >> 0))), true, gl_SubgroupID)));
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), true)), ! (_GLF_IDENTITY(! (bool(bvec2((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), true))), true && (! (bool(bvec2((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), true))))))), false || (bool(bvec2((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), true))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), _GLF_IDENTITY(bool(bvec2((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), true)), false || (bool(bvec2((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), true))))), ! (! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), _GLF_IDENTITY(bool(bvec2((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false))))))))))), true)), false || (bool(bvec2((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), true)))))))))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), _GLF_IDENTITY(bool(bvec2((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), true)), false || (bool(bvec2((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), true))))), ! (! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), _GLF_IDENTITY(bool(bvec2((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), true)), false || (bool(bvec2((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), true)))))))), ! (! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), _GLF_IDENTITY(bool(bvec2((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), true, true, false)), (bool(bvec4((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), true, true, false))) && true))), true)), false || (bool(bvec2((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), true)))))))))), bool(bvec4(bool(bool(_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), _GLF_IDENTITY(bool(bvec2((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), true)), false || (bool(bvec2((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), true))))), ! (! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), false || (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))))))))), _GLF_IDENTITY(bool(bvec2((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), true)), false || (bool(bvec2((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), true)))))))))), true, false, false)))) || false)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), _GLF_IDENTITY(bool(bvec2((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), true)), false || (bool(bvec2((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_DEAD(false)))))))), true))))))), true && ((_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), _GLF_IDENTITY(bool(bvec2((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), true)), false || (bool(bvec2((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))))), true))))))))))) || false, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), _GLF_IDENTITY(bool(bvec2((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), true)), _GLF_IDENTITY(false, true && (false)) || (bool(bvec2((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), true))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), _GLF_IDENTITY(bool(bvec2((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && true), ! (! (_GLF_DEAD(false)))))), true)), false || (bool(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), bool(_GLF_IDENTITY(bool((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), bool(bvec3(bool((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), false, true))))), true))))), ! (! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), _GLF_IDENTITY(bool(bvec2((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), true)), false || (bool(bvec2((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), true)))))))))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), (! (! (_GLF_DEAD(false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), true)), false || (bool(bvec2((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))), ! (! (_GLF_DEAD(false)))))), true)))), (_GLF_IDENTITY(bool(bvec2((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))), true)), false || (bool(bvec2((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), true))))) || false)), ! (! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), _GLF_IDENTITY(bool(bvec2((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true)))))))), true)), false || (bool(bvec2((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true))))), true)))))))))), bool(bvec4(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), _GLF_IDENTITY(bool(bvec2((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), true)), false || (bool(bvec2((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), true))))), ! (! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bvec2(bool(bvec3(false, false, false)), true))))) && true))))))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), true && (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))), true)), false || (bool(bvec2((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), true)))))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), _GLF_IDENTITY(bool(bvec2((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (! (! (! (_GLF_DEAD(false)))))))))) || false)))), true)), _GLF_IDENTITY(false || (bool(bvec2((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), true))), true && (_GLF_IDENTITY(false || (bool(bvec2((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), true))), (false || (bool(bvec2((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), true)))) && true))))), ! (! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))))), true)), false || (bool(bvec2((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), ! (! (! ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))))))), true)))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), true), bvec2(_GLF_IDENTITY(bvec2(bvec2((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), true)), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), true))), bvec2(bvec3(bvec2(bvec2(bvec2((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), true))), true)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), true))), bvec2(bvec3(bvec2(bvec2(bvec2((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), true))), true)))), true))))))), false || (bool(_GLF_IDENTITY(bvec2((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), true), bvec2(bvec4(_GLF_IDENTITY(bvec2((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), true), bvec2(bvec2(bvec2((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), true)))), true, true))))))), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), _GLF_IDENTITY(bool(bvec2((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), true)), false || (bool(bvec2((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), true))))), true && (_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), _GLF_IDENTITY(bool(bvec2((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), true)), false || (bool(bvec2((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), true))))), true && (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec2((_GLF_DEAD(false)), true))))))))), _GLF_IDENTITY(bool(bvec2((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), _GLF_IDENTITY(true, ! (! (true))))), false || (bool(bvec2((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), true)))))))))))), false || (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), false || (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))), _GLF_IDENTITY(bool(bvec2((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), true)), false || (bool(bvec2((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), true))))), ! (! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), _GLF_IDENTITY(bool(bvec2((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), true)), false || (bool(bvec2((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), true)))))))))), true, true, false)))))))), true, false, false)))) || false)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), _GLF_IDENTITY(bool(bvec2((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), true)), false || (bool(bvec2((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), true))))))), true && ((_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), _GLF_IDENTITY(bool(bvec2((! (_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true)), bool(bvec4(_GLF_IDENTITY((! (_GLF_DEAD(false))), ! (_GLF_IDENTITY(! ((! (_GLF_DEAD(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! ((! (_GLF_DEAD(false)))))))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true)), false || (bool(bvec2((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))))), true))))))))))) || false) || false)))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, ~ _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((~ _GLF_IDENTITY((gl_NumWorkGroups.x), (_GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) | ((gl_NumWorkGroups.x)))) >> 0u)), ((~ _GLF_IDENTITY((gl_NumWorkGroups.x), (_GLF_IDENTITY((gl_NumWorkGroups.x), ((_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u))) | ((gl_NumWorkGroups.x)))) >> 0u))) / 1u), (true ? _GLF_IDENTITY((~ _GLF_IDENTITY((gl_NumWorkGroups.x), (_GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) | ((gl_NumWorkGroups.x)))) >> 0u)), ((~ _GLF_IDENTITY((gl_NumWorkGroups.x), (_GLF_IDENTITY((gl_NumWorkGroups.x), ((_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u))) | ((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups)).x)))) >> 0u))) / 1u) : _GLF_FUZZED(uvec2(76810u, 97260u).r))), (0u >> _GLF_IDENTITY(uint(7u), uint(7u))) ^ ((~ (gl_NumWorkGroups.x)))))) | (_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((uvec3(75974u, 46189u, 176764u) & _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u), min(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) - uvec3(0u, 0u, 0u)))))))), ((uvec3(75974u, 46189u, 176764u) & _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u), min(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) - uvec3(0u, 0u, 0u))))))))) | ((uvec3(75974u, 46189u, 176764u) & _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u), min(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) - uvec3(0u, 0u, 0u)))))))))) | (gl_NumWorkGroups)).x) - 0u, (false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((uvec3(75974u, 46189u, 176764u) & uvec3(0u, 0u, 0u)) | (gl_NumWorkGroups), clamp((uvec3(75974u, 46189u, 176764u) & uvec3(0u, 0u, 0u)) | _GLF_IDENTITY((gl_NumWorkGroups), min((gl_NumWorkGroups), (gl_NumWorkGroups))), (uvec3(75974u, 46189u, 176764u) & uvec3(0u, 0u, 0u)) | (gl_NumWorkGroups), (uvec3(75974u, 46189u, 176764u) & uvec3(0u, 0u, 0u)) | (gl_NumWorkGroups)))).x) - 0u)), clamp(_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((uvec3(75974u, 46189u, 176764u) & uvec3(0u, 0u, 0u)) | (gl_NumWorkGroups), max((uvec3(75974u, _GLF_IDENTITY(46189u, 0u ^ (46189u)), 176764u) & uvec3(0u, 0u, 0u)) | (gl_NumWorkGroups), (uvec3(75974u, 46189u, 176764u) & uvec3(0u, 0u, 0u)) | (gl_NumWorkGroups)))).x) - 0u, (false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(uvec3(75974u, 46189u, 176764u) & uvec3(0u, 0u, 0u), (uvec3(75974u, 46189u, 176764u) & uvec3(0u, 0u, 0u)) | (_GLF_IDENTITY(uvec3(75974u, 46189u, 176764u) & _GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))))), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uvec3(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u, 0u) : _GLF_FUZZED(_GLF_IDENTITY(uvec3(60987u, 176154u, 113457u), (false ? _GLF_FUZZED(uvec3(18811u, 50400u, 42037u)) : _GLF_IDENTITY(uvec3(60987u, 176154u, 113457u), max(uvec3(60987u, 176154u, 113457u), uvec3(60987u, 176154u, 113457u)))))))) ^ (uvec3(75974u, 46189u, _GLF_IDENTITY(176764u, (false ? _GLF_FUZZED(subgroup_size) : 176764u))) & uvec3(0u, 0u, 0u)))))) | (gl_NumWorkGroups)).x) - 0u)), _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(75974u, _GLF_IDENTITY(46189u, (false ? _GLF_FUZZED(subgroup_size) : 46189u)), 176764u) & _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u))))) | (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)))).x) - 0u, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(75974u, 46189u, 176764u) & uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) << 0u))), 0u)) | (gl_NumWorkGroups)).x) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(75974u, 46189u, 176764u) & uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u ^ 0u) | _GLF_IDENTITY((0u), max((0u), (0u)))), 1u * (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) >> 0u))), 0u)) | (gl_NumWorkGroups)).x) - 0u, (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(uvec3(75974u, 46189u, 176764u), (uvec3(75974u, 46189u, 176764u)) / uvec3(1u, 1u, 1u)) & uvec3(0u, 0u, 0u)) | (gl_NumWorkGroups)).x) - 0u, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_FUZZED(subgroup_size)) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_FUZZED(subgroup_size)) >> 0u), max(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_FUZZED(subgroup_size)) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_FUZZED(subgroup_size)) >> 0u), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_FUZZED(subgroup_size)) >> 0u)) - 0u)))) * 1u))) : (_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(75974u, 46189u, 176764u) & uvec3(0u, 0u, 0u)) | _GLF_IDENTITY((gl_NumWorkGroups), min((gl_NumWorkGroups), (gl_NumWorkGroups)))).x) - 0u) / 1u))), uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(_GLF_IDENTITY(75974u, _GLF_IDENTITY(0u, (0u) | 0u) | (75974u)), 46189u, 176764u) & _GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u))), (uvec3(0u, 0u, 0u)) * uvec3(1u, _GLF_IDENTITY(1u, (1u) | (1u)), 1u))) | (gl_NumWorkGroups)).x) - 0u, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(uvec3(75974u, _GLF_IDENTITY(46189u, (_GLF_IDENTITY(46189u, uint(uvec3(46189u, 1u, 0u)))) | (_GLF_IDENTITY(46189u, (46189u) - 0u))), 176764u) & uvec3(0u, 0u, 0u), clamp(uvec3(75974u, _GLF_IDENTITY(46189u, (_GLF_IDENTITY(46189u, uint(uvec3(46189u, 1u, 0u)))) | (_GLF_IDENTITY(46189u, (46189u) - 0u))), 176764u) & uvec3(0u, 0u, 0u), uvec3(75974u, _GLF_IDENTITY(46189u, (_GLF_IDENTITY(46189u, uint(uvec3(46189u, 1u, 0u)))) | (_GLF_IDENTITY(46189u, (46189u) - 0u))), 176764u) & uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(75974u, _GLF_IDENTITY(46189u, (_GLF_IDENTITY(46189u, uint(uvec3(46189u, 1u, 0u)))) | (_GLF_IDENTITY(46189u, (46189u) - 0u))), 176764u) & uvec3(0u, 0u, 0u), max(uvec3(75974u, _GLF_IDENTITY(46189u, (_GLF_IDENTITY(46189u, uint(uvec3(46189u, 1u, 0u)))) | (_GLF_IDENTITY(46189u, (46189u) - 0u))), 176764u) & uvec3(0u, 0u, 0u), uvec3(75974u, _GLF_IDENTITY(46189u, (_GLF_IDENTITY(46189u, uint(uvec3(46189u, 1u, 0u)))) | (_GLF_IDENTITY(46189u, (46189u) - 0u))), 176764u) & uvec3(0u, 0u, 0u)))))) | (gl_NumWorkGroups)).x) - 0u), ((false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(75974u, 46189u, 176764u) & uvec3(0u, 0u, 0u)) | (gl_NumWorkGroups)).x) - 0u)) | 0u)), _GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, max(1u, 1u)), 0u))), 1u, 0u))))))));
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(max(gl_WorkGroupID, gl_WorkGroupID), ~ (~ (max(gl_WorkGroupID, gl_WorkGroupID))))), max(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(max(gl_WorkGroupID, gl_WorkGroupID), ~ (~ (max(gl_WorkGroupID, gl_WorkGroupID))))), _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(max(gl_WorkGroupID, gl_WorkGroupID), ~ (~ (max(gl_WorkGroupID, gl_WorkGroupID))))))).x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 1u))), max(gl_WorkGroupID, gl_WorkGroupID)).x) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)).x, 0u ^ (_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (true ? _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, sqrt(0.0) + (0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED((uvec3(40173u, 107299u, 19980u) | workgroup_size)))))).x))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x))) / 1.0))) < injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), (false ? _GLF_FUZZED(5128.0394) : _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))), injectionSwitch.x)))) < injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x)))) < injectionSwitch.y))))) && true), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED((-4691.1147 + (6.7 / 2.8)))), bool(false))), min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x)))) < injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x)))) < injectionSwitch.y)))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, 0.0 + _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x), clamp(_GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) - 0.0), (injectionSwitch.x), _GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) / 1.0))), clamp((injectionSwitch.x), _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED(31.19)), bool(false))), _GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) - 0.0)))), injectionSwitch.x)), _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, 0.0 + _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x), clamp(_GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) - 0.0), (injectionSwitch.x), _GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) / 1.0))), clamp((injectionSwitch.x), _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED(31.19)), bool(false))), _GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) - 0.0)))), injectionSwitch.x)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)), (float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, 0.0 + _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x), clamp(_GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) - 0.0), (injectionSwitch.x), _GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) / 1.0))), clamp((injectionSwitch.x), _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED(31.19)), bool(false))), _GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) - 0.0)))), injectionSwitch.x)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))) - 0.0)))) < injectionSwitch.y), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-7.6) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x)), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x)))))))) < injectionSwitch.y))), (_GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-7.6) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x)), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x)))))))) < injectionSwitch.y))), bool(bvec2(! (! ((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-7.6) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x)), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x)))))))) < injectionSwitch.y))), true)))) && true))) && true)) || false)) && (_GLF_DEAD(false)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x < injectionSwitch.y)) && (_GLF_DEAD(false)), ! (! _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))), bool(bool((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false)))))), false, _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (bool(bvec3(_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))), bool(bool((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) && (_GLF_DEAD(false)))))), false, true)))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))), bool(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) && (_GLF_DEAD(false)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))), false))))))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))) || false)))))), _GLF_IDENTITY(_GLF_IDENTITY(true && (! _GLF_IDENTITY((_GLF_DEAD(false)), ! (_GLF_IDENTITY(! ((_GLF_DEAD(false))), (! ((_GLF_DEAD(false)))) && true)))), ! (_GLF_IDENTITY(! (true && (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))))), _GLF_IDENTITY(! (! (! (true && (! (_GLF_DEAD(false)))))), (! (! (! (true && (! (_GLF_DEAD(false))))))) && true)))), bool(bvec2(_GLF_IDENTITY(true && (! _GLF_IDENTITY((_GLF_DEAD(false)), ! (_GLF_IDENTITY(! ((_GLF_DEAD(false))), (! ((_GLF_DEAD(false)))) && true)))), ! (_GLF_IDENTITY(! (true && (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! (true && (! (_GLF_DEAD(false))))), bool(bool(_GLF_IDENTITY(! (! (true && (! (_GLF_DEAD(false))))), bool(bool(! (! (true && (! (_GLF_DEAD(false)))))))))))), (! (! (! (true && (! (_GLF_DEAD(false))))))) && true)))), false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) && true))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_2._f2._f0.subgroup_id * subgroup_size, ~ (~ (workgroup_base + _GLF_struct_replacement_2._f2._f0.subgroup_id * subgroup_size))) + _GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), subgroup_local_id));
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (0u & 99327u) + (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(workgroup_base, (workgroup_base) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) + _GLF_IDENTITY(_GLF_struct_replacement_2._f2._f0.subgroup_id, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f2._f0.subgroup_id, min(_GLF_struct_replacement_2._f2._f0.subgroup_id, _GLF_IDENTITY(_GLF_struct_replacement_2._f2._f0.subgroup_id, ~ (~ (_GLF_struct_replacement_2._f2._f0.subgroup_id))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_2._f2._f0.subgroup_id, min(_GLF_struct_replacement_2._f2._f0.subgroup_id, _GLF_IDENTITY(_GLF_struct_replacement_2._f2._f0.subgroup_id, ~ (~ (_GLF_struct_replacement_2._f2._f0.subgroup_id)))))), ((_GLF_IDENTITY(_GLF_struct_replacement_2._f2._f0.subgroup_id, min(_GLF_struct_replacement_2._f2._f0.subgroup_id, _GLF_IDENTITY(_GLF_struct_replacement_2._f2._f0.subgroup_id, ~ (~ (_GLF_struct_replacement_2._f2._f0.subgroup_id))))))) - 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f2._f0.subgroup_id, min(_GLF_struct_replacement_2._f2._f0.subgroup_id, _GLF_IDENTITY(_GLF_struct_replacement_2._f2._f0.subgroup_id, ~ (~ (_GLF_struct_replacement_2._f2._f0.subgroup_id))))), 0u ^ (_GLF_IDENTITY(_GLF_struct_replacement_2._f2._f0.subgroup_id, min(_GLF_struct_replacement_2._f2._f0.subgroup_id, _GLF_IDENTITY(_GLF_struct_replacement_2._f2._f0.subgroup_id, ~ (~ (_GLF_struct_replacement_2._f2._f0.subgroup_id))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f2._f0.subgroup_id, min(_GLF_struct_replacement_2._f2._f0.subgroup_id, _GLF_IDENTITY(_GLF_struct_replacement_2._f2._f0.subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_struct_replacement_2._f2._f0.subgroup_id), clamp(~ (_GLF_struct_replacement_2._f2._f0.subgroup_id), ~ (_GLF_struct_replacement_2._f2._f0.subgroup_id), ~ (_GLF_struct_replacement_2._f2._f0.subgroup_id))))))), (_GLF_IDENTITY(_GLF_struct_replacement_2._f2._f0.subgroup_id, min(_GLF_struct_replacement_2._f2._f0.subgroup_id, _GLF_IDENTITY(_GLF_struct_replacement_2._f2._f0.subgroup_id, ~ (~ (_GLF_struct_replacement_2._f2._f0.subgroup_id)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f2._f0.subgroup_id, min(_GLF_struct_replacement_2._f2._f0.subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f2._f0.subgroup_id, max(_GLF_struct_replacement_2._f2._f0.subgroup_id, _GLF_struct_replacement_2._f2._f0.subgroup_id)), ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_2._f2._f0.subgroup_id, clamp(_GLF_struct_replacement_2._f2._f0.subgroup_id, _GLF_struct_replacement_2._f2._f0.subgroup_id, _GLF_struct_replacement_2._f2._f0.subgroup_id))))))), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f2._f0.subgroup_id, min(_GLF_struct_replacement_2._f2._f0.subgroup_id, _GLF_IDENTITY(_GLF_struct_replacement_2._f2._f0.subgroup_id, ~ (~ (_GLF_struct_replacement_2._f2._f0.subgroup_id))))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f2._f0.subgroup_id, min(_GLF_struct_replacement_2._f2._f0.subgroup_id, _GLF_IDENTITY(_GLF_struct_replacement_2._f2._f0.subgroup_id, ~ (~ (_GLF_struct_replacement_2._f2._f0.subgroup_id))))), max(_GLF_IDENTITY(_GLF_struct_replacement_2._f2._f0.subgroup_id, min(_GLF_struct_replacement_2._f2._f0.subgroup_id, _GLF_IDENTITY(_GLF_struct_replacement_2._f2._f0.subgroup_id, ~ (~ (_GLF_struct_replacement_2._f2._f0.subgroup_id))))), _GLF_IDENTITY(_GLF_struct_replacement_2._f2._f0.subgroup_id, min(_GLF_struct_replacement_2._f2._f0.subgroup_id, _GLF_IDENTITY(_GLF_struct_replacement_2._f2._f0.subgroup_id, ~ (~ (_GLF_struct_replacement_2._f2._f0.subgroup_id)))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f2._f0.subgroup_id, min(_GLF_struct_replacement_2._f2._f0.subgroup_id, _GLF_IDENTITY(_GLF_struct_replacement_2._f2._f0.subgroup_id, ~ (~ (_GLF_struct_replacement_2._f2._f0.subgroup_id))))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f2._f0.subgroup_id, min(_GLF_struct_replacement_2._f2._f0.subgroup_id, _GLF_IDENTITY(_GLF_struct_replacement_2._f2._f0.subgroup_id, ~ (~ (_GLF_struct_replacement_2._f2._f0.subgroup_id))))), max(_GLF_IDENTITY(_GLF_struct_replacement_2._f2._f0.subgroup_id, min(_GLF_struct_replacement_2._f2._f0.subgroup_id, _GLF_IDENTITY(_GLF_struct_replacement_2._f2._f0.subgroup_id, ~ (~ (_GLF_struct_replacement_2._f2._f0.subgroup_id))))), _GLF_IDENTITY(_GLF_struct_replacement_2._f2._f0.subgroup_id, min(_GLF_struct_replacement_2._f2._f0.subgroup_id, _GLF_IDENTITY(_GLF_struct_replacement_2._f2._f0.subgroup_id, ~ (~ (_GLF_struct_replacement_2._f2._f0.subgroup_id)))))))))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f2._f0.subgroup_id, min(_GLF_struct_replacement_2._f2._f0.subgroup_id, _GLF_IDENTITY(_GLF_struct_replacement_2._f2._f0.subgroup_id, ~ (~ (_GLF_struct_replacement_2._f2._f0.subgroup_id))))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f2._f0.subgroup_id, min(_GLF_struct_replacement_2._f2._f0.subgroup_id, _GLF_IDENTITY(_GLF_struct_replacement_2._f2._f0.subgroup_id, ~ (~ (_GLF_struct_replacement_2._f2._f0.subgroup_id))))), max(_GLF_IDENTITY(_GLF_struct_replacement_2._f2._f0.subgroup_id, min(_GLF_struct_replacement_2._f2._f0.subgroup_id, _GLF_IDENTITY(_GLF_struct_replacement_2._f2._f0.subgroup_id, ~ (~ (_GLF_struct_replacement_2._f2._f0.subgroup_id))))), _GLF_IDENTITY(_GLF_struct_replacement_2._f2._f0.subgroup_id, min(_GLF_struct_replacement_2._f2._f0.subgroup_id, _GLF_IDENTITY(_GLF_struct_replacement_2._f2._f0.subgroup_id, ~ (~ (_GLF_struct_replacement_2._f2._f0.subgroup_id)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f2._f0.subgroup_id, min(_GLF_struct_replacement_2._f2._f0.subgroup_id, _GLF_IDENTITY(_GLF_struct_replacement_2._f2._f0.subgroup_id, ~ (~ (_GLF_struct_replacement_2._f2._f0.subgroup_id))))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f2._f0.subgroup_id, min(_GLF_struct_replacement_2._f2._f0.subgroup_id, _GLF_IDENTITY(_GLF_struct_replacement_2._f2._f0.subgroup_id, ~ (~ (_GLF_struct_replacement_2._f2._f0.subgroup_id))))), max(_GLF_IDENTITY(_GLF_struct_replacement_2._f2._f0.subgroup_id, min(_GLF_struct_replacement_2._f2._f0.subgroup_id, _GLF_IDENTITY(_GLF_struct_replacement_2._f2._f0.subgroup_id, ~ (~ (_GLF_struct_replacement_2._f2._f0.subgroup_id))))), _GLF_IDENTITY(_GLF_struct_replacement_2._f2._f0.subgroup_id, min(_GLF_struct_replacement_2._f2._f0.subgroup_id, _GLF_IDENTITY(_GLF_struct_replacement_2._f2._f0.subgroup_id, ~ (~ (_GLF_struct_replacement_2._f2._f0.subgroup_id)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f2._f0.subgroup_id, min(_GLF_struct_replacement_2._f2._f0.subgroup_id, _GLF_IDENTITY(_GLF_struct_replacement_2._f2._f0.subgroup_id, ~ (~ (_GLF_struct_replacement_2._f2._f0.subgroup_id))))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f2._f0.subgroup_id, min(_GLF_struct_replacement_2._f2._f0.subgroup_id, _GLF_IDENTITY(_GLF_struct_replacement_2._f2._f0.subgroup_id, ~ (~ (_GLF_struct_replacement_2._f2._f0.subgroup_id))))), max(_GLF_IDENTITY(_GLF_struct_replacement_2._f2._f0.subgroup_id, min(_GLF_struct_replacement_2._f2._f0.subgroup_id, _GLF_IDENTITY(_GLF_struct_replacement_2._f2._f0.subgroup_id, ~ (~ (_GLF_struct_replacement_2._f2._f0.subgroup_id))))), _GLF_IDENTITY(_GLF_struct_replacement_2._f2._f0.subgroup_id, min(_GLF_struct_replacement_2._f2._f0.subgroup_id, _GLF_IDENTITY(_GLF_struct_replacement_2._f2._f0.subgroup_id, ~ (~ (_GLF_struct_replacement_2._f2._f0.subgroup_id))))))))))))) | 0u))))) >> 0u), _GLF_IDENTITY(_GLF_struct_replacement_2._f2._f0.subgroup_id, (true ? _GLF_struct_replacement_2._f2._f0.subgroup_id : _GLF_FUZZED(clamp(_GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u), workgroup_base, subgroup_local_id)))), _GLF_struct_replacement_2._f2._f0.subgroup_id)) * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) * 1u) % _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))), subgroup_size)));
 atomicStore(buf[virtual_gid], uint(1), _GLF_IDENTITY(4, min(4, 4)), 64, 4);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec3(false || (false), true, true)))))))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false))))), ! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false))))))))), true, false), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))), true, false), false)))))))), true && _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), bool(bool(_GLF_IDENTITY(false, false || (false)))))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))), true, false), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))), true, false), false)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), false, true))), bool(bool(_GLF_IDENTITY(false, false || (false)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), false, true))), bool(bool(_GLF_IDENTITY(false, false || (false))))))), true && (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), false, true))), bool(bool(_GLF_IDENTITY(false, false || (false))))))), ! (! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), false, true))), bool(bool(_GLF_IDENTITY(false, false || (false)))))))))))))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))), true, false), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))), true, false), false))))))), ! (_GLF_IDENTITY(! (bool((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(3.1)), bool(false)))))) && true))), false, true))), bool(bool(_GLF_IDENTITY(false, false || (false)))))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))), true, false), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))), true, false), _GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))))))))), ! (! (! (bool((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, false || (false)))), (bool(bool(_GLF_IDENTITY(false, false || (false))))) && true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))), true && (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))))), true, false), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (false)))))), true, false), false)))))))))))))), (bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), bool(bool(_GLF_IDENTITY(false, false || (false)))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))), ! (! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false))))))))), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))), true, false), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))), true, false), false)), bvec3(bvec3(bvec3(bvec4(bvec3(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))), true, false), false))))))))))))), ! (_GLF_IDENTITY(! (bool((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))), false, true))), bool(bool(_GLF_IDENTITY(false, false || (false)))))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))), true, false), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bool(_GLF_IDENTITY(false, false || (false)))))), true, false), false)))))))), ! (! (! (bool((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), bool(bool(_GLF_IDENTITY(false, false || (false)))))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), false || (bool(_GLF_IDENTITY(false, false || (false)))))))), true, false), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false))))), ! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false))))))))), true, false), false))))))))))))))) && true))))), ((_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (false)) && true)))))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))), true, false), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))), true, false), false)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), bool(bool(_GLF_IDENTITY(false, false || (false)))))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))), true, false), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))), true, false), false))))))), ! (_GLF_IDENTITY(! (bool((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), bool(bool(_GLF_IDENTITY(false, false || (false)))))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))), true, _GLF_IDENTITY(false, ! (! (false)))), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))), true, false), false)))))))), ! (! (! (bool((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), bool(bool(_GLF_IDENTITY(false, false || (false)))))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))), true, false), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))), true, false), false)))))))))))))), (bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) && true)), bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(79.10)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false, true))), bool(bool(_GLF_IDENTITY(false, false || (false)))))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))), true, false), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))), true, false), false))))))), ! (_GLF_IDENTITY(! (bool((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), bool(bool(_GLF_IDENTITY(false, false || (false)))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))), true, false), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))), true, false), false))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))), true, false), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))), true, false), false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))), true, false), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))), true, false), false)))))))))))))), ! (_GLF_IDENTITY(! (! (bool((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), bool(bool(_GLF_IDENTITY(false, false || (false)))))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))), true, false), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))), true, false), false))))))))), bool(bvec4(! (! (bool((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), bool(bool(_GLF_IDENTITY(false, false || (false)))))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))), true, false), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))), true, false), false))))))))), true, true, false))))))))) && true)))))) || false)))
  return;
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, 1u * _GLF_IDENTITY((next_virtual_gid), (_GLF_IDENTITY((next_virtual_gid), 0u | ((_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((next_virtual_gid), ((next_virtual_gid)) ^ 0u) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), clamp(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) >> 0u), uint(0u)))))))))) * 1u))], uint(2), _GLF_IDENTITY(4, (4) + 0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, 0 + (64))) ^ 0), min(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, 0 + (64))) ^ 0), _GLF_IDENTITY(64, (_GLF_IDENTITY(64, 0 + (64))) ^ 0))), (64) | (64)), 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
