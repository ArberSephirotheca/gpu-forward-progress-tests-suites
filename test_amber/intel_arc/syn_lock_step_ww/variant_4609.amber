#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_33 {
 float _f0;
 bool _f1;
 bvec4 _f2;
 uint subgroup_local_id;
} ;

struct _GLF_struct_30 {
 int _f0;
 mat2x3 _f1;
 bvec4 _f2;
} ;

struct _GLF_struct_29 {
 mat2x4 _f0;
 mat3x4 _f1;
} ;

struct _GLF_struct_31 {
 _GLF_struct_29 _f0;
 mat4 _f1;
 mat2x4 _f2;
 _GLF_struct_30 _f3;
} ;

struct _GLF_struct_27 {
 mat2x3 _f0;
 uvec2 _f1;
} ;

struct _GLF_struct_26 {
 uint _f0;
 ivec3 _f1;
 mat4x2 _f2;
 mat4x3 _f3;
 mat4 _f4;
 float _f5;
 mat2 _f6;
} ;

struct _GLF_struct_28 {
 _GLF_struct_26 _f0;
 _GLF_struct_27 _f1;
 float _f2;
 ivec3 _f3;
 mat3x2 _f4;
 bvec4 _f5;
} ;

struct _GLF_struct_24 {
 float _f0;
 mat3x4 _f1;
 mat3x2 _f2;
 mat4x2 _f3;
 vec3 _f4;
 bvec4 _f5;
 float _f6;
} ;

struct _GLF_struct_23 {
 float _f0;
 mat4x3 _f1;
 mat3x2 _f2;
 uvec4 _f3;
 vec4 _f4;
 mat4x2 _f5;
 mat2 _f6;
} ;

struct _GLF_struct_25 {
 _GLF_struct_23 _f0;
 _GLF_struct_24 _f1;
 vec3 _f2;
 float _f3;
 bvec3 _f4;
} ;

struct _GLF_struct_21 {
 mat4 _f0;
 mat2x3 _f1;
 mat4x2 _f2;
 uvec3 _f3;
} ;

struct _GLF_struct_20 {
 mat2x4 _f0;
 bvec4 _f1;
 ivec2 _f2;
 bool _f3;
 ivec3 _f4;
 mat4 _f5;
 mat3x4 _f6;
} ;

struct _GLF_struct_19 {
 ivec2 _f0;
} ;

struct _GLF_struct_22 {
 _GLF_struct_19 _f0;
 _GLF_struct_20 _f1;
 ivec3 _f2;
 _GLF_struct_21 _f3;
} ;

struct _GLF_struct_18 {
 mat3x4 _f0;
} ;

struct _GLF_struct_16 {
 bvec3 _f0;
 bvec2 _f1;
 ivec2 _f2;
 mat3x4 _f3;
 vec2 _f4;
 bool _f5;
} ;

struct _GLF_struct_15 {
 vec2 _f0;
 mat4x3 _f1;
 mat4x3 _f2;
 uint _f3;
 uvec4 _f4;
} ;

struct _GLF_struct_17 {
 mat4 _f0;
 mat2x4 _f1;
 _GLF_struct_15 _f2;
 _GLF_struct_16 _f3;
} ;

struct _GLF_struct_32 {
 _GLF_struct_17 _f0;
 _GLF_struct_18 _f1;
 _GLF_struct_22 _f2;
 _GLF_struct_25 _f3;
 _GLF_struct_28 _f4;
 uint subgroup_id;
 mat4x2 _f5;
 _GLF_struct_31 _f6;
} ;

struct _GLF_struct_12 {
 mat2x4 _f0;
 uvec3 _f1;
 uvec3 _f2;
 ivec3 _f3;
} ;

struct _GLF_struct_11 {
 mat4x3 _f0;
 mat4x2 _f1;
 uint _f2;
 bvec2 _f3;
 uint _f4;
} ;

struct _GLF_struct_10 {
 int _f0;
 mat4x3 _f1;
 uint _f2;
} ;

struct _GLF_struct_13 {
 _GLF_struct_10 _f0;
 _GLF_struct_11 _f1;
 _GLF_struct_12 _f2;
 mat3 _f3;
 uint workgroup_size;
 uvec4 _f4;
} ;

struct _GLF_struct_8 {
 uvec4 _f0;
 mat4x2 _f1;
} ;

struct _GLF_struct_9 {
 _GLF_struct_8 _f0;
 mat3x2 _f1;
} ;

struct _GLF_struct_14 {
 _GLF_struct_9 _f0;
 _GLF_struct_13 _f1;
 bool _f2;
 uvec4 _f3;
} ;

struct _GLF_struct_7 {
 uint num_workgroup;
 vec3 _f0;
 uvec4 _f1;
} ;

struct _GLF_struct_4 {
 mat4x2 _f0;
 mat4x3 _f1;
 mat3x4 _f2;
 mat3x2 _f3;
 mat2x4 _f4;
} ;

struct _GLF_struct_3 {
 mat4x2 _f0;
 uint _f1;
 ivec3 _f2;
 ivec2 _f3;
 uvec4 _f4;
} ;

struct _GLF_struct_2 {
 mat4x2 _f0;
 ivec2 _f1;
 int _f2;
 mat2 _f3;
 mat2 _f4;
 bool _f5;
} ;

struct _GLF_struct_1 {
 ivec3 _f0;
} ;

struct _GLF_struct_5 {
 _GLF_struct_1 _f0;
 _GLF_struct_2 _f1;
 _GLF_struct_3 _f2;
 _GLF_struct_4 _f3;
} ;

struct _GLF_struct_0 {
 uvec2 _f0;
} ;

struct _GLF_struct_6 {
 uvec2 _f0;
 ivec4 _f1;
 _GLF_struct_0 _f2;
 uint subgroup_size;
 _GLF_struct_5 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 _GLF_struct_32 _GLF_struct_replacement_32 = _GLF_struct_32(_GLF_struct_17(mat4(1.0), mat2x4(1.0), _GLF_struct_15(vec2(1.0), mat4x3(1.0), mat4x3(1.0), 1u, uvec4(1u)), _GLF_struct_16(bvec3(true), bvec2(true), _GLF_IDENTITY(ivec2(1), clamp(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), (ivec2(1)) >> ivec2(0, 0))) | (ivec2(1))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), (ivec2(1)) >> ivec2(0, 0))) | (ivec2(1))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), (ivec2(1)) >> ivec2(0, 0))) | (ivec2(1))), ivec2(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), _GLF_IDENTITY((ivec2(1)) >> ivec2(0, 0), min((ivec2(1)) >> ivec2(0, 0), _GLF_IDENTITY((ivec2(1)) >> ivec2(0, 0), (true ? (ivec2(1)) >> ivec2(0, 0) : _GLF_FUZZED(ivec2(-83541, -99380)))))))) | (ivec2(1))), ivec2(0, 0) ^ (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, int(_GLF_ONE(1.0, injectionSwitch.y))), min(ivec3(1, 1, int(_GLF_ONE(1.0, injectionSwitch.y))), ivec3(1, 1, int(_GLF_ONE(1.0, injectionSwitch.y)))))))), (_GLF_IDENTITY(ivec2(1), (ivec2(1)) >> ivec2(0, 0))) | (ivec2(1)))))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), (ivec2(1)) >> ivec2(0, 0))) | (ivec2(1))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), (ivec2(1)) >> ivec2(0, 0))) | (ivec2(1))), ivec2(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), (ivec2(1)) >> ivec2(0, 0))) | (ivec2(1))), ivec2(0, 0) ^ (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, int(_GLF_ONE(1.0, injectionSwitch.y))), min(ivec3(1, 1, int(_GLF_ONE(1.0, injectionSwitch.y))), ivec3(1, 1, int(_GLF_ONE(1.0, injectionSwitch.y)))))))), (_GLF_IDENTITY(ivec2(1), (ivec2(1)) >> ivec2(0, _GLF_IDENTITY(0, ~ (~ (0)))))) | (ivec2(1))))))))))))) ^ ivec2(0, 0)) + (ivec2(0, _GLF_IDENTITY(0, max(0, 0))) | ivec2(0, 0))), ivec2(1), _GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), ivec2(0, 0) ^ _GLF_IDENTITY((ivec2(1)), ((ivec2(1))) ^ ivec2(0, 0)))) ^ ivec2(0, 0))) >> ivec2(0, 0)), max(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), _GLF_IDENTITY(ivec2(0, 0) ^ _GLF_IDENTITY((ivec2(1)), ((ivec2(1))) ^ ivec2(0, 0)), min(ivec2(0, 0) ^ _GLF_IDENTITY((ivec2(1)), ((ivec2(1))) ^ ivec2(0, 0)), ivec2(0, 0) ^ _GLF_IDENTITY((ivec2(1)), ((ivec2(1))) ^ ivec2(0, 0)))))) ^ ivec2(0, 0))) >> ivec2(0, 0)), ivec2(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, ((0 >> _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(1), int(1))) + (1))), ivec2(0, 0) ^ _GLF_IDENTITY((ivec2(1)), ((ivec2(1))) ^ ivec2(0, 0)))) ^ ivec2(0, 0))) >> ivec2(0, 0)), 0, int(_GLF_ONE(1.0, injectionSwitch.y))), ivec4(1, 1, 1, _GLF_IDENTITY(1, (1) ^ 0)) * (ivec4(_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), _GLF_IDENTITY(ivec2(0, 0), ~ (_GLF_IDENTITY(~ (ivec2(0, 0)), max(_GLF_IDENTITY(~ (ivec2(0, 0)), (~ (ivec2(0, 0))) ^ ivec2(0, 0)), ~ (ivec2(0, 0)))))) ^ _GLF_IDENTITY((ivec2(1)), ((ivec2(1))) ^ ivec2(0, 0)))) ^ ivec2(0, 0))) >> ivec2(0, 0)), 0, int(_GLF_ONE(1.0, injectionSwitch.y))))))), _GLF_IDENTITY(ivec2(1), _GLF_IDENTITY((_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), ivec2(0, 0) ^ _GLF_IDENTITY((ivec2(1)), ((ivec2(1))) ^ ivec2(0, 0)))) ^ ivec2(0, 0))) >> ivec2(0, 0), (ivec2(1, 1) ^ ivec2(1, 1)) + ((_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), ivec2(0, 0) ^ _GLF_IDENTITY((ivec2(1)), ((ivec2(1))) ^ ivec2(0, 0)))) ^ ivec2(_GLF_IDENTITY(0, 0 ^ (0)), 0))) >> ivec2(0, 0)))))))), mat3x4(1.0), vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(6.5)), bool(false)))) / 1.0)), true)), _GLF_struct_18(mat3x4(1.0)), _GLF_struct_22(_GLF_struct_19(ivec2(1)), _GLF_struct_20(mat2x4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5976.4746)), float(1.0), bool(true))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-41.58) : _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5976.4746)), float(1.0), bool(true))))), _GLF_IDENTITY(1.0, max(1.0, 1.0)), round(length(normalize(vec3(1.0, 1.0, 1.0)))), abs(abs(1.0)), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), (false ? _GLF_FUZZED(-8.3) : float(mat2x3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5976.4746)), float(1.0), bool(true))), 1.0, round(length(normalize(vec3(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-7.7)), bool(false))), 1.0)))), abs(abs(1.0)), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))))))), bvec4(true), ivec2(1), _GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))), bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, _GLF_IDENTITY(false, (false) || false)), false))))), ivec3(1), mat4(1.0), mat3x4(_GLF_IDENTITY(1.0, 0.0 + (1.0)))), ivec3(_GLF_IDENTITY(1, (1) >> 0)), _GLF_struct_21(mat4(1.0), mat2x3(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(-2121.8541), max(true ? 1.0 : _GLF_FUZZED(-2121.8541), true ? 1.0 : _GLF_FUZZED(-2121.8541))))), 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(round(_GLF_IDENTITY(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), max(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), (false ? _GLF_FUZZED(-4980.6571) : _GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), (false ? _GLF_FUZZED(-881.623) : round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))))), sqrt(_GLF_IDENTITY(0.0, (0.0) / 1.0)))), min(float(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), sqrt(_GLF_IDENTITY(0.0, (0.0) / 1.0)))), float(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(5673.9278))), 0.0)), 0.0, _GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), clamp(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), sqrt(_GLF_IDENTITY(0.0, (0.0) / 1.0)))))))))), mat4x2(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 1.0, abs(1.0), sqrt(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))), abs(cos(0.0)), 1.0, 1.0, 0.0, 1.0, 0.0)))), uvec3(_GLF_IDENTITY(1u, max(1u, 1u))))), _GLF_struct_25(_GLF_struct_23(1.0, mat4x3(1.0), mat3x2(1.0), uvec4(1u), vec4(1.0), mat4x2(1.0), mat2(1.0)), _GLF_struct_24(1.0, mat3x4(1.0), mat3x2(1.0), mat4x2(1.0), vec3(1.0), bvec4(true), 1.0), vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(7.4) : 1.0, (false ? _GLF_FUZZED(7.4) : 1.0) + 0.0)))), float(_GLF_FUZZED(10.58)), bool(false)))), 1.0, bvec3(true)), _GLF_struct_28(_GLF_struct_26(1u, ivec3(1), mat4x2(1.0), mat4x3(1.0), mat4(1.0), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(vec4(16.61, 4.4, 1.4, -2.7).t, (_GLF_IDENTITY(vec4(16.61, 4.4, 1.4, -2.7).t, (true ? vec4(16.61, 4.4, 1.4, -2.7).t : _GLF_FUZZED(-147.889)))) / 1.0))), float(1.0), bool(true))), mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_struct_27(mat2x3(1.0), uvec2(1u)), 1.0, ivec3(1), mat3x2(1.0), bvec4(_GLF_IDENTITY(true, false || (true)))), gl_SubgroupID, mat4x2(1.0), _GLF_struct_31(_GLF_struct_29(mat2x4(1.0), mat3x4(1.0)), mat4(1.0), mat2x4(1.0), _GLF_struct_30(1, mat2x3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(float(mat2x3(1.0, 0.0, 1.0, 0.0, exp(0.0), 1.0)), float(mat2x4(float(mat2x3(1.0, 0.0, 1.0, 0.0, exp(0.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(mat3x2(float(mat2x3(1.0, 0.0, 1.0, 0.0, exp(0.0), 1.0)), 1.0, 0.0, 0.0, 1.0, 1.0))))), bvec4(true))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, (true) || false) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))))), false)), true && (bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true, true && ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)), false, false)), (bool(bvec3(_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true, true && ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)), false, false))) && true)))) && true), false)))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), (_GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false)))))) || _GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(false || (bool(bvec2(false, false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false || (bool(bvec2(false, false))), false || (false || (bool(bvec2(false, false)))))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(false || (bool(bvec2(false, false))), false || (false || (bool(bvec2(false, false)))))), false, false), bvec3(bvec3(bvec3(bool(_GLF_IDENTITY(false || (bool(bvec2(false, false))), false || (false || (bool(bvec2(false, false)))))), false, false))))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, false))) || false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(((187629u >= 74545u) ? -2796.1258 : 3863.6491)), _GLF_FUZZED(-435.543)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))[0], injectionSwitch[1])).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))))))
    barrier();
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))))))
  return;
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(uvec2(1u), ivec4(1), _GLF_struct_0(uvec2(1u)), gl_SubgroupSize, _GLF_struct_5(_GLF_struct_1(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) || false) ? _GLF_FUZZED(-18536) : _GLF_IDENTITY(1, max(1, 1)))))), _GLF_struct_2(mat4x2(1.0), ivec2(_GLF_IDENTITY(1, (1) | (1 ^ 1))), 1, mat2(1.0), mat2(1.0), true), _GLF_struct_3(mat4x2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(1.0, sqrt(1.0), round(length(normalize(1.0))), 0.0, log(1.0), 0.0, 0.0, 1.0), transpose(transpose(mat4x2(1.0, sqrt(1.0), round(_GLF_IDENTITY(length(normalize(1.0)), float(mat3x2(length(normalize(1.0)), 1.0, 0.0, 1.0, _GLF_IDENTITY(exp(0.0), mix(float(exp(0.0)), float(_GLF_FUZZED(-4.9)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0)))), 0.0, log(1.0), 0.0, 0.0, 1.0))))), float(_GLF_IDENTITY(mat3(float(_GLF_IDENTITY(mat4x2(1.0, sqrt(1.0), round(length(normalize(1.0))), 0.0, log(1.0), 0.0, 0.0, 1.0), transpose(transpose(mat4x2(1.0, sqrt(1.0), round(_GLF_IDENTITY(length(_GLF_IDENTITY(normalize(1.0), _GLF_IDENTITY(float(vec4(normalize(1.0), 0.0, 0.0, 0.0)), (float(vec4(normalize(1.0), 0.0, 0.0, 0.0))) / 1.0))), float(mat3x2(length(normalize(1.0)), 1.0, 0.0, 1.0, _GLF_IDENTITY(exp(0.0), mix(float(exp(0.0)), float(_GLF_FUZZED(-4.9)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0)))), 0.0, log(1.0), 0.0, 0.0, 1.0))))), 1.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0), mat3(1.0) * (mat3(float(_GLF_IDENTITY(mat4x2(1.0, sqrt(1.0), round(length(normalize(1.0))), 0.0, log(1.0), 0.0, 0.0, 1.0), transpose(transpose(mat4x2(_GLF_IDENTITY(1.0, (1.0) * 1.0), sqrt(1.0), round(_GLF_IDENTITY(length(normalize(1.0)), float(mat3x2(length(normalize(1.0)), 1.0, 0.0, 1.0, _GLF_IDENTITY(exp(0.0), mix(float(exp(0.0)), float(_GLF_FUZZED(-4.9)), bool(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec2(! (false), true)), bool(bool(bool(bvec2(! (false), true)))))))), (injectionSwitch.x > injectionSwitch.y))))), 0.0)))), 0.0, log(1.0), 0.0, 0.0, 1.0))))), 1.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0))))), 1.0 * (float(_GLF_IDENTITY(mat4x2(1.0, sqrt(1.0), round(length(normalize(1.0))), 0.0, _GLF_IDENTITY(log(_GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 0.0)))), min(log(_GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 0.0)))), _GLF_IDENTITY(log(_GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 0.0)))), mix(float(_GLF_FUZZED(-23.49)), float(log(_GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 0.0))))), bool(true))))), 0.0, 0.0, 1.0), transpose(transpose(mat4x2(1.0, sqrt(1.0), round(length(normalize(1.0))), 0.0, log(1.0), _GLF_IDENTITY(0.0, float(vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), float(mat2x4(min(0.0, 0.0), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, abs(1.0))))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(4.1)), bool(false)))) - 0.0), 0.0)))))), 0.0, 1.0))))))))), 1u, _GLF_IDENTITY(ivec3(1), (_GLF_IDENTITY(ivec3(1), max(ivec3(1), ivec3(1)))) | ivec3(_GLF_IDENTITY(0, ~ (~ (0))), 0, 0)), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, 0 ^ (1))), _GLF_IDENTITY((_GLF_IDENTITY(ivec2(1), min(ivec2(1), ivec2(1)))), ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY(ivec2(1), min(ivec2(1), ivec2(1)))))) - ivec2(0, _GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY((0) / 1, 0 ^ ((0) / 1)))) + _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(7), int(7))), _GLF_IDENTITY(((0 >> _GLF_IDENTITY(int(7), int(7)))) - 0, (_GLF_IDENTITY(((0 >> _GLF_IDENTITY(int(7), int(7)))) - 0, (((0 >> _GLF_IDENTITY(int(7), int(7)))) - 0) + 0)) * 1)), int(_GLF_IDENTITY(ivec3((_GLF_IDENTITY(0, (0) / 1)) + _GLF_IDENTITY((_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(7), int(7)), (0 >> _GLF_IDENTITY(int(7), int(7))) << 0)), ((0 >> _GLF_IDENTITY(int(7), int(7)))) - 0), (35800 & 0), 0), ivec3(0, 0, 0) | (_GLF_IDENTITY(ivec3((_GLF_IDENTITY(0, (0) / 1)) + _GLF_IDENTITY((_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(7), int(7)), (0 >> _GLF_IDENTITY(int(7), int(7))) << 0)), ((0 >> _GLF_IDENTITY(int(7), int(7)))) - 0), (35800 & 0), 0), ivec3(ivec4(ivec3((_GLF_IDENTITY(0, (0) / 1)) + _GLF_IDENTITY((_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(7), int(7)), (0 >> _GLF_IDENTITY(int(7), int(7))) << 0)), ((0 >> _GLF_IDENTITY(int(7), int(7)))) - 0), (35800 & 0), 0), 1)))))))))), uvec4(1u)), _GLF_struct_4(mat4x2(1.0), mat4x3(1.0), mat3x4(1.0), mat3x2(1.0), mat2x4(1.0))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bvec2(false, true))) || (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), ! (! (false)))), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))))))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 _GLF_struct_33 _GLF_struct_replacement_33 = _GLF_struct_33(1.0, true, bvec4(true), gl_SubgroupInvocationID);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))
  barrier();
 _GLF_struct_7 _GLF_struct_replacement_7 = _GLF_struct_7(_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) - 0u)) | (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)).x)), vec3(1.0), uvec4(1u));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) && true, ! _GLF_IDENTITY((! ((false) && true)), bool(bvec3((! ((false) && true)), true, false))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false)))))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, false, false))), bool(bool(bool(bool(false))))))))
        return;
       barrier();
      }
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 _GLF_struct_14 _GLF_struct_replacement_14 = _GLF_struct_14(_GLF_struct_9(_GLF_struct_8(_GLF_IDENTITY(uvec4(1u), uvec4(1u, 1u, 1u, 1u) * (_GLF_IDENTITY(uvec4(1u), uvec4(1u, 1u, 1u, 1u) * (uvec4(1u))))), mat4x2(1.0)), mat3x2(1.0)), _GLF_struct_13(_GLF_struct_10(1, mat4x3(1.0), 1u), _GLF_struct_11(mat4x3(1.0), mat4x2(1.0), 1u, bvec2(true), 1u), _GLF_struct_12(mat2x4(1.0), uvec3(1u), uvec3(1u), ivec3(1)), mat3(1.0), gl_WorkGroupSize.x, _GLF_IDENTITY(uvec4(1u), (uvec4(1u)) - uvec4(0u, 0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (0u)), (0u) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, sqrt(1.0), 1.0)), mix(float(_GLF_FUZZED((1.3 + -153.265))), float(float(mat4x3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, sqrt(1.0), 1.0))), bool(true)))), injectionSwitch.x)))))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_IDENTITY(true, false || (true)), true, true)), bool(bvec2(bool(bvec4(true, _GLF_IDENTITY(true, false || (true)), true, true)), false)))), _GLF_IDENTITY(uvec4(1u), _GLF_IDENTITY((uvec4(1u)), ((uvec4(1u))) >> uvec4(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) + (0u | 0u)), 0u, 0u)) >> _GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) | (0u)))), 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | 0u)) / 1u), 0u), (uvec4(0u, _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, min(0u, 0u)), 0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | 0u)) / 1u), 0u)) ^ uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(false || (! (false)), false || (false || (! (false)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y))), bool(bvec4(false, false, true, true)))))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), false, false, true))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_IDENTITY(true, true && (true)), ! (! (_GLF_IDENTITY((false), ((false)) && true) && _GLF_IDENTITY(true, true && (true))))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), false, false, true)), _GLF_IDENTITY(bool(bool(bool(bvec4((false), false, false, true)))), (bool(bool(bool(bvec4((false), false, false, true))))) || false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f1.workgroup_size, (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u)) << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))), uint(5u))) | (_GLF_struct_replacement_14._f1.workgroup_size)) * workgroup_id, clamp(_GLF_IDENTITY(_GLF_struct_replacement_14._f1.workgroup_size, (_GLF_IDENTITY(0u, min(0u, 0u)) << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))), uint(5u))) | (_GLF_struct_replacement_14._f1.workgroup_size)) * workgroup_id, _GLF_IDENTITY(_GLF_struct_replacement_14._f1.workgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u)) << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))), uint(5u))) | (_GLF_struct_replacement_14._f1.workgroup_size), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(173094u) : (_GLF_IDENTITY(0u, min(0u, 0u)) << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), min(_GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(uvec3(uint(5u), 1u, 1u), (_GLF_IDENTITY(uvec3(uint(5u), 1u, 1u), ~ (~ (uvec3(uint(5u), 1u, 1u))))) << uvec3(0u, 0u, 0u)))), uint(5u))), uint(5u))) | (_GLF_struct_replacement_14._f1.workgroup_size)))) * workgroup_id, _GLF_IDENTITY(_GLF_struct_replacement_14._f1.workgroup_size, (_GLF_IDENTITY(0u, min(0u, 0u)) << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))), uint(5u))) | (_GLF_struct_replacement_14._f1.workgroup_size)) * workgroup_id));
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_32.subgroup_id * _GLF_struct_replacement_6.subgroup_size, (_GLF_struct_replacement_32.subgroup_id * _GLF_struct_replacement_6.subgroup_size) / 1u) + _GLF_IDENTITY(_GLF_struct_replacement_33.subgroup_local_id, (true ? _GLF_IDENTITY(_GLF_struct_replacement_33.subgroup_local_id, (_GLF_struct_replacement_33.subgroup_local_id) | (_GLF_struct_replacement_33.subgroup_local_id)) : _GLF_FUZZED(workgroup_id)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))) && true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(8.7)), bool(false))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) / abs(vec2(1.0, 1.0)), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) / abs(vec2(1.0, 1.0)), max((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) / abs(vec2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x4(1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), mat3x4(mat4(mat3x4(1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))), 1.0)), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) / abs(vec2(1.0, 1.0))))) - vec2(0.0, 0.0))).y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) / abs(vec2(1.0, 1.0)), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) / abs(vec2(1.0, 1.0)), max((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) / abs(vec2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x4(1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), mat3x4(mat4(mat3x4(1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))), 1.0)), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) / abs(vec2(1.0, 1.0))))) - vec2(0.0, 0.0))).y)))), (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) / abs(vec2(1.0, 1.0)), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) / abs(vec2(1.0, 1.0)), max((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) / abs(vec2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x4(1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), mat3x4(mat4(mat3x4(1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))), 1.0)), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) / abs(vec2(1.0, 1.0))))) - vec2(0.0, 0.0))).y))))) || false)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_struct_replacement_32.subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_6.subgroup_size, _GLF_IDENTITY((_GLF_struct_replacement_6.subgroup_size), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_struct_replacement_6.subgroup_size), ((_GLF_struct_replacement_6.subgroup_size)) | ((_GLF_struct_replacement_6.subgroup_size))), max((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_6.subgroup_size, (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) + (_GLF_struct_replacement_6.subgroup_size)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_6.subgroup_size, (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) + (_GLF_struct_replacement_6.subgroup_size)), 0u + (_GLF_IDENTITY(_GLF_struct_replacement_6.subgroup_size, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), max(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), uint(0u))))))) + (_GLF_struct_replacement_6.subgroup_size)))))))), (_GLF_struct_replacement_6.subgroup_size)))))) - 0u) + ((_GLF_struct_replacement_33.subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(109) : 1)), _GLF_IDENTITY((1) - 0, 0 ^ ((_GLF_IDENTITY(1, _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(82433), max(_GLF_FUZZED(82433), _GLF_FUZZED(82433))) : 1), _GLF_IDENTITY((true ? (false ? _GLF_FUZZED(82433) : 1) : _GLF_FUZZED(-13532)), ((true ? (false ? _GLF_FUZZED(82433) : 1) : _GLF_FUZZED(-13532))) ^ 0)))) - 0)))) % _GLF_struct_replacement_6.subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))), (true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))))))))))) || false))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))) && true))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, false, true)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) && true)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), (false ? _GLF_FUZZED(vec2(-40.08, -53.85)) : _GLF_IDENTITY(vec2(vec2(injectionSwitch)), _GLF_IDENTITY(max(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch))), clamp(max(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch))), _GLF_IDENTITY(max(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch))), min(max(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch))), max(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch))))), max(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch))))))))).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true, false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))) > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), bool(bool(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u)) | (virtual_gid), ((_GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u)) | (virtual_gid)) / (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1u) ^ 1u)))], _GLF_IDENTITY(uint(1), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)), min((uint(1)), (uint(1)))) + 0u), max(_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)), min((uint(1)), (uint(1)))) + 0u), _GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)), min((uint(1)), (uint(1)))) + 0u)))) >> _GLF_IDENTITY(0u, 0u ^ (0u))), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false, true, false)), bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false, true, false)), true && (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - determinant(mat2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0, 0.0, 0.0)))))), false, true, false)))), true, false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
