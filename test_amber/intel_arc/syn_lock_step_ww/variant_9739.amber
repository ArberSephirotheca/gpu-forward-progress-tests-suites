#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(vec2(9.6, _GLF_IDENTITY(-8726.1176, (_GLF_IDENTITY(-8726.1176, max(-8726.1176, -8726.1176))) * 1.0))), clamp(true ? injectionSwitch : _GLF_FUZZED(vec2(9.6, _GLF_IDENTITY(-8726.1176, (_GLF_IDENTITY(-8726.1176, max(-8726.1176, -8726.1176))) * 1.0))), _GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(vec2(9.6, _GLF_IDENTITY(-8726.1176, (_GLF_IDENTITY(-8726.1176, max(-8726.1176, -8726.1176))) * 1.0))), mix(vec2(_GLF_FUZZED(7929.3166), (true ? injectionSwitch : _GLF_FUZZED(vec2(9.6, _GLF_IDENTITY(-8726.1176, (_GLF_IDENTITY(-8726.1176, max(-8726.1176, -8726.1176))) * 1.0))))[1]), vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(9.6, _GLF_IDENTITY(-8726.1176, (_GLF_IDENTITY(-8726.1176, max(-8726.1176, -8726.1176))) * 1.0))))[0], _GLF_FUZZED(-3606.8136)), bvec2(true, false))), true ? injectionSwitch : _GLF_FUZZED(vec2(9.6, _GLF_IDENTITY(-8726.1176, (_GLF_IDENTITY(-8726.1176, max(-8726.1176, -8726.1176))) * 1.0))))))).x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, false)), false || (bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, false)))), ! _GLF_IDENTITY((! (bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, false)))), bool(bvec2(_GLF_IDENTITY((! (bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, false)))), _GLF_IDENTITY(bool(bvec3((! (bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, false)))), false, false)), true && (bool(bvec3((! (bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, false)))), false, false))))), true))))), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), _GLF_IDENTITY(min(vec2(injectionSwitch), vec2(injectionSwitch)), vec2(mat4(min(vec2(injectionSwitch), vec2(injectionSwitch)), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec2(0.0, sqrt(1.0)), vec2(1.0, 0.0)), dot(vec2(0.0, sqrt(1.0)), vec2(1.0, 0.0))), sin(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)))))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(1u), uvec3(1u))) + (gl_NumWorkGroups)))).x, max(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) - 0u, ((1u) - 0u) >> (0u << _GLF_IDENTITY(uint(7u), uint(7u))))), _GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) - 0u)) | (_GLF_IDENTITY(1u, (1u) - 0u)), min((_GLF_IDENTITY(1u, (1u) - 0u)) | (_GLF_IDENTITY(1u, (1u) - 0u)), (_GLF_IDENTITY(1u, (1u) - 0u)) | (_GLF_IDENTITY(1u, (1u) - 0u)))))) << 0u)), uvec3(1u))) + (gl_NumWorkGroups)))).x, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (false ? _GLF_FUZZED(subgroup_size) : ~ (0u))))) | _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(1u), uvec3(1u))) + (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], (_GLF_IDENTITY(gl_NumWorkGroups[2], (true ? gl_NumWorkGroups[2] : _GLF_FUZZED(subgroup_id)))) | 0u)))))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(1u), uvec3(1u))) + (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], (_GLF_IDENTITY(gl_NumWorkGroups[2], (true ? gl_NumWorkGroups[2] : _GLF_FUZZED(subgroup_id)))) | 0u))))))), (~ ((_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(1u), uvec3(1u))) + (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], (_GLF_IDENTITY(gl_NumWorkGroups[2], (true ? gl_NumWorkGroups[2] : _GLF_FUZZED(subgroup_id)))) | 0u)))))))) ^ uvec3(0u, 0u, 0u))))).x), ((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(1u), uvec3(1u))) + (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], (_GLF_IDENTITY(gl_NumWorkGroups[2], (true ? gl_NumWorkGroups[2] : _GLF_FUZZED(subgroup_id)))) | 0u)))))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(1u), uvec3(1u))) + (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], (_GLF_IDENTITY(gl_NumWorkGroups[2], (true ? gl_NumWorkGroups[2] : _GLF_FUZZED(subgroup_id)))) | 0u))))))), (~ ((_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(1u), uvec3(1u))) + (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], (_GLF_IDENTITY(gl_NumWorkGroups[2], (true ? gl_NumWorkGroups[2] : _GLF_FUZZED(subgroup_id)))) | 0u)))))))) ^ uvec3(0u, 0u, 0u))))).x)) / 1u), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, max(0u, 0u)))))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), _GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))))), uvec3(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) / uint(_GLF_ONE(1.0, injectionSwitch.y)), ((1u) / uint(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, length(vec2(0.0, 0.0)), 1.0, 1.0))))).y), max(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, length(vec2(0.0, 0.0)), 1.0, 1.0))))).y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, length(vec2(0.0, 0.0)), 1.0, 1.0))))).y))))) / 1u))))), _GLF_IDENTITY(~ (~ _GLF_IDENTITY((_GLF_IDENTITY((uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))), max((_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))), (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))), ((uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))) | ((uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, (1u ^ 0u)))))))) / uint(_GLF_ONE(1.0, injectionSwitch.y))))))))), min((_GLF_IDENTITY((uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))), max((_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))), (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))), ((uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))) | ((uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, (1u ^ 0u)))))))) / uint(_GLF_ONE(1.0, injectionSwitch.y))))))))), _GLF_IDENTITY((_GLF_IDENTITY((uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))), max((_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))), (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))), ((uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))) | ((uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, (1u ^ 0u)))))))) / uint(_GLF_ONE(1.0, injectionSwitch.y))))))))), (_GLF_IDENTITY((_GLF_IDENTITY((uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))), max((_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))), (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))), ((uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))) | ((uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, (1u ^ 0u)))))))) / uint(_GLF_ONE(1.0, injectionSwitch.y))))))))), ~ (~ ((_GLF_IDENTITY((uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))), max((_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))), (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))), ((uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))) | ((uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, (1u ^ 0u)))))))) / uint(_GLF_ONE(1.0, injectionSwitch.y))))))))))))) ^ uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), max(~ (~ _GLF_IDENTITY((_GLF_IDENTITY((uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))), max((_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))), (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))), ((uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))) | ((uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, (1u ^ 0u)))))))) / uint(_GLF_ONE(1.0, injectionSwitch.y))))))))), min((_GLF_IDENTITY((uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))), max((_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))), (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))), ((uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))) | ((uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, (1u ^ 0u)))))))) / uint(_GLF_ONE(1.0, injectionSwitch.y))))))))), _GLF_IDENTITY((_GLF_IDENTITY((uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))), max((_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))), (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))), ((uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))) | ((uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, (1u ^ 0u)))))))) / uint(_GLF_ONE(1.0, injectionSwitch.y))))))))), (_GLF_IDENTITY((_GLF_IDENTITY((uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))), max((_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))), (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))), ((uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))) | ((uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, (1u ^ 0u)))))))) / uint(_GLF_ONE(1.0, injectionSwitch.y))))))))), ~ (~ ((_GLF_IDENTITY((uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))), max((_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))), (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))), ((uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))) | ((uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, (1u ^ 0u)))))))) / uint(_GLF_ONE(1.0, injectionSwitch.y))))))))))))) ^ uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY(~ (~ _GLF_IDENTITY((_GLF_IDENTITY((uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))), max((_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))), (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))), ((uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))) | ((uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, (1u ^ 0u)))))))) / uint(_GLF_ONE(1.0, injectionSwitch.y))))))))), min((_GLF_IDENTITY((uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))), max((_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))), (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))), ((uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))) | ((uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, (1u ^ 0u)))))))) / uint(_GLF_ONE(1.0, injectionSwitch.y))))))))), _GLF_IDENTITY((_GLF_IDENTITY((uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))), max((_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))), (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))), ((uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))) | ((uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, (1u ^ 0u)))))))) / uint(_GLF_ONE(1.0, injectionSwitch.y))))))))), (_GLF_IDENTITY((_GLF_IDENTITY((uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))), max((_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))), (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))), ((uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))) | ((uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, (1u ^ 0u)))))))) / uint(_GLF_ONE(1.0, injectionSwitch.y))))))))), ~ (~ ((_GLF_IDENTITY((uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))), max((_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))), (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))), ((uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))) | ((uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, (1u ^ 0u)))))))) / uint(_GLF_ONE(1.0, injectionSwitch.y))))))))))))) ^ uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), uvec3(uvec3(~ (~ _GLF_IDENTITY((_GLF_IDENTITY((uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))), max((_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))), (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))), ((uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))) | ((uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, (1u ^ 0u)))))))) / uint(_GLF_ONE(1.0, injectionSwitch.y))))))))), min((_GLF_IDENTITY((uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))), max((_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))), (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))), ((uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))) | ((uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, (1u ^ 0u)))))))) / uint(_GLF_ONE(1.0, injectionSwitch.y))))))))), _GLF_IDENTITY((_GLF_IDENTITY((uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))), max((_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))), (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))), ((uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))) | ((uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, (1u ^ 0u)))))))) / uint(_GLF_ONE(1.0, injectionSwitch.y))))))))), (_GLF_IDENTITY((_GLF_IDENTITY((uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))), max((_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))), (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))), ((uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))) | ((uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, (1u ^ 0u)))))))) / uint(_GLF_ONE(1.0, injectionSwitch.y))))))))), ~ (~ ((_GLF_IDENTITY((uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))), max((_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))), (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))), ((uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))) | ((uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, (1u ^ 0u)))))))) / uint(_GLF_ONE(1.0, injectionSwitch.y))))))))))))) ^ uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))))))))) + (gl_NumWorkGroups)))).x), ((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, max(0u, 0u)))))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), _GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))))), uvec3(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) / uint(_GLF_ONE(1.0, injectionSwitch.y)), ((1u) / uint(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, length(vec2(0.0, 0.0)), 1.0, 1.0))))).y), max(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, length(vec2(0.0, 0.0)), 1.0, 1.0))))).y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, length(vec2(0.0, 0.0)), 1.0, 1.0))))).y))))) / 1u))))), _GLF_IDENTITY(~ (~ _GLF_IDENTITY((_GLF_IDENTITY((uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))), max((_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))), (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))), ((uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))) | ((uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, (1u ^ 0u)))))))) / uint(_GLF_ONE(1.0, injectionSwitch.y))))))))), min((_GLF_IDENTITY((uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))), max((_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))), (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))), ((uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))) | ((uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, (1u ^ 0u)))))))) / uint(_GLF_ONE(1.0, injectionSwitch.y))))))))), _GLF_IDENTITY((_GLF_IDENTITY((uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))), max((_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))), (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))), ((uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))) | ((uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, (1u ^ 0u)))))))) / uint(_GLF_ONE(1.0, injectionSwitch.y))))))))), (_GLF_IDENTITY((_GLF_IDENTITY((uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))), max((_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))), (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))), ((uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))) | ((uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, (1u ^ 0u)))))))) / uint(_GLF_ONE(1.0, injectionSwitch.y))))))))), ~ (~ ((_GLF_IDENTITY((uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))), max((_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))), (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))), ((uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))) | ((uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, (1u ^ 0u)))))))) / uint(_GLF_ONE(1.0, injectionSwitch.y))))))))))))) ^ uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), max(~ (~ _GLF_IDENTITY((_GLF_IDENTITY((uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))), max((_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))), (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))), ((uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))) | ((uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, (1u ^ 0u)))))))) / uint(_GLF_ONE(1.0, injectionSwitch.y))))))))), min((_GLF_IDENTITY((uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))), max((_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))), (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))), ((uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))) | ((uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, (1u ^ 0u)))))))) / uint(_GLF_ONE(1.0, injectionSwitch.y))))))))), _GLF_IDENTITY((_GLF_IDENTITY((uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))), max((_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))), (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))), ((uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))) | ((uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, (1u ^ 0u)))))))) / uint(_GLF_ONE(1.0, injectionSwitch.y))))))))), (_GLF_IDENTITY((_GLF_IDENTITY((uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))), max((_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))), (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))), ((uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))) | ((uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, (1u ^ 0u)))))))) / uint(_GLF_ONE(1.0, injectionSwitch.y))))))))), ~ (~ ((_GLF_IDENTITY((uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))), max((_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))), (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))), ((uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))) | ((uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, (1u ^ 0u)))))))) / uint(_GLF_ONE(1.0, injectionSwitch.y))))))))))))) ^ uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY(~ (~ _GLF_IDENTITY((_GLF_IDENTITY((uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))), max((_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))), (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))), ((uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))) | ((uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, (1u ^ 0u)))))))) / uint(_GLF_ONE(1.0, injectionSwitch.y))))))))), min((_GLF_IDENTITY((uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))), max((_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))), (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))), ((uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))) | ((uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, (1u ^ 0u)))))))) / uint(_GLF_ONE(1.0, injectionSwitch.y))))))))), _GLF_IDENTITY((_GLF_IDENTITY((uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))), max((_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))), (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))), ((uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))) | ((uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, (1u ^ 0u)))))))) / uint(_GLF_ONE(1.0, injectionSwitch.y))))))))), (_GLF_IDENTITY((_GLF_IDENTITY((uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))), max((_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))), (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))), ((uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))) | ((uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, (1u ^ 0u)))))))) / uint(_GLF_ONE(1.0, injectionSwitch.y))))))))), ~ (~ ((_GLF_IDENTITY((uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))), max((_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))), (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))), ((uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))) | ((uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, (1u ^ 0u)))))))) / uint(_GLF_ONE(1.0, injectionSwitch.y))))))))))))) ^ uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), uvec3(uvec3(~ (~ _GLF_IDENTITY((_GLF_IDENTITY((uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))), max((_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))), (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))), ((uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))) | ((uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, (1u ^ 0u)))))))) / uint(_GLF_ONE(1.0, injectionSwitch.y))))))))), min((_GLF_IDENTITY((uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))), max((_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))), (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))), ((uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))) | ((uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, (1u ^ 0u)))))))) / uint(_GLF_ONE(1.0, injectionSwitch.y))))))))), _GLF_IDENTITY((_GLF_IDENTITY((uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))), max((_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))), (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))), ((uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))) | ((uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, (1u ^ 0u)))))))) / uint(_GLF_ONE(1.0, injectionSwitch.y))))))))), (_GLF_IDENTITY((_GLF_IDENTITY((uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))), max((_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))), (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))), ((uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))) | ((uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, (1u ^ 0u)))))))) / uint(_GLF_ONE(1.0, injectionSwitch.y))))))))), ~ (~ ((_GLF_IDENTITY((uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))), max((_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))), (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))), ((uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))) | ((uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))) | (_GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, (1u ^ 0u)))))))) / uint(_GLF_ONE(1.0, injectionSwitch.y))))))))))))) ^ uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))))))))) + (gl_NumWorkGroups)))).x)) / 1u))))), _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u)))) * uvec3(1u, 1u, 1u)) | _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((uvec3(0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u))) >> _GLF_IDENTITY(uvec3(1u), uvec3(1u))), ~ (~ ((uvec3(0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u))) >> _GLF_IDENTITY(uvec3(1u), uvec3(1u)))))) + (gl_NumWorkGroups))), ((_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(min(0u, 0u), (min(0u, 0u)) | (min(0u, 0u))), min(_GLF_IDENTITY(min(0u, 0u), (min(0u, 0u)) | (min(0u, 0u))), _GLF_IDENTITY(min(0u, 0u), (min(0u, 0u)) | (min(0u, 0u))))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(1u))) + (gl_NumWorkGroups)))) >> (uvec3(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) | (1u)), 1u) ^ ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u))) >> _GLF_IDENTITY(uvec3(3u), _GLF_IDENTITY(uvec3(3u), (uvec3(3u)) ^ ((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(7u), uvec3(7u))) >> _GLF_IDENTITY(uvec3(8u), uvec3(8u))))))))).x));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 0u), (uvec3(1u, 1u, 1u) ^ uvec3(0u, 0u, 0u)) * (uvec3(0u, 0u, 0u)))), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 0u), (uvec3(1u, 1u, 1u) ^ uvec3(0u, 0u, 0u)) * (uvec3(0u, 0u, 0u)))), ~ (~ (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 0u), (uvec3(1u, 1u, 1u) ^ uvec3(0u, 0u, 0u)) * (uvec3(0u, 0u, 0u))))))))))).x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_id) : 1u)) * (_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))), 0u ^ (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_id) : 1u)) * (_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) || false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)), _GLF_IDENTITY((uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u))) / 1u, 0u | ((uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u))) / 1u))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ~ (~ _GLF_IDENTITY(((subgroup_size)), (true ? _GLF_IDENTITY(((subgroup_size)), 1u * (((subgroup_size)))) : _GLF_FUZZED(subgroup_id))))) ^ 0u))), uint(uvec4(~ (uint(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ 0u, min((subgroup_size) ^ 0u, (subgroup_size) ^ 0u))))), 0u, 1u, 1u)))))), clamp(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_FUZZED(packHalf2x16(vec2(-326.769, -60.73)))))) | 0u))), 0u + (uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_FUZZED(packHalf2x16(vec2(-326.769, -60.73)))))) | 0u))))), uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)))))))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(atomicMin(workgroup_base, num_workgroup)) : subgroup_size)), (subgroup_size) ^ 0u)), ~ (~ (uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u))))), (_GLF_IDENTITY(true, bool(bvec4(true, false, true, true))) ? _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(atomicMin(workgroup_base, num_workgroup)) : subgroup_size)), (subgroup_size) ^ 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(atomicMin(workgroup_base, num_workgroup)) : subgroup_size)), (subgroup_size) ^ 0u)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(atomicMin(workgroup_base, num_workgroup)) : subgroup_size)), (subgroup_size) ^ 0u))) ^ 0u)))), ~ (~ (uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u))))) : _GLF_FUZZED(25930u)))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u))), _GLF_IDENTITY(max(~ (uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u))), ~ (uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)))), max(max(~ (uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u))), ~ (uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)))), max(~ (uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u))), ~ (uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)))))))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))), true && (! (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)), ((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u))) + _GLF_IDENTITY(1, (1) - 0))) * 1u) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, round(length(normalize(1.0))), 0.0, log(1.0), 0.0)))))))
  barrier();
 atomicStore(buf[virtual_gid], uint(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, (1) + 0), 0)), (int(ivec2(_GLF_IDENTITY(1, (1) + 0), 0))) + 0))), 4, 64, 4);
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))))) | (0u)) ^ (next_virtual_gid), (0u ^ (next_virtual_gid)) / 1u))], _GLF_IDENTITY(uint(_GLF_IDENTITY(2, (2) << _GLF_IDENTITY(0, 1 * (0)))), (uint(_GLF_IDENTITY(2, (2) << 0))) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) + 0)) + 0), 4)), (_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) + 0)) + 0), 4))) << (0 & 28348)), 64, 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
