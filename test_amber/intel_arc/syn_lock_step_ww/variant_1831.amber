#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), true, false))), _GLF_IDENTITY(true, (true) || false)))))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), false || (bool(bvec2(_GLF_DEAD(false), false))))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, ! (! (_injected_loop_counter != 1)))); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) | 0))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), ! (! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))))))
    {
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
    }
   barrier();
  }
 for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (-65580 & 0)), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (-65580 & 0))), (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (-65580 & 0)))) && true))); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), true && (! (_GLF_IDENTITY(false, true && (false))))))), ! (! (_GLF_IDENTITY(false, true && (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), true && (! (_GLF_IDENTITY(false, true && (false))))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), (! (! (_GLF_IDENTITY(false, true && (false))))) && true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))))))))
        {
         barrier();
        }
       else
        {
        }
      }
     for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(int(7), (int(7)) | (int(7)))), min((_GLF_IDENTITY(int(7), (int(7)) | (int(7)))), (_GLF_IDENTITY(int(7), (int(7)) | (int(7)))))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))));
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(726u, 16751u, _GLF_IDENTITY(196787u, min(196787u, _GLF_IDENTITY(196787u, _GLF_IDENTITY((196787u), ~ (~ (_GLF_IDENTITY((196787u), (_GLF_IDENTITY((196787u), 0u + ((196787u)))) | ((196787u)))))) | _GLF_IDENTITY((196787u), ((196787u)) | ((196787u)))))))))).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_WRAPPED_IF_TRUE(true))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true)))))) || false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && true, false || ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, true && (false)) || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false)))))))))
    {
     do
      {
       return;
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), (bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))) && true)), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec4((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), false, true, true)), false || _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4((! (_GLF_DEAD(false))), false, true, true)), false || (bool(bvec4((! (_GLF_DEAD(false))), false, true, true))))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(bool(bvec4((! (_GLF_DEAD(false))), false, true, true)), false || (bool(bvec4((! (_GLF_DEAD(false))), false, true, true))))), false)), _GLF_IDENTITY(bool(bool(bool(bvec2((_GLF_IDENTITY(bool(bvec4((! (_GLF_DEAD(false))), false, true, true)), false || (bool(bvec4((! (_GLF_DEAD(false))), false, true, true))))), false)))), (bool(bool(bool(bvec2((_GLF_IDENTITY(bool(bvec4((! (_GLF_DEAD(false))), false, true, true)), false || (bool(bvec4((! (_GLF_DEAD(false))), false, true, true))))), false))))) && true)))))))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) / 1)))); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || false)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, 0u ^ (_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))).x));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3353.3290), _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, _GLF_IDENTITY(0 | (1), (0 | (1)) >> 0))))], _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, _GLF_IDENTITY(0 | (1), (0 | (1)) >> 0))))], ((injectionSwitch)[_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, _GLF_IDENTITY(0 | (1), (0 | (1)) >> 0))))]) / 1.0), 1.0, sqrt(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), max(float(mat3x4(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, _GLF_IDENTITY(0 | (1), (0 | (1)) >> 0))))], ((injectionSwitch)[_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, _GLF_IDENTITY(0 | (1), (0 | (1)) >> 0))))]) / 1.0), 1.0, sqrt(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), float(mat3x4(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, _GLF_IDENTITY(0 | (1), (0 | (1)) >> 0))))], ((injectionSwitch)[_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, _GLF_IDENTITY(0 | (1), (0 | (1)) >> 0))))]) / 1.0), 1.0, sqrt(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))))), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(969.269)), (vec2((injectionSwitch)[0], _GLF_FUZZED(969.269))) + vec2(0.0, 0.0)), bvec2(true, false))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x), mix(float(_GLF_FUZZED(1.9)), float(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
      return;
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec4(_GLF_WRAPPED_IF_FALSE(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))) && true))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        continue;
       barrier();
      }
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))) != 1, (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))) != 1, bool(bvec3(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))) != 1, false, true)))) && true)); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(58.90) : injectionSwitch.x)) > injectionSwitch.y))))
      return;
     for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y))))))); _injected_loop_counter ++)
      {
       barrier();
      }
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, false, false)), bool(bool(_GLF_IDENTITY(bool(bvec4(false, false, false, false)), bool(bvec2(bool(bvec4(false, false, false, false)), true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, false, false)), bool(bool(_GLF_IDENTITY(bool(bvec4(false, false, false, false)), bool(bvec2(bool(bvec4(false, false, false, false)), true)))))), (_GLF_IDENTITY(bool(bvec4(false, false, false, false)), bool(bool(_GLF_IDENTITY(bool(bvec4(false, false, false, false)), bool(bvec2(bool(bvec4(false, false, false, false)), true))))))) || false)) && true))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (! (false)) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    continue;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), false || (_GLF_IDENTITY(bool(bvec3(false, true, true)), bool(bool(bool(bvec3(false, true, true)))))))))), bool(bvec3((! (false)), false, false))), _GLF_IDENTITY(bool(bool(! (! (false)))), _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(! (! (false)))), false || (bool(bool(! (! (false))))))) || false, bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(bool(bool(! (! (false)))), false || (bool(bool(! (! (false))))))) || false, true), _GLF_IDENTITY(bvec2(bvec4(bvec2((_GLF_IDENTITY(bool(bool(! (! (false)))), false || (bool(bool(! (! (false))))))) || false, true), true, true)), bvec2(bvec4(bvec2(bvec4(bvec2((_GLF_IDENTITY(bool(bool(! (! (false)))), false || (bool(bool(! (! (false))))))) || false, true), true, true)), false, false))))))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), false || (_GLF_IDENTITY(bool(bvec3(false, true, true)), bool(bool(bool(bvec3(false, true, true)))))))))), bool(bvec3((! (false)), _GLF_IDENTITY(false, ! (! (false))), false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(! (! (false)))), false || (bool(bool(! (! (false))))))) || false, bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(bool(bool(! (! (false)))), false || (bool(bool(! (! (false))))))) || false, true), _GLF_IDENTITY(bvec2(bvec4(bvec2((_GLF_IDENTITY(bool(bool(! (! (false)))), false || (bool(bool(! (! (false))))))) || false, true), true, true)), bvec2(bvec4(bvec2(bvec4(bvec2((_GLF_IDENTITY(bool(bool(! (! (false)))), false || (bool(bool(! (! (false))))))) || false, true), true, _GLF_IDENTITY(true, ! (! (true))))), false, false))))))))))))) && true))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), true, false, false))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
        barrier();
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < injectionSwitch.y) && true)) && true))) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0)), mix(vec2(_GLF_FUZZED(590.053), _GLF_FUZZED(5.8)), vec2((vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0)))[0], (vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0)))[1]), bvec2(true, true)))).y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0)), mix(vec2(_GLF_FUZZED(590.053), _GLF_FUZZED(5.8)), vec2((vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0)))[0], (vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0)))[1]), bvec2(true, true)))).y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0)), mix(vec2(_GLF_FUZZED(590.053), _GLF_FUZZED(5.8)), vec2((vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0)))[0], (vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0)))[1]), bvec2(true, true)))).y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0)), mix(vec2(_GLF_FUZZED(590.053), _GLF_FUZZED(5.8)), vec2((vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0)))[0], (vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0)))[1]), bvec2(true, true)))).y) / 1.0), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0)), mix(vec2(_GLF_FUZZED(590.053), _GLF_FUZZED(5.8)), vec2((vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0)))[0], (vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0)))[1]), bvec2(true, true)))).y))), float(_GLF_FUZZED(912.011)), bool(false)))), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), false))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 else
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      break;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(6092.2457)), float(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[0]), bool(true))), injectionSwitch[1])).y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
      return;
     if(_GLF_DEAD(false))
      break;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true))))))) || (_GLF_DEAD(false))))
    return;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)) != int(_GLF_ONE(1.0, injectionSwitch.y))), bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)) != int(_GLF_ONE(1.0, injectionSwitch.y))), true, true))), _GLF_IDENTITY(true && (_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY((true && (_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))))) && true, ! (! ((true && (_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))))) && true))))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (_GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bvec4(bool(bvec3(false, false, false)), false, true, true)))) || false))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, (0u & 48230u) ^ (subgroup_local_id)), min(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, min(workgroup_base + subgroup_base + subgroup_local_id, _GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (workgroup_base + subgroup_base + subgroup_local_id) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) - 0u)))), (workgroup_base + subgroup_base + subgroup_local_id) << 0u), workgroup_base + subgroup_base + subgroup_local_id)), workgroup_base + subgroup_base + subgroup_local_id));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), bool(bvec3(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), true, true)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false || (_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false || (_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))))))), false, true, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false || (_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))))))), false, true, false)), false, false, false)))))
    barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u), workgroup_base)) + subgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u), workgroup_base)) + subgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u), workgroup_base)) + _GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_base, (subgroup_base) + 0u)), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_base, (subgroup_base) + 0u)), 1u * (~ (_GLF_IDENTITY(subgroup_base, (subgroup_base) + 0u)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_base, (subgroup_base) + 0u)), (~ (_GLF_IDENTITY(subgroup_base, (subgroup_base) + 0u))) | 0u))))))))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u), 0u + (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)))))), workgroup_base)) + subgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u), workgroup_base)) + subgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u), workgroup_base)) + _GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_base, (subgroup_base) + 0u)), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_base, (subgroup_base) + 0u)), 1u * (~ (_GLF_IDENTITY(subgroup_base, (subgroup_base) + 0u)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_base, (subgroup_base) + 0u)), (~ (_GLF_IDENTITY(subgroup_base, (subgroup_base) + 0u))) | 0u))))))))) << 0u)) * 1u) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(clamp(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), min(uint(8u), uint(8u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, (8u) | (8u))) << (1u ^ 1u))) + 0u)), (0u >> _GLF_IDENTITY(uint(8u), uint(8u))) ^ (_GLF_IDENTITY(uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, (8u) | (8u))) << (1u ^ 1u))) + 0u)), (uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, (8u) | (8u))) << (1u ^ 1u))) + 0u))) >> 0u)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), 1u * _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), subgroup_local_id)), subgroup_local_id), _GLF_IDENTITY((clamp(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(8u)), 1u * (_GLF_IDENTITY(uint(8u), uint(8u)))))), min(_GLF_IDENTITY(subgroup_local_id, 1u * _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))), subgroup_local_id)) | 0u, ((clamp(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(8u)), 1u * _GLF_IDENTITY((_GLF_IDENTITY(uint(8u), uint(8u))), ((_GLF_IDENTITY(uint(8u), uint(8u)))) * 1u)))), min(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(1u, (1u) << 0u) * _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))), subgroup_local_id)) | 0u) / 1u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(clamp(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + (0u >> _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, (_GLF_IDENTITY(_GLF_IDENTITY(8u, (8u) | (8u)), (_GLF_IDENTITY(8u, (8u) | (8u))) >> 0u)) << (1u ^ 1u))) + 0u))))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), _GLF_IDENTITY(1u * _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(1u * _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u * _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u * _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), subgroup_local_id)), subgroup_local_id), (clamp(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(8u)), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(uint(8u), (_GLF_IDENTITY(uint(8u), (uint(8u)) + 0u)) - 0u), uint(8u)))))), min(_GLF_IDENTITY(subgroup_local_id, 1u * _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))), _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) | (subgroup_local_id)))) | 0u))), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(clamp(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + (0u >> _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, (8u) | (8u))) << (1u ^ _GLF_IDENTITY(1u, (1u) - 0u)))) + 0u))))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), 1u * _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), subgroup_local_id)), subgroup_local_id), (clamp(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(8u)), 1u * (_GLF_IDENTITY(uint(8u), uint(8u)))))), min(_GLF_IDENTITY(subgroup_local_id, 1u * _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))), subgroup_local_id)) | 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(clamp(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + (0u >> _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, (8u) | (8u))) << (1u ^ 1u))) + 0u))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), 0u + (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u))), 1u * _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), subgroup_local_id)), subgroup_local_id), (clamp(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(8u)), 1u * (_GLF_IDENTITY(uint(8u), uint(8u)))))), min(_GLF_IDENTITY(subgroup_local_id, 1u * _GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(((subgroup_local_id)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (_GLF_IDENTITY(((subgroup_local_id)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)), min(((subgroup_local_id)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((subgroup_local_id)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))), _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))), subgroup_local_id)) | 0u))), 0u)))) + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 1 * (1)), 1, 1))) % _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), ~ (~ _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(clamp(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, _GLF_IDENTITY((_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, (8u) | (8u))) << (1u ^ 1u))) + 0u, ((_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, (8u) | (8u))) << (1u ^ 1u))) + 0u) | 0u)))), (0u >> _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, uint(uvec2(8u, 1u)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((_GLF_IDENTITY(8u, _GLF_IDENTITY((_GLF_IDENTITY(8u, (8u) | (8u))), (_GLF_IDENTITY((_GLF_IDENTITY(8u, (8u) | (8u))), 0u | ((_GLF_IDENTITY(8u, (8u) | (8u)))))) / 1u) << (1u ^ 1u))) + 0u, _GLF_IDENTITY(((_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, (8u) | (8u))) << (1u ^ 1u))) + 0u) | 0u, (_GLF_IDENTITY(((_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, (8u) | (8u))) << (1u ^ 1u))) + 0u) | 0u, (_GLF_IDENTITY(((_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, (8u) | (8u))) << (1u ^ 1u))) + 0u) | 0u, uint(uvec4(((_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, (8u) | (8u))) << (1u ^ 1u))) + 0u) | 0u, 1u, 1u, 0u)))) / 1u)) * 1u)))))) - 0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), _GLF_IDENTITY(1u * _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u * (1u * _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), _GLF_IDENTITY(1u * _GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(((subgroup_local_id)), 0u + (((subgroup_local_id)))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(1u * _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | uint(_GLF_ZERO(_GLF_IDENTITY(0.0, round(length(normalize(vec2(1.0, 1.0)))) * (_GLF_IDENTITY(0.0, (0.0) + 0.0))), injectionSwitch.x))), min(1u * _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u * _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(803.274), _GLF_FUZZED(55.97)), bvec2(false, false))).x)), (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(803.274), _GLF_FUZZED(55.97)), bvec2(false, false))).x))) | 0u))))) / 1u))) + 0u), subgroup_local_id)), subgroup_local_id), (clamp(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(8u)), 1u * (_GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (8u) - _GLF_IDENTITY(0u, (0u) | (0u))))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), 1u * _GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY((true ? (subgroup_local_id) : _GLF_FUZZED(subgroup_id)), (_GLF_IDENTITY((true ? (subgroup_local_id) : _GLF_FUZZED(subgroup_id)), uint(uvec3((true ? (subgroup_local_id) : _GLF_FUZZED(subgroup_id)), 0u, 1u)))) << 0u))) | uint(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))[0], injectionSwitch[1])).x), (_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))[0], injectionSwitch[1])).x), (true ? _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))[0], injectionSwitch[1])).x) : _GLF_FUZZED(length(vec3(-3.5, -4.6, 7.2)))))) / 1.0)))), _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))), subgroup_local_id)) | 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(clamp(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + (0u >> _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, (8u) | (8u))) << (1u ^ 1u))) + 0u), (_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, (8u) | (8u))) << (1u ^ 1u))) + 0u)) << 0u))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(atomicOr(subgroup_local_id, subgroup_local_id)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + (0u >> _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, (8u) | (8u))) << (1u ^ 1u))) + 0u))))), ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + (0u >> _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, (8u) | (8u))) << _GLF_IDENTITY((1u ^ 1u), ((1u ^ 1u)) - 0u))) + 0u)))))))), (false ? _GLF_FUZZED(usubBorrow(188613u, workgroup_id, num_workgroup)) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + (0u >> _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, (8u) | (8u))) << (_GLF_IDENTITY(1u ^ 1u, max(_GLF_IDENTITY(1u ^ 1u, 0u | (_GLF_IDENTITY(1u ^ 1u, max(1u ^ 1u, 1u ^ 1u)))), 1u ^ 1u))))) + _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | 0u, (0u ^ 0u) ^ ((0u) | 0u)))))))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), 1u * _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), subgroup_local_id)), subgroup_local_id), (clamp(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(8u)), 1u * (_GLF_IDENTITY(uint(8u), uint(8u)))))), min(_GLF_IDENTITY(subgroup_local_id, 1u * _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(((subgroup_local_id)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(((subgroup_local_id)), ~ (_GLF_IDENTITY(~ (((subgroup_local_id))), 0u ^ (~ (((subgroup_local_id))))))), 0u, _GLF_IDENTITY(0u, ~ (~ (0u))))), max(uint(uvec3(_GLF_IDENTITY(((subgroup_local_id)), ~ (_GLF_IDENTITY(~ (((subgroup_local_id))), 0u ^ (~ (((subgroup_local_id))))))), 0u, _GLF_IDENTITY(0u, ~ (~ (0u))))), uint(uvec3(_GLF_IDENTITY(((subgroup_local_id)), ~ (_GLF_IDENTITY(~ (((subgroup_local_id))), 0u ^ (~ (((subgroup_local_id))))))), 0u, _GLF_IDENTITY(0u, ~ (~ (0u)))))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))) / (1u & 1u))), _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(~ (~ (subgroup_local_id)), (~ (~ (subgroup_local_id))) ^ 0u)))), subgroup_local_id)) | 0u)))) + 1) % _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))), (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(clamp(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + (0u >> _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, _GLF_IDENTITY((_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, (8u) | (_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, (8u) / 1u)) ^ 0u)))) << (1u ^ _GLF_IDENTITY(1u, 0u + (1u))))) + 0u, ((_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, (8u) | (8u))) << (1u ^ 1u))) + 0u) | 0u)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)))), (subgroup_local_id) | 0u), 1u * _GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) << 0u)) | uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-51.01)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), _GLF_IDENTITY(1u * _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(1u * _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(1u * _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u * _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) / 1u))) + 0u, ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), _GLF_IDENTITY(1u * _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(1u * _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(1u * _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u * _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) / 1u))) + 0u) ^ (0u >> _GLF_IDENTITY(uint(7u), uint(7u))))), subgroup_local_id)), subgroup_local_id), (clamp(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + (0u >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(8u)), (_GLF_IDENTITY(uint(8u), uint(8u))) | (_GLF_IDENTITY(uint(8u), uint(8u)))), 1u * (_GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (8u) - _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) | 0u)))))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), 1u * _GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), (true ? (subgroup_local_id) : _GLF_FUZZED(subgroup_id)))) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), 1.0, 0.0, 1.0, sqrt(1.0)))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))[0], injectionSwitch[1])).x)))), _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))), subgroup_local_id)) | 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(clamp(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + (0u >> _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, (8u) | _GLF_IDENTITY((8u), max(_GLF_IDENTITY((8u), ((8u)) ^ 0u), _GLF_IDENTITY((8u), min((8u), (8u))))))) << (1u ^ 1u))) + 0u))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(708.596)), bvec2(true, false))).x > injectionSwitch.y)) ? _GLF_FUZZED(atomicOr(subgroup_local_id, subgroup_local_id)) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + (0u >> _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, (8u) | (8u))) << (1u ^ 1u))) + 0u))))), (false ? _GLF_FUZZED(_GLF_IDENTITY(usubBorrow(188613u, workgroup_id, num_workgroup), (usubBorrow(188613u, workgroup_id, num_workgroup)) ^ 0u)) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 0u, 0u, 1u))), subgroup_local_id))) / 1u), (subgroup_local_id) + (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, clamp(8u, 8u, _GLF_IDENTITY(8u, (false ? _GLF_FUZZED(subgroup_size) : 8u))))), uint(_GLF_IDENTITY(8u, _GLF_IDENTITY((_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, (8u) | (8u))) << (1u ^ 1u))) + _GLF_IDENTITY(0u, (0u) | 0u), uint(uvec4((_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, (8u) | (8u))) << (1u ^ 1u))) + _GLF_IDENTITY(0u, (0u) | 0u), 0u, 1u, 1u)))))))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), clamp(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u))), 1u * _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), subgroup_local_id)), subgroup_local_id), _GLF_IDENTITY((clamp(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + (0u >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(8u)), ~ (~ (_GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), (uint(8u)) | (uint(8u))))))), 1u * (_GLF_IDENTITY(uint(8u), uint(8u)))))), min(_GLF_IDENTITY(subgroup_local_id, 1u * _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / (1u & 1u))), _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(~ (~ (subgroup_local_id)), (~ (~ (subgroup_local_id))) ^ 0u)))), subgroup_local_id)), max(_GLF_IDENTITY((clamp(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + (0u >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(8u)), ~ (~ (_GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), (uint(8u)) | (uint(8u))))))), 1u * (_GLF_IDENTITY(uint(8u), uint(8u)))))), min(_GLF_IDENTITY(subgroup_local_id, 1u * _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / (1u & 1u))), _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(~ (~ (subgroup_local_id)), (~ (~ (subgroup_local_id))) ^ 0u)))), subgroup_local_id)), (_GLF_IDENTITY((clamp(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + (0u >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(8u)), ~ (~ (_GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), (uint(8u)) | (uint(8u))))))), 1u * (_GLF_IDENTITY(uint(8u), uint(8u)))))), min(_GLF_IDENTITY(subgroup_local_id, 1u * _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / (1u & 1u))), _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(~ (~ (subgroup_local_id)), (~ (~ (subgroup_local_id))) ^ 0u)))), subgroup_local_id)), ((clamp(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + (0u >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(8u)), ~ (~ (_GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), (uint(8u)) | (uint(8u))))))), 1u * (_GLF_IDENTITY(uint(8u), uint(8u)))))), min(_GLF_IDENTITY(subgroup_local_id, 1u * _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / (1u & 1u))), _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(~ (~ (subgroup_local_id)), (~ (~ (subgroup_local_id))) ^ 0u)))), subgroup_local_id))) >> 0u)) << 0u), _GLF_IDENTITY((clamp(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + (0u >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(8u)), ~ (~ (_GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), (uint(8u)) | (uint(8u))))))), 1u * (_GLF_IDENTITY(uint(8u), uint(8u)))))), min(_GLF_IDENTITY(subgroup_local_id, 1u * _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / (1u & 1u))), _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(~ (~ (subgroup_local_id)), (~ (~ (subgroup_local_id))) ^ 0u)))), subgroup_local_id)), (false ? _GLF_FUZZED(workgroup_base) : (clamp(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + (0u >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(8u)), ~ (~ (_GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), (uint(8u)) | (uint(8u))))))), 1u * (_GLF_IDENTITY(uint(8u), uint(8u)))))), min(_GLF_IDENTITY(subgroup_local_id, 1u * _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / (1u & 1u))), _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(~ (~ (subgroup_local_id)), (~ (~ (subgroup_local_id))) ^ 0u)))), subgroup_local_id)))))) | _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, (0u) - 0u))))))) + 1) % _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (clamp(subgroup_size, subgroup_size, subgroup_size)) << 0u))))), (((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(clamp(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + (0u >> _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, _GLF_IDENTITY((_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, (8u) | (_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, (8u) / 1u)) ^ 0u)))) << (1u ^ _GLF_IDENTITY(1u, 0u + (1u))))) + 0u, ((_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, (8u) | (8u))) << (1u ^ 1u))) + 0u) | 0u)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)))), (subgroup_local_id) | 0u), 1u * _GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) << 0u)) | uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-51.01)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), _GLF_IDENTITY(1u * _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(1u * _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(1u * _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u * _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) / 1u))) + 0u, ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), _GLF_IDENTITY(1u * _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(1u * _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(1u * _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u * _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) / 1u))) + 0u) ^ (0u >> _GLF_IDENTITY(uint(7u), uint(7u))))), subgroup_local_id)), subgroup_local_id), (clamp(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + (0u >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(8u)), (_GLF_IDENTITY(uint(8u), uint(8u))) | (_GLF_IDENTITY(uint(8u), uint(8u)))), 1u * (_GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (8u) - _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) | 0u)))))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), 1u * _GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), (true ? (subgroup_local_id) : _GLF_FUZZED(subgroup_id)))) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), 1.0, 0.0, 1.0, sqrt(1.0)))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))[0], injectionSwitch[1])).x)))), _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))), subgroup_local_id)) | 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(clamp(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + (0u >> _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, (8u) | _GLF_IDENTITY((8u), max(_GLF_IDENTITY((8u), ((8u)) ^ 0u), _GLF_IDENTITY((8u), min((8u), (8u))))))) << (1u ^ 1u))) + 0u))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(708.596)), bvec2(true, false))).x > injectionSwitch.y)) ? _GLF_FUZZED(atomicOr(subgroup_local_id, subgroup_local_id)) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + (0u >> _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, (8u) | (8u))) << (1u ^ 1u))) + 0u))))), (false ? _GLF_FUZZED(_GLF_IDENTITY(usubBorrow(188613u, workgroup_id, num_workgroup), (usubBorrow(188613u, workgroup_id, num_workgroup)) ^ 0u)) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 0u, 0u, 1u))), subgroup_local_id))) / 1u), (subgroup_local_id) + (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, clamp(8u, 8u, _GLF_IDENTITY(8u, (false ? _GLF_FUZZED(subgroup_size) : 8u))))), uint(_GLF_IDENTITY(8u, _GLF_IDENTITY((_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, (8u) | (8u))) << (1u ^ 1u))) + _GLF_IDENTITY(0u, (0u) | 0u), uint(uvec4((_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, (8u) | (8u))) << (1u ^ 1u))) + _GLF_IDENTITY(0u, (0u) | 0u), 0u, 1u, 1u)))))))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), clamp(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u))), 1u * _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), subgroup_local_id)), subgroup_local_id), _GLF_IDENTITY((clamp(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + (0u >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(8u)), ~ (~ (_GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), (uint(8u)) | (uint(8u))))))), 1u * (_GLF_IDENTITY(uint(8u), uint(8u)))))), min(_GLF_IDENTITY(subgroup_local_id, 1u * _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / (1u & 1u))), _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(~ (~ (subgroup_local_id)), (~ (~ (subgroup_local_id))) ^ 0u)))), subgroup_local_id)), max(_GLF_IDENTITY((clamp(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + (0u >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(8u)), ~ (~ (_GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), (uint(8u)) | (uint(8u))))))), 1u * (_GLF_IDENTITY(uint(8u), uint(8u)))))), min(_GLF_IDENTITY(subgroup_local_id, 1u * _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / (1u & 1u))), _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(~ (~ (subgroup_local_id)), (~ (~ (subgroup_local_id))) ^ 0u)))), subgroup_local_id)), (_GLF_IDENTITY((clamp(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + (0u >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(8u)), ~ (~ (_GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), (uint(8u)) | (uint(8u))))))), 1u * (_GLF_IDENTITY(uint(8u), uint(8u)))))), min(_GLF_IDENTITY(subgroup_local_id, 1u * _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / (1u & 1u))), _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(~ (~ (subgroup_local_id)), (~ (~ (subgroup_local_id))) ^ 0u)))), subgroup_local_id)), ((clamp(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + (0u >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(8u)), ~ (~ (_GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), (uint(8u)) | (uint(8u))))))), 1u * (_GLF_IDENTITY(uint(8u), uint(8u)))))), min(_GLF_IDENTITY(subgroup_local_id, 1u * _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / (1u & 1u))), _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(~ (~ (subgroup_local_id)), (~ (~ (subgroup_local_id))) ^ 0u)))), subgroup_local_id))) >> 0u)) << 0u), _GLF_IDENTITY((clamp(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + (0u >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(8u)), ~ (~ (_GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), (uint(8u)) | (uint(8u))))))), 1u * (_GLF_IDENTITY(uint(8u), uint(8u)))))), min(_GLF_IDENTITY(subgroup_local_id, 1u * _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / (1u & 1u))), _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(~ (~ (subgroup_local_id)), (~ (~ (subgroup_local_id))) ^ 0u)))), subgroup_local_id)), (false ? _GLF_FUZZED(workgroup_base) : (clamp(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + (0u >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(8u)), ~ (~ (_GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), (uint(8u)) | (uint(8u))))))), 1u * (_GLF_IDENTITY(uint(8u), uint(8u)))))), min(_GLF_IDENTITY(subgroup_local_id, 1u * _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / (1u & 1u))), _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(~ (~ (subgroup_local_id)), (~ (~ (subgroup_local_id))) ^ 0u)))), subgroup_local_id)))))) | _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, (0u) - 0u))))))) + 1) % _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (clamp(subgroup_size, subgroup_size, subgroup_size)) << 0u)))))) ^ 0u)) ^ 0u))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-25.38) : injectionSwitch.x)) > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch)).x, injectionSwitch.x)))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch)).x, injectionSwitch.x)))) > injectionSwitch.y)) || false) || false)))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false))))))))
      {
       if(_GLF_DEAD(false))
        return;
       for(int _injected_loop_counter = _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(0, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(ivec4(int(ivec3(0, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0, 1, 0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-6830.2171)))))))
          break;
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec3(! (_GLF_IDENTITY(false, (false) && true)), false, true))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec3(! (_GLF_IDENTITY(false, (false) && true)), false, true))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec3(! (_GLF_IDENTITY(false, (false) && true)), false, true))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec3(! (_GLF_IDENTITY(false, (false) && true)), false, true))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))
            return;
          }
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), cos(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(857.534)), bool(false)))), determinant(mat4(1.0, 0.0, 0.0, 0.0, round(length(normalize(vec4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, 1.0)))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 0.0)), (false ? _GLF_FUZZED(vec2(0.6, 716.687)) : vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), cos(0.0), determinant(mat4(1.0, 0.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(-3.0))), 1.0)))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 0.0))))).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (0 | 1) * (1))) >> 0)])).y))))
            {
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                continue;
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, true, false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, true, false))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, true, false))), true))))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            return;
          }
         else
          {
          }
        }
       do
        {
         atomicStore(buf[virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(4, 0 | (4)));
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       for(int _injected_loop_counter = _GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), _GLF_IDENTITY((int(1)) | 0, ~ (~ ((int(1)) | 0)))))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)) != (0 << _GLF_IDENTITY(int(7), int(7))), (_injected_loop_counter != (_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) << 0))) << _GLF_IDENTITY(_GLF_IDENTITY(int(7), max(int(7), int(7))), int(_GLF_IDENTITY(7, 1 * (7)))))) && true)), true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)) != (0 << _GLF_IDENTITY(int(7), int(7))), (_injected_loop_counter != (_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) << 0))) << _GLF_IDENTITY(_GLF_IDENTITY(int(7), max(int(7), int(_GLF_IDENTITY(7, max(7, 7))))), int(_GLF_IDENTITY(7, _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, 1 * (1)))), 1)) * (7)))))) && true)))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-1.7))) > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))
              break;
             continue;
            }
           barrier();
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) || _GLF_IDENTITY(false, false || (false)))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) || _GLF_IDENTITY(false, false || (false))))) || false) && true), (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) || false)))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         else
          {
          }
        }
      }
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, true && ((false) && true)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))) && true)))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! ((_GLF_DEAD(false)) && true)))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), false || (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)))))))))
    return;
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, 0.0, 0.0, 1.0, 1.0, sin(0.0), 0.0)), clamp(vec2(mat2x4(injectionSwitch, 0.0, 0.0, 1.0, 1.0, sin(0.0), 0.0)), _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, 0.0, 0.0, 1.0, 1.0, sin(0.0), 0.0)), mat2(1.0) * (vec2(mat2x4(injectionSwitch, 0.0, 0.0, 1.0, 1.0, sin(0.0), 0.0)))), vec2(mat2x4(injectionSwitch, 0.0, 0.0, 1.0, 1.0, sin(0.0), 0.0))))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, 0.0, 0.0, 1.0, 1.0, sin(0.0), 0.0)), clamp(vec2(mat2x4(injectionSwitch, 0.0, 0.0, 1.0, 1.0, sin(0.0), 0.0)), _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, 0.0, 0.0, 1.0, 1.0, sin(0.0), 0.0)), mat2(1.0) * (vec2(mat2x4(injectionSwitch, 0.0, 0.0, 1.0, 1.0, sin(0.0), 0.0)))), vec2(mat2x4(injectionSwitch, 0.0, 0.0, 1.0, 1.0, sin(0.0), 0.0))))).y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true)))))), true && (false))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && true)))))))
      return;
     atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(2, min(2, 2))), 0u + (uint(2))), 4, 64, 4);
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))) || (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))) || (injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))) || (injectionSwitch.x > injectionSwitch.y))))) || false)))))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) && true), (! (false)) || false))) || (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(57.87), _GLF_FUZZED(90.23)), bvec2(false, false))))).y, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))) || (injectionSwitch.x > injectionSwitch.y)))) && true)))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) || false)), bool(bvec4((_GLF_IDENTITY(! (false), (! (false)) || false)), true, true, false)))) || (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))) || (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    {
     for(int _injected_loop_counter = (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(ivec2(0, 1)))) | (0 | 0)) << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), clamp(int(8), _GLF_IDENTITY(int(8), ~ (~ (int(8)))), int(8))))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y)))), ! (! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))))))))); _injected_loop_counter ++)
      {
       return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + sqrt(0.0))))))
        barrier();
      }
     else
      {
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (_GLF_DEAD(false)), false), bvec2(bvec4(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), false), false, true)))), (bool(_GLF_IDENTITY(bvec2(! (_GLF_DEAD(false)), false), bvec2(bvec4(bvec2(! (_GLF_DEAD(false)), _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), false, true))))) && true)))), true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))), ! (! (true && _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))))))))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x < injectionSwitch.y)))), true, true)), true && (bool(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, true)))))))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((58.74 / -4.4))), bool(false)))))))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), ! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), false, false), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), false, false), false)))))), bool(_GLF_IDENTITY(bvec3((! (_GLF_DEAD(false))), true, _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (! (false)), true && (! (! (false)))), true, false)), _GLF_IDENTITY(bool(bvec2(bool(bvec3(_GLF_IDENTITY(! (! (false)), true && (! (! (false)))), true, false)), true)), bool(bool(bool(bvec2(bool(bvec3(_GLF_IDENTITY(! (! (false)), true && (! (! (false)))), true, false)), true))))))))), _GLF_IDENTITY(bvec3(bvec4(bvec3((! (_GLF_DEAD(false))), true, _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bool((false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))), true && (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))), bool(bvec4(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (! (false)))), bvec3(bvec4(bvec3((! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))), true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))), false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))))))))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(bvec3((! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))), true, _GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY((! (_GLF_DEAD(false))), ! _GLF_IDENTITY((! ((! (_GLF_DEAD(false))))), ((! ((! (_GLF_DEAD(false)))))) || false)), true, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec3(! (true), false, true)), (bool(bvec3(! (true), false, true))) && true)))), _GLF_IDENTITY(true, false || (true)), false))), ! (! (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), false)))) || false))), true, _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))), bvec3(bvec4(bvec3((! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))), true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)), false))))))), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))))))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-987.710), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-29.23)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-92.92) : injectionSwitch[1])))).x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))
            barrier();
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (bool(_GLF_DEAD(false)))))))
            return;
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(true, false || (true)), true))), false, true, true))), true && (false)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x > injectionSwitch.y) && true)))));
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
            {
             if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))) && true, ! (! ((_GLF_IDENTITY(false, true && (false))) && true)))), (injectionSwitch.x > injectionSwitch.y))))
              return;
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true)))) || false))
          return;
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)))) && true)), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)))) && true)), true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)))) && true)), true, true))), true)))), bvec3(bvec3(bvec3(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true)))))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), false || (! _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true))), ! (! (bool((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, false || (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (false), false || (! (false))), true), true, false))))))), bool(bool(_GLF_IDENTITY(false, false || (false)))))))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))
              {
               for(int _injected_loop_counter = _GLF_IDENTITY(1, int(int(_GLF_IDENTITY(1, (1) >> 0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, min(0, 0))); _GLF_IDENTITY(_injected_loop_counter --, 0 | (_injected_loop_counter --)))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    break;
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                }
              }
             else
              {
              }
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               return;
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              return;
            }
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), false || (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-3.7, -3.4)))).y)))))))))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, true))))), ! (! _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), false || ((false))), true, false)))))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              barrier();
             return;
             if(_GLF_DEAD(false))
              return;
            }
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            return;
           do
            {
             do
              {
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(false))
                continue;
               barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))).y)))))), true && (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))).y)))))), bool(bvec3((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))).y)))))), true, true))))), true))))))
            return;
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))) || false)), true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), ! (_GLF_IDENTITY(! (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), true && (! (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))))))), bool(bvec2((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), ! (_GLF_IDENTITY(! (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), true && (! (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))))))), true))) || false)))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), bool(bvec4(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), false, true, true))))))
          return;
        }
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, bool(bool(_injected_loop_counter != 0)))))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(6184.1534))))).x > injectionSwitch.y))))
        break;
       barrier();
      }
     continue;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      break;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, 1 * (0)), int(_GLF_IDENTITY(int(_GLF_IDENTITY(0, 1 * (0))), 0 + (int(_GLF_IDENTITY(0, 1 * (0))))))) ^ _GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 + (0))) << 0))), min(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, max(0, 0)))), 0, 0, 0), ivec4(0, 0, 0, 0) ^ (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), min(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, max(0, 0)))), 0, 0, 0), (ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), min(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, max(0, 0)))), 0, 0, 0)) * ivec4(1, 1, 1, 1))))), int(int(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, max(0, 0)))), min(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, max(0, 0)))), 0, 0, 0)), (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0))) | (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)))))))), 0))) | (_GLF_IDENTITY(0, (0) ^ 0))), (0 ^ _GLF_IDENTITY(_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, min(0, 0)) : _GLF_FUZZED(34360))), (_GLF_IDENTITY(0, max(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)), int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED((_injected_loop_counter ++)))), 0)), 0, 0, 0)), (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, (0) * 1), 0, 0))) | (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)))), ~ (~ (_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED((_injected_loop_counter ++)))), 0)), 0, 0, 0)), (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, (0) * 1), 0, _GLF_IDENTITY(0, (0) | (0))))) | (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0))))))))))), _GLF_IDENTITY(0, (0) | 0)))) | (_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (0) | 0)), clamp((_GLF_IDENTITY(0, (0) | 0)), (_GLF_IDENTITY(0, (0) | 0)), (_GLF_IDENTITY(0, (0) | 0)))) ^ 0)))) - (0 | 0)), _GLF_IDENTITY((false ? _GLF_FUZZED(80669) : _GLF_IDENTITY(_GLF_IDENTITY(0 ^ _GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)), int(int(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)))), (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0), ~ (~ (ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0))))), 0 ^ (_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) * (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0))))))) | (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)))))))), 0))) | (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(0, 1, 1), (ivec3(0, 1, 1)) / ivec3(1, 1, 1))), (int(_GLF_IDENTITY(ivec3(0, 1, 1), (ivec3(0, 1, 1)) / ivec3(1, 1, 1)))) ^ 0))) ^ 0)) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (_GLF_IDENTITY(0, (0) ^ 0)) >> 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (_GLF_IDENTITY(0, (0) ^ 0)) >> 0))) | 0))) | (_GLF_IDENTITY(0, (0) ^ 0))))), (_GLF_IDENTITY(0 ^ _GLF_IDENTITY(_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, min(0, 0)) : _GLF_FUZZED(34360))), (_GLF_IDENTITY(0, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), (_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), 1 * (_GLF_IDENTITY(0, max(0, 0))))) >> 0), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)), int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED((_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) - int(_GLF_ZERO(0.0, injectionSwitch.x))))))), 0)), 0, 0, _GLF_IDENTITY(0, (int(_GLF_ONE(1.0, injectionSwitch.y)) | 0) * (_GLF_IDENTITY(0, (0) / 1))))), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec4(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED((_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) - int(_GLF_ZERO(0.0, injectionSwitch.x))))))), 0)), 0, 0, _GLF_IDENTITY(0, (int(_GLF_ONE(1.0, injectionSwitch.y)) | 0) * (_GLF_IDENTITY(0, (0) / 1))))))), (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, (0) * 1), 0, 0))) | (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)))))))), _GLF_IDENTITY(0, (0) | 0)))) | (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | 0)) ^ 0))), (_GLF_IDENTITY(0 ^ _GLF_IDENTITY(_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, min(0, 0)) : _GLF_FUZZED(34360))), (_GLF_IDENTITY(0, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), (_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), 1 * (_GLF_IDENTITY(0, max(0, 0))))) >> 0), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)), int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED((_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) - int(_GLF_ZERO(0.0, injectionSwitch.x))))))), 0)), 0, 0, _GLF_IDENTITY(0, (int(_GLF_ONE(1.0, injectionSwitch.y)) | 0) * (_GLF_IDENTITY(0, (0) / 1))))), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec4(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED((_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) - int(_GLF_ZERO(0.0, injectionSwitch.x))))))), 0)), 0, 0, _GLF_IDENTITY(0, (int(_GLF_ONE(1.0, injectionSwitch.y)) | 0) * (_GLF_IDENTITY(0, (0) / 1))))))), (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, (0) * 1), 0, 0))) | (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)))))))), _GLF_IDENTITY(0, (0) | 0)))) | (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | 0)) ^ 0))), (true ? 0 ^ _GLF_IDENTITY(_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, min(0, 0)) : _GLF_FUZZED(34360))), (_GLF_IDENTITY(0, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), (_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), 1 * (_GLF_IDENTITY(0, max(0, 0))))) >> 0), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)), int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED((_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) - int(_GLF_ZERO(0.0, injectionSwitch.x))))))), 0)), 0, 0, _GLF_IDENTITY(0, (int(_GLF_ONE(1.0, injectionSwitch.y)) | 0) * (_GLF_IDENTITY(0, (0) / 1))))), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec4(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED((_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) - int(_GLF_ZERO(0.0, injectionSwitch.x))))))), 0)), 0, 0, _GLF_IDENTITY(0, (int(_GLF_ONE(1.0, injectionSwitch.y)) | 0) * (_GLF_IDENTITY(0, (0) / 1))))))), (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, (0) * 1), 0, 0))) | (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)))))))), _GLF_IDENTITY(0, (0) | 0)))) | (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | 0)) ^ 0))) : _GLF_FUZZED((_injected_loop_counter ++))))) >> 0)) - (_GLF_IDENTITY(0, max(0, 0)) | _GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) << 0))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(0 ^ _GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)), int(int(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)), (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, _GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, max(0, 0))))))) | (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)))))))), 0))) | (_GLF_IDENTITY(0, (0) ^ 0))), (0 ^ _GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)), int(int(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)), (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, _GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, max(0, 0))))))) | (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)))))))), 0))) | (_GLF_IDENTITY(0, (0) ^ 0)))) >> 0), (0 ^ _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, min(0, 0)) : _GLF_FUZZED(34360))), (_GLF_IDENTITY(0, max(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) / 1), 0)), 0, 0, 0)), int(int(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED((_injected_loop_counter ++)))), 0)), 0, 0, 0)), (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, 0 + (0))))) * 1), 0, 0))) | (int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), (_GLF_IDENTITY(0, max(0, 0))) | (_GLF_IDENTITY(0, max(0, 0)))), 0, 0, _GLF_IDENTITY(0, ~ (~ (0))))))))))), _GLF_IDENTITY(0, (0) | _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) | 0))))))) | (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | 0)) ^ 0))), (_GLF_IDENTITY(_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, min(0, 0)) : _GLF_FUZZED(34360))), (_GLF_IDENTITY(0, max(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) / 1), 0)), 0, 0, 0)), int(int(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED((_injected_loop_counter ++)))), 0)), 0, 0, 0)), (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, 0 + (0))))) * 1), 0, 0))) | (int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), (_GLF_IDENTITY(0, max(0, 0))) | (_GLF_IDENTITY(0, max(0, 0)))), 0, 0, _GLF_IDENTITY(0, ~ (~ (0))))))))))), _GLF_IDENTITY(0, (0) | _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) | 0))))))) | (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | 0)) ^ 0)))) ^ 0)) - (_GLF_IDENTITY(0, max(0, 0)) | 0))), 0 + (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0 ^ _GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), clamp(~ (0), ~ (0), ~ (0)))), clamp(~ (_GLF_IDENTITY(~ (0), clamp(~ (0), ~ (0), ~ (0)))), ~ (_GLF_IDENTITY(~ (0), clamp(~ (0), ~ (0), ~ (0)))), ~ (_GLF_IDENTITY(~ (0), clamp(~ (0), ~ (0), ~ (0))))))), 0)), max(0, 0)), 0, 0, 0)), int(int(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)), _GLF_IDENTITY((int(ivec4(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, ~ (~ (0))), 0)), 0, 0, 0))), ((int(ivec4(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, ~ (~ (0))), 0)), 0, 0, 0)))) | 0) | (int(ivec4(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, max(0, 0)))), 0, 0, 0)))))))), 0))) | (_GLF_IDENTITY(0, (0) ^ 0))), (_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(9880))))) ^ _GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), clamp(~ (0), ~ (0), ~ (0))))), 0)), max(0, 0)), 0, 0, _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, clamp(0, 0, 0)))))), int(int(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)), (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0))) | (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)))))))), _GLF_IDENTITY(0, (0) | (0))))) | (_GLF_IDENTITY(0, (0) ^ 0)))) | 0), (_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) / 1), 0, 0)) ^ _GLF_IDENTITY(_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) / 1))) : _GLF_FUZZED(34360))), (_GLF_IDENTITY(0, max(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, (0) | 0), _GLF_IDENTITY(0, (0) >> 0), 0)), int(int(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((true ? 0 : _GLF_FUZZED((_injected_loop_counter ++))), ((true ? 0 : _GLF_FUZZED((_injected_loop_counter ++)))) / 1)), (_GLF_IDENTITY(0, _GLF_IDENTITY((true ? 0 : _GLF_IDENTITY(_GLF_FUZZED((_injected_loop_counter ++)), (_GLF_FUZZED((_injected_loop_counter ++))) - 0)), ((true ? _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 + (0))) >> 0) : _GLF_FUZZED((_injected_loop_counter ++)))) / 1))) / int(_GLF_ONE(1.0, injectionSwitch.y))), 0)), 0, _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, 0 + (0))))), 0)), (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, (0) * 1), 0, 0))) | (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)))))))), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) / 1), 0, 0))) | 0)))) | (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | 0)) ^ 0)))) - (0 | 0))), ((_GLF_IDENTITY(_GLF_IDENTITY(0 ^ _GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), clamp(~ (0), ~ (0), ~ (0)))), clamp(~ (_GLF_IDENTITY(~ (0), clamp(~ (0), ~ (0), ~ (0)))), ~ (_GLF_IDENTITY(~ (0), clamp(~ (0), ~ (0), ~ (0)))), ~ (_GLF_IDENTITY(~ (0), clamp(~ (0), ~ (0), ~ (0))))))), 0)), max(0, 0)), 0, 0, 0)), int(int(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)), _GLF_IDENTITY((int(ivec4(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, ~ (~ (0))), 0)), 0, 0, 0))), ((int(ivec4(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, ~ (~ (0))), 0)), 0, 0, 0)))) | 0) | (int(ivec4(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, max(0, 0)))), 0, 0, 0)))))))), 0))) | (_GLF_IDENTITY(0, (0) ^ 0))), (_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(9880))))) ^ _GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), clamp(~ (0), ~ (0), ~ (0))))), 0)), max(0, 0)), 0, 0, _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, clamp(0, 0, 0)))))), int(int(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)), (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0))) | (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)))))))), _GLF_IDENTITY(0, (0) | (0))))) | (_GLF_IDENTITY(0, (0) ^ 0)))) | 0), (_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) / 1), 0, 0)) ^ _GLF_IDENTITY(_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) / 1))) : _GLF_FUZZED(34360))), (_GLF_IDENTITY(0, max(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, (0) | 0), _GLF_IDENTITY(0, (0) >> 0), 0)), int(int(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((true ? 0 : _GLF_FUZZED((_injected_loop_counter ++))), ((true ? 0 : _GLF_FUZZED((_injected_loop_counter ++)))) / 1)), (_GLF_IDENTITY(0, _GLF_IDENTITY((true ? 0 : _GLF_IDENTITY(_GLF_FUZZED((_injected_loop_counter ++)), (_GLF_FUZZED((_injected_loop_counter ++))) - 0)), ((true ? _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 + (0))) >> 0) : _GLF_FUZZED((_injected_loop_counter ++)))) / 1))) / int(_GLF_ONE(1.0, injectionSwitch.y))), 0)), 0, _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, 0 + (0))))), 0)), (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, (0) * 1), 0, 0))) | (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)))))))), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) / 1), 0, 0))) | 0)))) | (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | 0)) ^ 0)))) - (0 | 0)))) - 0)))))), _GLF_IDENTITY((_GLF_IDENTITY((false ? _GLF_FUZZED(80669) : _GLF_IDENTITY(_GLF_IDENTITY(0 ^ _GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)), int(int(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)))), (_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)), 0 ^ (_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) * (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0))))))) | (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)))))))), 0))) | (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (_GLF_IDENTITY(0, (0) ^ 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (_GLF_IDENTITY(0, (0) ^ 0)) >> 0)))) | (_GLF_IDENTITY(0, (0) ^ 0))))), (0 ^ _GLF_IDENTITY(_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, min(0, 0)) : _GLF_FUZZED(34360))), (_GLF_IDENTITY(0, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), (_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), 1 * (_GLF_IDENTITY(0, max(0, 0))))) >> 0), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)), int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED((_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) - int(_GLF_ZERO(0.0, injectionSwitch.x))))))), 0)), 0, 0, _GLF_IDENTITY(0, (int(_GLF_ONE(1.0, injectionSwitch.y)) | 0) * (_GLF_IDENTITY(0, (0) / 1))))), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec4(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED((_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) - int(_GLF_ZERO(0.0, injectionSwitch.x))))))), 0)), 0, 0, _GLF_IDENTITY(0, (int(_GLF_ONE(1.0, injectionSwitch.y)) | 0) * (_GLF_IDENTITY(0, (0) / 1))))))), (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, (0) * 1), 0, 0))) | (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)))))))), _GLF_IDENTITY(0, (0) | 0)))) | (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | 0)) ^ 0)))) - (_GLF_IDENTITY(0, max(0, 0)) | 0)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0 ^ _GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)), int(int(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)), (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, _GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, max(0, 0))))))) | (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)))))))), 0))) | (_GLF_IDENTITY(0, (0) ^ 0))), (0 ^ _GLF_IDENTITY(_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, min(0, 0)) : _GLF_FUZZED(34360))), (_GLF_IDENTITY(0, max(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) / 1), 0)), 0, 0, 0)), int(int(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED((_injected_loop_counter ++)))), 0)), 0, 0, 0)), (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, 0 + (0))))) * 1), 0, 0))) | (int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), (_GLF_IDENTITY(0, max(0, 0))) | (_GLF_IDENTITY(0, max(0, 0)))), 0, 0, _GLF_IDENTITY(0, ~ (~ (0))))))))))), _GLF_IDENTITY(0, (0) | _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) | 0))))))) | (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | 0)) ^ 0)))) - (_GLF_IDENTITY(0, max(0, 0)) | 0))), 0 + (~ (_GLF_IDENTITY(_GLF_IDENTITY(0 ^ _GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), clamp(~ (0), ~ (0), ~ (0))))), 0)), max(0, 0)), 0, 0, 0)), int(int(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)), (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0))) | (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)))))))), 0))) | (_GLF_IDENTITY(0, (0) ^ 0))), (0 ^ _GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), clamp(~ (0), ~ (0), ~ (0))))), 0)), max(0, 0)), 0, 0, 0)), int(int(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)), (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0))) | (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)))))))), 0))) | (_GLF_IDENTITY(0, (0) ^ 0)))) | 0), (0 ^ _GLF_IDENTITY(_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, min(0, 0)) : _GLF_FUZZED(34360))), (_GLF_IDENTITY(0, max(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, (0) | 0), _GLF_IDENTITY(0, (0) >> 0), 0)), int(int(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, _GLF_IDENTITY((true ? 0 : _GLF_FUZZED((_injected_loop_counter ++))), ((true ? 0 : _GLF_FUZZED((_injected_loop_counter ++)))) / 1)), 0)), 0, 0, 0)), (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, (0) * 1), 0, 0))) | (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)))))))), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) | 0)))) | (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | 0)) ^ 0)))) - (0 | 0)))))))), (false ? _GLF_FUZZED(72561) : (false ? _GLF_FUZZED(80669) : _GLF_IDENTITY(_GLF_IDENTITY(0 ^ _GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)), int(int(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)))), (_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)), 0 ^ (_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) * (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0))))))) | (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)))))))), 0))) | (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (_GLF_IDENTITY(0, (0) ^ 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (_GLF_IDENTITY(0, (0) ^ 0)) >> 0)))) | (_GLF_IDENTITY(0, (0) ^ 0))))), (0 ^ _GLF_IDENTITY(_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, min(0, 0)) : _GLF_FUZZED(34360))), (_GLF_IDENTITY(0, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), (_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), 1 * (_GLF_IDENTITY(0, max(0, 0))))) >> 0), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)), int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED((_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) - int(_GLF_ZERO(0.0, injectionSwitch.x))))))), 0)), 0, 0, _GLF_IDENTITY(0, (int(_GLF_ONE(1.0, injectionSwitch.y)) | 0) * (_GLF_IDENTITY(0, (0) / 1))))), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec4(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED((_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) - int(_GLF_ZERO(0.0, injectionSwitch.x))))))), 0)), 0, 0, _GLF_IDENTITY(0, (int(_GLF_ONE(1.0, injectionSwitch.y)) | 0) * (_GLF_IDENTITY(0, (0) / 1))))))), (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, (0) * 1), 0, 0))) | (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)))))))), _GLF_IDENTITY(0, (0) | 0)))) | (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | 0)) ^ 0)))) - (_GLF_IDENTITY(0, max(0, 0)) | 0)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0 ^ _GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)), int(int(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)), (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, _GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, max(0, 0))))))) | (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)))))))), 0))) | (_GLF_IDENTITY(0, (0) ^ 0))), (0 ^ _GLF_IDENTITY(_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, min(0, 0)) : _GLF_FUZZED(34360))), (_GLF_IDENTITY(0, max(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) / 1), 0)), 0, 0, 0)), int(int(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED((_injected_loop_counter ++)))), 0)), 0, 0, 0)), (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, 0 + (0))))) * 1), 0, 0))) | (int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), (_GLF_IDENTITY(0, max(0, 0))) | (_GLF_IDENTITY(0, max(0, 0)))), 0, 0, _GLF_IDENTITY(0, ~ (~ (0))))))))))), _GLF_IDENTITY(0, (0) | _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) | 0))))))) | (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | 0)) ^ 0)))) - (_GLF_IDENTITY(0, max(0, 0)) | 0))), 0 + (~ (_GLF_IDENTITY(_GLF_IDENTITY(0 ^ _GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), clamp(~ (0), ~ (0), ~ (0))))), 0)), max(0, 0)), 0, 0, 0)), int(int(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)), (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0))) | (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)))))))), 0))) | (_GLF_IDENTITY(0, (0) ^ 0))), (0 ^ _GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), clamp(~ (0), ~ (0), ~ (0))))), 0)), max(0, 0)), 0, 0, 0)), int(int(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)), (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0))) | (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)))))))), 0))) | (_GLF_IDENTITY(0, (0) ^ 0)))) | 0), (0 ^ _GLF_IDENTITY(_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, min(0, 0)) : _GLF_FUZZED(34360))), (_GLF_IDENTITY(0, max(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, (0) | 0), _GLF_IDENTITY(0, (0) >> 0), 0)), int(int(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, _GLF_IDENTITY((true ? 0 : _GLF_FUZZED((_injected_loop_counter ++))), ((true ? 0 : _GLF_FUZZED((_injected_loop_counter ++)))) / 1)), 0)), 0, 0, 0)), (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, (0) * 1), 0, 0))) | (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)))))))), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) | 0)))) | (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | 0)) ^ 0)))) - (0 | 0))))))))))) ^ 0, ((_GLF_IDENTITY((false ? _GLF_FUZZED(80669) : _GLF_IDENTITY(_GLF_IDENTITY(0 ^ _GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)), int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)))), (_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)), 0 ^ (_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) * (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0))))))) | (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)))), (_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)), 0 ^ (_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) * (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0))))))) | (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)))), (_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)))), (_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)), 0 ^ (_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) * (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0))))))) | (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0))))) << 0), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)))), (_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)), 0 ^ (_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) * (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0))))))) | (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)))))))))), 0))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (_GLF_IDENTITY(0, (0) ^ 0)) | 0), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (_GLF_IDENTITY(0, _GLF_IDENTITY((0), (_GLF_IDENTITY((0), ((0)) ^ 0)) >> 0) ^ 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (_GLF_IDENTITY(0, _GLF_IDENTITY((0) ^ 0, (true ? _GLF_IDENTITY((0) ^ 0, ((0) ^ 0) - 0) : _GLF_FUZZED(_injected_loop_counter))))) >> 0)))) | (_GLF_IDENTITY(0, (0) ^ 0))))), (_GLF_IDENTITY(0 ^ _GLF_IDENTITY(_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, min(0, 0)) : _GLF_FUZZED(34360))), (_GLF_IDENTITY(0, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), (_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), 1 * (_GLF_IDENTITY(0, max(0, 0))))) >> 0), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)), int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED((_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) - int(_GLF_ZERO(0.0, injectionSwitch.x))))))), 0)), 0, 0, _GLF_IDENTITY(0, (int(_GLF_ONE(1.0, injectionSwitch.y)) | 0) * (_GLF_IDENTITY(0, (0) / 1))))), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec4(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED((_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) - int(_GLF_ZERO(0.0, injectionSwitch.x))))))), 0)), 0, 0, _GLF_IDENTITY(0, (int(_GLF_ONE(1.0, injectionSwitch.y)) | 0) * (_GLF_IDENTITY(0, (0) / 1))))))), (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, (0) * 1), 0, 0))) | (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)))))))), _GLF_IDENTITY(0, (0) | 0)))) | (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | 0)) ^ 0))), (0 ^ _GLF_IDENTITY(_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, min(0, 0)) : _GLF_FUZZED(34360))), (_GLF_IDENTITY(0, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), (_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), 1 * (_GLF_IDENTITY(0, max(0, 0))))) >> 0), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)), int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED((_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) - int(_GLF_ZERO(0.0, injectionSwitch.x))))))), 0)), 0, 0, _GLF_IDENTITY(0, (int(_GLF_ONE(1.0, injectionSwitch.y)) | 0) * _GLF_IDENTITY((_GLF_IDENTITY(0, (0) / 1)), int(_GLF_ONE(1.0, injectionSwitch.y)) * ((_GLF_IDENTITY(0, (0) / 1))))))), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED((_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) - int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0))))))), 0)), 0, 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)) | 0, (int(_GLF_ONE(1.0, injectionSwitch.y)) | 0) + 0)) * (_GLF_IDENTITY(0, (0) / 1))))), ~ (_GLF_IDENTITY(~ (int(ivec4(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED((_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) - int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0))))))), 0)), 0, 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)) | 0, (int(_GLF_ONE(1.0, injectionSwitch.y)) | 0) + 0)) * (_GLF_IDENTITY(0, (0) / 1)))))), 0 | (~ (int(ivec4(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED((_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) - int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0))))))), 0)), 0, 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)) | 0, (int(_GLF_ONE(1.0, injectionSwitch.y)) | 0) + 0)) * (_GLF_IDENTITY(0, (0) / 1)))))))))))), (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, (0) * 1), 0, 0))) | (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)))))))), _GLF_IDENTITY(_GLF_IDENTITY(0, 1 * (0)), (0) | 0)))) | (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | 0)) ^ 0)))) - 0)) - (_GLF_IDENTITY(0, max(0, 0)) | 0)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0 ^ _GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)), int(int(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)), (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, _GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) | (0)), 0))))))) | (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, _GLF_IDENTITY(0, 0 | (0)), 0)))))))), 0))) | (_GLF_IDENTITY(0, (0) ^ 0))), (0 ^ _GLF_IDENTITY(_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), (_GLF_IDENTITY(0, min(0, 0))) << 0) : _GLF_FUZZED(_GLF_IDENTITY(34360, (34360) << 0)))), (_GLF_IDENTITY(0, max(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) / 1), 0)), 0, _GLF_IDENTITY(0, (0) >> 0), 0)), int(int(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED((_injected_loop_counter ++)))), 0)), 0, 0, 0)), (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, min(0, 0)), 0))))))), ((_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, min(0, 0)), 0)))))))) - 0) * 1), 0, 0))) | (int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), (_GLF_IDENTITY(0, max(0, 0))) | (_GLF_IDENTITY(0, max(0, 0)))), 0, 0, _GLF_IDENTITY(0, ~ (~ (0))))))))))), _GLF_IDENTITY(0, (0) | _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) | 0))))))) | (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | 0)) ^ 0)))) - (_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, ~ (~ (0))), 0)))) | 0))), 0 + (~ (_GLF_IDENTITY(_GLF_IDENTITY(0 ^ _GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), clamp(~ (0), ~ (0), _GLF_IDENTITY(~ (0), ~ (~ (_GLF_IDENTITY(~ (0), ~ (_GLF_IDENTITY(~ (~ (0)), ~ (~ (~ (~ (0)))))))))))))), 0)), max(0, 0)), 0, 0, 0)), int(int(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)), (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0))) | _GLF_IDENTITY((int(ivec4(_GLF_IDENTITY(0, _GLF_IDENTITY(max(0, 0), (true ? max(0, 0) : _GLF_FUZZED(_injected_loop_counter)))), 0, 0, 0))), ((int(ivec4(_GLF_IDENTITY(0, _GLF_IDENTITY(max(0, 0), (true ? max(0, 0) : _GLF_FUZZED(_injected_loop_counter)))), 0, 0, 0)))) | (_GLF_IDENTITY((int(ivec4(_GLF_IDENTITY(0, _GLF_IDENTITY(max(0, 0), (true ? max(0, 0) : _GLF_FUZZED(_injected_loop_counter)))), 0, 0, 0))), clamp((int(ivec4(_GLF_IDENTITY(0, _GLF_IDENTITY(max(0, 0), (true ? max(0, 0) : _GLF_FUZZED(_injected_loop_counter)))), 0, 0, 0))), (int(ivec4(_GLF_IDENTITY(0, _GLF_IDENTITY(max(0, 0), (true ? max(0, 0) : _GLF_FUZZED(_injected_loop_counter)))), 0, 0, 0))), (int(ivec4(_GLF_IDENTITY(0, _GLF_IDENTITY(max(0, 0), (true ? max(0, 0) : _GLF_FUZZED(_injected_loop_counter)))), 0, 0, 0)))))))))))), 0))) | (_GLF_IDENTITY(0, (0) ^ 0))), (0 ^ _GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), clamp(~ (0), ~ (0), ~ (0))))), 0)), max(0, 0)), 0, 0, 0)), int(int(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) << 0))), 0)), 0, 0, 0)), _GLF_IDENTITY((int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0))), ((int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)))) >> (0 << _GLF_IDENTITY(int(4), int(4)))) | _GLF_IDENTITY((int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0))), (_GLF_IDENTITY((int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0))), ((int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)))) | 0)) >> 0)))))), _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | (0)), 0, _GLF_IDENTITY(0, (0) - 0)))))) | (_GLF_IDENTITY(0, (0) ^ 0)))) | 0), (0 ^ _GLF_IDENTITY(_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, min(0, 0)) : _GLF_FUZZED(34360))), (_GLF_IDENTITY(0, max(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, (0) | _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, ~ (~ (0)))), max(~ (_GLF_IDENTITY(0, ~ (~ (0)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(0, ~ (~ (0)))), (~ (_GLF_IDENTITY(0, ~ (~ (0))))) * 1)))))), _GLF_IDENTITY(0, (0) >> 0), 0)), int(int(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, _GLF_IDENTITY((true ? 0 : _GLF_FUZZED((_injected_loop_counter ++))), ((true ? 0 : _GLF_FUZZED((_injected_loop_counter ++)))) / 1)), 0)), (_GLF_IDENTITY(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, _GLF_IDENTITY((true ? 0 : _GLF_FUZZED((_injected_loop_counter ++))), ((true ? 0 : _GLF_FUZZED((_injected_loop_counter ++)))) / 1)), 0)), ~ (~ (_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, _GLF_IDENTITY((true ? 0 : _GLF_FUZZED((_injected_loop_counter ++))), ((true ? 0 : _GLF_FUZZED((_injected_loop_counter ++)))) / 1)), 0)))))) >> 0), 0, 0, 0)), (_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, (0) * 1), 0, 0)), (0 << _GLF_IDENTITY(int(7), int(7))) | (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, (0) * 1), 0, 0))))) | (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)))))))), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) | 0)))) | (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | 0)) ^ 0)))) - (0 | 0)))))))), _GLF_IDENTITY((false ? _GLF_FUZZED(72561) : (false ? _GLF_FUZZED(80669) : _GLF_IDENTITY(_GLF_IDENTITY(0 ^ _GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)), int(int(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) / 1), max(0, 0)), 0, 0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)))), (_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)), 0 ^ (_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(0, 1, 1)), min(int(ivec3(0, 1, 1)), int(ivec3(0, 1, 1))))), 0)), 0, 0, 0)), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) * (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0))))))) | (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)))))))), 0))) | (_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((0) ^ 0, ((0) ^ 0) | ((0) ^ 0))), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (_GLF_IDENTITY(0, (0) ^ 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (_GLF_IDENTITY(0, (0) ^ 0)) >> 0)))) | (_GLF_IDENTITY(0, _GLF_IDENTITY((0), min(_GLF_IDENTITY((0), max((0), (0))), (0))) ^ 0))))), (0 ^ _GLF_IDENTITY(_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, min(0, 0)) : _GLF_FUZZED(_GLF_IDENTITY(34360, 0 ^ (_GLF_IDENTITY(34360, min(34360, 34360))))))), (_GLF_IDENTITY(0, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), 1 * (_GLF_IDENTITY(0, max(0, 0))))) >> 0, clamp((_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), 1 * (_GLF_IDENTITY(0, max(0, 0))))) >> 0, (_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), 1 * (_GLF_IDENTITY(0, max(0, 0))))) >> 0, (_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), 1 * (_GLF_IDENTITY(0, max(0, 0))))) >> 0))), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), max(0, 0)), 0, 0, 0)), int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (true ? 0 : _GLF_IDENTITY(_GLF_FUZZED((_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) - int(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_FUZZED((_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) - int(_GLF_ZERO(0.0, injectionSwitch.x)))))) << 0))), 0)), 0, 0, _GLF_IDENTITY(0, (int(_GLF_ONE(1.0, injectionSwitch.y)) | _GLF_IDENTITY(0, (0) | (0))) * (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) / 1), int(ivec4(_GLF_IDENTITY(0, (0) / 1), 1, 1, 1))))))), (false ? _GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> (0 >> _GLF_IDENTITY(int(6), int(6))))) : int(ivec4(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED((_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) - int(_GLF_ZERO(0.0, injectionSwitch.x))))))), 0)), 0, 0, _GLF_IDENTITY(0, (int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y)) | 0) * (_GLF_IDENTITY(0, (0) / 1))))))), (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, (0) * 1), 0, 0))) | (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(ivec3(0, 0, 1)))) + 0), 0)))))))), _GLF_IDENTITY(0, (0) | 0)))) | (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | 0)) ^ 0)))) - (_GLF_IDENTITY(0, max(0, 0)) | 0)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0 ^ _GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)), int(int(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)), (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, _GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, max(0, 0))))))) | (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)))))))), 0))) | (_GLF_IDENTITY(0, (0) ^ 0))), (_GLF_IDENTITY(0, 0 | (0)) ^ _GLF_IDENTITY(_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, min(0, 0)) : _GLF_FUZZED(34360))), (_GLF_IDENTITY(0, max(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) / 1), 0)), _GLF_IDENTITY(0, (0) ^ 0), 0, 0)), int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED((_injected_loop_counter ++)))), 0)), 0, 0, 0)), (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, 0 + (0))))) * 1), 0, 0))) | (int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), (_GLF_IDENTITY(0, max(0, 0))) | (_GLF_IDENTITY(0, max(0, 0)))), 0, 0, _GLF_IDENTITY(0, ~ (~ (0))))))), (true ? _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED((_injected_loop_counter ++)))), 0)), 0, 0, 0)), (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, 0 + (0))))) * 1), 0, 0))) | (int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), (_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, 0))) / 1), max(0, 0))) | (_GLF_IDENTITY(0, max(0, 0)))), 0, 0, _GLF_IDENTITY(0, ~ (~ (0))))))) : _GLF_FUZZED(_injected_loop_counter))))))), _GLF_IDENTITY(0, (0) | _GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) | 0))), max(_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) | 0))), (_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) | 0)))) << 0), _GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) | 0))), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) | 0))), 0, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), ~ (~ (int(ivec4(_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) | 0))), 0, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))))))))))))) | (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | 0)) ^ 0)))) - (_GLF_IDENTITY(0, max(0, 0)) | 0))), 0 + (~ (_GLF_IDENTITY(_GLF_IDENTITY(0 ^ _GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), clamp(~ (0), _GLF_IDENTITY(~ (0), 0 ^ (~ (0))), ~ (0))))), 0)), max(0, _GLF_IDENTITY(0, 0 | (0)))), 0, 0, _GLF_IDENTITY(0, (0) * 1)), (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), clamp(~ (0), _GLF_IDENTITY(~ (0), 0 ^ (~ (0))), ~ (0))))), 0)), max(0, _GLF_IDENTITY(0, 0 | (0)))), 0, 0, _GLF_IDENTITY(0, (0) * 1)), clamp(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), clamp(~ (0), _GLF_IDENTITY(~ (0), 0 ^ (~ (0))), ~ (0))))), 0)), max(0, _GLF_IDENTITY(0, 0 | (0)))), 0, 0, _GLF_IDENTITY(0, (0) * 1)), ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), clamp(~ (0), _GLF_IDENTITY(~ (0), 0 ^ (~ (0))), ~ (0))))), 0)), max(0, _GLF_IDENTITY(0, 0 | (0)))), 0, 0, _GLF_IDENTITY(0, (0) * 1)), ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), clamp(~ (0), _GLF_IDENTITY(~ (0), 0 ^ (~ (0))), ~ (0))))), 0)), max(0, _GLF_IDENTITY(0, 0 | (0)))), 0, 0, _GLF_IDENTITY(0, (0) * 1))))) / ivec4(1, 1, 1, 1))), int(int(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (0)), max(0, 0)), 0, 0, 0)), (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0))) | (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, (0) | 0), 0, 0)))))))), 0))) | (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (_GLF_IDENTITY(0, (0) ^ 0)) - 0)) | (_GLF_IDENTITY(0, (0) ^ 0)))) | (_GLF_IDENTITY(0, (0) ^ 0))))), (0 ^ _GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), clamp(~ (0), ~ (0), ~ (0))))), _GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(0, int(int(0))), 0, 1))))), max(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(63390))), 0)), 0, 0, 0)), int(int(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)), (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0))) | (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)))))))), 0))) | (_GLF_IDENTITY(0, (0) ^ 0)))) | 0), (0 ^ _GLF_IDENTITY(_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, min(0, 0)) : _GLF_FUZZED(34360))), (_GLF_IDENTITY(0, max(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, (0) | 0), _GLF_IDENTITY(0, (0) >> 0), 0)), int(int(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, _GLF_IDENTITY((true ? 0 : _GLF_FUZZED((_injected_loop_counter ++))), ((true ? 0 : _GLF_FUZZED((_injected_loop_counter ++)))) / 1)), 0)), 0, 0, 0)), (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, (0) * 1), 0, 0))) | (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, (0) | 0), _GLF_IDENTITY(0, (0) >> 0), 0)), int(int(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, _GLF_IDENTITY((true ? 0 : _GLF_FUZZED((_injected_loop_counter ++))), ((true ? 0 : _GLF_FUZZED((_injected_loop_counter ++)))) / 1)), 0)), 0, 0, 0)), (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, (0) * 1), 0, 0))) | (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0))))))), (true ? _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, (0) | 0), _GLF_IDENTITY(0, (0) >> 0), 0)), int(int(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, _GLF_IDENTITY((true ? 0 : _GLF_FUZZED((_injected_loop_counter ++))), ((true ? 0 : _GLF_FUZZED((_injected_loop_counter ++)))) / 1)), _GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, int(ivec3(0, 1, 1))), 1, 0, 0), max(ivec4(_GLF_IDENTITY(0, int(ivec3(0, 1, 1))), 1, 0, 0), ivec4(_GLF_IDENTITY(0, int(ivec3(0, 1, 1))), 1, 0, 0))))))), 0, 0, 0)), (int(ivec4(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, min(0, 0)))), 0)), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) * 1), clamp(_GLF_IDENTITY(0, (0) * 1), _GLF_IDENTITY(0, (0) * 1), _GLF_IDENTITY(0, (0) * 1))), 0, 0))) | (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0))))))) : _GLF_FUZZED(-11956)))) / 1)), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) | 0)))) | (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | 0)) ^ 0)))) - (0 | 0))))))))), ((false ? _GLF_FUZZED(72561) : (false ? _GLF_FUZZED(80669) : _GLF_IDENTITY(_GLF_IDENTITY(0 ^ _GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)), int(int(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) / 1), max(0, 0)), 0, 0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)))), (_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)), 0 ^ (_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(0, 1, 1)), min(int(ivec3(0, 1, 1)), int(ivec3(0, 1, 1))))), 0)), 0, 0, 0)), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) * (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0))))))) | (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)))))))), 0))) | (_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((0) ^ 0, ((0) ^ 0) | ((0) ^ 0))), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (_GLF_IDENTITY(0, (0) ^ 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (_GLF_IDENTITY(0, (0) ^ 0)) >> 0)))) | (_GLF_IDENTITY(0, _GLF_IDENTITY((0), min(_GLF_IDENTITY((0), max((0), (0))), (0))) ^ 0))))), (0 ^ _GLF_IDENTITY(_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, min(0, 0)) : _GLF_FUZZED(_GLF_IDENTITY(34360, 0 ^ (_GLF_IDENTITY(34360, min(34360, 34360))))))), (_GLF_IDENTITY(0, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), 1 * (_GLF_IDENTITY(0, max(0, 0))))) >> 0, clamp((_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), 1 * (_GLF_IDENTITY(0, max(0, 0))))) >> 0, (_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), 1 * (_GLF_IDENTITY(0, max(0, 0))))) >> 0, (_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), 1 * (_GLF_IDENTITY(0, max(0, 0))))) >> 0))), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), max(0, 0)), 0, 0, 0)), int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (true ? 0 : _GLF_IDENTITY(_GLF_FUZZED((_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) - int(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_FUZZED((_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) - int(_GLF_ZERO(0.0, injectionSwitch.x)))))) << 0))), 0)), 0, 0, _GLF_IDENTITY(0, (int(_GLF_ONE(1.0, injectionSwitch.y)) | _GLF_IDENTITY(0, (0) | (0))) * (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) / 1), int(ivec4(_GLF_IDENTITY(0, (0) / 1), 1, 1, 1))))))), (false ? _GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> (0 >> _GLF_IDENTITY(int(6), int(6))))) : int(ivec4(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED((_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) - int(_GLF_ZERO(0.0, injectionSwitch.x))))))), 0)), 0, 0, _GLF_IDENTITY(0, (int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y)) | 0) * (_GLF_IDENTITY(0, (0) / 1))))))), (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, (0) * 1), 0, 0))) | (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(ivec3(0, 0, 1)))) + 0), 0)))))))), _GLF_IDENTITY(0, (0) | 0)))) | (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | 0)) ^ 0)))) - (_GLF_IDENTITY(0, max(0, 0)) | 0)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0 ^ _GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)), int(int(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)), (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, _GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, max(0, 0))))))) | (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)))))))), 0))) | (_GLF_IDENTITY(0, (0) ^ 0))), (_GLF_IDENTITY(0, 0 | (0)) ^ _GLF_IDENTITY(_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, min(0, 0)) : _GLF_FUZZED(34360))), (_GLF_IDENTITY(0, max(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) / 1), 0)), _GLF_IDENTITY(0, (0) ^ 0), 0, 0)), int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED((_injected_loop_counter ++)))), 0)), 0, 0, 0)), (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, 0 + (0))))) * 1), 0, 0))) | (int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), (_GLF_IDENTITY(0, max(0, 0))) | (_GLF_IDENTITY(0, max(0, 0)))), 0, 0, _GLF_IDENTITY(0, ~ (~ (0))))))), (true ? _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED((_injected_loop_counter ++)))), 0)), 0, 0, 0)), (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, 0 + (0))))) * 1), 0, 0))) | (int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), (_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, 0))) / 1), max(0, 0))) | (_GLF_IDENTITY(0, max(0, 0)))), 0, 0, _GLF_IDENTITY(0, ~ (~ (0))))))) : _GLF_FUZZED(_injected_loop_counter))))))), _GLF_IDENTITY(0, (0) | _GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) | 0))), max(_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) | 0))), (_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) | 0)))) << 0), _GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) | 0))), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) | 0))), 0, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), ~ (~ (int(ivec4(_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) | 0))), 0, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))))))))))))) | (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | 0)) ^ 0)))) - (_GLF_IDENTITY(0, max(0, 0)) | 0))), 0 + (~ (_GLF_IDENTITY(_GLF_IDENTITY(0 ^ _GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), clamp(~ (0), _GLF_IDENTITY(~ (0), 0 ^ (~ (0))), ~ (0))))), 0)), max(0, _GLF_IDENTITY(0, 0 | (0)))), 0, 0, _GLF_IDENTITY(0, (0) * 1)), (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), clamp(~ (0), _GLF_IDENTITY(~ (0), 0 ^ (~ (0))), ~ (0))))), 0)), max(0, _GLF_IDENTITY(0, 0 | (0)))), 0, 0, _GLF_IDENTITY(0, (0) * 1)), clamp(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), clamp(~ (0), _GLF_IDENTITY(~ (0), 0 ^ (~ (0))), ~ (0))))), 0)), max(0, _GLF_IDENTITY(0, 0 | (0)))), 0, 0, _GLF_IDENTITY(0, (0) * 1)), ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), clamp(~ (0), _GLF_IDENTITY(~ (0), 0 ^ (~ (0))), ~ (0))))), 0)), max(0, _GLF_IDENTITY(0, 0 | (0)))), 0, 0, _GLF_IDENTITY(0, (0) * 1)), ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), clamp(~ (0), _GLF_IDENTITY(~ (0), 0 ^ (~ (0))), ~ (0))))), 0)), max(0, _GLF_IDENTITY(0, 0 | (0)))), 0, 0, _GLF_IDENTITY(0, (0) * 1))))) / ivec4(1, 1, 1, 1))), int(int(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (0)), max(0, 0)), 0, 0, 0)), (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0))) | (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, (0) | 0), 0, 0)))))))), 0))) | (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (_GLF_IDENTITY(0, (0) ^ 0)) - 0)) | (_GLF_IDENTITY(0, (0) ^ 0)))) | (_GLF_IDENTITY(0, (0) ^ 0))))), (0 ^ _GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), clamp(~ (0), ~ (0), ~ (0))))), _GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(0, int(int(0))), 0, 1))))), max(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(63390))), 0)), 0, 0, 0)), int(int(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)), (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0))) | (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0)))))))), 0))) | (_GLF_IDENTITY(0, (0) ^ 0)))) | 0), (0 ^ _GLF_IDENTITY(_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, min(0, 0)) : _GLF_FUZZED(34360))), (_GLF_IDENTITY(0, max(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, (0) | 0), _GLF_IDENTITY(0, (0) >> 0), 0)), int(int(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, _GLF_IDENTITY((true ? 0 : _GLF_FUZZED((_injected_loop_counter ++))), ((true ? 0 : _GLF_FUZZED((_injected_loop_counter ++)))) / 1)), 0)), 0, 0, 0)), (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, (0) * 1), 0, 0))) | (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, (0) | 0), _GLF_IDENTITY(0, (0) >> 0), 0)), int(int(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, _GLF_IDENTITY((true ? 0 : _GLF_FUZZED((_injected_loop_counter ++))), ((true ? 0 : _GLF_FUZZED((_injected_loop_counter ++)))) / 1)), 0)), 0, 0, 0)), (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, (0) * 1), 0, 0))) | (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0))))))), (true ? _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, (0) | 0), _GLF_IDENTITY(0, (0) >> 0), 0)), int(int(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, _GLF_IDENTITY((true ? 0 : _GLF_FUZZED((_injected_loop_counter ++))), ((true ? 0 : _GLF_FUZZED((_injected_loop_counter ++)))) / 1)), _GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, int(ivec3(0, 1, 1))), 1, 0, 0), max(ivec4(_GLF_IDENTITY(0, int(ivec3(0, 1, 1))), 1, 0, 0), ivec4(_GLF_IDENTITY(0, int(ivec3(0, 1, 1))), 1, 0, 0))))))), 0, 0, 0)), (int(ivec4(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, min(0, 0)))), 0)), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) * 1), clamp(_GLF_IDENTITY(0, (0) * 1), _GLF_IDENTITY(0, (0) * 1), _GLF_IDENTITY(0, (0) * 1))), 0, 0))) | (int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0))))))) : _GLF_FUZZED(-11956)))) / 1)), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) | 0)))) | (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | 0)) ^ 0)))) - (0 | 0)))))))))) - 0))) ^ 0) + 0))))), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))) && (_GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 0))), (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true, false, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec4(bvec3(true, false, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) && (_GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(0, (0 & -11946) | (0)) ^ 0)))) && true)); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))), (_GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))), mat2(1.0) * (max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + _GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch)))))))) / vec2(1.0, 1.0))).x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           continue;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
              barrier();
             for(int _injected_loop_counter = _GLF_IDENTITY((0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(_GLF_IDENTITY(int(8), (int(8)) >> 0), (_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)) >> 0, clamp((int(8)) >> 0, (int(_GLF_IDENTITY(8, 1 * (8)))) >> 0, (int(8)) >> 0)))) - 0))), ((0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(_GLF_IDENTITY(int(8), (int(8)) >> 0), (_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)) >> 0, clamp((int(8)) >> 0, (int(_GLF_IDENTITY(8, 1 * (8)))) >> 0, (int(8)) >> 0)))) - 0)))) >> 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
              {
               barrier();
              }
            }
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            break;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          break;
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-82.36) : injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))) > injectionSwitch.y)))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(66.49))) > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), (true ? vec3(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(vec3(-2.8, 9011.9603, 56.99)))))))) && true))) && true)))))))), (bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 0.0), (mat2x3(injectionSwitch.y, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0)), 0.0, 1.0, 1.0, 0.0)) + mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))))) || false)) && true)), _GLF_IDENTITY(true && (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-5.2)), vec2(_GLF_FUZZED(-900.074), (injectionSwitch)[1]), bvec2(false, true)))[1], (injectionSwitch[1]) - 0.0))).y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0, exp(0.0), 1.0, 1.0, 0.0, 1.0)))) * 1.0))))))), (bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(4.9)))))))))) || false)) && true))), (true && (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-5.2)), vec2(_GLF_FUZZED(-900.074), (injectionSwitch)[1]), bvec2(false, true)))[1], (injectionSwitch[1]) - _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-31.62)), float(0.0), bool(true)))) - determinant(mat2(0.0, 1.0, 0.0, 0.0)))))).y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true && (false), false, true), bvec3(bvec4(bvec3(true && (false), false, true), true)))), bool(bool(bool(_GLF_IDENTITY(bvec3(true && (false), false, true), bvec3(bvec4(bvec3(true && (false), false, true), true))))))))))), ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true && (false), false, true), bvec3(bvec4(bvec3(true && (false), false, true), true)))), bool(bool(bool(_GLF_IDENTITY(bvec3(true && (false), false, true), bvec3(bvec4(bvec3(true && (false), false, true), true)))))))))))) && true)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0, exp(0.0), 1.0, 1.0, 0.0, 1.0)))) * 1.0))))))), (bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(4.9)))))))))) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true && (false), false, true), bvec3(bvec4(bvec3(true && (false), false, true), true)))), bool(bool(bool(_GLF_IDENTITY(bvec3(true && (false), false, true), bvec3(bvec4(bvec3(true && (false), false, true), true))))))))))), ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true && (false), false, true), bvec3(bvec4(bvec3(true && (false), false, true), true)))), bool(bool(bool(_GLF_IDENTITY(bvec3(true && (false), false, true), bvec3(bvec4(bvec3(true && (false), false, true), true)))))))))))) && true)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0, exp(0.0), 1.0, 1.0, 0.0, 1.0)))) * 1.0))))))), (bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(4.9)))))))))) || false)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true && (false), false, true), bvec3(bvec4(bvec3(true && (false), false, true), true)))), bool(bool(bool(_GLF_IDENTITY(bvec3(true && (false), false, true), bvec3(bvec4(bvec3(true && (false), false, true), true))))))))))), ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true && (false), false, true), bvec3(bvec4(bvec3(true && (false), false, true), true)))), bool(bool(bool(_GLF_IDENTITY(bvec3(true && (false), false, true), bvec3(bvec4(bvec3(true && (false), false, true), true)))))))))))) && true)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0, exp(0.0), 1.0, 1.0, 0.0, 1.0)))) * 1.0))))))), (bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(4.9)))))))))) || false))), ! (! (! ((_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true && (false), false, true), bvec3(bvec4(bvec3(true && (false), false, true), true)))), bool(bool(bool(_GLF_IDENTITY(bvec3(true && (false), false, true), bvec3(bvec4(bvec3(true && (false), false, true), true))))))))))), ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true && (false), false, true), bvec3(bvec4(bvec3(true && (false), false, true), true)))), bool(bool(bool(_GLF_IDENTITY(bvec3(true && (false), false, true), bvec3(bvec4(bvec3(true && (false), false, true), true)))))))))))) && true)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0, exp(0.0), 1.0, 1.0, 0.0, 1.0)))) * 1.0))))))), (bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(4.9)))))))))) || false))))))))) && true) && true)))) && true)))))
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             break;
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              break;
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))
              return;
            }
           barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-859.463 * -3.1)), _GLF_FUZZED(-738.092)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)) && ((false))))))))
            barrier();
          }
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          continue;
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             break;
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, (false) || false)) && true), true, true, false)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, false)), false, false))))))
            {
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))
                {
                 if(_GLF_DEAD(false))
                  continue;
                 barrier();
                }
               if(_GLF_DEAD(false))
                {
                 do
                  {
                   if(_GLF_DEAD(false))
                    return;
                   if(_GLF_DEAD(false))
                    break;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     barrier();
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_WRAPPED_LOOP(false))));
                 barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                 if(_GLF_DEAD(false))
                  barrier();
                }
               barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), true)))))
              barrier();
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-2964.3707, float(_GLF_IDENTITY(mat3x4(-2964.3707, 1.0, 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, exp(0.0), 0.0, 0.0, log(1.0), abs(1.0), 0.0), (mat3x4(-2964.3707, 1.0, 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, exp(0.0), 0.0, 0.0, log(1.0), abs(1.0), 0.0)) * mat3(1.0))))), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - sin(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) - 0.0)) - 0.0)))), vec2(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-888.098), _GLF_IDENTITY(((injectionSwitch))[1], (((injectionSwitch))[1]) * round(length(normalize(vec3(1.0, 1.0, 1.0)))))), vec2(((injectionSwitch))[0], _GLF_FUZZED(1.5)), bvec2(true, false)))[0], _GLF_FUZZED(_GLF_IDENTITY(-2291.9612, mix(float(_GLF_FUZZED(7068.9618)), float(-2291.9612), bool(true))))), bvec2(true, false))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bool((! (false))))))) && true)))
            barrier();
           return;
          }
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))))
          break;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          break;
        }
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false))))), (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (_GLF_IDENTITY(false, (false) && true)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), ! (! (! (! ((injectionSwitch.x > injectionSwitch.y))))))), false || (! (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), ! (! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), ! (! (! (! ((injectionSwitch.x > injectionSwitch.y))))))), false || (! (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), ! (! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))))), true, false)), ! (! (bool(bvec3((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), ! (! (! (! ((injectionSwitch.x > injectionSwitch.y))))))), false || (! (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), ! (! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))))), true, false)))))), (_GLF_IDENTITY((_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), ! (! (! (! ((injectionSwitch.x > injectionSwitch.y))))))), false || (! (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), ! (! (! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y)))))))))))))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(! (! (! ((injectionSwitch.x > injectionSwitch.y)))), (! (! (! ((injectionSwitch.x > injectionSwitch.y))))) || false))))))), false || (! (_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)))), bool(bvec3(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)))), true, false))))))), true && ((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)))), bool(bvec3(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)))), true, false))))))))), ! (! (! (! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))))))))))), true, _GLF_IDENTITY(false, ! (! (false))))), ! (! (bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), ! (! (! (! ((injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(false || (! (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), ! (! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))), (false || (! (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), ! (! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), min((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))) / vec2(1.0, 1.0))).y))))))))) || false)))), bool(bvec2((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), ! (! (! (! ((injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(false || (! (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), ! (! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))), (false || (! (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), ! (! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), min((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))) / vec2(1.0, 1.0))).y))))))))) || false)))), true))), true, false))))))) || false)))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false || (false), true && (false || _GLF_IDENTITY((false), bool(bool((false)))))), _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(_GLF_IDENTITY(false || (false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((false || (false)), true && (_GLF_IDENTITY((false || (false)), _GLF_IDENTITY(((false || _GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) && true)), bool(bvec3(! (_GLF_IDENTITY((false), ((false)) && true)), true, false)))))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) && true)), bool(bvec3(! (_GLF_IDENTITY((false), ((false)) && true)), true, false)))))), (! (_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) && true)), bool(bvec3(! (_GLF_IDENTITY((false), ((false)) && true)), true, false))))))) || false)))))))), ! (_GLF_IDENTITY(! (((false || _GLF_IDENTITY((false), ((false)) && true)))), true && (! (((_GLF_IDENTITY(false || _GLF_IDENTITY((false), ((false)) && true), bool(_GLF_IDENTITY(bool(false || _GLF_IDENTITY((false), ((false)) && true)), bool(bvec3(bool(false || _GLF_IDENTITY((false), ((false)) && true)), false, false)))))))))))) || false))), ! (! (! (false || _GLF_IDENTITY((false), true && ((false))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false || (false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((false || (false)), true && (_GLF_IDENTITY((false || (false)), _GLF_IDENTITY(((false || _GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) && true)), bool(bvec3(! (_GLF_IDENTITY((false), ((false)) && true)), true, false)))))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) && true)), bool(bvec3(! (_GLF_IDENTITY((false), ((false)) && true)), true, false)))))), (! (_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) && true)), bool(bvec3(! (_GLF_IDENTITY((false), ((false)) && true)), true, false))))))) || false)))))))), ! (_GLF_IDENTITY(! (((false || _GLF_IDENTITY((false), ((false)) && true)))), true && (! (((_GLF_IDENTITY(false || _GLF_IDENTITY((false), ((false)) && true), bool(_GLF_IDENTITY(bool(false || _GLF_IDENTITY((false), ((false)) && true)), bool(bvec3(bool(false || _GLF_IDENTITY((false), ((false)) && true)), false, false)))))))))))) || false))), ! (! (! (false || _GLF_IDENTITY((false), true && ((false))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false || (false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((false || (false)), true && (_GLF_IDENTITY((false || (false)), _GLF_IDENTITY(((false || _GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) && true)), bool(bvec3(! (_GLF_IDENTITY((false), ((false)) && true)), true, false)))))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) && true)), bool(bvec3(! (_GLF_IDENTITY((false), ((false)) && true)), true, false)))))), (! (_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) && true)), bool(bvec3(! (_GLF_IDENTITY((false), ((false)) && true)), true, false))))))) || false)))))))), ! (_GLF_IDENTITY(! (((false || _GLF_IDENTITY((false), ((false)) && true)))), true && (! (((_GLF_IDENTITY(false || _GLF_IDENTITY((false), ((false)) && true), bool(_GLF_IDENTITY(bool(false || _GLF_IDENTITY((false), ((false)) && true)), bool(bvec3(bool(false || _GLF_IDENTITY((false), ((false)) && true)), false, false)))))))))))) || false))), ! (! (! (false || _GLF_IDENTITY((false), true && ((false)))))))))), ! (! (bool(_GLF_IDENTITY(false || (false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((false || (false)), true && (_GLF_IDENTITY((false || (false)), _GLF_IDENTITY(((false || _GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) && true)), bool(bvec3(! (_GLF_IDENTITY((false), ((false)) && true)), true, false)))))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) && true)), bool(bvec3(! (_GLF_IDENTITY((false), ((false)) && true)), true, false)))))), (! (_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) && true)), bool(bvec3(! (_GLF_IDENTITY((false), ((false)) && true)), true, false))))))) || false)))))))), ! (_GLF_IDENTITY(! (((false || _GLF_IDENTITY((false), ((false)) && true)))), true && (! (((_GLF_IDENTITY(false || _GLF_IDENTITY((false), ((false)) && true), bool(_GLF_IDENTITY(bool(false || _GLF_IDENTITY((false), ((false)) && true)), bool(bvec3(bool(false || _GLF_IDENTITY((false), ((false)) && true)), false, false)))))))))))) || false))), ! (! (! (false || _GLF_IDENTITY((false), true && ((false)))))))))))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false || (false), true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))) || (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(false || (false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((false || (false)), true && (_GLF_IDENTITY(_GLF_IDENTITY((false || _GLF_IDENTITY((false), ((false)) || false)), _GLF_IDENTITY(_GLF_IDENTITY(((false || _GLF_IDENTITY((false), ((false)) && true))), ! (_GLF_IDENTITY(! (((false || _GLF_IDENTITY((false), ((false)) && true)))), true && (! (((false || _GLF_IDENTITY((false), ((false)) && true)))))))) || false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(((false || _GLF_IDENTITY((false), ((false)) && true))), ! (_GLF_IDENTITY(! (((false || _GLF_IDENTITY((false), ((false)) && true)))), true && (! (((false || _GLF_IDENTITY((false), ((false)) && true)))))))) || false)), true && (bool(bool(_GLF_IDENTITY(((false || _GLF_IDENTITY((false), ((false)) && true))), ! (_GLF_IDENTITY(! (((false || _GLF_IDENTITY((false), ((false)) && true)))), true && (! (((false || _GLF_IDENTITY((false), ((false)) && true)))))))) || false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false || (false)), _GLF_IDENTITY(((false || _GLF_IDENTITY((false), ((false)) && true))), ! (_GLF_IDENTITY(! (((false || _GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && true, true && (((false)) && _GLF_IDENTITY(true, ! (! (true))))))))), true && (! (((false || _GLF_IDENTITY((false), ((false)) && true)))))))) || false), bool(bvec4(_GLF_IDENTITY((false || _GLF_IDENTITY((false), ! (! ((false))))), _GLF_IDENTITY(((false || _GLF_IDENTITY((false), ((false)) && true))), ! (_GLF_IDENTITY(! (((false || _GLF_IDENTITY((false), ((false)) && true)))), true && (! (((false || _GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && true, bool(bvec4(((false)) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))))))))) || false), false, true, true)))))))), ! (! (! (false || _GLF_IDENTITY((false), true && ((false)))))))))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, true)), bool(bvec3(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, true)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false, false, false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-4.0) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))), injectionSwitch.y))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
