#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))) && true), false))), ! (! (false)))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), mix(float(_GLF_FUZZED(3.9)), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), bool(bvec4(_GLF_IDENTITY(bool(true), (bool(true)) || false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
    }
   else
    {
    }
  }
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) && true)), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(8.5, 495.825)) : _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))), 1.0), (false ? _GLF_FUZZED(vec3(989.709, 6.4, 1.6)) : vec3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(8.5, 495.825)) : _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))), 1.0))))).x > injectionSwitch.y) && true))) && true))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          continue;
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = (1 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), int(ivec3(int(7), 0, _GLF_IDENTITY(0, clamp(0, 0, 0)))))))); _injected_loop_counter ++)
        {
         return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(1.0), 0.0)), dot(vec2(0.0, 1.0), vec2(abs(1.0), 0.0))), 0.0, cos(0.0), 1.0, sqrt(0.0)))) > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(1.0), 0.0)), dot(vec2(0.0, 1.0), vec2(abs(1.0), 0.0))), 0.0, cos(0.0), 1.0, sqrt(0.0)))) > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(1.0), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)))), dot(vec2(0.0, 1.0), vec2(abs(1.0), 0.0))), 0.0, cos(0.0), 1.0, sqrt(0.0)))) > injectionSwitch.y))))) || false)))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
          continue;
         return;
        }
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        return;
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), _GLF_IDENTITY(_GLF_IDENTITY((true ? int(1) : _GLF_FUZZED(_injected_loop_counter)), ((true ? int(1) : _GLF_FUZZED(_injected_loop_counter))) | ((true ? int(1) : _GLF_FUZZED(_injected_loop_counter)))), (_GLF_IDENTITY((true ? int(1) : _GLF_FUZZED(_injected_loop_counter)), ((true ? int(1) : _GLF_FUZZED(_injected_loop_counter))) | ((true ? int(1) : _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), (_GLF_FUZZED(_injected_loop_counter)) / (1 & 1)))))) + 0)), int(1)))); _injected_loop_counter --)
      {
       return;
      }
    }
   if(_GLF_DEAD(false))
    break;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bvec4(bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true, false, false)))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   do
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, false || (true))), true, false, false)), (bool(bvec4(! (_GLF_IDENTITY(true, false || (true))), true, false, false))) && _GLF_IDENTITY(true, ! (! (true))))))), true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), ((true)) && true))), _GLF_IDENTITY(bool(bvec4(! _GLF_IDENTITY((_GLF_IDENTITY(true, false || (true))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(true, false || (true)))), bool(bvec4(! ((_GLF_IDENTITY(true, false || (true)))), false, false, true))))), true, false, false)), (bool(bvec4(! (_GLF_IDENTITY(true, false || (true))), true, false, false))) && _GLF_IDENTITY(true, ! (! (true))))))), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, false || (true))), true, _GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_IDENTITY(false, bool(bvec3(false, true, false))))), _GLF_IDENTITY((bool(bvec4(! (_GLF_IDENTITY(true, false || (true))), true, _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), false || (_GLF_IDENTITY((bool(bvec4(! (_GLF_IDENTITY(true, false || (true))), true, _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), false || ((bool(bvec4(! (_GLF_IDENTITY(true, false || (true))), true, _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))) && _GLF_IDENTITY(true, ! (! (true))))))), true), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), ! (! ((true)))))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, false || (true))), true, false, false)), (bool(bvec4(! (_GLF_IDENTITY(true, false || (true))), true, false, false))) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false))))))))))))), true)))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, false || (true))), true, false, false)), (bool(bvec4(! (_GLF_IDENTITY(true, false || (true))), true, false, false))) && _GLF_IDENTITY(true, ! (! (true))))))), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (! (_GLF_IDENTITY(true, false || (true))))))))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (! (_GLF_IDENTITY(true, false || (true)))))))))))))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, false || (true))), true, false, false)), (bool(bvec4(! (_GLF_IDENTITY(true, false || (true))), true, false, false))) && _GLF_IDENTITY(true, ! (! (true)))))), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (! (_GLF_IDENTITY(true, false || (true))))))))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (! (_GLF_IDENTITY(true, false || (true)))))))))))))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, false || (true))), true, false, false)), (bool(bvec4(! (_GLF_IDENTITY(true, false || (true))), true, false, false))) && _GLF_IDENTITY(true, ! (! (true)))))))))), true), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bool(true)))))), true, false, false)), (bool(bvec4(! (_GLF_IDENTITY(true, false || (true))), true, false, false))) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false)))))))))), true)))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), bool(bvec2(! (_GLF_IDENTITY(true, false || (true))), true)))), true && (bool(_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), bool(bvec2(! (_GLF_IDENTITY(true, false || (true))), true)))))))), true, false, false)), (bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (! (_GLF_IDENTITY(true, false || (true)))))), true, false, false))) && _GLF_IDENTITY(true, ! (! (true))))))), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, false || (true))), true, false, false)), _GLF_IDENTITY((bool(bvec4(! (_GLF_IDENTITY(true, false || (true))), true, false, false))) && _GLF_IDENTITY(true, ! (! (true))), true && ((bool(bvec4(! (_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), ((true)) && true))), true, false, false))) && _GLF_IDENTITY(true, ! (! (true))))))))), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, false || (true))), true, false, false)), (bool(bvec4(! (_GLF_IDENTITY(true, false || (true))), true, false, false))) && _GLF_IDENTITY(true, ! (! (true))))))), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, false || (true))), true, false, false)), (bool(bvec4(! (_GLF_IDENTITY(true, false || (true))), true, false, false))) && _GLF_IDENTITY(true, ! (! (true))))))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, false || (true))), true, false, false)), (bool(bvec4(! (_GLF_IDENTITY(true, false || (true))), true, false, false))) && _GLF_IDENTITY(true, ! (! (true))))))), true)))), true)))))))))), false))), false)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, false || (true))), true, false, false)), (bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), bool(bvec3(! (_GLF_IDENTITY(true, false || (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, false, false))) && _GLF_IDENTITY(true, ! (! (true))))))), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, false || (true))), true, false, false)), (bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), bool(bvec3(! (_GLF_IDENTITY(true, false || (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, false, false))) && _GLF_IDENTITY(true, ! (! (true))))))), true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, false || (true))), true, false, false)), (bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), bool(bvec3(! (_GLF_IDENTITY(true, false || (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, false, false))) && _GLF_IDENTITY(true, ! (! (true))))))), true), false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || (true))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, false || (true))), true, false, false)), (bool(bvec4(! (_GLF_IDENTITY(true, false || (true))), true, false, false))) && _GLF_IDENTITY(true, ! (! (true))))))), true), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, false || (true))), true, false, false)), (bool(bvec4(! (_GLF_IDENTITY(true, false || (true))), true, false, false))) && _GLF_IDENTITY(true, ! (! (true))))))), true)))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), (! (_GLF_IDENTITY(true, _GLF_IDENTITY(false, true && (false)) || (true)))) && true)) && true), true, false, false)), (bool(bvec4(! (_GLF_IDENTITY(true, false || (true))), true, false, _GLF_IDENTITY(false, (false) && true)))) && _GLF_IDENTITY(true, ! (! (true))))))), true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true))))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, false || (true))), true, false, false)), (bool(bvec4(! (_GLF_IDENTITY(true, false || (true))), true, false, false))) && _GLF_IDENTITY(true, ! (! (true))))))), true), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), false || (bool(bvec3(true, true, false)))))))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), false || (_GLF_IDENTITY(true, false || (true))))), true, false, false)), _GLF_IDENTITY((bool(bvec4(! (_GLF_IDENTITY(true, false || (true))), true, false, false))) && _GLF_IDENTITY(true, ! (! (true))), true && (_GLF_IDENTITY((bool(bvec4(! (_GLF_IDENTITY(true, false || (true))), true, false, false))) && _GLF_IDENTITY(true, ! (! (true))), ! (! ((bool(bvec4(! (_GLF_IDENTITY(true, false || (true))), true, false, false))) && _GLF_IDENTITY(true, ! (! (true)))))))))))), true))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true))))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, false || (true))), true, false, false)), (bool(bvec4(! (_GLF_IDENTITY(true, false || (true))), true, false, false))) && _GLF_IDENTITY(true, ! (! (true))))))), true), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), false || (bool(bvec3(true, true, false)))))))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), false || (_GLF_IDENTITY(true, false || (true))))), true, false, false)), _GLF_IDENTITY((bool(bvec4(! (_GLF_IDENTITY(true, false || (true))), true, false, false))) && _GLF_IDENTITY(true, ! (! (true))), true && (_GLF_IDENTITY((bool(bvec4(! (_GLF_IDENTITY(true, false || (true))), true, false, false))) && _GLF_IDENTITY(true, ! (! (true))), ! (! ((bool(bvec4(! (_GLF_IDENTITY(true, false || (true))), true, false, false))) && _GLF_IDENTITY(true, ! (! (true)))))))))))), true))))))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, false || (true))), true, false, false)), _GLF_IDENTITY((bool(bvec4(! (_GLF_IDENTITY(true, false || (true))), true, false, false))) && _GLF_IDENTITY(true, ! (! (true))), ((bool(bvec4(! (_GLF_IDENTITY(true, false || (true))), true, false, false))) && _GLF_IDENTITY(true, ! (! (true)))) || false))))), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, false || (true))), true, false, false)), (bool(bvec4(! (_GLF_IDENTITY(true, false || (true))), true, false, false))) && _GLF_IDENTITY(true, ! (! (true))))))), true), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, false || (true))), true, false, false)), (bool(bvec4(! (_GLF_IDENTITY(true, false || (true))), true, false, false))) && _GLF_IDENTITY(true, ! (! (true))))))), true)))))))), false))), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, false || (true))), true, false, false)), (bool(bvec4(! (_GLF_IDENTITY(true, false || (true))), true, false, false))) && _GLF_IDENTITY(true, ! (! (true))))))), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, false || (true))), true, false, false)), (bool(bvec4(! (_GLF_IDENTITY(true, false || (true))), true, false, false))) && _GLF_IDENTITY(true, ! (! (true))))))), true), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, false || (true))), true, false, false)), (bool(bvec4(! (_GLF_IDENTITY(true, false || (true))), true, false, false))) && _GLF_IDENTITY(true, ! (! (true))))))), false || (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), false || (! (_GLF_IDENTITY(true, false || (true))))), true, false, false)), (bool(bvec4(! (_GLF_IDENTITY(true, false || (true))), true, false, false))) && _GLF_IDENTITY(true, ! (! (true))))))))), true)))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(true, false || (true))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(true, false || (true))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(true, false || (true))), bool(bvec4((_GLF_IDENTITY(true, false || (true))), false, true, false))), false, true)))))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, _GLF_IDENTITY(false, true && (false)) || (true))), true, false, false)), (bool(bvec4(! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bool(true)))))))), true, false, false))) && _GLF_IDENTITY(true, ! (! (true))))))), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, false || (true))), true, false, false)), (bool(bvec4(! (_GLF_IDENTITY(true, false || (true))), true, false, false))) && _GLF_IDENTITY(true, ! (! (true))))))), true), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, false || (true))), true, false, false)), (_GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(true, ! (! (true))), false, false)), false || (bool(bvec4(! (_GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(true, ! (! (true))), false, false))))) && _GLF_IDENTITY(true, ! (! (true))))))), true)))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, false || (true))), true, false, false)), (bool(bvec4(! (_GLF_IDENTITY(true, false || (true))), true, false, false))) && _GLF_IDENTITY(true, ! (! (true))))))), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, false || (true))), true, false, false)), (bool(bvec4(! (_GLF_IDENTITY(true, false || (true))), true, false, false))) && _GLF_IDENTITY(true, ! (! (true))))))), true), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, false || (true))), true, false, false)), (bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), (! (_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), ! (! (_GLF_IDENTITY(false || (true), (_GLF_IDENTITY(false || (true), bool(bvec4(false || (true), false, true, false)))) || false))))))) || false)))), true, false, false))) && _GLF_IDENTITY(true, ! (! (true))))))), true)), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, false || (true))), true, false, false)), (bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), (! (_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), ! (! (_GLF_IDENTITY(false || (true), (_GLF_IDENTITY(false || (true), bool(bvec4(false || (true), false, true, false)))) || false))))))) || false)))), true, false, false))) && _GLF_IDENTITY(true, ! (! (true))))))), true)), bvec3(bvec4(bvec3(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, false || (true))), true, false, false)), (bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), (! (_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), ! (! (_GLF_IDENTITY(false || (true), (_GLF_IDENTITY(false || (true), bool(bvec4(false || (true), false, true, false)))) || false))))))) || false)))), true, false, false))) && _GLF_IDENTITY(true, ! (! (true))))))), true)), false))), false)), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, false || (true))), true, false, false)), (bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), (! (_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), ! (! (_GLF_IDENTITY(false || (true), (_GLF_IDENTITY(false || (true), bool(bvec4(false || (true), false, true, false)))) || false))))))) || false)))), true, false, false))) && _GLF_IDENTITY(true, ! (! (true))))))), true)), bvec3(bvec4(bvec3(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, false || (true))), true, false, false)), (bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), (! (_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), ! (! (_GLF_IDENTITY(false || (true), (_GLF_IDENTITY(false || (true), bool(bvec4(false || (true), false, true, false)))) || false))))))) || false)))), true, false, false))) && _GLF_IDENTITY(true, ! (! (true))))))), true)), false))), false))), bvec3(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, false || (true))), true, false, false)), (bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), (! (_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), ! (! (_GLF_IDENTITY(false || (true), (_GLF_IDENTITY(false || (true), bool(bvec4(false || (true), false, true, false)))) || false))))))) || false)))), true, false, false))) && _GLF_IDENTITY(true, ! (! (true))))))), true)), bvec3(bvec4(bvec3(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, false || (true))), true, false, false)), (bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), (! (_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), ! (! (_GLF_IDENTITY(false || (true), (_GLF_IDENTITY(false || (true), bool(bvec4(false || (true), false, true, false)))) || false))))))) || false)))), true, false, false))) && _GLF_IDENTITY(true, ! (! (true))))))), true)), false))), false))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, false || (true))), true, false, false)), (bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), (! (_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), ! (! (_GLF_IDENTITY(false || (true), (_GLF_IDENTITY(false || (true), bool(bvec4(false || (true), false, true, false)))) || false))))))) || false)))), true, false, false))) && _GLF_IDENTITY(true, ! (! (true))))))), true)), bvec3(bvec4(bvec3(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, false || (true))), true, false, false)), (bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), (! (_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), ! (! (_GLF_IDENTITY(false || (true), (_GLF_IDENTITY(false || (true), bool(bvec4(false || (true), false, true, false)))) || false))))))) || false)))), true, false, false))) && _GLF_IDENTITY(true, ! (! (true))))))), true)), false))), false))), bvec3(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, false || (true))), true, false, false)), (bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), (! (_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), ! (! (_GLF_IDENTITY(false || (true), (_GLF_IDENTITY(false || (true), bool(bvec4(false || (true), false, true, false)))) || false))))))) || false)))), true, false, false))) && _GLF_IDENTITY(true, ! (! (true))))))), true)), bvec3(bvec4(bvec3(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, false || (true))), true, false, false)), (bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), (! (_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), ! (! (_GLF_IDENTITY(false || (true), (_GLF_IDENTITY(false || (true), bool(bvec4(false || (true), false, true, false)))) || false))))))) || false)))), true, false, false))) && _GLF_IDENTITY(true, ! (! (true))))))), true)), false))), false))))))), true))))))))))), false))), false)))))))))))))))))), false || (false))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
    return;
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) && true))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), 0 + (int(4)))))); _injected_loop_counter --)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bool(bool(_GLF_DEAD(false)))))), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bool(bool(_GLF_DEAD(false)))))))), (bool(bool(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bool(bool(_GLF_DEAD(false))))))))) && true))), _GLF_IDENTITY((_GLF_DEAD(false)) || false, ((_GLF_DEAD(false)) || false) || false)))))
    {
     if(_GLF_DEAD(false))
      continue;
     barrier();
    }
  }
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) | (uvec3(0u, 0u, 0u))))) ^ (gl_WorkGroupID)).x;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
      }
     else
      {
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   else
    {
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       return;
      }
    }
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), ! (! (true))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(_GLF_IDENTITY(transpose(mat2(1.0)), (transpose(mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0)), (_GLF_IDENTITY(transpose(mat2(1.0)), (transpose(mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0))) - mat2(0.0, 0.0, 0.0, 0.0)))), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(injectionSwitch)))).x, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), (transpose(mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0)))), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(injectionSwitch)))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), (transpose(mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0)))), (false ? _GLF_FUZZED(mat2(3.5, 5.1, 1.4, -1.2)) : _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), (transpose(mat2(1.0))) / mat2(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9.0)), bool(false))))), 1.0, 1.0, 1.0)))))), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(injectionSwitch)))).x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), (transpose(mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0)))), (false ? _GLF_FUZZED(mat2(3.5, 5.1, 1.4, -1.2)) : _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), (transpose(mat2(1.0))) / mat2(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9.0)), bool(false))))), 1.0, 1.0, 1.0)))))), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(injectionSwitch)))).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), (transpose(mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0)))), (false ? _GLF_FUZZED(mat2(3.5, 5.1, 1.4, -1.2)) : _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), (transpose(mat2(1.0))) / mat2(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9.0)), bool(false))))), 1.0, 1.0, 1.0)))))), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(injectionSwitch)))).x, mix(float(_GLF_FUZZED(-0.6)), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), (transpose(mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0)))), (false ? _GLF_FUZZED(mat2(3.5, 5.1, 1.4, -1.2)) : _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), (transpose(mat2(1.0))) / mat2(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9.0)), bool(false))))), 1.0, 1.0, 1.0)))))), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(injectionSwitch)))).x), bool(true)))) - 0.0) : _GLF_FUZZED(923.408))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), (transpose(mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0)))), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(injectionSwitch)))).x, (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), (transpose(mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0)))), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(injectionSwitch)))).x : _GLF_FUZZED(-89.12))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), (transpose(mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0)))), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(injectionSwitch)))).x, (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), (transpose(mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0)))), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(injectionSwitch)))).x : _GLF_FUZZED(-89.12))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), (transpose(mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0)))), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(injectionSwitch)))).x, (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), (transpose(mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0)))), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(injectionSwitch)))).x : _GLF_FUZZED(-89.12))))))), float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), (transpose(mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0)))), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(injectionSwitch)))).x, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), _GLF_IDENTITY((transpose(mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0), transpose(transpose(_GLF_IDENTITY((transpose(mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0), ((transpose(mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0)) / mat2(1.0, 1.0, 1.0, 1.0)))))))), (true ? (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(mat2(1.0), mat2(_GLF_IDENTITY(mat2(mat2(1.0)), (false ? _GLF_FUZZED(mat2(-400.495, -752.392, -0.5, -88.25)) : mat2(mat2(1.0))))))) - mat2(0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(injectionSwitch)))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), (transpose(mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0)))), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(injectionSwitch)))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), (transpose(mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0)))), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(injectionSwitch)))), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), (transpose(mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0)))), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(injectionSwitch)))))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), (transpose(mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0)))), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(injectionSwitch)))))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), (transpose(mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0)))), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(injectionSwitch)))).x, (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), (transpose(mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY((true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(injectionSwitch)), max((true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(injectionSwitch)), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(injectionSwitch)))))).x : _GLF_FUZZED(-89.12)))))))) < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(sin(0.0), min(sin(0.0), _GLF_IDENTITY(sin(0.0), 0.0 + (sin(0.0))))) + (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false ? _GLF_FUZZED(-5.3) : injectionSwitch.y, _GLF_IDENTITY(0.0 + (false ? _GLF_FUZZED(-5.3) : injectionSwitch.y), mix(float(_GLF_FUZZED(-86.59)), float(0.0 + (false ? _GLF_FUZZED(-5.3) : injectionSwitch.y)), bool(true)))))))))), (_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(true, ! (! (true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (_GLF_IDENTITY(true, ! (! (true)))))))), ! (! (true))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(_GLF_IDENTITY(transpose(mat2(1.0)), (transpose(mat2(1.0))) / mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, 1.0)), (_GLF_IDENTITY(transpose(mat2(1.0)), (transpose(mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0))) - mat2(0.0, 0.0, 0.0, 0.0)))), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(injectionSwitch)))).x, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(unpackUnorm2x16(workgroup_size)) : injectionSwitch))) * _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), (transpose(mat2(1.0))) / mat2(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec4(sqrt(0.0), 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec4(sqrt(0.0), 0.0, 1.0, 0.0))), abs(0.0), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0))))))), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(injectionSwitch)))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), (transpose(mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0)))), (false ? _GLF_FUZZED(mat2(3.5, 5.1, 1.4, -1.2)) : _GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x4(1.0, 1.0, 1.0, 1.0, cos(0.0), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 0.0, 1.0, sin(0.0))), min(float(mat3x4(1.0, 1.0, 1.0, 1.0, cos(0.0), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 0.0, 1.0, sin(0.0))), float(mat3x4(1.0, 1.0, 1.0, 1.0, cos(0.0), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 0.0, 1.0, sin(0.0)))))), 1.0, 1.0))), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), (transpose(mat2(1.0))) / mat2(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9.0)), bool(false))))), 1.0, 1.0, 1.0)))))), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(injectionSwitch)))).x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), (transpose(mat2(1.0))) / _GLF_IDENTITY(mat2(1.0, 1.0, 1.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat2(1.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(mat2(_GLF_IDENTITY(mat4x2(mat2(1.0, 1.0, 1.0, 1.0)), (true ? mat4x2(mat2(1.0, 1.0, 1.0, 1.0)) : _GLF_FUZZED(mat4x2(-2.8, 89.53, -9.4, -28.91, -346.901, -31.30, -9987.2094, -1.1))))), (mat2(_GLF_IDENTITY(mat4x2(mat2(1.0, 1.0, 1.0, 1.0)), (true ? mat4x2(mat2(1.0, 1.0, 1.0, 1.0)) : _GLF_FUZZED(mat4x2(-2.8, 89.53, -9.4, -28.91, -346.901, -31.30, -9987.2094, -1.1)))))) * mat2(1.0))))))))), (false ? _GLF_FUZZED(_GLF_IDENTITY(mat2(3.5, 5.1, 1.4, -1.2), mat2(mat4x2(_GLF_IDENTITY(mat2(3.5, 5.1, 1.4, -1.2), transpose(transpose(mat2(3.5, 5.1, 1.4, -1.2)))))))) : _GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), (mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))) - mat2(0.0, 0.0, 0.0, 0.0)), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), (transpose(mat2(1.0))) / mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_FUZZED(649.019)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) + (_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(1.0), clamp(float(1.0), float(1.0), float(1.0))), float(_GLF_FUZZED(9.0)), bool(false))))), 1.0, 1.0, 1.0)))))), (_GLF_IDENTITY(true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(injectionSwitch), min(true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(injectionSwitch), true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(injectionSwitch)))))).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), (transpose(mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0)))), (false ? _GLF_FUZZED(mat2(3.5, 5.1, 1.4, -1.2)) : _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), (transpose(mat2(_GLF_IDENTITY(1.0, float(mat2(1.0, 0.0, 1.0, 0.0)))))) / mat2(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9.0)), bool(false))))), 1.0, 1.0, 1.0)))))), (true ? (injectionSwitch) * mat2(1.0) : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), max(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch)))))).x, mix(float(_GLF_FUZZED(-0.6)), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), (transpose(mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0)))), (false ? _GLF_FUZZED(mat2(3.5, 5.1, 1.4, -1.2)) : _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), (transpose(mat2(1.0))) / mat2(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9.0)), bool(false))))), 1.0, 1.0, 1.0)))))), mat2(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), (transpose(mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0)))), (false ? _GLF_FUZZED(mat2(3.5, 5.1, 1.4, -1.2)) : _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), (transpose(mat2(1.0))) / mat2(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9.0)), bool(false))))), 1.0, 1.0, 1.0))))))))), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(injectionSwitch)))).x), bool(true)))) - 0.0) : _GLF_FUZZED(923.408))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), (transpose(mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0)))), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(injectionSwitch)))).x, (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), (transpose(mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0)))), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(injectionSwitch)))).x : _GLF_FUZZED(-89.12))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), (transpose(mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0)))), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(injectionSwitch)))).x, (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), (transpose(mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0)))), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(injectionSwitch)))).x : _GLF_FUZZED(-89.12))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), (transpose(mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0)))), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(injectionSwitch)))).x, (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), (transpose(mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0)))), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(injectionSwitch)))).x : _GLF_FUZZED(-89.12)))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), (transpose(mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0)))), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(injectionSwitch)))).x, (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), (transpose(mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0)))), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(injectionSwitch)))).x : _GLF_FUZZED(-89.12))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), (transpose(mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0)))), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(injectionSwitch)))).x, (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), (transpose(mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0)))), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(injectionSwitch)))).x : _GLF_FUZZED(-89.12))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), (transpose(mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0)))), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(injectionSwitch)))).x, (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), (transpose(mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0)))), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(injectionSwitch)))).x : _GLF_FUZZED(-89.12))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), (transpose(mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0)))), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(injectionSwitch)))).x, (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), (transpose(mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0)))), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(injectionSwitch)))).x : _GLF_FUZZED(-89.12)))) - 0.0))))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), (transpose(mat2(1.0))) / mat2(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8.8)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, float(vec4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, log(1.0), 0.0))), 1.0)))), (true ? (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))) : _GLF_FUZZED(injectionSwitch)))).x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0))), _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), (transpose(mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0)))), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(injectionSwitch)))).x : _GLF_FUZZED(-89.12))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), (transpose(mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0)))), (true ? _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) * mat2(1.0) : _GLF_FUZZED(injectionSwitch)))).x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x)), mix(vec3(_GLF_FUZZED(-1.7), _GLF_FUZZED(707.451), _GLF_FUZZED(-2.7)), vec3((vec3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x)))[0], (vec3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x)))[1], (vec3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x)))[2]), bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), min(vec2(_GLF_IDENTITY(vec3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x)), mix(vec3(_GLF_FUZZED(-1.7), _GLF_FUZZED(707.451), _GLF_FUZZED(-2.7)), vec3((vec3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x)))[0], (vec3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x)))[1], (vec3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x)))[2]), bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), vec2(_GLF_IDENTITY(vec3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x)), mix(vec3(_GLF_FUZZED(-1.7), _GLF_FUZZED(707.451), _GLF_FUZZED(-2.7)), vec3((vec3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x)))[0], (vec3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x)))[1], (vec3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x)))[2]), bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(_GLF_IDENTITY(transpose(mat2(1.0)), mat2(mat4x2(transpose(mat2(1.0))))), _GLF_IDENTITY((transpose(mat2(1.0))), mat2(1.0) * ((transpose(mat2(1.0))))) / mat2(1.0, 1.0, 1.0, 1.0)))), (true ? (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * mat2(1.0) : _GLF_FUZZED(injectionSwitch)))).x : _GLF_FUZZED(-89.12))))))), float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), (transpose(mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0)))), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(injectionSwitch)))).x, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), _GLF_IDENTITY((transpose(mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0), transpose(transpose(_GLF_IDENTITY((transpose(mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0), ((transpose(mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0)) / mat2(1.0, 1.0, 1.0, 1.0)))))))), (true ? (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(mat2(1.0), mat2(_GLF_IDENTITY(mat2(mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)))), (false ? _GLF_FUZZED(mat2(-400.495, -752.392, -0.5, -88.25)) : mat2(mat2(1.0))))))) - mat2(0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(injectionSwitch)))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), (transpose(mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0)))), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(injectionSwitch)))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), (transpose(mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0)))), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(injectionSwitch)))), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), (transpose(mat2(1.0))) / mat2(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)))), (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false))), false, false))) ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(injectionSwitch)))))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), (transpose(mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0)))), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(injectionSwitch)))))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), (transpose(mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0)))), ((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), (transpose(mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0))))) * mat2(1.0)), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(injectionSwitch)))).x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), (transpose(mat2(_GLF_IDENTITY(1.0, exp(0.0) * (1.0))))) / mat2(1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY((true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(injectionSwitch)), max((true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(injectionSwitch)), _GLF_IDENTITY((true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(injectionSwitch)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * ((true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(injectionSwitch)))))))).x, (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), (transpose(mat2(_GLF_IDENTITY(1.0, exp(0.0) * (1.0))))) / mat2(1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY((true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(injectionSwitch)), max((true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(injectionSwitch)), _GLF_IDENTITY((true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(injectionSwitch)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * ((true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(injectionSwitch)))))))).x : _GLF_FUZZED(53.39))) : _GLF_FUZZED(-89.12)))))))) < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(sin(0.0), min(sin(0.0), _GLF_IDENTITY(sin(0.0), 0.0 + (sin(0.0))))) + (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false ? _GLF_FUZZED(-5.3) : injectionSwitch.y, _GLF_IDENTITY(0.0 + (false ? _GLF_FUZZED(-5.3) : injectionSwitch.y), mix(float(_GLF_FUZZED(-86.59)), float(0.0 + (false ? _GLF_FUZZED(-5.3) : injectionSwitch.y)), bool(true))))))))))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           return;
          }
         else
          {
          }
        }
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((false) && true, ((false) && true) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true && (bool(bvec3(_GLF_IDENTITY((false) && true, ((false) && true) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))));
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-5.9, -6.9)) : injectionSwitch)).x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(9.6)), float(vec2((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-5.9, -6.9)) : injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, abs(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0)), 1.0, tan(0.0), 1.0, 1.0, 0.0, tan(0.0), 0.0))))) ? injectionSwitch.x : _GLF_FUZZED(9.6)), 1.0)))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)))))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), false || ((false))), bool(bvec2(! (false), false)))))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           barrier();
          }
        }
       barrier();
      }
    }
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    return;
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_base = subgroup_id * subgroup_size;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((workgroup_base + subgroup_base), (false ? _GLF_FUZZED(subgroup_id) : (workgroup_base + subgroup_base))) ^ 0u), (_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((workgroup_base + subgroup_base), (false ? _GLF_FUZZED(subgroup_id) : (workgroup_base + subgroup_base))) ^ 0u)) >> 0u), (false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ (0u | 0u)) + subgroup_base), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) | ((workgroup_base + subgroup_base))))) ^ 0u), (_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((workgroup_base + subgroup_base), (false ? _GLF_FUZZED(subgroup_id) : (workgroup_base + subgroup_base))) ^ 0u)) >> 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) >> 0u)), (false ? _GLF_FUZZED(subgroup_id) : (workgroup_base + subgroup_base))) ^ 0u), (_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((workgroup_base + subgroup_base), (false ? _GLF_FUZZED(subgroup_id) : (workgroup_base + subgroup_base))) ^ 0u)) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_base), (false ? _GLF_FUZZED(subgroup_id) : (workgroup_base + subgroup_base))), clamp(_GLF_IDENTITY((workgroup_base + subgroup_base), (false ? _GLF_FUZZED(subgroup_id) : (workgroup_base + subgroup_base))), _GLF_IDENTITY((workgroup_base + subgroup_base), (false ? _GLF_FUZZED(subgroup_id) : (workgroup_base + subgroup_base))), _GLF_IDENTITY((workgroup_base + subgroup_base), (false ? _GLF_FUZZED(subgroup_id) : (workgroup_base + subgroup_base))))) ^ 0u), (_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((workgroup_base + subgroup_base), (false ? _GLF_FUZZED(subgroup_id) : (workgroup_base + subgroup_base))) ^ 0u)) >> 0u))))) + _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 do
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_FALSE(false), false, true), bvec3(bvec3(bvec3(_GLF_WRAPPED_IF_FALSE(false), false, true)))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(false))
      break;
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           if(_GLF_DEAD(false))
            continue;
           return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
              return;
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
           return;
          }
        }
       barrier();
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        return;
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base, (false ? _GLF_FUZZED(subgroup_size) : workgroup_base + subgroup_base)) + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), uint(uvec3(((subgroup_local_id + 1) % subgroup_size), 0u, _GLF_IDENTITY((1u ^ 1u), min((1u ^ 1u), (1u ^ 1u))))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(244.169) : injectionSwitch.x)) > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(244.169) : injectionSwitch.x)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(244.169) : injectionSwitch.x)) > injectionSwitch.y)))), false, true, false))))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), bool(bvec4((true), false, false, true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       return;
      }
    }
   do
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) / int(_GLF_ONE(1.0, injectionSwitch.y))), (true ? _GLF_IDENTITY(_injected_loop_counter --, ~ (~ (_injected_loop_counter --))) : _GLF_FUZZED(_injected_loop_counter))), int(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-649.503)), bool(false))), injectionSwitch.y)) * (_injected_loop_counter --)))
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           barrier();
          }
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
       atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ((! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)));
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
      }
     else
      {
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       return;
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(7.2), min(_GLF_FUZZED(7.2), _GLF_FUZZED(7.2)))), vec2(_GLF_FUZZED((- -2980.1235)), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1])), float(vec3(_GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1])), 0.0, abs(tan(0.0)))))), bvec2(false, true))).y), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(7.2)), vec2(_GLF_FUZZED((- -2980.1235)), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1])), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-614.877) : _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x)))], min((injectionSwitch)[1], (injectionSwitch)[1]))))), bvec2(false, true))).y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(7.2)), vec2(_GLF_FUZZED((- -2980.1235)), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))).y)), true && (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(7.2)), vec2(_GLF_FUZZED((- -2980.1235)), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))).y)))))))))))
      {
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           else
            {
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
        }
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y) || false)))))
      return;
    }
  }
 atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
