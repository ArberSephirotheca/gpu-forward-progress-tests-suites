#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, 0.0))), injectionSwitch.x)) > injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true))))), (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true))))), (injectionSwitch.x > injectionSwitch.y)))))), true && (bool(_GLF_IDENTITY(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true))))), (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true))))), (injectionSwitch.x > injectionSwitch.y)))))))))))))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false || (bool(bool(_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))))), ! (_GLF_IDENTITY(! (! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (! (! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(26.89)), bool(false))))).y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) && true)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec2(injectionSwitch.y, 1.0), clamp(vec2(injectionSwitch.y, 1.0), _GLF_IDENTITY(vec2(injectionSwitch.y, 1.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(injectionSwitch.y, 1.0))), vec2(injectionSwitch.y, 1.0))))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-3.3))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       barrier();
      }
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, false)), true && (bool(bvec4(_GLF_DEAD(false), false, false, false))))))
      return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), ((false)) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.1)), vec2(_GLF_FUZZED(float(-33940)), (injectionSwitch)[1]), bvec2(false, true))).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.1)), vec2(_GLF_FUZZED(float(-33940)), (injectionSwitch)[1]), bvec2(false, true))).x, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.1)), vec2(_GLF_FUZZED(float(-33940)), (injectionSwitch)[1]), bvec2(false, true))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.1)), vec2(_GLF_FUZZED(float(-33940)), (injectionSwitch)[1]), bvec2(false, true))).x))) * abs(1.0)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true, false)))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), true)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), true)))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), true))))))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), true))))))), false))))))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(min(injectionSwitch, 287.009)) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) && true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true && (_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) * mat2(1.0)), (injectionSwitch) + vec2(0.0, 0.0)).x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) * mat2(1.0)), (injectionSwitch) + vec2(0.0, 0.0)).x), float(_GLF_FUZZED((- 4.1))), bool(false))) > injectionSwitch.y), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) * mat2(1.0)), (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(1, (false ? _GLF_FUZZED(94554) : 1)), _GLF_IDENTITY(1, (1) >> 0)))]) + _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0), vec2(1.0, 1.0)), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0), _GLF_IDENTITY(mat2(1.0) * (vec2(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0)), mix(vec2((mat2(1.0) * (vec2(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0)))[0], (mat2(1.0) * (vec2(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0)))[1]), vec2(_GLF_FUZZED(-8.4), _GLF_FUZZED(-425.569)), bvec2(false, false)))), vec2(1.0, 1.0)), clamp(dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0), vec2(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0), vec2(1.0, 1.0)), dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0), vec2(1.0, 1.0)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(24.07))), (injectionSwitch[1]) / determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), injectionSwitch[1], injectionSwitch[1]))), mix(vec2(_GLF_FUZZED((_GLF_IDENTITY(4194.3141, clamp(4194.3141, 4194.3141, _GLF_IDENTITY(4194.3141, (4194.3141) * 1.0))) / 5560.4826)), (vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, (1) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))], _GLF_IDENTITY(_GLF_IDENTITY(float(mat3x2(injectionSwitch[1], 1.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), 0.0)), 1.0)), float(mat3(float(mat3x2(injectionSwitch[1], 1.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), 0.0)), 1.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0))), (false ? _GLF_FUZZED(distance(-9.7, mix(-6.8, -20.21, -49.76))) : _GLF_IDENTITY(float(mat3x2(injectionSwitch[1], 1.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))))), 0.0)), 1.0)), float(mat3(float(mat3x2(injectionSwitch[1], 1.0, 0.0, 1.0, determinant(_GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), 0.0), mat3(mat3(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), 0.0))))), 1.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0)))))), (injectionSwitch[1]) + _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(atan((-5.8 - -2756.7731), -2793.3637)) : 1.0))))), max(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))))), 0.0), vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(_GLF_IDENTITY(vec2(0.0, 0.0), min(_GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED(-8.5), _GLF_FUZZED((-8.9))), vec2(_GLF_IDENTITY((vec2(0.0, 0.0))[0], 1.0 * (_GLF_IDENTITY((vec2(0.0, 0.0)), ((vec2(0.0, 0.0))) - sqrt(vec2(0.0, 0.0)))[0])), (vec2(0.0, 0.0))[1]), bvec2(true, true))), vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))), vec2(1.0, 1.0))), 0.0), vec2(1.0, 1.0)), clamp(dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))), 0.0), vec2(1.0, 1.0)), dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0), vec2(1.0, 1.0)), dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0), vec2(1.0, 1.0)))))), clamp(_GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY((injectionSwitch[1]), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))) + ((injectionSwitch[1]))) / determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), injectionSwitch[1], injectionSwitch[1]))))[1]), vec2((vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-23.18), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(1.8)), bvec2(true, false)))[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(6200.3431, 0.3))))))[1]) + _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0), vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0), vec2(1.0, 1.0)), clamp(dot(vec2(_GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), 1.0 * (dot(vec2(0.0, 0.0), vec2(1.0, 1.0))))), 0.0), _GLF_IDENTITY(vec2(1.0, 1.0), (true ? _GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), vec2(1.0, 1.0))) : _GLF_FUZZED(injectionSwitch)))), dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) * mat2(1.0)))), 0.0), vec2(1.0, 1.0)), dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0), vec2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)))))), clamp(_GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))[1]) / determinant(mat3(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(-121.527)), float(injectionSwitch[1]), bool(true)))))))))[0], _GLF_FUZZED(33.65)), bvec2(true, false)))).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(sqrt(-8.6)) : injectionSwitch.y)))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(7.8, -398.646)) : (injectionSwitch))) - vec2(0.0, 0.0))) * vec2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-11.09))))), 1.0)).y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, abs(cos(0.0))))).x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true)))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-3.9)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), bool(true))) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && _GLF_IDENTITY((false), true && ((false))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), bool(bvec2((false), true)))))) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))).y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))))), false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))) && true)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3(injectionSwitch.y, 0.0, 0.0, 0.0, round(length(normalize(1.0))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(0.0), length(0.0)), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(injectionSwitch.y, 0.0, 0.0, 0.0, round(length(normalize(1.0))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(0.0), _GLF_IDENTITY(length(0.0), _GLF_IDENTITY(max(_GLF_IDENTITY(length(0.0), float(_GLF_IDENTITY(mat4x3(length(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, tan(0.0), 1.0), transpose(transpose(mat4x3(length(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, tan(0.0), 1.0)))))), length(0.0)), sin(0.0) + (max(_GLF_IDENTITY(length(0.0), float(_GLF_IDENTITY(mat4x3(length(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, tan(0.0), 1.0), transpose(transpose(mat4x3(length(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, tan(0.0), 1.0)))))), length(0.0)))))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3(injectionSwitch.y, 0.0, 0.0, 0.0, round(length(normalize(1.0))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(0.0), length(0.0)), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(injectionSwitch.y, 0.0, 0.0, 0.0, round(length(normalize(1.0))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(0.0), _GLF_IDENTITY(length(0.0), max(_GLF_IDENTITY(length(0.0), float(_GLF_IDENTITY(mat4x3(length(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, tan(0.0), 1.0), transpose(transpose(mat4x3(length(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, tan(0.0), 1.0)))))), length(0.0)))))))), mix(float(_GLF_FUZZED(5.8)), float(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3(injectionSwitch.y, 0.0, 0.0, 0.0, round(length(normalize(1.0))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(0.0), length(0.0)), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(injectionSwitch.y, 0.0, 0.0, 0.0, round(length(normalize(1.0))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(0.0), _GLF_IDENTITY(length(0.0), max(_GLF_IDENTITY(length(0.0), float(_GLF_IDENTITY(mat4x3(length(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, tan(0.0), 1.0), transpose(transpose(mat4x3(length(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, tan(0.0), 1.0)))))), length(0.0))))))))), bool(true))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3(injectionSwitch.y, 0.0, 0.0, 0.0, round(length(normalize(1.0))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(0.0), length(0.0)), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(injectionSwitch.y, 0.0, 0.0, 0.0, round(length(normalize(1.0))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(0.0), _GLF_IDENTITY(length(0.0), max(_GLF_IDENTITY(length(0.0), float(_GLF_IDENTITY(mat4x3(length(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, tan(0.0), 1.0), transpose(transpose(mat4x3(length(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, tan(0.0), 1.0)))))), length(0.0)))))))), mix(float(_GLF_FUZZED(5.8)), float(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3(injectionSwitch.y, 0.0, 0.0, 0.0, round(length(normalize(1.0))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(0.0), length(0.0)), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(injectionSwitch.y, 0.0, 0.0, 0.0, round(length(normalize(1.0))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(0.0), _GLF_IDENTITY(length(0.0), max(_GLF_IDENTITY(length(0.0), float(_GLF_IDENTITY(mat4x3(length(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, tan(0.0), 1.0), transpose(transpose(mat4x3(length(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, tan(0.0), 1.0)))))), length(0.0))))))))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3(injectionSwitch.y, 0.0, 0.0, 0.0, round(length(normalize(1.0))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(0.0), length(0.0)), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(injectionSwitch.y, 0.0, 0.0, 0.0, round(length(normalize(1.0))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(0.0), _GLF_IDENTITY(length(0.0), max(_GLF_IDENTITY(length(0.0), float(_GLF_IDENTITY(mat4x3(length(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, tan(0.0), 1.0), transpose(transpose(mat4x3(length(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, tan(0.0), 1.0)))))), length(0.0)))))))), mix(float(_GLF_FUZZED(5.8)), float(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3(injectionSwitch.y, 0.0, 0.0, 0.0, round(length(normalize(1.0))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(0.0), length(0.0)), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(injectionSwitch.y, 0.0, 0.0, 0.0, round(length(normalize(1.0))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(0.0), _GLF_IDENTITY(length(0.0), max(_GLF_IDENTITY(length(0.0), float(_GLF_IDENTITY(mat4x3(length(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, tan(0.0), 1.0), transpose(transpose(mat4x3(length(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, tan(0.0), 1.0)))))), length(0.0))))))))), bool(true))))), _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3(injectionSwitch.y, 0.0, 0.0, 0.0, round(length(normalize(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(6.5)), bool(false)))))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(0.0), length(0.0)), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(injectionSwitch.y, 0.0, 0.0, 0.0, round(length(normalize(1.0))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(0.0), _GLF_IDENTITY(length(0.0), max(_GLF_IDENTITY(length(0.0), float(_GLF_IDENTITY(mat4x3(length(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, tan(0.0), 1.0), transpose(transpose(mat4x3(length(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, tan(0.0), 1.0)))))), length(0.0))))))))))), ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(43.85) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) * vec2(1.0, 1.0)).y, 0.0, 0.0, 0.0, round(length(_GLF_IDENTITY(normalize(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))))), max(normalize(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(normalize(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))))), mix(float(_GLF_FUZZED(-1191.9087)), float(normalize(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))))), bool(true))))))), 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x, float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 0.0), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat3x2(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat3x2(826.431, -586.800, 8.8, 6063.2647, _GLF_IDENTITY(1.6, 1.0 * (1.6)), 811.522)) : mat3x2(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 0.0))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x, float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 0.0), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat3x2(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat3x2(826.431, -586.800, 8.8, 6063.2647, _GLF_IDENTITY(1.6, 1.0 * (1.6)), 811.522)) : mat3x2(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 0.0))))))), float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x, float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 0.0), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat3x2(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat3x2(826.431, -586.800, 8.8, 6063.2647, _GLF_IDENTITY(1.6, 1.0 * (1.6)), 811.522)) : mat3x2(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 0.0))))))), 1.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x, float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 0.0), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat3x2(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat3x2(826.431, -586.800, 8.8, 6063.2647, _GLF_IDENTITY(1.6, 1.0 * (1.6)), 811.522)) : mat3x2(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 0.0))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x, float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 0.0), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat3x2(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat3x2(826.431, -586.800, 8.8, 6063.2647, _GLF_IDENTITY(1.6, 1.0 * (1.6)), 811.522)) : mat3x2(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 0.0)))))))))), sqrt(0.0), length(0.0)), _GLF_IDENTITY(_GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) + _GLF_IDENTITY((mat3(injectionSwitch.y, 0.0, 0.0, 0.0, round(length(normalize(1.0))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(0.0), length(0.0))), mat3(mat3x4((mat3(injectionSwitch.y, 0.0, 0.0, 0.0, round(length(normalize(1.0))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(0.0), length(0.0)))))), transpose(transpose(_GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)) + (mat3(injectionSwitch.y, 0.0, 0.0, 0.0, round(length(normalize(1.0))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(0.0), length(0.0))), (_GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(injectionSwitch.y, 0.0, 0.0, 0.0, round(length(normalize(1.0))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(2271.8154) : _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))))), length(0.0))), (mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(injectionSwitch.y, 0.0, 0.0, 0.0, round(length(normalize(1.0))), 0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) + 0.0), sqrt(0.0), length(0.0)))) - _GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(mat3(_GLF_IDENTITY(mat4(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), (_GLF_IDENTITY(mat4(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), (true ? mat4(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat4(-2.0, -3.8, -30.60, -6952.6373, 0.9, 1581.4933, -8625.9620, -5264.2010, -6.4, 1.2, 0.3, -909.871, 77.42, -728.175, -1.4, -1069.8141))))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (false ? _GLF_FUZZED((mat3(-35.20, 6.7, 3.0, -52.70, -2032.6515, -542.023, 250.045, -0.2, -72.85) * mat3(-9.2, 44.30, 16.99, 6.4, 173.342, -523.543, 43.54, -8.7, 96.31))) : mat3(_GLF_IDENTITY(mat4(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), (_GLF_IDENTITY(mat4(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), (true ? mat4(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat4(-2.0, -3.8, -30.60, -6952.6373, 0.9, 1581.4933, -8625.9620, -5264.2010, -6.4, 1.2, 0.3, -909.871, 77.42, -728.175, -1.4, -1069.8141))))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))))))) && _GLF_IDENTITY(true, (true) || false)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), ! (_GLF_IDENTITY(! (bool(bvec3(false, false, true))), (! (bool(bvec3(false, false, true)))) || false)))))) || false, true && ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), ! (_GLF_IDENTITY(! (bool(bvec3(false, false, true))), (! (bool(bvec3(false, false, true)))) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))))))))) || false))))), _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), false || (_GLF_IDENTITY(true, true && (true)))))) && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec3(false, false, true))), false || (_GLF_IDENTITY(! (bool(bvec3(false, false, true))), (! (bool(bvec3(false, false, true)))) || false))), (! (bool(bvec3(false, _GLF_IDENTITY(false, bool(bool(false))), true)))) || false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec3(false, false, true))), false || (_GLF_IDENTITY(! (bool(bvec3(false, false, true))), (! (bool(bvec3(false, false, true)))) || false))), (! (bool(bvec3(false, false, true)))) || false))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((bool(bvec3(false, false, true))), _GLF_IDENTITY(bool(bvec3((bool(bvec3(false, false, true))), false, true)), _GLF_IDENTITY(bool(bvec3(bool(bvec3((bool(bvec3(false, false, true))), false, true)), false, false)), ! (! (bool(bvec3(bool(bvec3((bool(bvec3(false, false, true))), false, true)), false, false))))))), false || (_GLF_IDENTITY(! (bool(bvec3(false, false, true))), (! (bool(bvec3(false, false, true)))) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))), (! (bool(bvec3(false, false, true)))) || false))))))))))) || false))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false || (false), (false || (false)) || false))), bool(bvec4(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false || (false), (false || (false)) || false))), bool(bool(bool(bool(_GLF_IDENTITY(false || (false), (false || (false)) || false)))))), true, false, false)))))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), false || (bool((injectionSwitch.x > injectionSwitch.y)))))))))
        return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ((false)) && true)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))
        return;
       barrier();
      }
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) || false))))), true), bvec2(bvec4(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))) || false))))), true), true, false)))), false || (bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_DEAD(false)) || false))))))), true), bvec2(bvec4(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))), true), true, false))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false)))))))
    return;
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  return;
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((-361.685))), bool(false))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))) || false)))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) >> 0u) + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, _GLF_IDENTITY(true, (true) || false))), (bool(bvec3(false, false, _GLF_IDENTITY(true, (true) || false)))) && true)))), _GLF_IDENTITY(true, (true) && true) && (bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), bool(bvec2(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), false)))), false)), (bool(_GLF_IDENTITY(bvec2(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, false)))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(false, false, true))))), false), bvec2(bvec3(bvec2(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, _GLF_IDENTITY(false, (false) || false))))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(false, false, true))))), false), true))))) && true)))), bool(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), _GLF_IDENTITY(bool(bvec2(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), false, false))))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))), _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ((_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) || false), true))))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) || false), true))))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) || false), true))))))))), ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) || false), true)))))))))) || false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), bool(bvec3(false, false, true))))), false || (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ((_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) || false), true))))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) || false), true))))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) || false), true))))))))), ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) || false), true)))))))))) || false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), bool(bvec3(false, false, true))))))), false))), true && ((bool(bvec2(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ((_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) || false), true))))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) || false), true))))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) || false), true))))))))), ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) || false), true)))))))))) || false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), bool(bvec3(false, false, true))))), false || (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ((_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) || false), true))))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) || false), true))))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) || false), true))))))))), ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) || false), true)))))))))) || false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), bool(bvec3(false, false, true))))))), false))))) && true)))), (bool(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), _GLF_IDENTITY(bool(bvec2(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), false)), (bool(bvec2(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(false, false, true))))), true && (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 0.0, 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0)), vec2(1.0, 1.0) * (vec2(mat3(injectionSwitch, 0.0, 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0))))).y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(false, false, true))))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), false, true))))), true && (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(false, false, true)))))))) && true))), false))) && true))))) && true), false, false))), bool(bvec2(bool(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), bool(bvec2(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), false))))), true)))), _GLF_IDENTITY(_GLF_IDENTITY(false || _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))))), false, true)))), ! (! (bool(bool(false)))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))))), false, true)))), ! (! (bool(bool(false)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))))), false, true)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))))), false, true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))))), false, true)))), true && (bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))))), false, true))))))) && true)))), ! (! (bool(bool(false))))))) || false)))), _GLF_IDENTITY(true, ! (! (true))) && (false || (_GLF_IDENTITY(bool(bool(false)), ! (! (bool(_GLF_IDENTITY(bool(false), false || (bool(false)))))))))), _GLF_IDENTITY((_GLF_IDENTITY(false || (_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), true && (false || (_GLF_IDENTITY(bool(bool(false)), ! (! (bool(_GLF_IDENTITY(bool(false), true && (bool(false))))))))))), true && ((_GLF_IDENTITY(false || (_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), true && (false || (_GLF_IDENTITY(bool(bool(false)), ! (! (bool(_GLF_IDENTITY(bool(false), true && (bool(false))))))))))))) && true))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec3((_GLF_DEAD(false)), false, false), bvec3(bvec3(bvec3((_GLF_DEAD(false)), false, false)))))) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), true, _GLF_IDENTITY(true, ! (! (true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, false || (false)), true, true))))))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sin(0.0), abs(exp(0.0))))), 0.0, round(length(normalize(1.0)))))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x4(injectionSwitch.y, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0, 0.0, 0.0, abs(0.0), sqrt(1.0))), clamp(_GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 0.0, abs(0.0), _GLF_IDENTITY(sqrt(1.0), (sqrt(1.0)) / 1.0))), float(mat3x4(float(mat2x4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 0.0, abs(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))), sqrt(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, float(mat4x3(1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), (dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0))) / 1.0)), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 0.0)))), float(_GLF_FUZZED(5187.9712)), bool(false)))))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(2173.9042))), 0.0)), log(1.0), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)), mix(float(float(mat4x2(0.0, log(1.0), 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((false ? vec2(3.2, 5426.6862) : vec2(-6.4, -9.8)).x)), float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2780.4357)), bool(false)))), bool(true)))))), float(_GLF_FUZZED(-7.1)), bool(false)))), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, abs(0.0), _GLF_IDENTITY(sqrt(1.0), float(_GLF_IDENTITY(vec4(sqrt(1.0), 0.0, round(length(normalize(1.0))), 1.0), (vec4(sqrt(1.0), 0.0, round(length(normalize(1.0))), 1.0)) - vec4(0.0, 0.0, 0.0, 0.0)))))), 0.0 + (float(mat2x4(injectionSwitch.y, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((_GLF_IDENTITY(-7.5 * -68.27, clamp(_GLF_IDENTITY(-7.5 * -68.27, min(-7.5 * -68.27, -7.5 * -68.27)), -7.5 * -68.27, _GLF_IDENTITY(-7.5 * -68.27, 1.0 * (-7.5 * -68.27))))))), float(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))))), bool(true))), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-6.7))), max(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)), 0.0, 1.0, 0.0, 0.0, 0.0)), mix(float(float(mat3x2(0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), float(_GLF_FUZZED(-2.1)), bool(false)))), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)), 0.0, 1.0, 0.0, 0.0, 0.0)), mix(float(float(mat3x2(0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), float(_GLF_FUZZED(-2.1)), bool(false)))), float(mat4(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)), 0.0, 1.0, 0.0, 0.0, 0.0)), mix(float(float(mat3x2(0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), float(_GLF_FUZZED(-2.1)), bool(false)))), 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), length(vec3(0.0, 0.0, 0.0)), 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0)))) / 1.0))), abs(0.0), sqrt(1.0))))), float(mat2x4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(abs(0.0), (false ? _GLF_FUZZED(acosh(4556.5503)) : abs(0.0))), _GLF_IDENTITY(_GLF_IDENTITY(sqrt(1.0), 0.0 + (_GLF_IDENTITY(sqrt(1.0), (false ? _GLF_FUZZED(acosh(-0.8)) : sqrt(1.0))))), float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(sqrt(1.0), 0.0 + (_GLF_IDENTITY(sqrt(1.0), (false ? _GLF_FUZZED(acosh(-0.8)) : sqrt(1.0))))), 0.0, 1.0, 0.0, cos(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, round(length(normalize(exp(vec4(0.0, 0.0, 0.0, 0.0))))), 1.0), (false ? _GLF_FUZZED(mat4x3(_GLF_IDENTITY(72.72, max(72.72, 72.72)), 9.8, -6285.8460, 38.58, -7097.4513, -315.423, -1.5, -8.7, -4.9, -1.8, -1.3, 8.2)) : mat4x3(_GLF_IDENTITY(sqrt(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)))), 0.0 + (_GLF_IDENTITY(sqrt(1.0), (false ? _GLF_FUZZED(acosh(-0.8)) : sqrt(1.0))))), 0.0, 1.0, 0.0, cos(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, round(length(normalize(_GLF_IDENTITY(exp(vec4(0.0, 0.0, 0.0, 0.0)), mix(vec4(_GLF_FUZZED(-8160.4204), (exp(vec4(0.0, 0.0, 0.0, 0.0)))[1], _GLF_FUZZED(-86.83), _GLF_FUZZED(-1.1)), vec4((exp(vec4(0.0, 0.0, 0.0, 0.0)))[0], _GLF_FUZZED(-3.7), (exp(vec4(0.0, 0.0, 0.0, 0.0)))[2], (exp(vec4(0.0, 0.0, 0.0, 0.0)))[3]), bvec4(true, false, true, true)))))), 1.0)))))))))), true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x4(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-9.7)), float(1.0), bool(true))), 0.0, 1.0, 0.0, 0.0, abs(0.0), _GLF_IDENTITY(sqrt(1.0), _GLF_ZERO(0.0, injectionSwitch.x) + (sqrt(1.0))))), clamp(_GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, 1.0, 0.0, 1.0, 0.0, 0.0, abs(_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), (true ? min(0.0, 0.0) : _GLF_FUZZED(4.7))))), sqrt(1.0))), float(mat3x4(float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x4(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 1.0, tan(0.0))), min(float(mat3x4(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 1.0, tan(0.0))), float(mat3x4(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 1.0, tan(0.0)))))), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), abs(0.0), sqrt(1.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x2(0.0, log(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(9.6))), 0.0, 0.0)), mix(_GLF_IDENTITY(float(float(mat4x2(0.0, log(1.0), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))), min(float(_GLF_IDENTITY(float(mat4x2(0.0, log(1.0), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)), clamp(float(mat4x2(0.0, log(1.0), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(float(mat4x2(0.0, log(1.0), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)), min(float(mat4x2(0.0, log(1.0), 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), _GLF_IDENTITY(0.0, (0.0) - 0.0))), float(mat4x2(0.0, log(1.0), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)))), float(mat4x2(0.0, log(1.0), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))))), float(float(mat4x2(0.0, log(1.0), 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))))), float(_GLF_IDENTITY(_GLF_FUZZED(-7.1), (_GLF_FUZZED(-7.1)) / 1.0)), _GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), false || (bool(false)))))), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, abs(0.0), _GLF_IDENTITY(sqrt(1.0), min(sqrt(1.0), sqrt(1.0))))), 0.0 + (float(mat2x4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x2(0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, float(mat2x3(1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-5894.5953)), bool(false))), 1.0, 1.0, 1.0)))), float(_GLF_IDENTITY(_GLF_FUZZED(-971.424), mix(float(_GLF_FUZZED(float((bvec3(true, false, false) != bvec3(_GLF_IDENTITY(true, false || (true)), true, true))))), float(_GLF_FUZZED(-971.424)), bool(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false))))), bool(false))), 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-8652.4460)), bool(false))), 0.0)), mix(float(float(mat3x2(0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), float(_GLF_FUZZED(-2.1)), bool(false)))))), abs(_GLF_IDENTITY(0.0, (0.0) * 1.0)), sqrt(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) + 0.0)) - length(vec4(0.0, 0.0, 0.0, 0.0)))))))), float(mat2x4(injectionSwitch.y, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 0.0, abs(0.0), _GLF_IDENTITY(sqrt(1.0), _GLF_IDENTITY(min(_GLF_IDENTITY(sqrt(1.0), (sqrt(1.0)) - 0.0), _GLF_IDENTITY(sqrt(1.0), (sqrt(1.0)) + 0.0)), clamp(_GLF_IDENTITY(min(_GLF_IDENTITY(sqrt(1.0), (sqrt(1.0)) - 0.0), _GLF_IDENTITY(sqrt(1.0), (sqrt(1.0)) + 0.0)), (min(_GLF_IDENTITY(sqrt(1.0), (sqrt(1.0)) - 0.0), _GLF_IDENTITY(sqrt(1.0), (sqrt(1.0)) + 0.0))) / 1.0), min(_GLF_IDENTITY(sqrt(1.0), (sqrt(1.0)) - 0.0), _GLF_IDENTITY(sqrt(1.0), (sqrt(1.0)) + 0.0)), min(_GLF_IDENTITY(sqrt(1.0), (sqrt(1.0)) - 0.0), _GLF_IDENTITY(sqrt(1.0), (sqrt(1.0)) + 0.0))))))))))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0))), injectionSwitch)))).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)), (bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))) || false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x) - 0.0) > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 1.0, 1.0, 1.0), mat2x3(mat4x3(mat2x3(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 1.0, 1.0, 1.0)))))))))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         return;
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) || false)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) || false)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) || false)))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) || false)))), true))))))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) || false)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) || false)))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) || false)))), true))))))))))))) && true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), (_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((false), ((false)) || _GLF_IDENTITY(false, (false) || false))))) && true))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(1.0, min(1.0, 1.0))), injectionSwitch.y))))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))), false, true, true))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))), false, true, true))), true, true), true))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))) || (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))), (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))) || false)))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-1393.3200) : _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) : _GLF_FUZZED(-939.692))) > injectionSwitch.y))))
          return;
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) && true)) && true)))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(1u, (1u) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))) * (_GLF_IDENTITY(workgroup_base, (true ? _GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat4(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(68.81)), float(_GLF_IDENTITY(0.0, float(mat4x2(0.0, 1.0, 0.0, 0.0, sqrt(0.0), 0.0, 1.0, 0.0)))), bool(true))), injectionSwitch.x)) - 0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, tan(0.0), 1.0, 1.0, 0.0)))) ^ (workgroup_base)) : _GLF_FUZZED(workgroup_id))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), 0u ^ (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))))), (_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_local_id)))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED((mat4x3(85.85, 5.7, -13.41, 0.6, 8.4, 739.590, -244.807, 9117.1282, 4.3, 3046.0707, 0.7, -54.15) * vec4(-74.34, 8.2, -539.960, 9532.7791))[0]) : _GLF_IDENTITY(0.0, min(0.0, 0.0)))), injectionSwitch.x)) | (1u)) * (_GLF_IDENTITY(workgroup_base, (true ? _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (workgroup_base), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (workgroup_base)))) : _GLF_FUZZED(workgroup_id))))), (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_local_id)))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_local_id)))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u, 1u), (uvec4((_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_local_id)))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u, 1u)) >> uvec4(0u, 0u, 0u, 0u))))), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED((_GLF_IDENTITY(mat4x3(85.85, 5.7, -13.41, 0.6, 8.4, 739.590, -244.807, 9117.1282, 4.3, 3046.0707, 0.7, -54.15) * vec4(-74.34, 8.2, -539.960, 9532.7791), (true ? mat4x3(85.85, 5.7, -13.41, 0.6, 8.4, _GLF_IDENTITY(739.590, (false ? _GLF_FUZZED(sinh(radians(4.0))) : 739.590)), -244.807, 9117.1282, 4.3, 3046.0707, 0.7, -54.15) * vec4(-74.34, 8.2, -539.960, 9532.7791) : _GLF_FUZZED(vec3(8.6, 1.1, -5984.6954)))))[0]) : _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))))), injectionSwitch.x)) | (1u)) * (_GLF_IDENTITY(workgroup_base, (true ? _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (workgroup_base), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (workgroup_base), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (workgroup_base), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(-32.00) : _GLF_ZERO(0.0, injectionSwitch.x)))) / 1.0)) ^ (workgroup_base)))) : _GLF_FUZZED(workgroup_id)))))) * 1u), _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))))) - 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u), _GLF_IDENTITY(clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 1u * (workgroup_base)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base)))) | ((workgroup_base))), min(~ (workgroup_base), ~ (workgroup_base))))), _GLF_IDENTITY(1u * (workgroup_base), clamp(1u * (workgroup_base), 1u * (workgroup_base), 1u * (workgroup_base)))), clamp(_GLF_IDENTITY(workgroup_base, 1u * _GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), uint(uvec3((workgroup_base), 0u, 1u))), max((workgroup_base), (workgroup_base))))), min(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), uint(uvec3((workgroup_base), 0u, 1u))), max((workgroup_base), (workgroup_base))))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), uint(uvec3((workgroup_base), 0u, 1u))), max((workgroup_base), (workgroup_base))))))), _GLF_IDENTITY((uint(uint(_GLF_IDENTITY((workgroup_base), max((workgroup_base), (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec3(workgroup_base, (1u | 0u), 1u)), min(_GLF_IDENTITY(uint(uvec3(workgroup_base, (1u | _GLF_IDENTITY(0u, (76695u & 0u) | (0u))), 1u)), (uint(uvec3(_GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED((+ workgroup_id)))))), (1u | _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, 1u)), 0u ^ (uint(uvec3(0u, 1u, 1u)))))), 1u))) + 0u), uint(uvec3(workgroup_base, (1u | 0u), 1u))))))))))) | (uint(uint(_GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base)))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((uint(uint(_GLF_IDENTITY((workgroup_base), max((workgroup_base), (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))))))) | (uint(uint(_GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base))))))), max(~ ((uint(uint(_GLF_IDENTITY((workgroup_base), max((workgroup_base), (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)))))))))) | (uint(uint(_GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base))))))), ~ ((uint(uint(_GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base)))))) | (uint(uint(_GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base)))))))))), (~ (_GLF_IDENTITY(~ ((uint(uint(_GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base)))))) | (uint(uint(_GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base))))))), max(~ ((uint(uint(_GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base)))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base)))), 0u + (uint(_GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base))))))), (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base)))), 0u + (uint(_GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base)))))))) ^ 0u))), ~ (_GLF_IDENTITY((uint(uint(_GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base)))))), uint(uvec3((uint(uint(_GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base)))))), ((((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))) << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))), ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)))))) | (uint(uint(_GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base))))))))))) << 0u))))), _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(1u * (workgroup_base), (1u * _GLF_IDENTITY((workgroup_base), uint(uvec4((workgroup_base), 1u, 0u, 1u)))) / 1u)), _GLF_IDENTITY(workgroup_base, 1u * (workgroup_base))))) * _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) + log(1.0))), (true ? uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) + log(1.0))) : _GLF_FUZZED(subgroup_size)))), workgroup_base))), (_GLF_IDENTITY(true, true && (true)) ? clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 1u * (workgroup_base)), (_GLF_IDENTITY(workgroup_base, 1u * (workgroup_base))) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(1u * (workgroup_base), clamp(1u * (workgroup_base), 1u * (workgroup_base), 1u * (workgroup_base))), _GLF_IDENTITY((_GLF_IDENTITY(1u * (_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), clamp(1u * (workgroup_base), 1u * (workgroup_base), 1u * (workgroup_base)))) >> 0u, ((_GLF_IDENTITY(1u * (_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), clamp(_GLF_IDENTITY(1u, min(1u, 1u)) * (workgroup_base), 1u * (workgroup_base), 1u * (workgroup_base)))) >> 0u) / 1u))), clamp(_GLF_IDENTITY(workgroup_base, 1u * _GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base))))), _GLF_IDENTITY((uint(uint(_GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base)))))) | (uint(uint(_GLF_IDENTITY((workgroup_base), max((workgroup_base), (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))))))), ~ (_GLF_IDENTITY(~ ((uint(uint(_GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base)))))) | (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) | 0u), max((workgroup_base), (workgroup_base)))), (uint(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) | 0u), max((workgroup_base), _GLF_IDENTITY((workgroup_base), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((workgroup_base), min((workgroup_base), (workgroup_base))))))))) / 1u)))), max(~ (_GLF_IDENTITY((uint(uint(_GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base)))))), clamp((uint(uint(_GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base)))))), (uint(uint(_GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base)))))), (uint(uint(_GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base)))))))) | (uint(uint(_GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base))))))), ~ ((_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base))), (true ? _GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base))) : _GLF_FUZZED(virtual_gid))))), clamp(uint(uint(_GLF_IDENTITY((workgroup_base), max(_GLF_IDENTITY((workgroup_base), clamp((workgroup_base), _GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base)))), (workgroup_base))), (workgroup_base))))), uint(uint(_GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base))))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) << 0u), max((workgroup_base), (workgroup_base)))))))) | (uint(uint(_GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base)))))))))))))), _GLF_IDENTITY(workgroup_base, 1u * (workgroup_base)), _GLF_IDENTITY(workgroup_base, 1u * (workgroup_base))))) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 1.0 * (_GLF_ONE(1.0, injectionSwitch.y))))), workgroup_base))) : _GLF_IDENTITY(_GLF_FUZZED((_GLF_IDENTITY(++ subgroup_local_id, (true ? ++ subgroup_local_id : _GLF_FUZZED(num_workgroup))))), (_GLF_IDENTITY(_GLF_FUZZED((++ subgroup_local_id)), (0u >> _GLF_IDENTITY(uint(8u), uint(8u))) | (_GLF_FUZZED((++ subgroup_local_id))))) << 0u))))) | 0u) + subgroup_base, (true ? _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_base, min(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), (subgroup_base) - _GLF_IDENTITY(0u, (0u) ^ 0u)))) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((subgroup_base / uaddCarry(subgroup_id, _GLF_IDENTITY(workgroup_id, uint(uvec2(workgroup_id, 1u))), subgroup_local_id))), (false ? _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, (0u | 0u), 0u, 0u)))) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((subgroup_base / _GLF_IDENTITY(uaddCarry(subgroup_id, workgroup_id, subgroup_local_id), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uaddCarry(subgroup_id, workgroup_id, subgroup_local_id), (uaddCarry(subgroup_id, workgroup_id, subgroup_local_id)) - 0u), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : uaddCarry(subgroup_id, workgroup_id, subgroup_local_id)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))) && true)) ? _GLF_FUZZED(subgroup_id) : uaddCarry(subgroup_id, workgroup_id, subgroup_local_id)), 0u + ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : uaddCarry(subgroup_id, workgroup_id, subgroup_local_id))))) >> 0u)), (_GLF_IDENTITY(uaddCarry(subgroup_id, workgroup_id, subgroup_local_id), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : uaddCarry(subgroup_id, _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(subgroup_id)))) >> _GLF_IDENTITY((0u | 0u), ((0u | 0u)) | ((0u | 0u)))), subgroup_local_id)))) - 0u)) << 0u))), (_GLF_IDENTITY(_GLF_FUZZED((subgroup_base / _GLF_IDENTITY(uaddCarry(subgroup_id, workgroup_id, subgroup_local_id), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uaddCarry(subgroup_id, workgroup_id, subgroup_local_id), (uaddCarry(subgroup_id, workgroup_id, subgroup_local_id)) - 0u), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : uaddCarry(subgroup_id, workgroup_id, subgroup_local_id)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))) && true)) ? _GLF_FUZZED(subgroup_id) : uaddCarry(subgroup_id, workgroup_id, subgroup_local_id)), 0u + ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : uaddCarry(subgroup_id, workgroup_id, subgroup_local_id))))) >> 0u)), (_GLF_IDENTITY(uaddCarry(subgroup_id, workgroup_id, subgroup_local_id), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : uaddCarry(subgroup_id, _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(subgroup_id)))) >> _GLF_IDENTITY((0u | 0u), ((0u | 0u)) | ((0u | 0u)))), subgroup_local_id)))) - 0u)) << 0u))), (_GLF_FUZZED((subgroup_base / _GLF_IDENTITY(uaddCarry(subgroup_id, workgroup_id, subgroup_local_id), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uaddCarry(subgroup_id, workgroup_id, subgroup_local_id), (uaddCarry(subgroup_id, _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 1u, 0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))))))) / 1u), subgroup_local_id)) - 0u), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : uaddCarry(subgroup_id, workgroup_id, subgroup_local_id)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))) && true)) ? _GLF_FUZZED(subgroup_id) : uaddCarry(subgroup_id, workgroup_id, subgroup_local_id)), 0u + ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : uaddCarry(subgroup_id, workgroup_id, subgroup_local_id))))) >> 0u)), (_GLF_IDENTITY(uaddCarry(subgroup_id, workgroup_id, subgroup_local_id), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), max(_GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id)))))) : uaddCarry(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), (_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(subgroup_id)))) >> _GLF_IDENTITY((_GLF_IDENTITY(0u | 0u, uint(uvec4(_GLF_IDENTITY(0u | 0u, (0u | 0u) - 0u), 1u, 1u, 0u)))), ((0u | 0u)) | ((0u | 0u)))), subgroup_local_id)))) - 0u)) << 0u)))) * 1u)) - 0u), (_GLF_FUZZED((subgroup_base / _GLF_IDENTITY(uaddCarry(subgroup_id, workgroup_id, subgroup_local_id), (_GLF_IDENTITY(_GLF_IDENTITY(uaddCarry(subgroup_id, workgroup_id, subgroup_local_id), _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)), bool(bvec4(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)), false || (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)))), false, false, true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec4(bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, true, true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(subgroup_id) : uaddCarry(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u)) | (subgroup_id)), workgroup_id, subgroup_local_id)), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(subgroup_id) : uaddCarry(subgroup_id, workgroup_id, subgroup_local_id)), ((_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : uaddCarry(subgroup_id, workgroup_id, subgroup_local_id))) | 0u), _GLF_IDENTITY(0u + ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : uaddCarry(subgroup_id, workgroup_id, subgroup_local_id))), (_GLF_IDENTITY(0u + ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : uaddCarry(subgroup_id, workgroup_id, subgroup_local_id))), (0u + ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : uaddCarry(_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(workgroup_size))))), workgroup_id, subgroup_local_id)))) >> 0u)) - 0u))) >> 0u)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uaddCarry(subgroup_id, workgroup_id, subgroup_local_id), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))) ? _GLF_FUZZED(subgroup_id) : uaddCarry(subgroup_id, workgroup_id, subgroup_local_id)))), (0u << _GLF_IDENTITY(uint(1u), uint(1u))) | ((_GLF_IDENTITY(uaddCarry(subgroup_id, workgroup_id, subgroup_local_id), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))) ? _GLF_FUZZED(subgroup_id) : uaddCarry(subgroup_id, workgroup_id, subgroup_local_id)))))) - 0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY((_GLF_IDENTITY(uaddCarry(subgroup_id, workgroup_id, subgroup_local_id), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : uaddCarry(subgroup_id, workgroup_id, subgroup_local_id)))) - 0u, ((_GLF_IDENTITY(uaddCarry(subgroup_id, _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u), workgroup_id)), subgroup_local_id), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : uaddCarry(subgroup_id, workgroup_id, subgroup_local_id)))) - 0u) ^ 0u))))) << 0u)))) << 0u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED((subgroup_base / uaddCarry(subgroup_id, workgroup_id, subgroup_local_id))), (false ? _GLF_IDENTITY(_GLF_FUZZED(virtual_gid), (_GLF_IDENTITY(_GLF_FUZZED(virtual_gid), (_GLF_FUZZED(virtual_gid)) - 0u)) ^ _GLF_IDENTITY(0u, min(0u, 0u))) : _GLF_FUZZED((subgroup_base / _GLF_IDENTITY(uaddCarry(subgroup_id, _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(workgroup_id, _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(4u), uint(4u))), (_GLF_IDENTITY(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(4u), uint(4u))), ((0u << _GLF_IDENTITY(uint(4u), uint(4u)))) | ((0u << _GLF_IDENTITY(uint(4u), uint(4u))))), uint(uvec2(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(4u), uint(4u))), ((0u << _GLF_IDENTITY(uint(4u), uint(4u)))) | ((0u << _GLF_IDENTITY(uint(4u), uint(4u))))), 1u)))) | 0u), 1u), uvec3(0u, 0u, 0u) + (uvec3(workgroup_id, _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(4u), uint(4u))), (_GLF_IDENTITY(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(4u), uint(4u))), ((0u << _GLF_IDENTITY(uint(4u), uint(4u)))) | ((0u << _GLF_IDENTITY(uint(4u), uint(4u))))), uint(uvec2(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(4u), uint(4u))), ((0u << _GLF_IDENTITY(uint(4u), uint(4u)))) | ((0u << _GLF_IDENTITY(uint(4u), uint(4u))))), 1u)))) | 0u), 1u)))), (uint(_GLF_IDENTITY(uvec3(workgroup_id, _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(4u), uint(4u))), (_GLF_IDENTITY(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(4u), uint(4u))), ((0u << _GLF_IDENTITY(uint(4u), uint(4u)))) | ((0u << _GLF_IDENTITY(uint(4u), uint(4u))))), uint(uvec2(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(4u), uint(4u))), ((0u << _GLF_IDENTITY(uint(4u), uint(4u)))) | ((0u << _GLF_IDENTITY(uint(4u), uint(4u))))), 1u)))) | 0u), 1u), uvec3(0u, 0u, 0u) + (uvec3(workgroup_id, _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(4u), uint(4u))), (_GLF_IDENTITY(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(4u), uint(4u))), ((0u << _GLF_IDENTITY(uint(4u), uint(4u)))) | ((0u << _GLF_IDENTITY(uint(4u), uint(4u))))), uint(uvec2(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(4u), uint(4u))), ((0u << _GLF_IDENTITY(uint(4u), uint(4u)))) | ((0u << _GLF_IDENTITY(uint(4u), uint(4u))))), 1u)))) | 0u), 1u))))) >> (0u | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), clamp(uint(uvec3(workgroup_id, (0u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) - 0u))), 1u)), uint(_GLF_IDENTITY(uvec3(workgroup_id, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u), (uvec3(workgroup_id, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u)) | (uvec3(workgroup_id, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u)))), uint(uvec3(workgroup_id, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, min(4u, 4u))), uint(4u))), 1u))))), subgroup_local_id), (_GLF_IDENTITY(uaddCarry(subgroup_id, _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(uvec3(workgroup_id, _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(4u), uint(4u))), _GLF_IDENTITY((_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(4u), uint(4u))), ((0u << _GLF_IDENTITY(uint(4u), uint(4u)))) | ((0u << _GLF_IDENTITY(uint(4u), uint(4u)))))) | 0u, ((_GLF_IDENTITY((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(4u), uint(4u)), 0u | (0u << _GLF_IDENTITY(uint(4u), uint(4u))))), ((0u << _GLF_IDENTITY(uint(4u), uint(4u)))) | ((0u << _GLF_IDENTITY(uint(4u), uint(4u)))))) | 0u) / 1u)), 1u)), clamp(uint(uvec3(workgroup_id, (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(4u), uint(4u)), (0u << _GLF_IDENTITY(uint(4u), uint(4u))) << 0u)), 1u)), uint(_GLF_IDENTITY(uvec3(workgroup_id, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), _GLF_IDENTITY(1u, (1u) >> 0u)), (uvec3(workgroup_id, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u)) | (uvec3(workgroup_id, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u)))), uint(uvec3(workgroup_id, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (1u) << 0u))))))))), subgroup_local_id), (_GLF_IDENTITY(uaddCarry(subgroup_id, _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u), _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(4u), uint(4u))), (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, ~ (_GLF_IDENTITY(~ (4u), (~ (4u)) << (0u ^ 0u))))), uint(4u))), ((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(4u), uint(4u)), ~ (~ (_GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 0u))) << _GLF_IDENTITY(uint(4u), uint(4u))))))) | ((0u << _GLF_IDENTITY(uint(4u), uint(4u)))))) | 0u), 1u)), clamp(uint(uvec3(workgroup_id, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u)), uint(_GLF_IDENTITY(uvec3(workgroup_id, _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) | (uint(4u))))), 0u | ((0u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) | (uint(4u))))))), 1u), (uvec3(workgroup_id, (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(4u), uint(4u)), (0u << _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, max(4u, 4u))) - 0u)))) / 1u)), 1u)) | (uvec3(workgroup_id, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u)))), uint(uvec3(workgroup_id, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u))))), subgroup_local_id), (uaddCarry(subgroup_id, _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(workgroup_id, _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(4u), uint(4u))), (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(4u), uint(4u))), ((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(4u), uint(4u)), (false ? _GLF_FUZZED(workgroup_size) : 0u << _GLF_IDENTITY(uint(4u), uint(4u)))))) | ((0u << _GLF_IDENTITY(uint(4u), uint(4u)))))) | 0u), 1u), (uvec3(workgroup_id, _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(4u), uint(4u))), (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(4u), uint(4u))), ((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(4u), uint(4u)), (false ? _GLF_FUZZED(workgroup_size) : 0u << _GLF_IDENTITY(uint(4u), uint(4u)))))) | ((0u << _GLF_IDENTITY(uint(4u), uint(4u)))))) | 0u), 1u)) ^ (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)))), clamp(uint(uvec3(workgroup_id, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u)), uint(_GLF_IDENTITY(uvec3(workgroup_id, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u), (uvec3(workgroup_id, (0u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), max(uint(4u), uint(4u))))), 1u)) | (uvec3(workgroup_id, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u)))), uint(uvec3(workgroup_id, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u))))), subgroup_local_id)) >> 0u)) | 0u)) / 1u)))))) | 0u, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((subgroup_base / uaddCarry(subgroup_id, workgroup_id, subgroup_local_id))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(virtual_gid), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(virtual_gid), max(_GLF_FUZZED(virtual_gid), _GLF_IDENTITY(_GLF_FUZZED(virtual_gid), (_GLF_FUZZED(virtual_gid)) / 1u))), _GLF_IDENTITY((_GLF_FUZZED(virtual_gid)) ^ 0u, ~ (~ ((_GLF_FUZZED(virtual_gid)) ^ 0u)))))), (_GLF_IDENTITY(_GLF_FUZZED(virtual_gid), _GLF_IDENTITY(1u * (_GLF_IDENTITY(_GLF_FUZZED(virtual_gid), (_GLF_FUZZED(virtual_gid)) ^ 0u)), min(1u * (_GLF_IDENTITY(_GLF_FUZZED(virtual_gid), (_GLF_FUZZED(virtual_gid)) ^ 0u)), 1u * (_GLF_IDENTITY(_GLF_FUZZED(virtual_gid), (_GLF_FUZZED(virtual_gid)) ^ 0u)))))) / 1u) : _GLF_FUZZED((subgroup_base / uaddCarry(subgroup_id, workgroup_id, subgroup_local_id))))), (_GLF_IDENTITY(_GLF_FUZZED((subgroup_base / uaddCarry(subgroup_id, workgroup_id, subgroup_local_id))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(true && (! (false)), (true && (! (false))) || false)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), true && (! (false))))), true, true), false))))) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(virtual_gid), (_GLF_FUZZED(virtual_gid)) | 0u), 1u * (_GLF_IDENTITY(_GLF_FUZZED(virtual_gid), (_GLF_FUZZED(virtual_gid)) ^ 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(virtual_gid), (_GLF_FUZZED(virtual_gid)) | 0u), 1u * (_GLF_IDENTITY(_GLF_FUZZED(virtual_gid), (_GLF_FUZZED(virtual_gid)) ^ 0u))), (false ? _GLF_FUZZED((subgroup_local_id --)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(virtual_gid), (_GLF_FUZZED(virtual_gid)) | 0u), 1u * (_GLF_IDENTITY(_GLF_FUZZED(virtual_gid), (_GLF_FUZZED(virtual_gid)) ^ 0u)))))) >> 0u), (_GLF_IDENTITY(_GLF_FUZZED(virtual_gid), 1u * (_GLF_IDENTITY(_GLF_FUZZED(virtual_gid), (_GLF_FUZZED(virtual_gid)) ^ 0u)))) / 1u) : _GLF_FUZZED((subgroup_base / uaddCarry(subgroup_id, workgroup_id, subgroup_local_id)))))) ^ (0u | 0u))), (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED((subgroup_base / _GLF_IDENTITY(uaddCarry(subgroup_id, workgroup_id, subgroup_local_id), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(uaddCarry(subgroup_id, workgroup_id, subgroup_local_id), _GLF_IDENTITY((uaddCarry(subgroup_id, workgroup_id, subgroup_local_id)), (_GLF_IDENTITY((uaddCarry(subgroup_id, workgroup_id, subgroup_local_id)), ((uaddCarry(subgroup_id, workgroup_id, subgroup_local_id))) / 1u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) - 0u))))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), ! (! (! (false)))))))) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(virtual_gid), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(virtual_gid), _GLF_IDENTITY((_GLF_FUZZED(virtual_gid)) ^ _GLF_IDENTITY(0u, min(0u, 0u)), (_GLF_IDENTITY((_GLF_FUZZED(virtual_gid)) ^ _GLF_IDENTITY(0u, min(0u, 0u)), max((_GLF_FUZZED(virtual_gid)) ^ _GLF_IDENTITY(0u, min(0u, 0u)), (_GLF_FUZZED(virtual_gid)) ^ _GLF_IDENTITY(0u, min(0u, 0u))))) * 1u)), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(virtual_gid), (_GLF_IDENTITY(_GLF_FUZZED(virtual_gid), min(_GLF_IDENTITY(_GLF_FUZZED(virtual_gid), (_GLF_FUZZED(virtual_gid)) - 0u), _GLF_FUZZED(virtual_gid)))) ^ 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(virtual_gid), (_GLF_FUZZED(virtual_gid)) | 0u), 1u * (_GLF_IDENTITY(_GLF_FUZZED(virtual_gid), _GLF_IDENTITY((_GLF_FUZZED(virtual_gid)) ^ 0u, 1u * ((_GLF_FUZZED(virtual_gid)) ^ 0u)))))) / 1u) : _GLF_FUZZED((subgroup_base / uaddCarry(subgroup_id, workgroup_id, subgroup_local_id)))))), ((_GLF_IDENTITY(_GLF_FUZZED((subgroup_base / uaddCarry(subgroup_id, workgroup_id, subgroup_local_id))), (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), true && _GLF_IDENTITY((! (false)), ! (! ((! (false))))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), true && _GLF_IDENTITY((! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), ! (! (bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))))))), ! (! ((! (false))))))), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(! (false), true && _GLF_IDENTITY((! (false)), ! (! ((! (false))))))))), bool(bvec3(! (! (! (_GLF_IDENTITY(! (false), true && _GLF_IDENTITY((! (false)), ! (! ((! (false))))))))), true, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true)))))) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(virtual_gid), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(virtual_gid), (_GLF_FUZZED(virtual_gid)) - 0u), (_GLF_FUZZED(_GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid)))) ^ 0u))), 0u ^ (_GLF_IDENTITY(_GLF_FUZZED(virtual_gid), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(virtual_gid), (_GLF_FUZZED(virtual_gid)) - 0u), (_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid)), 0u ^ (virtual_gid)))) ^ 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(virtual_gid), 1u * (_GLF_IDENTITY(_GLF_FUZZED(virtual_gid), (_GLF_FUZZED(virtual_gid)) ^ _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) - 0u), _GLF_IDENTITY(0u, (0u) | (0u))))))), (_GLF_IDENTITY(_GLF_FUZZED(virtual_gid), 1u * (_GLF_IDENTITY(_GLF_FUZZED(virtual_gid), (_GLF_FUZZED(virtual_gid)) ^ _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) - 0u), _GLF_IDENTITY(0u, (0u) | (0u)))))))) | (_GLF_IDENTITY(_GLF_FUZZED(virtual_gid), 1u * (_GLF_IDENTITY(_GLF_FUZZED(virtual_gid), (_GLF_FUZZED(virtual_gid)) ^ _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) - 0u), _GLF_IDENTITY(0u, (0u) | (0u)))))))))) / 1u) : _GLF_IDENTITY(_GLF_FUZZED((subgroup_base / uaddCarry(subgroup_id, workgroup_id, subgroup_local_id))), (_GLF_FUZZED((subgroup_base / uaddCarry(subgroup_id, workgroup_id, subgroup_local_id)))) * (1u & uint(_GLF_ONE(1.0, injectionSwitch.y)))))))) / 1u))) | 0u) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, 1u * (1u)), 1u))) | 0u))))) + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), uint(uvec3(((subgroup_local_id + 1) % subgroup_size), ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(7u), uint(7u)), (1u << _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, clamp(_GLF_IDENTITY(7u, (7u) << 0u), _GLF_IDENTITY(7u, _GLF_IDENTITY(uint(uvec2(7u, 0u)), (uint(uvec2(7u, 0u))) / 1u)), _GLF_IDENTITY(7u, clamp(7u, 7u, 7u))))))) / 1u)) >> _GLF_IDENTITY(uint(7u), uint(7u))), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(719.386)), float(injectionSwitch.y), bool(true)), clamp(_GLF_IDENTITY(mix(float(_GLF_FUZZED(719.386)), float(injectionSwitch.y), bool(true)), max(mix(float(_GLF_FUZZED(719.386)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(719.386)), float(injectionSwitch.y), bool(true)))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(719.386)), float(injectionSwitch.y), bool(true)), mix(float(mix(float(_GLF_FUZZED(719.386)), float(injectionSwitch.y), bool(true))), float(_GLF_FUZZED((-5036.4264 / -65.12))), bool(false))), mix(float(_GLF_FUZZED(719.386)), float(injectionSwitch.y), bool(true))))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))) || (false)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec4(true, true, false, false))) && (false)) ? _GLF_FUZZED(5875.8746) : injectionSwitch[0])), injectionSwitch[_GLF_IDENTITY(1, (0 >> _GLF_IDENTITY(int(6), int(6))) ^ (1))])).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y)) ? _GLF_FUZZED(-98.63) : _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(79.63)), bool(false)))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 atomicStore(buf[virtual_gid], _GLF_IDENTITY(uint(1), max(uint(1), _GLF_IDENTITY(uint(1), uint(_GLF_IDENTITY(uvec3(uint(_GLF_IDENTITY(1, 0 ^ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), ((1)) - int(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1))), ((1u << _GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (1u) | (1u))))))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(uvec4(_GLF_IDENTITY(uint(1u), max(uint(1u), uint(1u))), 1u, 1u, (182385u & 0u)))), uint(1u))), 1u), _GLF_IDENTITY(clamp(uvec3(uint(1), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))), 1u), uvec3(uint(1), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))), 1u), uvec3(uint(1), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 1u, (0u ^ 0u), 1u))), uint(1u))), 1u)), max(_GLF_IDENTITY(clamp(uvec3(uint(1), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))), 1u), uvec3(uint(1), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))), 1u), uvec3(uint(1), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))), 1u)), min(_GLF_IDENTITY(clamp(uvec3(uint(1), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))), 1u), uvec3(uint(1), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))), 1u), uvec3(uint(1), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))), 1u)), uvec3(uvec4(_GLF_IDENTITY(clamp(uvec3(uint(1), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))), 1u), uvec3(uint(1), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))), 1u), uvec3(uint(1), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))), 1u)), (clamp(uvec3(uint(1), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))), 1u), uvec3(uint(1), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))), 1u), uvec3(uint(1), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))), 1u))) ^ uvec3(0u, 0u, 0u)), 0u))), _GLF_IDENTITY(clamp(uvec3(uint(1), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))), 1u), uvec3(uint(1), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)), uint(uvec3((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)), (0u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), 0u ^ (uint(7u))))), 0u)))), 1u), uvec3(uint(1), ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), (1u << _GLF_IDENTITY(uint(1u), uint(1u))) | (1u << _GLF_IDENTITY(uint(1u), uint(1u))))) >> _GLF_IDENTITY(uint(1u), uint(1u))), 1u)), min(clamp(uvec3(uint(1), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))), 1u), uvec3(uint(1), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (true ? uint(1u) : _GLF_FUZZED(94960u))), uint(1u))), 1u), uvec3(uint(1), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))), 1u)), clamp(uvec3(uint(1), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))), 1u), uvec3(uint(1), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(1u, uint(uvec4(_GLF_IDENTITY(1u, (1u) - 0u), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))))), 1u), uvec3(uint(1), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(uint(1u), uint(1u))) / 1u)) - 0u)) >> _GLF_IDENTITY(uint(1u), uint(1u))), 1u)))))), clamp(uvec3(uint(1), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))), 1u), uvec3(uint(1), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))), 1u), uvec3(uint(1), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(1u, (1u) << 0u)))) / 1u)), 1u))))))))), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(~ (next_virtual_gid), _GLF_IDENTITY((~ (next_virtual_gid)) ^ 0u, uint(uint(_GLF_IDENTITY((~ (next_virtual_gid)) ^ 0u, ((~ (next_virtual_gid)) ^ 0u) / 1u)))))))], uint(2), 4, _GLF_IDENTITY(64, int(int(64))), 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(-5375.5736)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true))))))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
