#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y) * (injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 0.0, 1.0))))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 0.0, 0.0)) + (injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - length(vec2(0.0, 0.0)))))), float(_GLF_FUZZED(5.0)), bool(false))))), 0.0, sin(0.0), 0.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) / determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0, _GLF_IDENTITY(dot(vec3(1.0, determinant(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), transpose(_GLF_IDENTITY(transpose(mat2(0.0, 0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 1.0))), 0.0)), mat2(0.0, 0.0, 0.0, 0.0) + (transpose(mat2(0.0, 0.0, 0.0, 0.0))))))) + mat2(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-1.8)), bool(false))), 0.0))), 0.0), _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), vec3(mat3(vec3(1.0, 0.0, 0.0), _GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))), injectionSwitch.y), 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)))), dot(vec3(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, sqrt(0.0), 0.0, 0.0, 0.0, 1.0, log(1.0))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false) ? float(_GLF_IDENTITY(_GLF_IDENTITY(mat4(injectionSwitch.y, 0.0, sin(0.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, determinant(mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(max(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, sqrt(0.0), 1.0, 1.0)), min(float(vec4(0.0, sqrt(0.0), 1.0, 1.0)), float(vec4(0.0, sqrt(0.0), 1.0, 1.0))))), 0.0), max(max(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, sqrt(0.0), 1.0, 1.0)), min(float(vec4(0.0, sqrt(0.0), 1.0, 1.0)), float(vec4(0.0, sqrt(0.0), 1.0, 1.0))))), 0.0), _GLF_IDENTITY(max(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, sqrt(0.0), 1.0, 1.0)), min(float(vec4(0.0, sqrt(0.0), 1.0, 1.0)), float(vec4(0.0, sqrt(0.0), 1.0, 1.0))))), 0.0), (max(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, sqrt(0.0), 1.0, 1.0)), min(float(vec4(0.0, sqrt(0.0), 1.0, 1.0)), float(vec4(0.0, sqrt(0.0), 1.0, 1.0))))), 0.0)) + 0.0)))))), 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0), vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0), mat3(1.0) * (mat4x3(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)))), 1.0 * (float(_GLF_IDENTITY(mat4x3(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0), mat3(1.0) * (mat4x3(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0))))))), 1.0, 1.0))) / 1.0), 0.0, sqrt(0.0), 0.0, 0.0, 0.0, 1.0, log(1.0)), transpose(_GLF_IDENTITY(transpose(mat4(injectionSwitch.y, 0.0, sin(0.0), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-98.28)), float(0.0), bool(true))))))), 1.0 * (_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0 + _GLF_IDENTITY((determinant(mat2(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0, 0.0, 0.0))), max((determinant(mat2(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0, 0.0, 0.0))), (determinant(mat2(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0, 0.0, 0.0)))))))), 0.0), max(vec3(1.0, _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0 * (_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0 + (determinant(mat2(0.0, 0.0, 0.0, 0.0)))))), 0.0), vec3(1.0, _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0 * (_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0 + (determinant(mat2(0.0, 0.0, 0.0, 0.0)))))), 0.0))), vec3(1.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec3(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0), clamp(_GLF_IDENTITY(vec3(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0), exp(vec3(0.0, 0.0, 0.0)) * (vec3(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0))), vec3(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0), vec3(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0))), vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), clamp(1.0, 1.0, 1.0))) / 1.0), 0.0, sqrt(0.0), 0.0, 0.0, 0.0, 1.0, log(1.0))), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (transpose(mat4(injectionSwitch.y, 0.0, sin(0.0), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0), vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), clamp(1.0, 1.0, 1.0))) / 1.0), 0.0, sqrt(0.0), 0.0, 0.0, 0.0, 1.0, log(1.0))))))), (_GLF_IDENTITY(mat4(injectionSwitch.y, 0.0, sin(0.0), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, determinant(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, sqrt(0.0), 1.0, 1.0)), min(_GLF_IDENTITY(float(vec4(0.0, sqrt(0.0), 1.0, 1.0)), (float(vec4(0.0, sqrt(0.0), 1.0, 1.0))) - log(1.0)), float(vec4(0.0, sqrt(0.0), 1.0, 1.0))))), 0.0))), transpose(transpose(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, sqrt(0.0), 1.0, 1.0)), min(_GLF_IDENTITY(float(vec4(0.0, sqrt(0.0), 1.0, 1.0)), (float(vec4(0.0, sqrt(0.0), 1.0, 1.0))) - log(1.0)), float(vec4(0.0, sqrt(0.0), 1.0, 1.0))))), 0.0))), transpose(transpose(mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, sqrt(0.0), 1.0, 1.0)), min(_GLF_IDENTITY(float(vec4(0.0, sqrt(0.0), 1.0, 1.0)), (float(vec4(0.0, sqrt(0.0), 1.0, 1.0))) - log(1.0)), float(vec4(0.0, sqrt(0.0), 1.0, 1.0))))), 0.0)))))))))), 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0), vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), clamp(1.0, 1.0, 1.0))) / 1.0), 0.0, sqrt(0.0), 0.0, _GLF_IDENTITY(0.0, float(mat3x4(0.0, tan(determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 0.0, exp(0.0), length(0.0), 0.0, 0.0, tan(0.0), 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0))), 0.0, 1.0, log(1.0)), transpose(_GLF_IDENTITY(_GLF_IDENTITY(transpose(mat4(injectionSwitch.y, 0.0, sin(0.0), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0 * (_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0 + (determinant(mat2(0.0, 0.0, 0.0, 0.0)))))), 0.0), max(vec3(1.0, _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0 * (_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0 + (determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), 0.0, 0.0)))))), 0.0), vec3(1.0, _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0 * (_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0 + (determinant(mat2(0.0, 0.0, 0.0, 0.0)))))), 0.0))), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0), vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), clamp(1.0, 1.0, 1.0))) / 1.0), 0.0, sqrt(0.0), 0.0, 0.0, 0.0, 1.0, log(1.0))), mat4(1.0) * (_GLF_IDENTITY(transpose(mat4(injectionSwitch.y, 0.0, sin(0.0), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0 * (_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0 + (determinant(mat2(0.0, 0.0, 0.0, 0.0)))))), 0.0), max(vec3(1.0, _GLF_IDENTITY(determinant(mat2(0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-397.475))), 0.0)), 1.0 * (_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0 + (determinant(mat2(0.0, 0.0, 0.0, 0.0)))))), 0.0), vec3(1.0, _GLF_IDENTITY(determinant(mat2(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 1.0 * (_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0 + (determinant(mat2(0.0, 0.0, 0.0, 0.0)))))), 0.0))), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)))), dot(vec3(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0), vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), clamp(1.0, 1.0, 1.0))) / 1.0), 0.0, sqrt(0.0), 0.0, 0.0, 0.0, 1.0, log(1.0))), (_GLF_IDENTITY(transpose(mat4(injectionSwitch.y, 0.0, sin(_GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0 * (_GLF_IDENTITY(determinant(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), transpose(transpose(mat2(0.0, 0.0, 0.0, 0.0))))), 0.0 + (determinant(mat2(0.0, 0.0, 0.0, 0.0)))))), 0.0), max(vec3(1.0, _GLF_IDENTITY(determinant(mat2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(2.8))))), 0.0, 0.0, 0.0)), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0 + (determinant(mat2(0.0, 0.0, 0.0, 0.0)))), (_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0 + (determinant(mat2(0.0, 0.0, 0.0, 0.0))))) / 1.0))), 0.0), vec3(1.0, _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0 * (_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0 + (determinant(mat2(0.0, 0.0, 0.0, 0.0)))))), 0.0))), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0), vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), clamp(1.0, 1.0, 1.0))) / 1.0, 0.0 + ((_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), clamp(1.0, 1.0, 1.0))) / 1.0))), 0.0, sqrt(0.0), 0.0, 0.0, 0.0, 1.0, log(1.0))), (false ? _GLF_IDENTITY(_GLF_FUZZED(mat4(8.0, 6.7, -7.0, -6.6, 49.97, -7038.1456, 24.85, -3.5, 162.232, 599.595, 8.6, -41.91, 8339.1323, -73.90, -9.0, -2.8)), transpose(transpose(_GLF_FUZZED(mat4(8.0, 6.7, -7.0, -6.6, 49.97, -7038.1456, 24.85, -3.5, 162.232, 599.595, 8.6, -41.91, 8339.1323, -73.90, -9.0, -2.8))))) : transpose(mat4(injectionSwitch.y, 0.0, sin(0.0), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0, _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0 * (_GLF_IDENTITY(determinant(mat2(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), 0.0 + (determinant(mat2(0.0, 0.0, 0.0, 0.0)))))), 0.0), max(vec3(1.0, _GLF_IDENTITY(determinant(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), transpose(_GLF_IDENTITY(transpose(mat2(0.0, 0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(mat2(511.953, -1532.2663, -0.3, 4.9)) : transpose(mat2(0.0, 0.0, 0.0, 0.0))))))), 1.0 * (_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0 + (determinant(mat2(0.0, 0.0, 0.0, 0.0)))))), 0.0), _GLF_IDENTITY(vec3(1.0, _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(0.2)), float(determinant(mat2(0.0, 0.0, 0.0, 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0 + (determinant(mat2(0.0, 0.0, 0.0, 0.0)))))), 0.0), mix(vec3((vec3(1.0, _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0 * (_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0 + (determinant(mat2(0.0, 0.0, 0.0, 0.0)))))), 0.0))[0], (vec3(1.0, _GLF_IDENTITY(_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0 * (_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0 + (determinant(mat2(0.0, 0.0, 0.0, 0.0)))))), float(mat4(_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0 * (_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0 + (determinant(mat2(0.0, 0.0, 0.0, 0.0)))))), determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)), 0.0, 1.0, 1.0, determinant(mat2(0.0, cos(0.0), 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))), 0.0, 1.0, abs(1.0), abs(1.0), 1.0))), 0.0))[_GLF_IDENTITY(1, int(ivec2(1, 0)))], _GLF_FUZZED(1.3)), vec3(_GLF_FUZZED(-10.34), _GLF_FUZZED(-7172.4696), (vec3(1.0, _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0 * (_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0 + (determinant(mat2(0.0, 0.0, 0.0, 0.0)))))), 0.0))[2]), bvec3(false, false, true))))), max(vec3(1.0, _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0 * (_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)) + (determinant(mat2(0.0, 0.0, 0.0, 0.0)))))), 0.0), vec3(1.0, _GLF_IDENTITY(determinant(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), transpose(_GLF_IDENTITY(transpose(mat2(0.0, 0.0, 0.0, 0.0)), mat2(mat4(transpose(mat2(0.0, 0.0, 0.0, 0.0)))))))), 1.0 * (_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0 + (determinant(mat2(0.0, _GLF_IDENTITY(0.0, (0.0) / determinant(mat2(exp(0.0), 1.0, 0.0, sqrt(1.0)))), 0.0, 0.0)))))), 0.0))), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(51.27)), float(0.0), bool(true))))), dot(vec3(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0), vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), clamp(1.0, 1.0, 1.0))) / 1.0), 0.0, sqrt(0.0), 0.0, 0.0, 0.0, 1.0, log(1.0)))))) / _GLF_IDENTITY(mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4(1.2, 4.7, -9.7, 4.5, 85.02, 9.0, 2.4, 3011.9787, -47.08, -47.46, 3495.0672, -1128.6894, -463.217, -1.7, -79.49, 0.0)) : mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0, 0.0, 0.0) + (transpose(mat4(injectionSwitch.y, 0.0, sin(0.0), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0), vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(492.028))), max(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0, 1.0)), 1.0)), clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0, 1.0))) / 1.0), 0.0, sqrt(0.0), 0.0, 0.0, 0.0, 1.0, log(1.0)))))))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) : _GLF_FUZZED(-984.310)))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, determinant(mat4(0.0, 1.0, _GLF_IDENTITY(1.0, float(mat3x4(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0))), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 0.0, 0.0)) + (injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - length(vec2(0.0, 0.0)))))), float(_GLF_FUZZED(5.0)), bool(false))))), 0.0, sin(0.0), 0.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) / determinant(mat4(1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0, _GLF_IDENTITY(dot(vec3(1.0, determinant(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), transpose(_GLF_IDENTITY(transpose(mat2(0.0, 0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 1.0))), 0.0)), mat2(0.0, 0.0, 0.0, 0.0) + (transpose(mat2(0.0, 0.0, 0.0, 0.0))))))) + mat2(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-1.8)), bool(false))), 0.0))), 0.0), _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), vec3(mat3(vec3(1.0, 0.0, 0.0), _GLF_ONE(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(6.0)), bool(false))), 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x2(1.0, 0.0, abs(1.0), 0.0, 1.0, 0.0, 0.0, 0.0), mat4x2(mat4x3(mat4x2(1.0, 0.0, abs(1.0), 0.0, 1.0, 0.0, 0.0, 0.0)))))))), _GLF_IDENTITY(1.0, (1.0) / 1.0))), injectionSwitch.y), 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)))), dot(vec3(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, sqrt(0.0), 0.0, 0.0, 0.0, 1.0, log(1.0))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false) ? float(_GLF_IDENTITY(_GLF_IDENTITY(mat4(injectionSwitch.y, 0.0, sin(0.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, determinant(mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(max(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, sqrt(0.0), 1.0, 1.0)), min(float(vec4(0.0, sqrt(0.0), 1.0, 1.0)), float(vec4(0.0, sqrt(0.0), 1.0, 1.0))))), 0.0), max(max(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, sqrt(0.0), 1.0, 1.0)), min(float(vec4(0.0, sqrt(0.0), 1.0, 1.0)), float(vec4(0.0, sqrt(0.0), 1.0, 1.0))))), 0.0), _GLF_IDENTITY(max(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, sqrt(0.0), 1.0, 1.0)), min(float(vec4(0.0, sqrt(0.0), 1.0, 1.0)), float(vec4(0.0, sqrt(0.0), 1.0, 1.0))))), 0.0), (max(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, sqrt(0.0), 1.0, 1.0)), min(float(vec4(0.0, sqrt(0.0), 1.0, 1.0)), float(vec4(0.0, sqrt(0.0), 1.0, 1.0))))), 0.0)) + 0.0)))))), 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0), vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0), mat3(1.0) * (mat4x3(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)))), 1.0 * (float(_GLF_IDENTITY(mat4x3(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0), mat3(1.0) * (mat4x3(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0))))))), 1.0, 1.0))) / 1.0), 0.0, sqrt(0.0), 0.0, 0.0, 0.0, 1.0, log(1.0)), transpose(_GLF_IDENTITY(transpose(mat4(injectionSwitch.y, 0.0, sin(0.0), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, _GLF_IDENTITY(_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-98.28)), float(0.0), bool(true))))))), 0.0 + (_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-98.28)), float(0.0), bool(true))))))), 0.0 + (determinant(mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-98.28)), float(0.0), bool(true))))))))))), 1.0 * (_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0 + _GLF_IDENTITY((determinant(mat2(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-2.6) : 0.0)))), 0.0, 0.0, 0.0))), max((determinant(mat2(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0, 0.0, 0.0))), (determinant(mat2(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0, 0.0, 0.0)))))))), 0.0), max(vec3(1.0, _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0 * _GLF_IDENTITY((_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0 + (determinant(mat2(0.0, 0.0, 0.0, 0.0))))), mix(float((_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0 + (determinant(mat2(0.0, 0.0, 0.0, 0.0)))))), float(_GLF_FUZZED(float((16710 | -76612)))), bool(false)))), 0.0), vec3(1.0, _GLF_IDENTITY(_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0 * (_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0 + (determinant(mat2(0.0, 0.0, 0.0, 0.0)))))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0 * (_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0 + (determinant(mat2(0.0, 0.0, 0.0, 0.0)))))), min(_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0 * (_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0 + (determinant(mat2(0.0, 0.0, 0.0, 0.0)))))), _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0 * (_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0 + (determinant(mat2(0.0, 0.0, 0.0, 0.0))))))))), float(_GLF_FUZZED(4.2)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0))), vec3(1.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec3(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0), (vec3(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0)) * vec3(1.0, 1.0, 1.0)), exp(vec3(0.0, 0.0, 0.0)) * (vec3(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0))), _GLF_IDENTITY(vec3(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0), (vec3(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0)) / vec3(1.0, 1.0, 1.0)), vec3(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0))), vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), clamp(1.0, 1.0, 1.0))) / 1.0), 0.0, sqrt(0.0), 0.0, 0.0, 0.0, 1.0, log(1.0))), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (transpose(mat4(injectionSwitch.y, 0.0, sin(0.0), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0), vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0))) / 1.0), 0.0, sqrt(0.0), 0.0, 0.0, 0.0, 1.0, log(1.0))))))), (_GLF_IDENTITY(mat4(injectionSwitch.y, 0.0, sin(0.0), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, determinant(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, sqrt(0.0), 1.0, 1.0)), min(_GLF_IDENTITY(float(vec4(0.0, sqrt(0.0), 1.0, 1.0)), (float(vec4(0.0, sqrt(0.0), 1.0, 1.0))) - log(1.0)), float(vec4(0.0, sqrt(0.0), 1.0, 1.0))))), 0.0))), transpose(transpose(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, sqrt(0.0), 1.0, 1.0)), min(_GLF_IDENTITY(float(vec4(0.0, sqrt(0.0), 1.0, 1.0)), (float(vec4(0.0, sqrt(0.0), 1.0, 1.0))) - log(1.0)), float(vec4(0.0, sqrt(0.0), 1.0, 1.0))))), 0.0))), transpose(transpose(mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, sqrt(0.0), 1.0, 1.0)), min(_GLF_IDENTITY(float(vec4(0.0, sqrt(0.0), 1.0, 1.0)), (float(vec4(0.0, sqrt(0.0), 1.0, 1.0))) - log(1.0)), float(vec4(0.0, sqrt(0.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0))))), 0.0)))))))))), 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0), vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-3819.9937))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), clamp(1.0, 1.0, 1.0))) / 1.0), 0.0, sqrt(0.0), 0.0, _GLF_IDENTITY(0.0, float(mat3x4(0.0, tan(determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 0.0, exp(0.0), length(0.0), 0.0, 0.0, tan(0.0), 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0))), 0.0, 1.0, log(1.0)), transpose(_GLF_IDENTITY(_GLF_IDENTITY(transpose(mat4(injectionSwitch.y, 0.0, sin(0.0), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, _GLF_IDENTITY(determinant(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), (mat2(0.0, 0.0, 0.0, 0.0)) - mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), 1.0 * (_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0 + (determinant(mat2(0.0, 0.0, 0.0, 0.0)))))), 0.0), max(vec3(1.0, _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0 * (_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0 + (determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), 0.0, 0.0)))))), 0.0), vec3(1.0, _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0 * (_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0 + (determinant(mat2(0.0, 0.0, 0.0, 0.0)))))), 0.0))), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0), vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), clamp(1.0, 1.0, 1.0))) / 1.0), 0.0, sqrt(0.0), 0.0, 0.0, 0.0, 1.0, log(1.0))), mat4(1.0) * (_GLF_IDENTITY(transpose(mat4(injectionSwitch.y, 0.0, sin(0.0), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0 * (_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0 + (determinant(mat2(0.0, 0.0, 0.0, 0.0)))))), 0.0), max(vec3(1.0, _GLF_IDENTITY(determinant(_GLF_IDENTITY(mat2(0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-397.475))), 0.0), mat2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(mat2(0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-397.475))), 0.0), transpose(transpose(mat2(0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-397.475))), 0.0))))), _GLF_IDENTITY((mat4x3(_GLF_IDENTITY(mat2(0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-397.475))), 0.0), transpose(transpose(mat2(0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-397.475))), 0.0)))))) * mat4(1.0), mat4x3(mat4((mat4x3(_GLF_IDENTITY(mat2(0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-397.475))), 0.0), transpose(transpose(mat2(0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-397.475))), 0.0)))))) * mat4(1.0)))))))), 1.0 * (_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0 + (determinant(mat2(0.0, 0.0, 0.0, 0.0)))))), 0.0), vec3(1.0, _GLF_IDENTITY(determinant(mat2(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 1.0 * (_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0 + (determinant(mat2(0.0, 0.0, 0.0, 0.0)))))), 0.0))), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)))), dot(vec3(1.0, determinant(mat2(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(1.0, (1.0) - 0.0)), 0.0)), 0.0), vec3(1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 0.0)))) + 0.0), 0.0))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), clamp(1.0, 1.0, 1.0))) / 1.0), 0.0, _GLF_IDENTITY(sqrt(0.0), float(mat3(sqrt(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, cos(0.0)), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, cos(0.0)), vec4(1.0, 0.0, 0.0, 0.0)))))), 0.0, 0.0, 0.0, 1.0, log(1.0))), (_GLF_IDENTITY(transpose(mat4(injectionSwitch.y, 0.0, sin(_GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0 * (_GLF_IDENTITY(determinant(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), transpose(transpose(mat2(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))))), 0.0 + (determinant(mat2(0.0, 0.0, 0.0, 0.0)))))), 0.0), max(vec3(1.0, _GLF_IDENTITY(determinant(mat2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(_GLF_IDENTITY(2.8, mix(float(2.8), float(_GLF_FUZZED((- -394.701))), bool(false)))))))), 0.0, 0.0, 0.0)), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0 + (determinant(mat2(0.0, 0.0, 0.0, 0.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), (determinant(mat2(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED((- -0.4)))))), 0.0))) * 1.0), 0.0 + (determinant(mat2(0.0, 0.0, 0.0, 0.0))))) / 1.0))), 0.0), vec3(1.0, _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0 * (_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0 + (determinant(mat2(0.0, 0.0, 0.0, 0.0)))))), 0.0))), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(7.8) : 0.0)), 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(0.0), (true ? float(0.0) : _GLF_FUZZED(7.1))))))))), dot(vec3(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0), vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), clamp(1.0, 1.0, 1.0))) / 1.0, 0.0 + ((_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), clamp(1.0, 1.0, 1.0))) / 1.0))), 0.0, sqrt(0.0), 0.0, 0.0, 0.0, 1.0, log(1.0))), (false ? _GLF_IDENTITY(_GLF_FUZZED(mat4(8.0, 6.7, -7.0, -6.6, 49.97, -7038.1456, 24.85, -3.5, 162.232, 599.595, 8.6, -41.91, 8339.1323, -73.90, -9.0, -2.8)), transpose(transpose(_GLF_FUZZED(mat4(8.0, 6.7, -7.0, -6.6, 49.97, -7038.1456, 24.85, -3.5, 162.232, 599.595, 8.6, -41.91, 8339.1323, -73.90, -9.0, -2.8))))) : transpose(mat4(injectionSwitch.y, 0.0, sin(0.0), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0, _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0 * (_GLF_IDENTITY(determinant(mat2(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), 0.0 + (determinant(mat2(0.0, 0.0, 0.0, 0.0)))))), 0.0), max(vec3(1.0, _GLF_IDENTITY(_GLF_IDENTITY(determinant(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), transpose(_GLF_IDENTITY(transpose(mat2(0.0, 0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(mat2(511.953, -1532.2663, -0.3, 4.9)) : transpose(mat2(0.0, 0.0, 0.0, 0.0))))))), float(vec4(determinant(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), transpose(_GLF_IDENTITY(transpose(mat2(0.0, 0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(mat2(511.953, -1532.2663, -0.3, 4.9)) : transpose(mat2(0.0, 0.0, 0.0, 0.0))))))), 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), sin(0.0)))), 1.0 * (_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0 + (determinant(mat2(0.0, 0.0, 0.0, 0.0)))))), 0.0), _GLF_IDENTITY(vec3(1.0, _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(0.2)), float(_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0 + (_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(-70.70)), float(determinant(mat2(0.0, 0.0, 0.0, 0.0))), bool(true)))))), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y))))), 0.0 + (determinant(mat2(0.0, 0.0, 0.0, 0.0)))))), 0.0), mix(vec3((vec3(1.0, _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0 * (_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0 + (determinant(mat2(0.0, 0.0, 0.0, 0.0)))))), 0.0))[0], (_GLF_IDENTITY(vec3(1.0, _GLF_IDENTITY(_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0 * (_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0 + (determinant(mat2(0.0, 0.0, 0.0, 0.0)))))), float(mat4(_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0 * (_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0 + (determinant(mat2(0.0, 0.0, 0.0, 0.0)))))), determinant(_GLF_IDENTITY(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0), (mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, determinant(mat2(0.0, cos(0.0), 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))), 0.0, 1.0, abs(1.0), abs(1.0), 1.0))), 0.0), vec3(0.0, 0.0, 0.0) + (vec3(1.0, _GLF_IDENTITY(_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0 * (_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0 + (determinant(mat2(0.0, 0.0, 0.0, 0.0)))))), float(mat4(_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0 * (_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0 + (determinant(mat2(0.0, 0.0, 0.0, 0.0)))))), determinant(_GLF_IDENTITY(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0), (mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, determinant(mat2(0.0, cos(0.0), 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))), 0.0, 1.0, abs(1.0), abs(1.0), 1.0))), 0.0))))[_GLF_IDENTITY(1, int(ivec2(1, 0)))], _GLF_FUZZED(1.3)), vec3(_GLF_FUZZED(-10.34), _GLF_FUZZED(-7172.4696), (vec3(1.0, _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0 * (_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0 + _GLF_IDENTITY((determinant(mat2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-5.8)), bool(false))), 0.0, 0.0, 0.0))), (true ? (determinant(mat2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-5.8)), bool(false))), 0.0, 0.0, 0.0))) : _GLF_FUZZED(-315.320)))))), 0.0))[_GLF_IDENTITY(2, 0 ^ (2))]), bvec3(false, false, true))))), max(vec3(1.0, _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0 * (_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)) + (determinant(mat2(0.0, 0.0, 0.0, 0.0))))), mix(float(1.0 * (_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)) + (determinant(mat2(0.0, 0.0, 0.0, 0.0)))))), float(_GLF_FUZZED(-594.289)), bool(false)))), 0.0), vec3(1.0, _GLF_IDENTITY(determinant(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), transpose(_GLF_IDENTITY(transpose(mat2(0.0, 0.0, 0.0, 0.0)), mat2(mat4(transpose(mat2(0.0, 0.0, 0.0, 0.0)))))))), 1.0 * (_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0 + (determinant(mat2(0.0, _GLF_IDENTITY(0.0, (0.0) / determinant(mat2(exp(0.0), 1.0, 0.0, sqrt(1.0)))), 0.0, 0.0)))))), 0.0))), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(51.27)), float(0.0), bool(true))))), dot(vec3(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0), vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), clamp(1.0, 1.0, 1.0))) / 1.0), 0.0, sqrt(0.0), 0.0, 0.0, 0.0, 1.0, log(1.0)))))) / _GLF_IDENTITY(mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4(1.2, 4.7, -9.7, 4.5, 85.02, 9.0, 2.4, 3011.9787, -47.08, -47.46, 3495.0672, -1128.6894, -463.217, -1.7, -79.49, 0.0)) : mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0, 0.0, 0.0) + (transpose(mat4(injectionSwitch.y, 0.0, sin(0.0), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0), vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(492.028))), mix(float(_GLF_FUZZED(6.7)), float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(492.028)))), bool(true))), max(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(6.9)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0)), 1.0)), clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0, 1.0))) / 1.0), 0.0, sqrt(0.0), 0.0, 0.0, 0.0, 1.0, log(1.0)))))))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) : _GLF_FUZZED(-984.310)))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (! (false)) || false))))))) && true)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (! (false)) && true)), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (! (false)) && true))) && true)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_DEAD(false)))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_DEAD(false))))))), bool(bvec4(_GLF_IDENTITY(true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_DEAD(false)))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_DEAD(false))))))), (true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_DEAD(false)))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_DEAD(false)))))))) || false), false, false, true)))), true && (_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) || false)) || (_GLF_DEAD(false)))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_DEAD(false)))))))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 0.0, 0.0, abs(1.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0), (mat3(injectionSwitch, 0.0, 0.0, 0.0, abs(1.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))).x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, 0.0, log(1.0), 0.0, abs(1.0), 1.0, 0.0, 0.0, 1.0, 0.0)), mix(vec2(_GLF_FUZZED(-191.167), (vec2(mat3x4(injectionSwitch, 0.0, 0.0, log(1.0), 0.0, abs(1.0), 1.0, 0.0, 0.0, 1.0, 0.0)))[1]), vec2((vec2(mat3x4(injectionSwitch, 0.0, 0.0, log(1.0), 0.0, abs(1.0), 1.0, 0.0, 0.0, 1.0, 0.0)))[0], _GLF_FUZZED(-4.0)), bvec2(true, false)))).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, log(1.0), 0.0, abs(1.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - sqrt(0.0)), 0.0)), mix(vec2(_GLF_FUZZED(-191.167), (vec2(mat3x4(injectionSwitch, 0.0, 0.0, log(1.0), 0.0, abs(1.0), 1.0, 0.0, 0.0, 1.0, 0.0)))[1]), vec2((vec2(mat3x4(injectionSwitch, 0.0, 0.0, log(1.0), 0.0, abs(1.0), 1.0, 0.0, 0.0, 1.0, 0.0)))[0], _GLF_IDENTITY(_GLF_FUZZED(-4.0), mix(float(_GLF_FUZZED(-4.0)), float(_GLF_FUZZED(478.794)), bool(false)))), bvec2(true, false)))).y))))), true && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, 0.0, log(1.0), 0.0, abs(1.0), 1.0, 0.0, 0.0, 1.0, 0.0)), mix(vec2(_GLF_FUZZED(-191.167), (vec2(mat3x4(injectionSwitch, 0.0, 0.0, log(1.0), 0.0, abs(1.0), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(7.7)), float(1.0), bool(true))), 0.0, 0.0, 1.0, 0.0)))[1]), vec2((vec2(mat3x4(injectionSwitch, 0.0, 0.0, log(1.0), 0.0, abs(1.0), 1.0, 0.0, 0.0, 1.0, 0.0)))[_GLF_IDENTITY(0, max(0, 0))], _GLF_FUZZED(-4.0)), bvec2(true, false)))).y, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, 0.0, log(1.0), 0.0, abs(1.0), 1.0, 0.0, 0.0, 1.0, 0.0)), mix(vec2(_GLF_FUZZED(-191.167), (vec2(mat3x4(injectionSwitch, 0.0, 0.0, log(1.0), 0.0, abs(1.0), 1.0, 0.0, 0.0, 1.0, 0.0)))[1]), vec2((vec2(mat3x4(injectionSwitch, 0.0, 0.0, log(1.0), 0.0, abs(1.0), 1.0, 0.0, 0.0, 1.0, 0.0)))[_GLF_IDENTITY(0, max(0, 0))], _GLF_FUZZED(-4.0)), bvec2(true, false)))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, 0.0, log(1.0), 0.0, abs(1.0), 1.0, 0.0, 0.0, 1.0, 0.0)), mix(vec2(_GLF_FUZZED(-191.167), (vec2(mat3x4(injectionSwitch, 0.0, 0.0, log(1.0), 0.0, abs(1.0), 1.0, 0.0, 0.0, 1.0, 0.0)))[1]), vec2((_GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, 0.0, log(1.0), 0.0, abs(1.0), 1.0, 0.0, 0.0, 1.0, 0.0)), min(vec2(mat3x4(injectionSwitch, 0.0, 0.0, log(1.0), 0.0, abs(1.0), 1.0, 0.0, 0.0, 1.0, 0.0)), vec2(mat3x4(injectionSwitch, 0.0, 0.0, log(1.0), 0.0, abs(1.0), 1.0, 0.0, 0.0, 1.0, 0.0)))))[_GLF_IDENTITY(0, max(0, 0))], _GLF_FUZZED(-4.0)), bvec2(true, false)))).y, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-4.3) : _GLF_IDENTITY(0.0, max(0.0, 0.0)))), log(1.0), 0.0, abs(1.0), 1.0, 0.0, 0.0, 1.0, 0.0)), mix(vec2(_GLF_FUZZED(-191.167), (vec2(mat3x4(injectionSwitch, 0.0, 0.0, log(1.0), 0.0, abs(1.0), 1.0, 0.0, 0.0, 1.0, 0.0)))[1]), vec2((vec2(mat3x4(injectionSwitch, 0.0, 0.0, log(1.0), 0.0, abs(1.0), 1.0, 0.0, 0.0, 1.0, 0.0)))[_GLF_IDENTITY(0, max(0, 0))], _GLF_FUZZED(-4.0)), bvec2(true, false)))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, 0.0, log(1.0), 0.0, abs(1.0), 1.0, 0.0, 0.0, 1.0, 0.0)), mix(vec2(_GLF_FUZZED(-191.167), (vec2(mat3x4(injectionSwitch, 0.0, 0.0, log(1.0), 0.0, abs(1.0), 1.0, 0.0, 0.0, 1.0, 0.0)))[1]), vec2((vec2(mat3x4(injectionSwitch, 0.0, 0.0, log(1.0), 0.0, abs(1.0), 1.0, 0.0, 0.0, 1.0, 0.0)))[_GLF_IDENTITY(0, max(0, 0))], _GLF_FUZZED(-4.0)), bvec2(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) || false), true, true, true))), false)))).y, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, 0.0, log(1.0), 0.0, abs(1.0), 1.0, 0.0, 0.0, 1.0, 0.0)), mix(vec2(_GLF_FUZZED(-191.167), (vec2(mat3x4(injectionSwitch, 0.0, 0.0, log(1.0), 0.0, abs(1.0), 1.0, 0.0, 0.0, 1.0, 0.0)))[1]), vec2((vec2(mat3x4(injectionSwitch, 0.0, 0.0, log(1.0), 0.0, abs(1.0), 1.0, 0.0, 0.0, 1.0, 0.0)))[_GLF_IDENTITY(0, max(0, 0))], _GLF_FUZZED(-4.0)), bvec2(true, false)))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, 0.0, log(1.0), 0.0, abs(1.0), 1.0, 0.0, 0.0, 1.0, 0.0)), mix(vec2(_GLF_FUZZED(-191.167), (vec2(mat3x4(injectionSwitch, 0.0, 0.0, log(1.0), 0.0, abs(1.0), 1.0, 0.0, 0.0, 1.0, 0.0)))[1]), vec2((vec2(mat3x4(injectionSwitch, 0.0, 0.0, log(1.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), abs(1.0), 1.0, 0.0, 0.0, 1.0, 0.0)))[_GLF_IDENTITY(0, max(0, 0))], _GLF_FUZZED(-4.0)), bvec2(true, false)))).y)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, 0.0, log(1.0), 0.0, abs(1.0), 1.0, 0.0, 0.0, 1.0, 0.0)), mix(vec2(_GLF_FUZZED(-191.167), (vec2(mat3x4(injectionSwitch, 0.0, 0.0, log(1.0), 0.0, abs(1.0), 1.0, 0.0, 0.0, 1.0, 0.0)))[1]), vec2((vec2(mat3x4(injectionSwitch, 0.0, 0.0, log(1.0), 0.0, abs(1.0), 1.0, 0.0, 0.0, 1.0, 0.0)))[_GLF_IDENTITY(0, max(0, 0))], _GLF_FUZZED(-4.0)), bvec2(true, false)))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, 0.0, log(1.0), 0.0, abs(1.0), 1.0, 0.0, 0.0, 1.0, 0.0)), mix(vec2(_GLF_FUZZED(-191.167), (vec2(mat3x4(injectionSwitch, 0.0, 0.0, log(1.0), 0.0, abs(1.0), 1.0, 0.0, 0.0, 1.0, 0.0)))[1]), vec2((vec2(mat3x4(injectionSwitch, 0.0, 0.0, log(1.0), 0.0, abs(1.0), 1.0, 0.0, 0.0, 1.0, 0.0)))[_GLF_IDENTITY(0, max(0, 0))], _GLF_FUZZED(-4.0)), bvec2(true, false))))) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y))), false || ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, 0.0, log(1.0), 0.0, abs(1.0), 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(1.0, (1.0) - sqrt(0.0)), 0.0)), mat2(1.0) * (vec2(mat3x4(injectionSwitch, 0.0, 0.0, log(1.0), 0.0, abs(1.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - sqrt(0.0)), 0.0)))), mix(vec2(_GLF_FUZZED(-191.167), (vec2(mat3x4(injectionSwitch, 0.0, 0.0, _GLF_IDENTITY(log(1.0), min(log(1.0), log(1.0))), 0.0, abs(1.0), 1.0, 0.0, 0.0, 1.0, 0.0)))[1]), vec2((vec2(mat3x4(injectionSwitch, 0.0, 0.0, log(1.0), 0.0, abs(1.0), 1.0, 0.0, 0.0, 1.0, 0.0)))[0], _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-4.0, (true ? _GLF_IDENTITY(-4.0, max(-4.0, -4.0)) : _GLF_FUZZED(53.34)))), mix(float(_GLF_FUZZED(-4.0)), float(_GLF_FUZZED(478.794)), bool(false)))), bvec2(true, false)))).y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, 0.0, log(1.0), 0.0, abs(1.0), 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(1.0, (1.0) - sqrt(0.0)), 0.0)), mat2(1.0) * (vec2(mat3x4(injectionSwitch, 0.0, 0.0, log(1.0), 0.0, abs(1.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - sqrt(0.0)), 0.0)))), mix(vec2(_GLF_FUZZED(-191.167), (vec2(mat3x4(injectionSwitch, 0.0, 0.0, _GLF_IDENTITY(log(1.0), min(log(1.0), log(1.0))), 0.0, abs(1.0), 1.0, 0.0, 0.0, 1.0, 0.0)))[1]), vec2((vec2(mat3x4(injectionSwitch, 0.0, 0.0, log(1.0), 0.0, abs(1.0), 1.0, 0.0, 0.0, 1.0, 0.0)))[0], _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-4.0, (true ? _GLF_IDENTITY(-4.0, max(-4.0, -4.0)) : _GLF_FUZZED(53.34)))), mix(float(_GLF_FUZZED(-4.0)), float(_GLF_FUZZED(478.794)), bool(false)))), bvec2(true, false)))).y) * 1.0)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(float(injectionSwitch.y)), (_GLF_IDENTITY(float(float(injectionSwitch.y)), (float(float(injectionSwitch.y))) / 1.0)) * 1.0), determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)) + (float(float(injectionSwitch.y)))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) && true)), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) && true))))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) && _GLF_IDENTITY(true, ! (! (true))))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) && true)))))))) && true))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((gl_WorkGroupSize.x), ~ (_GLF_IDENTITY(~ ((gl_WorkGroupSize.x)), (_GLF_IDENTITY(~ ((gl_WorkGroupSize.x)), clamp(~ ((gl_WorkGroupSize.x)), ~ ((gl_WorkGroupSize.x)), ~ ((gl_WorkGroupSize.x))))) >> 0u))) ^ 0u)) / (1u & 1u));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, clamp(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)).x, gl_WorkGroupID.x));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.3), _GLF_FUZZED(700.602)), vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(3.2) : (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(clamp(workgroup_size, workgroup_size, _GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size))), (clamp(workgroup_size, workgroup_size, _GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)))) << 0u)) * workgroup_id, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (true ? _GLF_IDENTITY(uint(6u), uint(6u)) : _GLF_FUZZED(8682u)))) ^ (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(clamp(workgroup_size, workgroup_size, _GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size))), (clamp(workgroup_size, workgroup_size, _GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)))) << 0u)) * workgroup_id));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)), (bool(false)) && true)), false)), bool(bvec3(bool(bvec2(bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)), false)), true, false)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))) && true), false || (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false))), false, true)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))))), false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true), false))), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false)))) && true), false, true)), true, false)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) * 1u) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 atomicStore(buf[virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, min(1, 1)))))), (false ? _GLF_FUZZED(-64790) : 1))), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(subgroup_local_id + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, min(1, 1)))) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) && true), true))), _GLF_IDENTITY((false) || false, _GLF_IDENTITY(bool(bvec2((false) || false, true)), (bool(bvec2((false) || false, true))) && true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))))) && true), true))), _GLF_IDENTITY((false) || false, _GLF_IDENTITY(bool(bvec2((false) || false, true)), (bool(bvec2((false) || false, true))) && true)))) || _GLF_IDENTITY(false, ! (! (false))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
      }
     barrier();
    }
   int i = _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-93318)))) | 0), 0 + (0));
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)) : _GLF_FUZZED(injectionSwitch)), max(_GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)) : _GLF_FUZZED(injectionSwitch)), ((true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)) : _GLF_FUZZED(injectionSwitch))) / vec2(1.0, 1.0)), (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)) : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)) : _GLF_FUZZED(injectionSwitch)), max(_GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)) : _GLF_FUZZED(injectionSwitch)), ((true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)) : _GLF_FUZZED(injectionSwitch))) / vec2(1.0, 1.0)), (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)) : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y)) && true)))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), false, false), bvec3(bvec3(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), false, false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
      barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) - 0.0)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, cos(0.0), 1.0, sin(0.0), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 1.0, abs(0.0)), transpose(transpose(mat4x3(injectionSwitch.x, cos(0.0), 1.0, sin(0.0), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, float(mat3(_GLF_IDENTITY(0.0, (0.0) / abs(1.0)), 0.0, 1.0, log(1.0), determinant(mat2(0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 0.0)), determinant(mat3(tan(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, log(1.0), 0.0, 0.0)), exp(0.0), 0.0, 1.0))), 0.0, 0.0, 1.0, abs(0.0))))))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), max(uint(2), uint(2))), _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) << 0))), 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, _GLF_IDENTITY(true, bool(bool(true))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, length(vec2(0.0, 0.0)), tan(0.0), 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(92.79) : injectionSwitch.x)), injectionSwitch.x), (clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 0.0, length(vec2(0.0, 0.0)), tan(0.0), 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(92.79) : injectionSwitch.x)), injectionSwitch.x)) * round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), 1.0 * (clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((false ? _GLF_FUZZED(30.05) : injectionSwitch.x), max((false ? _GLF_FUZZED(30.05) : injectionSwitch.x), (false ? _GLF_FUZZED(30.05) : injectionSwitch.x)))))), float(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, length(vec2(0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)).x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) + 0)) | (1 ^ 1))], injectionSwitch[1])).x > injectionSwitch.y)))) ? _GLF_FUZZED(7849.7464) : 0.0)))), tan(0.0), 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(92.79) : injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x) - 0.0, (false ? _GLF_FUZZED(7902.5293) : (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x) - _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) * 1.0)) - sin(0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, determinant(_GLF_IDENTITY(mat3(tan(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (mat3(tan(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0), transpose(transpose(mat3x2(_GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, (0.0) * 1.0)), (false ? _GLF_FUZZED(9.7) : (_GLF_IDENTITY(0.0, (0.0) * 1.0)))) - sin(0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, determinant(mat3(tan(0.0), 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0))))), mix(float(_GLF_FUZZED(0.2)), float(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) * 1.0, clamp((0.0) * 1.0, _GLF_IDENTITY((0.0) * 1.0, ((0.0) * 1.0) / 1.0), (0.0) * 1.0)))) - sin(0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, determinant(mat3(tan(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0), transpose(transpose(mat3x2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) * 1.0)) - sin(0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, determinant(mat3(tan(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0)))))), _GLF_IDENTITY(bool(true), (bool(true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))) > injectionSwitch.y), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / sqrt(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, length(vec2(0.0, 0.0)), _GLF_IDENTITY(tan(0.0), min(tan(0.0), _GLF_IDENTITY(tan(0.0), (true ? tan(0.0) : _GLF_FUZZED(-568.952))))), 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(92.79) : injectionSwitch.x)), injectionSwitch.x), _GLF_IDENTITY((clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, length(vec2(0.0, 0.0)), tan(0.0), 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(92.79) : injectionSwitch.x)), injectionSwitch.x)) * round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), float(_GLF_IDENTITY(mat4((clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, length(vec2(0.0, 0.0)), tan(0.0), 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(92.79) : injectionSwitch.x)), injectionSwitch.x)) * round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, abs(1.0), 1.0, 1.0, 1.0, determinant(mat4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0), sin(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0), (mat4((clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, length(vec2(0.0, 0.0)), tan(0.0), 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(92.79) : injectionSwitch.x)), injectionSwitch.x)) * round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, abs(1.0), 1.0, 1.0, 1.0, determinant(mat4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0), sin(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)) * mat4(1.0))))), 1.0 * (clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(30.05) : injectionSwitch.x)))), float(mat4x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, length(vec2(0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))), bool(bool(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))))))))) ? _GLF_FUZZED(7849.7464) : 0.0)))), tan(0.0), 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(92.79) : injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x) - 0.0, (false ? _GLF_FUZZED(7902.5293) : (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x) - _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) * 1.0)) - sin(0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, determinant(mat3(tan(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0), transpose(transpose(mat3x2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) * 1.0)) - sin(0.0)), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))), injectionSwitch)).x), 1.0, 1.0, determinant(mat3(tan(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0))))), mix(float(_GLF_FUZZED(0.2)), float(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), 0.0 + ((0.0))) * 1.0)) - sin(0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, determinant(mat3(tan(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0), transpose(transpose(mat3x2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) * 1.0)) - sin(0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, determinant(_GLF_IDENTITY(mat3(tan(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 0.0), (false ? _GLF_FUZZED(mat3(-333.302, -6.6, -7217.9926, -53.03, -162.356, 8.0, -6.9, -7.1, 45.69)) : mat3(tan(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 0.0)))), 1.0)))))), bool(true))))))))))) > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         return;
        }
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
        barrier();
       barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), true && (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))), bool(bvec4(_GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), true && (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))), true, true, false)))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
