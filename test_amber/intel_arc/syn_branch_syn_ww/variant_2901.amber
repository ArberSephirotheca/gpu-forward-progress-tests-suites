#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, false || (false)) || (false))), true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false || (false), false || (false || (false))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false || (false), false || (false || (false))), false, false))))))) || (false))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
      }
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))), true)), bool(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)))), false, true))))))), _GLF_IDENTITY(true, ! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)), true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)), true))), false || (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)), true)))))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec4(false, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)), max(gl_WorkGroupSize, gl_WorkGroupSize)), _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3(0u, 0u, 0u))) ^ (gl_WorkGroupSize)))).x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), 0u + (workgroup_size)) * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, (true ? _GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (true ? _GLF_FUZZED(subgroup_id) : _GLF_FUZZED(33115u))))) + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | 0u)), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u))), workgroup_base)) + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), 0u | (((_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(usubBorrow(uvec2(58184u, 141036u)[0], virtual_gid, workgroup_id)) : _GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1, subgroup_local_id + 1, subgroup_local_id + 1))))) % subgroup_size))) | 0u))) + _GLF_IDENTITY(0u, min(0u, 0u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) / (1u & 1u)), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u))) + 1) % subgroup_size), 0u | (((subgroup_local_id + 1) % subgroup_size))) | 0u))) + 0u, (true ? (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) ^ 0u))), uint(uvec3(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) ^ 0u))), _GLF_IDENTITY(0u, (0u << _GLF_IDENTITY(uint(1u), uint(1u))) | (_GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ (0u)))), 1u))) * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, 0u, 1u))), subgroup_size, subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size) | (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) >> 0u), (subgroup_local_id + 1) % subgroup_size))), 0u | (((subgroup_local_id + 1) % subgroup_size) | (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))))), ((subgroup_local_id + 1) % subgroup_size) >> 0u), (subgroup_local_id + 1) % subgroup_size))))))), 0u | (((subgroup_local_id + 1) % subgroup_size))) | 0u))) + 0u : _GLF_FUZZED(virtual_gid))), ((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u) + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), 1u * (((subgroup_local_id + 1) % subgroup_size))), 0u | _GLF_IDENTITY((((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size)), (_GLF_IDENTITY((((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size)), ((((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size))) | 0u)) * 1u)) | _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size)))))) + 0u) << 0u)) * uint(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), 0u | (((subgroup_local_id + 1) % subgroup_size))) | 0u))), max(_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), 0u | (((subgroup_local_id + 1) % subgroup_size))) | 0u))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u)) / 1u) + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(0u, (0u) | 0u) | (((subgroup_local_id + 1) % subgroup_size))) | 0u))), ~ (~ ((workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), 0u | (((subgroup_local_id + 1) % subgroup_size))) | 0u)))))))), _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), 0u | (((subgroup_local_id + 1) % subgroup_size))) | _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 1u), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 1u), (uvec3(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 1u)) | (uvec3(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 1u)))))), 0u ^ (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 1u), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 1u), (uvec3(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 1u)) | (uvec3(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 1u)))))))))))), clamp((workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) % subgroup_size), 0u | (((subgroup_local_id + 1) % subgroup_size))) | 0u))), (workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), 0u | (((subgroup_local_id + 1) % subgroup_size))) | 0u))), (workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), 0u | (((subgroup_local_id + 1) % subgroup_size))) | 0u))))))) + 0u, ((workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), 0u | (((_GLF_IDENTITY(subgroup_local_id + 1, (true ? _GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), subgroup_local_id, subgroup_local_id)))) + 1 : _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)))))) % subgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), 0u | (((subgroup_local_id + 1) % subgroup_size))), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), 0u | (((subgroup_local_id + 1) % subgroup_size)))) << 0u)) | 0u) | 0u)), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), 0u | (((_GLF_IDENTITY(subgroup_local_id + 1, (true ? _GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), subgroup_local_id, subgroup_local_id)))) + 1 : _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)))))) % subgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), 0u | (((subgroup_local_id + 1) % subgroup_size))), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), 0u | (((subgroup_local_id + 1) % subgroup_size)))) << 0u)) | 0u) | 0u)), ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), 0u | (((_GLF_IDENTITY(subgroup_local_id + 1, (true ? _GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), subgroup_local_id, subgroup_local_id)))) + 1 : _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)))))) % subgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), 0u | (((subgroup_local_id + 1) % subgroup_size))), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), 0u | (((subgroup_local_id + 1) % subgroup_size)))) << 0u)) | 0u) | 0u))) ^ 0u)) * 1u)) + 0u) << 0u)) * uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), ~ (~ ((_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size))) | (subgroup_id * subgroup_size)) + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), 0u | (((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((true ? subgroup_size : _GLF_FUZZED(workgroup_size)), ~ (~ ((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))) ? subgroup_size : _GLF_FUZZED(workgroup_size))))))))))) | 0u, uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), 0u | (((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((true ? subgroup_size : _GLF_FUZZED(workgroup_size)), ~ (~ ((true ? subgroup_size : _GLF_FUZZED(workgroup_size))))))))))) | 0u, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), 0u | (((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((true ? subgroup_size : _GLF_FUZZED(workgroup_size)), ~ (~ ((true ? subgroup_size : _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (workgroup_size) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))))))) | 0u, (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), 0u | (((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((true ? subgroup_size : _GLF_FUZZED(workgroup_size)), ~ (~ ((true ? subgroup_size : _GLF_FUZZED(workgroup_size))))))))))) | 0u) / 1u))))))))) + _GLF_IDENTITY(0u, (0u) >> 0u), ((workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1) % subgroup_size, _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), 0u | ((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))) % subgroup_size))) | 0u))) + 0u) << 0u)) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))) / 1u)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))), true, false))))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false))), (_GLF_DEAD(false)) && true)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(4, int(ivec4(_GLF_IDENTITY(4, clamp(4, 4, 4)), 1, (0 | 1), 1))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))))), false, false, true)))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   int i = _GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y)));
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(~ (next_virtual_gid), (_GLF_IDENTITY(~ (next_virtual_gid), clamp(~ (next_virtual_gid), ~ (next_virtual_gid), _GLF_IDENTITY(~ (next_virtual_gid), clamp(~ (next_virtual_gid), ~ (next_virtual_gid), ~ (next_virtual_gid)))))) | 0u)))], _GLF_IDENTITY(uint(_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(2, (2) >> 0), _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), max(_GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0, min(0, 0))), max(_GLF_IDENTITY((_GLF_IDENTITY(0, min(0, 0))), ((_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) ^ 0), 0)))) / 1), (_GLF_IDENTITY(0, min(0, 0))))) ^ 0, _GLF_IDENTITY(int(int((_GLF_IDENTITY(0, min(0, 0))) ^ 0)), (int(int((_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), (_GLF_IDENTITY(0, min(0, 0))) + 0), _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), min(_GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(0, min(0, 0))))))) ^ 0))) / 1))))))), ((_GLF_IDENTITY(36324, (36324) | (36324)) & 0) | 1)), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) - 0), (_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec4(2, 0, 1, _GLF_IDENTITY(0, ~ (~ (0)))), clamp(ivec4(2, 0, 1, _GLF_IDENTITY(0, ~ (~ (0)))), _GLF_IDENTITY(ivec4(2, 0, 1, _GLF_IDENTITY(0, ~ (~ (0)))), (ivec4(2, 0, 1, _GLF_IDENTITY(0, ~ (~ (0))))) ^ ivec4(0, 0, 0, 0)), ivec4(2, 0, 1, _GLF_IDENTITY(0, ~ (~ (0))))))))) | 0)) >> 0), _GLF_IDENTITY(0, _GLF_IDENTITY(max(0, _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, min(0, 0)), 1, 1), ~ (~ (ivec3(_GLF_IDENTITY(0, min(0, 0)), 1, 1)))), (false ? _GLF_FUZZED(ivec3(6755, 34879, 99305)) : ivec3(_GLF_IDENTITY(0, min(0, 0)), 1, 1)))))), (max(0, _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), (_GLF_IDENTITY(0, min(0, 0))) / int(_GLF_ONE(1.0, injectionSwitch.y))))) * 1)), ((_GLF_IDENTITY(36324, (true ? _GLF_IDENTITY(36324, _GLF_IDENTITY((36324) | (36324), _GLF_IDENTITY(~ (~ ((36324) | (_GLF_IDENTITY(36324, _GLF_IDENTITY(int(int(_GLF_IDENTITY(36324, max(_GLF_IDENTITY(36324, min(36324, 36324)), 36324)))), 0 ^ (int(int(_GLF_IDENTITY(36324, max(_GLF_IDENTITY(36324, min(36324, 36324)), 36324)))))))))), (~ (~ ((36324) | (_GLF_IDENTITY(36324, _GLF_IDENTITY(int(int(_GLF_IDENTITY(36324, max(_GLF_IDENTITY(36324, min(36324, 36324)), 36324)))), 0 ^ (int(int(_GLF_IDENTITY(36324, max(_GLF_IDENTITY(36324, min(36324, 36324)), 36324))))))))))) | (~ (~ ((36324) | (_GLF_IDENTITY(36324, _GLF_IDENTITY(int(int(_GLF_IDENTITY(36324, max(_GLF_IDENTITY(36324, min(36324, 36324)), 36324)))), 0 ^ (int(int(_GLF_IDENTITY(36324, max(_GLF_IDENTITY(36324, min(36324, 36324)), 36324)))))))))))))) : _GLF_FUZZED(findMSB(i)))) & 0) | 1))))))), (_GLF_IDENTITY(uint(2), _GLF_IDENTITY(1u * (_GLF_IDENTITY(uint(2), uint(uvec3(_GLF_IDENTITY(uint(_GLF_IDENTITY(2, (2) - 0)), _GLF_IDENTITY((uint(2)), _GLF_IDENTITY(_GLF_IDENTITY(((uint(2))), (false ? _GLF_FUZZED(uaddCarry((num_workgroup), 30025u, workgroup_base)) : ((uint(2))))) | (_GLF_IDENTITY((uint(_GLF_IDENTITY(2, (2) * 1))), ((uint(_GLF_IDENTITY(2, (2) * 1)))) * 1u)), (_GLF_IDENTITY(((uint(2))), (false ? _GLF_FUZZED(uaddCarry((num_workgroup), 30025u, workgroup_base)) : ((uint(2))))) | (_GLF_IDENTITY((uint(_GLF_IDENTITY(2, (2) * 1))), ((uint(_GLF_IDENTITY(2, (2) * 1)))) * 1u))) >> 0u)) / 1u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))), _GLF_IDENTITY((false ? _GLF_FUZZED(max(num_workgroup, workgroup_size)) : _GLF_IDENTITY(1u * (_GLF_IDENTITY(uint(2), uint(uvec3(_GLF_IDENTITY(uint(2), _GLF_IDENTITY((uint(2)), ~ (~ ((uint(2))))) / 1u), 0u, uint(_GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0)), (true ? 1.0 : _GLF_FUZZED(4600.6266))), injectionSwitch.y)))))), (1u * (_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (uint(2)) | (uint(2))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(2), (uint(2)) / _GLF_IDENTITY(1u, (1u) / 1u)), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec3(_GLF_IDENTITY(uint(2), (_GLF_IDENTITY(uint(2), clamp(uint(2), _GLF_IDENTITY(uint(2), 0u ^ (uint(2))), uint(2)))) / 1u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(2), (uint(2)) / 1u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec3(_GLF_IDENTITY(uint(2), (uint(2)) / 1u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) | (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (uint(2)) / 1u), clamp(_GLF_IDENTITY(uint(2), (uint(2)) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(uint(2), (uint(2)) / 1u), (_GLF_IDENTITY(uint(2), (uint(2)) / 1u)) | 0u), _GLF_IDENTITY(uint(2), (uint(2)) / 1u))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))))))) * 1u)), 0u ^ (_GLF_IDENTITY((false ? _GLF_FUZZED(max(num_workgroup, workgroup_size)) : _GLF_IDENTITY(1u * (_GLF_IDENTITY(uint(2), uint(uvec3(_GLF_IDENTITY(uint(2), _GLF_IDENTITY((uint(2)), ~ (~ ((uint(2))))) / 1u), 0u, uint(_GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0)), (true ? 1.0 : _GLF_FUZZED(4600.6266))), injectionSwitch.y)))))), (1u * (_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (uint(2)) | (uint(2))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(2), (uint(2)) / _GLF_IDENTITY(1u, (1u) / 1u)), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec3(_GLF_IDENTITY(uint(2), (_GLF_IDENTITY(uint(2), clamp(uint(2), _GLF_IDENTITY(uint(2), 0u ^ (uint(2))), uint(2)))) / 1u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(2), (uint(2)) / 1u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec3(_GLF_IDENTITY(uint(2), (uint(2)) / 1u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) | (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (uint(2)) / 1u), clamp(_GLF_IDENTITY(uint(2), (uint(2)) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(uint(2), (uint(2)) / 1u), (_GLF_IDENTITY(uint(2), (uint(2)) / 1u)) | 0u), _GLF_IDENTITY(uint(2), (uint(2)) / 1u))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))))))) * 1u)), min((false ? _GLF_FUZZED(max(num_workgroup, workgroup_size)) : _GLF_IDENTITY(1u * (_GLF_IDENTITY(uint(2), uint(uvec3(_GLF_IDENTITY(uint(2), _GLF_IDENTITY((uint(2)), ~ (~ ((uint(2))))) / 1u), 0u, uint(_GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0)), (true ? 1.0 : _GLF_FUZZED(4600.6266))), injectionSwitch.y)))))), (1u * (_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (uint(2)) | (uint(2))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(2), (uint(2)) / _GLF_IDENTITY(1u, (1u) / 1u)), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec3(_GLF_IDENTITY(uint(2), (_GLF_IDENTITY(uint(2), clamp(uint(2), _GLF_IDENTITY(uint(2), 0u ^ (uint(2))), uint(2)))) / 1u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(2), (uint(2)) / 1u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec3(_GLF_IDENTITY(uint(2), (uint(2)) / 1u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) | (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (uint(2)) / 1u), clamp(_GLF_IDENTITY(uint(2), (uint(2)) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(uint(2), (uint(2)) / 1u), (_GLF_IDENTITY(uint(2), (uint(2)) / 1u)) | 0u), _GLF_IDENTITY(uint(2), (uint(2)) / 1u))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))))))) * 1u)), (false ? _GLF_FUZZED(max(num_workgroup, workgroup_size)) : _GLF_IDENTITY(1u * (_GLF_IDENTITY(uint(2), uint(uvec3(_GLF_IDENTITY(uint(2), _GLF_IDENTITY((uint(2)), ~ (~ ((uint(2))))) / 1u), 0u, uint(_GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0)), (true ? 1.0 : _GLF_FUZZED(4600.6266))), injectionSwitch.y)))))), (1u * (_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (uint(2)) | (uint(2))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(2), (uint(2)) / _GLF_IDENTITY(1u, (1u) / 1u)), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec3(_GLF_IDENTITY(uint(2), (_GLF_IDENTITY(uint(2), clamp(uint(2), _GLF_IDENTITY(uint(2), 0u ^ (uint(2))), uint(2)))) / 1u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(2), (uint(2)) / 1u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec3(_GLF_IDENTITY(uint(2), (uint(2)) / 1u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) | (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (uint(2)) / 1u), clamp(_GLF_IDENTITY(uint(2), (uint(2)) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(uint(2), (uint(2)) / 1u), (_GLF_IDENTITY(uint(2), (uint(2)) / 1u)) | 0u), _GLF_IDENTITY(uint(2), (uint(2)) / 1u))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))))))) * 1u))))))))) / uint(_GLF_ONE(1.0, injectionSwitch.y))), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) && true)))
      return;
     return;
    }
   atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (4) | (4)))), 64, _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)) | (4), 0 ^ (_GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), ((_GLF_IDENTITY(4, (4) / 1))) | ((_GLF_IDENTITY(4, (4) / 1)))) | (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, 4, 4))) >> 0))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / 1)) | (4)) : _GLF_FUZZED(-20165)), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (true) || false) ? _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / 1)) | (4)) : _GLF_FUZZED(-20165)), ((_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (true) || false) ? _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / 1)) | (4)) : _GLF_FUZZED(-20165))) >> 0), (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / 1)) | (4)) : _GLF_FUZZED(-20165)))), (_GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / 1)) | (4)) : _GLF_FUZZED(-20165)), min((_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (true) || false) ? _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / 1)) | (4)) : _GLF_FUZZED(-20165)), (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / 1)) | (4)) : _GLF_FUZZED(-20165))))) | _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(int(4)))) >> int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(4, (4) / 1)) | (4)) : _GLF_FUZZED(-20165)), min((_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (true) || false) ? _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / 1)) | (4)) : _GLF_FUZZED(-20165)), (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(true, (true) || false)) || false) ? _GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY((4) / 1, max((4) / 1, (4) / 1)))) | (4)) : _GLF_FUZZED(-20165))))), min((_GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(int(4)))) >> int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(4, (4) / 1)) | (4)) : _GLF_FUZZED(-20165)), min((_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (true) || false) ? _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / 1)) | (4)) : _GLF_FUZZED(-20165)), (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(true, (true) || false)) || false) ? _GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY((4) / 1, max((4) / 1, (4) / 1)))) | (4)) : _GLF_FUZZED(-20165))))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(int(4)))) >> int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(4, (4) / 1)) | (4)) : _GLF_FUZZED(-20165)), min((_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (true) || false) ? _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / 1)) | (4)) : _GLF_FUZZED(-20165)), (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(true, (true) || false)) || false) ? _GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY((4) / 1, max((4) / 1, (4) / 1)))) | (4)) : _GLF_FUZZED(-20165))))), max((_GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(int(4)))) >> int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(4, (4) / 1)) | (4)) : _GLF_FUZZED(-20165)), min((_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (true) || false) ? _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / 1)) | (4)) : _GLF_FUZZED(-20165)), (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(true, (true) || false)) || false) ? _GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY((4) / 1, max((4) / 1, (4) / 1)))) | (4)) : _GLF_FUZZED(-20165))))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(int(4)))) >> int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(4, (4) / 1)) | (4)) : _GLF_FUZZED(-20165)), min((_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (true) || false) ? _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / 1)) | (4)) : _GLF_FUZZED(-20165)), (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(true, (true) || false)) || false) ? _GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY((4) / 1, max((4) / 1, (4) / 1)))) | (4)) : _GLF_FUZZED(-20165))))), ((_GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(int(4)))) >> int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(4, (4) / 1)) | (4)) : _GLF_FUZZED(-20165)), min((_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (true) || false) ? _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / 1)) | (4)) : _GLF_FUZZED(-20165)), (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(true, (true) || false)) || false) ? _GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY((4) / 1, max((4) / 1, (4) / 1)))) | (4)) : _GLF_FUZZED(-20165)))))) + 0))))))));
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(false, _GLF_IDENTITY(false, ! (! (false))), true)))) || false)) || false)), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, true)))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) || false)))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, bool(bvec2(true, false)))), bvec2(bvec4(bvec2(false, true), false, false)))))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).y))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
